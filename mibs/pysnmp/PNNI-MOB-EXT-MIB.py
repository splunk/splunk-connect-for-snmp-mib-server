#
# PySNMP MIB module PNNI-MOB-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PNNI-MOB-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:32:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
pnniNodeIndex, pnniIfEntry, PnniAtmAddr, PnniNodeIndex, pnniNodeEntry, PnniNodeId, PnniLevel, PnniPeerGroupId = mibBuilder.importSymbols("PNNI-MIB", "pnniNodeIndex", "pnniIfEntry", "PnniAtmAddr", "PnniNodeIndex", "pnniNodeEntry", "PnniNodeId", "PnniLevel", "PnniPeerGroupId")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, IpAddress, NotificationType, ObjectIdentity, Unsigned32, MibIdentifier, Bits, enterprises, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "IpAddress", "NotificationType", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Bits", "enterprises", "Integer32", "iso")
TruthValue, DisplayString, TimeStamp, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TimeStamp", "TextualConvention")
pnniMobExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 353, 5, 4, 2))
pnniMobExtMIB.setRevisions(('1999-02-12 00:00',))
if mibBuilder.loadTexts: pnniMobExtMIB.setLastUpdated('9902120000Z')
if mibBuilder.loadTexts: pnniMobExtMIB.setOrganization('The ATM Forum')
atmForum = MibIdentifier((1, 3, 6, 1, 4, 1, 353))
atmForumNetworkManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5))
atmfPnni = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4))
pnniMobExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1))
class PnniOnhlIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

pnniMobExtBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 1))
pnniMobExtVersion = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsupported", 1), ("version1point0", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMobExtVersion.setStatus('current')
pnniMobileSwitchGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2))
pnniMSMobileIfTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 1), )
if mibBuilder.loadTexts: pnniMSMobileIfTable.setStatus('current')
pnniMSMobileIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 1, 1), )
pnniIfEntry.registerAugmentions(("PNNI-MOB-EXT-MIB", "pnniMSMobileIfEntry"))
pnniMSMobileIfEntry.setIndexNames(*pnniIfEntry.getIndexNames())
if mibBuilder.loadTexts: pnniMSMobileIfEntry.setStatus('current')
pnniIfMobilityEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfMobilityEnabled.setStatus('current')
pnniMSMobileLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 2))
pnniMobileLgnIndex = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 2, 1), PnniNodeIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniMobileLgnIndex.setStatus('current')
pnniMobileLgnMinLevel = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 2, 2), PnniLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMobileLgnMinLevel.setStatus('current')
pnniMobileLgnMaxLevel = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 2, 3), PnniLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniMobileLgnMaxLevel.setStatus('current')
pnniMSOnhlTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 3), )
if mibBuilder.loadTexts: pnniMSOnhlTable.setStatus('current')
pnniMSOnhlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 3, 1), ).setIndexNames((0, "PNNI-MOB-EXT-MIB", "pnniOnhlIndex"), (0, "PNNI-MOB-EXT-MIB", "pnniOnhlLevel"))
if mibBuilder.loadTexts: pnniMSOnhlEntry.setStatus('current')
pnniOnhlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 3, 1, 1), PnniOnhlIndex())
if mibBuilder.loadTexts: pnniOnhlIndex.setStatus('current')
pnniOnhlLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 3, 1, 2), PnniLevel())
if mibBuilder.loadTexts: pnniOnhlLevel.setStatus('current')
pnniOnhlPeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 3, 1, 3), PnniPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniOnhlPeerGroupId.setStatus('current')
pnniOnhlNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 3, 1, 4), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniOnhlNodeId.setStatus('current')
pnniOnhlAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 3, 1, 5), PnniAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniOnhlAtmAddr.setStatus('current')
pnniMSNodeTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 4), )
if mibBuilder.loadTexts: pnniMSNodeTable.setStatus('current')
pnniMSNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 4, 1), )
pnniNodeEntry.registerAugmentions(("PNNI-MOB-EXT-MIB", "pnniMSNodeEntry"))
pnniMSNodeEntry.setIndexNames(*pnniNodeEntry.getIndexNames())
if mibBuilder.loadTexts: pnniMSNodeEntry.setStatus('current')
pnniOutputOnhlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 4, 1, 1), PnniOnhlIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniOutputOnhlIndex.setStatus('current')
pnniOutputOnhlTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 4, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniOutputOnhlTimeStamp.setStatus('current')
pnniDecisionProcessTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniDecisionProcessTimeStamp.setStatus('current')
pnniDecisionProcessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniDecisionProcessCount.setStatus('current')
pnniMSInputOnhlTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 5), )
if mibBuilder.loadTexts: pnniMSInputOnhlTable.setStatus('current')
pnniMSInputOnhlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 5, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MOB-EXT-MIB", "pnniOnhlIndex"))
if mibBuilder.loadTexts: pnniMSInputOnhlEntry.setStatus('current')
pnniInputOnhlTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 5, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniInputOnhlTimeStamp.setStatus('current')
pnniInputOnhlSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undefined", 0), ("mobileInterface", 1), ("nodalInformationGroup", 2), ("localNode", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniInputOnhlSourceType.setStatus('current')
pnniInputOnhlNodeIdSource = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 5, 1, 3), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniInputOnhlNodeIdSource.setStatus('current')
pnniInputOnhlMobileIfSource = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 5, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniInputOnhlMobileIfSource.setStatus('current')
pnniInputOnhlNodeIndexSource = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 2, 5, 1, 5), PnniNodeIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniInputOnhlNodeIndexSource.setStatus('current')
pnniAccessPointGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 3))
pnniAPMobileIfTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 3, 1), )
if mibBuilder.loadTexts: pnniAPMobileIfTable.setStatus('current')
pnniAPMobileIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 3, 1, 1), )
pnniIfEntry.registerAugmentions(("PNNI-MOB-EXT-MIB", "pnniAPMobileIfEntry"))
pnniAPMobileIfEntry.setIndexNames(*pnniIfEntry.getIndexNames())
if mibBuilder.loadTexts: pnniAPMobileIfEntry.setStatus('current')
pnniAPMobileIfNhlLevelFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 1, 3, 1, 1, 1), PnniLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniAPMobileIfNhlLevelFilter.setStatus('current')
pnniMobExtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2))
pnniMobExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 1))
pnniMobExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 2))
pnniMobExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 1, 1)).setObjects(("PNNI-MOB-EXT-MIB", "pnniMobExtMinGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMobExtMIBCompliance = pnniMobExtMIBCompliance.setStatus('current')
pnniMobExtMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 2, 1)).setObjects(("PNNI-MOB-EXT-MIB", "pnniMobExtVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMobExtMinGroup = pnniMobExtMinGroup.setStatus('current')
pnniIfMSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 2, 2)).setObjects(("PNNI-MOB-EXT-MIB", "pnniIfMobilityEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniIfMSGroup = pnniIfMSGroup.setStatus('current')
pnniMobileLgnMSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 2, 3)).setObjects(("PNNI-MOB-EXT-MIB", "pnniMobileLgnIndex"), ("PNNI-MOB-EXT-MIB", "pnniMobileLgnMinLevel"), ("PNNI-MOB-EXT-MIB", "pnniMobileLgnMaxLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMobileLgnMSGroup = pnniMobileLgnMSGroup.setStatus('current')
pnniOnhlMSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 2, 4)).setObjects(("PNNI-MOB-EXT-MIB", "pnniOnhlNodeId"), ("PNNI-MOB-EXT-MIB", "pnniOnhlAtmAddr"), ("PNNI-MOB-EXT-MIB", "pnniOnhlPeerGroupId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniOnhlMSGroup = pnniOnhlMSGroup.setStatus('current')
pnniNodeMSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 2, 5)).setObjects(("PNNI-MOB-EXT-MIB", "pnniOutputOnhlIndex"), ("PNNI-MOB-EXT-MIB", "pnniOutputOnhlTimeStamp"), ("PNNI-MOB-EXT-MIB", "pnniDecisionProcessTimeStamp"), ("PNNI-MOB-EXT-MIB", "pnniDecisionProcessCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNodeMSGroup = pnniNodeMSGroup.setStatus('current')
pnniInputOnhlMSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 2, 6)).setObjects(("PNNI-MOB-EXT-MIB", "pnniInputOnhlTimeStamp"), ("PNNI-MOB-EXT-MIB", "pnniInputOnhlSourceType"), ("PNNI-MOB-EXT-MIB", "pnniInputOnhlNodeIdSource"), ("PNNI-MOB-EXT-MIB", "pnniInputOnhlMobileIfSource"), ("PNNI-MOB-EXT-MIB", "pnniInputOnhlNodeIndexSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniInputOnhlMSGroup = pnniInputOnhlMSGroup.setStatus('current')
pnniMobileIfAPOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 2, 2, 2, 7)).setObjects(("PNNI-MOB-EXT-MIB", "pnniAPMobileIfNhlLevelFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMobileIfAPOptionalGroup = pnniMobileIfAPOptionalGroup.setStatus('current')
mibBuilder.exportSymbols("PNNI-MOB-EXT-MIB", pnniMobExtBaseGroup=pnniMobExtBaseGroup, pnniOnhlIndex=pnniOnhlIndex, pnniMobExtMIB=pnniMobExtMIB, pnniMobExtMIBCompliance=pnniMobExtMIBCompliance, pnniMSMobileIfEntry=pnniMSMobileIfEntry, pnniMobileIfAPOptionalGroup=pnniMobileIfAPOptionalGroup, pnniOnhlNodeId=pnniOnhlNodeId, pnniMSMobileIfTable=pnniMSMobileIfTable, pnniMSInputOnhlTable=pnniMSInputOnhlTable, pnniAPMobileIfTable=pnniAPMobileIfTable, pnniMSOnhlTable=pnniMSOnhlTable, pnniDecisionProcessCount=pnniDecisionProcessCount, PYSNMP_MODULE_ID=pnniMobExtMIB, pnniAPMobileIfEntry=pnniAPMobileIfEntry, pnniIfMSGroup=pnniIfMSGroup, pnniMobileLgnIndex=pnniMobileLgnIndex, pnniMSNodeTable=pnniMSNodeTable, pnniMSNodeEntry=pnniMSNodeEntry, pnniMobExtMinGroup=pnniMobExtMinGroup, pnniIfMobilityEnabled=pnniIfMobilityEnabled, pnniOnhlAtmAddr=pnniOnhlAtmAddr, pnniInputOnhlSourceType=pnniInputOnhlSourceType, pnniOutputOnhlTimeStamp=pnniOutputOnhlTimeStamp, pnniMSOnhlEntry=pnniMSOnhlEntry, pnniAccessPointGroup=pnniAccessPointGroup, pnniMobileSwitchGroup=pnniMobileSwitchGroup, pnniMSMobileLgnGroup=pnniMSMobileLgnGroup, atmfPnni=atmfPnni, pnniInputOnhlTimeStamp=pnniInputOnhlTimeStamp, pnniOnhlPeerGroupId=pnniOnhlPeerGroupId, pnniInputOnhlNodeIdSource=pnniInputOnhlNodeIdSource, PnniOnhlIndex=PnniOnhlIndex, pnniOnhlMSGroup=pnniOnhlMSGroup, pnniInputOnhlMSGroup=pnniInputOnhlMSGroup, pnniMobExtMIBConformance=pnniMobExtMIBConformance, pnniMobileLgnMaxLevel=pnniMobileLgnMaxLevel, atmForumNetworkManagement=atmForumNetworkManagement, pnniInputOnhlNodeIndexSource=pnniInputOnhlNodeIndexSource, pnniMobExtMIBCompliances=pnniMobExtMIBCompliances, pnniInputOnhlMobileIfSource=pnniInputOnhlMobileIfSource, pnniAPMobileIfNhlLevelFilter=pnniAPMobileIfNhlLevelFilter, pnniMobileLgnMSGroup=pnniMobileLgnMSGroup, pnniMobExtVersion=pnniMobExtVersion, pnniOutputOnhlIndex=pnniOutputOnhlIndex, pnniNodeMSGroup=pnniNodeMSGroup, pnniMobileLgnMinLevel=pnniMobileLgnMinLevel, pnniDecisionProcessTimeStamp=pnniDecisionProcessTimeStamp, pnniMSInputOnhlEntry=pnniMSInputOnhlEntry, pnniMobExtMIBGroups=pnniMobExtMIBGroups, atmForum=atmForum, pnniMobExtMIBObjects=pnniMobExtMIBObjects, pnniOnhlLevel=pnniOnhlLevel)
