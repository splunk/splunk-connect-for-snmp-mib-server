#
# PySNMP MIB module Wellfleet-IPPOLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-IPPOLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, IpAddress, Counter32, ObjectIdentity, NotificationType, MibIdentifier, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "IpAddress", "Counter32", "ObjectIdentity", "NotificationType", "MibIdentifier", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Gauge32", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfIpPolicyGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfIpPolicyGroup")
wfIpRipAcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1), )
if mibBuilder.loadTexts: wfIpRipAcceptTable.setStatus('mandatory')
wfIpRipAcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpRipAcceptIndex"))
if mibBuilder.loadTexts: wfIpRipAcceptEntry.setStatus('mandatory')
wfIpRipAcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptDelete.setStatus('mandatory')
wfIpRipAcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptDisable.setStatus('mandatory')
wfIpRipAcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRipAcceptIndex.setStatus('mandatory')
wfIpRipAcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptName.setStatus('mandatory')
wfIpRipAcceptNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptNetworks.setStatus('mandatory')
wfIpRipAcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptAction.setStatus('mandatory')
wfIpRipAcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptPreference.setStatus('mandatory')
wfIpRipAcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptPrecedence.setStatus('mandatory')
wfIpRipAcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRipAcceptInject.setStatus('mandatory')
wfIpRipAcceptGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptGateway.setStatus('mandatory')
wfIpRipAcceptInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptInterface.setStatus('mandatory')
wfIpRipAcceptApplyMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 1, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAcceptApplyMask.setStatus('mandatory')
wfIpRipAnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2), )
if mibBuilder.loadTexts: wfIpRipAnnounceTable.setStatus('mandatory')
wfIpRipAnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpRipAnnounceIndex"))
if mibBuilder.loadTexts: wfIpRipAnnounceEntry.setStatus('mandatory')
wfIpRipAnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceDelete.setStatus('mandatory')
wfIpRipAnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceDisable.setStatus('mandatory')
wfIpRipAnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRipAnnounceIndex.setStatus('mandatory')
wfIpRipAnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceName.setStatus('mandatory')
wfIpRipAnnounceNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceNetworks.setStatus('mandatory')
wfIpRipAnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('announce')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceAction.setStatus('mandatory')
wfIpRipAnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnouncePrecedence.setStatus('mandatory')
wfIpRipAnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 8), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceRouteSource.setStatus('mandatory')
wfIpRipAnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 9), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceExtRouteSource.setStatus('mandatory')
wfIpRipAnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceAdvertise.setStatus('mandatory')
wfIpRipAnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceRipGateway.setStatus('mandatory')
wfIpRipAnnounceRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceRipInterface.setStatus('mandatory')
wfIpRipAnnounceOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceOspfRouterId.setStatus('mandatory')
wfIpRipAnnounceOspfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("external", 3), ("internal", 4), ("any", 7))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceOspfType.setStatus('mandatory')
wfIpRipAnnounceOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceOspfTag.setStatus('mandatory')
wfIpRipAnnounceEgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceEgpPeer.setStatus('mandatory')
wfIpRipAnnounceEgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceEgpPeerAs.setStatus('mandatory')
wfIpRipAnnounceEgpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceEgpGateway.setStatus('mandatory')
wfIpRipAnnounceBgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceBgpPeer.setStatus('mandatory')
wfIpRipAnnounceBgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceBgpPeerAs.setStatus('mandatory')
wfIpRipAnnounceBgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceBgpNextHop.setStatus('mandatory')
wfIpRipAnnounceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 22), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceInterface.setStatus('mandatory')
wfIpRipAnnounceRipMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRipAnnounceRipMetric.setStatus('mandatory')
wfIpOspfAcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3), )
if mibBuilder.loadTexts: wfIpOspfAcceptTable.setStatus('mandatory')
wfIpOspfAcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpOspfAcceptIndex"))
if mibBuilder.loadTexts: wfIpOspfAcceptEntry.setStatus('mandatory')
wfIpOspfAcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptDelete.setStatus('mandatory')
wfIpOspfAcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptDisable.setStatus('mandatory')
wfIpOspfAcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpOspfAcceptIndex.setStatus('mandatory')
wfIpOspfAcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptName.setStatus('mandatory')
wfIpOspfAcceptNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptNetworks.setStatus('mandatory')
wfIpOspfAcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptAction.setStatus('mandatory')
wfIpOspfAcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptPreference.setStatus('mandatory')
wfIpOspfAcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptPrecedence.setStatus('mandatory')
wfIpOspfAcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpOspfAcceptInject.setStatus('mandatory')
wfIpOspfAcceptType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("any", 3))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptType.setStatus('mandatory')
wfIpOspfAcceptTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 3, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAcceptTag.setStatus('mandatory')
wfIpOspfAnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4), )
if mibBuilder.loadTexts: wfIpOspfAnnounceTable.setStatus('mandatory')
wfIpOspfAnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpOspfAnnounceIndex"))
if mibBuilder.loadTexts: wfIpOspfAnnounceEntry.setStatus('mandatory')
wfIpOspfAnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceDelete.setStatus('mandatory')
wfIpOspfAnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceDisable.setStatus('mandatory')
wfIpOspfAnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpOspfAnnounceIndex.setStatus('mandatory')
wfIpOspfAnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceName.setStatus('mandatory')
wfIpOspfAnnounceNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceNetworks.setStatus('mandatory')
wfIpOspfAnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('announce')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceAction.setStatus('mandatory')
wfIpOspfAnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnouncePrecedence.setStatus('mandatory')
wfIpOspfAnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 8), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceRouteSource.setStatus('mandatory')
wfIpOspfAnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(63))).clone(namedValues=NamedValues(("any", 63))).clone('any')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpOspfAnnounceExtRouteSource.setStatus('mandatory')
wfIpOspfAnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceAdvertise.setStatus('mandatory')
wfIpOspfAnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceRipGateway.setStatus('mandatory')
wfIpOspfAnnounceRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceRipInterface.setStatus('mandatory')
wfIpOspfAnnounceOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceOspfRouterId.setStatus('mandatory')
wfIpOspfAnnounceOspfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("external", 3), ("internal", 4), ("any", 7))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceOspfType.setStatus('mandatory')
wfIpOspfAnnounceOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceOspfTag.setStatus('mandatory')
wfIpOspfAnnounceEgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceEgpPeer.setStatus('mandatory')
wfIpOspfAnnounceEgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceEgpPeerAs.setStatus('mandatory')
wfIpOspfAnnounceEgpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceEgpGateway.setStatus('mandatory')
wfIpOspfAnnounceBgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceBgpPeer.setStatus('mandatory')
wfIpOspfAnnounceBgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceBgpPeerAs.setStatus('mandatory')
wfIpOspfAnnounceBgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceBgpNextHop.setStatus('mandatory')
wfIpOspfAnnounceType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceType.setStatus('mandatory')
wfIpOspfAnnounceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceTag.setStatus('mandatory')
wfIpOspfAnnounceAutoTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("wf", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceAutoTag.setStatus('mandatory')
wfIpOspfAnnounceMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceMetric.setStatus('mandatory')
wfIpOspfAnnounceNssaPropagate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpOspfAnnounceNssaPropagate.setStatus('mandatory')
wfIpEgpAcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5), )
if mibBuilder.loadTexts: wfIpEgpAcceptTable.setStatus('mandatory')
wfIpEgpAcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpEgpAcceptIndex"))
if mibBuilder.loadTexts: wfIpEgpAcceptEntry.setStatus('mandatory')
wfIpEgpAcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptDelete.setStatus('mandatory')
wfIpEgpAcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptDisable.setStatus('mandatory')
wfIpEgpAcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpEgpAcceptIndex.setStatus('mandatory')
wfIpEgpAcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptName.setStatus('mandatory')
wfIpEgpAcceptNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptNetworks.setStatus('mandatory')
wfIpEgpAcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptAction.setStatus('mandatory')
wfIpEgpAcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptPreference.setStatus('mandatory')
wfIpEgpAcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptPrecedence.setStatus('mandatory')
wfIpEgpAcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpEgpAcceptInject.setStatus('mandatory')
wfIpEgpAcceptPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptPeer.setStatus('mandatory')
wfIpEgpAcceptAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptAs.setStatus('mandatory')
wfIpEgpAcceptGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 5, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAcceptGateway.setStatus('mandatory')
wfIpEgpAnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6), )
if mibBuilder.loadTexts: wfIpEgpAnnounceTable.setStatus('mandatory')
wfIpEgpAnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpEgpAnnounceIndex"))
if mibBuilder.loadTexts: wfIpEgpAnnounceEntry.setStatus('mandatory')
wfIpEgpAnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceDelete.setStatus('mandatory')
wfIpEgpAnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceDisable.setStatus('mandatory')
wfIpEgpAnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpEgpAnnounceIndex.setStatus('mandatory')
wfIpEgpAnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceName.setStatus('mandatory')
wfIpEgpAnnounceNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceNetworks.setStatus('mandatory')
wfIpEgpAnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('announce')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceAction.setStatus('mandatory')
wfIpEgpAnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnouncePrecedence.setStatus('mandatory')
wfIpEgpAnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 8), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceRouteSource.setStatus('mandatory')
wfIpEgpAnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 9), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceExtRouteSource.setStatus('mandatory')
wfIpEgpAnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceAdvertise.setStatus('mandatory')
wfIpEgpAnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceRipGateway.setStatus('mandatory')
wfIpEgpAnnounceRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceRipInterface.setStatus('mandatory')
wfIpEgpAnnounceOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceOspfRouterId.setStatus('mandatory')
wfIpEgpAnnounceOspfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("external", 3), ("internal", 4), ("any", 7))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceOspfType.setStatus('mandatory')
wfIpEgpAnnounceOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceOspfTag.setStatus('mandatory')
wfIpEgpAnnounceEgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceEgpPeer.setStatus('mandatory')
wfIpEgpAnnounceEgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceEgpPeerAs.setStatus('mandatory')
wfIpEgpAnnounceEgpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceEgpGateway.setStatus('mandatory')
wfIpEgpAnnounceBgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceBgpPeer.setStatus('mandatory')
wfIpEgpAnnounceBgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceBgpPeerAs.setStatus('mandatory')
wfIpEgpAnnounceBgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceBgpNextHop.setStatus('mandatory')
wfIpEgpAnnouncePeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 22), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnouncePeer.setStatus('mandatory')
wfIpEgpAnnounceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 23), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceInterface.setStatus('mandatory')
wfIpEgpAnnounceMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 6, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpEgpAnnounceMetric.setStatus('mandatory')
wfIpBgp3AcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7), )
if mibBuilder.loadTexts: wfIpBgp3AcceptTable.setStatus('mandatory')
wfIpBgp3AcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpBgp3AcceptIndex"))
if mibBuilder.loadTexts: wfIpBgp3AcceptEntry.setStatus('mandatory')
wfIpBgp3AcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptDelete.setStatus('mandatory')
wfIpBgp3AcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptDisable.setStatus('mandatory')
wfIpBgp3AcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBgp3AcceptIndex.setStatus('mandatory')
wfIpBgp3AcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptName.setStatus('mandatory')
wfIpBgp3AcceptNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptNetworks.setStatus('mandatory')
wfIpBgp3AcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('ignore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptAction.setStatus('mandatory')
wfIpBgp3AcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptPreference.setStatus('mandatory')
wfIpBgp3AcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptPrecedence.setStatus('mandatory')
wfIpBgp3AcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptInject.setStatus('mandatory')
wfIpBgp3AcceptPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptPeerAs.setStatus('mandatory')
wfIpBgp3AcceptPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptPeerAddress.setStatus('mandatory')
wfIpBgp3AcceptOrigAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptOrigAs.setStatus('mandatory')
wfIpBgp3AcceptRouteOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("igporegp", 3), ("incomplete", 4), ("incompleteorigp", 5), ("incompleteoregp", 6), ("any", 7))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptRouteOrigin.setStatus('mandatory')
wfIpBgp3AcceptBgp3Preference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptBgp3Preference.setStatus('mandatory')
wfIpBgp3AcceptAsWeightClass = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("class1", 1), ("class2", 2), ("class3", 3), ("class4", 4), ("class5", 5), ("class6", 6), ("class7", 7), ("class8", 8))).clone('class1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptAsWeightClass.setStatus('mandatory')
wfIpBgp3AcceptCommunityMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 7, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AcceptCommunityMatch.setStatus('mandatory')
wfIpBgp3AnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8), )
if mibBuilder.loadTexts: wfIpBgp3AnnounceTable.setStatus('mandatory')
wfIpBgp3AnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpBgp3AnnounceIndex"))
if mibBuilder.loadTexts: wfIpBgp3AnnounceEntry.setStatus('mandatory')
wfIpBgp3AnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceDelete.setStatus('mandatory')
wfIpBgp3AnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceDisable.setStatus('mandatory')
wfIpBgp3AnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBgp3AnnounceIndex.setStatus('mandatory')
wfIpBgp3AnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceName.setStatus('mandatory')
wfIpBgp3AnnounceNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceNetworks.setStatus('mandatory')
wfIpBgp3AnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('ignore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceAction.setStatus('mandatory')
wfIpBgp3AnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnouncePrecedence.setStatus('mandatory')
wfIpBgp3AnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 8), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceRouteSource.setStatus('mandatory')
wfIpBgp3AnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 9), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceExtRouteSource.setStatus('mandatory')
wfIpBgp3AnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceAdvertise.setStatus('mandatory')
wfIpBgp3AnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceRipGateway.setStatus('mandatory')
wfIpBgp3AnnounceRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceRipInterface.setStatus('mandatory')
wfIpBgp3AnnounceOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceOspfRouterId.setStatus('mandatory')
wfIpBgp3AnnounceOspfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("external", 3), ("internal", 4), ("any", 7))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceOspfType.setStatus('mandatory')
wfIpBgp3AnnounceOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceOspfTag.setStatus('mandatory')
wfIpBgp3AnnounceEgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceEgpPeer.setStatus('mandatory')
wfIpBgp3AnnounceEgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceEgpPeerAs.setStatus('mandatory')
wfIpBgp3AnnounceEgpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceEgpGateway.setStatus('mandatory')
wfIpBgp3AnnounceBgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceBgpPeer.setStatus('mandatory')
wfIpBgp3AnnounceBgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceBgpPeerAs.setStatus('mandatory')
wfIpBgp3AnnounceBgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceBgpNextHop.setStatus('mandatory')
wfIpBgp3AnnouncePeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 22), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnouncePeerAs.setStatus('mandatory')
wfIpBgp3AnnouncePeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 23), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnouncePeer.setStatus('mandatory')
wfIpBgp3AnnounceUseMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("specified", 2), ("originating", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceUseMetric.setStatus('mandatory')
wfIpBgp3AnnounceInterAsMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceInterAsMetric.setStatus('mandatory')
wfIpBgp3AnnounceOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3), ("none", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceOrigin.setStatus('mandatory')
wfIpBgp3AnnounceAsPath = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 27), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceAsPath.setStatus('mandatory')
wfIpBgp3AnnounceNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 28), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceNextHop.setStatus('mandatory')
wfIpBgp3AnnounceCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 29), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceCommunity.setStatus('mandatory')
wfIpBgp3AnnounceCommunityAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("as-is", 1), ("remove", 2), ("append", 3), ("replace", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceCommunityAction.setStatus('mandatory')
wfIpBgp3AnnounceCommunityMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 8, 1, 31), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp3AnnounceCommunityMatch.setStatus('mandatory')
wfIpBgp4AcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9), )
if mibBuilder.loadTexts: wfIpBgp4AcceptTable.setStatus('mandatory')
wfIpBgp4AcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpBgp4AcceptIndex"))
if mibBuilder.loadTexts: wfIpBgp4AcceptEntry.setStatus('mandatory')
wfIpBgp4AcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptDelete.setStatus('mandatory')
wfIpBgp4AcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptDisable.setStatus('mandatory')
wfIpBgp4AcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBgp4AcceptIndex.setStatus('mandatory')
wfIpBgp4AcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptName.setStatus('mandatory')
wfIpBgp4AcceptNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptNetworks.setStatus('mandatory')
wfIpBgp4AcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('ignore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptAction.setStatus('mandatory')
wfIpBgp4AcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptPreference.setStatus('mandatory')
wfIpBgp4AcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptPrecedence.setStatus('mandatory')
wfIpBgp4AcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptInject.setStatus('mandatory')
wfIpBgp4AcceptPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptPeerAs.setStatus('mandatory')
wfIpBgp4AcceptPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptPeerAddress.setStatus('mandatory')
wfIpBgp4AcceptOrigAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptOrigAs.setStatus('mandatory')
wfIpBgp4AcceptRouteOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("igporegp", 3), ("incomplete", 4), ("incompleteorigp", 5), ("incompleteoregp", 6), ("any", 7))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptRouteOrigin.setStatus('mandatory')
wfIpBgp4AcceptAggrAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 14), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptAggrAs.setStatus('mandatory')
wfIpBgp4AcceptAggrRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptAggrRouter.setStatus('mandatory')
wfIpBgp4AcceptLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptLocalPref.setStatus('mandatory')
wfIpBgp4AcceptBgp4Preference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptBgp4Preference.setStatus('mandatory')
wfIpBgp4AcceptAsWeightClass = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("class1", 1), ("class2", 2), ("class3", 3), ("class4", 4), ("class5", 5), ("class6", 6), ("class7", 7), ("class8", 8))).clone('class1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptAsWeightClass.setStatus('mandatory')
wfIpBgp4AcceptAsPatternMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptAsPatternMatch.setStatus('mandatory')
wfIpBgp4AcceptCommunityMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptCommunityMatch.setStatus('mandatory')
wfIpBgp4AcceptUseMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("passthru", 1), ("override", 2), ("generate", 3), ("delete", 4))).clone('passthru')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptUseMultiExitDisc.setStatus('mandatory')
wfIpBgp4AcceptMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptMultiExitDisc.setStatus('mandatory')
wfIpBgp4AcceptAsPrepend = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 23), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptAsPrepend.setStatus('mandatory')
wfIpBgp4AcceptCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 24), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptCommunity.setStatus('mandatory')
wfIpBgp4AcceptCommunityAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("as-is", 1), ("remove", 2), ("append", 3), ("replace", 4))).clone('as-is')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptCommunityAction.setStatus('mandatory')
wfIpBgp4AcceptRFDampeningEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptRFDampeningEnable.setStatus('mandatory')
wfIpBgp4AcceptRFDampeningTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 9, 1, 27), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AcceptRFDampeningTemplate.setStatus('mandatory')
wfIpBgp4AnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10), )
if mibBuilder.loadTexts: wfIpBgp4AnnounceTable.setStatus('mandatory')
wfIpBgp4AnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpBgp4AnnounceIndex"))
if mibBuilder.loadTexts: wfIpBgp4AnnounceEntry.setStatus('mandatory')
wfIpBgp4AnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceDelete.setStatus('mandatory')
wfIpBgp4AnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceDisable.setStatus('mandatory')
wfIpBgp4AnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBgp4AnnounceIndex.setStatus('mandatory')
wfIpBgp4AnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceName.setStatus('mandatory')
wfIpBgp4AnnounceNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceNetworks.setStatus('mandatory')
wfIpBgp4AnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('ignore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceAction.setStatus('mandatory')
wfIpBgp4AnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnouncePrecedence.setStatus('mandatory')
wfIpBgp4AnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 8), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceRouteSource.setStatus('mandatory')
wfIpBgp4AnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 9), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceExtRouteSource.setStatus('mandatory')
wfIpBgp4AnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceAdvertise.setStatus('mandatory')
wfIpBgp4AnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceRipGateway.setStatus('mandatory')
wfIpBgp4AnnounceRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceRipInterface.setStatus('mandatory')
wfIpBgp4AnnounceOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceOspfRouterId.setStatus('mandatory')
wfIpBgp4AnnounceOspfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("external", 3), ("internal", 4), ("any", 7))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceOspfType.setStatus('mandatory')
wfIpBgp4AnnounceOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceOspfTag.setStatus('mandatory')
wfIpBgp4AnnounceEgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceEgpPeer.setStatus('mandatory')
wfIpBgp4AnnounceEgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceEgpPeerAs.setStatus('mandatory')
wfIpBgp4AnnounceEgpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceEgpGateway.setStatus('mandatory')
wfIpBgp4AnnounceBgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceBgpPeer.setStatus('mandatory')
wfIpBgp4AnnounceBgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceBgpPeerAs.setStatus('mandatory')
wfIpBgp4AnnounceBgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceBgpNextHop.setStatus('mandatory')
wfIpBgp4AnnouncePeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 22), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnouncePeerAs.setStatus('mandatory')
wfIpBgp4AnnouncePeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 23), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnouncePeer.setStatus('mandatory')
wfIpBgp4AnnounceUseMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("specified", 2), ("originating", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceUseMultiExitDisc.setStatus('mandatory')
wfIpBgp4AnnounceMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceMultiExitDisc.setStatus('mandatory')
wfIpBgp4AnnounceOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3), ("none", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceOrigin.setStatus('mandatory')
wfIpBgp4AnnounceAsPath = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 27), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceAsPath.setStatus('mandatory')
wfIpBgp4AnnounceLocalPrefOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceLocalPrefOverride.setStatus('mandatory')
wfIpBgp4AnnounceLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceLocalPref.setStatus('mandatory')
wfIpBgp4AnnounceNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 30), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceNextHop.setStatus('mandatory')
wfIpBgp4AnnounceAtomic = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("force", 2), ("ignore", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceAtomic.setStatus('mandatory')
wfIpBgp4AnnounceAsPatternMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceAsPatternMatch.setStatus('mandatory')
wfIpBgp4AnnounceCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 33), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceCommunity.setStatus('mandatory')
wfIpBgp4AnnounceCommunityAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("as-is", 1), ("remove", 2), ("append", 3), ("replace", 4))).clone('as-is')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceCommunityAction.setStatus('mandatory')
wfIpBgp4AnnounceCommunityMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 35), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceCommunityMatch.setStatus('mandatory')
wfIpBgp4AnnounceAsPrepend = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 10, 1, 36), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBgp4AnnounceAsPrepend.setStatus('mandatory')
wfIpIgmpGroupPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11), )
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyTable.setStatus('mandatory')
wfIpIgmpGroupPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpIgmpGroupPolicyIndex"))
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyEntry.setStatus('mandatory')
wfIpIgmpGroupPolicyDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyDelete.setStatus('mandatory')
wfIpIgmpGroupPolicyDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyDisable.setStatus('mandatory')
wfIpIgmpGroupPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyIndex.setStatus('mandatory')
wfIpIgmpGroupPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyName.setStatus('mandatory')
wfIpIgmpGroupPolicySources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicySources.setStatus('mandatory')
wfIpIgmpGroupPolicyAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('ignore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyAction.setStatus('mandatory')
wfIpIgmpGroupPolicyPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyPreference.setStatus('mandatory')
wfIpIgmpGroupPolicyPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyPrecedence.setStatus('mandatory')
wfIpIgmpGroupPolicyInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyInject.setStatus('mandatory')
wfIpIgmpGroupPolicyGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyGroups.setStatus('mandatory')
wfIpIgmpGroupPolicyCircuits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicyCircuits.setStatus('mandatory')
wfIpIgmpGroupPolicySenders = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 11, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIgmpGroupPolicySenders.setStatus('mandatory')
wfMTMStaticFwdTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12), )
if mibBuilder.loadTexts: wfMTMStaticFwdTable.setStatus('obsolete')
wfMTMStaticFwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfMTMStaticFwdIndex"))
if mibBuilder.loadTexts: wfMTMStaticFwdEntry.setStatus('obsolete')
wfMTMStaticFwdDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdDelete.setStatus('obsolete')
wfMTMStaticFwdDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdDisable.setStatus('obsolete')
wfMTMStaticFwdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMTMStaticFwdIndex.setStatus('obsolete')
wfMTMStaticFwdName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdName.setStatus('obsolete')
wfMTMStaticFwdGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdGroups.setStatus('obsolete')
wfMTMStaticFwdAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMTMStaticFwdAction.setStatus('obsolete')
wfMTMStaticFwdPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdPreference.setStatus('obsolete')
wfMTMStaticFwdPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdPrecedence.setStatus('obsolete')
wfMTMStaticFwdInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMTMStaticFwdInject.setStatus('obsolete')
wfMTMStaticFwdSources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdSources.setStatus('obsolete')
wfMTMStaticFwdInCircuits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdInCircuits.setStatus('obsolete')
wfMTMStaticFwdOutCircuits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdOutCircuits.setStatus('obsolete')
wfMTMStaticFwdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 12, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("static", 2), ("statictodynamic", 3), ("dynamictostatic", 4))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticFwdMode.setStatus('obsolete')
wfIpMospfAcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13), )
if mibBuilder.loadTexts: wfIpMospfAcceptTable.setStatus('mandatory')
wfIpMospfAcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpMospfAcceptIndex"))
if mibBuilder.loadTexts: wfIpMospfAcceptEntry.setStatus('mandatory')
wfIpMospfAcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptDelete.setStatus('mandatory')
wfIpMospfAcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptDisable.setStatus('mandatory')
wfIpMospfAcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAcceptIndex.setStatus('mandatory')
wfIpMospfAcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptName.setStatus('mandatory')
wfIpMospfAcceptNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptNetworks.setStatus('mandatory')
wfIpMospfAcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptAction.setStatus('mandatory')
wfIpMospfAcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptPreference.setStatus('mandatory')
wfIpMospfAcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptPrecedence.setStatus('mandatory')
wfIpMospfAcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAcceptInject.setStatus('mandatory')
wfIpMospfAcceptGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptGateway.setStatus('mandatory')
wfIpMospfAcceptInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptInterface.setStatus('mandatory')
wfIpMospfAcceptApplyMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 13, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAcceptApplyMask.setStatus('mandatory')
wfIpMospfAnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14), )
if mibBuilder.loadTexts: wfIpMospfAnnounceTable.setStatus('mandatory')
wfIpMospfAnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpMospfAnnounceIndex"))
if mibBuilder.loadTexts: wfIpMospfAnnounceEntry.setStatus('mandatory')
wfIpMospfAnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAnnounceDelete.setStatus('mandatory')
wfIpMospfAnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAnnounceDisable.setStatus('mandatory')
wfIpMospfAnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceIndex.setStatus('mandatory')
wfIpMospfAnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAnnounceName.setStatus('mandatory')
wfIpMospfAnnounceNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAnnounceNetworks.setStatus('mandatory')
wfIpMospfAnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('announce')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAnnounceAction.setStatus('mandatory')
wfIpMospfAnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAnnouncePrecedence.setStatus('mandatory')
wfIpMospfAnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceRouteSource.setStatus('mandatory')
wfIpMospfAnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceExtRouteSource.setStatus('mandatory')
wfIpMospfAnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpMospfAnnounceAdvertise.setStatus('mandatory')
wfIpMospfAnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceRipGateway.setStatus('mandatory')
wfIpMospfAnnounceRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceRipInterface.setStatus('mandatory')
wfIpMospfAnnounceOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceOspfRouterId.setStatus('mandatory')
wfIpMospfAnnounceOspfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("external", 3), ("internal", 4), ("any", 7))).clone('any')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceOspfType.setStatus('mandatory')
wfIpMospfAnnounceOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceOspfTag.setStatus('mandatory')
wfIpMospfAnnounceEgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceEgpPeer.setStatus('mandatory')
wfIpMospfAnnounceEgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceEgpPeerAs.setStatus('mandatory')
wfIpMospfAnnounceEgpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceEgpGateway.setStatus('mandatory')
wfIpMospfAnnounceBgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceBgpPeer.setStatus('mandatory')
wfIpMospfAnnounceBgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceBgpPeerAs.setStatus('mandatory')
wfIpMospfAnnounceBgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 14, 1, 21), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpMospfAnnounceBgpNextHop.setStatus('mandatory')
wfIpDvmrpAcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15), )
if mibBuilder.loadTexts: wfIpDvmrpAcceptTable.setStatus('mandatory')
wfIpDvmrpAcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpDvmrpAcceptIndex"))
if mibBuilder.loadTexts: wfIpDvmrpAcceptEntry.setStatus('mandatory')
wfIpDvmrpAcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptDelete.setStatus('mandatory')
wfIpDvmrpAcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptDisable.setStatus('mandatory')
wfIpDvmrpAcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAcceptIndex.setStatus('mandatory')
wfIpDvmrpAcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptName.setStatus('mandatory')
wfIpDvmrpAcceptNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptNetworks.setStatus('mandatory')
wfIpDvmrpAcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptAction.setStatus('mandatory')
wfIpDvmrpAcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAcceptPreference.setStatus('mandatory')
wfIpDvmrpAcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptPrecedence.setStatus('mandatory')
wfIpDvmrpAcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptInject.setStatus('mandatory')
wfIpDvmrpAcceptGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptGateway.setStatus('mandatory')
wfIpDvmrpAcceptInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptInterface.setStatus('mandatory')
wfIpDvmrpAcceptApplyMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAcceptApplyMask.setStatus('mandatory')
wfIpDvmrpAcceptTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptTunnels.setStatus('mandatory')
wfIpDvmrpAcceptInjectMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 15, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAcceptInjectMetric.setStatus('mandatory')
wfIpDvmrpAnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16), )
if mibBuilder.loadTexts: wfIpDvmrpAnnounceTable.setStatus('mandatory')
wfIpDvmrpAnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpDvmrpAnnounceIndex"))
if mibBuilder.loadTexts: wfIpDvmrpAnnounceEntry.setStatus('mandatory')
wfIpDvmrpAnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceDelete.setStatus('mandatory')
wfIpDvmrpAnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceDisable.setStatus('mandatory')
wfIpDvmrpAnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceIndex.setStatus('mandatory')
wfIpDvmrpAnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceName.setStatus('mandatory')
wfIpDvmrpAnnounceNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceNetworks.setStatus('mandatory')
wfIpDvmrpAnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('announce')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceAction.setStatus('mandatory')
wfIpDvmrpAnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnouncePrecedence.setStatus('mandatory')
wfIpDvmrpAnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceRouteSource.setStatus('mandatory')
wfIpDvmrpAnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceExtRouteSource.setStatus('mandatory')
wfIpDvmrpAnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceAdvertise.setStatus('mandatory')
wfIpDvmrpAnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceRipGateway.setStatus('mandatory')
wfIpDvmrpAnnounceRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceRipInterface.setStatus('mandatory')
wfIpDvmrpAnnounceOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceOspfRouterId.setStatus('mandatory')
wfIpDvmrpAnnounceOspfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("external", 3), ("internal", 4), ("any", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceOspfType.setStatus('mandatory')
wfIpDvmrpAnnounceOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceOspfTag.setStatus('mandatory')
wfIpDvmrpAnnounceEgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceEgpPeer.setStatus('mandatory')
wfIpDvmrpAnnounceEgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceEgpPeerAs.setStatus('mandatory')
wfIpDvmrpAnnounceEgpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceEgpGateway.setStatus('mandatory')
wfIpDvmrpAnnounceBgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceBgpPeer.setStatus('mandatory')
wfIpDvmrpAnnounceBgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceBgpPeerAs.setStatus('mandatory')
wfIpDvmrpAnnounceBgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 21), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceBgpNextHop.setStatus('mandatory')
wfIpDvmrpAnnounceCircuits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 22), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceCircuits.setStatus('obsolete')
wfIpDvmrpAnnounceTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 23), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceTunnels.setStatus('mandatory')
wfIpDvmrpAnnounceMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceMetric.setStatus('mandatory')
wfIpDvmrpAnnounceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 16, 1, 25), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpAnnounceInterface.setStatus('mandatory')
wfIpDvmrpInjectRtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17), )
if mibBuilder.loadTexts: wfIpDvmrpInjectRtTable.setStatus('mandatory')
wfIpDvmrpInjectRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpDvmrpInjectRtIndex"))
if mibBuilder.loadTexts: wfIpDvmrpInjectRtEntry.setStatus('mandatory')
wfIpDvmrpInjectRtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtDelete.setStatus('mandatory')
wfIpDvmrpInjectRtDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtDisable.setStatus('mandatory')
wfIpDvmrpInjectRtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtIndex.setStatus('mandatory')
wfIpDvmrpInjectRtName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtName.setStatus('mandatory')
wfIpDvmrpInjectRtNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtNetworks.setStatus('mandatory')
wfIpDvmrpInjectRtAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtAction.setStatus('mandatory')
wfIpDvmrpInjectRtPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtPreference.setStatus('mandatory')
wfIpDvmrpInjectRtPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtPrecedence.setStatus('mandatory')
wfIpDvmrpInjectRtInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtInject.setStatus('mandatory')
wfIpDvmrpInjectRtInInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtInInterface.setStatus('mandatory')
wfIpDvmrpInjectRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 6))).clone(namedValues=NamedValues(("best-route", 2), ("ospf", 4), ("both", 6))).clone('best-route')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtType.setStatus('mandatory')
wfIpDvmrpInjectRtMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpDvmrpInjectRtMetric.setStatus('mandatory')
wfIpIisisAcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18), )
if mibBuilder.loadTexts: wfIpIisisAcceptTable.setStatus('mandatory')
wfIpIisisAcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpIisisAcceptIndex"))
if mibBuilder.loadTexts: wfIpIisisAcceptEntry.setStatus('mandatory')
wfIpIisisAcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAcceptDelete.setStatus('mandatory')
wfIpIisisAcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAcceptDisable.setStatus('mandatory')
wfIpIisisAcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpIisisAcceptIndex.setStatus('mandatory')
wfIpIisisAcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAcceptName.setStatus('mandatory')
wfIpIisisAcceptNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAcceptNetworks.setStatus('mandatory')
wfIpIisisAcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAcceptAction.setStatus('mandatory')
wfIpIisisAcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAcceptPreference.setStatus('mandatory')
wfIpIisisAcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAcceptPrecedence.setStatus('mandatory')
wfIpIisisAcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpIisisAcceptInject.setStatus('mandatory')
wfIpIisisAcceptType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 18, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("any", 3))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAcceptType.setStatus('mandatory')
wfIpIisisAnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19), )
if mibBuilder.loadTexts: wfIpIisisAnnounceTable.setStatus('mandatory')
wfIpIisisAnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfIpIisisAnnounceIndex"))
if mibBuilder.loadTexts: wfIpIisisAnnounceEntry.setStatus('mandatory')
wfIpIisisAnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceDelete.setStatus('mandatory')
wfIpIisisAnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceDisable.setStatus('mandatory')
wfIpIisisAnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpIisisAnnounceIndex.setStatus('mandatory')
wfIpIisisAnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceName.setStatus('mandatory')
wfIpIisisAnnounceNetworks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceNetworks.setStatus('mandatory')
wfIpIisisAnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('ignore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceAction.setStatus('mandatory')
wfIpIisisAnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnouncePrecedence.setStatus('mandatory')
wfIpIisisAnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 8), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceRouteSource.setStatus('mandatory')
wfIpIisisAnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 9), Integer32().clone(63)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpIisisAnnounceExtRouteSource.setStatus('mandatory')
wfIpIisisAnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceAdvertise.setStatus('mandatory')
wfIpIisisAnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceRipGateway.setStatus('mandatory')
wfIpIisisAnnounceRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceRipInterface.setStatus('mandatory')
wfIpIisisAnnounceIisisRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceIisisRouterId.setStatus('mandatory')
wfIpIisisAnnounceIisisType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("external", 3), ("internal", 4), ("any", 7))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceIisisType.setStatus('mandatory')
wfIpIisisAnnounceIisisTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceIisisTag.setStatus('mandatory')
wfIpIisisAnnounceEgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceEgpPeer.setStatus('mandatory')
wfIpIisisAnnounceEgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceEgpPeerAs.setStatus('mandatory')
wfIpIisisAnnounceEgpGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceEgpGateway.setStatus('mandatory')
wfIpIisisAnnounceBgpPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceBgpPeer.setStatus('mandatory')
wfIpIisisAnnounceBgpPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceBgpPeerAs.setStatus('mandatory')
wfIpIisisAnnounceBgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 21), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceBgpNextHop.setStatus('mandatory')
wfIpIisisAnnounceType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceType.setStatus('mandatory')
wfIpIisisAnnounceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceTag.setStatus('mandatory')
wfIpIisisAnnounceAutoTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("wf", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceAutoTag.setStatus('mandatory')
wfIpIisisAnnounceMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 19, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpIisisAnnounceMetric.setStatus('mandatory')
wfMTMStaticForwardTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20), )
if mibBuilder.loadTexts: wfMTMStaticForwardTable.setStatus('mandatory')
wfMTMStaticForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1), ).setIndexNames((0, "Wellfleet-IPPOLICY-MIB", "wfMTMStaticForwardIndex"))
if mibBuilder.loadTexts: wfMTMStaticForwardEntry.setStatus('mandatory')
wfMTMStaticForwardDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardDelete.setStatus('mandatory')
wfMTMStaticForwardDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardDisable.setStatus('mandatory')
wfMTMStaticForwardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMTMStaticForwardIndex.setStatus('mandatory')
wfMTMStaticForwardName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardName.setStatus('mandatory')
wfMTMStaticForwardGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardGroups.setStatus('mandatory')
wfMTMStaticForwardAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMTMStaticForwardAction.setStatus('mandatory')
wfMTMStaticForwardPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardPreference.setStatus('mandatory')
wfMTMStaticForwardPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardPrecedence.setStatus('mandatory')
wfMTMStaticForwardInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMTMStaticForwardInject.setStatus('mandatory')
wfMTMStaticForwardSources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardSources.setStatus('mandatory')
wfMTMStaticForwardInCircuits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardInCircuits.setStatus('mandatory')
wfMTMStaticForwardOutCircuits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardOutCircuits.setStatus('mandatory')
wfMTMStaticForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 6, 20, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("static", 2), ("statictodynamic", 3), ("dynamictostatic", 4))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMTMStaticForwardMode.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-IPPOLICY-MIB", wfIpEgpAcceptGateway=wfIpEgpAcceptGateway, wfMTMStaticForwardDisable=wfMTMStaticForwardDisable, wfIpDvmrpInjectRtName=wfIpDvmrpInjectRtName, wfIpEgpAnnounceEgpGateway=wfIpEgpAnnounceEgpGateway, wfMTMStaticFwdInject=wfMTMStaticFwdInject, wfIpDvmrpAnnounceTable=wfIpDvmrpAnnounceTable, wfIpIisisAcceptTable=wfIpIisisAcceptTable, wfIpOspfAnnounceRipGateway=wfIpOspfAnnounceRipGateway, wfIpDvmrpAnnounceRipGateway=wfIpDvmrpAnnounceRipGateway, wfIpBgp3AnnounceName=wfIpBgp3AnnounceName, wfIpRipAcceptInject=wfIpRipAcceptInject, wfIpBgp4AnnounceDisable=wfIpBgp4AnnounceDisable, wfIpBgp4AnnounceCommunityAction=wfIpBgp4AnnounceCommunityAction, wfIpMospfAnnounceEntry=wfIpMospfAnnounceEntry, wfIpEgpAnnounceBgpPeerAs=wfIpEgpAnnounceBgpPeerAs, wfIpBgp4AnnounceRipGateway=wfIpBgp4AnnounceRipGateway, wfIpDvmrpAnnounceNetworks=wfIpDvmrpAnnounceNetworks, wfMTMStaticForwardIndex=wfMTMStaticForwardIndex, wfIpDvmrpAnnounceIndex=wfIpDvmrpAnnounceIndex, wfIpDvmrpAcceptInterface=wfIpDvmrpAcceptInterface, wfIpIisisAcceptEntry=wfIpIisisAcceptEntry, wfIpRipAcceptTable=wfIpRipAcceptTable, wfIpRipAnnounceInterface=wfIpRipAnnounceInterface, wfIpMospfAcceptAction=wfIpMospfAcceptAction, wfIpOspfAnnounceOspfType=wfIpOspfAnnounceOspfType, wfIpRipAnnounceName=wfIpRipAnnounceName, wfIpDvmrpAnnounceDelete=wfIpDvmrpAnnounceDelete, wfIpBgp4AnnouncePrecedence=wfIpBgp4AnnouncePrecedence, wfIpBgp4AnnounceDelete=wfIpBgp4AnnounceDelete, wfIpDvmrpAnnounceExtRouteSource=wfIpDvmrpAnnounceExtRouteSource, wfIpBgp3AcceptDisable=wfIpBgp3AcceptDisable, wfIpBgp3AnnounceNetworks=wfIpBgp3AnnounceNetworks, wfIpBgp4AcceptAsPatternMatch=wfIpBgp4AcceptAsPatternMatch, wfIpBgp4AcceptIndex=wfIpBgp4AcceptIndex, wfIpMospfAnnounceRipGateway=wfIpMospfAnnounceRipGateway, wfIpOspfAcceptType=wfIpOspfAcceptType, wfMTMStaticFwdTable=wfMTMStaticFwdTable, wfIpOspfAcceptAction=wfIpOspfAcceptAction, wfIpBgp3AnnouncePeer=wfIpBgp3AnnouncePeer, wfIpBgp3AcceptPeerAs=wfIpBgp3AcceptPeerAs, wfIpBgp4AnnounceOspfTag=wfIpBgp4AnnounceOspfTag, wfIpBgp3AcceptPeerAddress=wfIpBgp3AcceptPeerAddress, wfMTMStaticForwardPreference=wfMTMStaticForwardPreference, wfIpOspfAnnounceIndex=wfIpOspfAnnounceIndex, wfIpIgmpGroupPolicySenders=wfIpIgmpGroupPolicySenders, wfIpBgp3AnnounceEgpGateway=wfIpBgp3AnnounceEgpGateway, wfIpBgp3AnnounceCommunity=wfIpBgp3AnnounceCommunity, wfIpBgp3AcceptAction=wfIpBgp3AcceptAction, wfIpRipAnnounceOspfRouterId=wfIpRipAnnounceOspfRouterId, wfIpBgp4AnnounceNetworks=wfIpBgp4AnnounceNetworks, wfIpBgp4AcceptAggrAs=wfIpBgp4AcceptAggrAs, wfIpEgpAnnounceTable=wfIpEgpAnnounceTable, wfIpBgp3AnnounceCommunityMatch=wfIpBgp3AnnounceCommunityMatch, wfMTMStaticForwardEntry=wfMTMStaticForwardEntry, wfMTMStaticForwardDelete=wfMTMStaticForwardDelete, wfIpBgp4AnnouncePeerAs=wfIpBgp4AnnouncePeerAs, wfIpMospfAnnounceTable=wfIpMospfAnnounceTable, wfIpBgp4AcceptAggrRouter=wfIpBgp4AcceptAggrRouter, wfIpBgp4AcceptNetworks=wfIpBgp4AcceptNetworks, wfIpIisisAnnounceDelete=wfIpIisisAnnounceDelete, wfIpRipAnnounceRipMetric=wfIpRipAnnounceRipMetric, wfIpBgp4AnnounceAtomic=wfIpBgp4AnnounceAtomic, wfIpBgp4AnnounceEgpGateway=wfIpBgp4AnnounceEgpGateway, wfIpDvmrpAnnounceOspfRouterId=wfIpDvmrpAnnounceOspfRouterId, wfIpOspfAnnounceTag=wfIpOspfAnnounceTag, wfIpBgp4AnnounceEntry=wfIpBgp4AnnounceEntry, wfIpBgp3AnnounceEntry=wfIpBgp3AnnounceEntry, wfIpOspfAnnounceAutoTag=wfIpOspfAnnounceAutoTag, wfIpIisisAnnounceDisable=wfIpIisisAnnounceDisable, wfIpBgp3AnnounceOspfTag=wfIpBgp3AnnounceOspfTag, wfIpBgp3AnnounceEgpPeer=wfIpBgp3AnnounceEgpPeer, wfIpEgpAcceptAction=wfIpEgpAcceptAction, wfIpBgp3AnnounceDisable=wfIpBgp3AnnounceDisable, wfIpBgp4AcceptCommunityMatch=wfIpBgp4AcceptCommunityMatch, wfIpMospfAcceptInterface=wfIpMospfAcceptInterface, wfIpIisisAnnounceBgpNextHop=wfIpIisisAnnounceBgpNextHop, wfIpRipAnnounceEgpGateway=wfIpRipAnnounceEgpGateway, wfIpOspfAnnounceOspfTag=wfIpOspfAnnounceOspfTag, wfIpBgp3AnnounceOrigin=wfIpBgp3AnnounceOrigin, wfIpMospfAnnounceBgpPeerAs=wfIpMospfAnnounceBgpPeerAs, wfIpEgpAcceptAs=wfIpEgpAcceptAs, wfIpDvmrpInjectRtPrecedence=wfIpDvmrpInjectRtPrecedence, wfIpEgpAcceptEntry=wfIpEgpAcceptEntry, wfIpRipAnnounceEgpPeerAs=wfIpRipAnnounceEgpPeerAs, wfIpDvmrpInjectRtType=wfIpDvmrpInjectRtType, wfIpIisisAnnounceAction=wfIpIisisAnnounceAction, wfIpIgmpGroupPolicyTable=wfIpIgmpGroupPolicyTable, wfIpIisisAnnounceEgpPeerAs=wfIpIisisAnnounceEgpPeerAs, wfIpDvmrpInjectRtInInterface=wfIpDvmrpInjectRtInInterface, wfIpEgpAcceptIndex=wfIpEgpAcceptIndex, wfIpBgp4AcceptAction=wfIpBgp4AcceptAction, wfIpRipAcceptApplyMask=wfIpRipAcceptApplyMask, wfIpRipAnnounceRouteSource=wfIpRipAnnounceRouteSource, wfIpEgpAcceptInject=wfIpEgpAcceptInject, wfIpRipAnnounceExtRouteSource=wfIpRipAnnounceExtRouteSource, wfIpMospfAcceptApplyMask=wfIpMospfAcceptApplyMask, wfMTMStaticFwdAction=wfMTMStaticFwdAction, wfIpIisisAnnounceIisisRouterId=wfIpIisisAnnounceIisisRouterId, wfIpOspfAnnounceDelete=wfIpOspfAnnounceDelete, wfIpBgp4AnnounceEgpPeer=wfIpBgp4AnnounceEgpPeer, wfIpEgpAnnounceEgpPeerAs=wfIpEgpAnnounceEgpPeerAs, wfIpRipAnnounceBgpNextHop=wfIpRipAnnounceBgpNextHop, wfIpMospfAnnounceEgpPeer=wfIpMospfAnnounceEgpPeer, wfIpIisisAcceptPreference=wfIpIisisAcceptPreference, wfIpOspfAnnounceNssaPropagate=wfIpOspfAnnounceNssaPropagate, wfIpMospfAnnounceDisable=wfIpMospfAnnounceDisable, wfIpOspfAnnounceDisable=wfIpOspfAnnounceDisable, wfIpBgp4AnnounceTable=wfIpBgp4AnnounceTable, wfIpRipAnnounceIndex=wfIpRipAnnounceIndex, wfMTMStaticFwdIndex=wfMTMStaticFwdIndex, wfIpBgp4AcceptName=wfIpBgp4AcceptName, wfIpIisisAnnounceExtRouteSource=wfIpIisisAnnounceExtRouteSource, wfIpIgmpGroupPolicyPrecedence=wfIpIgmpGroupPolicyPrecedence, wfIpBgp4AnnounceMultiExitDisc=wfIpBgp4AnnounceMultiExitDisc, wfIpBgp3AcceptTable=wfIpBgp3AcceptTable, wfIpOspfAnnounceAdvertise=wfIpOspfAnnounceAdvertise, wfIpEgpAnnounceEgpPeer=wfIpEgpAnnounceEgpPeer, wfIpIgmpGroupPolicySources=wfIpIgmpGroupPolicySources, wfIpDvmrpAnnounceRipInterface=wfIpDvmrpAnnounceRipInterface, wfIpBgp4AcceptRFDampeningTemplate=wfIpBgp4AcceptRFDampeningTemplate, wfIpIisisAnnounceTable=wfIpIisisAnnounceTable, wfIpEgpAnnounceRouteSource=wfIpEgpAnnounceRouteSource, wfIpOspfAnnounceRipInterface=wfIpOspfAnnounceRipInterface, wfIpOspfAcceptName=wfIpOspfAcceptName, wfMTMStaticFwdPreference=wfMTMStaticFwdPreference, wfIpDvmrpAnnounceMetric=wfIpDvmrpAnnounceMetric, wfIpIisisAnnounceRipInterface=wfIpIisisAnnounceRipInterface, wfIpIisisAnnounceAutoTag=wfIpIisisAnnounceAutoTag, wfIpIisisAnnounceIndex=wfIpIisisAnnounceIndex, wfIpDvmrpAnnounceInterface=wfIpDvmrpAnnounceInterface, wfIpDvmrpAcceptAction=wfIpDvmrpAcceptAction, wfIpRipAcceptPreference=wfIpRipAcceptPreference, wfIpIisisAnnounceEgpGateway=wfIpIisisAnnounceEgpGateway, wfIpMospfAnnounceIndex=wfIpMospfAnnounceIndex, wfIpDvmrpAnnounceBgpPeer=wfIpDvmrpAnnounceBgpPeer, wfIpDvmrpInjectRtInject=wfIpDvmrpInjectRtInject, wfIpBgp4AcceptLocalPref=wfIpBgp4AcceptLocalPref, wfIpRipAnnounceAction=wfIpRipAnnounceAction, wfIpDvmrpAnnounceCircuits=wfIpDvmrpAnnounceCircuits, wfIpBgp4AnnounceOspfType=wfIpBgp4AnnounceOspfType, wfIpEgpAcceptDisable=wfIpEgpAcceptDisable, wfIpIisisAnnounceEgpPeer=wfIpIisisAnnounceEgpPeer, wfIpIisisAnnounceRouteSource=wfIpIisisAnnounceRouteSource, wfIpDvmrpAcceptNetworks=wfIpDvmrpAcceptNetworks, wfIpEgpAnnounceBgpNextHop=wfIpEgpAnnounceBgpNextHop, wfIpIgmpGroupPolicyPreference=wfIpIgmpGroupPolicyPreference, wfIpDvmrpAnnounceAdvertise=wfIpDvmrpAnnounceAdvertise, wfIpRipAnnounceRipGateway=wfIpRipAnnounceRipGateway, wfIpOspfAcceptInject=wfIpOspfAcceptInject, wfIpEgpAnnounceOspfType=wfIpEgpAnnounceOspfType, wfIpBgp3AnnounceBgpNextHop=wfIpBgp3AnnounceBgpNextHop, wfIpIgmpGroupPolicyGroups=wfIpIgmpGroupPolicyGroups, wfIpBgp4AnnounceCommunity=wfIpBgp4AnnounceCommunity, wfIpBgp4AcceptPreference=wfIpBgp4AcceptPreference, wfIpMospfAcceptDisable=wfIpMospfAcceptDisable, wfIpRipAcceptNetworks=wfIpRipAcceptNetworks, wfIpEgpAcceptPreference=wfIpEgpAcceptPreference, wfIpBgp3AcceptRouteOrigin=wfIpBgp3AcceptRouteOrigin, wfIpIisisAcceptAction=wfIpIisisAcceptAction, wfIpBgp3AnnounceRouteSource=wfIpBgp3AnnounceRouteSource, wfIpMospfAnnounceNetworks=wfIpMospfAnnounceNetworks, wfIpRipAcceptDelete=wfIpRipAcceptDelete, wfIpIisisAnnounceType=wfIpIisisAnnounceType, wfIpBgp4AcceptBgp4Preference=wfIpBgp4AcceptBgp4Preference, wfMTMStaticForwardMode=wfMTMStaticForwardMode, wfIpRipAnnouncePrecedence=wfIpRipAnnouncePrecedence, wfIpRipAnnounceDelete=wfIpRipAnnounceDelete, wfIpMospfAnnounceBgpNextHop=wfIpMospfAnnounceBgpNextHop, wfIpIisisAcceptDelete=wfIpIisisAcceptDelete, wfIpOspfAnnounceOspfRouterId=wfIpOspfAnnounceOspfRouterId, wfIpBgp4AnnounceAdvertise=wfIpBgp4AnnounceAdvertise, wfMTMStaticFwdEntry=wfMTMStaticFwdEntry, wfIpBgp3AcceptCommunityMatch=wfIpBgp3AcceptCommunityMatch, wfIpRipAnnounceBgpPeerAs=wfIpRipAnnounceBgpPeerAs, wfIpEgpAnnounceOspfTag=wfIpEgpAnnounceOspfTag, wfIpBgp3AnnounceRipInterface=wfIpBgp3AnnounceRipInterface, wfIpOspfAnnounceEgpPeer=wfIpOspfAnnounceEgpPeer, wfIpRipAnnounceBgpPeer=wfIpRipAnnounceBgpPeer, wfIpIisisAcceptInject=wfIpIisisAcceptInject, wfIpEgpAnnounceInterface=wfIpEgpAnnounceInterface, wfIpMospfAnnounceEgpGateway=wfIpMospfAnnounceEgpGateway, wfIpRipAnnounceAdvertise=wfIpRipAnnounceAdvertise, wfMTMStaticFwdGroups=wfMTMStaticFwdGroups, wfIpDvmrpAnnounceOspfTag=wfIpDvmrpAnnounceOspfTag, wfIpBgp3AnnounceBgpPeerAs=wfIpBgp3AnnounceBgpPeerAs, wfIpOspfAcceptPreference=wfIpOspfAcceptPreference, wfIpBgp3AnnounceExtRouteSource=wfIpBgp3AnnounceExtRouteSource, wfIpIgmpGroupPolicyCircuits=wfIpIgmpGroupPolicyCircuits, wfIpDvmrpAcceptTable=wfIpDvmrpAcceptTable, wfIpMospfAcceptName=wfIpMospfAcceptName, wfIpEgpAcceptName=wfIpEgpAcceptName, wfIpMospfAcceptTable=wfIpMospfAcceptTable, wfIpBgp4AcceptPeerAs=wfIpBgp4AcceptPeerAs, wfMTMStaticForwardInCircuits=wfMTMStaticForwardInCircuits, wfIpMospfAnnounceRouteSource=wfIpMospfAnnounceRouteSource, wfIpEgpAnnounceIndex=wfIpEgpAnnounceIndex, wfIpOspfAnnounceType=wfIpOspfAnnounceType, wfIpDvmrpAcceptName=wfIpDvmrpAcceptName, wfIpDvmrpAcceptDelete=wfIpDvmrpAcceptDelete, wfIpEgpAnnouncePrecedence=wfIpEgpAnnouncePrecedence, wfIpRipAnnounceEgpPeer=wfIpRipAnnounceEgpPeer, wfIpMospfAnnouncePrecedence=wfIpMospfAnnouncePrecedence, wfIpDvmrpAcceptTunnels=wfIpDvmrpAcceptTunnels, wfIpBgp3AnnounceAdvertise=wfIpBgp3AnnounceAdvertise, wfIpRipAnnounceRipInterface=wfIpRipAnnounceRipInterface, wfIpMospfAnnounceOspfTag=wfIpMospfAnnounceOspfTag, wfIpBgp4AnnounceName=wfIpBgp4AnnounceName, wfMTMStaticFwdOutCircuits=wfMTMStaticFwdOutCircuits, wfIpMospfAnnounceBgpPeer=wfIpMospfAnnounceBgpPeer, wfIpIisisAcceptType=wfIpIisisAcceptType, wfIpOspfAnnounceTable=wfIpOspfAnnounceTable, wfIpDvmrpInjectRtTable=wfIpDvmrpInjectRtTable, wfIpDvmrpInjectRtIndex=wfIpDvmrpInjectRtIndex, wfIpEgpAcceptPeer=wfIpEgpAcceptPeer, wfIpBgp3AnnounceRipGateway=wfIpBgp3AnnounceRipGateway, wfIpOspfAcceptTag=wfIpOspfAcceptTag, wfIpRipAcceptInterface=wfIpRipAcceptInterface, wfIpDvmrpInjectRtMetric=wfIpDvmrpInjectRtMetric, wfIpIisisAnnounceMetric=wfIpIisisAnnounceMetric, wfMTMStaticForwardSources=wfMTMStaticForwardSources, wfIpMospfAnnounceOspfRouterId=wfIpMospfAnnounceOspfRouterId, wfIpDvmrpAnnounceRouteSource=wfIpDvmrpAnnounceRouteSource, wfIpBgp3AcceptPrecedence=wfIpBgp3AcceptPrecedence, wfIpIisisAnnounceAdvertise=wfIpIisisAnnounceAdvertise, wfIpIisisAnnounceTag=wfIpIisisAnnounceTag, wfIpBgp4AcceptPrecedence=wfIpBgp4AcceptPrecedence, wfIpBgp4AcceptCommunityAction=wfIpBgp4AcceptCommunityAction, wfIpDvmrpAnnouncePrecedence=wfIpDvmrpAnnouncePrecedence, wfIpOspfAnnounceBgpPeer=wfIpOspfAnnounceBgpPeer, wfIpDvmrpAcceptEntry=wfIpDvmrpAcceptEntry, wfMTMStaticForwardPrecedence=wfMTMStaticForwardPrecedence, wfIpOspfAnnounceAction=wfIpOspfAnnounceAction, wfIpBgp3AnnounceIndex=wfIpBgp3AnnounceIndex, wfIpEgpAnnounceExtRouteSource=wfIpEgpAnnounceExtRouteSource, wfIpBgp3AnnounceBgpPeer=wfIpBgp3AnnounceBgpPeer, wfIpBgp3AnnounceTable=wfIpBgp3AnnounceTable, wfIpDvmrpAnnounceTunnels=wfIpDvmrpAnnounceTunnels, wfIpDvmrpInjectRtDelete=wfIpDvmrpInjectRtDelete, wfIpBgp3AnnouncePrecedence=wfIpBgp3AnnouncePrecedence, wfIpRipAcceptPrecedence=wfIpRipAcceptPrecedence, wfIpDvmrpInjectRtAction=wfIpDvmrpInjectRtAction, wfIpBgp4AnnounceAsPrepend=wfIpBgp4AnnounceAsPrepend, wfIpIisisAcceptPrecedence=wfIpIisisAcceptPrecedence, wfIpEgpAnnounceDelete=wfIpEgpAnnounceDelete, wfMTMStaticForwardAction=wfMTMStaticForwardAction, wfIpBgp4AnnouncePeer=wfIpBgp4AnnouncePeer, wfIpEgpAnnounceEntry=wfIpEgpAnnounceEntry, wfIpDvmrpAnnounceEgpPeerAs=wfIpDvmrpAnnounceEgpPeerAs, wfIpMospfAcceptDelete=wfIpMospfAcceptDelete, wfMTMStaticFwdDelete=wfMTMStaticFwdDelete, wfIpDvmrpAcceptInjectMetric=wfIpDvmrpAcceptInjectMetric, wfIpBgp4AnnounceLocalPref=wfIpBgp4AnnounceLocalPref, wfIpEgpAnnounceRipInterface=wfIpEgpAnnounceRipInterface, wfIpIisisAnnounceName=wfIpIisisAnnounceName)
mibBuilder.exportSymbols("Wellfleet-IPPOLICY-MIB", wfIpDvmrpAnnounceBgpNextHop=wfIpDvmrpAnnounceBgpNextHop, wfIpBgp3AcceptOrigAs=wfIpBgp3AcceptOrigAs, wfIpOspfAnnouncePrecedence=wfIpOspfAnnouncePrecedence, wfIpBgp3AcceptName=wfIpBgp3AcceptName, wfIpMospfAnnounceName=wfIpMospfAnnounceName, wfIpEgpAcceptDelete=wfIpEgpAcceptDelete, wfIpRipAcceptAction=wfIpRipAcceptAction, wfMTMStaticForwardInject=wfMTMStaticForwardInject, wfIpDvmrpAnnounceEntry=wfIpDvmrpAnnounceEntry, wfIpIisisAcceptName=wfIpIisisAcceptName, wfIpIisisAcceptDisable=wfIpIisisAcceptDisable, wfIpOspfAcceptDisable=wfIpOspfAcceptDisable, wfIpBgp3AnnounceCommunityAction=wfIpBgp3AnnounceCommunityAction, wfIpEgpAcceptNetworks=wfIpEgpAcceptNetworks, wfIpBgp4AcceptPeerAddress=wfIpBgp4AcceptPeerAddress, wfIpEgpAnnounceBgpPeer=wfIpEgpAnnounceBgpPeer, wfIpBgp3AnnounceEgpPeerAs=wfIpBgp3AnnounceEgpPeerAs, wfIpIgmpGroupPolicyDelete=wfIpIgmpGroupPolicyDelete, wfIpBgp4AnnounceOrigin=wfIpBgp4AnnounceOrigin, wfIpOspfAnnounceName=wfIpOspfAnnounceName, wfIpRipAcceptEntry=wfIpRipAcceptEntry, wfIpBgp3AnnounceDelete=wfIpBgp3AnnounceDelete, wfIpEgpAnnounceMetric=wfIpEgpAnnounceMetric, wfMTMStaticForwardName=wfMTMStaticForwardName, wfIpIgmpGroupPolicyInject=wfIpIgmpGroupPolicyInject, wfIpBgp3AcceptAsWeightClass=wfIpBgp3AcceptAsWeightClass, wfIpRipAcceptName=wfIpRipAcceptName, wfIpMospfAnnounceAdvertise=wfIpMospfAnnounceAdvertise, wfIpDvmrpAcceptPrecedence=wfIpDvmrpAcceptPrecedence, wfIpBgp3AcceptBgp3Preference=wfIpBgp3AcceptBgp3Preference, wfIpIgmpGroupPolicyIndex=wfIpIgmpGroupPolicyIndex, wfIpDvmrpAnnounceOspfType=wfIpDvmrpAnnounceOspfType, wfIpDvmrpAnnounceEgpGateway=wfIpDvmrpAnnounceEgpGateway, wfIpRipAnnounceTable=wfIpRipAnnounceTable, wfIpBgp4AnnounceLocalPrefOverride=wfIpBgp4AnnounceLocalPrefOverride, wfIpIisisAnnounceEntry=wfIpIisisAnnounceEntry, wfIpRipAcceptIndex=wfIpRipAcceptIndex, wfIpMospfAnnounceExtRouteSource=wfIpMospfAnnounceExtRouteSource, wfIpBgp4AcceptTable=wfIpBgp4AcceptTable, wfIpOspfAnnounceEgpPeerAs=wfIpOspfAnnounceEgpPeerAs, wfIpIisisAcceptNetworks=wfIpIisisAcceptNetworks, wfIpBgp4AnnounceBgpPeerAs=wfIpBgp4AnnounceBgpPeerAs, wfIpDvmrpInjectRtEntry=wfIpDvmrpInjectRtEntry, wfIpEgpAnnounceAdvertise=wfIpEgpAnnounceAdvertise, wfIpEgpAnnounceNetworks=wfIpEgpAnnounceNetworks, wfIpBgp4AnnounceOspfRouterId=wfIpBgp4AnnounceOspfRouterId, wfIpBgp3AcceptNetworks=wfIpBgp3AcceptNetworks, wfIpMospfAcceptPreference=wfIpMospfAcceptPreference, wfMTMStaticFwdInCircuits=wfMTMStaticFwdInCircuits, wfIpRipAnnounceDisable=wfIpRipAnnounceDisable, wfIpOspfAcceptEntry=wfIpOspfAcceptEntry, wfIpBgp3AcceptPreference=wfIpBgp3AcceptPreference, wfIpMospfAcceptInject=wfIpMospfAcceptInject, wfIpBgp4AnnounceCommunityMatch=wfIpBgp4AnnounceCommunityMatch, wfIpIisisAnnounceNetworks=wfIpIisisAnnounceNetworks, wfIpIgmpGroupPolicyName=wfIpIgmpGroupPolicyName, wfIpIisisAnnounceIisisType=wfIpIisisAnnounceIisisType, wfIpDvmrpAcceptIndex=wfIpDvmrpAcceptIndex, wfMTMStaticFwdName=wfMTMStaticFwdName, wfIpBgp3AnnounceOspfType=wfIpBgp3AnnounceOspfType, wfIpMospfAnnounceEgpPeerAs=wfIpMospfAnnounceEgpPeerAs, wfIpBgp3AcceptIndex=wfIpBgp3AcceptIndex, wfIpEgpAnnounceRipGateway=wfIpEgpAnnounceRipGateway, wfIpIisisAnnouncePrecedence=wfIpIisisAnnouncePrecedence, wfIpOspfAnnounceBgpPeerAs=wfIpOspfAnnounceBgpPeerAs, wfIpDvmrpAcceptPreference=wfIpDvmrpAcceptPreference, wfIpEgpAnnounceOspfRouterId=wfIpEgpAnnounceOspfRouterId, wfMTMStaticForwardOutCircuits=wfMTMStaticForwardOutCircuits, wfIpBgp3AnnouncePeerAs=wfIpBgp3AnnouncePeerAs, wfIpBgp3AcceptDelete=wfIpBgp3AcceptDelete, wfIpBgp4AnnounceAsPath=wfIpBgp4AnnounceAsPath, wfIpBgp4AcceptDelete=wfIpBgp4AcceptDelete, wfIpBgp4AcceptAsWeightClass=wfIpBgp4AcceptAsWeightClass, wfIpBgp3AnnounceAsPath=wfIpBgp3AnnounceAsPath, wfMTMStaticFwdPrecedence=wfMTMStaticFwdPrecedence, wfMTMStaticForwardGroups=wfMTMStaticForwardGroups, wfIpMospfAcceptGateway=wfIpMospfAcceptGateway, wfIpIgmpGroupPolicyEntry=wfIpIgmpGroupPolicyEntry, wfIpBgp4AcceptUseMultiExitDisc=wfIpBgp4AcceptUseMultiExitDisc, wfIpIisisAnnounceIisisTag=wfIpIisisAnnounceIisisTag, wfIpRipAcceptDisable=wfIpRipAcceptDisable, wfIpIgmpGroupPolicyAction=wfIpIgmpGroupPolicyAction, wfIpBgp4AcceptInject=wfIpBgp4AcceptInject, wfIpMospfAnnounceAction=wfIpMospfAnnounceAction, wfIpIisisAnnounceRipGateway=wfIpIisisAnnounceRipGateway, wfIpRipAnnounceEntry=wfIpRipAnnounceEntry, wfIpDvmrpAnnounceDisable=wfIpDvmrpAnnounceDisable, wfIpOspfAnnounceExtRouteSource=wfIpOspfAnnounceExtRouteSource, wfIpEgpAcceptPrecedence=wfIpEgpAcceptPrecedence, wfIpBgp4AcceptMultiExitDisc=wfIpBgp4AcceptMultiExitDisc, wfIpDvmrpAcceptGateway=wfIpDvmrpAcceptGateway, wfIpEgpAcceptTable=wfIpEgpAcceptTable, wfIpBgp4AnnounceEgpPeerAs=wfIpBgp4AnnounceEgpPeerAs, wfIpBgp3AnnounceInterAsMetric=wfIpBgp3AnnounceInterAsMetric, wfIpOspfAcceptIndex=wfIpOspfAcceptIndex, wfIpMospfAnnounceDelete=wfIpMospfAnnounceDelete, wfIpBgp4AnnounceBgpNextHop=wfIpBgp4AnnounceBgpNextHop, wfIpMospfAcceptPrecedence=wfIpMospfAcceptPrecedence, wfIpBgp4AnnounceAction=wfIpBgp4AnnounceAction, wfIpMospfAnnounceRipInterface=wfIpMospfAnnounceRipInterface, wfIpOspfAnnounceEgpGateway=wfIpOspfAnnounceEgpGateway, wfIpIisisAnnounceBgpPeer=wfIpIisisAnnounceBgpPeer, wfIpDvmrpInjectRtPreference=wfIpDvmrpInjectRtPreference, wfIpOspfAcceptNetworks=wfIpOspfAcceptNetworks, wfIpBgp4AnnounceAsPatternMatch=wfIpBgp4AnnounceAsPatternMatch, wfIpDvmrpAnnounceEgpPeer=wfIpDvmrpAnnounceEgpPeer, wfIpRipAnnounceOspfTag=wfIpRipAnnounceOspfTag, wfIpIisisAnnounceBgpPeerAs=wfIpIisisAnnounceBgpPeerAs, wfIpMospfAcceptIndex=wfIpMospfAcceptIndex, wfIpBgp4AcceptCommunity=wfIpBgp4AcceptCommunity, wfIpEgpAnnounceDisable=wfIpEgpAnnounceDisable, wfMTMStaticForwardTable=wfMTMStaticForwardTable, wfIpBgp4AnnounceExtRouteSource=wfIpBgp4AnnounceExtRouteSource, wfIpDvmrpInjectRtDisable=wfIpDvmrpInjectRtDisable, wfIpBgp3AnnounceUseMetric=wfIpBgp3AnnounceUseMetric, wfIpBgp4AnnounceBgpPeer=wfIpBgp4AnnounceBgpPeer, wfIpOspfAcceptPrecedence=wfIpOspfAcceptPrecedence, wfIpDvmrpAnnounceName=wfIpDvmrpAnnounceName, wfIpOspfAcceptDelete=wfIpOspfAcceptDelete, wfIpBgp4AcceptAsPrepend=wfIpBgp4AcceptAsPrepend, wfIpDvmrpAcceptDisable=wfIpDvmrpAcceptDisable, wfIpEgpAnnouncePeer=wfIpEgpAnnouncePeer, wfIpBgp3AnnounceNextHop=wfIpBgp3AnnounceNextHop, wfIpDvmrpAcceptInject=wfIpDvmrpAcceptInject, wfIpBgp4AcceptEntry=wfIpBgp4AcceptEntry, wfIpOspfAnnounceRouteSource=wfIpOspfAnnounceRouteSource, wfIpBgp4AnnounceUseMultiExitDisc=wfIpBgp4AnnounceUseMultiExitDisc, wfIpRipAnnounceOspfType=wfIpRipAnnounceOspfType, wfIpMospfAcceptEntry=wfIpMospfAcceptEntry, wfMTMStaticFwdSources=wfMTMStaticFwdSources, wfIpEgpAnnounceAction=wfIpEgpAnnounceAction, wfIpDvmrpAnnounceBgpPeerAs=wfIpDvmrpAnnounceBgpPeerAs, wfIpBgp4AnnounceIndex=wfIpBgp4AnnounceIndex, wfIpDvmrpAnnounceAction=wfIpDvmrpAnnounceAction, wfIpDvmrpAcceptApplyMask=wfIpDvmrpAcceptApplyMask, wfIpBgp4AnnounceRipInterface=wfIpBgp4AnnounceRipInterface, wfIpBgp3AnnounceAction=wfIpBgp3AnnounceAction, wfIpEgpAnnounceName=wfIpEgpAnnounceName, wfMTMStaticFwdDisable=wfMTMStaticFwdDisable, wfIpBgp4AnnounceRouteSource=wfIpBgp4AnnounceRouteSource, wfIpDvmrpInjectRtNetworks=wfIpDvmrpInjectRtNetworks, wfIpBgp4AcceptDisable=wfIpBgp4AcceptDisable, wfIpBgp4AcceptRFDampeningEnable=wfIpBgp4AcceptRFDampeningEnable, wfIpIisisAcceptIndex=wfIpIisisAcceptIndex, wfIpOspfAcceptTable=wfIpOspfAcceptTable, wfIpBgp4AcceptOrigAs=wfIpBgp4AcceptOrigAs, wfMTMStaticFwdMode=wfMTMStaticFwdMode, wfIpRipAcceptGateway=wfIpRipAcceptGateway, wfIpIgmpGroupPolicyDisable=wfIpIgmpGroupPolicyDisable, wfIpOspfAnnounceNetworks=wfIpOspfAnnounceNetworks, wfIpBgp4AcceptRouteOrigin=wfIpBgp4AcceptRouteOrigin, wfIpBgp3AnnounceOspfRouterId=wfIpBgp3AnnounceOspfRouterId, wfIpBgp3AcceptEntry=wfIpBgp3AcceptEntry, wfIpOspfAnnounceMetric=wfIpOspfAnnounceMetric, wfIpRipAnnounceNetworks=wfIpRipAnnounceNetworks, wfIpBgp3AcceptInject=wfIpBgp3AcceptInject, wfIpBgp4AnnounceNextHop=wfIpBgp4AnnounceNextHop, wfIpOspfAnnounceBgpNextHop=wfIpOspfAnnounceBgpNextHop, wfIpMospfAnnounceOspfType=wfIpMospfAnnounceOspfType, wfIpOspfAnnounceEntry=wfIpOspfAnnounceEntry, wfIpMospfAcceptNetworks=wfIpMospfAcceptNetworks)
