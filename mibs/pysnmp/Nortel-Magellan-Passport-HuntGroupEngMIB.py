#
# PySNMP MIB module Nortel-Magellan-Passport-HuntGroupEngMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-HuntGroupEngMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
lpEngIndex, lpIndex, lpEng = mibBuilder.importSymbols("Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex", "lpIndex", "lpEng")
Unsigned32, StorageType, RowStatus, DisplayString, Counter32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Unsigned32", "StorageType", "RowStatus", "DisplayString", "Counter32")
NonReplicated, = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Gauge32, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, ModuleIdentity, MibIdentifier, Bits, Integer32, NotificationType, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "ModuleIdentity", "MibIdentifier", "Bits", "Integer32", "NotificationType", "Counter32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
huntGroupEngMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131))
lpEngHgs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4))
lpEngHgsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1), )
if mibBuilder.loadTexts: lpEngHgsRowStatusTable.setStatus('mandatory')
lpEngHgsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-HuntGroupEngMIB", "lpEngHgsIndex"))
if mibBuilder.loadTexts: lpEngHgsRowStatusEntry.setStatus('mandatory')
lpEngHgsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngHgsRowStatus.setStatus('mandatory')
lpEngHgsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngHgsComponentName.setStatus('mandatory')
lpEngHgsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngHgsStorageType.setStatus('mandatory')
lpEngHgsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngHgsIndex.setStatus('mandatory')
lpEngHgsOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 10), )
if mibBuilder.loadTexts: lpEngHgsOperationalTable.setStatus('mandatory')
lpEngHgsOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-HuntGroupEngMIB", "lpEngHgsIndex"))
if mibBuilder.loadTexts: lpEngHgsOperationalEntry.setStatus('mandatory')
lpEngHgsHuntGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngHgsHuntGroups.setStatus('mandatory')
lpEngHgsHuntAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngHgsHuntAttempts.setStatus('mandatory')
huntGroupEngGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 1))
huntGroupEngGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 1, 5))
huntGroupEngGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 1, 5, 2))
huntGroupEngGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 1, 5, 2, 2))
huntGroupEngCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 3))
huntGroupEngCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 3, 5))
huntGroupEngCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 3, 5, 2))
huntGroupEngCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-HuntGroupEngMIB", lpEngHgsComponentName=lpEngHgsComponentName, lpEngHgsIndex=lpEngHgsIndex, lpEngHgs=lpEngHgs, huntGroupEngCapabilities=huntGroupEngCapabilities, lpEngHgsRowStatusEntry=lpEngHgsRowStatusEntry, lpEngHgsOperationalTable=lpEngHgsOperationalTable, huntGroupEngGroup=huntGroupEngGroup, huntGroupEngGroupBE01A=huntGroupEngGroupBE01A, huntGroupEngMIB=huntGroupEngMIB, huntGroupEngGroupBE01=huntGroupEngGroupBE01, lpEngHgsRowStatus=lpEngHgsRowStatus, huntGroupEngGroupBE=huntGroupEngGroupBE, huntGroupEngCapabilitiesBE01=huntGroupEngCapabilitiesBE01, lpEngHgsOperationalEntry=lpEngHgsOperationalEntry, huntGroupEngCapabilitiesBE=huntGroupEngCapabilitiesBE, lpEngHgsHuntAttempts=lpEngHgsHuntAttempts, lpEngHgsRowStatusTable=lpEngHgsRowStatusTable, lpEngHgsStorageType=lpEngHgsStorageType, huntGroupEngCapabilitiesBE01A=huntGroupEngCapabilitiesBE01A, lpEngHgsHuntGroups=lpEngHgsHuntGroups)
