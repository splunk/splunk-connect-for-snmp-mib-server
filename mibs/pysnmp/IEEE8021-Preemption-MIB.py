#
# PySNMP MIB module IEEE8021-Preemption-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/tin/Dev/mibs.snmplabs.com/asn1/IEEE8021-Preemption-MIB
# Produced by pysmi-0.3.4 at Fri Jan 31 21:31:59 2020
# On host bier platform Linux version 5.4.0-3-amd64 by user tin
# Using Python version 3.7.6 (default, Jan 19 2020, 22:34:52) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ieee8021BridgeBaseComponentId, ieee8021BridgeBasePort = mibBuilder.importSymbols("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseComponentId", "ieee8021BridgeBasePort")
IEEE8021PriorityValue, ieee802dot1mibs = mibBuilder.importSymbols("IEEE8021-TC-MIB", "IEEE8021PriorityValue", "ieee802dot1mibs")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, NotificationType, Bits, ModuleIdentity, Unsigned32, Integer32, TimeTicks, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "Bits", "ModuleIdentity", "Unsigned32", "Integer32", "TimeTicks", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "Counter64", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ieee8021PreemptionMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 29))
ieee8021PreemptionMib.setRevisions(('2018-06-21 00:00', '2016-08-15 00:00',))
if mibBuilder.loadTexts: ieee8021PreemptionMib.setLastUpdated('201806210000Z')
if mibBuilder.loadTexts: ieee8021PreemptionMib.setOrganization('IEEE 802.1 Working Group')
ieee8021PreemptionNotifications = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 29, 0))
ieee8021PreemptionObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 29, 1))
ieee8021PreemptionConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 29, 2))
ieee8021PreemptionParameters = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 29, 1, 1))
ieee8021PreemptionParameterTable = MibTable((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 1), )
if mibBuilder.loadTexts: ieee8021PreemptionParameterTable.setStatus('current')
ieee8021PreemptionParameterEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-Preemption-MIB", "ieee8021PreemptionPriority"))
if mibBuilder.loadTexts: ieee8021PreemptionParameterEntry.setStatus('current')
ieee8021PreemptionPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 1, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021PreemptionPriority.setStatus('current')
ieee8021FramePreemptionAdminStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("express", 1), ("preemptible", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021FramePreemptionAdminStatus.setStatus('current')
ieee8021PreemptionConfigTable = MibTable((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 2), )
if mibBuilder.loadTexts: ieee8021PreemptionConfigTable.setStatus('current')
ieee8021PreemptionConfigEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 2, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"))
if mibBuilder.loadTexts: ieee8021PreemptionConfigEntry.setStatus('current')
ieee8021FramePreemptionHoldAdvance = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021FramePreemptionHoldAdvance.setStatus('current')
ieee8021FramePreemptionReleaseAdvance = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021FramePreemptionReleaseAdvance.setStatus('current')
ieee8021FramePreemptionActive = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021FramePreemptionActive.setStatus('current')
ieee8021FramePreemptionHoldRequest = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 29, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hold", 1), ("release", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021FramePreemptionHoldRequest.setStatus('current')
ieee8021PreemptionCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 29, 2, 1))
ieee8021PreemptionGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 29, 2, 2))
ieee8021PreemptionGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 29, 2, 2, 1)).setObjects(("IEEE8021-Preemption-MIB", "ieee8021FramePreemptionAdminStatus"), ("IEEE8021-Preemption-MIB", "ieee8021FramePreemptionHoldAdvance"), ("IEEE8021-Preemption-MIB", "ieee8021FramePreemptionReleaseAdvance"), ("IEEE8021-Preemption-MIB", "ieee8021FramePreemptionActive"), ("IEEE8021-Preemption-MIB", "ieee8021FramePreemptionHoldRequest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021PreemptionGroup = ieee8021PreemptionGroup.setStatus('current')
ieee8021PreemptionCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 29, 2, 1, 1)).setObjects(("IEEE8021-Preemption-MIB", "ieee8021PreemptionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021PreemptionCompliance = ieee8021PreemptionCompliance.setStatus('current')
mibBuilder.exportSymbols("IEEE8021-Preemption-MIB", ieee8021PreemptionConfigEntry=ieee8021PreemptionConfigEntry, ieee8021PreemptionCompliance=ieee8021PreemptionCompliance, ieee8021PreemptionConformance=ieee8021PreemptionConformance, ieee8021FramePreemptionActive=ieee8021FramePreemptionActive, ieee8021PreemptionMib=ieee8021PreemptionMib, ieee8021FramePreemptionReleaseAdvance=ieee8021FramePreemptionReleaseAdvance, ieee8021FramePreemptionAdminStatus=ieee8021FramePreemptionAdminStatus, ieee8021PreemptionConfigTable=ieee8021PreemptionConfigTable, ieee8021PreemptionParameterTable=ieee8021PreemptionParameterTable, ieee8021PreemptionGroup=ieee8021PreemptionGroup, ieee8021PreemptionParameterEntry=ieee8021PreemptionParameterEntry, ieee8021PreemptionCompliances=ieee8021PreemptionCompliances, PYSNMP_MODULE_ID=ieee8021PreemptionMib, ieee8021PreemptionObjects=ieee8021PreemptionObjects, ieee8021FramePreemptionHoldRequest=ieee8021FramePreemptionHoldRequest, ieee8021PreemptionNotifications=ieee8021PreemptionNotifications, ieee8021PreemptionPriority=ieee8021PreemptionPriority, ieee8021FramePreemptionHoldAdvance=ieee8021FramePreemptionHoldAdvance, ieee8021PreemptionParameters=ieee8021PreemptionParameters, ieee8021PreemptionGroups=ieee8021PreemptionGroups)
