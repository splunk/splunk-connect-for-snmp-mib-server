#
# PySNMP MIB module T1-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/T1-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:07:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, ObjectIdentity, NotificationType, Bits, ModuleIdentity, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Counter64, MibIdentifier, Counter32, Integer32, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "NotificationType", "Bits", "ModuleIdentity", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Counter64", "MibIdentifier", "Counter32", "Integer32", "Unsigned32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1))
cdx6500PCTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1))
cdx6500PCTT1E1PortTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1))
cdx6500PSTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1))
cdx6500PSTT1E1PortTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25))
class DisplayString(OctetString):
    pass

class PhysicalPortNumber(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(49, 50)

class VirtualPortNumber(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(100, 255)

cdx6500PCTT1PortTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1))
cdx6500PPCTT1PortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1), )
if mibBuilder.loadTexts: cdx6500PPCTT1PortTable.setStatus('mandatory')
cdx6500PPCTT1PortEntry = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1), ).setIndexNames((0, "T1-OPT-MIB", "cdx6500T1CfgPortNumber"))
if mibBuilder.loadTexts: cdx6500PPCTT1PortEntry.setStatus('mandatory')
cdx6500T1CfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgPortNumber.setStatus('mandatory')
cdx6500T1CfgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(44))).clone(namedValues=NamedValues(("t1", 44)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgPortType.setStatus('mandatory')
cdx6500T1CfgFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("channelize", 1), ("isdn", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgFormat.setStatus('mandatory')
cdx6500T1CfgLineFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 100))).clone(namedValues=NamedValues(("esf", 1), ("sf", 4), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgLineFramingType.setStatus('mandatory')
cdx6500T1CfgLineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 100))).clone(namedValues=NamedValues(("b8zs", 1), ("b7zs", 2), ("ami", 3), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgLineCoding.setStatus('mandatory')
cdx6500T1CfgTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(131, 130, 129, 100))).clone(namedValues=NamedValues(("int", 131), ("rec", 130), ("node", 129), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgTransmitClock.setStatus('mandatory')
cdx6500T1CfgLineBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 100))).clone(namedValues=NamedValues(("lbo0", 1), ("lbo1", 2), ("lbo2", 3), ("lbo3", 4), ("lbo4", 5), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgLineBuildOut.setStatus('mandatory')
cdx6500T1CfgFacilityDataLink = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 2, 100))).clone(namedValues=NamedValues(("none", 1), ("ansi", 3), ("att", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgFacilityDataLink.setStatus('mandatory')
cdx6500T1CfgThresholdValueLES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueLES.setStatus('mandatory')
cdx6500T1CfgThresholdValueLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueLCV.setStatus('mandatory')
cdx6500T1CfgThresholdValuePCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValuePCV.setStatus('mandatory')
cdx6500T1CfgThresholdValueCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueCSS.setStatus('mandatory')
cdx6500T1CfgThresholdValueES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueES.setStatus('mandatory')
cdx6500T1CfgThresholdValueBES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueBES.setStatus('mandatory')
cdx6500T1CfgThresholdValueSES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueSES.setStatus('mandatory')
cdx6500T1CfgThresholdValueSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueSEFS.setStatus('mandatory')
cdx6500T1CfgThresholdValueUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueUAS.setStatus('mandatory')
cdx6500T1CfgThresholdValueDM = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgThresholdValueDM.setStatus('mandatory')
cdx6500T1CfgSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 100))).clone(namedValues=NamedValues(("att4ess", 1), ("att5ess", 2), ("ntDms100", 3), ("ntDms250", 4), ("md110Us", 5), ("md110", 6), ("siemens", 7), ("ntt", 8), ("unknown", 9), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgSwitchType.setStatus('mandatory')
cdx6500T1CfgVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 7, 9, 10, 11, 14, 100))).clone(namedValues=NamedValues(("att", 1), ("nt", 2), ("isdn2", 4), ("jate", 5), ("net5", 7), ("oneTr6", 9), ("vn3", 10), ("ccitt", 11), ("ts014", 14), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgVariant.setStatus('mandatory')
cdx6500T1CfgUserNetworkSide = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("user", 1), ("network", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgUserNetworkSide.setStatus('mandatory')
cdx6500T1CfgCallingIdMsbState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1CfgCallingIdMsbState.setStatus('mandatory')
cdx6500PPSTT1PortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1), )
if mibBuilder.loadTexts: cdx6500PPSTT1PortTable.setStatus('mandatory')
cdx6500PPSTT1PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1, 1), ).setIndexNames((0, "T1-OPT-MIB", "cdx6500T1StatPortNumber"))
if mibBuilder.loadTexts: cdx6500PPSTT1PortEntry.setStatus('mandatory')
cdx6500T1StatPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatPortNumber.setStatus('mandatory')
cdx6500T1StatTimeSinceLastResetType = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatTimeSinceLastResetType.setStatus('mandatory')
cdx6500T1StatPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(44))).clone(namedValues=NamedValues(("t1", 44)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatPortType.setStatus('mandatory')
cdx6500T1StatInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("dsx1", 1), ("ds1Csu", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatInterfaceType.setStatus('mandatory')
cdx6500T1StatPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatPortState.setStatus('mandatory')
cdx6500T1StatAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 100))).clone(namedValues=NamedValues(("none", 1), ("yellow", 2), ("blue", 3), ("red", 4), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatAlarmState.setStatus('mandatory')
cdx6500T1BoardHWRevAndPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1BoardHWRevAndPartNumber.setStatus('mandatory')
cdx6500T1StatDailyHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3), )
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryTable.setStatus('mandatory')
cdx6500T1StatDailyHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1), ).setIndexNames((0, "T1-OPT-MIB", "cdx6500T1StatDailyHistoryPortNumber"), (0, "T1-OPT-MIB", "cdx6500T1StatDailyHistoryInterval"))
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryEntry.setStatus('mandatory')
cdx6500T1StatDailyHistoryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryInterval.setStatus('mandatory')
cdx6500T1StatDailyHistoryLES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryLES.setStatus('mandatory')
cdx6500T1StatDailyHistoryLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryLCV.setStatus('mandatory')
cdx6500T1StatDailyHistoryPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryPCV.setStatus('mandatory')
cdx6500T1StatDailyHistoryCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryCSS.setStatus('mandatory')
cdx6500T1StatDailyHistoryES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryES.setStatus('mandatory')
cdx6500T1StatDailyHistoryBES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryBES.setStatus('mandatory')
cdx6500T1StatDailyHistorySES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistorySES.setStatus('mandatory')
cdx6500T1StatDailyHistorySEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistorySEFS.setStatus('mandatory')
cdx6500T1StatDailyHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryUAS.setStatus('mandatory')
cdx6500T1StatDailyHistoryDM = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryDM.setStatus('mandatory')
cdx6500T1StatDailyHistoryPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 3, 1, 12), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDailyHistoryPortNumber.setStatus('mandatory')
cdx6500T1StatABCDStateTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 5), )
if mibBuilder.loadTexts: cdx6500T1StatABCDStateTable.setStatus('mandatory')
cdx6500T1StatABCDStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 5, 1), ).setIndexNames((0, "T1-OPT-MIB", "cdx6500T1StatABCDStatePortNumber"), (0, "T1-OPT-MIB", "cdx6500T1StatABCDStateDS0ChannelNumber"))
if mibBuilder.loadTexts: cdx6500T1StatABCDStateEntry.setStatus('mandatory')
cdx6500T1StatABCDStateDS0ChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatABCDStateDS0ChannelNumber.setStatus('mandatory')
cdx6500T1StatABCDStateCurrentTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatABCDStateCurrentTxState.setStatus('deprecated')
cdx6500T1StatABCDStateCurrentRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatABCDStateCurrentRxState.setStatus('mandatory')
cdx6500T1StatABCDStatePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 5, 1, 4), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatABCDStatePortNumber.setStatus('mandatory')
cdx6500T1ISDNStatusTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7), )
if mibBuilder.loadTexts: cdx6500T1ISDNStatusTable.setStatus('mandatory')
cdx6500T1StatISDNStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1), ).setIndexNames((0, "T1-OPT-MIB", "cdx6500T1StatISDNStatusPortNumber"))
if mibBuilder.loadTexts: cdx6500T1StatISDNStatusEntry.setStatus('mandatory')
cdx6500T1StatISDNStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNStatusPortNumber.setStatus('mandatory')
cdx6500T1StatNumRxCallsSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatNumRxCallsSinceLastReset.setStatus('mandatory')
cdx6500T1StatNumRxCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatNumRxCallsRejected.setStatus('mandatory')
cdx6500T1StatRxLastCallFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 255))).clone(namedValues=NamedValues(("noFailureReported", 193), ("noAvailableVirtualPort", 194), ("securityViolation", 195), ("noResourcesAvailable", 196), ("callRejected", 197), ("invalidPhoneNumber", 198), ("outgoingCallRequestTimeout", 199), ("callCollision", 200), ("virtualPortNotAvailable", 201), ("invalidConfiguration", 202), ("na", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatRxLastCallFailureCause.setStatus('mandatory')
cdx6500T1StatRxLastCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatRxLastCalledNumber.setStatus('mandatory')
cdx6500T1StatRxLastCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatRxLastCallingNumber.setStatus('mandatory')
cdx6500T1StatRxMinCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatRxMinCallDuration.setStatus('mandatory')
cdx6500T1StatRxMaxCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatRxMaxCallDuration.setStatus('mandatory')
cdx6500T1StatRxAvgCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatRxAvgCallDuration.setStatus('mandatory')
cdx6500T1StatNumTxCallsSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatNumTxCallsSinceLastReset.setStatus('mandatory')
cdx6500T1StatNumTxCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatNumTxCallsRejected.setStatus('mandatory')
cdx6500T1StatTxLastCallFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 255))).clone(namedValues=NamedValues(("noFailureReported", 193), ("noAvailableVirtualPort", 194), ("securityViolation", 195), ("noResourcesAvailable", 196), ("callRejected", 197), ("invalidPhoneNumber", 198), ("outgoingCallRequestTimeout", 199), ("callCollision", 200), ("virtualPortNotAvailable", 201), ("invalidConfiguration", 202), ("na", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatTxLastCallFailureCause.setStatus('mandatory')
cdx6500T1StatTxLastCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatTxLastCalledNumber.setStatus('mandatory')
cdx6500T1StatTxLastCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatTxLastCallingNumber.setStatus('mandatory')
cdx6500T1StatTxMinCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatTxMinCallDuration.setStatus('mandatory')
cdx6500T1StatTxMaxCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatTxMaxCallDuration.setStatus('mandatory')
cdx6500T1StatTxAvgCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatTxAvgCallDuration.setStatus('mandatory')
cdx6500T1StatDchannelState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatDchannelState.setStatus('mandatory')
cdx6500T1ISDNCallSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9), )
if mibBuilder.loadTexts: cdx6500T1ISDNCallSummaryTable.setStatus('mandatory')
cdx6500T1StatISDNCallSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1), ).setIndexNames((0, "T1-OPT-MIB", "cdx6500T1StatISDNPortNumber"), (0, "T1-OPT-MIB", "cdx6500T1StatISDNBChannelNumber"))
if mibBuilder.loadTexts: cdx6500T1StatISDNCallSummaryEntry.setStatus('mandatory')
cdx6500T1StatISDNBChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNBChannelNumber.setStatus('mandatory')
cdx6500T1StatISDNBChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 100))).clone(namedValues=NamedValues(("idle", 1), ("ringing", 2), ("connected", 3), ("outOfService", 4), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNBChannelStatus.setStatus('mandatory')
cdx6500T1StatISDNCallDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 100))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("invalid", 3), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNCallDirection.setStatus('mandatory')
cdx6500T1StatISDNCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNCallingNumber.setStatus('mandatory')
cdx6500T1StatISDNCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNCalledNumber.setStatus('mandatory')
cdx6500T1StatISDNDS0Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("ds056k", 1), ("ds064k", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNDS0Rate.setStatus('mandatory')
cdx6500T1StatISDNVirtualPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNVirtualPortNumber.setStatus('mandatory')
cdx6500T1StatISDNTimeCallStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNTimeCallStarted.setStatus('mandatory')
cdx6500T1StatISDNPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 9, 1, 9), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatISDNPortNumber.setStatus('mandatory')
cdx6500T1StatLast24HoursReportTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11), )
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportTable.setStatus('mandatory')
cdx6500T1StatLast24HoursReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1), ).setIndexNames((0, "T1-OPT-MIB", "cdx6500T1StatLast24HoursReportPortNumber"))
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportEntry.setStatus('mandatory')
cdx6500T1StatLast24HoursReportPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportPortNumber.setStatus('mandatory')
cdx6500T1StatLast24HoursReportLES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportLES.setStatus('mandatory')
cdx6500T1StatLast24HoursReportLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportLCV.setStatus('mandatory')
cdx6500T1StatLast24HoursReportPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportPCV.setStatus('mandatory')
cdx6500T1StatLast24HoursReportCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportCSS.setStatus('mandatory')
cdx6500T1StatLast24HoursReportES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportES.setStatus('mandatory')
cdx6500T1StatLast24HoursReportBES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportBES.setStatus('mandatory')
cdx6500T1StatLast24HoursReportSES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportSES.setStatus('mandatory')
cdx6500T1StatLast24HoursReportSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportSEFS.setStatus('mandatory')
cdx6500T1StatLast24HoursReportUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 11, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatLast24HoursReportUAS.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13), )
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportTable.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1), ).setIndexNames((0, "T1-OPT-MIB", "cdx6500T1StatCurrent15MinutesReportPortNumber"))
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportEntry.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportPortNumber.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportTimeElapsed.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportLES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportLES.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportLCV.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportPCV.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportCSS.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportES.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportBES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportBES.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportSES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportSES.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportSEFS.setStatus('mandatory')
cdx6500T1StatCurrent15MinutesReportUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 13, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500T1StatCurrent15MinutesReportUAS.setStatus('mandatory')
mibBuilder.exportSymbols("T1-OPT-MIB", cdx6500T1StatISDNBChannelNumber=cdx6500T1StatISDNBChannelNumber, cdx6500PPSTT1PortEntry=cdx6500PPSTT1PortEntry, cdx6500T1StatInterfaceType=cdx6500T1StatInterfaceType, cdx6500PPCTT1PortEntry=cdx6500PPCTT1PortEntry, cdx6500T1CfgThresholdValueSEFS=cdx6500T1CfgThresholdValueSEFS, cdx6500T1StatDailyHistoryEntry=cdx6500T1StatDailyHistoryEntry, cdx6500T1StatABCDStatePortNumber=cdx6500T1StatABCDStatePortNumber, cdx6500T1StatCurrent15MinutesReportTable=cdx6500T1StatCurrent15MinutesReportTable, cdx6500T1StatISDNStatusPortNumber=cdx6500T1StatISDNStatusPortNumber, cdx6500T1CfgThresholdValueLCV=cdx6500T1CfgThresholdValueLCV, cdx6500T1StatTxLastCallingNumber=cdx6500T1StatTxLastCallingNumber, cdx6500T1StatCurrent15MinutesReportSEFS=cdx6500T1StatCurrent15MinutesReportSEFS, cdx6500T1StatABCDStateDS0ChannelNumber=cdx6500T1StatABCDStateDS0ChannelNumber, cdx6500T1StatNumTxCallsRejected=cdx6500T1StatNumTxCallsRejected, cdx6500T1StatISDNStatusEntry=cdx6500T1StatISDNStatusEntry, cdx6500T1StatTxMaxCallDuration=cdx6500T1StatTxMaxCallDuration, cdx6500T1StatLast24HoursReportSES=cdx6500T1StatLast24HoursReportSES, cdx6500T1StatRxLastCallFailureCause=cdx6500T1StatRxLastCallFailureCause, cdx6500T1StatCurrent15MinutesReportPCV=cdx6500T1StatCurrent15MinutesReportPCV, cdx6500T1StatCurrent15MinutesReportSES=cdx6500T1StatCurrent15MinutesReportSES, cdx6500T1CfgLineBuildOut=cdx6500T1CfgLineBuildOut, cdx6500T1CfgThresholdValueCSS=cdx6500T1CfgThresholdValueCSS, cdx6500T1StatPortNumber=cdx6500T1StatPortNumber, cdx6500T1StatLast24HoursReportTable=cdx6500T1StatLast24HoursReportTable, cdx6500T1StatNumRxCallsRejected=cdx6500T1StatNumRxCallsRejected, cdx6500T1CfgThresholdValueLES=cdx6500T1CfgThresholdValueLES, cdx6500T1StatTxLastCalledNumber=cdx6500T1StatTxLastCalledNumber, cdx6500T1CfgLineFramingType=cdx6500T1CfgLineFramingType, cdx6500T1StatRxMinCallDuration=cdx6500T1StatRxMinCallDuration, cdx6500T1StatDailyHistoryInterval=cdx6500T1StatDailyHistoryInterval, cdx6500T1StatABCDStateTable=cdx6500T1StatABCDStateTable, cdx6500T1StatTxAvgCallDuration=cdx6500T1StatTxAvgCallDuration, cdx6500T1ISDNStatusTable=cdx6500T1ISDNStatusTable, cdx6500T1BoardHWRevAndPartNumber=cdx6500T1BoardHWRevAndPartNumber, cdx6500T1StatLast24HoursReportES=cdx6500T1StatLast24HoursReportES, cdx6500T1StatISDNVirtualPortNumber=cdx6500T1StatISDNVirtualPortNumber, VirtualPortNumber=VirtualPortNumber, cdx6500T1StatDailyHistoryLCV=cdx6500T1StatDailyHistoryLCV, cdx6500T1StatCurrent15MinutesReportBES=cdx6500T1StatCurrent15MinutesReportBES, cdx6500T1StatCurrent15MinutesReportLCV=cdx6500T1StatCurrent15MinutesReportLCV, cdx6500Configuration=cdx6500Configuration, cdx6500T1StatDailyHistoryDM=cdx6500T1StatDailyHistoryDM, cdx6500T1StatTimeSinceLastResetType=cdx6500T1StatTimeSinceLastResetType, cdx6500T1StatCurrent15MinutesReportCSS=cdx6500T1StatCurrent15MinutesReportCSS, cdx6500T1CfgPortType=cdx6500T1CfgPortType, cdx6500T1StatLast24HoursReportBES=cdx6500T1StatLast24HoursReportBES, cdx6500T1StatPortState=cdx6500T1StatPortState, cdx6500T1StatLast24HoursReportEntry=cdx6500T1StatLast24HoursReportEntry, cdx6500T1StatDailyHistoryLES=cdx6500T1StatDailyHistoryLES, cdx6500PSTT1E1PortTable=cdx6500PSTT1E1PortTable, cdx6500PCTT1PortTable=cdx6500PCTT1PortTable, cdx6500T1StatCurrent15MinutesReportPortNumber=cdx6500T1StatCurrent15MinutesReportPortNumber, cdx6500T1StatDailyHistoryPCV=cdx6500T1StatDailyHistoryPCV, cdx6500T1StatABCDStateCurrentRxState=cdx6500T1StatABCDStateCurrentRxState, cdx6500T1StatDailyHistorySEFS=cdx6500T1StatDailyHistorySEFS, cdx6500T1StatLast24HoursReportSEFS=cdx6500T1StatLast24HoursReportSEFS, cdx6500T1StatCurrent15MinutesReportTimeElapsed=cdx6500T1StatCurrent15MinutesReportTimeElapsed, cdx6500T1StatDailyHistoryPortNumber=cdx6500T1StatDailyHistoryPortNumber, cdx6500T1StatDailyHistoryTable=cdx6500T1StatDailyHistoryTable, cdx6500T1StatRxMaxCallDuration=cdx6500T1StatRxMaxCallDuration, cdx6500T1StatISDNCallSummaryEntry=cdx6500T1StatISDNCallSummaryEntry, cdx6500T1StatCurrent15MinutesReportUAS=cdx6500T1StatCurrent15MinutesReportUAS, cdx6500T1CfgTransmitClock=cdx6500T1CfgTransmitClock, cdx6500T1StatDailyHistoryCSS=cdx6500T1StatDailyHistoryCSS, cdx6500T1StatRxLastCallingNumber=cdx6500T1StatRxLastCallingNumber, PhysicalPortNumber=PhysicalPortNumber, cdx6500T1StatTxMinCallDuration=cdx6500T1StatTxMinCallDuration, cdx6500Statistics=cdx6500Statistics, cdx6500T1StatDailyHistorySES=cdx6500T1StatDailyHistorySES, cdx6500T1StatISDNPortNumber=cdx6500T1StatISDNPortNumber, cdx6500T1CfgThresholdValueES=cdx6500T1CfgThresholdValueES, cdx6500T1StatLast24HoursReportPortNumber=cdx6500T1StatLast24HoursReportPortNumber, cdx6500T1StatPortType=cdx6500T1StatPortType, cdx6500T1StatCurrent15MinutesReportES=cdx6500T1StatCurrent15MinutesReportES, cdx6500T1StatISDNDS0Rate=cdx6500T1StatISDNDS0Rate, cdxProductSpecific=cdxProductSpecific, cdx6500T1CfgPortNumber=cdx6500T1CfgPortNumber, cdx6500T1StatLast24HoursReportUAS=cdx6500T1StatLast24HoursReportUAS, cdx6500T1CfgCallingIdMsbState=cdx6500T1CfgCallingIdMsbState, cdx6500PCTT1E1PortTable=cdx6500PCTT1E1PortTable, cdx6500T1StatDailyHistoryES=cdx6500T1StatDailyHistoryES, cdx6500T1StatISDNCallDirection=cdx6500T1StatISDNCallDirection, cdx6500T1CfgThresholdValueDM=cdx6500T1CfgThresholdValueDM, cdx6500T1StatISDNBChannelStatus=cdx6500T1StatISDNBChannelStatus, cdx6500T1CfgThresholdValueBES=cdx6500T1CfgThresholdValueBES, cdx6500T1StatISDNCalledNumber=cdx6500T1StatISDNCalledNumber, cdx6500T1StatDailyHistoryUAS=cdx6500T1StatDailyHistoryUAS, cdx6500T1StatTxLastCallFailureCause=cdx6500T1StatTxLastCallFailureCause, cdx6500T1StatAlarmState=cdx6500T1StatAlarmState, cdx6500T1StatNumTxCallsSinceLastReset=cdx6500T1StatNumTxCallsSinceLastReset, cdx6500T1CfgThresholdValueSES=cdx6500T1CfgThresholdValueSES, cdx6500T1CfgVariant=cdx6500T1CfgVariant, cdx6500T1StatDailyHistoryBES=cdx6500T1StatDailyHistoryBES, cdx6500T1StatISDNCallingNumber=cdx6500T1StatISDNCallingNumber, cdx6500T1CfgFacilityDataLink=cdx6500T1CfgFacilityDataLink, cdx6500=cdx6500, cdx6500T1CfgFormat=cdx6500T1CfgFormat, cdx6500T1CfgThresholdValuePCV=cdx6500T1CfgThresholdValuePCV, cdx6500StatProtocolGroup=cdx6500StatProtocolGroup, cdx6500T1CfgUserNetworkSide=cdx6500T1CfgUserNetworkSide, cdx6500T1StatABCDStateEntry=cdx6500T1StatABCDStateEntry, DisplayString=DisplayString, cdx6500T1StatLast24HoursReportPCV=cdx6500T1StatLast24HoursReportPCV, cdx6500T1StatRxAvgCallDuration=cdx6500T1StatRxAvgCallDuration, cdx6500T1CfgThresholdValueUAS=cdx6500T1CfgThresholdValueUAS, cdx6500PCTPortProtocolGroup=cdx6500PCTPortProtocolGroup, cdx6500T1CfgLineCoding=cdx6500T1CfgLineCoding, cdx6500T1StatRxLastCalledNumber=cdx6500T1StatRxLastCalledNumber, cdx6500CfgProtocolGroup=cdx6500CfgProtocolGroup, cdx6500T1StatDchannelState=cdx6500T1StatDchannelState, cdx6500T1StatNumRxCallsSinceLastReset=cdx6500T1StatNumRxCallsSinceLastReset, cdx6500T1StatLast24HoursReportLCV=cdx6500T1StatLast24HoursReportLCV, cdx6500PPCTT1PortTable=cdx6500PPCTT1PortTable, cdx6500T1StatABCDStateCurrentTxState=cdx6500T1StatABCDStateCurrentTxState, codex=codex, cdx6500T1StatCurrent15MinutesReportLES=cdx6500T1StatCurrent15MinutesReportLES, cdx6500PPSTT1PortTable=cdx6500PPSTT1PortTable, cdx6500PSTPortProtocolGroup=cdx6500PSTPortProtocolGroup, cdx6500T1StatISDNTimeCallStarted=cdx6500T1StatISDNTimeCallStarted, cdx6500T1StatCurrent15MinutesReportEntry=cdx6500T1StatCurrent15MinutesReportEntry, cdx6500T1StatLast24HoursReportLES=cdx6500T1StatLast24HoursReportLES, cdx6500T1StatLast24HoursReportCSS=cdx6500T1StatLast24HoursReportCSS, cdx6500T1ISDNCallSummaryTable=cdx6500T1ISDNCallSummaryTable, cdx6500T1CfgSwitchType=cdx6500T1CfgSwitchType)
