#
# PySNMP MIB module WWP-LEOS-FEATURE-LICENSE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-FEATURE-LICENSE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, TimeTicks, Unsigned32, Counter64, NotificationType, ModuleIdentity, Counter32, IpAddress, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "TimeTicks", "Unsigned32", "Counter64", "NotificationType", "ModuleIdentity", "Counter32", "IpAddress", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "Integer32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosFeatureLicenseMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29))
wwpLeosFeatureLicenseMIB.setRevisions(('2010-01-28 00:00', '2005-08-05 00:00',))
if mibBuilder.loadTexts: wwpLeosFeatureLicenseMIB.setLastUpdated('201001280000Z')
if mibBuilder.loadTexts: wwpLeosFeatureLicenseMIB.setOrganization('Ciena, Inc')
wwpLeosFeatureLicenseMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1))
wwpLeosPremiumFeatureLicense = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1))
wwpLeosPremiumFeatureLicenseStatusNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 2))
wwpLeosFeatureLicenseMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 2))
wwpLeosFeatureLicenseMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 2, 0))
wwpLeosFeatureLicenseMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 3))
wwpLeosFeatureLicenseMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 3, 1))
wwpLeosFeatureLicenseMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 3, 2))
wwpLeosPremiumFeatureStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1), )
if mibBuilder.loadTexts: wwpLeosPremiumFeatureStatusTable.setStatus('current')
wwpLeosPremiumFeatureStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1), ).setIndexNames((0, "WWP-LEOS-FEATURE-LICENSE-MIB", "wwpLeosPremiumFeatureId"))
if mibBuilder.loadTexts: wwpLeosPremiumFeatureStatusEntry.setStatus('current')
wwpLeosPremiumFeatureId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("baseFeatures", 0), ("dynamicVPLS", 1), ("security", 2), ("pbt", 3), ("carrierEdition", 4), ("advancedEthernet", 5), ("advancedOam", 6), ("pbbTe", 7), ("advanced10G", 8), ("aeAndAoam", 9), ("pbb", 10), ("advancedSync", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureId.setStatus('current')
wwpLeosPremiumFeatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureName.setStatus('current')
wwpLeosPremiumFeatureDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureDomainName.setStatus('current')
wwpLeosPremiumFeatureDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureDomainId.setStatus('current')
wwpLeosPremiumFeatureCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureCustomerId.setStatus('current')
wwpLeosPremiumFeatureLicenseAdminId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseAdminId.setStatus('current')
wwpLeosPremiumFeatureOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("infoNotAvailable", 1), ("notInstalled", 2), ("installed", 3), ("partial", 4), ("noBaseLic", 5))).clone('notInstalled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureOperStatus.setStatus('current')
wwpLeosPremiumFeatureDaysRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureDaysRemaining.setStatus('current')
wwpLeosPremiumFeatureLicenseKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseKey.setStatus('current')
wwpLeosPremiumFeatureLicenseKeyInstall = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseKeyInstall.setStatus('current')
wwpLeosPremiumFeatureLicenseNameUnInstall = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseNameUnInstall.setStatus('current')
wwpLeosTcePremiumFeatureLicense = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10))
wwpLeosPremiumFeatureLicenseInstalledTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1), )
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledTable.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1), ).setIndexNames((0, "WWP-LEOS-FEATURE-LICENSE-MIB", "wwpLeosPremiumFeatureLicenseInstalledModuleIndex"), (0, "WWP-LEOS-FEATURE-LICENSE-MIB", "wwpLeosPremiumFeatureId"))
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledEntry.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledModuleIndex.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledOemId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledOemId.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledCustomerId.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledAdminId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledAdminId.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledDaysRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledDaysRemaining.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledEnabled.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledSequence.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledDomainId.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledName.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledDomainName.setStatus('current')
wwpLeosPremiumFeatureLicenseInstalledKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstalledKey.setStatus('current')
wwpLeosPremiumFeatureLicenseInstall = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 2))
wwpLeosPremiumFeatureLicenseInstallModuleIndex = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstallModuleIndex.setStatus('current')
wwpLeosPremiumFeatureLicenseInstallKey = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstallKey.setStatus('current')
wwpLeosPremiumFeatureLicenseInstallCommit = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 2, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstallCommit.setStatus('current')
wwpLeosPremiumFeatureLicenseInstallUnsuccessful = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstallUnsuccessful.setStatus('current')
wwpLeosPremiumFeatureLicenseUninstall = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 3))
wwpLeosPremiumFeatureLicenseUninstallModuleIndex = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseUninstallModuleIndex.setStatus('current')
wwpLeosPremiumFeatureLicenseUninstallName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseUninstallName.setStatus('current')
wwpLeosPremiumFeatureLicenseUninstallCommit = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 1, 10, 3, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseUninstallCommit.setStatus('current')
wwpLeosPremiumFeatureLicenseStatusNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 2, 0, 1)).setObjects(("WWP-LEOS-FEATURE-LICENSE-MIB", "wwpLeosPremiumFeatureName"), ("WWP-LEOS-FEATURE-LICENSE-MIB", "wwpLeosPremiumFeatureOperStatus"))
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseStatusNotification.setStatus('current')
wwpLeosPremiumFeatureLicenseInstallErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 29, 2, 0, 2)).setObjects(("WWP-LEOS-FEATURE-LICENSE-MIB", "wwpLeosPremiumFeatureLicenseInstallModuleIndex"), ("WWP-LEOS-FEATURE-LICENSE-MIB", "wwpLeosPremiumFeatureLicenseInstallUnsuccessful"))
if mibBuilder.loadTexts: wwpLeosPremiumFeatureLicenseInstallErrorNotification.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-FEATURE-LICENSE-MIB", wwpLeosPremiumFeatureLicenseInstallModuleIndex=wwpLeosPremiumFeatureLicenseInstallModuleIndex, wwpLeosPremiumFeatureDaysRemaining=wwpLeosPremiumFeatureDaysRemaining, wwpLeosPremiumFeatureLicenseInstallUnsuccessful=wwpLeosPremiumFeatureLicenseInstallUnsuccessful, wwpLeosFeatureLicenseMIB=wwpLeosFeatureLicenseMIB, wwpLeosPremiumFeatureCustomerId=wwpLeosPremiumFeatureCustomerId, wwpLeosFeatureLicenseMIBGroups=wwpLeosFeatureLicenseMIBGroups, wwpLeosPremiumFeatureDomainName=wwpLeosPremiumFeatureDomainName, wwpLeosPremiumFeatureLicenseInstallCommit=wwpLeosPremiumFeatureLicenseInstallCommit, wwpLeosPremiumFeatureLicenseInstalledDomainId=wwpLeosPremiumFeatureLicenseInstalledDomainId, wwpLeosPremiumFeatureLicense=wwpLeosPremiumFeatureLicense, wwpLeosPremiumFeatureLicenseKeyInstall=wwpLeosPremiumFeatureLicenseKeyInstall, wwpLeosPremiumFeatureLicenseInstalledOemId=wwpLeosPremiumFeatureLicenseInstalledOemId, wwpLeosPremiumFeatureLicenseInstalledEnabled=wwpLeosPremiumFeatureLicenseInstalledEnabled, wwpLeosPremiumFeatureLicenseStatusNotification=wwpLeosPremiumFeatureLicenseStatusNotification, wwpLeosPremiumFeatureLicenseInstalledKey=wwpLeosPremiumFeatureLicenseInstalledKey, wwpLeosPremiumFeatureLicenseInstalledAdminId=wwpLeosPremiumFeatureLicenseInstalledAdminId, wwpLeosPremiumFeatureLicenseInstalledName=wwpLeosPremiumFeatureLicenseInstalledName, wwpLeosPremiumFeatureLicenseInstalledTable=wwpLeosPremiumFeatureLicenseInstalledTable, wwpLeosFeatureLicenseMIBCompliances=wwpLeosFeatureLicenseMIBCompliances, wwpLeosPremiumFeatureDomainId=wwpLeosPremiumFeatureDomainId, wwpLeosPremiumFeatureName=wwpLeosPremiumFeatureName, wwpLeosPremiumFeatureLicenseInstalledEntry=wwpLeosPremiumFeatureLicenseInstalledEntry, wwpLeosPremiumFeatureLicenseUninstallModuleIndex=wwpLeosPremiumFeatureLicenseUninstallModuleIndex, wwpLeosPremiumFeatureLicenseNameUnInstall=wwpLeosPremiumFeatureLicenseNameUnInstall, wwpLeosPremiumFeatureLicenseUninstallCommit=wwpLeosPremiumFeatureLicenseUninstallCommit, wwpLeosFeatureLicenseMIBNotificationPrefix=wwpLeosFeatureLicenseMIBNotificationPrefix, wwpLeosPremiumFeatureLicenseStatusNotif=wwpLeosPremiumFeatureLicenseStatusNotif, wwpLeosPremiumFeatureLicenseInstalledModuleIndex=wwpLeosPremiumFeatureLicenseInstalledModuleIndex, wwpLeosFeatureLicenseMIBObjects=wwpLeosFeatureLicenseMIBObjects, wwpLeosPremiumFeatureLicenseKey=wwpLeosPremiumFeatureLicenseKey, wwpLeosPremiumFeatureLicenseInstalledSequence=wwpLeosPremiumFeatureLicenseInstalledSequence, wwpLeosPremiumFeatureLicenseInstalledDaysRemaining=wwpLeosPremiumFeatureLicenseInstalledDaysRemaining, wwpLeosPremiumFeatureStatusTable=wwpLeosPremiumFeatureStatusTable, wwpLeosPremiumFeatureOperStatus=wwpLeosPremiumFeatureOperStatus, wwpLeosPremiumFeatureLicenseInstall=wwpLeosPremiumFeatureLicenseInstall, wwpLeosPremiumFeatureLicenseInstalledDomainName=wwpLeosPremiumFeatureLicenseInstalledDomainName, wwpLeosPremiumFeatureLicenseUninstallName=wwpLeosPremiumFeatureLicenseUninstallName, wwpLeosPremiumFeatureLicenseUninstall=wwpLeosPremiumFeatureLicenseUninstall, wwpLeosPremiumFeatureLicenseInstallErrorNotification=wwpLeosPremiumFeatureLicenseInstallErrorNotification, PYSNMP_MODULE_ID=wwpLeosFeatureLicenseMIB, wwpLeosPremiumFeatureLicenseInstalledCustomerId=wwpLeosPremiumFeatureLicenseInstalledCustomerId, wwpLeosFeatureLicenseMIBNotifications=wwpLeosFeatureLicenseMIBNotifications, wwpLeosPremiumFeatureId=wwpLeosPremiumFeatureId, wwpLeosPremiumFeatureStatusEntry=wwpLeosPremiumFeatureStatusEntry, wwpLeosPremiumFeatureLicenseInstallKey=wwpLeosPremiumFeatureLicenseInstallKey, wwpLeosPremiumFeatureLicenseAdminId=wwpLeosPremiumFeatureLicenseAdminId, wwpLeosFeatureLicenseMIBConformance=wwpLeosFeatureLicenseMIBConformance, wwpLeosTcePremiumFeatureLicense=wwpLeosTcePremiumFeatureLicense)
