#
# PySNMP MIB module MIB-Dell-CM (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MIB-Dell-CM
# Produced by pysmi-0.3.4 at Mon Apr 29 20:01:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, IpAddress, Gauge32, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, Bits, Counter64, enterprises, Unsigned32, Integer32, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "Gauge32", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "Bits", "Counter64", "enterprises", "Unsigned32", "Integer32", "ModuleIdentity", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dell = MibIdentifier((1, 3, 6, 1, 4, 1, 674))
cm = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10899))
inventoryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10899, 1))
operatingSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10899, 2))
productID = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10899, 100))
class SystemID(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

class Unsigned16BitRange(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

inventoryLocale = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inventoryLocale.setStatus('mandatory')
inventorySchemaVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inventorySchemaVersion.setStatus('mandatory')
inventorySystemID = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 1, 3), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inventorySystemID.setStatus('mandatory')
deviceTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5), )
if mibBuilder.loadTexts: deviceTable.setStatus('mandatory')
deviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5, 1), ).setIndexNames((0, "MIB-Dell-CM", "deviceIndex"))
if mibBuilder.loadTexts: deviceEntry.setStatus('mandatory')
deviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5, 1, 1), Unsigned16BitRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceIndex.setStatus('mandatory')
deviceComponentID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceComponentID.setStatus('mandatory')
deviceDisplayString = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceDisplayString.setStatus('mandatory')
deviceVendorID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceVendorID.setStatus('mandatory')
deviceDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceDeviceID.setStatus('mandatory')
deviceSubID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceSubID.setStatus('mandatory')
deviceSubVendorID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 5, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceSubVendorID.setStatus('mandatory')
applicationTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10899, 1, 6), )
if mibBuilder.loadTexts: applicationTable.setStatus('mandatory')
applicationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10899, 1, 6, 1), ).setIndexNames((0, "MIB-Dell-CM", "applicationIndex"))
if mibBuilder.loadTexts: applicationEntry.setStatus('mandatory')
applicationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 6, 1, 1), Unsigned16BitRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationIndex.setStatus('mandatory')
applicationDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 6, 1, 2), Unsigned16BitRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationDeviceIndex.setStatus('mandatory')
applicationComponentType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationComponentType.setStatus('mandatory')
applicationVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationVersion.setStatus('mandatory')
applicationDisplayString = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationDisplayString.setStatus('mandatory')
applicationSubComponentID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10899, 1, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applicationSubComponentID.setStatus('mandatory')
operatingSystemVendor = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operatingSystemVendor.setStatus('mandatory')
operatingSystemMajorVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operatingSystemMajorVersion.setStatus('mandatory')
operatingSystemMinorVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operatingSystemMinorVersion.setStatus('mandatory')
operatingSystemSPMajorVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operatingSystemSPMajorVersion.setStatus('mandatory')
operatingSystemSPMinorVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operatingSystemSPMinorVersion.setStatus('mandatory')
operatingSystemArchitecture = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 2, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operatingSystemArchitecture.setStatus('mandatory')
productIDDisplayName = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 100, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDDisplayName.setStatus('mandatory')
productIDDescription = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 100, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDDescription.setStatus('mandatory')
productIDVendor = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 100, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDVendor.setStatus('mandatory')
productIDVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 100, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDVersion.setStatus('mandatory')
productIDBuildNumber = MibScalar((1, 3, 6, 1, 4, 1, 674, 10899, 100, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDBuildNumber.setStatus('obsolete')
mibBuilder.exportSymbols("MIB-Dell-CM", productID=productID, deviceVendorID=deviceVendorID, deviceTable=deviceTable, deviceDisplayString=deviceDisplayString, applicationComponentType=applicationComponentType, applicationTable=applicationTable, operatingSystemGroup=operatingSystemGroup, productIDDescription=productIDDescription, productIDDisplayName=productIDDisplayName, inventoryGroup=inventoryGroup, inventorySchemaVersion=inventorySchemaVersion, applicationDisplayString=applicationDisplayString, operatingSystemMajorVersion=operatingSystemMajorVersion, operatingSystemArchitecture=operatingSystemArchitecture, operatingSystemVendor=operatingSystemVendor, applicationIndex=applicationIndex, applicationDeviceIndex=applicationDeviceIndex, applicationVersion=applicationVersion, SystemID=SystemID, Unsigned16BitRange=Unsigned16BitRange, deviceEntry=deviceEntry, deviceComponentID=deviceComponentID, cm=cm, applicationEntry=applicationEntry, operatingSystemMinorVersion=operatingSystemMinorVersion, productIDVendor=productIDVendor, dell=dell, operatingSystemSPMajorVersion=operatingSystemSPMajorVersion, operatingSystemSPMinorVersion=operatingSystemSPMinorVersion, deviceDeviceID=deviceDeviceID, deviceSubID=deviceSubID, applicationSubComponentID=applicationSubComponentID, deviceSubVendorID=deviceSubVendorID, productIDVersion=productIDVersion, inventoryLocale=inventoryLocale, inventorySystemID=inventorySystemID, productIDBuildNumber=productIDBuildNumber, deviceIndex=deviceIndex)
