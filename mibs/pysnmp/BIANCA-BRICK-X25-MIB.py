#
# PySNMP MIB module BIANCA-BRICK-X25-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-X25-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Integer32, MibIdentifier, ModuleIdentity, Gauge32, TimeTicks, iso, ObjectIdentity, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "MibIdentifier", "ModuleIdentity", "Gauge32", "TimeTicks", "iso", "ObjectIdentity", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
x25 = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 6))
class HexValue(Integer32):
    pass

class Date(Integer32):
    pass

x25LinkTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 6, 1), )
if mibBuilder.loadTexts: x25LinkTable.setStatus('mandatory')
x25LinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-X25-MIB", "x25LkIfIndex"))
if mibBuilder.loadTexts: x25LinkEntry.setStatus('mandatory')
x25LkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkIfIndex.setStatus('mandatory')
x25LkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkAddr.setStatus('mandatory')
x25LkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkMode.setStatus('mandatory')
x25LkModulo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mod8", 1), ("mod128", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkModulo.setStatus('mandatory')
x25LkLIC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkLIC.setStatus('mandatory')
x25LkHIC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkHIC.setStatus('mandatory')
x25LkLTC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkLTC.setStatus('mandatory')
x25LkHTC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkHTC.setStatus('mandatory')
x25LkLOC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkLOC.setStatus('mandatory')
x25LkHOC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkHOC.setStatus('mandatory')
x25LkDefPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkDefPktSize.setStatus('mandatory')
x25LkDefWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkDefWinSize.setStatus('mandatory')
x25LkMaxPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unrestricted", 1), ("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkMaxPktSize.setStatus('mandatory')
x25LkMaxWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkMaxWinSize.setStatus('mandatory')
x25LkL2WinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkL2WinSize.setStatus('mandatory')
x25LkL2RetrTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkL2RetrTimer.setStatus('mandatory')
x25LkL2RetrCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkL2RetrCounter.setStatus('mandatory')
x25LkL2SupervTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkL2SupervTimer.setStatus('mandatory')
x25LkL2IdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkL2IdleTimer.setStatus('mandatory')
x25LkState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("restart-pending", 1), ("restart-collision", 2), ("ready", 3), ("disc-pending", 4), ("reset-pending", 5), ("sabm-pending", 6), ("xid-pending", 7), ("sabm-wait", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkState.setStatus('mandatory')
x25LkNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("when-necessary", 1), ("always", 2), ("never", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkNegotiation.setStatus('mandatory')
x25LkDiscDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkDiscDelayTimer.setStatus('mandatory')
x25LkCallDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkCallDelayTimer.setStatus('mandatory')
x25LkRestDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25LkRestDelayTimer.setStatus('mandatory')
x25LinkPresetTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 6, 2), )
if mibBuilder.loadTexts: x25LinkPresetTable.setStatus('mandatory')
x25LinkPresetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1), ).setIndexNames((0, "BIANCA-BRICK-X25-MIB", "x25LkPrIfIndex"))
if mibBuilder.loadTexts: x25LinkPresetEntry.setStatus('mandatory')
x25LkPrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrIfIndex.setStatus('mandatory')
x25LkPrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrAddr.setStatus('mandatory')
x25LkPrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrMode.setStatus('mandatory')
x25LkPrModulo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mod8", 1), ("mod128", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrModulo.setStatus('mandatory')
x25LkPrLIC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrLIC.setStatus('mandatory')
x25LkPrHIC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrHIC.setStatus('mandatory')
x25LkPrLTC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrLTC.setStatus('mandatory')
x25LkPrHTC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrHTC.setStatus('mandatory')
x25LkPrLOC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrLOC.setStatus('mandatory')
x25LkPrHOC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrHOC.setStatus('mandatory')
x25LkPrDefPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrDefPktSize.setStatus('mandatory')
x25LkPrDefWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrDefWinSize.setStatus('mandatory')
x25LkPrMaxPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unrestricted", 1), ("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrMaxPktSize.setStatus('mandatory')
x25LkPrMaxWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrMaxWinSize.setStatus('mandatory')
x25LkPrL2WinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrL2WinSize.setStatus('mandatory')
x25LkPrL2RetrTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrL2RetrTimer.setStatus('mandatory')
x25LkPrL2RetrCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrL2RetrCounter.setStatus('mandatory')
x25LkPrL2SupervTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrL2SupervTimer.setStatus('mandatory')
x25LkPrL2IdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrL2IdleTimer.setStatus('mandatory')
x25LkPrNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("when-necessary", 1), ("always", 2), ("never", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrNegotiation.setStatus('mandatory')
x25LkPrDiscDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrDiscDelayTimer.setStatus('mandatory')
x25LkPrCallDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrCallDelayTimer.setStatus('mandatory')
x25LkPrRestDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LkPrRestDelayTimer.setStatus('mandatory')
x25CallTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 6, 3), )
if mibBuilder.loadTexts: x25CallTable.setStatus('mandatory')
x25CallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1), ).setIndexNames((0, "BIANCA-BRICK-X25-MIB", "x25CallSrcIfIndex"), (0, "BIANCA-BRICK-X25-MIB", "x25CallSrcVCNumber"), (0, "BIANCA-BRICK-X25-MIB", "x25CallDstIfIndex"), (0, "BIANCA-BRICK-X25-MIB", "x25CallDstVCNumber"))
if mibBuilder.loadTexts: x25CallEntry.setStatus('mandatory')
x25CallSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallSrcIfIndex.setStatus('mandatory')
x25CallSrcLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallSrcLinkAddr.setStatus('mandatory')
x25CallSrcVCNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallSrcVCNumber.setStatus('mandatory')
x25CallDstIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallDstIfIndex.setStatus('mandatory')
x25CallDstLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallDstLinkAddr.setStatus('mandatory')
x25CallDstVCNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallDstVCNumber.setStatus('mandatory')
x25CallSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallSrcAddr.setStatus('mandatory')
x25CallDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallDstAddr.setStatus('mandatory')
x25CallProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallProtocolId.setStatus('mandatory')
x25CallFacilities = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallFacilities.setStatus('mandatory')
x25CallUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallUserData.setStatus('mandatory')
x25CallAge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallAge.setStatus('mandatory')
x25CallState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("routing", 1), ("call-pending", 2), ("dataxfer", 3), ("out-reset-pending", 4), ("in-reset-pending", 5), ("out-clear-pending", 6), ("in-clear-pending", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25CallState.setStatus('mandatory')
x25CallInPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("p2", 1), ("p4", 2), ("p8", 3), ("p16", 4), ("p32", 5), ("p64", 6), ("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12), ("p8192", 13), ("p16384", 14), ("p32768", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallInPktSize.setStatus('mandatory')
x25CallOutPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("p2", 1), ("p4", 2), ("p8", 3), ("p16", 4), ("p32", 5), ("p64", 6), ("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12), ("p8192", 13), ("p16384", 14), ("p32768", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallOutPktSize.setStatus('mandatory')
x25CallInWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallInWinSize.setStatus('mandatory')
x25CallOutWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallOutWinSize.setStatus('mandatory')
x25CallPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallPktsSent.setStatus('mandatory')
x25CallBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallBytesSent.setStatus('mandatory')
x25CallPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallPktsRecvd.setStatus('mandatory')
x25CallBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallBytesRecvd.setStatus('mandatory')
x25CallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 6, 4), )
if mibBuilder.loadTexts: x25CallHistoryTable.setStatus('mandatory')
x25CallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1), ).setIndexNames((0, "BIANCA-BRICK-X25-MIB", "x25CallHistorySrcIfIndex"), (0, "BIANCA-BRICK-X25-MIB", "x25CallHistoryDstIfIndex"))
if mibBuilder.loadTexts: x25CallHistoryEntry.setStatus('mandatory')
x25CallHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 1), Date()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryTime.setStatus('mandatory')
x25CallHistoryDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryDuration.setStatus('mandatory')
x25CallHistorySrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistorySrcIfIndex.setStatus('mandatory')
x25CallHistorySrcLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistorySrcLinkAddr.setStatus('mandatory')
x25CallHistorySrcVCNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistorySrcVCNumber.setStatus('mandatory')
x25CallHistoryDstIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryDstIfIndex.setStatus('mandatory')
x25CallHistoryDstLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryDstLinkAddr.setStatus('mandatory')
x25CallHistoryDstVCNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryDstVCNumber.setStatus('mandatory')
x25CallHistorySrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistorySrcAddr.setStatus('mandatory')
x25CallHistoryDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryDstAddr.setStatus('mandatory')
x25CallHistoryProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryProtocolId.setStatus('mandatory')
x25CallHistoryFacilities = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryFacilities.setStatus('mandatory')
x25CallHistoryUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryUserData.setStatus('mandatory')
x25CallHistoryInPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("p2", 1), ("p4", 2), ("p8", 3), ("p16", 4), ("p32", 5), ("p64", 6), ("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12), ("p8192", 13), ("p16384", 14), ("p32768", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryInPktSize.setStatus('mandatory')
x25CallHistoryOutPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("p2", 1), ("p4", 2), ("p8", 3), ("p16", 4), ("p32", 5), ("p64", 6), ("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12), ("p8192", 13), ("p16384", 14), ("p32768", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryOutPktSize.setStatus('mandatory')
x25CallHistoryInWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryInWinSize.setStatus('mandatory')
x25CallHistoryOutWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryOutWinSize.setStatus('mandatory')
x25CallHistoryPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryPktsSent.setStatus('mandatory')
x25CallHistoryBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryBytesSent.setStatus('mandatory')
x25CallHistoryPktsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryPktsRecvd.setStatus('mandatory')
x25CallHistoryBytesRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryBytesRecvd.setStatus('mandatory')
x25CallHistoryClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryClearCause.setStatus('mandatory')
x25CallHistoryClearDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: x25CallHistoryClearDiag.setStatus('mandatory')
x25RouteTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 6, 5), )
if mibBuilder.loadTexts: x25RouteTable.setStatus('mandatory')
x25RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1), ).setIndexNames((0, "BIANCA-BRICK-X25-MIB", "x25RtSrcIfIndex"), (0, "BIANCA-BRICK-X25-MIB", "x25RtDstIfIndex"))
if mibBuilder.loadTexts: x25RouteEntry.setStatus('mandatory')
x25RtSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtSrcIfIndex.setStatus('mandatory')
x25RtSrcLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtSrcLinkAddr.setStatus('mandatory')
x25RtDstIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtDstIfIndex.setStatus('mandatory')
x25RtDstLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtDstLinkAddr.setStatus('mandatory')
x25RtDstLinkAddrMode = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 1), ("direct", 2), ("delete", 3), ("rule", 4), ("auto", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtDstLinkAddrMode.setStatus('mandatory')
x25RtSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtSrcAddr.setStatus('mandatory')
x25RtSrcNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtSrcNSAP.setStatus('mandatory')
x25RtDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtDstAddr.setStatus('mandatory')
x25RtDstNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtDstNSAP.setStatus('mandatory')
x25RtProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtProtocolId.setStatus('mandatory')
x25RtCallUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtCallUserData.setStatus('mandatory')
x25RtRPOA = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtRPOA.setStatus('mandatory')
x25RtNUI = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtNUI.setStatus('mandatory')
x25RtRewritingRule = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtRewritingRule.setStatus('mandatory')
x25RtMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtMetric.setStatus('mandatory')
x25RtCug = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtCug.setStatus('mandatory')
x25RtCugOutgoing = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtCugOutgoing.setStatus('mandatory')
x25RtCugBilateral = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 5, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RtCugBilateral.setStatus('mandatory')
x25RewriteTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 6, 6), )
if mibBuilder.loadTexts: x25RewriteTable.setStatus('mandatory')
x25RewriteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1), ).setIndexNames((0, "BIANCA-BRICK-X25-MIB", "x25RwRewritingRule"))
if mibBuilder.loadTexts: x25RewriteEntry.setStatus('mandatory')
x25RwRewritingRule = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwRewritingRule.setStatus('mandatory')
x25RwReverseCharging = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dont-change", 1), ("set", 2), ("clear", 3), ("delete", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwReverseCharging.setStatus('mandatory')
x25RwRPOA = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-change", 1), ("remove-first", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwRPOA.setStatus('mandatory')
x25RwNUI = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwNUI.setStatus('mandatory')
x25RwSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwSrcAddr.setStatus('mandatory')
x25RwSrcNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwSrcNSAP.setStatus('mandatory')
x25RwDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwDstAddr.setStatus('mandatory')
x25RwDstNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwDstNSAP.setStatus('mandatory')
x25RwProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwProtocolId.setStatus('mandatory')
x25RwCallUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwCallUserData.setStatus('mandatory')
x25RwRespSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwRespSrcAddr.setStatus('mandatory')
x25RwRespSrcNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwRespSrcNSAP.setStatus('mandatory')
x25RwRespDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwRespDstAddr.setStatus('mandatory')
x25RwRespDstNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwRespDstNSAP.setStatus('mandatory')
x25RwRespProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwRespProtocolId.setStatus('mandatory')
x25RwRespCallUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwRespCallUserData.setStatus('mandatory')
x25RwCug = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwCug.setStatus('mandatory')
x25RwCugOutgoing = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwCugOutgoing.setStatus('mandatory')
x25RwCugBilateral = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwCugBilateral.setStatus('mandatory')
x25RwDstLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 6, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25RwDstLinkAddr.setStatus('mandatory')
x25MprTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 6, 7), )
if mibBuilder.loadTexts: x25MprTable.setStatus('mandatory')
x25MprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1), ).setIndexNames((0, "BIANCA-BRICK-X25-MIB", "x25MprIfIndex"))
if mibBuilder.loadTexts: x25MprEntry.setStatus('mandatory')
x25MprIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprIfIndex.setStatus('mandatory')
x25MprMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(576, 8180))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprMtu.setStatus('mandatory')
x25MprEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ip-rfc877", 1), ("ip", 2), ("ipx", 3), ("mpr", 4), ("delete", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprEncapsulation.setStatus('mandatory')
x25MprNumVC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprNumVC.setStatus('mandatory')
x25MprMaxVC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprMaxVC.setStatus('mandatory')
x25MprWinSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprWinSize.setStatus('mandatory')
x25MprPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("p128", 7), ("p256", 8), ("p512", 9), ("p1024", 10), ("p2048", 11), ("p4096", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprPktSize.setStatus('mandatory')
x25MprShortHold = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprShortHold.setStatus('mandatory')
x25MprMaxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprMaxRetries.setStatus('mandatory')
x25MprBlockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprBlockTime.setStatus('mandatory')
x25MprAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 6, 7, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25MprAddr.setStatus('mandatory')
x25LocalPadCall = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 6, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("dont-accept", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LocalPadCall.setStatus('mandatory')
x25LocalAddr = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 6, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25LocalAddr.setStatus('mandatory')
x25Rerouting = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 6, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("disallow", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25Rerouting.setStatus('mandatory')
x25HistoryMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 6, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25HistoryMaxEntries.setStatus('mandatory')
x25AccountingTemplate = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 6, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: x25AccountingTemplate.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-X25-MIB", x25CallHistoryPktsSent=x25CallHistoryPktsSent, x25LkPrHOC=x25LkPrHOC, x25CallEntry=x25CallEntry, x25RtRPOA=x25RtRPOA, x25LkL2RetrTimer=x25LkL2RetrTimer, x25CallHistoryClearDiag=x25CallHistoryClearDiag, x25RwRewritingRule=x25RwRewritingRule, x25CallHistoryDstLinkAddr=x25CallHistoryDstLinkAddr, x25LkPrDefPktSize=x25LkPrDefPktSize, x25RtSrcIfIndex=x25RtSrcIfIndex, x25CallHistoryFacilities=x25CallHistoryFacilities, bibo=bibo, x25LkPrLIC=x25LkPrLIC, x25LinkTable=x25LinkTable, x25LkPrL2SupervTimer=x25LkPrL2SupervTimer, x25CallOutWinSize=x25CallOutWinSize, x25MprNumVC=x25MprNumVC, x25LkPrMaxPktSize=x25LkPrMaxPktSize, x25CallBytesSent=x25CallBytesSent, x25LkPrL2IdleTimer=x25LkPrL2IdleTimer, x25LkPrL2RetrCounter=x25LkPrL2RetrCounter, x25CallHistorySrcAddr=x25CallHistorySrcAddr, x25RwRespDstAddr=x25RwRespDstAddr, x25Rerouting=x25Rerouting, x25HistoryMaxEntries=x25HistoryMaxEntries, x25LkPrLOC=x25LkPrLOC, x25CallPktsSent=x25CallPktsSent, x25CallHistoryOutPktSize=x25CallHistoryOutPktSize, private=private, x25CallTable=x25CallTable, x25RtCugOutgoing=x25RtCugOutgoing, x25CallHistoryClearCause=x25CallHistoryClearCause, x25RouteEntry=x25RouteEntry, x25LkL2WinSize=x25LkL2WinSize, x25CallHistoryInPktSize=x25CallHistoryInPktSize, x25LkMode=x25LkMode, x25LkL2SupervTimer=x25LkL2SupervTimer, x25MprAddr=x25MprAddr, x25RtSrcNSAP=x25RtSrcNSAP, x25LocalPadCall=x25LocalPadCall, x25RwCug=x25RwCug, x25RwCugOutgoing=x25RwCugOutgoing, x25LkL2IdleTimer=x25LkL2IdleTimer, x25CallHistoryTable=x25CallHistoryTable, x25CallPktsRecvd=x25CallPktsRecvd, x25LkNegotiation=x25LkNegotiation, x25MprMaxRetries=x25MprMaxRetries, x25RwRespProtocolId=x25RwRespProtocolId, x25CallHistorySrcVCNumber=x25CallHistorySrcVCNumber, x25LocalAddr=x25LocalAddr, x25MprEncapsulation=x25MprEncapsulation, x25RtMetric=x25RtMetric, x25LkDefPktSize=x25LkDefPktSize, enterprises=enterprises, org=org, bintec=bintec, x25LkCallDelayTimer=x25LkCallDelayTimer, x25LkPrHIC=x25LkPrHIC, x25LkPrL2RetrTimer=x25LkPrL2RetrTimer, Date=Date, x25LkPrDefWinSize=x25LkPrDefWinSize, x25RwRespSrcAddr=x25RwRespSrcAddr, x25RwRespCallUserData=x25RwRespCallUserData, x25MprBlockTime=x25MprBlockTime, x25RwReverseCharging=x25RwReverseCharging, x25RtDstAddr=x25RtDstAddr, x25LkPrDiscDelayTimer=x25LkPrDiscDelayTimer, x25CallHistorySrcIfIndex=x25CallHistorySrcIfIndex, x25LkPrMaxWinSize=x25LkPrMaxWinSize, x25=x25, x25LkDefWinSize=x25LkDefWinSize, x25CallHistoryBytesSent=x25CallHistoryBytesSent, x25LkPrNegotiation=x25LkPrNegotiation, x25CallDstIfIndex=x25CallDstIfIndex, x25MprMtu=x25MprMtu, x25LkMaxWinSize=x25LkMaxWinSize, x25RtCugBilateral=x25RtCugBilateral, x25LkModulo=x25LkModulo, x25RtRewritingRule=x25RtRewritingRule, x25CallDstAddr=x25CallDstAddr, x25RwCallUserData=x25RwCallUserData, x25CallHistoryProtocolId=x25CallHistoryProtocolId, x25RwProtocolId=x25RwProtocolId, x25CallProtocolId=x25CallProtocolId, x25LkIfIndex=x25LkIfIndex, x25RtSrcAddr=x25RtSrcAddr, x25LkPrModulo=x25LkPrModulo, x25CallUserData=x25CallUserData, x25MprWinSize=x25MprWinSize, x25CallOutPktSize=x25CallOutPktSize, x25RouteTable=x25RouteTable, x25RwRespSrcNSAP=x25RwRespSrcNSAP, x25CallSrcIfIndex=x25CallSrcIfIndex, x25LkPrCallDelayTimer=x25LkPrCallDelayTimer, x25RwDstAddr=x25RwDstAddr, x25LkPrMode=x25LkPrMode, x25CallSrcAddr=x25CallSrcAddr, x25LkDiscDelayTimer=x25LkDiscDelayTimer, x25RtCallUserData=x25RtCallUserData, x25CallState=x25CallState, x25CallBytesRecvd=x25CallBytesRecvd, x25MprShortHold=x25MprShortHold, x25RtSrcLinkAddr=x25RtSrcLinkAddr, x25MprIfIndex=x25MprIfIndex, x25LkPrHTC=x25LkPrHTC, x25LkPrRestDelayTimer=x25LkPrRestDelayTimer, x25LkHOC=x25LkHOC, x25RwSrcNSAP=x25RwSrcNSAP, x25LkLIC=x25LkLIC, x25LkState=x25LkState, x25CallHistoryOutWinSize=x25CallHistoryOutWinSize, x25CallHistoryDstAddr=x25CallHistoryDstAddr, x25LkPrL2WinSize=x25LkPrL2WinSize, internet=internet, x25LinkPresetTable=x25LinkPresetTable, x25LkHTC=x25LkHTC, HexValue=HexValue, x25CallSrcVCNumber=x25CallSrcVCNumber, x25CallHistoryBytesRecvd=x25CallHistoryBytesRecvd, x25RtDstIfIndex=x25RtDstIfIndex, x25RwRespDstNSAP=x25RwRespDstNSAP, x25CallInPktSize=x25CallInPktSize, x25CallAge=x25CallAge, x25RtCug=x25RtCug, x25LkMaxPktSize=x25LkMaxPktSize, x25CallHistoryDuration=x25CallHistoryDuration, x25RwNUI=x25RwNUI, x25CallHistoryEntry=x25CallHistoryEntry, x25RtProtocolId=x25RtProtocolId, x25LkL2RetrCounter=x25LkL2RetrCounter, x25RtDstLinkAddrMode=x25RtDstLinkAddrMode, x25CallInWinSize=x25CallInWinSize, x25RtNUI=x25RtNUI, x25CallHistoryPktsRecvd=x25CallHistoryPktsRecvd, x25RwRPOA=x25RwRPOA, x25RwSrcAddr=x25RwSrcAddr, x25LkHIC=x25LkHIC, x25MprPktSize=x25MprPktSize, x25CallHistorySrcLinkAddr=x25CallHistorySrcLinkAddr, x25CallHistoryDstIfIndex=x25CallHistoryDstIfIndex, x25LkPrLTC=x25LkPrLTC, x25RewriteEntry=x25RewriteEntry, x25RwDstNSAP=x25RwDstNSAP, x25LkPrIfIndex=x25LkPrIfIndex, x25RewriteTable=x25RewriteTable, x25RwDstLinkAddr=x25RwDstLinkAddr, x25CallHistoryInWinSize=x25CallHistoryInWinSize, x25RwCugBilateral=x25RwCugBilateral, x25CallHistoryDstVCNumber=x25CallHistoryDstVCNumber, dod=dod, x25LkPrAddr=x25LkPrAddr, x25AccountingTemplate=x25AccountingTemplate, x25CallSrcLinkAddr=x25CallSrcLinkAddr, x25CallHistoryTime=x25CallHistoryTime, x25CallFacilities=x25CallFacilities, x25LinkEntry=x25LinkEntry, x25LkRestDelayTimer=x25LkRestDelayTimer, x25MprEntry=x25MprEntry, x25RtDstLinkAddr=x25RtDstLinkAddr, x25CallDstVCNumber=x25CallDstVCNumber, x25CallHistoryUserData=x25CallHistoryUserData, x25LkLOC=x25LkLOC, x25CallDstLinkAddr=x25CallDstLinkAddr, x25RtDstNSAP=x25RtDstNSAP, x25LinkPresetEntry=x25LinkPresetEntry, x25LkLTC=x25LkLTC, x25LkAddr=x25LkAddr, x25MprMaxVC=x25MprMaxVC, x25MprTable=x25MprTable)
