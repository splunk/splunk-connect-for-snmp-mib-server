#
# PySNMP MIB module CISCO-PKI-PARTICIPATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PKI-PARTICIPATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:52:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, Gauge32, Bits, Counter64, NotificationType, Integer32, Counter32, iso, ObjectIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "Bits", "Counter64", "NotificationType", "Integer32", "Counter32", "iso", "ObjectIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress")
DateAndTime, DisplayString, TextualConvention, StorageType, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention", "StorageType", "RowStatus", "TruthValue")
cpkiMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 505))
cpkiMIB.setRevisions(('2005-10-22 00:00',))
if mibBuilder.loadTexts: cpkiMIB.setLastUpdated('200510220000Z')
if mibBuilder.loadTexts: cpkiMIB.setOrganization('Cisco Systems, Inc.')
cpkiMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 505, 0))
cpkiMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 505, 1))
cpkiMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 505, 2))
cpkiConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1))
class CiscoPkiAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("noop", 1), ("caauth", 2), ("cadelete", 3), ("certreq", 4), ("certimport", 5), ("certdelete", 6), ("pkcs12import", 7), ("pkcs12export", 8), ("certconfirm", 9), ("certnoconfirm", 10), ("forcecertdelete", 11), ("crlimport", 12), ("crldelete", 13))

class CiscoPkiActionResult(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 1), ("success", 2), ("failed", 3), ("inProgress", 4), ("needConfirm", 5))

cpkiRSAKeyPairTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1), )
if mibBuilder.loadTexts: cpkiRSAKeyPairTable.setStatus('current')
cpkiRSAKeyPairEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-PKI-PARTICIPATION-MIB", "cpkiRSAKeyPairName"))
if mibBuilder.loadTexts: cpkiRSAKeyPairEntry.setStatus('current')
cpkiRSAKeyPairName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cpkiRSAKeyPairName.setStatus('current')
cpkiRSAKeyPairId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiRSAKeyPairId.setStatus('current')
cpkiRSAKeyPairSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("rsa512", 1), ("rsa768", 2), ("rsa1024", 3), ("rsa1536", 4), ("rsa2048", 5))).clone('rsa512')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiRSAKeyPairSize.setStatus('current')
cpkiRSAPvtKeyFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiRSAPvtKeyFileName.setStatus('current')
cpkiRSAKeyPairExportable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1, 1, 5), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiRSAKeyPairExportable.setStatus('current')
cpkiRSAKeyPairStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiRSAKeyPairStorageType.setStatus('current')
cpkiRSAKeyPairConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiRSAKeyPairConfigRowStatus.setStatus('current')
cpkiTrustPointTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2), )
if mibBuilder.loadTexts: cpkiTrustPointTable.setStatus('current')
cpkiTrustPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-PKI-PARTICIPATION-MIB", "cpkiTrustPointName"))
if mibBuilder.loadTexts: cpkiTrustPointEntry.setStatus('current')
cpkiTrustPointName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cpkiTrustPointName.setStatus('current')
cpkiTrustPointId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiTrustPointId.setStatus('current')
cpkiKeyPairName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiKeyPairName.setStatus('current')
cpkiIdCertFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIdCertFileName.setStatus('current')
cpkiIdCertSubjectName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIdCertSubjectName.setStatus('current')
cpkiIdCertSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIdCertSerialNum.setStatus('current')
cpkiIdCertStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIdCertStartDate.setStatus('current')
cpkiIdCertEndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIdCertEndDate.setStatus('current')
cpkiIdCertFingerPrint = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIdCertFingerPrint.setStatus('current')
cpkiIssuerCertFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIssuerCertFileName.setStatus('current')
cpkiIssuerCertSubjectName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIssuerCertSubjectName.setStatus('current')
cpkiIssuerCertSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIssuerCertSerialNum.setStatus('current')
cpkiIssuerCertStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIssuerCertStartDate.setStatus('current')
cpkiIssuerCertEndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIssuerCertEndDate.setStatus('current')
cpkiIssuerCertFingerPrint = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiIssuerCertFingerPrint.setStatus('current')
cpkiRevokeCheckMethods = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="02000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiRevokeCheckMethods.setStatus('current')
cpkiOCSPurl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiOCSPurl.setStatus('current')
cpkiAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 18), CiscoPkiAction().clone('noop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiAction.setStatus('current')
cpkiActionUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 19), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiActionUrl.setStatus('current')
cpkiActionPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 20), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiActionPassword.setStatus('current')
cpkiLastAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 21), CiscoPkiAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiLastAction.setStatus('current')
cpkiLastActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 22), CiscoPkiActionResult()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiLastActionResult.setStatus('current')
cpkiLastActionFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 23), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpkiLastActionFailureReason.setStatus('current')
cpkiTrustPointStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 24), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiTrustPointStorageType.setStatus('current')
cpkiTrustPointConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 505, 1, 1, 2, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpkiTrustPointConfigRowStatus.setStatus('current')
cpkiMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 505, 2, 1))
cpkiMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 505, 2, 2))
cpkiMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 505, 2, 1, 1)).setObjects(("CISCO-PKI-PARTICIPATION-MIB", "cpkiConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpkiMIBCompliance = cpkiMIBCompliance.setStatus('current')
cpkiConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 505, 2, 2, 1)).setObjects(("CISCO-PKI-PARTICIPATION-MIB", "cpkiRSAKeyPairId"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiRSAKeyPairSize"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiRSAPvtKeyFileName"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiRSAKeyPairExportable"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiRSAKeyPairStorageType"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiRSAKeyPairConfigRowStatus"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiTrustPointId"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiKeyPairName"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIdCertFileName"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIdCertSubjectName"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIdCertSerialNum"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIdCertStartDate"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIdCertEndDate"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIdCertFingerPrint"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIssuerCertFileName"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIssuerCertSubjectName"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIssuerCertSerialNum"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIssuerCertStartDate"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIssuerCertEndDate"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiIssuerCertFingerPrint"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiRevokeCheckMethods"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiOCSPurl"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiAction"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiActionUrl"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiActionPassword"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiLastAction"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiLastActionResult"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiLastActionFailureReason"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiTrustPointStorageType"), ("CISCO-PKI-PARTICIPATION-MIB", "cpkiTrustPointConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpkiConfigGroup = cpkiConfigGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-PKI-PARTICIPATION-MIB", cpkiConfigGroup=cpkiConfigGroup, cpkiActionUrl=cpkiActionUrl, cpkiLastActionResult=cpkiLastActionResult, cpkiIssuerCertFingerPrint=cpkiIssuerCertFingerPrint, cpkiMIBObjects=cpkiMIBObjects, cpkiKeyPairName=cpkiKeyPairName, cpkiMIBNotifs=cpkiMIBNotifs, cpkiIssuerCertStartDate=cpkiIssuerCertStartDate, cpkiMIBCompliance=cpkiMIBCompliance, cpkiIdCertFingerPrint=cpkiIdCertFingerPrint, cpkiRSAKeyPairExportable=cpkiRSAKeyPairExportable, cpkiActionPassword=cpkiActionPassword, cpkiMIBCompliances=cpkiMIBCompliances, cpkiLastAction=cpkiLastAction, cpkiIssuerCertEndDate=cpkiIssuerCertEndDate, PYSNMP_MODULE_ID=cpkiMIB, cpkiRSAPvtKeyFileName=cpkiRSAPvtKeyFileName, cpkiTrustPointTable=cpkiTrustPointTable, cpkiOCSPurl=cpkiOCSPurl, CiscoPkiActionResult=CiscoPkiActionResult, cpkiRSAKeyPairTable=cpkiRSAKeyPairTable, cpkiMIBConform=cpkiMIBConform, cpkiLastActionFailureReason=cpkiLastActionFailureReason, cpkiIssuerCertSubjectName=cpkiIssuerCertSubjectName, cpkiRSAKeyPairId=cpkiRSAKeyPairId, CiscoPkiAction=CiscoPkiAction, cpkiRSAKeyPairConfigRowStatus=cpkiRSAKeyPairConfigRowStatus, cpkiTrustPointEntry=cpkiTrustPointEntry, cpkiIdCertStartDate=cpkiIdCertStartDate, cpkiIdCertSerialNum=cpkiIdCertSerialNum, cpkiIdCertSubjectName=cpkiIdCertSubjectName, cpkiIssuerCertSerialNum=cpkiIssuerCertSerialNum, cpkiRSAKeyPairSize=cpkiRSAKeyPairSize, cpkiMIBGroups=cpkiMIBGroups, cpkiConfig=cpkiConfig, cpkiRSAKeyPairStorageType=cpkiRSAKeyPairStorageType, cpkiAction=cpkiAction, cpkiTrustPointStorageType=cpkiTrustPointStorageType, cpkiRSAKeyPairName=cpkiRSAKeyPairName, cpkiIdCertEndDate=cpkiIdCertEndDate, cpkiRevokeCheckMethods=cpkiRevokeCheckMethods, cpkiTrustPointId=cpkiTrustPointId, cpkiIssuerCertFileName=cpkiIssuerCertFileName, cpkiTrustPointConfigRowStatus=cpkiTrustPointConfigRowStatus, cpkiRSAKeyPairEntry=cpkiRSAKeyPairEntry, cpkiIdCertFileName=cpkiIdCertFileName, cpkiMIB=cpkiMIB, cpkiTrustPointName=cpkiTrustPointName)
