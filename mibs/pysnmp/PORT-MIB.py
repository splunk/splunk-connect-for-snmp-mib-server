#
# PySNMP MIB module PORT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PORT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:32:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
slotNo, = mibBuilder.importSymbols("CARD-MIB", "slotNo")
port, coriolisMibs = mibBuilder.importSymbols("CORIOLIS-MIB", "port", "coriolisMibs")
dot3StatsDuplexStatus, = mibBuilder.importSymbols("EtherLike-MIB", "dot3StatsDuplexStatus")
ifOperStatus, ifSpeed, ifAdminStatus, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifOperStatus", "ifSpeed", "ifAdminStatus", "InterfaceIndex")
ifMauAutoNegConfig, = mibBuilder.importSymbols("MAU-MIB", "ifMauAutoNegConfig")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Unsigned32, iso, Bits, TimeTicks, IpAddress, MibIdentifier, NotificationType, Counter32, NotificationType, Integer32, Gauge32, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Unsigned32", "iso", "Bits", "TimeTicks", "IpAddress", "MibIdentifier", "NotificationType", "Counter32", "NotificationType", "Integer32", "Gauge32", "ObjectIdentity", "Counter64")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
sonetVTCurrentStatus, sonetLineCurrentStatus, sonetSectionCurrentStatus, sonetPathCurrentStatus = mibBuilder.importSymbols("SONET-MIB", "sonetVTCurrentStatus", "sonetLineCurrentStatus", "sonetSectionCurrentStatus", "sonetPathCurrentStatus")
portMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5812, 3, 1))
if mibBuilder.loadTexts: portMIB.setLastUpdated('0007270000Z')
if mibBuilder.loadTexts: portMIB.setOrganization('Coriolis Networks')
portTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 2), )
if mibBuilder.loadTexts: portTable.setStatus('current')
portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 2, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"))
if mibBuilder.loadTexts: portEntry.setStatus('current')
portNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: portNo.setStatus('current')
mib2IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 2, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mib2IfIndex.setStatus('current')
etherPortTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 3), )
if mibBuilder.loadTexts: etherPortTable.setStatus('current')
etherPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"))
if mibBuilder.loadTexts: etherPortEntry.setStatus('current')
etherPortSpeedCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("speed10", 1), ("speed100", 2), ("speed1000", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortSpeedCfg.setStatus('current')
etherPortSpeedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("speed10", 1), ("speed100", 2), ("speed1000", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortSpeedStatus.setStatus('current')
etherPortDuplexCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("half", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortDuplexCfg.setStatus('current')
etherPortLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortLoopback.setStatus('current')
etherPortPhyReset = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inReset", 1), ("outOfReset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortPhyReset.setStatus('current')
etherPortStatsTxPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxPkts64Octets.setStatus('current')
etherPortStatsTxPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxPkts65to127Octets.setStatus('current')
etherPortStatsTxPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxPkts128to255Octets.setStatus('current')
etherPortStatsTxPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxPkts256to511Octets.setStatus('current')
etherPortStatsTxPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxPkts512to1023Octets.setStatus('current')
etherPortStatsTxPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxPkts1024to1518Octets.setStatus('current')
etherPortStatsTxPkts1519to1530Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxPkts1519to1530Octets.setStatus('current')
etherPortStatsTxFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxFCSErrors.setStatus('current')
etherPortStatsTxOversize = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxOversize.setStatus('current')
etherPortStatsTxUndersize = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxUndersize.setStatus('current')
etherPortStatsTxControlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxControlFrames.setStatus('current')
etherPortStatsTxBadFifoUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxBadFifoUnderrun.setStatus('current')
etherPortStatsTxBadFifoOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxBadFifoOverrun.setStatus('current')
etherPortStatsTxDropFifoOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxDropFifoOverrun.setStatus('current')
etherPortStatsTxBadParityError = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxBadParityError.setStatus('current')
etherPortStatsTxDropParityError = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxDropParityError.setStatus('current')
etherPortStatsTxBadSequenceError = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxBadSequenceError.setStatus('current')
etherPortStatsTxDropSequenceError = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxDropSequenceError.setStatus('current')
etherPortStatsTxBadJamError = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxBadJamError.setStatus('current')
etherPortStatsTxDropJamError = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsTxDropJamError.setStatus('current')
etherPortSpeedTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortSpeedTrapEnable.setStatus('current')
etherPortDuplexTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortDuplexTrapEnable.setStatus('current')
etherPortAutonegTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortAutonegTrapEnable.setStatus('current')
etherPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortRowStatus.setStatus('current')
etherPortAutonegAdvSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("speed10", 1), ("speed100", 2), ("speed1000", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortAutonegAdvSpeed.setStatus('current')
etherPortAutonegAdvDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("half", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortAutonegAdvDuplex.setStatus('current')
etherPortPauseStateReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noPause", 1), ("enableTx", 2), ("enableRx", 3), ("enableTxRx", 4), ("undefined", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortPauseStateReceived.setStatus('current')
etherPortVlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("stripVID", 2), ("transparent", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortVlanMode.setStatus('current')
etherPortDefaultVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherPortDefaultVlanId.setStatus('current')
etherPortRxOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortRxOverrun.setStatus('current')
etherPortRxSyncErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortRxSyncErrors.setStatus('current')
etherPortRxDelSeqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortRxDelSeqErrors.setStatus('current')
etherPortRxFifoOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortRxFifoOverrunErrors.setStatus('current')
etherPortRxControlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortRxControlFrames.setStatus('current')
etherPortRxThreshOvrszFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortRxThreshOvrszFrames.setStatus('current')
etherPortStatsRxPkts1519to1530Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 3, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherPortStatsRxPkts1519to1530Octets.setStatus('current')
tdmIoDS1PortTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 4), )
if mibBuilder.loadTexts: tdmIoDS1PortTable.setStatus('current')
tdmIoDS1PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"))
if mibBuilder.loadTexts: tdmIoDS1PortEntry.setStatus('current')
tdmIoDS1PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ds1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortType.setStatus('current')
tdmIoDS1PortTiming = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("loopTiming", 1), ("localTiming", 2), ("throughTiming", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortTiming.setStatus('current')
tdmIoDS1PortBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("shortHaulMax133Feet", 1), ("shortHaulMax266Feet", 2), ("shortHaulMax399Feet", 3), ("shortHaulMax533Feet", 4), ("shortHaulMax655Feet", 5), ("longHaulZeroDB", 6), ("longHaulSevenFiveDB", 7), ("longHaulOneFiveDB", 8), ("longHaulTwentyTwoDB", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortBuildOut.setStatus('current')
tdmIoDS1PortFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ds1unframed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmIoDS1PortFraming.setStatus('current')
tdmIoDS1PortCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 5))).clone(namedValues=NamedValues(("b8zs", 2), ("ami", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortCoding.setStatus('current')
tdmIoDS1PortLoopbackState = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("running", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackState.setStatus('current')
tdmIoDS1PortLoopbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 9, 10))).clone(namedValues=NamedValues(("noLoop", 1), ("localOn", 8), ("digitalOn", 9), ("remoteOn", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackType.setStatus('current')
tdmIoDS1PortLoopbackResults = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("failure", 1), ("success", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackResults.setStatus('current')
tdmIoDS1PortLoopbackLLbActCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackLLbActCode.setStatus('current')
tdmIoDS1PortLoopbackLLbDeactCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackLLbDeactCode.setStatus('current')
tdmIoDS1PortLoopbackLlbActCodeLen = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up5Bit", 1), ("up6Bit", 2), ("up7Bit", 3), ("up8Bit", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackLlbActCodeLen.setStatus('current')
tdmIoDS1PortLoopbackLlbDeactCodeLen = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down5Bit", 1), ("down6Bit", 2), ("down7Bit", 3), ("down8Bit", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackLlbDeactCodeLen.setStatus('current')
tdmIoDS1PortLoopbackLlbControl = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("genOff", 1), ("genActOn", 2), ("genDeActOn", 3), ("monOff", 4), ("monOn", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackLlbControl.setStatus('current')
tdmIoDS1PortLoopbackLlbGenPath = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("genRcv", 1), ("genXmit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackLlbGenPath.setStatus('current')
tdmIoDS1PortLoopbackLlbMonPath = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("monRcv", 1), ("monXmit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLoopbackLlbMonPath.setStatus('current')
tdmIoDS1PortPrbsAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("algo215", 1), ("algo220", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPrbsAlgorithm.setStatus('current')
tdmIoDS1PortPrbsInversion = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmIoDS1PortPrbsInversion.setStatus('current')
tdmIoDS1PortPrbsGenPath = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("genRcv", 1), ("genXmit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPrbsGenPath.setStatus('current')
tdmIoDS1PortPrbsMonPath = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("monRcv", 1), ("monXmit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPrbsMonPath.setStatus('current')
tdmIoDS1PortPrbsMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPrbsMonitor.setStatus('current')
tdmIoDS1PortPrbsTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPrbsTransmit.setStatus('current')
tdmIoDS1PortPrbsBec = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmIoDS1PortPrbsBec.setStatus('current')
tdmIoDS1PortBertState = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("running", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmIoDS1PortBertState.setStatus('current')
tdmIoDS1PortBertPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("pattern223", 1), ("pattern220", 2), ("patternQrss", 3), ("pattern215", 4), ("pattern211", 5), ("patternAllZeros", 6), ("patternAllOnes", 7), ("patternAlternate", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortBertPattern.setStatus('current')
tdmIoDS1PortBertDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("oneMin", 1), ("fiveMin", 2), ("thirtyMin", 3), ("oneHour", 4), ("twelveHour", 5), ("twentyfourHour", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortBertDuration.setStatus('current')
tdmIoDS1PortBertResults = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("timeLeft", 1), ("totalBitErrs", 2), ("totalBits", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmIoDS1PortBertResults.setStatus('current')
tdmIoDS1PortLineESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLineESS15Min.setStatus('current')
tdmIoDS1PortPathESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathESS15Min.setStatus('current')
tdmIoDS1PortLineESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortLineESS1Day.setStatus('current')
tdmIoDS1PortPathESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathESS1Day.setStatus('current')
tdmIoDS1PortPathCVS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathCVS15Min.setStatus('current')
tdmIoDS1PortPathCVS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathCVS1Day.setStatus('current')
tdmIoDS1PortPathSESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathSESS15Min.setStatus('current')
tdmIoDS1PortPathSESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathSESS1Day.setStatus('current')
tdmIoDS1PortPathSASS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathSASS15Min.setStatus('current')
tdmIoDS1PortPathSASS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathSASS1Day.setStatus('current')
tdmIoDS1PortPathCSS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathCSS15Min.setStatus('current')
tdmIoDS1PortPathCSS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathCSS1Day.setStatus('current')
tdmIoDS1PortPathUASS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortPathUASS15Min.setStatus('current')
tdmIoDS1PortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS1PortRowStatus.setStatus('current')
dsxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("dsx-rcvrai-failure-declared", 1), ("dsx-rcvrai-failure-cleared", 2), ("dsx-xmitrai-failure-declared", 3), ("dsx-xmitrai-failure-cleared", 4), ("dsx-rcvais-failure-declared", 5), ("dsx-rcvais-failure-cleared", 6), ("dsx-xmitais-failure-declared", 7), ("dsx-xmitais-failure-cleared", 8), ("dsx-los-failure-declared", 9), ("dsx-los-failure-cleared", 10), ("dsx-lof-failure-declared", 11), ("dsx-lof-failure-cleared", 12), ("dsx-other-failure-declared", 13), ("dsx-other-failure-cleared", 14), ("dsx-uas-failure-declared", 15), ("dsx-uas-failure-cleared", 16), ("dsx-exz-failure-declared", 17), ("dsx-exz-failure-cleared", 18), ("dsx-pden-failure-declared", 19), ("dsx-pden-failure-cleared", 20)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dsxStatus.setStatus('current')
tdmIoDS1PortLCVCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 4, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmIoDS1PortLCVCount.setStatus('current')
sonetPortTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 5), )
if mibBuilder.loadTexts: sonetPortTable.setStatus('current')
sonetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"))
if mibBuilder.loadTexts: sonetPortEntry.setStatus('current')
sonetPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oc12c", 1), ("oc12sts1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortType.setStatus('current')
sonetPortIdString = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortIdString.setStatus('current')
sonetPortTiming = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortTiming.setStatus('current')
sonetPortLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("slle", 1), ("sdle", 2), ("pdle", 3), ("sllben", 4), ("none", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLoopback.setStatus('current')
sonetPortScrambling = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortScrambling.setStatus('current')
sonetPortChannelization = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("concatenated", 1), ("nonConcatenated", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortChannelization.setStatus('current')
sonetPortConfigedChans = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonetPortConfigedChans.setStatus('current')
sonetPortSectESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortSectESS15Min.setStatus('current')
sonetPortLineESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLineESS15Min.setStatus('current')
sonetPortPathESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPathESS15Min.setStatus('current')
sonetPortSectESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortSectESS1Day.setStatus('current')
sonetPortLineESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLineESS1Day.setStatus('current')
sonetPortPathESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPathESS1Day.setStatus('current')
sonetPortSectCVS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortSectCVS15Min.setStatus('current')
sonetPortLineCVS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLineCVS15Min.setStatus('current')
sonetPortPathCVS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPathCVS15Min.setStatus('current')
sonetPortSectCVS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortSectCVS1Day.setStatus('current')
sonetPortLineCVS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLineCVS1Day.setStatus('current')
sonetPortPathCVS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPathCVS1Day.setStatus('current')
sonetPortSectSESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortSectSESS15Min.setStatus('current')
sonetPortLineSESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLineSESS15Min.setStatus('current')
sonetPortPathSESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPathSESS15Min.setStatus('current')
sonetPortSectSESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortSectSESS1Day.setStatus('current')
sonetPortLineSESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLineSESS1Day.setStatus('current')
sonetPortPathSESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPathSESS1Day.setStatus('current')
sonetPortLineUASS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLineUASS15Min.setStatus('current')
sonetPortPathUASS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPathUASS15Min.setStatus('current')
sonetPortLineUASS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLineUASS1Day.setStatus('current')
sonetPortPathUASS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPathUASS1Day.setStatus('current')
sonetPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortRowStatus.setStatus('current')
sonetTCAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 5, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("sonet-section-cv-tca-declared", 1), ("sonet-section-ses-tca-declared", 2), ("sonet-section-es-tca-declared", 3), ("sonet-line-cv-tca-declared", 4), ("sonet-line-ses-tca-declared", 5), ("sonet-line-es-tca-declared", 6), ("sonet-line-uas-tca-declared", 7), ("sonet-line-farend-cv-tca-declared", 8), ("sonet-line-farend-ses-tca-declared", 9), ("sonet-line-farend-es-tca-declared", 10), ("sonet-line-farend-uas-tca-declared", 11), ("sonet-path-cv-tca-declared", 12), ("sonet-path-ses-tca-declared", 13), ("sonet-path-es-tca-declared", 14), ("sonet-path-uas-tca-declared", 15), ("sonet-path-farend-cv-tca-declared", 16), ("sonet-path-farend-ses-tca-declared", 17), ("sonet-path-farend-es-tca-declared", 18), ("sonet-path-farend-uas-tca-declared", 19), ("sonet-vt-cv-tca-declared", 20), ("sonet-vt-ses-tca-declared", 21), ("sonet-vt-es-tca-declared", 22), ("sonet-vt-uas-tca-declared", 23), ("sonet-vt-farend-cv-tca-declared", 24), ("sonet-vt-farend-ses-tca-declared", 25), ("sonet-vt-farend-es-tca-declared", 26), ("sonet-vt-farend-uas-tca-declared", 27)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: sonetTCAStatus.setStatus('current')
atmPortTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 6), )
if mibBuilder.loadTexts: atmPortTable.setStatus('current')
atmPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"))
if mibBuilder.loadTexts: atmPortEntry.setStatus('current')
atmPortVPTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmPortVPTunnel.setStatus('current')
atmPortMaxTotalBits = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmPortMaxTotalBits.setStatus('current')
atmPortTiming = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("loop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmPortTiming.setStatus('current')
atmPortInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmPortInCells.setStatus('current')
atmPortOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmPortOutCells.setStatus('current')
atmPortCDVT = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5000, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmPortCDVT.setStatus('current')
atmPortMaxActvBits = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmPortMaxActvBits.setStatus('current')
atmPortHCInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmPortHCInCells.setStatus('current')
atmPortHCOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmPortHCOutCells.setStatus('current')
atmPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmPortRowStatus.setStatus('current')
opticalPortTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 7), )
if mibBuilder.loadTexts: opticalPortTable.setStatus('current')
opticalPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"), (0, "PORT-MIB", "lambda"))
if mibBuilder.loadTexts: opticalPortEntry.setStatus('current')
pysmi_lambda = MibScalar((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 1), Integer32()).setLabel("lambda")
if mibBuilder.loadTexts: pysmi_lambda.setStatus('current')
opticalPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("working", 2), ("protected", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticalPortMode.setStatus('current')
opticalPortRxSMselect = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("reserve", 2), ("both", 3), ("none", 4))))
if mibBuilder.loadTexts: opticalPortRxSMselect.setStatus('current')
opticalPortTxSMselect = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("reserve", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticalPortTxSMselect.setStatus('current')
opticalPortRxSignalState = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("detected", 1), ("lossOfSignal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opticalPortRxSignalState.setStatus('current')
opticalPortRxFrameState = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lossOfFrame", 1), ("detected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opticalPortRxFrameState.setStatus('current')
opticalPortTxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("good", 1), ("bad", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: opticalPortTxStatus.setStatus('current')
opticalPortTxEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticalPortTxEnable.setStatus('current')
opticalPortLaserPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("high", 1), ("low", 2))))
if mibBuilder.loadTexts: opticalPortLaserPowerLevel.setStatus('current')
opticalPortLaserWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fifteenXX", 1), ("thirteenTen", 2), ("fifteenFifty", 3), ("thirteenTenFifteenFifty", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticalPortLaserWavelength.setStatus('current')
opticalPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 6))).clone(namedValues=NamedValues(("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticalPortRowStatus.setStatus('current')
ringPortTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 8), )
if mibBuilder.loadTexts: ringPortTable.setStatus('current')
ringPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"))
if mibBuilder.loadTexts: ringPortEntry.setStatus('current')
ringPortArbiterEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortArbiterEnabled.setStatus('current')
ringPortFrameMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("axson", 1), ("pos", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortFrameMode.setStatus('current')
ringPortMaxChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortMaxChannels.setStatus('current')
ringPortMaxSubChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortMaxSubChannels.setStatus('current')
ringPortAutoQueueSizing = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortAutoQueueSizing.setStatus('current')
ringPortRingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("working", 1), ("protected", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortRingMode.setStatus('current')
ringPortNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortNodeId.setStatus('current')
ringPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("redundant", 3), ("diagnostic", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortAdminStatus.setStatus('current')
ringPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringPortOperStatus.setStatus('current')
ringPortRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringPortRxFrames.setStatus('current')
ringPortRxFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringPortRxFrameErrors.setStatus('current')
ringPortTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringPortTxFrames.setStatus('current')
ringPortMaxTDMChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 499))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringPortMaxTDMChannels.setStatus('current')
ringPortK1K2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("clear", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ringPortK1K2Status.setStatus('current')
ringPortAISStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("clear", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ringPortAISStatus.setStatus('current')
ringPortPHYStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 8, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("lower-layer-down", 3), ("unknown", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ringPortPHYStatus.setStatus('current')
tdmIoDS3PortTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 9), )
if mibBuilder.loadTexts: tdmIoDS3PortTable.setStatus('current')
tdmIoDS3PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"))
if mibBuilder.loadTexts: tdmIoDS3PortEntry.setStatus('current')
tdmIoDS3PortPBitESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortPBitESS15Min.setStatus('current')
tdmIoDS3PortPBitESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortPBitESS1Day.setStatus('current')
tdmIoDS3PortPBitSESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortPBitSESS15Min.setStatus('current')
tdmIoDS3PortPBitSESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortPBitSESS1Day.setStatus('current')
tdmIoDS3PortSEFSS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortSEFSS15Min.setStatus('current')
tdmIoDS3PortSEFSS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortSEFSS1Day.setStatus('current')
tdmIoDS3PortUASS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortUASS15Min.setStatus('current')
tdmIoDS3PortUASS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortUASS1Day.setStatus('current')
tdmIoDS3PortLineCVS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortLineCVS15Min.setStatus('current')
tdmIoDS3PortLineCVS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortLineCVS1Day.setStatus('current')
tdmIoDS3PortPBitCVS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortPBitCVS15Min.setStatus('current')
tdmIoDS3PortPBitCVS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortPBitCVS1Day.setStatus('current')
tdmIoDS3PortLineESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortLineESS15Min.setStatus('current')
tdmIoDS3PortLineESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortLineESS1Day.setStatus('current')
tdmIoDS3PortCBitCVS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortCBitCVS15Min.setStatus('current')
tdmIoDS3PortCBitCVS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortCBitCVS1Day.setStatus('current')
tdmIoDS3PortCBitESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortCBitESS15Min.setStatus('current')
tdmIoDS3PortCBitESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortCBitESS1Day.setStatus('current')
tdmIoDS3PortCBitSESS15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortCBitSESS15Min.setStatus('current')
tdmIoDS3PortCBitSESS1Day = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortCBitSESS1Day.setStatus('current')
tdmIoDS3PortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 9, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmIoDS3PortRowStatus.setStatus('current')
posPortTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 3, 10), )
if mibBuilder.loadTexts: posPortTable.setStatus('current')
posPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 3, 10, 1), ).setIndexNames((0, "CARD-MIB", "slotNo"), (0, "PORT-MIB", "portNo"))
if mibBuilder.loadTexts: posPortEntry.setStatus('current')
posPortTransportSegmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: posPortTransportSegmentCount.setStatus('current')
posPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("transparent", 1), ("bridgedDataMode", 2), ("vlan", 3), ("macAddr", 4), ("ipAddr", 5), ("mpls", 6), ("mapOS", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: posPortMode.setStatus('current')
posPortDefaultVID = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 10, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: posPortDefaultVID.setStatus('current')
posPortMinPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: posPortMinPktSize.setStatus('current')
posPortMaxPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: posPortMaxPktSize.setStatus('current')
posPortMinPktViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: posPortMinPktViolations.setStatus('current')
posPortMaxPktViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 3, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: posPortMaxPktViolations.setStatus('current')
portPhyStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,0)).setObjects(("IF-MIB", "ifOperStatus"))
portAdminStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,1)).setObjects(("IF-MIB", "ifAdminStatus"))
portSpeedStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,20)).setObjects(("IF-MIB", "ifSpeed"))
etherPortDuplexStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,21)).setObjects(("EtherLike-MIB", "dot3StatsDuplexStatus"))
etherPortAutonegStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,22)).setObjects(("MAU-MIB", "ifMauAutoNegConfig"))
sonetSectionLOSChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,27)).setObjects(("SONET-MIB", "sonetSectionCurrentStatus"))
sonetSectionLOFChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,28)).setObjects(("SONET-MIB", "sonetSectionCurrentStatus"))
sonetLineAISChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,29)).setObjects(("SONET-MIB", "sonetLineCurrentStatus"))
sonetLineRDIChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,30)).setObjects(("SONET-MIB", "sonetLineCurrentStatus"))
sonetPathLOPChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,31)).setObjects(("SONET-MIB", "sonetPathCurrentStatus"))
sonetPathAISChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,32)).setObjects(("SONET-MIB", "sonetPathCurrentStatus"))
sonetPathRDIChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,33)).setObjects(("SONET-MIB", "sonetPathCurrentStatus"))
sonetPathUNEQPChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,34)).setObjects(("SONET-MIB", "sonetPathCurrentStatus"))
sonetPathPSLMChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,35)).setObjects(("SONET-MIB", "sonetPathCurrentStatus"))
sonetVTLOPChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,36)).setObjects(("SONET-MIB", "sonetVTCurrentStatus"))
sonetVTAISChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,37)).setObjects(("SONET-MIB", "sonetVTCurrentStatus"))
sonetVTRDIChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,38)).setObjects(("SONET-MIB", "sonetVTCurrentStatus"))
sonetVTRFIChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,39)).setObjects(("SONET-MIB", "sonetVTCurrentStatus"))
sonetVTUNEQPChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,40)).setObjects(("SONET-MIB", "sonetVTCurrentStatus"))
sonetVTPSLMChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,41)).setObjects(("SONET-MIB", "sonetVTCurrentStatus"))
ringPortK1K2Change = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,47)).setObjects(("PORT-MIB", "ringPortK1K2Status"))
ringPortAISChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,48)).setObjects(("PORT-MIB", "ringPortAISStatus"))
ringPortPHYChange = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,49)).setObjects(("PORT-MIB", "ringPortPHYStatus"))
sonetPortTCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,50)).setObjects(("PORT-MIB", "sonetTCAStatus"))
dsxAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5812) + (0,55)).setObjects(("PORT-MIB", "dsxStatus"))
mibBuilder.exportSymbols("PORT-MIB", tdmIoDS1PortLoopbackLlbMonPath=tdmIoDS1PortLoopbackLlbMonPath, sonetPortScrambling=sonetPortScrambling, opticalPortRxFrameState=opticalPortRxFrameState, tdmIoDS1PortFraming=tdmIoDS1PortFraming, etherPortRxControlFrames=etherPortRxControlFrames, atmPortOutCells=atmPortOutCells, ringPortTable=ringPortTable, posPortEntry=posPortEntry, tdmIoDS1PortPrbsBec=tdmIoDS1PortPrbsBec, sonetPortLineCVS15Min=sonetPortLineCVS15Min, atmPortTiming=atmPortTiming, sonetPortLineESS1Day=sonetPortLineESS1Day, tdmIoDS1PortLoopbackLlbControl=tdmIoDS1PortLoopbackLlbControl, ringPortAutoQueueSizing=ringPortAutoQueueSizing, tdmIoDS3PortTable=tdmIoDS3PortTable, etherPortLoopback=etherPortLoopback, etherPortStatsRxPkts1519to1530Octets=etherPortStatsRxPkts1519to1530Octets, tdmIoDS1PortTable=tdmIoDS1PortTable, etherPortStatsTxBadParityError=etherPortStatsTxBadParityError, sonetPortType=sonetPortType, portSpeedStatusTrap=portSpeedStatusTrap, etherPortStatsTxBadSequenceError=etherPortStatsTxBadSequenceError, tdmIoDS1PortPathCSS15Min=tdmIoDS1PortPathCSS15Min, sonetVTAISChange=sonetVTAISChange, posPortMinPktSize=posPortMinPktSize, portMIB=portMIB, ringPortRxFrames=ringPortRxFrames, tdmIoDS3PortPBitSESS15Min=tdmIoDS3PortPBitSESS15Min, tdmIoDS3PortLineCVS1Day=tdmIoDS3PortLineCVS1Day, sonetPortSectCVS15Min=sonetPortSectCVS15Min, ringPortAISStatus=ringPortAISStatus, tdmIoDS3PortUASS15Min=tdmIoDS3PortUASS15Min, atmPortInCells=atmPortInCells, tdmIoDS3PortCBitCVS15Min=tdmIoDS3PortCBitCVS15Min, tdmIoDS1PortPathCVS15Min=tdmIoDS1PortPathCVS15Min, tdmIoDS1PortPathUASS15Min=tdmIoDS1PortPathUASS15Min, atmPortMaxActvBits=atmPortMaxActvBits, ringPortOperStatus=ringPortOperStatus, portAdminStatusChange=portAdminStatusChange, etherPortStatsTxBadJamError=etherPortStatsTxBadJamError, tdmIoDS1PortCoding=tdmIoDS1PortCoding, sonetPortLoopback=sonetPortLoopback, etherPortDuplexStatusTrap=etherPortDuplexStatusTrap, sonetLineAISChange=sonetLineAISChange, tdmIoDS3PortCBitESS1Day=tdmIoDS3PortCBitESS1Day, tdmIoDS1PortType=tdmIoDS1PortType, tdmIoDS1PortLoopbackResults=tdmIoDS1PortLoopbackResults, sonetPortLineUASS15Min=sonetPortLineUASS15Min, etherPortPhyReset=etherPortPhyReset, tdmIoDS1PortPathCSS1Day=tdmIoDS1PortPathCSS1Day, etherPortVlanMode=etherPortVlanMode, tdmIoDS1PortPrbsMonitor=tdmIoDS1PortPrbsMonitor, tdmIoDS1PortTiming=tdmIoDS1PortTiming, tdmIoDS1PortPathSESS15Min=tdmIoDS1PortPathSESS15Min, tdmIoDS1PortLoopbackLLbDeactCode=tdmIoDS1PortLoopbackLLbDeactCode, opticalPortTxStatus=opticalPortTxStatus, sonetPortPathSESS1Day=sonetPortPathSESS1Day, atmPortHCInCells=atmPortHCInCells, ringPortEntry=ringPortEntry, etherPortStatsTxDropSequenceError=etherPortStatsTxDropSequenceError, tdmIoDS1PortEntry=tdmIoDS1PortEntry, tdmIoDS1PortLoopbackType=tdmIoDS1PortLoopbackType, sonetPortPathESS15Min=sonetPortPathESS15Min, opticalPortLaserWavelength=opticalPortLaserWavelength, ringPortMaxChannels=ringPortMaxChannels, etherPortStatsTxPkts64Octets=etherPortStatsTxPkts64Octets, tdmIoDS1PortBuildOut=tdmIoDS1PortBuildOut, tdmIoDS1PortPrbsInversion=tdmIoDS1PortPrbsInversion, sonetPortTiming=sonetPortTiming, ringPortPHYChange=ringPortPHYChange, tdmIoDS1PortBertState=tdmIoDS1PortBertState, etherPortDuplexTrapEnable=etherPortDuplexTrapEnable, opticalPortTxEnable=opticalPortTxEnable, sonetPortEntry=sonetPortEntry, portPhyStatusChange=portPhyStatusChange, etherPortSpeedCfg=etherPortSpeedCfg, tdmIoDS1PortRowStatus=tdmIoDS1PortRowStatus, tdmIoDS3PortPBitESS15Min=tdmIoDS3PortPBitESS15Min, etherPortAutonegStatusTrap=etherPortAutonegStatusTrap, opticalPortRxSMselect=opticalPortRxSMselect, sonetVTRFIChange=sonetVTRFIChange, opticalPortRxSignalState=opticalPortRxSignalState, tdmIoDS1PortPathESS1Day=tdmIoDS1PortPathESS1Day, ringPortArbiterEnabled=ringPortArbiterEnabled, tdmIoDS1PortPathCVS1Day=tdmIoDS1PortPathCVS1Day, etherPortRowStatus=etherPortRowStatus, sonetPortSectESS1Day=sonetPortSectESS1Day, etherPortDuplexCfg=etherPortDuplexCfg, sonetPortLineUASS1Day=sonetPortLineUASS1Day, sonetTCAStatus=sonetTCAStatus, tdmIoDS3PortEntry=tdmIoDS3PortEntry, sonetVTLOPChange=sonetVTLOPChange, ringPortRingMode=ringPortRingMode, etherPortAutonegTrapEnable=etherPortAutonegTrapEnable, atmPortCDVT=atmPortCDVT, portEntry=portEntry, sonetVTPSLMChange=sonetVTPSLMChange, opticalPortTxSMselect=opticalPortTxSMselect, ringPortK1K2Status=ringPortK1K2Status, atmPortMaxTotalBits=atmPortMaxTotalBits, tdmIoDS1PortLoopbackLlbDeactCodeLen=tdmIoDS1PortLoopbackLlbDeactCodeLen, etherPortRxSyncErrors=etherPortRxSyncErrors, sonetPathUNEQPChange=sonetPathUNEQPChange, tdmIoDS3PortLineESS15Min=tdmIoDS3PortLineESS15Min, tdmIoDS1PortPrbsGenPath=tdmIoDS1PortPrbsGenPath, etherPortStatsTxUndersize=etherPortStatsTxUndersize, tdmIoDS3PortLineCVS15Min=tdmIoDS3PortLineCVS15Min, posPortMode=posPortMode, sonetPortSectCVS1Day=sonetPortSectCVS1Day, opticalPortEntry=opticalPortEntry, tdmIoDS1PortPrbsTransmit=tdmIoDS1PortPrbsTransmit, sonetPathAISChange=sonetPathAISChange, etherPortDefaultVlanId=etherPortDefaultVlanId, tdmIoDS3PortPBitCVS15Min=tdmIoDS3PortPBitCVS15Min, posPortMinPktViolations=posPortMinPktViolations, sonetPortTCAlarm=sonetPortTCAlarm, tdmIoDS3PortPBitCVS1Day=tdmIoDS3PortPBitCVS1Day, tdmIoDS1PortLoopbackState=tdmIoDS1PortLoopbackState, tdmIoDS3PortPBitSESS1Day=tdmIoDS3PortPBitSESS1Day, sonetPortSectSESS15Min=sonetPortSectSESS15Min, tdmIoDS1PortBertResults=tdmIoDS1PortBertResults, tdmIoDS1PortLoopbackLlbActCodeLen=tdmIoDS1PortLoopbackLlbActCodeLen, sonetPortIdString=sonetPortIdString, tdmIoDS1PortPrbsAlgorithm=tdmIoDS1PortPrbsAlgorithm, atmPortTable=atmPortTable, ringPortAISChange=ringPortAISChange, atmPortVPTunnel=atmPortVPTunnel, sonetPortTable=sonetPortTable, tdmIoDS1PortLoopbackLLbActCode=tdmIoDS1PortLoopbackLLbActCode, tdmIoDS1PortLoopbackLlbGenPath=tdmIoDS1PortLoopbackLlbGenPath, ringPortMaxSubChannels=ringPortMaxSubChannels, etherPortStatsTxPkts65to127Octets=etherPortStatsTxPkts65to127Octets, etherPortStatsTxDropParityError=etherPortStatsTxDropParityError, posPortTable=posPortTable, tdmIoDS1PortLCVCount=tdmIoDS1PortLCVCount, etherPortTable=etherPortTable, sonetPathLOPChange=sonetPathLOPChange, tdmIoDS1PortPathESS15Min=tdmIoDS1PortPathESS15Min, atmPortRowStatus=atmPortRowStatus, tdmIoDS3PortCBitESS15Min=tdmIoDS3PortCBitESS15Min, etherPortSpeedStatus=etherPortSpeedStatus, tdmIoDS1PortLineESS15Min=tdmIoDS1PortLineESS15Min, opticalPortLaserPowerLevel=opticalPortLaserPowerLevel, sonetPortPathUASS1Day=sonetPortPathUASS1Day, tdmIoDS3PortUASS1Day=tdmIoDS3PortUASS1Day, tdmIoDS3PortPBitESS1Day=tdmIoDS3PortPBitESS1Day, sonetPathPSLMChange=sonetPathPSLMChange, posPortMaxPktViolations=posPortMaxPktViolations, sonetPortSectSESS1Day=sonetPortSectSESS1Day, ringPortRxFrameErrors=ringPortRxFrameErrors, sonetVTUNEQPChange=sonetVTUNEQPChange, etherPortStatsTxDropFifoOverrun=etherPortStatsTxDropFifoOverrun, sonetPortLineSESS15Min=sonetPortLineSESS15Min, atmPortEntry=atmPortEntry, tdmIoDS1PortPathSESS1Day=tdmIoDS1PortPathSESS1Day, opticalPortTable=opticalPortTable, ringPortK1K2Change=ringPortK1K2Change, tdmIoDS3PortRowStatus=tdmIoDS3PortRowStatus, sonetPortChannelization=sonetPortChannelization, tdmIoDS3PortLineESS1Day=tdmIoDS3PortLineESS1Day, mib2IfIndex=mib2IfIndex, etherPortStatsTxBadFifoUnderrun=etherPortStatsTxBadFifoUnderrun, sonetPortPathCVS15Min=sonetPortPathCVS15Min, opticalPortMode=opticalPortMode, etherPortStatsTxPkts1024to1518Octets=etherPortStatsTxPkts1024to1518Octets, atmPortHCOutCells=atmPortHCOutCells, etherPortEntry=etherPortEntry, sonetPortPathUASS15Min=sonetPortPathUASS15Min, dsxStatus=dsxStatus, tdmIoDS1PortPathSASS15Min=tdmIoDS1PortPathSASS15Min, sonetPortSectESS15Min=sonetPortSectESS15Min, tdmIoDS1PortLineESS1Day=tdmIoDS1PortLineESS1Day, tdmIoDS3PortSEFSS1Day=tdmIoDS3PortSEFSS1Day, sonetPortPathESS1Day=sonetPortPathESS1Day, etherPortPauseStateReceived=etherPortPauseStateReceived, tdmIoDS3PortCBitSESS15Min=tdmIoDS3PortCBitSESS15Min, portNo=portNo, etherPortAutonegAdvDuplex=etherPortAutonegAdvDuplex, PYSNMP_MODULE_ID=portMIB, etherPortStatsTxPkts256to511Octets=etherPortStatsTxPkts256to511Octets, sonetPortRowStatus=sonetPortRowStatus, opticalPortRowStatus=opticalPortRowStatus, ringPortTxFrames=ringPortTxFrames, sonetPortPathCVS1Day=sonetPortPathCVS1Day, ringPortAdminStatus=ringPortAdminStatus, tdmIoDS1PortPathSASS1Day=tdmIoDS1PortPathSASS1Day, etherPortStatsTxControlFrames=etherPortStatsTxControlFrames, etherPortStatsTxBadFifoOverrun=etherPortStatsTxBadFifoOverrun, pysmi_lambda=pysmi_lambda, tdmIoDS3PortSEFSS15Min=tdmIoDS3PortSEFSS15Min, tdmIoDS1PortBertDuration=tdmIoDS1PortBertDuration, sonetPortPathSESS15Min=sonetPortPathSESS15Min, etherPortStatsTxFCSErrors=etherPortStatsTxFCSErrors, sonetPortLineESS15Min=sonetPortLineESS15Min, posPortDefaultVID=posPortDefaultVID, ringPortMaxTDMChannels=ringPortMaxTDMChannels, sonetPortConfigedChans=sonetPortConfigedChans, etherPortStatsTxDropJamError=etherPortStatsTxDropJamError, etherPortSpeedTrapEnable=etherPortSpeedTrapEnable, tdmIoDS3PortCBitSESS1Day=tdmIoDS3PortCBitSESS1Day, posPortMaxPktSize=posPortMaxPktSize, sonetLineRDIChange=sonetLineRDIChange, etherPortStatsTxPkts512to1023Octets=etherPortStatsTxPkts512to1023Octets, sonetSectionLOSChange=sonetSectionLOSChange, sonetPortLineCVS1Day=sonetPortLineCVS1Day, posPortTransportSegmentCount=posPortTransportSegmentCount, etherPortRxOverrun=etherPortRxOverrun, tdmIoDS3PortCBitCVS1Day=tdmIoDS3PortCBitCVS1Day, etherPortStatsTxPkts1519to1530Octets=etherPortStatsTxPkts1519to1530Octets, etherPortStatsTxPkts128to255Octets=etherPortStatsTxPkts128to255Octets, etherPortStatsTxOversize=etherPortStatsTxOversize, etherPortRxDelSeqErrors=etherPortRxDelSeqErrors, ringPortNodeId=ringPortNodeId, etherPortRxFifoOverrunErrors=etherPortRxFifoOverrunErrors, dsxAlarm=dsxAlarm, sonetPortLineSESS1Day=sonetPortLineSESS1Day, tdmIoDS1PortPrbsMonPath=tdmIoDS1PortPrbsMonPath, sonetPathRDIChange=sonetPathRDIChange, ringPortPHYStatus=ringPortPHYStatus, sonetSectionLOFChange=sonetSectionLOFChange, etherPortRxThreshOvrszFrames=etherPortRxThreshOvrszFrames, etherPortAutonegAdvSpeed=etherPortAutonegAdvSpeed, tdmIoDS1PortBertPattern=tdmIoDS1PortBertPattern, portTable=portTable, ringPortFrameMode=ringPortFrameMode, sonetVTRDIChange=sonetVTRDIChange)
