#
# PySNMP MIB module CISCO-ATM-NETWORK-CLOCK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ATM-NETWORK-CLOCK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:33:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
PhysicalIndex, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex", "entPhysicalIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, ObjectIdentity, Counter64, Unsigned32, IpAddress, ModuleIdentity, Counter32, Integer32, MibIdentifier, Bits, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Counter64", "Unsigned32", "IpAddress", "ModuleIdentity", "Counter32", "Integer32", "MibIdentifier", "Bits", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
TextualConvention, DisplayString, TruthValue, RowStatus, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus", "TimeStamp")
ciscoAtmNetworkClockMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 121))
ciscoAtmNetworkClockMIB.setRevisions(('2008-02-18 00:00', '2001-12-11 00:00',))
if mibBuilder.loadTexts: ciscoAtmNetworkClockMIB.setLastUpdated('200802180000Z')
if mibBuilder.loadTexts: ciscoAtmNetworkClockMIB.setOrganization('Cisco System Inc.')
ciscoAtmNetworkClockMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 1))
cncGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1))
cncManualSource = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 2))
cncNcdpSource = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3))
cncNcdp = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 4))
class CncStratum(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("s1", 1), ("s2e", 2), ("s2", 3), ("s3e", 4), ("s3", 5), ("s4e", 6), ("s4", 7), ("other", 8))

class CncHealth(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("good", 1), ("bad", 2), ("unknown", 3))

cncDistributionMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ncdp", 1), ("manual", 2))).clone('manual')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncDistributionMethod.setStatus('current')
cncNotificationOnChange = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncNotificationOnChange.setStatus('current')
cncNodeStratum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 3), CncStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cncNodeStratum.setStatus('current')
cncNcdpMaxDiameter = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncNcdpMaxDiameter.setStatus('current')
cncNcdpMessageInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(75, 60000)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncNcdpMessageInterval.setStatus('current')
cncNcdpHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(75, 60000)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncNcdpHoldTime.setStatus('current')
cncSourceChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("lossOfLock", 2), ("lossOfActivity", 3), ("ncdpRestructure", 4), ("other", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cncSourceChangeReason.setStatus('current')
cncSourceChangeTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cncSourceChangeTimeStamp.setStatus('current')
cncRootClockSource = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 1, 9), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cncRootClockSource.setStatus('current')
cncManualSourceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 2, 1), )
if mibBuilder.loadTexts: cncManualSourceTable.setStatus('current')
cncManualSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ATM-NETWORK-CLOCK-MIB", "cncManualSourcePriority"))
if mibBuilder.loadTexts: cncManualSourceEntry.setStatus('current')
cncManualSourcePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("default", 3))))
if mibBuilder.loadTexts: cncManualSourcePriority.setStatus('current')
cncManualSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 2, 1, 1, 2), PhysicalIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cncManualSourceId.setStatus('current')
cncManualSourceHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 2, 1, 1, 3), CncHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cncManualSourceHealth.setStatus('current')
cncManualRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cncManualRowStatus.setStatus('current')
cncNcdpSourceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3, 1), )
if mibBuilder.loadTexts: cncNcdpSourceTable.setStatus('current')
cncNcdpSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cncNcdpSourceEntry.setStatus('current')
cncNcdpBestClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cncNcdpBestClockSource.setStatus('current')
cncNcdpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cncNcdpPriority.setStatus('current')
cncNcdpStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3, 1, 1, 3), CncStratum()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cncNcdpStratum.setStatus('current')
cncNcdpPRSReference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cncNcdpPRSReference.setStatus('current')
cncNcdpSourceHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3, 1, 1, 5), CncHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cncNcdpSourceHealth.setStatus('current')
cncNcdpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 3, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cncNcdpRowStatus.setStatus('current')
cncNcdpAtmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 4, 1), )
if mibBuilder.loadTexts: cncNcdpAtmTable.setStatus('current')
cncNcdpAtmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 4, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cncNcdpAtmEntry.setStatus('current')
cncNcdpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 4, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncNcdpEnable.setStatus('current')
cncNcdpAdminWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncNcdpAdminWeight.setStatus('current')
cncNcdpVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncNcdpVpi.setStatus('current')
cncNcdpVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(34)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cncNcdpVci.setStatus('current')
cncNcdpHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 121, 1, 4, 1, 1, 5), CncHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cncNcdpHealth.setStatus('current')
ciscoAtmNetworkClockNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 2))
ciscoAtmNetworkClockMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 2, 0))
cncNotifySourceChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 121, 2, 0, 1)).setObjects(("CISCO-ATM-NETWORK-CLOCK-MIB", "cncSourceChangeReason"))
if mibBuilder.loadTexts: cncNotifySourceChange.setStatus('current')
ciscoAtmNetworkClockConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 3))
ciscoAtmNetworkClockMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 3, 1))
ciscoAtmNetworkClockMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 121, 3, 2))
cncMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 121, 3, 1, 1)).setObjects(("CISCO-ATM-NETWORK-CLOCK-MIB", "cncGroup"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cncMIBCompliance = cncMIBCompliance.setStatus('current')
cncGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 121, 3, 2, 1)).setObjects(("CISCO-ATM-NETWORK-CLOCK-MIB", "cncDistributionMethod"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNotificationOnChange"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNodeStratum"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpMaxDiameter"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpMessageInterval"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpHoldTime"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncSourceChangeReason"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncSourceChangeTimeStamp"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncRootClockSource"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncManualSourceId"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncManualSourceHealth"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncManualRowStatus"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpBestClockSource"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpPriority"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpStratum"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpPRSReference"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpSourceHealth"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpRowStatus"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpEnable"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpAdminWeight"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpVpi"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpVci"), ("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNcdpHealth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cncGroup = cncGroup.setStatus('current')
cncNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 121, 3, 2, 2)).setObjects(("CISCO-ATM-NETWORK-CLOCK-MIB", "cncNotifySourceChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cncNotificationGroup = cncNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ATM-NETWORK-CLOCK-MIB", cncNcdpMaxDiameter=cncNcdpMaxDiameter, ciscoAtmNetworkClockMIB=ciscoAtmNetworkClockMIB, cncGlobal=cncGlobal, cncManualSourceId=cncManualSourceId, cncManualSourceTable=cncManualSourceTable, cncNcdpHealth=cncNcdpHealth, cncSourceChangeReason=cncSourceChangeReason, ciscoAtmNetworkClockConformance=ciscoAtmNetworkClockConformance, cncNcdpAtmTable=cncNcdpAtmTable, cncManualSourceHealth=cncManualSourceHealth, cncDistributionMethod=cncDistributionMethod, cncNotificationOnChange=cncNotificationOnChange, cncNcdpAtmEntry=cncNcdpAtmEntry, cncNcdpBestClockSource=cncNcdpBestClockSource, cncNcdpSource=cncNcdpSource, cncManualSourceEntry=cncManualSourceEntry, cncNcdpPRSReference=cncNcdpPRSReference, cncNotifySourceChange=cncNotifySourceChange, cncManualSourcePriority=cncManualSourcePriority, ciscoAtmNetworkClockMIBNotifications=ciscoAtmNetworkClockMIBNotifications, cncNcdpPriority=cncNcdpPriority, cncNotificationGroup=cncNotificationGroup, ciscoAtmNetworkClockMIBCompliances=ciscoAtmNetworkClockMIBCompliances, cncNcdpEnable=cncNcdpEnable, PYSNMP_MODULE_ID=ciscoAtmNetworkClockMIB, cncNodeStratum=cncNodeStratum, cncNcdp=cncNcdp, ciscoAtmNetworkClockMIBObjects=ciscoAtmNetworkClockMIBObjects, CncStratum=CncStratum, cncNcdpVci=cncNcdpVci, cncNcdpMessageInterval=cncNcdpMessageInterval, ciscoAtmNetworkClockNotificationPrefix=ciscoAtmNetworkClockNotificationPrefix, cncManualRowStatus=cncManualRowStatus, cncNcdpVpi=cncNcdpVpi, cncNcdpSourceHealth=cncNcdpSourceHealth, cncNcdpRowStatus=cncNcdpRowStatus, cncGroup=cncGroup, cncRootClockSource=cncRootClockSource, cncNcdpHoldTime=cncNcdpHoldTime, cncNcdpAdminWeight=cncNcdpAdminWeight, cncManualSource=cncManualSource, cncSourceChangeTimeStamp=cncSourceChangeTimeStamp, cncNcdpSourceEntry=cncNcdpSourceEntry, cncNcdpStratum=cncNcdpStratum, CncHealth=CncHealth, cncNcdpSourceTable=cncNcdpSourceTable, ciscoAtmNetworkClockMIBGroups=ciscoAtmNetworkClockMIBGroups, cncMIBCompliance=cncMIBCompliance)
