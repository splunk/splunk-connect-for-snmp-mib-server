#
# PySNMP MIB module CISCO-HSRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-HSRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:42:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Bits, Gauge32, ObjectIdentity, Counter32, Unsigned32, IpAddress, Counter64, MibIdentifier, NotificationType, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "Gauge32", "ObjectIdentity", "Counter32", "Unsigned32", "IpAddress", "Counter64", "MibIdentifier", "NotificationType", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
TruthValue, RowStatus, TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString", "MacAddress")
ciscoHsrpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 106))
ciscoHsrpMIB.setRevisions(('2010-09-06 00:00', '2005-12-20 00:00', '1998-08-03 00:00',))
if mibBuilder.loadTexts: ciscoHsrpMIB.setLastUpdated('201009060000Z')
if mibBuilder.loadTexts: ciscoHsrpMIB.setOrganization('Cisco Systems, Inc.')
class HsrpState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("initial", 1), ("learn", 2), ("listen", 3), ("speak", 4), ("standby", 5), ("active", 6))

ciscoHsrpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 106, 1))
cHsrpGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 1))
cHsrpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2))
cHsrpConfigTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cHsrpConfigTimeout.setStatus('current')
cHsrpGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1), )
if mibBuilder.loadTexts: cHsrpGrpTable.setStatus('current')
cHsrpGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-HSRP-MIB", "cHsrpGrpNumber"))
if mibBuilder.loadTexts: cHsrpGrpEntry.setStatus('current')
cHsrpGrpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cHsrpGrpNumber.setStatus('current')
cHsrpGrpAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)).clone('cisco')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpAuth.setStatus('current')
cHsrpGrpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpPriority.setStatus('current')
cHsrpGrpPreempt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpPreempt.setStatus('current')
cHsrpGrpPreemptDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpPreemptDelay.setStatus('current')
cHsrpGrpUseConfiguredTimers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHsrpGrpUseConfiguredTimers.setStatus('current')
cHsrpGrpConfiguredHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 7), Unsigned32().clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpConfiguredHelloTime.setStatus('current')
cHsrpGrpConfiguredHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 8), Unsigned32().clone(10000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpConfiguredHoldTime.setStatus('current')
cHsrpGrpLearnedHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 9), Unsigned32().clone(3000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cHsrpGrpLearnedHelloTime.setStatus('current')
cHsrpGrpLearnedHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 10), Unsigned32().clone(10000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cHsrpGrpLearnedHoldTime.setStatus('current')
cHsrpGrpVirtualIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 11), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpVirtualIpAddr.setStatus('current')
cHsrpGrpUseConfigVirtualIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHsrpGrpUseConfigVirtualIpAddr.setStatus('current')
cHsrpGrpActiveRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHsrpGrpActiveRouter.setStatus('current')
cHsrpGrpStandbyRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHsrpGrpStandbyRouter.setStatus('current')
cHsrpGrpStandbyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 15), HsrpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHsrpGrpStandbyState.setStatus('current')
cHsrpGrpVirtualMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 16), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHsrpGrpVirtualMacAddr.setStatus('current')
cHsrpGrpEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpEntryRowStatus.setStatus('current')
cHsrpGrpIpNone = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 106, 1, 2, 1, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cHsrpGrpIpNone.setStatus('current')
cHsrpMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 106, 2))
cHsrpMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 106, 2, 0))
cHsrpStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 106, 2, 0, 1)).setObjects(("CISCO-HSRP-MIB", "cHsrpGrpStandbyState"))
if mibBuilder.loadTexts: cHsrpStateChange.setStatus('current')
cHsrpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 106, 3))
cHsrpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 1))
cHsrpComplianceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 2))
cHsrpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 1, 1)).setObjects(("CISCO-HSRP-MIB", "cHsrpConfigGroup"), ("CISCO-HSRP-MIB", "cHsrpGrpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cHsrpCompliance = cHsrpCompliance.setStatus('deprecated')
cHsrpComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 1, 2)).setObjects(("CISCO-HSRP-MIB", "cHsrpConfigGroup"), ("CISCO-HSRP-MIB", "cHsrpGrpGroup"), ("CISCO-HSRP-MIB", "cHsrpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cHsrpComplianceRev1 = cHsrpComplianceRev1.setStatus('deprecated')
cHsrpComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 1, 3)).setObjects(("CISCO-HSRP-MIB", "cHsrpConfigGroup"), ("CISCO-HSRP-MIB", "cHsrpGrpGroup"), ("CISCO-HSRP-MIB", "cHsrpGrpGroupSup"), ("CISCO-HSRP-MIB", "cHsrpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cHsrpComplianceRev2 = cHsrpComplianceRev2.setStatus('current')
cHsrpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 2, 1)).setObjects(("CISCO-HSRP-MIB", "cHsrpConfigTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cHsrpConfigGroup = cHsrpConfigGroup.setStatus('current')
cHsrpGrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 2, 2)).setObjects(("CISCO-HSRP-MIB", "cHsrpGrpAuth"), ("CISCO-HSRP-MIB", "cHsrpGrpPriority"), ("CISCO-HSRP-MIB", "cHsrpGrpPreempt"), ("CISCO-HSRP-MIB", "cHsrpGrpPreemptDelay"), ("CISCO-HSRP-MIB", "cHsrpGrpUseConfiguredTimers"), ("CISCO-HSRP-MIB", "cHsrpGrpConfiguredHelloTime"), ("CISCO-HSRP-MIB", "cHsrpGrpConfiguredHoldTime"), ("CISCO-HSRP-MIB", "cHsrpGrpLearnedHelloTime"), ("CISCO-HSRP-MIB", "cHsrpGrpLearnedHoldTime"), ("CISCO-HSRP-MIB", "cHsrpGrpVirtualIpAddr"), ("CISCO-HSRP-MIB", "cHsrpGrpUseConfigVirtualIpAddr"), ("CISCO-HSRP-MIB", "cHsrpGrpActiveRouter"), ("CISCO-HSRP-MIB", "cHsrpGrpStandbyRouter"), ("CISCO-HSRP-MIB", "cHsrpGrpStandbyState"), ("CISCO-HSRP-MIB", "cHsrpGrpVirtualMacAddr"), ("CISCO-HSRP-MIB", "cHsrpGrpEntryRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cHsrpGrpGroup = cHsrpGrpGroup.setStatus('current')
cHsrpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 2, 3)).setObjects(("CISCO-HSRP-MIB", "cHsrpStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cHsrpNotificationsGroup = cHsrpNotificationsGroup.setStatus('current')
cHsrpGrpGroupSup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 106, 3, 2, 4)).setObjects(("CISCO-HSRP-MIB", "cHsrpGrpIpNone"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cHsrpGrpGroupSup = cHsrpGrpGroupSup.setStatus('current')
mibBuilder.exportSymbols("CISCO-HSRP-MIB", cHsrpConformance=cHsrpConformance, cHsrpCompliance=cHsrpCompliance, cHsrpConfigGroup=cHsrpConfigGroup, cHsrpConfigTimeout=cHsrpConfigTimeout, cHsrpGrpConfiguredHelloTime=cHsrpGrpConfiguredHelloTime, cHsrpGrpNumber=cHsrpGrpNumber, cHsrpGrpLearnedHelloTime=cHsrpGrpLearnedHelloTime, cHsrpComplianceGroups=cHsrpComplianceGroups, cHsrpGrpUseConfigVirtualIpAddr=cHsrpGrpUseConfigVirtualIpAddr, cHsrpComplianceRev2=cHsrpComplianceRev2, cHsrpGrpTable=cHsrpGrpTable, cHsrpGrpVirtualIpAddr=cHsrpGrpVirtualIpAddr, cHsrpNotificationsGroup=cHsrpNotificationsGroup, cHsrpGrpUseConfiguredTimers=cHsrpGrpUseConfiguredTimers, cHsrpGrpAuth=cHsrpGrpAuth, cHsrpCompliances=cHsrpCompliances, cHsrpGrpActiveRouter=cHsrpGrpActiveRouter, PYSNMP_MODULE_ID=ciscoHsrpMIB, cHsrpGrpConfiguredHoldTime=cHsrpGrpConfiguredHoldTime, cHsrpGrpGroup=cHsrpGrpGroup, cHsrpGrpGroupSup=cHsrpGrpGroupSup, cHsrpGrpIpNone=cHsrpGrpIpNone, cHsrpMIBNotificationPrefix=cHsrpMIBNotificationPrefix, cHsrpGrpStandbyState=cHsrpGrpStandbyState, ciscoHsrpMIB=ciscoHsrpMIB, HsrpState=HsrpState, cHsrpGrpStandbyRouter=cHsrpGrpStandbyRouter, cHsrpGrpVirtualMacAddr=cHsrpGrpVirtualMacAddr, cHsrpGlobalConfig=cHsrpGlobalConfig, cHsrpGrpEntryRowStatus=cHsrpGrpEntryRowStatus, cHsrpGrpPriority=cHsrpGrpPriority, cHsrpGrpPreempt=cHsrpGrpPreempt, cHsrpGrpLearnedHoldTime=cHsrpGrpLearnedHoldTime, cHsrpComplianceRev1=cHsrpComplianceRev1, cHsrpMIBNotifications=cHsrpMIBNotifications, cHsrpStateChange=cHsrpStateChange, cHsrpGroup=cHsrpGroup, cHsrpGrpPreemptDelay=cHsrpGrpPreemptDelay, cHsrpGrpEntry=cHsrpGrpEntry, ciscoHsrpMIBObjects=ciscoHsrpMIBObjects)
