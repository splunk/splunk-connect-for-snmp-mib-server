#
# PySNMP MIB module PANDATEL-FOBUS-MODEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PANDATEL-FOBUS-MODEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:28:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
mdmSpecifics, device_id = mibBuilder.importSymbols("PANDATEL-MODEM-MIB", "mdmSpecifics", "device-id")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, ObjectIdentity, NotificationType, Counter32, Bits, Counter64, iso, ModuleIdentity, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "ObjectIdentity", "NotificationType", "Counter32", "Bits", "Counter64", "iso", "ModuleIdentity", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
fobus_modem = MibIdentifier((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 10000, 2, 501)).setLabel("fobus-modem")
fobus = MibIdentifier((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501))
fobusModemTable = MibTable((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1), )
if mibBuilder.loadTexts: fobusModemTable.setStatus('mandatory')
fobusTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1), ).setIndexNames((0, "PANDATEL-FOBUS-MODEM-MIB", "mdmRack"), (0, "PANDATEL-FOBUS-MODEM-MIB", "mdmModem"), (0, "PANDATEL-FOBUS-MODEM-MIB", "mdmPosition"))
if mibBuilder.loadTexts: fobusTableEntry.setStatus('mandatory')
mdmRack = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRack.setStatus('mandatory')
mdmModem = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmModem.setStatus('mandatory')
mdmPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmPosition.setStatus('mandatory')
mdmModemName = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmModemName.setStatus('mandatory')
mdmBackupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("inactive", 2), ("active", 3), ("not-available", 4), ("available", 5), ("disable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmBackupStatus.setStatus('mandatory')
mdmActiveLink = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 90))).clone(namedValues=NamedValues(("line-port-2", 2), ("line-port-3", 3), ("disable", 90)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmActiveLink.setStatus('mandatory')
mdmOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("forced-port2", 3), ("forced-port3", 4), ("automatic", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmOperationMode.setStatus('mandatory')
mdmAlarmConditionPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 110), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("link-signal", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAlarmConditionPort1.setStatus('mandatory')
mdmAlarmConditionPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 111), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("no-link-signal", 3), ("laser-fail", 4), ("no-link-signal-or-laser-fail", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAlarmConditionPort2.setStatus('mandatory')
mdmAlarmConditionPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 112), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("no-link-signal", 3), ("laser-fail", 4), ("no-link-signal-or-laser-fail", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAlarmConditionPort3.setStatus('mandatory')
mdmTXLaserStatusPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 121), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTXLaserStatusPort2.setStatus('mandatory')
mdmTXLaserStatusPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 501, 1, 1, 122), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTXLaserStatusPort3.setStatus('mandatory')
mibBuilder.exportSymbols("PANDATEL-FOBUS-MODEM-MIB", mdmModemName=mdmModemName, mdmPosition=mdmPosition, mdmBackupStatus=mdmBackupStatus, fobus_modem=fobus_modem, mdmModem=mdmModem, mdmRack=mdmRack, mdmActiveLink=mdmActiveLink, mdmAlarmConditionPort1=mdmAlarmConditionPort1, fobusModemTable=fobusModemTable, mdmOperationMode=mdmOperationMode, mdmTXLaserStatusPort3=mdmTXLaserStatusPort3, fobus=fobus, mdmAlarmConditionPort2=mdmAlarmConditionPort2, fobusTableEntry=fobusTableEntry, mdmAlarmConditionPort3=mdmAlarmConditionPort3, mdmTXLaserStatusPort2=mdmTXLaserStatusPort2)
