#
# PySNMP MIB module Wellfleet-LLC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-LLC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, IpAddress, ObjectIdentity, Integer32, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, TimeTicks, MibIdentifier, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "IpAddress", "ObjectIdentity", "Integer32", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "TimeTicks", "MibIdentifier", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfLlcGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfLlcGroup")
wfLlc = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 1))
wfLlcBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcBaseDelete.setStatus('mandatory')
wfLlcBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcBaseDisable.setStatus('mandatory')
wfLlcBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcBaseState.setStatus('mandatory')
wfLlcInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2), )
if mibBuilder.loadTexts: wfLlcInterfaceTable.setStatus('mandatory')
wfLlcInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1), ).setIndexNames((0, "Wellfleet-LLC-MIB", "wfLlcInterfaceCircuit"))
if mibBuilder.loadTexts: wfLlcInterfaceEntry.setStatus('mandatory')
wfLlcInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceDelete.setStatus('mandatory')
wfLlcInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceDisable.setStatus('mandatory')
wfLlcInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcInterfaceState.setStatus('mandatory')
wfLlcInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcInterfaceCircuit.setStatus('mandatory')
wfLlcInterfaceLlc2CctId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceLlc2CctId.setStatus('mandatory')
wfLlc1InterfaceMaxUinfoSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5128)).clone(5128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc1InterfaceMaxUinfoSize.setStatus('mandatory')
wfLlc1InterfaceMaxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc1InterfaceMaxRetry.setStatus('mandatory')
wfLlc1InterfaceTAckWait = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc1InterfaceTAckWait.setStatus('mandatory')
wfLlc2InterfaceMaxInfoSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5128)).clone(5128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceMaxInfoSize.setStatus('mandatory')
wfLlc2InterfaceK = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceK.setStatus('mandatory')
wfLlc2InterfaceN2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceN2.setStatus('mandatory')
wfLlc2InterfaceN3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceN3.setStatus('mandatory')
wfLlc2InterfaceTAckWait = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceTAckWait.setStatus('mandatory')
wfLlc2InterfaceTReject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceTReject.setStatus('mandatory')
wfLlc2InterfaceTRemoteBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceTRemoteBusy.setStatus('mandatory')
wfLlc2InterfaceTRspAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceTRspAck.setStatus('mandatory')
wfLlc2InterfaceTIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceTIdle.setStatus('mandatory')
wfLlc2InterfaceTPollCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceTPollCycle.setStatus('mandatory')
wfLlcInterfaceMaxNumOfSap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceMaxNumOfSap.setStatus('mandatory')
wfLlcInterfaceMaxNumOfLink = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 5000)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceMaxNumOfLink.setStatus('mandatory')
wfLlcInterfaceDupAddrCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceDupAddrCheck.setStatus('mandatory')
wfLlc2InterfaceRW = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceRW.setStatus('mandatory')
wfLlc2InterfaceTW = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceTW.setStatus('mandatory')
wfLlcInterfaceEncapsType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 1), ("tring", 2), ("csmacd", 3), ("srb", 4), ("fr", 5))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceEncapsType.setStatus('mandatory')
wfLlcInterfaceSrbRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceSrbRingId.setStatus('mandatory')
wfLlcInterfaceFrVMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 26), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceFrVMask.setStatus('mandatory')
wfLlc2InterfaceDynWin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2InterfaceDynWin.setStatus('mandatory')
wfLlcInterfaceCurrentLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcInterfaceCurrentLinks.setStatus('mandatory')
wfLlcInterfaceHiWaterLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcInterfaceHiWaterLinks.setStatus('mandatory')
wfLlcInterfaceHiWaterReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("reset", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceHiWaterReset.setStatus('mandatory')
wfLlcInterfaceFrSapTranslation = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcInterfaceFrSapTranslation.setStatus('mandatory')
wfLlcSapTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 3), )
if mibBuilder.loadTexts: wfLlcSapTable.setStatus('mandatory')
wfLlcSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 3, 1), ).setIndexNames((0, "Wellfleet-LLC-MIB", "wfLlcSapCircuit"), (0, "Wellfleet-LLC-MIB", "wfLlcSapValue"))
if mibBuilder.loadTexts: wfLlcSapEntry.setStatus('mandatory')
wfLlcSapCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcSapCircuit.setStatus('mandatory')
wfLlcSapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcSapValue.setStatus('mandatory')
wfLlcLinkTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4), )
if mibBuilder.loadTexts: wfLlcLinkTable.setStatus('mandatory')
wfLlcLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1), ).setIndexNames((0, "Wellfleet-LLC-MIB", "wfLlcLinkCircuit"), (0, "Wellfleet-LLC-MIB", "wfLlcLinkDestMadr"), (0, "Wellfleet-LLC-MIB", "wfLlcLinkSrcMadr"), (0, "Wellfleet-LLC-MIB", "wfLlcLinkDsap"), (0, "Wellfleet-LLC-MIB", "wfLlcLinkSsap"))
if mibBuilder.loadTexts: wfLlcLinkEntry.setStatus('mandatory')
wfLlcLinkCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcLinkCircuit.setStatus('mandatory')
wfLlcLinkDestMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcLinkDestMadr.setStatus('mandatory')
wfLlcLinkSrcMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcLinkSrcMadr.setStatus('mandatory')
wfLlcLinkDsap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcLinkDsap.setStatus('mandatory')
wfLlcLinkSsap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcLinkSsap.setStatus('mandatory')
wfLlcInfoRxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcInfoRxCnt.setStatus('mandatory')
wfLlcInfoTxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcInfoTxCnt.setStatus('mandatory')
wfLlcInfoReXmitCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcInfoReXmitCnt.setStatus('mandatory')
wfLlcByteInfoRxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcByteInfoRxCnt.setStatus('mandatory')
wfLlcByteInfoTxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcByteInfoTxCnt.setStatus('mandatory')
wfLlcRrRxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcRrRxCnt.setStatus('mandatory')
wfLlcRrTxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcRrTxCnt.setStatus('mandatory')
wfLlcRnrRxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcRnrRxCnt.setStatus('mandatory')
wfLlcRnrTxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcRnrTxCnt.setStatus('mandatory')
wfLlcRejRxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcRejRxCnt.setStatus('mandatory')
wfLlcRejTxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcRejTxCnt.setStatus('mandatory')
wfLlcFrmrRxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcFrmrRxCnt.setStatus('mandatory')
wfLlcFrmrTxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcFrmrTxCnt.setStatus('mandatory')
wfLlcFlowDefersCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcFlowDefersCnt.setStatus('mandatory')
wfLlcWaitAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcWaitAckTimeouts.setStatus('mandatory')
wfLlcRejectTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcRejectTimeouts.setStatus('mandatory')
wfLlcPollCycleTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcPollCycleTimeouts.setStatus('mandatory')
wfLlcStateChangeCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcStateChangeCnt.setStatus('mandatory')
wfLlcLastChangeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcLastChangeReason.setStatus('mandatory')
wfLlcCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcCurrentState.setStatus('mandatory')
wfLlc2TrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8), )
if mibBuilder.loadTexts: wfLlc2TrafficFilterTable.setStatus('mandatory')
wfLlc2TrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1), ).setIndexNames((0, "Wellfleet-LLC-MIB", "wfLlc2TrafficFilterCircuit"), (0, "Wellfleet-LLC-MIB", "wfLlc2TrafficFilterRuleNumber"), (0, "Wellfleet-LLC-MIB", "wfLlc2TrafficFilterFragment"))
if mibBuilder.loadTexts: wfLlc2TrafficFilterEntry.setStatus('mandatory')
wfLlc2TrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2TrafficFilterCreate.setStatus('mandatory')
wfLlc2TrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2TrafficFilterEnable.setStatus('mandatory')
wfLlc2TrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlc2TrafficFilterStatus.setStatus('mandatory')
wfLlc2TrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlc2TrafficFilterCounter.setStatus('mandatory')
wfLlc2TrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2TrafficFilterDefinition.setStatus('mandatory')
wfLlc2TrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlc2TrafficFilterReserved.setStatus('mandatory')
wfLlc2TrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlc2TrafficFilterCircuit.setStatus('mandatory')
wfLlc2TrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlc2TrafficFilterRuleNumber.setStatus('mandatory')
wfLlc2TrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlc2TrafficFilterFragment.setStatus('mandatory')
wfLlc2TrafficFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 8, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlc2TrafficFilterName.setStatus('mandatory')
wfLlcDlciTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 9), )
if mibBuilder.loadTexts: wfLlcDlciTable.setStatus('mandatory')
wfLlcDlciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 9, 1), ).setIndexNames((0, "Wellfleet-LLC-MIB", "wfLlcDlciCct"), (0, "Wellfleet-LLC-MIB", "wfLlcDlciNum"))
if mibBuilder.loadTexts: wfLlcDlciEntry.setStatus('mandatory')
wfLlcDlciDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcDlciDelete.setStatus('mandatory')
wfLlcDlciCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcDlciCct.setStatus('mandatory')
wfLlcDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcDlciNum.setStatus('mandatory')
wfLlcDlciLocalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 9, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcDlciLocalMac.setStatus('mandatory')
wfLlcDlciRemoteMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 9, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcDlciRemoteMac.setStatus('mandatory')
wfLlcFrSvcTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10), )
if mibBuilder.loadTexts: wfLlcFrSvcTable.setStatus('mandatory')
wfLlcFrSvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1), ).setIndexNames((0, "Wellfleet-LLC-MIB", "wfLlcFrSvcCct"), (0, "Wellfleet-LLC-MIB", "wfLlcFrSvcMac"))
if mibBuilder.loadTexts: wfLlcFrSvcEntry.setStatus('mandatory')
wfLlcFrSvcDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcFrSvcDelete.setStatus('mandatory')
wfLlcFrSvcCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcFrSvcCct.setStatus('mandatory')
wfLlcFrSvcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLlcFrSvcMac.setStatus('mandatory')
wfLlcFrSvcMappingType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcFrSvcMappingType.setStatus('mandatory')
wfLlcFrSvcX121Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcFrSvcX121Addr.setStatus('mandatory')
wfLlcFrSvcSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcFrSvcSubAddr.setStatus('mandatory')
wfLlcFrSvcPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("e164", 1), ("x121", 3))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcFrSvcPlan.setStatus('mandatory')
wfLlcFrSvcTypeOfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 6, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("international", 2))).clone('international')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLlcFrSvcTypeOfNumber.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-LLC-MIB", wfLlcInfoRxCnt=wfLlcInfoRxCnt, wfLlc2InterfaceRW=wfLlc2InterfaceRW, wfLlcDlciTable=wfLlcDlciTable, wfLlc1InterfaceMaxUinfoSize=wfLlc1InterfaceMaxUinfoSize, wfLlcBaseDisable=wfLlcBaseDisable, wfLlc2TrafficFilterCircuit=wfLlc2TrafficFilterCircuit, wfLlcSapTable=wfLlcSapTable, wfLlcSapValue=wfLlcSapValue, wfLlc2TrafficFilterFragment=wfLlc2TrafficFilterFragment, wfLlcInterfaceDisable=wfLlcInterfaceDisable, wfLlc2InterfaceTRemoteBusy=wfLlc2InterfaceTRemoteBusy, wfLlc2InterfaceMaxInfoSize=wfLlc2InterfaceMaxInfoSize, wfLlcFrSvcMac=wfLlcFrSvcMac, wfLlc2InterfaceTRspAck=wfLlc2InterfaceTRspAck, wfLlc2InterfaceTW=wfLlc2InterfaceTW, wfLlcRnrRxCnt=wfLlcRnrRxCnt, wfLlcInterfaceDupAddrCheck=wfLlcInterfaceDupAddrCheck, wfLlcInterfaceHiWaterReset=wfLlcInterfaceHiWaterReset, wfLlc2InterfaceTReject=wfLlc2InterfaceTReject, wfLlcDlciLocalMac=wfLlcDlciLocalMac, wfLlcInterfaceDelete=wfLlcInterfaceDelete, wfLlc2InterfaceDynWin=wfLlc2InterfaceDynWin, wfLlcWaitAckTimeouts=wfLlcWaitAckTimeouts, wfLlcInterfaceEntry=wfLlcInterfaceEntry, wfLlcFrmrRxCnt=wfLlcFrmrRxCnt, wfLlcLinkCircuit=wfLlcLinkCircuit, wfLlcInterfaceFrSapTranslation=wfLlcInterfaceFrSapTranslation, wfLlc2InterfaceTIdle=wfLlc2InterfaceTIdle, wfLlc2TrafficFilterReserved=wfLlc2TrafficFilterReserved, wfLlc2InterfaceN2=wfLlc2InterfaceN2, wfLlcFlowDefersCnt=wfLlcFlowDefersCnt, wfLlc2TrafficFilterRuleNumber=wfLlc2TrafficFilterRuleNumber, wfLlcInterfaceLlc2CctId=wfLlcInterfaceLlc2CctId, wfLlcInterfaceCurrentLinks=wfLlcInterfaceCurrentLinks, wfLlcFrSvcTable=wfLlcFrSvcTable, wfLlcDlciRemoteMac=wfLlcDlciRemoteMac, wfLlcInterfaceHiWaterLinks=wfLlcInterfaceHiWaterLinks, wfLlcByteInfoTxCnt=wfLlcByteInfoTxCnt, wfLlcInterfaceTable=wfLlcInterfaceTable, wfLlcInterfaceMaxNumOfSap=wfLlcInterfaceMaxNumOfSap, wfLlcRejectTimeouts=wfLlcRejectTimeouts, wfLlcStateChangeCnt=wfLlcStateChangeCnt, wfLlcFrSvcCct=wfLlcFrSvcCct, wfLlc2TrafficFilterEnable=wfLlc2TrafficFilterEnable, wfLlcInterfaceEncapsType=wfLlcInterfaceEncapsType, wfLlcLinkSsap=wfLlcLinkSsap, wfLlcLastChangeReason=wfLlcLastChangeReason, wfLlcBaseState=wfLlcBaseState, wfLlcInfoTxCnt=wfLlcInfoTxCnt, wfLlcInterfaceFrVMask=wfLlcInterfaceFrVMask, wfLlcInterfaceState=wfLlcInterfaceState, wfLlcFrSvcEntry=wfLlcFrSvcEntry, wfLlcInterfaceSrbRingId=wfLlcInterfaceSrbRingId, wfLlcFrSvcX121Addr=wfLlcFrSvcX121Addr, wfLlc2TrafficFilterCreate=wfLlc2TrafficFilterCreate, wfLlcDlciDelete=wfLlcDlciDelete, wfLlcLinkSrcMadr=wfLlcLinkSrcMadr, wfLlcSapCircuit=wfLlcSapCircuit, wfLlcInterfaceMaxNumOfLink=wfLlcInterfaceMaxNumOfLink, wfLlcFrmrTxCnt=wfLlcFrmrTxCnt, wfLlcLinkTable=wfLlcLinkTable, wfLlc2InterfaceN3=wfLlc2InterfaceN3, wfLlcRejRxCnt=wfLlcRejRxCnt, wfLlcRnrTxCnt=wfLlcRnrTxCnt, wfLlcRejTxCnt=wfLlcRejTxCnt, wfLlcFrSvcPlan=wfLlcFrSvcPlan, wfLlc2TrafficFilterEntry=wfLlc2TrafficFilterEntry, wfLlcFrSvcMappingType=wfLlcFrSvcMappingType, wfLlcPollCycleTimeouts=wfLlcPollCycleTimeouts, wfLlcInterfaceCircuit=wfLlcInterfaceCircuit, wfLlcFrSvcTypeOfNumber=wfLlcFrSvcTypeOfNumber, wfLlc1InterfaceTAckWait=wfLlc1InterfaceTAckWait, wfLlcBaseDelete=wfLlcBaseDelete, wfLlcLinkEntry=wfLlcLinkEntry, wfLlcInfoReXmitCnt=wfLlcInfoReXmitCnt, wfLlcByteInfoRxCnt=wfLlcByteInfoRxCnt, wfLlc2TrafficFilterStatus=wfLlc2TrafficFilterStatus, wfLlcDlciCct=wfLlcDlciCct, wfLlc2InterfaceTAckWait=wfLlc2InterfaceTAckWait, wfLlcLinkDestMadr=wfLlcLinkDestMadr, wfLlcDlciEntry=wfLlcDlciEntry, wfLlc2TrafficFilterTable=wfLlc2TrafficFilterTable, wfLlc2InterfaceK=wfLlc2InterfaceK, wfLlcSapEntry=wfLlcSapEntry, wfLlc2TrafficFilterCounter=wfLlc2TrafficFilterCounter, wfLlc2InterfaceTPollCycle=wfLlc2InterfaceTPollCycle, wfLlc=wfLlc, wfLlcFrSvcDelete=wfLlcFrSvcDelete, wfLlc1InterfaceMaxRetry=wfLlc1InterfaceMaxRetry, wfLlcCurrentState=wfLlcCurrentState, wfLlcDlciNum=wfLlcDlciNum, wfLlcRrRxCnt=wfLlcRrRxCnt, wfLlc2TrafficFilterName=wfLlc2TrafficFilterName, wfLlc2TrafficFilterDefinition=wfLlc2TrafficFilterDefinition, wfLlcRrTxCnt=wfLlcRrTxCnt, wfLlcFrSvcSubAddr=wfLlcFrSvcSubAddr, wfLlcLinkDsap=wfLlcLinkDsap)
