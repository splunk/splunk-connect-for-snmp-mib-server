#
# PySNMP MIB module HPN-ICF-MPLSTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MPLSTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, ModuleIdentity, TimeTicks, IpAddress, Integer32, MibIdentifier, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, NotificationType, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "IpAddress", "Integer32", "MibIdentifier", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "NotificationType", "Counter64", "Gauge32")
TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
hpnicfMplsTe = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143))
hpnicfMplsTe.setRevisions(('2013-06-13 18:00',))
if mibBuilder.loadTexts: hpnicfMplsTe.setLastUpdated('201306131800Z')
if mibBuilder.loadTexts: hpnicfMplsTe.setOrganization('')
hpnicfMplsTeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1))
hpnicfMplsTeScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 1))
hpnicfMplsTeStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsTeStatus.setStatus('current')
hpnicfMplsTeRsvpStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsTeRsvpStatus.setStatus('current')
hpnicfMplsTeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 2), )
if mibBuilder.loadTexts: hpnicfMplsTeTable.setStatus('current')
hpnicfMplsTeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-MPLSTE-MIB", "hpnicfMplsTeIndex"))
if mibBuilder.loadTexts: hpnicfMplsTeEntry.setStatus('current')
hpnicfMplsTeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsTeIndex.setStatus('current')
hpnicfMplsTeCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsTeCapability.setStatus('current')
hpnicfMplsTeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsTeRowStatus.setStatus('current')
hpnicfMplsTeRsvpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 3), )
if mibBuilder.loadTexts: hpnicfMplsTeRsvpTable.setStatus('current')
hpnicfMplsTeRsvpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-MPLSTE-MIB", "hpnicfMplsTeRsvpIndex"))
if mibBuilder.loadTexts: hpnicfMplsTeRsvpEntry.setStatus('current')
hpnicfMplsTeRsvpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsTeRsvpIndex.setStatus('current')
hpnicfMplsTeRsvpCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsTeRsvpCapability.setStatus('current')
hpnicfMplsTeRsvpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 143, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsTeRsvpRowStatus.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-MPLSTE-MIB", hpnicfMplsTeTable=hpnicfMplsTeTable, hpnicfMplsTeIndex=hpnicfMplsTeIndex, hpnicfMplsTeRsvpStatus=hpnicfMplsTeRsvpStatus, PYSNMP_MODULE_ID=hpnicfMplsTe, hpnicfMplsTeObjects=hpnicfMplsTeObjects, hpnicfMplsTeRowStatus=hpnicfMplsTeRowStatus, hpnicfMplsTeRsvpTable=hpnicfMplsTeRsvpTable, hpnicfMplsTeRsvpEntry=hpnicfMplsTeRsvpEntry, hpnicfMplsTeRsvpCapability=hpnicfMplsTeRsvpCapability, hpnicfMplsTeScalarGroup=hpnicfMplsTeScalarGroup, hpnicfMplsTeEntry=hpnicfMplsTeEntry, hpnicfMplsTeRsvpIndex=hpnicfMplsTeRsvpIndex, hpnicfMplsTe=hpnicfMplsTe, hpnicfMplsTeRsvpRowStatus=hpnicfMplsTeRsvpRowStatus, hpnicfMplsTeCapability=hpnicfMplsTeCapability, hpnicfMplsTeStatus=hpnicfMplsTeStatus)
