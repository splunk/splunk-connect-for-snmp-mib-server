#
# PySNMP MIB module HPN-ICF-PORTAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-PORTAL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddressType, InetAddress, InetAddressIPv4, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressIPv4", "InetAddressPrefixLength")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter32, Counter64, Integer32, ModuleIdentity, Bits, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, NotificationType, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Counter64", "Integer32", "ModuleIdentity", "Bits", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "NotificationType", "IpAddress", "iso")
TextualConvention, RowStatus, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "MacAddress", "DisplayString")
hpnicfPortal = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99))
if mibBuilder.loadTexts: hpnicfPortal.setLastUpdated('201111080000Z')
if mibBuilder.loadTexts: hpnicfPortal.setOrganization('')
hpnicfPortalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 1))
hpnicfPortalMaxUserNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPortalMaxUserNumber.setStatus('current')
hpnicfPortalCurrentUserNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalCurrentUserNumber.setStatus('current')
hpnicfPortalStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatus.setStatus('current')
hpnicfPortalUserNumberUpperLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalUserNumberUpperLimit.setStatus('current')
hpnicfPortalNasId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPortalNasId.setStatus('current')
hpnicfPortalTables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2))
hpnicfPortalServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 1), )
if mibBuilder.loadTexts: hpnicfPortalServerTable.setStatus('current')
hpnicfPortalServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalServerName"))
if mibBuilder.loadTexts: hpnicfPortalServerEntry.setStatus('current')
hpnicfPortalServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPortalServerName.setStatus('current')
hpnicfPortalServerUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPortalServerUrl.setStatus('current')
hpnicfPortalServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPortalServerPort.setStatus('current')
hpnicfPortalIfInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 2), )
if mibBuilder.loadTexts: hpnicfPortalIfInfoTable.setStatus('current')
hpnicfPortalIfInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPortalIfInfoEntry.setStatus('current')
hpnicfPortalAuthReqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalAuthReqNumber.setStatus('current')
hpnicfPortalAuthSuccNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalAuthSuccNumber.setStatus('current')
hpnicfPortalAuthFailNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalAuthFailNumber.setStatus('current')
hpnicfPortalIfServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 3), )
if mibBuilder.loadTexts: hpnicfPortalIfServerTable.setStatus('current')
hpnicfPortalIfServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalIfServerIndex"))
if mibBuilder.loadTexts: hpnicfPortalIfServerEntry.setStatus('current')
hpnicfPortalIfServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfPortalIfServerIndex.setStatus('current')
hpnicfPortalIfServerUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 3, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalIfServerUrl.setStatus('current')
hpnicfPortalIfServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalIfServerRowStatus.setStatus('current')
hpnicfPortalIfVlanNasIDTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 4), )
if mibBuilder.loadTexts: hpnicfPortalIfVlanNasIDTable.setStatus('current')
hpnicfPortalIfVlanNasIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalIfVlanNasIDIfIndex"), (0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalIfVlanNasIDVlanID"))
if mibBuilder.loadTexts: hpnicfPortalIfVlanNasIDEntry.setStatus('current')
hpnicfPortalIfVlanNasIDIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpnicfPortalIfVlanNasIDIfIndex.setStatus('current')
hpnicfPortalIfVlanNasIDVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfPortalIfVlanNasIDVlanID.setStatus('current')
hpnicfPortalIfVlanNasIDNasID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalIfVlanNasIDNasID.setStatus('current')
hpnicfPortalSSIDFreeRuleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 5), )
if mibBuilder.loadTexts: hpnicfPortalSSIDFreeRuleTable.setStatus('current')
hpnicfPortalSSIDFreeRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 5, 1), ).setIndexNames((0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalSSIDFreeRuleIndex"))
if mibBuilder.loadTexts: hpnicfPortalSSIDFreeRuleEntry.setStatus('current')
hpnicfPortalSSIDFreeRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfPortalSSIDFreeRuleIndex.setStatus('current')
hpnicfPortalSSIDFreeRuleSrcSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalSSIDFreeRuleSrcSSID.setStatus('current')
hpnicfPortalSSIDFreeRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalSSIDFreeRuleRowStatus.setStatus('current')
hpnicfPortalSSIDFreeRuleSrcSpot = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalSSIDFreeRuleSrcSpot.setStatus('current')
hpnicfPortalMacTriggerSrvTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 6), )
if mibBuilder.loadTexts: hpnicfPortalMacTriggerSrvTable.setStatus('current')
hpnicfPortalMacTriggerSrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalMacTriggerSrvIndex"))
if mibBuilder.loadTexts: hpnicfPortalMacTriggerSrvEntry.setStatus('current')
hpnicfPortalMacTriggerSrvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfPortalMacTriggerSrvIndex.setStatus('current')
hpnicfPortalMacTriggerSrvIPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 6, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalMacTriggerSrvIPAddrType.setStatus('current')
hpnicfPortalMacTriggerSrvIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 6, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalMacTriggerSrvIP.setStatus('current')
hpnicfPortalMacTriggerSrvPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalMacTriggerSrvPort.setStatus('current')
hpnicfPortalMacTriggerSrvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalMacTriggerSrvRowStatus.setStatus('current')
hpnicfPortalMacTriggerOnIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 7), )
if mibBuilder.loadTexts: hpnicfPortalMacTriggerOnIfTable.setStatus('current')
hpnicfPortalMacTriggerOnIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 7, 1), ).setIndexNames((0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalMacTriggerOnIfIfIndex"))
if mibBuilder.loadTexts: hpnicfPortalMacTriggerOnIfEntry.setStatus('current')
hpnicfPortalMacTriggerOnIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpnicfPortalMacTriggerOnIfIfIndex.setStatus('current')
hpnicfPortalMacTriggerOnIfDetctFlowPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 7, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalMacTriggerOnIfDetctFlowPeriod.setStatus('current')
hpnicfPortalMacTriggerOnIfThresholdFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 7, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalMacTriggerOnIfThresholdFlow.setStatus('current')
hpnicfPortalMacTriggerOnIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalMacTriggerOnIfRowStatus.setStatus('current')
hpnicfPortalFreeRuleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8), )
if mibBuilder.loadTexts: hpnicfPortalFreeRuleTable.setStatus('current')
hpnicfPortalFreeRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1), ).setIndexNames((0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalFreeRuleIndex"))
if mibBuilder.loadTexts: hpnicfPortalFreeRuleEntry.setStatus('current')
hpnicfPortalFreeRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfPortalFreeRuleIndex.setStatus('current')
hpnicfPortalFreeRuleSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleSrcIfIndex.setStatus('current')
hpnicfPortalFreeRuleSrcVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleSrcVlanID.setStatus('current')
hpnicfPortalFreeRuleSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleSrcMac.setStatus('current')
hpnicfPortalFreeRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleAddrType.setStatus('current')
hpnicfPortalFreeRuleSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleSrcAddr.setStatus('current')
hpnicfPortalFreeRuleSrcPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 7), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleSrcPrefix.setStatus('current')
hpnicfPortalFreeRuleDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleDstAddr.setStatus('current')
hpnicfPortalFreeRuleDstPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 9), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleDstPrefix.setStatus('current')
hpnicfPortalFreeRuleProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 6, 17))).clone(namedValues=NamedValues(("invalid", 0), ("tcp", 6), ("udp", 17)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleProtocol.setStatus('current')
hpnicfPortalFreeRuleSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleSrcPort.setStatus('current')
hpnicfPortalFreeRuleDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleDstPort.setStatus('current')
hpnicfPortalFreeRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 8, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalFreeRuleRowStatus.setStatus('current')
hpnicfPortalForbiddenRuleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9), )
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleTable.setStatus('current')
hpnicfPortalForbiddenRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1), ).setIndexNames((0, "HPN-ICF-PORTAL-MIB", "hpnicfPortalForbiddenRuleIndex"))
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleEntry.setStatus('current')
hpnicfPortalForbiddenRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleIndex.setStatus('current')
hpnicfPortalForbiddenRuleSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleSrcIfIndex.setStatus('current')
hpnicfPortalForbiddenRuleSrcVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleSrcVlanID.setStatus('current')
hpnicfPortalForbiddenRuleSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleSrcMac.setStatus('current')
hpnicfPortalForbiddenRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleAddrType.setStatus('current')
hpnicfPortalForbiddenRuleSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleSrcAddr.setStatus('current')
hpnicfPortalForbiddenRuleSrcPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 7), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleSrcPrefix.setStatus('current')
hpnicfPortalForbiddenRuleDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleDstAddr.setStatus('current')
hpnicfPortalForbiddenRuleDstPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 9), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleDstPrefix.setStatus('current')
hpnicfPortalForbiddenRuleProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 6, 17))).clone(namedValues=NamedValues(("invalid", 0), ("tcp", 6), ("udp", 17)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleProtocol.setStatus('current')
hpnicfPortalForbiddenRuleSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleSrcPort.setStatus('current')
hpnicfPortalForbiddenRuleDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleDstPort.setStatus('current')
hpnicfPortalForbiddenRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 2, 9, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPortalForbiddenRuleRowStatus.setStatus('current')
hpnicfPortalTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 3))
hpnicfPortalTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 3, 0))
hpnicfPortalServerLost = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 3, 0, 1)).setObjects(("HPN-ICF-PORTAL-MIB", "hpnicfPortalServerName"), ("HPN-ICF-PORTAL-MIB", "hpnicfPortalFirstTrapTime"), ("HPN-ICF-PORTAL-MIB", "hpnicfPortalServerIP"), ("HPN-ICF-PORTAL-MIB", "hpnicfPortalServerPort"))
if mibBuilder.loadTexts: hpnicfPortalServerLost.setStatus('current')
hpnicfPortalServerGet = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 3, 0, 2)).setObjects(("HPN-ICF-PORTAL-MIB", "hpnicfPortalServerName"), ("HPN-ICF-PORTAL-MIB", "hpnicfPortalFirstTrapTime"), ("HPN-ICF-PORTAL-MIB", "hpnicfPortalServerIP"), ("HPN-ICF-PORTAL-MIB", "hpnicfPortalServerPort"))
if mibBuilder.loadTexts: hpnicfPortalServerGet.setStatus('current')
hpnicfPortalTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 3, 1))
hpnicfPortalFirstTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 3, 1, 1), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPortalFirstTrapTime.setStatus('current')
hpnicfPortalServerIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 3, 1, 2), InetAddressIPv4()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPortalServerIP.setStatus('current')
hpnicfPortalStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4))
hpnicfPortalStatAuthReq = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatAuthReq.setStatus('current')
hpnicfPortalStatAckLogout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatAckLogout.setStatus('current')
hpnicfPortalStatNotifyLogout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatNotifyLogout.setStatus('current')
hpnicfPortalStatChallengeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatChallengeTimeout.setStatus('current')
hpnicfPortalStatChallengeBusy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatChallengeBusy.setStatus('current')
hpnicfPortalStatChallengeFail = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatChallengeFail.setStatus('current')
hpnicfPortalStatAuthTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatAuthTimeout.setStatus('current')
hpnicfPortalStatAuthFail = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatAuthFail.setStatus('current')
hpnicfPortalStatPwdError = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatPwdError.setStatus('current')
hpnicfPortalStatAuthBusy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatAuthBusy.setStatus('current')
hpnicfPortalStatAuthDisordered = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatAuthDisordered.setStatus('current')
hpnicfPortalStatAuthUnknownError = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatAuthUnknownError.setStatus('current')
hpnicfPortalStatAuthResp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatAuthResp.setStatus('current')
hpnicfPortalStatChallengeReq = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatChallengeReq.setStatus('current')
hpnicfPortalStatChallengeResp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatChallengeResp.setStatus('current')
hpnicfPortalStatHttpReq = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatHttpReq.setStatus('current')
hpnicfPortalStatHttpResp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 4, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalStatHttpResp.setStatus('current')
hpnicfPortalPktStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5))
hpnicfPortalPktStaReqAuthNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaReqAuthNum.setStatus('current')
hpnicfPortalPktStaAckAuthSuccess = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckAuthSuccess.setStatus('current')
hpnicfPortalPktStaAckAuthReject = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckAuthReject.setStatus('current')
hpnicfPortalPktStaAckAuthEstablish = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckAuthEstablish.setStatus('current')
hpnicfPortalPktStaAckAuthBusy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckAuthBusy.setStatus('current')
hpnicfPortalPktStaAckAuthAuthFail = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckAuthAuthFail.setStatus('current')
hpnicfPortalPktStaReqChallengeNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaReqChallengeNum.setStatus('current')
hpnicfPortalPktStaAckChallengeSuccess = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckChallengeSuccess.setStatus('current')
hpnicfPortalPktStaAckChallengeReject = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckChallengeReject.setStatus('current')
hpnicfPortalPktStaAckChallengeEstablish = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckChallengeEstablish.setStatus('current')
hpnicfPortalPktStaAckChallengeBusy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckChallengeBusy.setStatus('current')
hpnicfPortalPktStaAckChallengeAuthFail = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 99, 5, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPortalPktStaAckChallengeAuthFail.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-PORTAL-MIB", hpnicfPortalFreeRuleSrcAddr=hpnicfPortalFreeRuleSrcAddr, hpnicfPortalSSIDFreeRuleEntry=hpnicfPortalSSIDFreeRuleEntry, hpnicfPortalServerUrl=hpnicfPortalServerUrl, hpnicfPortalStatAckLogout=hpnicfPortalStatAckLogout, hpnicfPortalIfServerRowStatus=hpnicfPortalIfServerRowStatus, hpnicfPortalServerEntry=hpnicfPortalServerEntry, hpnicfPortalMacTriggerSrvIPAddrType=hpnicfPortalMacTriggerSrvIPAddrType, hpnicfPortalStatChallengeReq=hpnicfPortalStatChallengeReq, hpnicfPortalUserNumberUpperLimit=hpnicfPortalUserNumberUpperLimit, hpnicfPortalFreeRuleDstAddr=hpnicfPortalFreeRuleDstAddr, hpnicfPortalForbiddenRuleAddrType=hpnicfPortalForbiddenRuleAddrType, hpnicfPortalIfVlanNasIDEntry=hpnicfPortalIfVlanNasIDEntry, hpnicfPortalMacTriggerSrvTable=hpnicfPortalMacTriggerSrvTable, hpnicfPortalStatHttpReq=hpnicfPortalStatHttpReq, hpnicfPortalFreeRuleDstPrefix=hpnicfPortalFreeRuleDstPrefix, hpnicfPortalServerName=hpnicfPortalServerName, hpnicfPortalStatAuthTimeout=hpnicfPortalStatAuthTimeout, hpnicfPortalConfig=hpnicfPortalConfig, hpnicfPortalForbiddenRuleSrcAddr=hpnicfPortalForbiddenRuleSrcAddr, hpnicfPortalTrapVarObjects=hpnicfPortalTrapVarObjects, hpnicfPortalFreeRuleRowStatus=hpnicfPortalFreeRuleRowStatus, hpnicfPortalPktStaReqAuthNum=hpnicfPortalPktStaReqAuthNum, hpnicfPortalStatChallengeTimeout=hpnicfPortalStatChallengeTimeout, hpnicfPortalFreeRuleSrcPrefix=hpnicfPortalFreeRuleSrcPrefix, hpnicfPortalFirstTrapTime=hpnicfPortalFirstTrapTime, hpnicfPortalTables=hpnicfPortalTables, hpnicfPortalForbiddenRuleDstPort=hpnicfPortalForbiddenRuleDstPort, hpnicfPortalPktStaAckChallengeSuccess=hpnicfPortalPktStaAckChallengeSuccess, hpnicfPortalStatAuthUnknownError=hpnicfPortalStatAuthUnknownError, hpnicfPortalStatNotifyLogout=hpnicfPortalStatNotifyLogout, hpnicfPortalFreeRuleSrcMac=hpnicfPortalFreeRuleSrcMac, hpnicfPortalFreeRuleSrcPort=hpnicfPortalFreeRuleSrcPort, hpnicfPortalMacTriggerOnIfRowStatus=hpnicfPortalMacTriggerOnIfRowStatus, hpnicfPortalStatHttpResp=hpnicfPortalStatHttpResp, hpnicfPortalMacTriggerOnIfEntry=hpnicfPortalMacTriggerOnIfEntry, hpnicfPortalFreeRuleTable=hpnicfPortalFreeRuleTable, hpnicfPortalForbiddenRuleIndex=hpnicfPortalForbiddenRuleIndex, hpnicfPortalStatChallengeBusy=hpnicfPortalStatChallengeBusy, hpnicfPortalFreeRuleIndex=hpnicfPortalFreeRuleIndex, hpnicfPortalIfServerEntry=hpnicfPortalIfServerEntry, hpnicfPortalServerIP=hpnicfPortalServerIP, hpnicfPortalSSIDFreeRuleRowStatus=hpnicfPortalSSIDFreeRuleRowStatus, hpnicfPortalSSIDFreeRuleSrcSpot=hpnicfPortalSSIDFreeRuleSrcSpot, hpnicfPortalFreeRuleSrcVlanID=hpnicfPortalFreeRuleSrcVlanID, hpnicfPortalMacTriggerSrvRowStatus=hpnicfPortalMacTriggerSrvRowStatus, hpnicfPortalFreeRuleDstPort=hpnicfPortalFreeRuleDstPort, hpnicfPortalPktStaAckChallengeAuthFail=hpnicfPortalPktStaAckChallengeAuthFail, hpnicfPortalSSIDFreeRuleIndex=hpnicfPortalSSIDFreeRuleIndex, hpnicfPortalMacTriggerSrvPort=hpnicfPortalMacTriggerSrvPort, hpnicfPortalPktStaAckChallengeEstablish=hpnicfPortalPktStaAckChallengeEstablish, hpnicfPortalServerPort=hpnicfPortalServerPort, hpnicfPortalForbiddenRuleEntry=hpnicfPortalForbiddenRuleEntry, hpnicfPortalServerTable=hpnicfPortalServerTable, hpnicfPortalPktStaAckAuthAuthFail=hpnicfPortalPktStaAckAuthAuthFail, hpnicfPortalPktStaAckAuthBusy=hpnicfPortalPktStaAckAuthBusy, hpnicfPortalForbiddenRuleSrcIfIndex=hpnicfPortalForbiddenRuleSrcIfIndex, hpnicfPortalMacTriggerOnIfThresholdFlow=hpnicfPortalMacTriggerOnIfThresholdFlow, hpnicfPortalMaxUserNumber=hpnicfPortalMaxUserNumber, hpnicfPortalCurrentUserNumber=hpnicfPortalCurrentUserNumber, hpnicfPortalStatAuthDisordered=hpnicfPortalStatAuthDisordered, hpnicfPortalSSIDFreeRuleTable=hpnicfPortalSSIDFreeRuleTable, hpnicfPortalIfVlanNasIDVlanID=hpnicfPortalIfVlanNasIDVlanID, hpnicfPortalForbiddenRuleSrcVlanID=hpnicfPortalForbiddenRuleSrcVlanID, hpnicfPortalIfServerTable=hpnicfPortalIfServerTable, hpnicfPortalForbiddenRuleDstAddr=hpnicfPortalForbiddenRuleDstAddr, hpnicfPortalStatChallengeResp=hpnicfPortalStatChallengeResp, hpnicfPortalFreeRuleSrcIfIndex=hpnicfPortalFreeRuleSrcIfIndex, hpnicfPortalStatAuthResp=hpnicfPortalStatAuthResp, hpnicfPortalTraps=hpnicfPortalTraps, hpnicfPortalStatAuthFail=hpnicfPortalStatAuthFail, hpnicfPortalPktStaAckChallengeReject=hpnicfPortalPktStaAckChallengeReject, hpnicfPortalPktStaReqChallengeNum=hpnicfPortalPktStaReqChallengeNum, hpnicfPortalFreeRuleProtocol=hpnicfPortalFreeRuleProtocol, hpnicfPortalMacTriggerOnIfIfIndex=hpnicfPortalMacTriggerOnIfIfIndex, hpnicfPortalAuthReqNumber=hpnicfPortalAuthReqNumber, hpnicfPortalMacTriggerSrvIndex=hpnicfPortalMacTriggerSrvIndex, hpnicfPortalAuthSuccNumber=hpnicfPortalAuthSuccNumber, hpnicfPortalIfVlanNasIDNasID=hpnicfPortalIfVlanNasIDNasID, hpnicfPortalSSIDFreeRuleSrcSSID=hpnicfPortalSSIDFreeRuleSrcSSID, hpnicfPortalIfInfoTable=hpnicfPortalIfInfoTable, hpnicfPortalPktStatistic=hpnicfPortalPktStatistic, hpnicfPortalForbiddenRuleRowStatus=hpnicfPortalForbiddenRuleRowStatus, hpnicfPortalTrapPrefix=hpnicfPortalTrapPrefix, hpnicfPortalFreeRuleEntry=hpnicfPortalFreeRuleEntry, hpnicfPortalIfInfoEntry=hpnicfPortalIfInfoEntry, hpnicfPortalForbiddenRuleProtocol=hpnicfPortalForbiddenRuleProtocol, hpnicfPortalStatAuthReq=hpnicfPortalStatAuthReq, hpnicfPortalServerGet=hpnicfPortalServerGet, hpnicfPortalForbiddenRuleSrcPrefix=hpnicfPortalForbiddenRuleSrcPrefix, hpnicfPortalStatPwdError=hpnicfPortalStatPwdError, hpnicfPortalForbiddenRuleSrcMac=hpnicfPortalForbiddenRuleSrcMac, hpnicfPortalIfVlanNasIDIfIndex=hpnicfPortalIfVlanNasIDIfIndex, hpnicfPortalStatistic=hpnicfPortalStatistic, hpnicfPortalPktStaAckAuthEstablish=hpnicfPortalPktStaAckAuthEstablish, hpnicfPortalStatAuthBusy=hpnicfPortalStatAuthBusy, hpnicfPortalServerLost=hpnicfPortalServerLost, hpnicfPortalMacTriggerOnIfDetctFlowPeriod=hpnicfPortalMacTriggerOnIfDetctFlowPeriod, PYSNMP_MODULE_ID=hpnicfPortal, hpnicfPortalPktStaAckChallengeBusy=hpnicfPortalPktStaAckChallengeBusy, hpnicfPortalAuthFailNumber=hpnicfPortalAuthFailNumber, hpnicfPortalNasId=hpnicfPortalNasId, hpnicfPortalStatChallengeFail=hpnicfPortalStatChallengeFail, hpnicfPortalForbiddenRuleSrcPort=hpnicfPortalForbiddenRuleSrcPort, hpnicfPortalIfServerIndex=hpnicfPortalIfServerIndex, hpnicfPortalForbiddenRuleDstPrefix=hpnicfPortalForbiddenRuleDstPrefix, hpnicfPortalIfServerUrl=hpnicfPortalIfServerUrl, hpnicfPortalMacTriggerSrvIP=hpnicfPortalMacTriggerSrvIP, hpnicfPortalMacTriggerOnIfTable=hpnicfPortalMacTriggerOnIfTable, hpnicfPortalForbiddenRuleTable=hpnicfPortalForbiddenRuleTable, hpnicfPortal=hpnicfPortal, hpnicfPortalStatus=hpnicfPortalStatus, hpnicfPortalFreeRuleAddrType=hpnicfPortalFreeRuleAddrType, hpnicfPortalPktStaAckAuthSuccess=hpnicfPortalPktStaAckAuthSuccess, hpnicfPortalPktStaAckAuthReject=hpnicfPortalPktStaAckAuthReject, hpnicfPortalMacTriggerSrvEntry=hpnicfPortalMacTriggerSrvEntry, hpnicfPortalIfVlanNasIDTable=hpnicfPortalIfVlanNasIDTable)
