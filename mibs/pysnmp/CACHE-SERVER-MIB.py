#
# PySNMP MIB module CACHE-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CACHE-SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:26:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Gauge32, Bits, TimeTicks, Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, enterprises, iso, Counter64, ObjectIdentity, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "Bits", "TimeTicks", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "enterprises", "iso", "Counter64", "ObjectIdentity", "Integer32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ibmCacheServer = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8))
ibmcacheserverCore = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 1))
ibmcacheserverPartition = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2))
ibmcacheserverURL = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 3))
ibmcacheserverProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4))
ibmcacheserverCoreActivePartitions = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverCoreActivePartitions.setStatus('mandatory')
ibmcacheserverCoreECCPort = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverCoreECCPort.setStatus('mandatory')
ibmcacheserverPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1), )
if mibBuilder.loadTexts: ibmcacheserverPartitionTable.setStatus('mandatory')
ibmcacheserverPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1), ).setIndexNames((0, "CACHE-SERVER-MIB", "ibmcacheserverPartitionIndex"))
if mibBuilder.loadTexts: ibmcacheserverPartitionEntry.setStatus('mandatory')
ibmcacheserverPartitionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: ibmcacheserverPartitionIndex.setStatus('mandatory')
ibmcacheserverPartitionCacheControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionCacheControl.setStatus('mandatory')
ibmcacheserverPartitionCacheTransparent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionCacheTransparent.setStatus('mandatory')
ibmcacheserverPartitionUseHTTPCacheHdrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionUseHTTPCacheHdrs.setStatus('mandatory')
ibmcacheserverPartitionCacheDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionCacheDynamic.setStatus('mandatory')
ibmcacheserverPartitionCacheDynamicURL = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionCacheDynamicURL.setStatus('mandatory')
ibmcacheserverPartitionCacheImage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionCacheImage.setStatus('mandatory')
ibmcacheserverPartitionCacheStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionCacheStatic.setStatus('mandatory')
ibmcacheserverPartitionMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionMaxSize.setStatus('mandatory')
ibmcacheserverPartitionMaxObjects = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionMaxObjects.setStatus('mandatory')
ibmcacheserverPartitionMaxObjectSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionMaxObjectSize.setStatus('mandatory')
ibmcacheserverPartitionDynamicDefaultLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionDynamicDefaultLifetime.setStatus('mandatory')
ibmcacheserverPartitionImageDefaultLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionImageDefaultLifetime.setStatus('mandatory')
ibmcacheserverPartitionStaticDefaultLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionStaticDefaultLifetime.setStatus('mandatory')
ibmcacheserverPartitionCachePurgeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionCachePurgeInterval.setStatus('mandatory')
ibmcacheserverPartitionNumBytesCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNumBytesCurrent.setStatus('mandatory')
ibmcacheserverPartitionNumBytesHiWater = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNumBytesHiWater.setStatus('mandatory')
ibmcacheserverPartitionNumObjectsCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNumObjectsCurrent.setStatus('mandatory')
ibmcacheserverPartitionNumObjectsHiWater = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNumObjectsHiWater.setStatus('mandatory')
ibmcacheserverPartitionHitTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionHitTotal.setStatus('mandatory')
ibmcacheserverPartitionMissTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionMissTotal.setStatus('mandatory')
ibmcacheserverPartitionAddInclude = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionAddInclude.setStatus('mandatory')
ibmcacheserverPartitionNotAddCacheOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNotAddCacheOff.setStatus('mandatory')
ibmcacheserverPartitionNotAddTooLarge = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNotAddTooLarge.setStatus('mandatory')
ibmcacheserverPartitionNotAddHTTPHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNotAddHTTPHdr.setStatus('mandatory')
ibmcacheserverPartitionNotAddExclude = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNotAddExclude.setStatus('mandatory')
ibmcacheserverPartitionNotAddExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNotAddExpire.setStatus('mandatory')
ibmcacheserverPartitionNotAddImage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNotAddImage.setStatus('mandatory')
ibmcacheserverPartitionNotAddStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNotAddStatic.setStatus('mandatory')
ibmcacheserverPartitionNotAddDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionNotAddDynamic.setStatus('mandatory')
ibmcacheserverPartitionPurgeCacheFull = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionPurgeCacheFull.setStatus('mandatory')
ibmcacheserverPartitionPurgeItemStale = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionPurgeItemStale.setStatus('mandatory')
ibmcacheserverPartitionPurgeItemExplicit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 2, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverPartitionPurgeItemExplicit.setStatus('mandatory')
ibmcacheserverURLTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 3, 1), )
if mibBuilder.loadTexts: ibmcacheserverURLTable.setStatus('mandatory')
ibmcacheserverURLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 3, 1, 1), ).setIndexNames((0, "CACHE-SERVER-MIB", "ibmcacheserverPartitionIndex"), (0, "CACHE-SERVER-MIB", "ibmcacheserverURLIndex"))
if mibBuilder.loadTexts: ibmcacheserverURLEntry.setStatus('mandatory')
ibmcacheserverURLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: ibmcacheserverURLIndex.setStatus('mandatory')
ibmcacheserverURLContent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverURLContent.setStatus('mandatory')
ibmcacheserverURLMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverURLMask.setStatus('mandatory')
ibmcacheserverProxyTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1), )
if mibBuilder.loadTexts: ibmcacheserverProxyTable.setStatus('mandatory')
ibmcacheserverProxyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1), ).setIndexNames((0, "CACHE-SERVER-MIB", "ibmcacheserverProxyClusterAddr"), (0, "CACHE-SERVER-MIB", "ibmcacheserverProxyPort"))
if mibBuilder.loadTexts: ibmcacheserverProxyEntry.setStatus('mandatory')
ibmcacheserverProxyClusterAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: ibmcacheserverProxyClusterAddr.setStatus('mandatory')
ibmcacheserverProxyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ibmcacheserverProxyPort.setStatus('mandatory')
ibmcacheserverProxyPartition = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyPartition.setStatus('mandatory')
ibmcacheserverProxyClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyClientCount.setStatus('mandatory')
ibmcacheserverProxyServerCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyServerCount.setStatus('mandatory')
ibmcacheserverProxyClientMaxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyClientMaxCount.setStatus('mandatory')
ibmcacheserverProxyServerMaxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyServerMaxCount.setStatus('mandatory')
ibmcacheserverProxyCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyCacheHits.setStatus('mandatory')
ibmcacheserverProxyCacheMissMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyCacheMissMethod.setStatus('mandatory')
ibmcacheserverProxyCacheMissStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyCacheMissStorage.setStatus('mandatory')
ibmcacheserverProxyCacheMissNotInCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyCacheMissNotInCache.setStatus('mandatory')
ibmcacheserverProxyCacheMissHeaders = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 8, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmcacheserverProxyCacheMissHeaders.setStatus('mandatory')
mibBuilder.exportSymbols("CACHE-SERVER-MIB", ibmcacheserverPartitionNumObjectsCurrent=ibmcacheserverPartitionNumObjectsCurrent, ibmcacheserverPartition=ibmcacheserverPartition, ibmcacheserverURL=ibmcacheserverURL, ibmcacheserverPartitionStaticDefaultLifetime=ibmcacheserverPartitionStaticDefaultLifetime, ibmcacheserverURLTable=ibmcacheserverURLTable, ibmcacheserverURLMask=ibmcacheserverURLMask, ibmCacheServer=ibmCacheServer, ibmcacheserverPartitionDynamicDefaultLifetime=ibmcacheserverPartitionDynamicDefaultLifetime, ibmcacheserverProxyTable=ibmcacheserverProxyTable, ibmcacheserverPartitionNotAddImage=ibmcacheserverPartitionNotAddImage, ibmcacheserverURLEntry=ibmcacheserverURLEntry, ibmcacheserverProxyServerCount=ibmcacheserverProxyServerCount, ibmcacheserverPartitionNotAddExpire=ibmcacheserverPartitionNotAddExpire, ibmcacheserverPartitionCacheDynamic=ibmcacheserverPartitionCacheDynamic, ibmcacheserverPartitionAddInclude=ibmcacheserverPartitionAddInclude, ibmcacheserverProxyCacheMissMethod=ibmcacheserverProxyCacheMissMethod, ibmcacheserverPartitionImageDefaultLifetime=ibmcacheserverPartitionImageDefaultLifetime, ibmcacheserverCoreActivePartitions=ibmcacheserverCoreActivePartitions, ibmcacheserverCoreECCPort=ibmcacheserverCoreECCPort, ibmcacheserverCore=ibmcacheserverCore, ibmcacheserverPartitionNotAddCacheOff=ibmcacheserverPartitionNotAddCacheOff, ibmcacheserverPartitionCacheImage=ibmcacheserverPartitionCacheImage, ibmcacheserverURLContent=ibmcacheserverURLContent, ibmcacheserverPartitionIndex=ibmcacheserverPartitionIndex, ibmcacheserverProxyCacheMissNotInCache=ibmcacheserverProxyCacheMissNotInCache, ibmcacheserverPartitionMaxObjects=ibmcacheserverPartitionMaxObjects, ibmcacheserverPartitionNumBytesHiWater=ibmcacheserverPartitionNumBytesHiWater, ibmcacheserverPartitionNumObjectsHiWater=ibmcacheserverPartitionNumObjectsHiWater, ibmcacheserverPartitionMissTotal=ibmcacheserverPartitionMissTotal, ibmcacheserverProxyCacheMissStorage=ibmcacheserverProxyCacheMissStorage, ibmcacheserverURLIndex=ibmcacheserverURLIndex, ibmcacheserverPartitionPurgeCacheFull=ibmcacheserverPartitionPurgeCacheFull, ibmcacheserverPartitionNotAddTooLarge=ibmcacheserverPartitionNotAddTooLarge, ibmcacheserverProxyClientCount=ibmcacheserverProxyClientCount, ibmcacheserverPartitionNotAddHTTPHdr=ibmcacheserverPartitionNotAddHTTPHdr, ibmcacheserverPartitionNumBytesCurrent=ibmcacheserverPartitionNumBytesCurrent, ibmcacheserverPartitionUseHTTPCacheHdrs=ibmcacheserverPartitionUseHTTPCacheHdrs, ibmcacheserverProxyPort=ibmcacheserverProxyPort, ibmcacheserverPartitionCacheTransparent=ibmcacheserverPartitionCacheTransparent, ibmcacheserverPartitionEntry=ibmcacheserverPartitionEntry, ibmcacheserverPartitionMaxSize=ibmcacheserverPartitionMaxSize, ibmcacheserverPartitionMaxObjectSize=ibmcacheserverPartitionMaxObjectSize, ibmcacheserverPartitionNotAddExclude=ibmcacheserverPartitionNotAddExclude, ibmcacheserverProxyServerMaxCount=ibmcacheserverProxyServerMaxCount, ibmcacheserverPartitionPurgeItemStale=ibmcacheserverPartitionPurgeItemStale, ibmcacheserverProxyCacheMissHeaders=ibmcacheserverProxyCacheMissHeaders, ibmcacheserverPartitionCacheDynamicURL=ibmcacheserverPartitionCacheDynamicURL, ibmcacheserverProxyClusterAddr=ibmcacheserverProxyClusterAddr, ibmcacheserverProxyCacheHits=ibmcacheserverProxyCacheHits, ibmcacheserverProxyPartition=ibmcacheserverProxyPartition, ibmcacheserverProxyClientMaxCount=ibmcacheserverProxyClientMaxCount, ibmcacheserverPartitionHitTotal=ibmcacheserverPartitionHitTotal, ibmcacheserverProxyEntry=ibmcacheserverProxyEntry, ibmcacheserverProxy=ibmcacheserverProxy, ibmcacheserverPartitionCacheControl=ibmcacheserverPartitionCacheControl, ibmcacheserverPartitionTable=ibmcacheserverPartitionTable, ibmcacheserverPartitionNotAddDynamic=ibmcacheserverPartitionNotAddDynamic, ibmcacheserverPartitionNotAddStatic=ibmcacheserverPartitionNotAddStatic, ibmcacheserverPartitionCachePurgeInterval=ibmcacheserverPartitionCachePurgeInterval, ibmcacheserverPartitionCacheStatic=ibmcacheserverPartitionCacheStatic, ibmcacheserverPartitionPurgeItemExplicit=ibmcacheserverPartitionPurgeItemExplicit)
