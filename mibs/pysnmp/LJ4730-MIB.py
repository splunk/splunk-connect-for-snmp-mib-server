#
# PySNMP MIB module LJ4730-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LJ4730-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:57:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, Unsigned32, Integer32, Counter64, iso, TimeTicks, Counter32, ModuleIdentity, IpAddress, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Unsigned32", "Integer32", "Counter64", "iso", "TimeTicks", "Counter32", "ModuleIdentity", "IpAddress", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
netPMLmgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2))
class DisplayString(OctetString):
    pass

device = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1))
device_system = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1)).setLabel("device-system")
status_system = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2)).setLabel("status-system")
test = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 5))
processing_subsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3)).setLabel("processing-subsystem")
pml = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 4))
accounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16))
printer_accounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1)).setLabel("printer-accounting")
printed_media_usage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1)).setLabel("printed-media-usage")
scanner_accounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 2)).setLabel("scanner-accounting")
scanned_media_usage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 2, 1)).setLabel("scanned-media-usage")
printer_color_accounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 3)).setLabel("printer-color-accounting")
printed_media_color_usage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 3, 1)).setLabel("printed-media-color-usage")
printed_modes_accounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 4)).setLabel("printed-modes-accounting")
printed_modes_usage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 4, 1)).setLabel("printed-modes-usage")
source_tray_accounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 5)).setLabel("source-tray-accounting")
source_tray_usage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 5, 1)).setLabel("source-tray-usage")
destination_bin_accounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 6)).setLabel("destination-bin-accounting")
destination_bin_usage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 6, 1)).setLabel("destination-bin-usage")
destination_subsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4)).setLabel("destination-subsystem")
print_engine = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1)).setLabel("print-engine")
print_media = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8)).setLabel("print-media")
media_size = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 5)).setLabel("media-size")
print_meter = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 11)).setLabel("print-meter")
printer_average = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 11, 1)).setLabel("printer-average")
control_panel_display = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 65)).setLabel("control-panel-display")
settings_system = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1)).setLabel("settings-system")
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4))
simm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1))
simm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1))
simm1_bank = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 6)).setLabel("simm1-bank")
simm1_bank1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 6, 1)).setLabel("simm1-bank1")
simm1_bank2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 6, 2)).setLabel("simm1-bank2")
simm2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2))
simm2_bank = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 6)).setLabel("simm2-bank")
simm2_bank1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 6, 1)).setLabel("simm2-bank1")
simm2_bank2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 6, 2)).setLabel("simm2-bank2")
job = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6))
settings_job = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 1)).setLabel("settings-job")
operating_system = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 19)).setLabel("operating-system")
pdl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3))
settings_pdl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1)).setLabel("settings-pdl")
status_pdl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 2)).setLabel("status-pdl")
background_message = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37)).setLabel("background-message")
background_message1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 1)).setLabel("background-message1")
background_message2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 2)).setLabel("background-message2")
background_message3 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 3)).setLabel("background-message3")
background_message4 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 4)).setLabel("background-message4")
menus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 13))
errorlog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11))
error1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 1))
error2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 2))
error3 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 3))
error4 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 4))
error5 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 5))
error6 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 6))
error7 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 7))
error8 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 8))
error9 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 9))
error10 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 10))
error11 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 11))
error12 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 12))
error13 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 13))
error14 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 14))
error15 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 15))
error16 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 16))
error17 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 17))
error18 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 18))
error19 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 19))
error20 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 20))
error21 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 21))
error22 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 22))
error23 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 23))
error24 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 24))
error25 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 25))
error26 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 26))
error27 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 27))
error28 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 28))
error29 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 29))
error30 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 30))
error31 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 31))
error32 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 32))
error33 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 33))
error34 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 34))
error35 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 35))
error36 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 36))
error37 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 37))
error38 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 38))
error39 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 39))
error40 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 40))
error41 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 41))
error42 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 42))
error43 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 43))
error44 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 44))
error45 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 45))
error46 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 46))
error47 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 47))
error48 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 48))
error49 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 49))
error50 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 50))
channel = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 6))
display = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 20))
display_status = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 20, 1)).setLabel("display-status")
id = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3))
web_server = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 6)).setLabel("web-server")
settings_web_server = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 6, 1)).setLabel("settings-web-server")
pdl_postscript = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 4)).setLabel("pdl-postscript")
settings_prt_eng = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1)).setLabel("settings-prt-eng")
intray = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3))
settings_intray = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1)).setLabel("settings-intray")
ph = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 7))
settings_ph = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 7, 1)).setLabel("settings-ph")
copier = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5))
settings_copier = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1)).setLabel("settings-copier")
pdl_pcl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 3)).setLabel("pdl-pcl")
source_subsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2)).setLabel("source-subsystem")
scanner = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2))
settings_scanner = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1)).setLabel("settings-scanner")
status_scanner = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 2)).setLabel("status-scanner")
imaging = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 6))
socket_ping = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 7)).setLabel("socket-ping")
active_print_jobs = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 2)).setLabel("active-print-jobs")
job_being_parsed = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 2, 1)).setLabel("job-being-parsed")
job_info = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5)).setLabel("job-info")
job_info_attribute = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23)).setLabel("job-info-attribute")
job_info_accounting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28)).setLabel("job-info-accounting")
held_job = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7)).setLabel("held-job")
held_job_info = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 1)).setLabel("held-job-info")
held_job_control = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 2)).setLabel("held-job-control")
spooler = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 4))
settings_spooler = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 4, 1)).setLabel("settings-spooler")
pjl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 5))
mio = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3))
mio1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 1))
mio2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 2))
mio3 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 3))
io = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 1))
settings_io = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 1, 1)).setLabel("settings-io")
ports = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 1, 3))
port1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 1, 3, 1))
tables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 7))
remote_procedure_call = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 13)).setLabel("remote-procedure-call")
settings_rpc = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 13, 1)).setLabel("settings-rpc")
status_rpc = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 13, 2)).setLabel("status-rpc")
file_system = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10)).setLabel("file-system")
settings_file_system = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1)).setLabel("settings-file-system")
file_systems = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 3)).setLabel("file-systems")
file_system2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 3, 2)).setLabel("file-system2")
file_system3 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 3, 3)).setLabel("file-system3")
file_system4 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 3, 4)).setLabel("file-system4")
resource_manager = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 12)).setLabel("resource-manager")
mass_storage_resources = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 12, 3)).setLabel("mass-storage-resources")
mass_storage_block_driver = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 15)).setLabel("mass-storage-block-driver")
settings_mass_storage_bd = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 15, 1)).setLabel("settings-mass-storage-bd")
status_mass_storage_bd = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 15, 2)).setLabel("status-mass-storage-bd")
device_configure = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 32)).setLabel("device-configure")
marking_agent_density = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 9)).setLabel("marking-agent-density")
status_prt_eng = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2)).setLabel("status-prt-eng")
printer_calibration_dhalf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 37)).setLabel("printer-calibration-dhalf")
printer_cal_dhalf_data = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 37, 3)).setLabel("printer-cal-dhalf-data")
printer_calibration_cpr = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 38)).setLabel("printer-calibration-cpr")
intrays = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3))
intray1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 1))
intray2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 2))
intray3 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 3))
intray5 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 5))
outbin = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 4))
settings_outbin = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 4, 1)).setLabel("settings-outbin")
outbins = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 4, 3))
outbin1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 4, 3, 1))
marking_agent = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 5)).setLabel("marking-agent")
settings_marking_agent = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 5, 1)).setLabel("settings-marking-agent")
settings_print_media = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 1)).setLabel("settings-print-media")
media_info = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3)).setLabel("media-info")
media1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 1))
media2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 2))
media3 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 3))
media4 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 4))
media5 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 5))
media6 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 6))
media7 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 7))
media8 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 8))
media9 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 9))
media10 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 10))
media11 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 11))
media12 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 12))
media13 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 13))
media14 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 14))
media15 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 15))
media16 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 16))
media17 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 17))
media18 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 18))
media19 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 19))
media20 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 20))
media21 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 21))
media22 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 22))
media23 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 23))
media24 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 24))
media25 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 25))
media26 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 26))
media_modes = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 4)).setLabel("media-modes")
media_types = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 8)).setLabel("media-types")
media_counts = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 7)).setLabel("media-counts")
consumables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10))
consumables_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 1)).setLabel("consumables-1")
consumable_status = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 1, 1)).setLabel("consumable-status")
consumable_string = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 8)).setLabel("consumable-string")
consumables_status = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 5)).setLabel("consumables-status")
consumables_life = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 5, 1)).setLabel("consumables-life")
webserver_proc_sub = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 9)).setLabel("webserver-proc-sub")
settings_webserver = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 9, 1)).setLabel("settings-webserver")
firmware_download = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 18)).setLabel("firmware-download")
upgradable_devices = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20)).setLabel("upgradable-devices")
perm_store_init_occurred = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 10), OctetString()).setLabel("perm-store-init-occurred").setMaxAccess("readonly")
if mibBuilder.loadTexts: perm_store_init_occurred.setStatus('optional')
printed_media_simplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 930576247))).setLabel("printed-media-simplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_simplex_count.setStatus('optional')
printed_media_simplex_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1, 2), OctetString()).setLabel("printed-media-simplex-charge").setMaxAccess("readwrite")
if mibBuilder.loadTexts: printed_media_simplex_charge.setStatus('optional')
printed_media_duplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 930576247))).setLabel("printed-media-duplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_duplex_count.setStatus('optional')
printed_media_duplex_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1, 4), OctetString()).setLabel("printed-media-duplex-charge").setMaxAccess("readwrite")
if mibBuilder.loadTexts: printed_media_duplex_charge.setStatus('optional')
printed_media_total_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1, 5), OctetString()).setLabel("printed-media-total-charge").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_total_charge.setStatus('optional')
printed_media_maximum_pixels_per_page = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1, 6), Integer32()).setLabel("printed-media-maximum-pixels-per-page").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_maximum_pixels_per_page.setStatus('optional')
printed_media_combined_total = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1, 7), OctetString()).setLabel("printed-media-combined-total").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_combined_total.setStatus('optional')
printed_media_dimplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 930576247))).setLabel("printed-media-dimplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_dimplex_count.setStatus('optional')
usage_printer_total_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 2), OctetString()).setLabel("usage-printer-total-charge").setMaxAccess("readonly")
if mibBuilder.loadTexts: usage_printer_total_charge.setStatus('optional')
usage_average_toner_coverage = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 3), OctetString()).setLabel("usage-average-toner-coverage").setMaxAccess("readonly")
if mibBuilder.loadTexts: usage_average_toner_coverage.setStatus('optional')
usage_staple_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 930576247))).setLabel("usage-staple-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: usage_staple_count.setStatus('optional')
usage_instructions_line1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setLabel("usage-instructions-line1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: usage_instructions_line1.setStatus('optional')
usage_instructions_line2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setLabel("usage-instructions-line2").setMaxAccess("readwrite")
if mibBuilder.loadTexts: usage_instructions_line2.setStatus('optional')
usage_instructions_line3 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setLabel("usage-instructions-line3").setMaxAccess("readwrite")
if mibBuilder.loadTexts: usage_instructions_line3.setStatus('optional')
usage_instructions_line4 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setLabel("usage-instructions-line4").setMaxAccess("readwrite")
if mibBuilder.loadTexts: usage_instructions_line4.setStatus('optional')
printed_modes_usage_total = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 9), Integer32()).setLabel("printed-modes-usage-total").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_modes_usage_total.setStatus('optional')
source_tray_usage_total = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 10), Integer32()).setLabel("source-tray-usage-total").setMaxAccess("readonly")
if mibBuilder.loadTexts: source_tray_usage_total.setStatus('optional')
destination_bin_usage_total = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 11), Integer32()).setLabel("destination-bin-usage-total").setMaxAccess("readonly")
if mibBuilder.loadTexts: destination_bin_usage_total.setStatus('optional')
usage_printer_mono_total_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 12), OctetString()).setLabel("usage-printer-mono-total-charge").setMaxAccess("readonly")
if mibBuilder.loadTexts: usage_printer_mono_total_charge.setStatus('optional')
usage_printer_color_total_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 1, 13), OctetString()).setLabel("usage-printer-color-total-charge").setMaxAccess("readonly")
if mibBuilder.loadTexts: usage_printer_color_total_charge.setStatus('optional')
scanned_media_simplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 930576247))).setLabel("scanned-media-simplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanned_media_simplex_count.setStatus('optional')
scanned_media_simplex_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 2, 1, 2), OctetString()).setLabel("scanned-media-simplex-charge").setMaxAccess("readwrite")
if mibBuilder.loadTexts: scanned_media_simplex_charge.setStatus('optional')
scanned_media_duplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 930576247))).setLabel("scanned-media-duplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanned_media_duplex_count.setStatus('optional')
scanned_media_duplex_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 2, 1, 4), OctetString()).setLabel("scanned-media-duplex-charge").setMaxAccess("readwrite")
if mibBuilder.loadTexts: scanned_media_duplex_charge.setStatus('optional')
scanned_media_total_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 2, 1, 5), OctetString()).setLabel("scanned-media-total-charge").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanned_media_total_charge.setStatus('optional')
usage_scanner_total_charge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 2, 2), OctetString()).setLabel("usage-scanner-total-charge").setMaxAccess("readonly")
if mibBuilder.loadTexts: usage_scanner_total_charge.setStatus('optional')
printed_media_color_simplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 3, 1, 1), Integer32()).setLabel("printed-media-color-simplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_color_simplex_count.setStatus('optional')
printed_media_color_duplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 3, 1, 3), Integer32()).setLabel("printed-media-color-duplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_color_duplex_count.setStatus('optional')
printed_media_color_total_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 3, 1, 5), OctetString()).setLabel("printed-media-color-total-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_color_total_count.setStatus('optional')
printed_media_color_dimplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 3, 1, 6), Integer32()).setLabel("printed-media-color-dimplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_media_color_dimplex_count.setStatus('optional')
printed_modes_mono_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 4, 1, 1), Integer32()).setLabel("printed-modes-mono-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_modes_mono_count.setStatus('optional')
printed_modes_color_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 4, 1, 3), Integer32()).setLabel("printed-modes-color-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_modes_color_count.setStatus('optional')
printed_modes_total_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 4, 1, 5), Integer32()).setLabel("printed-modes-total-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printed_modes_total_count.setStatus('optional')
source_tray_usage_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 5, 1, 1), Integer32()).setLabel("source-tray-usage-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: source_tray_usage_count.setStatus('optional')
destination_bin_usage_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 16, 6, 1, 1), Integer32()).setLabel("destination-bin-usage-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: destination_bin_usage_count.setStatus('optional')
media_size_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 5, 1), Integer32()).setLabel("media-size-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media_size_count.setStatus('optional')
printer_average_marking_agent_coverage = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 11, 1, 1), OctetString()).setLabel("printer-average-marking-agent-coverage").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_average_marking_agent_coverage.setStatus('optional')
printer_average_marking_agent_coverage_sum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 11, 1, 2), OctetString()).setLabel("printer-average-marking-agent-coverage-sum").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_average_marking_agent_coverage_sum.setStatus('optional')
printer_average_marking_agent_coverage_sum_squared = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 11, 1, 3), OctetString()).setLabel("printer-average-marking-agent-coverage-sum-squared").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_average_marking_agent_coverage_sum_squared.setStatus('optional')
localization_languages_supported = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 52), OctetString()).setLabel("localization-languages-supported").setMaxAccess("readonly")
if mibBuilder.loadTexts: localization_languages_supported.setStatus('optional')
localization_countries_supported = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 53), OctetString()).setLabel("localization-countries-supported").setMaxAccess("readonly")
if mibBuilder.loadTexts: localization_countries_supported.setStatus('optional')
control_panel_button_press = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 9))).clone(namedValues=NamedValues(("eGoButton", 1), ("eCancelJobButton", 9)))).setLabel("control-panel-button-press").setMaxAccess("writeonly")
if mibBuilder.loadTexts: control_panel_button_press.setStatus('optional')
control_panel_display_contents_change_counter = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 63), Integer32()).setLabel("control-panel-display-contents-change-counter").setMaxAccess("readonly")
if mibBuilder.loadTexts: control_panel_display_contents_change_counter.setStatus('optional')
control_panel_display_contents_crc = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 64), Integer32()).setLabel("control-panel-display-contents-crc").setMaxAccess("readonly")
if mibBuilder.loadTexts: control_panel_display_contents_crc.setStatus('optional')
control_panel_display_graphical_contents = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 65, 1), OctetString()).setLabel("control-panel-display-graphical-contents").setMaxAccess("readonly")
if mibBuilder.loadTexts: control_panel_display_graphical_contents.setStatus('optional')
control_panel_key_press = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("control-panel-key-press").setMaxAccess("writeonly")
if mibBuilder.loadTexts: control_panel_key_press.setStatus('optional')
energy_star = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 1), Integer32()).setLabel("energy-star").setMaxAccess("readwrite")
if mibBuilder.loadTexts: energy_star.setStatus('optional')
sleep_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eFalse", 1), ("eTrue", 2)))).setLabel("sleep-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sleep_mode.setStatus('optional')
on_off_line = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eOnline", 1), ("eOffline", 2), ("eOfflineAtEndOfJob", 3)))).setLabel("on-off-line").setMaxAccess("readwrite")
if mibBuilder.loadTexts: on_off_line.setStatus('optional')
pysmi_continue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("eInitiateAction", 1)))).setLabel("continue").setMaxAccess("writeonly")
if mibBuilder.loadTexts: pysmi_continue.setStatus('optional')
auto_continue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("auto-continue").setMaxAccess("readwrite")
if mibBuilder.loadTexts: auto_continue.setStatus('optional')
simm1_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 9))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eUnSupported", 3), ("eReadOnlyMemory", 4), ("eVolatileRandomAccessMemory", 5), ("eFlashMemory", 7), ("eRamRom", 9)))).setLabel("simm1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm1_type.setStatus('optional')
simm1_capacity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 5), Integer32()).setLabel("simm1-capacity").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm1_capacity.setStatus('optional')
simm1_bank1_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 9))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eUnSupported", 3), ("eReadOnlyMemory", 4), ("eVolatileRandomAccessMemory", 5), ("eFlashMemory", 7), ("eRamRom", 9)))).setLabel("simm1-bank1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm1_bank1_type.setStatus('optional')
simm1_bank1_capacity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 6, 1, 2), Integer32()).setLabel("simm1-bank1-capacity").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm1_bank1_capacity.setStatus('optional')
simm1_bank2_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 9))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eUnSupported", 3), ("eReadOnlyMemory", 4), ("eVolatileRandomAccessMemory", 5), ("eFlashMemory", 7), ("eRamRom", 9)))).setLabel("simm1-bank2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm1_bank2_type.setStatus('optional')
simm1_bank2_capacity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 1, 6, 2, 2), Integer32()).setLabel("simm1-bank2-capacity").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm1_bank2_capacity.setStatus('optional')
simm2_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 9))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eUnSupported", 3), ("eReadOnlyMemory", 4), ("eVolatileRandomAccessMemory", 5), ("eFlashMemory", 7), ("eRamRom", 9)))).setLabel("simm2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm2_type.setStatus('optional')
simm2_capacity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 5), Integer32()).setLabel("simm2-capacity").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm2_capacity.setStatus('optional')
simm2_bank1_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 9))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eUnSupported", 3), ("eReadOnlyMemory", 4), ("eVolatileRandomAccessMemory", 5), ("eFlashMemory", 7), ("eRamRom", 9)))).setLabel("simm2-bank1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm2_bank1_type.setStatus('optional')
simm2_bank1_capacity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 6, 1, 2), Integer32()).setLabel("simm2-bank1-capacity").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm2_bank1_capacity.setStatus('optional')
simm2_bank2_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 9))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eUnSupported", 3), ("eReadOnlyMemory", 4), ("eVolatileRandomAccessMemory", 5), ("eFlashMemory", 7), ("eRamRom", 9)))).setLabel("simm2-bank2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm2_bank2_type.setStatus('optional')
simm2_bank2_capacity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 1, 2, 6, 2, 2), Integer32()).setLabel("simm2-bank2-capacity").setMaxAccess("readonly")
if mibBuilder.loadTexts: simm2_bank2_capacity.setStatus('optional')
cancel_job = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 32767))).setLabel("cancel-job").setMaxAccess("writeonly")
if mibBuilder.loadTexts: cancel_job.setStatus('optional')
os_execute_file = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 19, 1), OctetString()).setLabel("os-execute-file").setMaxAccess("writeonly")
if mibBuilder.loadTexts: os_execute_file.setStatus('optional')
form_feed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("eInitiateAction", 1)))).setLabel("form-feed").setMaxAccess("writeonly")
if mibBuilder.loadTexts: form_feed.setStatus('optional')
form_feed_needed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eFalse", 1), ("eTrue", 2)))).setLabel("form-feed-needed").setMaxAccess("readonly")
if mibBuilder.loadTexts: form_feed_needed.setStatus('optional')
background_status_msg_higher_priority = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setLabel("background-status-msg-higher-priority").setMaxAccess("readwrite")
if mibBuilder.loadTexts: background_status_msg_higher_priority.setStatus('optional')
background_status_msg_line1_part1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setLabel("background-status-msg-line1-part1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: background_status_msg_line1_part1.setStatus('optional')
background_status_msg_line2_part1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setLabel("background-status-msg-line2-part1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: background_status_msg_line2_part1.setStatus('optional')
background_status_msg_line3_part1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setLabel("background-status-msg-line3-part1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: background_status_msg_line3_part1.setStatus('optional')
background_status_msg_line4_part1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 37, 4, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setLabel("background-status-msg-line4-part1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: background_status_msg_line4_part1.setStatus('optional')
error_log_clear = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("eClearErrorLog", 1)))).setLabel("error-log-clear").setMaxAccess("writeonly")
if mibBuilder.loadTexts: error_log_clear.setStatus('optional')
clearable_warning = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("eOn", 2), ("eJob", 3)))).setLabel("clearable-warning").setMaxAccess("readwrite")
if mibBuilder.loadTexts: clearable_warning.setStatus('optional')
error1_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 1, 1), Integer32()).setLabel("error1-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error1_time_stamp.setStatus('optional')
error1_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 1, 2), Integer32()).setLabel("error1-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error1_code.setStatus('optional')
error1_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 1, 3), OctetString()).setLabel("error1-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error1_date_time.setStatus('optional')
error2_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 2, 1), Integer32()).setLabel("error2-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error2_time_stamp.setStatus('optional')
error2_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 2, 2), Integer32()).setLabel("error2-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error2_code.setStatus('optional')
error2_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 2, 3), OctetString()).setLabel("error2-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error2_date_time.setStatus('optional')
error3_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 3, 1), Integer32()).setLabel("error3-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error3_time_stamp.setStatus('optional')
error3_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 3, 2), Integer32()).setLabel("error3-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error3_code.setStatus('optional')
error3_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 3, 3), OctetString()).setLabel("error3-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error3_date_time.setStatus('optional')
error4_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 4, 1), Integer32()).setLabel("error4-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error4_time_stamp.setStatus('optional')
error4_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 4, 2), Integer32()).setLabel("error4-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error4_code.setStatus('optional')
error4_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 4, 3), OctetString()).setLabel("error4-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error4_date_time.setStatus('optional')
error5_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 5, 1), Integer32()).setLabel("error5-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error5_time_stamp.setStatus('optional')
error5_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 5, 2), Integer32()).setLabel("error5-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error5_code.setStatus('optional')
error5_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 5, 3), OctetString()).setLabel("error5-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error5_date_time.setStatus('optional')
error6_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 6, 1), Integer32()).setLabel("error6-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error6_time_stamp.setStatus('optional')
error6_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 6, 2), Integer32()).setLabel("error6-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error6_code.setStatus('optional')
error6_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 6, 3), OctetString()).setLabel("error6-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error6_date_time.setStatus('optional')
error7_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 7, 1), Integer32()).setLabel("error7-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error7_time_stamp.setStatus('optional')
error7_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 7, 2), Integer32()).setLabel("error7-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error7_code.setStatus('optional')
error7_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 7, 3), OctetString()).setLabel("error7-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error7_date_time.setStatus('optional')
error8_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 8, 1), Integer32()).setLabel("error8-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error8_time_stamp.setStatus('optional')
error8_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 8, 2), Integer32()).setLabel("error8-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error8_code.setStatus('optional')
error8_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 8, 3), OctetString()).setLabel("error8-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error8_date_time.setStatus('optional')
error9_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 9, 1), Integer32()).setLabel("error9-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error9_time_stamp.setStatus('optional')
error9_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 9, 2), Integer32()).setLabel("error9-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error9_code.setStatus('optional')
error9_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 9, 3), OctetString()).setLabel("error9-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error9_date_time.setStatus('optional')
error10_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 10, 1), Integer32()).setLabel("error10-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error10_time_stamp.setStatus('optional')
error10_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 10, 2), Integer32()).setLabel("error10-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error10_code.setStatus('optional')
error10_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 10, 3), OctetString()).setLabel("error10-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error10_date_time.setStatus('optional')
error11_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 11, 1), Integer32()).setLabel("error11-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error11_time_stamp.setStatus('optional')
error11_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 11, 2), Integer32()).setLabel("error11-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error11_code.setStatus('optional')
error11_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 11, 3), OctetString()).setLabel("error11-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error11_date_time.setStatus('optional')
error12_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 12, 1), Integer32()).setLabel("error12-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error12_time_stamp.setStatus('optional')
error12_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 12, 2), Integer32()).setLabel("error12-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error12_code.setStatus('optional')
error12_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 12, 3), OctetString()).setLabel("error12-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error12_date_time.setStatus('optional')
error13_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 13, 1), Integer32()).setLabel("error13-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error13_time_stamp.setStatus('optional')
error13_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 13, 2), Integer32()).setLabel("error13-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error13_code.setStatus('optional')
error13_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 13, 3), OctetString()).setLabel("error13-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error13_date_time.setStatus('optional')
error14_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 14, 1), Integer32()).setLabel("error14-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error14_time_stamp.setStatus('optional')
error14_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 14, 2), Integer32()).setLabel("error14-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error14_code.setStatus('optional')
error14_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 14, 3), OctetString()).setLabel("error14-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error14_date_time.setStatus('optional')
error15_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 15, 1), Integer32()).setLabel("error15-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error15_time_stamp.setStatus('optional')
error15_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 15, 2), Integer32()).setLabel("error15-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error15_code.setStatus('optional')
error15_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 15, 3), OctetString()).setLabel("error15-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error15_date_time.setStatus('optional')
error16_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 16, 1), Integer32()).setLabel("error16-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error16_time_stamp.setStatus('optional')
error16_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 16, 2), Integer32()).setLabel("error16-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error16_code.setStatus('optional')
error16_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 16, 3), OctetString()).setLabel("error16-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error16_date_time.setStatus('optional')
error17_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 17, 1), Integer32()).setLabel("error17-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error17_time_stamp.setStatus('optional')
error17_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 17, 2), Integer32()).setLabel("error17-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error17_code.setStatus('optional')
error17_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 17, 3), OctetString()).setLabel("error17-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error17_date_time.setStatus('optional')
error18_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 18, 1), Integer32()).setLabel("error18-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error18_time_stamp.setStatus('optional')
error18_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 18, 2), Integer32()).setLabel("error18-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error18_code.setStatus('optional')
error18_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 18, 3), OctetString()).setLabel("error18-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error18_date_time.setStatus('optional')
error19_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 19, 1), Integer32()).setLabel("error19-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error19_time_stamp.setStatus('optional')
error19_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 19, 2), Integer32()).setLabel("error19-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error19_code.setStatus('optional')
error19_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 19, 3), OctetString()).setLabel("error19-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error19_date_time.setStatus('optional')
error20_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 20, 1), Integer32()).setLabel("error20-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error20_time_stamp.setStatus('optional')
error20_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 20, 2), Integer32()).setLabel("error20-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error20_code.setStatus('optional')
error20_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 20, 3), OctetString()).setLabel("error20-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error20_date_time.setStatus('optional')
error21_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 21, 1), Integer32()).setLabel("error21-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error21_time_stamp.setStatus('optional')
error21_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 21, 2), Integer32()).setLabel("error21-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error21_code.setStatus('optional')
error21_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 21, 3), OctetString()).setLabel("error21-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error21_date_time.setStatus('optional')
error22_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 22, 1), Integer32()).setLabel("error22-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error22_time_stamp.setStatus('optional')
error22_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 22, 2), Integer32()).setLabel("error22-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error22_code.setStatus('optional')
error22_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 22, 3), OctetString()).setLabel("error22-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error22_date_time.setStatus('optional')
error23_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 23, 1), Integer32()).setLabel("error23-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error23_time_stamp.setStatus('optional')
error23_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 23, 2), Integer32()).setLabel("error23-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error23_code.setStatus('optional')
error23_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 23, 3), OctetString()).setLabel("error23-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error23_date_time.setStatus('optional')
error24_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 24, 1), Integer32()).setLabel("error24-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error24_time_stamp.setStatus('optional')
error24_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 24, 2), Integer32()).setLabel("error24-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error24_code.setStatus('optional')
error24_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 24, 3), OctetString()).setLabel("error24-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error24_date_time.setStatus('optional')
error25_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 25, 1), Integer32()).setLabel("error25-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error25_time_stamp.setStatus('optional')
error25_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 25, 2), Integer32()).setLabel("error25-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error25_code.setStatus('optional')
error25_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 25, 3), OctetString()).setLabel("error25-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error25_date_time.setStatus('optional')
error26_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 26, 1), Integer32()).setLabel("error26-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error26_time_stamp.setStatus('optional')
error26_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 26, 2), Integer32()).setLabel("error26-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error26_code.setStatus('optional')
error26_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 26, 3), OctetString()).setLabel("error26-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error26_date_time.setStatus('optional')
error27_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 27, 1), Integer32()).setLabel("error27-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error27_time_stamp.setStatus('optional')
error27_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 27, 2), Integer32()).setLabel("error27-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error27_code.setStatus('optional')
error27_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 27, 3), OctetString()).setLabel("error27-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error27_date_time.setStatus('optional')
error28_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 28, 1), Integer32()).setLabel("error28-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error28_time_stamp.setStatus('optional')
error28_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 28, 2), Integer32()).setLabel("error28-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error28_code.setStatus('optional')
error28_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 28, 3), OctetString()).setLabel("error28-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error28_date_time.setStatus('optional')
error29_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 29, 1), Integer32()).setLabel("error29-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error29_time_stamp.setStatus('optional')
error29_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 29, 2), Integer32()).setLabel("error29-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error29_code.setStatus('optional')
error29_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 29, 3), OctetString()).setLabel("error29-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error29_date_time.setStatus('optional')
error30_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 30, 1), Integer32()).setLabel("error30-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error30_time_stamp.setStatus('optional')
error30_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 30, 2), Integer32()).setLabel("error30-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error30_code.setStatus('optional')
error30_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 30, 3), OctetString()).setLabel("error30-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error30_date_time.setStatus('optional')
error31_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 31, 1), Integer32()).setLabel("error31-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error31_time_stamp.setStatus('optional')
error31_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 31, 2), Integer32()).setLabel("error31-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error31_code.setStatus('optional')
error31_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 31, 3), OctetString()).setLabel("error31-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error31_date_time.setStatus('optional')
error32_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 32, 1), Integer32()).setLabel("error32-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error32_time_stamp.setStatus('optional')
error32_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 32, 2), Integer32()).setLabel("error32-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error32_code.setStatus('optional')
error32_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 32, 3), OctetString()).setLabel("error32-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error32_date_time.setStatus('optional')
error33_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 33, 1), Integer32()).setLabel("error33-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error33_time_stamp.setStatus('optional')
error33_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 33, 2), Integer32()).setLabel("error33-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error33_code.setStatus('optional')
error33_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 33, 3), OctetString()).setLabel("error33-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error33_date_time.setStatus('optional')
error34_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 34, 1), Integer32()).setLabel("error34-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error34_time_stamp.setStatus('optional')
error34_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 34, 2), Integer32()).setLabel("error34-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error34_code.setStatus('optional')
error34_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 34, 3), OctetString()).setLabel("error34-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error34_date_time.setStatus('optional')
error35_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 35, 1), Integer32()).setLabel("error35-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error35_time_stamp.setStatus('optional')
error35_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 35, 2), Integer32()).setLabel("error35-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error35_code.setStatus('optional')
error35_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 35, 3), OctetString()).setLabel("error35-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error35_date_time.setStatus('optional')
error36_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 36, 1), Integer32()).setLabel("error36-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error36_time_stamp.setStatus('optional')
error36_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 36, 2), Integer32()).setLabel("error36-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error36_code.setStatus('optional')
error36_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 36, 3), OctetString()).setLabel("error36-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error36_date_time.setStatus('optional')
error37_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 37, 1), Integer32()).setLabel("error37-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error37_time_stamp.setStatus('optional')
error37_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 37, 2), Integer32()).setLabel("error37-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error37_code.setStatus('optional')
error37_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 37, 3), OctetString()).setLabel("error37-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error37_date_time.setStatus('optional')
error38_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 38, 1), Integer32()).setLabel("error38-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error38_time_stamp.setStatus('optional')
error38_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 38, 2), Integer32()).setLabel("error38-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error38_code.setStatus('optional')
error38_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 38, 3), OctetString()).setLabel("error38-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error38_date_time.setStatus('optional')
error39_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 39, 1), Integer32()).setLabel("error39-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error39_time_stamp.setStatus('optional')
error39_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 39, 2), Integer32()).setLabel("error39-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error39_code.setStatus('optional')
error39_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 39, 3), OctetString()).setLabel("error39-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error39_date_time.setStatus('optional')
error40_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 40, 1), Integer32()).setLabel("error40-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error40_time_stamp.setStatus('optional')
error40_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 40, 2), Integer32()).setLabel("error40-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error40_code.setStatus('optional')
error40_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 40, 3), OctetString()).setLabel("error40-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error40_date_time.setStatus('optional')
error41_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 41, 1), Integer32()).setLabel("error41-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error41_time_stamp.setStatus('optional')
error41_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 41, 2), Integer32()).setLabel("error41-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error41_code.setStatus('optional')
error41_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 41, 3), OctetString()).setLabel("error41-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error41_date_time.setStatus('optional')
error42_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 42, 1), Integer32()).setLabel("error42-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error42_time_stamp.setStatus('optional')
error42_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 42, 2), Integer32()).setLabel("error42-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error42_code.setStatus('optional')
error42_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 42, 3), OctetString()).setLabel("error42-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error42_date_time.setStatus('optional')
error43_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 43, 1), Integer32()).setLabel("error43-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error43_time_stamp.setStatus('optional')
error43_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 43, 2), Integer32()).setLabel("error43-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error43_code.setStatus('optional')
error43_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 43, 3), OctetString()).setLabel("error43-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error43_date_time.setStatus('optional')
error44_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 44, 1), Integer32()).setLabel("error44-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error44_time_stamp.setStatus('optional')
error44_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 44, 2), Integer32()).setLabel("error44-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error44_code.setStatus('optional')
error44_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 44, 3), OctetString()).setLabel("error44-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error44_date_time.setStatus('optional')
error45_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 45, 1), Integer32()).setLabel("error45-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error45_time_stamp.setStatus('optional')
error45_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 45, 2), Integer32()).setLabel("error45-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error45_code.setStatus('optional')
error45_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 45, 3), OctetString()).setLabel("error45-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error45_date_time.setStatus('optional')
error46_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 46, 1), Integer32()).setLabel("error46-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error46_time_stamp.setStatus('optional')
error46_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 46, 2), Integer32()).setLabel("error46-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error46_code.setStatus('optional')
error46_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 46, 3), OctetString()).setLabel("error46-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error46_date_time.setStatus('optional')
error47_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 47, 1), Integer32()).setLabel("error47-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error47_time_stamp.setStatus('optional')
error47_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 47, 2), Integer32()).setLabel("error47-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error47_code.setStatus('optional')
error47_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 47, 3), OctetString()).setLabel("error47-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error47_date_time.setStatus('optional')
error48_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 48, 1), Integer32()).setLabel("error48-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error48_time_stamp.setStatus('optional')
error48_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 48, 2), Integer32()).setLabel("error48-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error48_code.setStatus('optional')
error48_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 48, 3), OctetString()).setLabel("error48-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error48_date_time.setStatus('optional')
error49_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 49, 1), Integer32()).setLabel("error49-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error49_time_stamp.setStatus('optional')
error49_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 49, 2), Integer32()).setLabel("error49-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error49_code.setStatus('optional')
error49_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 49, 3), OctetString()).setLabel("error49-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error49_date_time.setStatus('optional')
error50_time_stamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 50, 1), Integer32()).setLabel("error50-time-stamp").setMaxAccess("readonly")
if mibBuilder.loadTexts: error50_time_stamp.setStatus('optional')
error50_code = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 50, 2), Integer32()).setLabel("error50-code").setMaxAccess("readonly")
if mibBuilder.loadTexts: error50_code.setStatus('optional')
error50_date_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 11, 50, 3), OctetString()).setLabel("error50-date-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: error50_date_time.setStatus('optional')
channelprinteralert = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 6, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelprinteralert.setStatus('optional')
install_date = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(13, 13)).setFixedLength(13)).setLabel("install-date").setMaxAccess("readwrite")
if mibBuilder.loadTexts: install_date.setStatus('optional')
service_id = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setLabel("service-id").setMaxAccess("readwrite")
if mibBuilder.loadTexts: service_id.setStatus('optional')
show_address = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 20, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("eOff", 1), ("eAuto", 3)))).setLabel("show-address").setMaxAccess("readwrite")
if mibBuilder.loadTexts: show_address.setStatus('optional')
serial_number = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setLabel("serial-number").setMaxAccess("readonly")
if mibBuilder.loadTexts: serial_number.setStatus('optional')
fw_rom_datecode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 5), OctetString()).setLabel("fw-rom-datecode").setMaxAccess("readonly")
if mibBuilder.loadTexts: fw_rom_datecode.setStatus('optional')
fw_rom_revision = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 6), OctetString()).setLabel("fw-rom-revision").setMaxAccess("readonly")
if mibBuilder.loadTexts: fw_rom_revision.setStatus('optional')
device_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setLabel("device-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: device_name.setStatus('optional')
device_location = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 11), OctetString()).setLabel("device-location").setMaxAccess("readwrite")
if mibBuilder.loadTexts: device_location.setStatus('optional')
asset_number = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 12), OctetString()).setLabel("asset-number").setMaxAccess("readwrite")
if mibBuilder.loadTexts: asset_number.setStatus('optional')
ews_request_control_panel_supplies_status = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eFalse", 1), ("eTrue", 2)))).setLabel("ews-request-control-panel-supplies-status").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ews_request_control_panel_supplies_status.setStatus('optional')
default_copies = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 4), Integer32()).setLabel("default-copies").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copies.setStatus('optional')
default_lines_per_page = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 11), Integer32()).setLabel("default-lines-per-page").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_lines_per_page.setStatus('optional')
default_vmi = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 12), Integer32()).setLabel("default-vmi").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_vmi.setStatus('optional')
default_media_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 15, 17, 18, 25, 26, 45, 72, 80, 81, 90, 91, 100, 101, 32767))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eFoolscap", 10), ("eStatement", 15), ("eROC16K", 17), ("eJISExecutive", 18), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eJISB5", 45), ("eJapanesePostcardDouble", 72), ("eMonarch", 80), ("eCommercial10", 81), ("eInternationalDL", 90), ("eInternationalC5", 91), ("eInternationalB5", 100), ("eCustom", 101), ("eUnknownMediaSize", 32767)))).setLabel("default-media-size").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_media_size.setStatus('optional')
cold_reset_media_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 26))).clone(namedValues=NamedValues(("eUSLetter", 2), ("eISOandJISA4", 26)))).setLabel("cold-reset-media-size").setMaxAccess("readwrite")
if mibBuilder.loadTexts: cold_reset_media_size.setStatus('optional')
reprint = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2), ("eAuto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reprint.setStatus('optional')
postscript_defer_media = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eDisabled", 1), ("eEnabled", 2)))).setLabel("postscript-defer-media").setMaxAccess("readwrite")
if mibBuilder.loadTexts: postscript_defer_media.setStatus('optional')
duplex_blank_pages = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eDuplexBlankPagesAuto", 1), ("eDuplexBlankPagesYes", 2)))).setLabel("duplex-blank-pages").setMaxAccess("readwrite")
if mibBuilder.loadTexts: duplex_blank_pages.setStatus('optional')
tray_prompt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eDoNotDisplay", 1), ("eDisplay", 2)))).setLabel("tray-prompt").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tray_prompt.setStatus('optional')
tray_disable_use_instead = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eDisabled", 1), ("eEnabled", 2)))).setLabel("tray-disable-use-instead").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tray_disable_use_instead.setStatus('optional')
color_copy_enabled = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eEnable", 1), ("eDisable", 2)))).setLabel("color-copy-enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: color_copy_enabled.setStatus('optional')
pcl_total_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 3, 5), Integer32()).setLabel("pcl-total-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: pcl_total_page_count.setStatus('optional')
pcl_default_font_height = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 3, 13), Integer32()).setLabel("pcl-default-font-height").setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcl_default_font_height.setStatus('optional')
pcl_default_font_source = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 11, 12, 13, 14))).clone(namedValues=NamedValues(("eInternal", 1), ("ePermanentSoft", 2), ("eRomSimm2", 11), ("eRomSimm3", 12), ("eRomSimm4", 13), ("eRomSimm5", 14)))).setLabel("pcl-default-font-source").setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcl_default_font_source.setStatus('optional')
pcl_default_font_number = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setLabel("pcl-default-font-number").setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcl_default_font_number.setStatus('optional')
pcl_default_font_width = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 3, 16), Integer32()).setLabel("pcl-default-font-width").setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcl_default_font_width.setStatus('optional')
postscript_total_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 4, 5), Integer32()).setLabel("postscript-total-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: postscript_total_page_count.setStatus('optional')
postscript_print_errors = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("postscript-print-errors").setMaxAccess("readwrite")
if mibBuilder.loadTexts: postscript_print_errors.setStatus('optional')
scan_sharpening_coefficient = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setLabel("scan-sharpening-coefficient").setMaxAccess("readwrite")
if mibBuilder.loadTexts: scan_sharpening_coefficient.setStatus('optional')
scanner_accessory_adf_sheet_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("scanner-accessory-adf-sheet-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_adf_sheet_count.setStatus('optional')
scanner_accessory_flatbed_scan_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("scanner-accessory-flatbed-scan-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_flatbed_scan_count.setStatus('optional')
scanner_accessory_adf_one_sided_sheet_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 59), Integer32()).setLabel("scanner-accessory-adf-one-sided-sheet-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_adf_one_sided_sheet_count.setStatus('optional')
scanner_accessory_adf_two_sided_sheet_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 60), Integer32()).setLabel("scanner-accessory-adf-two-sided-sheet-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_adf_two_sided_sheet_count.setStatus('optional')
scanner_accessory_copy_job_scan_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 61), Integer32()).setLabel("scanner-accessory-copy-job-scan-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_copy_job_scan_count.setStatus('optional')
scanner_accessory_send_job_scan_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 62), Integer32()).setLabel("scanner-accessory-send-job-scan-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_send_job_scan_count.setStatus('optional')
scanner_accessory_total_copy_pages_printed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 63), Integer32()).setLabel("scanner-accessory-total-copy-pages-printed").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_total_copy_pages_printed.setStatus('optional')
scanner_accessory_digital_send_module_url = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 64), OctetString()).setLabel("scanner-accessory-digital-send-module-url").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_digital_send_module_url.setStatus('optional')
scanner_accessory_digital_send_status = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 65), Integer32()).setLabel("scanner-accessory-digital-send-status").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_digital_send_status.setStatus('optional')
default_scan_original_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 15, 25, 26, 45, 32767))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eFoolscap", 10), ("eStatement", 15), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eJISB5", 45), ("eUnknownMediaSize", 32767)))).setLabel("default-scan-original-size").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_scan_original_size.setStatus('optional')
default_scan_text_graphics_mix = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setLabel("default-scan-text-graphics-mix").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_scan_text_graphics_mix.setStatus('optional')
default_scan_job_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("default-scan-job-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_scan_job_mode.setStatus('optional')
default_scan_background_removal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setLabel("default-scan-background-removal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_scan_background_removal.setStatus('optional')
default_scan_image_quality = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eNormal", 1), ("eBest", 2)))).setLabel("default-scan-image-quality").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_scan_image_quality.setStatus('optional')
default_scan_content_orientation = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ePortrait", 1), ("eLandscape", 2)))).setLabel("default-scan-content-orientation").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_scan_content_orientation.setStatus('optional')
auto_send_reset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("auto-send-reset").setMaxAccess("readwrite")
if mibBuilder.loadTexts: auto_send_reset.setStatus('optional')
scanner_accessory_digital_send_log_event_counter = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 79), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setLabel("scanner-accessory-digital-send-log-event-counter").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_digital_send_log_event_counter.setStatus('optional')
scanner_accessory_digital_send_config_email_gateway = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 80), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setLabel("scanner-accessory-digital-send-config-email-gateway").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_digital_send_config_email_gateway.setStatus('optional')
scanner_accessory_digital_send_config_ldap_gateway = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 81), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setLabel("scanner-accessory-digital-send-config-ldap-gateway").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_digital_send_config_ldap_gateway.setStatus('optional')
scanner_accessory_digital_send_config_dsm_enabled_fax = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 82), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setLabel("scanner-accessory-digital-send-config-dsm-enabled-fax").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_digital_send_config_dsm_enabled_fax.setStatus('optional')
scanner_accessory_digital_send_config_fax_embedded = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 83), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setLabel("scanner-accessory-digital-send-config-fax-embedded").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_digital_send_config_fax_embedded.setStatus('optional')
default_scanner_speed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e25ppm", 1), ("e50ppm", 2)))).setLabel("default-scanner-speed").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_scanner_speed.setStatus('optional')
scan_to_folder_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 89), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999999))).setLabel("scan-to-folder-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: scan_to_folder_count.setStatus('optional')
fax_job_scan_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 90), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999999))).setLabel("fax-job-scan-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: fax_job_scan_count.setStatus('optional')
scanner_accessory_digital_send_home_screen_status = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 1, 91), OctetString().subtype(subtypeSpec=ValueSizeConstraint(50, 50)).setFixedLength(50)).setLabel("scanner-accessory-digital-send-home-screen-status").setMaxAccess("readonly")
if mibBuilder.loadTexts: scanner_accessory_digital_send_home_screen_status.setStatus('optional')
not_ready_source_scanner = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 2, 1), OctetString()).setLabel("not-ready-source-scanner").setMaxAccess("readonly")
if mibBuilder.loadTexts: not_ready_source_scanner.setStatus('optional')
scan_calibration_download = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 2, 5), OctetString()).setLabel("scan-calibration-download").setMaxAccess("readwrite")
if mibBuilder.loadTexts: scan_calibration_download.setStatus('optional')
scan_calibration_error = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("eNoError", 1), ("eUnknownCalibrationError", 2), ("eScannerFeederEmpty", 3), ("eLowMemory", 4), ("eWriteFailed", 5), ("eScannerBusy", 6), ("eADFMispick", 7), ("eADFJam", 8), ("eUncorrectablePixels", 9)))).setLabel("scan-calibration-error").setMaxAccess("readonly")
if mibBuilder.loadTexts: scan_calibration_error.setStatus('optional')
default_audible_feedback = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("default-audible-feedback").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_audible_feedback.setStatus('optional')
default_reset_send_timeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10000, 300000))).setLabel("default-reset-send-timeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_reset_send_timeout.setStatus('optional')
default_authentication_timeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300000))).setLabel("default-authentication-timeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_authentication_timeout.setStatus('optional')
default_staple_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("eNone", 1), ("eNormal", 2), ("eAngled", 3), ("eTwoStaples", 4), ("eThreeStaples", 5), ("eSixStaples", 6), ("eCustomStapleMode", 7), ("eOppositeCorner", 8), ("eSaddleStitch", 9)))).setLabel("default-staple-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_staple_mode.setStatus('optional')
default_mfp_color_space = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 6, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eBiLevel", 1), ("eGray", 2)))).setLabel("default-mfp-color-space").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_mfp_color_space.setStatus('optional')
default_copier_media_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 15, 17, 18, 25, 26, 45, 72, 81, 80, 90, 91, 100, 32767))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eFoolscap", 10), ("eStatement", 15), ("eROC16K", 17), ("eJISExecutive", 18), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eJISB5", 45), ("eJapansePostcardDouble", 72), ("eCommercial10", 81), ("eMonarch", 80), ("eInternationalDL", 90), ("eInternationalC5", 91), ("eInternationalB5", 100), ("eUnknownMediaSize", 32767)))).setLabel("default-copier-media-size").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_media_size.setStatus('optional')
default_copier_image_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eText", 1), ("eGraphic", 2), ("eMixed", 3)))).setLabel("default-copier-image-type").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_image_type.setStatus('optional')
copier_media_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("eCopierMediaTypePlain", 1), ("eCopierMediaTypeBrightWhite", 2), ("eCopierMediaTypePhoto", 3), ("eCopierMediaTypeSpecial", 4), ("eCopierMediaTypeTransparency", 5), ("eCopierMediaTypeIronon", 6), ("eCopierMediaTypeFastTransparency", 7), ("eCopierMediaTypeBochureMatte", 8), ("eCopierMediaTypeBrochureGlossy", 9), ("eCopierMediaTypePhotoGlossy", 10), ("eCopierMediaTypePhotoMatte", 11), ("eCopierMediaTypeEverydayPhoto", 12), ("eCopierMediaTypePhotoQualInkjet", 13), ("eCopierMediaTypeOtherPhoto", 14), ("eCopierMediaTypeAutomatic", 15), ("eCopierMediaTypeAdvancedPhoto", 16), ("eCopierMediaTypeIronOnMirrored", 17), ("eMediaTypeLight", 21), ("eMediaTypeEnvelope", 22), ("eHeavyGloss", 23), ("eGlossFilm", 24), ("eNonHPHeavyGloss", 25)))).setLabel("copier-media-type").setMaxAccess("readwrite")
if mibBuilder.loadTexts: copier_media_type.setStatus('optional')
default_copy_duplex_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("eSimplexToSimplex", 1), ("eSimplexToDuplex", 2), ("eDuplexToSimplex", 4), ("eDuplexToDuplex", 5)))).setLabel("default-copy-duplex-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copy_duplex_mode.setStatus('optional')
default_copy_input_tray = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("eInTray1", 1), ("eInTray2", 2), ("eInTray3", 3), ("eInTray4", 4)))).setLabel("default-copy-input-tray").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copy_input_tray.setStatus('optional')
default_copy_output_bin = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eOutBin1", 1), ("eOutBin2", 2), ("eOutBin3", 3)))).setLabel("default-copy-output-bin").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copy_output_bin.setStatus('optional')
default_copy_reset_timeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 31), Integer32()).setLabel("default-copy-reset-timeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copy_reset_timeout.setStatus('optional')
default_copier_quantity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setLabel("default-copier-quantity").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_quantity.setStatus('optional')
default_copier_flip_pages_up = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eFalse", 1), ("eTrue", 2)))).setLabel("default-copier-flip-pages-up").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_flip_pages_up.setStatus('optional')
default_copier_pages_per_sheet = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 7, 8))).clone(namedValues=NamedValues(("eNone", 1), ("eTwoUp", 6), ("eFourUpNOrder", 7), ("eFourUpZOrder", 8)))).setLabel("default-copier-pages-per-sheet").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_pages_per_sheet.setStatus('optional')
default_copier_page_borders = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eNone", 1), ("eLine", 2)))).setLabel("default-copier-page-borders").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_page_borders.setStatus('optional')
default_copier_collate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eCollate", 1), ("eUncollate", 2)))).setLabel("default-copier-collate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_collate.setStatus('optional')
default_copier_contrast = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 37), Integer32()).setLabel("default-copier-contrast").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_contrast.setStatus('optional')
default_copier_edge_to_edge = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eNone", 1), ("eScale", 2), ("eClip", 3)))).setLabel("default-copier-edge-to-edge").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copier_edge_to_edge.setStatus('optional')
copy_job_scan_ahead = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("copy-job-scan-ahead").setMaxAccess("readwrite")
if mibBuilder.loadTexts: copy_job_scan_ahead.setStatus('optional')
copy_job_auto_interrupt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("copy-job-auto-interrupt").setMaxAccess("readwrite")
if mibBuilder.loadTexts: copy_job_auto_interrupt.setStatus('optional')
copy_job_interrupt_copy_jobs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("copy-job-interrupt-copy-jobs").setMaxAccess("readwrite")
if mibBuilder.loadTexts: copy_job_interrupt_copy_jobs.setStatus('optional')
copy_job_hold_off_print_jobs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("copy-job-hold-off-print-jobs").setMaxAccess("readwrite")
if mibBuilder.loadTexts: copy_job_hold_off_print_jobs.setStatus('optional')
copy_job_hold_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 43), Integer32()).setLabel("copy-job-hold-time").setMaxAccess("readwrite")
if mibBuilder.loadTexts: copy_job_hold_time.setStatus('optional')
default_copy_job_chromaticity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eMono", 1), ("eColor", 2)))).setLabel("default-copy-job-chromaticity").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_copy_job_chromaticity.setStatus('optional')
first_copy_speed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eNoEarlyWarmup", 1), ("eEarlyWarmup", 2)))).setLabel("first-copy-speed").setMaxAccess("readwrite")
if mibBuilder.loadTexts: first_copy_speed.setStatus('optional')
copier_job_border_setting = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 5, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eWithBorders", 1), ("eWithoutBorders", 2)))).setLabel("copier-job-border-setting").setMaxAccess("readwrite")
if mibBuilder.loadTexts: copier_job_border_setting.setStatus('optional')
collated_originals_support = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 42), OctetString()).setLabel("collated-originals-support").setMaxAccess("readonly")
if mibBuilder.loadTexts: collated_originals_support.setStatus('optional')
host_application_available_memory = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 59), Integer32()).setLabel("host-application-available-memory").setMaxAccess("readonly")
if mibBuilder.loadTexts: host_application_available_memory.setStatus('optional')
socket_ping_job_events_version = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 7, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setLabel("socket-ping-job-events-version").setMaxAccess("readonly")
if mibBuilder.loadTexts: socket_ping_job_events_version.setStatus('optional')
job_info_change_id = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setLabel("job-info-change-id").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_change_id.setStatus('optional')
hold_job_timeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 1, 10), Integer32()).setLabel("hold-job-timeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: hold_job_timeout.setStatus('optional')
current_job_parsing_id = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setLabel("current-job-parsing-id").setMaxAccess("readonly")
if mibBuilder.loadTexts: current_job_parsing_id.setStatus('optional')
job_info_name1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 1), OctetString()).setLabel("job-info-name1").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_name1.setStatus('optional')
job_info_name2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 2), OctetString()).setLabel("job-info-name2").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_name2.setStatus('optional')
job_info_stage = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 10), OctetString()).setLabel("job-info-stage").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_stage.setStatus('optional')
job_info_io_source = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 11), Integer32()).setLabel("job-info-io-source").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_io_source.setStatus('optional')
job_info_pages_processed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 12), Integer32()).setLabel("job-info-pages-processed").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_pages_processed.setStatus('optional')
job_info_pages_printed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 13), Integer32()).setLabel("job-info-pages-printed").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_pages_printed.setStatus('optional')
job_info_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 14), Integer32()).setLabel("job-info-size").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_size.setStatus('optional')
job_info_state = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 7, 10, 11, 12, 13))).clone(namedValues=NamedValues(("eAborted", 3), ("eWaitingForResources", 4), ("ePrinted", 5), ("eTerminating", 7), ("eCancelled", 10), ("eProcessing", 11), ("eScanning", 12), ("eSending", 13)))).setLabel("job-info-state").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_state.setStatus('optional')
job_info_outcome = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("eOk", 3)))).setLabel("job-info-outcome").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_outcome.setStatus('optional')
job_info_outbins_used = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 20), OctetString()).setLabel("job-info-outbins-used").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_outbins_used.setStatus('optional')
job_info_physical_outbins_used = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 22), OctetString()).setLabel("job-info-physical-outbins-used").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_physical_outbins_used.setStatus('optional')
job_info_attr_1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-1").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_1.setStatus('optional')
job_info_attr_2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_2.setStatus('optional')
job_info_attr_3 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-3").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_3.setStatus('optional')
job_info_attr_4 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-4").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_4.setStatus('optional')
job_info_attr_5 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_5.setStatus('optional')
job_info_attr_6 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-6").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_6.setStatus('optional')
job_info_attr_7 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-7").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_7.setStatus('optional')
job_info_attr_8 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-8").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_8.setStatus('optional')
job_info_attr_9 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-9").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_9.setStatus('optional')
job_info_attr_10 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-10").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_10.setStatus('optional')
job_info_attr_11 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-11").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_11.setStatus('optional')
job_info_attr_12 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-12").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_12.setStatus('optional')
job_info_attr_13 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-13").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_13.setStatus('optional')
job_info_attr_14 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-14").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_14.setStatus('optional')
job_info_attr_15 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-15").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_15.setStatus('optional')
job_info_attr_16 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 23, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-attr-16").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_attr_16.setStatus('optional')
job_info_requested_originals = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 24), Integer32()).setLabel("job-info-requested-originals").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_requested_originals.setStatus('optional')
job_info_page_count_current_original = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 25), Integer32()).setLabel("job-info-page-count-current-original").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_page_count_current_original.setStatus('optional')
job_info_pages_in_original = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 26), Integer32()).setLabel("job-info-pages-in-original").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_pages_in_original.setStatus('optional')
job_info_printed_originals = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 27), Integer32()).setLabel("job-info-printed-originals").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_printed_originals.setStatus('optional')
job_info_accounting_media_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 11, 17, 18, 19, 25, 26, 27, 45, 46, 65, 72, 80, 81, 90, 91, 100, 101, 258, 282, 32767))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eLedger", 11), ("eROC16K", 17), ("eJISExecutive", 18), ("eROC8K", 19), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eISOandJISA3", 27), ("eJISB5", 45), ("eJISB4", 46), ("eISOB5", 65), ("eJapansePostcardDouble", 72), ("eMonarch", 80), ("eCommercial10", 81), ("eInternationalDL", 90), ("eInternationalC5", 91), ("eInternationalB5", 100), ("eCustom", 101), ("eUSLetterR", 258), ("eISOandJISA4R", 282), ("eUnknownMediaSize", 32767)))).setLabel("job-info-accounting-media-size").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_media_size.setStatus('optional')
job_info_accounting_media_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("eUnknownMedia", 1), ("eStandardType", 2), ("ePreprinted", 3), ("eBond", 4), ("eLetterhead", 5), ("eTransparency", 7), ("eLabels", 8), ("eRecycled", 9), ("eColored", 10), ("eCardStock", 11), ("eRough", 12), ("ePrepunched", 13), ("eHeavy", 14), ("eUserType1", 16), ("eUserType2", 17), ("eUserType3", 18), ("eUserType4", 19), ("eUserType5", 20)))).setLabel("job-info-accounting-media-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_media_type.setStatus('optional')
job_info_accounting_finishing_options = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("eNoFinish", 1), ("eOffset", 2), ("ePunch", 3), ("eStapler", 4), ("eFinisher", 5)))).setLabel("job-info-accounting-finishing-options").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_finishing_options.setStatus('optional')
job_info_accounting_media_simplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 4), Integer32()).setLabel("job-info-accounting-media-simplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_media_simplex_count.setStatus('optional')
job_info_accounting_media_duplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 5), Integer32()).setLabel("job-info-accounting-media-duplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_media_duplex_count.setStatus('optional')
job_info_accounting_grayscale_impression_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 6), Integer32()).setLabel("job-info-accounting-grayscale-impression-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_grayscale_impression_count.setStatus('optional')
job_info_accounting_color_impression_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 7), Integer32()).setLabel("job-info-accounting-color-impression-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_color_impression_count.setStatus('optional')
job_info_accounting_black_dots = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 8), Integer32()).setLabel("job-info-accounting-black-dots").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_black_dots.setStatus('optional')
job_info_accounting_yellow_dots = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 9), Integer32()).setLabel("job-info-accounting-yellow-dots").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_yellow_dots.setStatus('optional')
job_info_accounting_cyan_dots = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 10), Integer32()).setLabel("job-info-accounting-cyan-dots").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_cyan_dots.setStatus('optional')
job_info_accounting_magenta_dots = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 11), Integer32()).setLabel("job-info-accounting-magenta-dots").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_magenta_dots.setStatus('optional')
job_info_accounting_scanned_media_simplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-accounting-scanned-media-simplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_scanned_media_simplex_count.setStatus('optional')
job_info_accounting_scanned_media_duplex_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setLabel("job-info-accounting-scanned-media-duplex-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_scanned_media_duplex_count.setStatus('optional')
job_info_accounting_job_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 5, 28, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1000))).clone(namedValues=NamedValues(("ePrintJob", 1), ("eIPPJob", 2), ("eCopyJob", 3), ("eCopyInterruptJob", 4), ("eJetSendJob", 5), ("eInternalPage", 6), ("eCleaningPage", 7), ("eAutoCleaningPage", 8), ("eDigitalSendJob", 9), ("eWebPrintJob", 10), ("eFaxPrintJob", 11), ("eRetrievedJob", 12), ("ePhotoCardPrintJob", 13), ("eUnknownJob", 1000)))).setLabel("job-info-accounting-job-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: job_info_accounting_job_type.setStatus('optional')
held_job_user_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setLabel("held-job-user-name").setMaxAccess("readonly")
if mibBuilder.loadTexts: held_job_user_name.setStatus('optional')
held_job_job_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setLabel("held-job-job-name").setMaxAccess("readonly")
if mibBuilder.loadTexts: held_job_job_name.setStatus('optional')
held_job_retention = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("eHoldOff", 1), ("eHoldOn", 2), ("eHoldStore", 3), ("eHoldProof", 4)))).setLabel("held-job-retention").setMaxAccess("readonly")
if mibBuilder.loadTexts: held_job_retention.setStatus('optional')
held_job_security = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eHoldTypePublic", 1), ("eHoldTypePrivate", 2)))).setLabel("held-job-security").setMaxAccess("readonly")
if mibBuilder.loadTexts: held_job_security.setStatus('optional')
held_job_quantity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setLabel("held-job-quantity").setMaxAccess("readonly")
if mibBuilder.loadTexts: held_job_quantity.setStatus('optional')
held_job_pin = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setLabel("held-job-pin").setMaxAccess("readonly")
if mibBuilder.loadTexts: held_job_pin.setStatus('optional')
held_job_print = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setLabel("held-job-print").setMaxAccess("writeonly")
if mibBuilder.loadTexts: held_job_print.setStatus('optional')
held_job_delete = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 2, 2), Integer32()).setLabel("held-job-delete").setMaxAccess("writeonly")
if mibBuilder.loadTexts: held_job_delete.setStatus('optional')
held_job_set_queue_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setLabel("held-job-set-queue-size").setMaxAccess("readwrite")
if mibBuilder.loadTexts: held_job_set_queue_size.setStatus('optional')
held_job_enable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 6, 7, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eDisabled", 1), ("eEnabled", 2)))).setLabel("held-job-enable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: held_job_enable.setStatus('optional')
mopy_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 5))).clone(namedValues=NamedValues(("eOff", 1), ("eStandard", 4), ("eEnhanced", 5)))).setLabel("mopy-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mopy_mode.setStatus('optional')
date_display = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6))).clone(namedValues=NamedValues(("eDateDisplayMMM-DD-YYYY", 4), ("eDateDisplayDD-MMM-YYYY", 5), ("eDateDisplayYYYY-MMM-DD", 6)))).setLabel("date-display").setMaxAccess("readwrite")
if mibBuilder.loadTexts: date_display.setStatus('optional')
date_and_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 17), OctetString()).setLabel("date-and-time").setMaxAccess("readwrite")
if mibBuilder.loadTexts: date_and_time.setStatus('optional')
time_display = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eTimeDisplayTwelveHour", 1), ("eTimeDisplayTwentyFourHour", 2)))).setLabel("time-display").setMaxAccess("readwrite")
if mibBuilder.loadTexts: time_display.setStatus('optional')
direct_connect_ports_enable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eFalse", 1), ("eTrue", 2), ("eUnSupported", 3)))).setLabel("direct-connect-ports-enable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: direct_connect_ports_enable.setStatus('optional')
mio1_model_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 1, 2), OctetString()).setLabel("mio1-model-name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio1_model_name.setStatus('optional')
mio1_manufacturing_info = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 1, 3), OctetString()).setLabel("mio1-manufacturing-info").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio1_manufacturing_info.setStatus('optional')
mio1_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 8, 12))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eDiskDrive", 8), ("eIOCard", 12)))).setLabel("mio1-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio1_type.setStatus('optional')
mio2_model_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 2, 2), OctetString()).setLabel("mio2-model-name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio2_model_name.setStatus('optional')
mio2_manufacturing_info = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 2, 3), OctetString()).setLabel("mio2-manufacturing-info").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio2_manufacturing_info.setStatus('optional')
mio2_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 8, 12))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eDiskDrive", 8), ("eIOCard", 12)))).setLabel("mio2-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio2_type.setStatus('optional')
mio3_model_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 3, 2), OctetString()).setLabel("mio3-model-name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio3_model_name.setStatus('optional')
mio3_manufacturing_info = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 3, 3), OctetString()).setLabel("mio3-manufacturing-info").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio3_manufacturing_info.setStatus('optional')
mio3_type = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 4, 3, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 8, 12))).clone(namedValues=NamedValues(("eEmpty", 1), ("eUnknown", 2), ("eDiskDrive", 8), ("eIOCard", 12)))).setLabel("mio3-type").setMaxAccess("readonly")
if mibBuilder.loadTexts: mio3_type.setStatus('optional')
io_timeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300))).setLabel("io-timeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: io_timeout.setStatus('optional')
io_switch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("eYes", 1)))).setLabel("io-switch").setMaxAccess("readonly")
if mibBuilder.loadTexts: io_switch.setStatus('optional')
port1_parallel_speed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eSlow", 1), ("eFast", 2)))).setLabel("port1-parallel-speed").setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1_parallel_speed.setStatus('optional')
port1_parallel_bidirectionality = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 2, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eUnidirectional", 1), ("eBidirectional", 2)))).setLabel("port1-parallel-bidirectionality").setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1_parallel_bidirectionality.setStatus('optional')
rpc_bind_protocol_address = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 13, 1, 2), OctetString()).setLabel("rpc-bind-protocol-address").setMaxAccess("readonly")
if mibBuilder.loadTexts: rpc_bind_protocol_address.setStatus('optional')
rpc_bound_protocol_address = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 13, 2, 3), OctetString()).setLabel("rpc-bound-protocol-address").setMaxAccess("readonly")
if mibBuilder.loadTexts: rpc_bound_protocol_address.setStatus('optional')
file_system_max_open_files = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1, 2), Integer32()).setLabel("file-system-max-open-files").setMaxAccess("readonly")
if mibBuilder.loadTexts: file_system_max_open_files.setStatus('optional')
file_system_set_system_partition_writeable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1, 6), OctetString()).setLabel("file-system-set-system-partition-writeable").setMaxAccess("writeonly")
if mibBuilder.loadTexts: file_system_set_system_partition_writeable.setStatus('optional')
file_system_set_system_partition_readonly = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1, 7), Integer32()).setLabel("file-system-set-system-partition-readonly").setMaxAccess("writeonly")
if mibBuilder.loadTexts: file_system_set_system_partition_readonly.setStatus('optional')
file_system_delete_files = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1, 8), OctetString()).setLabel("file-system-delete-files").setMaxAccess("writeonly")
if mibBuilder.loadTexts: file_system_delete_files.setStatus('optional')
file_system_external_access_capabilities = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1, 10), OctetString()).setLabel("file-system-external-access-capabilities").setMaxAccess("readwrite")
if mibBuilder.loadTexts: file_system_external_access_capabilities.setStatus('optional')
file_system_erase_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1, 11), OctetString()).setLabel("file-system-erase-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: file_system_erase_mode.setStatus('optional')
file_system_wipe_disk = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1, 12), Integer32()).setLabel("file-system-wipe-disk").setMaxAccess("readwrite")
if mibBuilder.loadTexts: file_system_wipe_disk.setStatus('optional')
file_system_wipe_disk_status = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 1, 13), Integer32()).setLabel("file-system-wipe-disk-status").setMaxAccess("readonly")
if mibBuilder.loadTexts: file_system_wipe_disk_status.setStatus('optional')
file_system2_initialize_volume = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 3, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("eInitializing", 2)))).setLabel("file-system2-initialize-volume").setMaxAccess("writeonly")
if mibBuilder.loadTexts: file_system2_initialize_volume.setStatus('optional')
file_system3_initialize_volume = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 3, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("eInitializing", 2)))).setLabel("file-system3-initialize-volume").setMaxAccess("writeonly")
if mibBuilder.loadTexts: file_system3_initialize_volume.setStatus('optional')
file_system4_initialize_volume = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 10, 3, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("eInitializing", 2)))).setLabel("file-system4-initialize-volume").setMaxAccess("writeonly")
if mibBuilder.loadTexts: file_system4_initialize_volume.setStatus('optional')
mass_storage_resource_change_counter = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 12, 3, 1), Integer32()).setLabel("mass-storage-resource-change-counter").setMaxAccess("readonly")
if mibBuilder.loadTexts: mass_storage_resource_change_counter.setStatus('optional')
mass_storage_resource_changed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 12, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("eTrue", 2)))).setLabel("mass-storage-resource-changed").setMaxAccess("writeonly")
if mibBuilder.loadTexts: mass_storage_resource_changed.setStatus('optional')
ram_disk_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("eOff", 1), ("eAuto", 3)))).setLabel("ram-disk-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ram_disk_mode.setStatus('optional')
ram_disk_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 15, 1, 2), Integer32()).setLabel("ram-disk-size").setMaxAccess("readonly")
if mibBuilder.loadTexts: ram_disk_size.setStatus('optional')
maximum_ram_disk_memory = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 15, 2, 1), Integer32()).setLabel("maximum-ram-disk-memory").setMaxAccess("readonly")
if mibBuilder.loadTexts: maximum_ram_disk_memory.setStatus('optional')
mono_color_switching_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eAutoSwitch", 1), ("eMostlyColor", 2), ("eMostlyMono", 3)))).setLabel("mono-color-switching-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mono_color_switching_mode.setStatus('optional')
device_configure_printer_parameters = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 32, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setLabel("device-configure-printer-parameters").setMaxAccess("readwrite")
if mibBuilder.loadTexts: device_configure_printer_parameters.setStatus('optional')
job_input_auto_continue_timeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 3600))).setLabel("job-input-auto-continue-timeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: job_input_auto_continue_timeout.setStatus('optional')
job_input_auto_continue_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 36), OctetString()).setLabel("job-input-auto-continue-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: job_input_auto_continue_mode.setStatus('optional')
job_output_auto_continue_timeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 2, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 3600))).setLabel("job-output-auto-continue-timeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: job_output_auto_continue_timeout.setStatus('optional')
model_number = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 1), OctetString()).setLabel("model-number").setMaxAccess("readonly")
if mibBuilder.loadTexts: model_number.setStatus('optional')
model_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setLabel("model-name").setMaxAccess("readonly")
if mibBuilder.loadTexts: model_name.setStatus('optional')
formatter_serial_number = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 3, 20), OctetString()).setLabel("formatter-serial-number").setMaxAccess("readonly")
if mibBuilder.loadTexts: formatter_serial_number.setStatus('optional')
engine_self_diagnostic = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 5, 7), OctetString()).setLabel("engine-self-diagnostic").setMaxAccess("readonly")
if mibBuilder.loadTexts: engine_self_diagnostic.setStatus('optional')
engine_parameter = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 5, 8), OctetString()).setLabel("engine-parameter").setMaxAccess("readonly")
if mibBuilder.loadTexts: engine_parameter.setStatus('optional')
default_media_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 22), OctetString()).setLabel("default-media-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_media_name.setStatus('optional')
override_media_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 2), OctetString()).setLabel("override-media-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: override_media_name.setStatus('optional')
override_media_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 11, 17, 18, 19, 25, 26, 27, 45, 46, 65, 72, 80, 81, 90, 91, 100, 101, 258, 282, 32767))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eLedger", 11), ("eROC16K", 17), ("eJISExecutive", 18), ("eROC8K", 19), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eISOandJISA3", 27), ("eJISB5", 45), ("eJISB4", 46), ("eISOB5", 65), ("eJapanesePostcardDouble", 72), ("eMonarch", 80), ("eCommercial10", 81), ("eInternationalDL", 90), ("eInternationalC5", 91), ("eInternationalB5", 100), ("eCustom", 101), ("eUSLetterR", 258), ("eISOandJISA4R", 282), ("eUnknownMediaSize", 32767)))).setLabel("override-media-size").setMaxAccess("readwrite")
if mibBuilder.loadTexts: override_media_size.setStatus('optional')
marking_agent_highlights_density_setting = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 9, 2), Integer32()).setLabel("marking-agent-highlights-density-setting").setMaxAccess("readwrite")
if mibBuilder.loadTexts: marking_agent_highlights_density_setting.setStatus('optional')
marking_agent_midtones_density_setting = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 9, 3), Integer32()).setLabel("marking-agent-midtones-density-setting").setMaxAccess("readwrite")
if mibBuilder.loadTexts: marking_agent_midtones_density_setting.setStatus('optional')
marking_agent_shadows_density_setting = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 9, 4), Integer32()).setLabel("marking-agent-shadows-density-setting").setMaxAccess("readwrite")
if mibBuilder.loadTexts: marking_agent_shadows_density_setting.setStatus('optional')
autocleaning_page_frequency = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 11), Integer32()).setLabel("autocleaning-page-frequency").setMaxAccess("readwrite")
if mibBuilder.loadTexts: autocleaning_page_frequency.setStatus('optional')
autocleaning_page_size = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 26))).clone(namedValues=NamedValues(("eUSLetter", 2), ("eISOandJISA4", 26)))).setLabel("autocleaning-page-size").setMaxAccess("readwrite")
if mibBuilder.loadTexts: autocleaning_page_size.setStatus('optional')
finisher_image_rotation = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 31), OctetString()).setLabel("finisher-image-rotation").setMaxAccess("readwrite")
if mibBuilder.loadTexts: finisher_image_rotation.setStatus('optional')
total_color_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 7), Integer32()).setLabel("total-color-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: total_color_page_count.setStatus('optional')
duplex_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 22), Integer32()).setLabel("duplex-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: duplex_page_count.setStatus('optional')
print_engine_revision = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setLabel("print-engine-revision").setMaxAccess("readonly")
if mibBuilder.loadTexts: print_engine_revision.setStatus('optional')
printer_cal_dhalf_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 37, 1), Integer32()).setLabel("printer-cal-dhalf-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_cal_dhalf_page_count.setStatus('optional')
printer_cal_dhalf_utc = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 37, 2), Integer32()).setLabel("printer-cal-dhalf-utc").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_cal_dhalf_utc.setStatus('optional')
printer_cal_dhalf_data1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 37, 3, 1), OctetString()).setLabel("printer-cal-dhalf-data1").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_cal_dhalf_data1.setStatus('optional')
printer_cal_dhalf_data2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 37, 3, 2), OctetString()).setLabel("printer-cal-dhalf-data2").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_cal_dhalf_data2.setStatus('optional')
printer_cal_cpr_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 38, 1), Integer32()).setLabel("printer-cal-cpr-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_cal_cpr_page_count.setStatus('optional')
printer_cal_cpr_utc = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 38, 2), Integer32()).setLabel("printer-cal-cpr-utc").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_cal_cpr_utc.setStatus('optional')
printer_cal_cpr_data = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 38, 3), OctetString()).setLabel("printer-cal-cpr-data").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_cal_cpr_data.setStatus('optional')
input_tray_auto_select = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("input-tray-auto-select").setMaxAccess("readwrite")
if mibBuilder.loadTexts: input_tray_auto_select.setStatus('optional')
custom_paper_feed_dim = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 8), Integer32()).setLabel("custom-paper-feed-dim").setMaxAccess("readwrite")
if mibBuilder.loadTexts: custom_paper_feed_dim.setStatus('optional')
custom_paper_xfeed_dim = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 9), Integer32()).setLabel("custom-paper-xfeed-dim").setMaxAccess("readwrite")
if mibBuilder.loadTexts: custom_paper_xfeed_dim.setStatus('optional')
default_custom_paper_dim_unit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("eTenThousandthsOfInches", 3), ("eMicrometers", 4)))).setLabel("default-custom-paper-dim-unit").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_custom_paper_dim_unit.setStatus('optional')
default_custom_paper_feed_dim = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 11), Integer32()).setLabel("default-custom-paper-feed-dim").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_custom_paper_feed_dim.setStatus('optional')
default_custom_paper_xfeed_dim = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 12), Integer32()).setLabel("default-custom-paper-xfeed-dim").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_custom_paper_xfeed_dim.setStatus('optional')
input_tray_max_media_feed_dim = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 14), Integer32()).setLabel("input-tray-max-media-feed-dim").setMaxAccess("readonly")
if mibBuilder.loadTexts: input_tray_max_media_feed_dim.setStatus('optional')
input_tray_max_media_xfeed_dim = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 15), Integer32()).setLabel("input-tray-max-media-xfeed-dim").setMaxAccess("readonly")
if mibBuilder.loadTexts: input_tray_max_media_xfeed_dim.setStatus('optional')
input_tray_min_media_feed_dim = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 16), Integer32()).setLabel("input-tray-min-media-feed-dim").setMaxAccess("readonly")
if mibBuilder.loadTexts: input_tray_min_media_feed_dim.setStatus('optional')
input_tray_min_media_xfeed_dim = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 1, 17), Integer32()).setLabel("input-tray-min-media-xfeed-dim").setMaxAccess("readonly")
if mibBuilder.loadTexts: input_tray_min_media_xfeed_dim.setStatus('optional')
tray1_media_size_loaded = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 15, 17, 18, 25, 26, 45, 72, 80, 81, 90, 91, 100, 101, 32764, 32765))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eFoolscap", 10), ("eStatement", 15), ("eROC16K", 17), ("eJISExecutive", 18), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eJISB5", 45), ("eJapansePostcardDouble", 72), ("eMonarch", 80), ("eCommercial10", 81), ("eInternationalDL", 90), ("eInternationalC5", 91), ("eInternationalB5", 100), ("eCustom", 101), ("eAnyCustomSize", 32764), ("eAnySize", 32765)))).setLabel("tray1-media-size-loaded").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tray1_media_size_loaded.setStatus('optional')
tray1_phd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 1, 12), Integer32()).setLabel("tray1-phd").setMaxAccess("readonly")
if mibBuilder.loadTexts: tray1_phd.setStatus('optional')
tray2_media_size_loaded = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 17, 18, 25, 26, 45, 101, 32764, 32765))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eFoolscap", 10), ("eROC16K", 17), ("eJISExecutive", 18), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eJISB5", 45), ("eCustom", 101), ("eAnyCustomSize", 32764), ("eAnySize", 32765)))).setLabel("tray2-media-size-loaded").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tray2_media_size_loaded.setStatus('optional')
tray2_phd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 2, 12), Integer32()).setLabel("tray2-phd").setMaxAccess("readonly")
if mibBuilder.loadTexts: tray2_phd.setStatus('optional')
tray3_media_size_loaded = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 17, 18, 25, 26, 45, 101, 32764, 32765))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eFoolscap", 10), ("eROC16K", 17), ("eJISExecutive", 18), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eJISB5", 45), ("eCustom", 101), ("eAnyCustomSize", 32764), ("eAnySize", 32765)))).setLabel("tray3-media-size-loaded").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tray3_media_size_loaded.setStatus('optional')
tray3_phd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 3, 12), Integer32()).setLabel("tray3-phd").setMaxAccess("readonly")
if mibBuilder.loadTexts: tray3_phd.setStatus('optional')
tray5_media_size_loaded = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 17, 18, 25, 26, 45, 101, 32764, 32765))).clone(namedValues=NamedValues(("eUSExecutive", 1), ("eUSLetter", 2), ("eUSLegal", 3), ("eFoolscap", 10), ("eROC16K", 17), ("eJISExecutive", 18), ("eISOandJISA5", 25), ("eISOandJISA4", 26), ("eJISB5", 45), ("eCustom", 101), ("eAnyCustomSize", 32764), ("eAnySize", 32765)))).setLabel("tray5-media-size-loaded").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tray5_media_size_loaded.setStatus('optional')
tray5_phd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 3, 3, 5, 12), Integer32()).setLabel("tray5-phd").setMaxAccess("readonly")
if mibBuilder.loadTexts: tray5_phd.setStatus('optional')
overflow_bin = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 4, 1, 4), Integer32()).setLabel("overflow-bin").setMaxAccess("readwrite")
if mibBuilder.loadTexts: overflow_bin.setStatus('optional')
outbin1_override_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 4, 3, 1, 9), OctetString()).setLabel("outbin1-override-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: outbin1_override_mode.setStatus('optional')
marker_density_calibration = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("eNotCalibrating", 1), ("eCalibrateALL", 2), ("eCalibrateColor", 3), ("eCalibrateColorPlaneRegistration", 5), ("eCalibrateDrumPhaseAdjustment", 6), ("eCalibrateBlackOnly", 7)))).setLabel("marker-density-calibration").setMaxAccess("readwrite")
if mibBuilder.loadTexts: marker_density_calibration.setStatus('optional')
media_names_available = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 1, 1), OctetString()).setLabel("media-names-available").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media_names_available.setStatus('optional')
north_edge_offset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 1, 2), Integer32()).setLabel("north-edge-offset").setMaxAccess("readwrite")
if mibBuilder.loadTexts: north_edge_offset.setStatus('optional')
media1_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media1-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media1_name.setStatus('optional')
media1_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media1-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media1_short_name.setStatus('optional')
media1_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 1, 3), Integer32()).setLabel("media1-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media1_page_count.setStatus('optional')
media1_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 1, 4), Integer32()).setLabel("media1-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media1_engine_media_mode.setStatus('optional')
media2_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media2-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media2_name.setStatus('optional')
media2_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media2-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media2_short_name.setStatus('optional')
media2_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 2, 3), Integer32()).setLabel("media2-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media2_page_count.setStatus('optional')
media2_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 2, 4), Integer32()).setLabel("media2-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media2_engine_media_mode.setStatus('optional')
media3_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media3-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media3_name.setStatus('optional')
media3_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 3, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media3-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media3_short_name.setStatus('optional')
media3_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 3, 3), Integer32()).setLabel("media3-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media3_page_count.setStatus('optional')
media3_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 3, 4), Integer32()).setLabel("media3-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media3_engine_media_mode.setStatus('optional')
media4_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 4, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media4-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media4_name.setStatus('optional')
media4_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 4, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media4-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media4_short_name.setStatus('optional')
media4_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 4, 3), Integer32()).setLabel("media4-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media4_page_count.setStatus('optional')
media4_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 4, 4), Integer32()).setLabel("media4-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media4_engine_media_mode.setStatus('optional')
media5_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 5, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media5-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media5_name.setStatus('optional')
media5_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media5-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media5_short_name.setStatus('optional')
media5_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 5, 3), Integer32()).setLabel("media5-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media5_page_count.setStatus('optional')
media5_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 5, 4), Integer32()).setLabel("media5-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media5_engine_media_mode.setStatus('optional')
media6_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 6, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media6-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media6_name.setStatus('optional')
media6_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 6, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media6-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media6_short_name.setStatus('optional')
media6_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 6, 3), Integer32()).setLabel("media6-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media6_page_count.setStatus('optional')
media6_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 6, 4), Integer32()).setLabel("media6-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media6_engine_media_mode.setStatus('optional')
media7_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 7, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media7-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media7_name.setStatus('optional')
media7_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 7, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media7-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media7_short_name.setStatus('optional')
media7_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 7, 3), Integer32()).setLabel("media7-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media7_page_count.setStatus('optional')
media7_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 7, 4), Integer32()).setLabel("media7-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media7_engine_media_mode.setStatus('optional')
media8_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 8, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media8-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media8_name.setStatus('optional')
media8_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 8, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media8-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media8_short_name.setStatus('optional')
media8_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 8, 3), Integer32()).setLabel("media8-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media8_page_count.setStatus('optional')
media8_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 8, 4), Integer32()).setLabel("media8-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media8_engine_media_mode.setStatus('optional')
media9_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 9, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media9-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media9_name.setStatus('optional')
media9_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 9, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media9-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media9_short_name.setStatus('optional')
media9_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 9, 3), Integer32()).setLabel("media9-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media9_page_count.setStatus('optional')
media9_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 9, 4), Integer32()).setLabel("media9-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media9_engine_media_mode.setStatus('optional')
media10_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 10, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media10-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media10_name.setStatus('optional')
media10_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 10, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media10-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media10_short_name.setStatus('optional')
media10_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 10, 3), Integer32()).setLabel("media10-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media10_page_count.setStatus('optional')
media10_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 10, 4), Integer32()).setLabel("media10-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media10_engine_media_mode.setStatus('optional')
media11_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 11, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media11-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media11_name.setStatus('optional')
media11_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 11, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media11-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media11_short_name.setStatus('optional')
media11_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 11, 3), Integer32()).setLabel("media11-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media11_page_count.setStatus('optional')
media11_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 11, 4), Integer32()).setLabel("media11-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media11_engine_media_mode.setStatus('optional')
media12_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 12, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media12-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media12_name.setStatus('optional')
media12_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 12, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media12-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media12_short_name.setStatus('optional')
media12_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 12, 3), Integer32()).setLabel("media12-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media12_page_count.setStatus('optional')
media12_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 12, 4), Integer32()).setLabel("media12-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media12_engine_media_mode.setStatus('optional')
media13_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 13, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media13-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media13_name.setStatus('optional')
media13_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 13, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media13-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media13_short_name.setStatus('optional')
media13_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 13, 3), Integer32()).setLabel("media13-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media13_page_count.setStatus('optional')
media13_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 13, 4), Integer32()).setLabel("media13-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media13_engine_media_mode.setStatus('optional')
media14_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 14, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media14-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media14_name.setStatus('optional')
media14_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 14, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media14-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media14_short_name.setStatus('optional')
media14_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 14, 3), Integer32()).setLabel("media14-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media14_page_count.setStatus('optional')
media14_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 14, 4), Integer32()).setLabel("media14-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media14_engine_media_mode.setStatus('optional')
media15_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 15, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media15-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media15_name.setStatus('optional')
media15_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 15, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media15-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media15_short_name.setStatus('optional')
media15_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 15, 3), Integer32()).setLabel("media15-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media15_page_count.setStatus('optional')
media15_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 15, 4), Integer32()).setLabel("media15-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media15_engine_media_mode.setStatus('optional')
media16_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 16, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media16-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media16_name.setStatus('optional')
media16_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 16, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media16-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media16_short_name.setStatus('optional')
media16_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 16, 3), Integer32()).setLabel("media16-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media16_page_count.setStatus('optional')
media16_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 16, 4), Integer32()).setLabel("media16-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media16_engine_media_mode.setStatus('optional')
media17_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 17, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media17-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media17_name.setStatus('optional')
media17_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 17, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media17-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media17_short_name.setStatus('optional')
media17_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 17, 3), Integer32()).setLabel("media17-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media17_page_count.setStatus('optional')
media17_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 17, 4), Integer32()).setLabel("media17-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media17_engine_media_mode.setStatus('optional')
media18_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 18, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media18-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media18_name.setStatus('optional')
media18_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 18, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media18-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media18_short_name.setStatus('optional')
media18_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 18, 3), Integer32()).setLabel("media18-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media18_page_count.setStatus('optional')
media18_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 18, 4), Integer32()).setLabel("media18-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media18_engine_media_mode.setStatus('optional')
media19_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 19, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media19-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media19_name.setStatus('optional')
media19_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 19, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media19-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media19_short_name.setStatus('optional')
media19_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 19, 3), Integer32()).setLabel("media19-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media19_page_count.setStatus('optional')
media19_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 19, 4), Integer32()).setLabel("media19-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media19_engine_media_mode.setStatus('optional')
media20_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 20, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media20-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media20_name.setStatus('optional')
media20_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 20, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media20-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media20_short_name.setStatus('optional')
media20_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 20, 3), Integer32()).setLabel("media20-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media20_page_count.setStatus('optional')
media20_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 20, 4), Integer32()).setLabel("media20-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media20_engine_media_mode.setStatus('optional')
media21_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 21, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media21-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media21_name.setStatus('optional')
media21_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 21, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media21-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media21_short_name.setStatus('optional')
media21_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 21, 3), Integer32()).setLabel("media21-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media21_page_count.setStatus('optional')
media21_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 21, 4), Integer32()).setLabel("media21-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media21_engine_media_mode.setStatus('optional')
media22_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 22, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media22-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media22_name.setStatus('optional')
media22_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 22, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media22-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media22_short_name.setStatus('optional')
media22_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 22, 3), Integer32()).setLabel("media22-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media22_page_count.setStatus('optional')
media22_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 22, 4), Integer32()).setLabel("media22-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media22_engine_media_mode.setStatus('optional')
media23_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 23, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media23-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media23_name.setStatus('optional')
media23_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 23, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media23-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media23_short_name.setStatus('optional')
media23_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 23, 3), Integer32()).setLabel("media23-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media23_page_count.setStatus('optional')
media23_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 23, 4), Integer32()).setLabel("media23-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media23_engine_media_mode.setStatus('optional')
media24_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 24, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media24-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media24_name.setStatus('optional')
media24_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 24, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media24-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media24_short_name.setStatus('optional')
media24_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 24, 3), Integer32()).setLabel("media24-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media24_page_count.setStatus('optional')
media24_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 24, 4), Integer32()).setLabel("media24-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media24_engine_media_mode.setStatus('optional')
media25_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 25, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media25-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media25_name.setStatus('optional')
media25_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 25, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media25-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media25_short_name.setStatus('optional')
media25_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 25, 3), Integer32()).setLabel("media25-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media25_page_count.setStatus('optional')
media25_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 25, 4), Integer32()).setLabel("media25-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media25_engine_media_mode.setStatus('optional')
media26_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 26, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setLabel("media26-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media26_name.setStatus('optional')
media26_short_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 26, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 9))).setLabel("media26-short-name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media26_short_name.setStatus('optional')
media26_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 26, 3), Integer32()).setLabel("media26-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: media26_page_count.setStatus('optional')
media26_engine_media_mode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 3, 26, 4), Integer32()).setLabel("media26-engine-media-mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media26_engine_media_mode.setStatus('optional')
engine_media_modes_supported1 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 4, 1), OctetString()).setLabel("engine-media-modes-supported1").setMaxAccess("readonly")
if mibBuilder.loadTexts: engine_media_modes_supported1.setStatus('optional')
media_number_of_type_supported = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 8, 1), Integer32()).setLabel("media-number-of-type-supported").setMaxAccess("readonly")
if mibBuilder.loadTexts: media_number_of_type_supported.setStatus('optional')
non_assured_oht_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 7, 1), Integer32()).setLabel("non-assured-oht-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: non_assured_oht_page_count.setStatus('optional')
media_size_west_edge_first_side_offset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 5, 2), Integer32()).setLabel("media-size-west-edge-first-side-offset").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media_size_west_edge_first_side_offset.setStatus('optional')
media_size_west_edge_second_side_offset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 5, 3), Integer32()).setLabel("media-size-west-edge-second-side-offset").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media_size_west_edge_second_side_offset.setStatus('optional')
media_size_west_edge_side_offset_by_tray = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 8, 5, 4), Integer32()).setLabel("media-size-west-edge-side-offset-by-tray").setMaxAccess("readwrite")
if mibBuilder.loadTexts: media_size_west_edge_side_offset_by_tray.setStatus('optional')
color_supply_out_action = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eStop", 1), ("eAutoContinueBlack", 2)))).setLabel("color-supply-out-action").setMaxAccess("readwrite")
if mibBuilder.loadTexts: color_supply_out_action.setStatus('optional')
control_panel_supplies_status_message = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eShow", 1), ("eDontShow", 2)))).setLabel("control-panel-supplies-status-message").setMaxAccess("readwrite")
if mibBuilder.loadTexts: control_panel_supplies_status_message.setStatus('optional')
configurable_low_threshold_setting = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setLabel("configurable-low-threshold-setting").setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurable_low_threshold_setting.setStatus('optional')
supplies_replace_action_at_setting = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("eStopAtLow", 1), ("eStopAtOut", 2), ("eOverrideAtOut", 4)))).setLabel("supplies-replace-action-at-setting").setMaxAccess("readwrite")
if mibBuilder.loadTexts: supplies_replace_action_at_setting.setStatus('optional')
supply_out_user_configured_override_limit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setLabel("supply-out-user-configured-override-limit").setMaxAccess("readwrite")
if mibBuilder.loadTexts: supply_out_user_configured_override_limit.setStatus('optional')
cartridge_out_override_control = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 1, 27), Integer32()).setLabel("cartridge-out-override-control").setMaxAccess("writeonly")
if mibBuilder.loadTexts: cartridge_out_override_control.setStatus('optional')
supply_out_action_support = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 48), OctetString()).setLabel("supply-out-action-support").setMaxAccess("readonly")
if mibBuilder.loadTexts: supply_out_action_support.setStatus('optional')
supply_out_device_state = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("eNoSupplyOut", 1), ("eOffline", 2), ("eCartridgeOutOverride", 3), ("eMonochromePrintingAfterColorCartridgeOut", 4)))).setLabel("supply-out-device-state").setMaxAccess("readonly")
if mibBuilder.loadTexts: supply_out_device_state.setStatus('optional')
supply_after_out_state = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 2, 50), OctetString()).setLabel("supply-after-out-state").setMaxAccess("readonly")
if mibBuilder.loadTexts: supply_after_out_state.setStatus('optional')
consumable_status_formatter_color_page_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768))).setLabel("consumable-status-formatter-color-page-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: consumable_status_formatter_color_page_count.setStatus('optional')
consumable_status_page_count_out_while_cartridge_out_override_active = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 1, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("consumable-status-page-count-out-while-cartridge-out-override-active").setMaxAccess("readonly")
if mibBuilder.loadTexts: consumable_status_page_count_out_while_cartridge_out_override_active.setStatus('optional')
consumable_string_information = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 8, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 287))).setLabel("consumable-string-information").setMaxAccess("readwrite")
if mibBuilder.loadTexts: consumable_string_information.setStatus('optional')
consumable_string_information_reset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ePresetToNVRAM", 1)))).setLabel("consumable-string-information-reset").setMaxAccess("readwrite")
if mibBuilder.loadTexts: consumable_string_information_reset.setStatus('optional')
consumable_reorder_url = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setLabel("consumable-reorder-url").setMaxAccess("readwrite")
if mibBuilder.loadTexts: consumable_reorder_url.setStatus('optional')
consumable_current_state = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 7), OctetString()).setLabel("consumable-current-state").setMaxAccess("readonly")
if mibBuilder.loadTexts: consumable_current_state.setStatus('optional')
device_used_while_cartridge_out_override_active = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eNotUsed", 1), ("eUsed", 2)))).setLabel("device-used-while-cartridge-out-override-active").setMaxAccess("readonly")
if mibBuilder.loadTexts: device_used_while_cartridge_out_override_active.setStatus('optional')
consumable_notification_status = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 10), OctetString()).setLabel("consumable-notification-status").setMaxAccess("readwrite")
if mibBuilder.loadTexts: consumable_notification_status.setStatus('optional')
consumable_life_usage_units_remaining = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 5, 1, 1), Integer32()).setLabel("consumable-life-usage-units-remaining").setMaxAccess("readonly")
if mibBuilder.loadTexts: consumable_life_usage_units_remaining.setStatus('optional')
consumable_life_usage_units = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ePagesRemaining", 1), ("eEstimatedPagesRemaining", 2)))).setLabel("consumable-life-usage-units").setMaxAccess("readonly")
if mibBuilder.loadTexts: consumable_life_usage_units.setStatus('optional')
consumable_life_low_threshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 10, 5, 1, 3), Integer32()).setLabel("consumable-life-low-threshold").setMaxAccess("readonly")
if mibBuilder.loadTexts: consumable_life_low_threshold.setStatus('optional')
printer_average_marking_agent_units_per_gram = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 11, 1, 4), OctetString()).setLabel("printer-average-marking-agent-units-per-gram").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_average_marking_agent_units_per_gram.setStatus('optional')
printer_average_marking_agent_coverage_actual = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 11, 1, 5), OctetString()).setLabel("printer-average-marking-agent-coverage-actual").setMaxAccess("readonly")
if mibBuilder.loadTexts: printer_average_marking_agent_coverage_actual.setStatus('optional')
default_vertical_black_resolution = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 8), Integer32()).setLabel("default-vertical-black-resolution").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_vertical_black_resolution.setStatus('optional')
default_horizontal_black_resolution = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 9), Integer32()).setLabel("default-horizontal-black-resolution").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_horizontal_black_resolution.setStatus('optional')
default_page_protect = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("eOn", 2)))).setLabel("default-page-protect").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_page_protect.setStatus('optional')
default_bits_per_pixel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 3, 1, 39), Integer32()).setLabel("default-bits-per-pixel").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_bits_per_pixel.setStatus('optional')
default_ret = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 4, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("eOff", 1), ("eLight", 2), ("eMedium", 3), ("eDark", 4), ("eNotSet", 5)))).setLabel("default-ret").setMaxAccess("readwrite")
if mibBuilder.loadTexts: default_ret.setStatus('optional')
web_server_url = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setLabel("web-server-url").setMaxAccess("readwrite")
if mibBuilder.loadTexts: web_server_url.setStatus('optional')
web_server_security = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 3, 9, 1, 3), OctetString()).setLabel("web-server-security").setMaxAccess("readwrite")
if mibBuilder.loadTexts: web_server_security.setStatus('optional')
firmware_download_write_status_supported = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eFalse", 1), ("eTrue", 2)))).setLabel("firmware-download-write-status-supported").setMaxAccess("readonly")
if mibBuilder.loadTexts: firmware_download_write_status_supported.setStatus('optional')
firmware_download_write_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 18, 2), Integer32()).setLabel("firmware-download-write-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: firmware_download_write_time.setStatus('optional')
firmware_download_write_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 18, 3), Integer32()).setLabel("firmware-download-write-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: firmware_download_write_count.setStatus('optional')
firmware_download_current_state = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 18, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("eIdle", 1), ("eReceivingImage", 2), ("eReceivedImageError", 3), ("eVerifyingImage", 4), ("eVerifiedImageError", 5), ("eWritingImage", 6), ("eWritingImageError", 7), ("eDownloadComplete", 8), ("eOKtoShutDown", 9), ("eCancelDownload", 10), ("eShuttingDown", 11)))).setLabel("firmware-download-current-state").setMaxAccess("readwrite")
if mibBuilder.loadTexts: firmware_download_current_state.setStatus('optional')
firmware_download_maximum_write_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 18, 5), Integer32()).setLabel("firmware-download-maximum-write-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: firmware_download_maximum_write_count.setStatus('optional')
firmware_download_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 18, 6), OctetString()).setLabel("firmware-download-name").setMaxAccess("readonly")
if mibBuilder.loadTexts: firmware_download_name.setStatus('mandatory')
firmware_download_version = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 18, 7), OctetString()).setLabel("firmware-download-version").setMaxAccess("readonly")
if mibBuilder.loadTexts: firmware_download_version.setStatus('mandatory')
upgradable_devices_write_status_supported = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eFalse", 1), ("eTrue", 2)))).setLabel("upgradable-devices-write-status-supported").setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradable_devices_write_status_supported.setStatus('optional')
upgradable_devices_write_time = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20, 2), Integer32()).setLabel("upgradable-devices-write-time").setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradable_devices_write_time.setStatus('optional')
upgradable_devices_write_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20, 3), Integer32()).setLabel("upgradable-devices-write-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradable_devices_write_count.setStatus('optional')
upgradable_devices_current_state = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("eIdle", 1), ("eReceivedImage", 2), ("eReceivedImageError", 3), ("eVerifiedImage", 4), ("eVerifiedImageError", 5), ("eWritingImage", 6), ("eWritingImageError", 7), ("eUpgradeComplete", 8), ("eUpgradeSkipped", 9)))).setLabel("upgradable-devices-current-state").setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradable_devices_current_state.setStatus('optional')
upgradable_devices_max_write_count = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20, 5), Integer32()).setLabel("upgradable-devices-max-write-count").setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradable_devices_max_write_count.setStatus('optional')
upgradable_devices_name = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20, 6), OctetString()).setLabel("upgradable-devices-name").setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradable_devices_name.setStatus('mandatory')
upgradable_devices_version = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20, 7), OctetString()).setLabel("upgradable-devices-version").setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradable_devices_version.setStatus('mandatory')
remote_upgrade_enable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 9, 4, 2, 1, 1, 20, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eOff", 1), ("eOn", 2)))).setLabel("remote-upgrade-enable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: remote_upgrade_enable.setStatus('mandatory')
mibBuilder.exportSymbols("LJ4730-MIB", media8_page_count=media8_page_count, held_job_info=held_job_info, intray2=intray2, job_info_attr_9=job_info_attr_9, error31=error31, settings_prt_eng=settings_prt_eng, error24_date_time=error24_date_time, mio1=mio1, device_used_while_cartridge_out_override_active=device_used_while_cartridge_out_override_active, media2_page_count=media2_page_count, media14_name=media14_name, default_copier_pages_per_sheet=default_copier_pages_per_sheet, media13_short_name=media13_short_name, scanned_media_simplex_count=scanned_media_simplex_count, media4=media4, error5_code=error5_code, intray5=intray5, media14=media14, test=test, error33=error33, scanner_accessory_copy_job_scan_count=scanner_accessory_copy_job_scan_count, source_tray_usage_count=source_tray_usage_count, media3_engine_media_mode=media3_engine_media_mode, mass_storage_block_driver=mass_storage_block_driver, default_copies=default_copies, job_info_physical_outbins_used=job_info_physical_outbins_used, upgradable_devices_write_status_supported=upgradable_devices_write_status_supported, error46_date_time=error46_date_time, printed_media_simplex_charge=printed_media_simplex_charge, error33_time_stamp=error33_time_stamp, media17_name=media17_name, job_info_pages_in_original=job_info_pages_in_original, job_info_attr_10=job_info_attr_10, tray2_phd=tray2_phd, error13_code=error13_code, scanner_accessory_total_copy_pages_printed=scanner_accessory_total_copy_pages_printed, error44_time_stamp=error44_time_stamp, file_system2=file_system2, default_vertical_black_resolution=default_vertical_black_resolution, media3_page_count=media3_page_count, printer_cal_dhalf_page_count=printer_cal_dhalf_page_count, source_tray_usage=source_tray_usage, simm1_capacity=simm1_capacity, error38_code=error38_code, media5_name=media5_name, media1_engine_media_mode=media1_engine_media_mode, error9=error9, background_status_msg_line2_part1=background_status_msg_line2_part1, form_feed_needed=form_feed_needed, held_job_job_name=held_job_job_name, error18_time_stamp=error18_time_stamp, error20_time_stamp=error20_time_stamp, error17=error17, job_info_attr_14=job_info_attr_14, print_engine_revision=print_engine_revision, service_id=service_id, background_status_msg_line4_part1=background_status_msg_line4_part1, consumables_status=consumables_status, printer_cal_dhalf_data2=printer_cal_dhalf_data2, simm1_bank=simm1_bank, media21_engine_media_mode=media21_engine_media_mode, simm1_bank2=simm1_bank2, error13_date_time=error13_date_time, error37_code=error37_code, media20_page_count=media20_page_count, error43_date_time=error43_date_time, remote_procedure_call=remote_procedure_call, error40=error40, job_info_attr_13=job_info_attr_13, error37=error37, media13=media13, firmware_download=firmware_download, error8_code=error8_code, error37_date_time=error37_date_time, mio2_manufacturing_info=mio2_manufacturing_info, mio3_manufacturing_info=mio3_manufacturing_info, media11_engine_media_mode=media11_engine_media_mode, default_copier_image_type=default_copier_image_type, media19_engine_media_mode=media19_engine_media_mode, error28_date_time=error28_date_time, media19_name=media19_name, media14_engine_media_mode=media14_engine_media_mode, media4_engine_media_mode=media4_engine_media_mode, error29_date_time=error29_date_time, copier=copier, error12_time_stamp=error12_time_stamp, error50_code=error50_code, job_info_accounting_scanned_media_duplex_count=job_info_accounting_scanned_media_duplex_count, web_server=web_server, job_info_accounting_media_type=job_info_accounting_media_type, held_job_quantity=held_job_quantity, media16_short_name=media16_short_name, web_server_security=web_server_security, settings_pdl=settings_pdl, media3=media3, tray_disable_use_instead=tray_disable_use_instead, firmware_download_write_count=firmware_download_write_count, scanner_accessory_adf_two_sided_sheet_count=scanner_accessory_adf_two_sided_sheet_count, error29=error29, error30_date_time=error30_date_time, error42_time_stamp=error42_time_stamp, media14_page_count=media14_page_count, settings_outbin=settings_outbin, media13_engine_media_mode=media13_engine_media_mode, custom_paper_xfeed_dim=custom_paper_xfeed_dim, simm1=simm1, simm1_bank1_capacity=simm1_bank1_capacity, mass_storage_resources=mass_storage_resources, upgradable_devices_name=upgradable_devices_name, error3_code=error3_code, error23_code=error23_code, media10_engine_media_mode=media10_engine_media_mode, media20=media20, accounting=accounting, destination_bin_usage=destination_bin_usage, error19_date_time=error19_date_time, simm1_bank1_type=simm1_bank1_type, job_info_page_count_current_original=job_info_page_count_current_original, mio=mio, job_info_name1=job_info_name1, error32=error32, error14=error14, error10_date_time=error10_date_time, tray2_media_size_loaded=tray2_media_size_loaded, job_info_accounting_job_type=job_info_accounting_job_type, media17_engine_media_mode=media17_engine_media_mode, media20_short_name=media20_short_name, consumable_status_formatter_color_page_count=consumable_status_formatter_color_page_count, scan_sharpening_coefficient=scan_sharpening_coefficient, copy_job_hold_time=copy_job_hold_time, operating_system=operating_system, error16_code=error16_code, scanned_media_duplex_count=scanned_media_duplex_count, media9=media9, job_info_accounting_media_duplex_count=job_info_accounting_media_duplex_count, tray3_phd=tray3_phd, device_configure_printer_parameters=device_configure_printer_parameters, default_staple_mode=default_staple_mode, file_system3_initialize_volume=file_system3_initialize_volume, tray_prompt=tray_prompt, settings_job=settings_job, error17_date_time=error17_date_time, device_name=device_name, error49_date_time=error49_date_time, port1_parallel_bidirectionality=port1_parallel_bidirectionality, media1=media1, intray=intray, printer_cal_dhalf_utc=printer_cal_dhalf_utc, error46=error46, media5_short_name=media5_short_name, media_size=media_size, default_copy_input_tray=default_copy_input_tray, job_info_attr_16=job_info_attr_16, install_date=install_date, fw_rom_revision=fw_rom_revision, settings_ph=settings_ph, media15=media15, mio1_manufacturing_info=mio1_manufacturing_info, supply_out_device_state=supply_out_device_state, perm_store_init_occurred=perm_store_init_occurred, error38_time_stamp=error38_time_stamp, simm1_bank2_type=simm1_bank2_type, error4_time_stamp=error4_time_stamp, media5_page_count=media5_page_count, printed_media_combined_total=printed_media_combined_total, intrays=intrays, printer_calibration_dhalf=printer_calibration_dhalf, collated_originals_support=collated_originals_support, default_copy_reset_timeout=default_copy_reset_timeout, error25_code=error25_code, clearable_warning=clearable_warning, error21_code=error21_code, default_page_protect=default_page_protect, media12_name=media12_name, media17_short_name=media17_short_name, error45=error45, printed_media_duplex_charge=printed_media_duplex_charge, error11_date_time=error11_date_time, scanned_media_total_charge=scanned_media_total_charge, mio1_type=mio1_type, error27=error27, media18_page_count=media18_page_count, printed_modes_total_count=printed_modes_total_count, error11=error11, error14_date_time=error14_date_time, error50_time_stamp=error50_time_stamp, file_system_max_open_files=file_system_max_open_files, north_edge_offset=north_edge_offset, scanned_media_duplex_charge=scanned_media_duplex_charge, usage_instructions_line3=usage_instructions_line3, error5_time_stamp=error5_time_stamp, settings_spooler=settings_spooler, default_copy_duplex_mode=default_copy_duplex_mode, media_types=media_types, held_job_print=held_job_print, device_location=device_location, job_being_parsed=job_being_parsed, scanner_accessory_digital_send_home_screen_status=scanner_accessory_digital_send_home_screen_status, error37_time_stamp=error37_time_stamp, job_info_printed_originals=job_info_printed_originals, default_authentication_timeout=default_authentication_timeout, simm1_bank2_capacity=simm1_bank2_capacity, media6_name=media6_name, media25_engine_media_mode=media25_engine_media_mode, error25=error25, error38=error38, error47=error47, pdl_postscript=pdl_postscript, media25_page_count=media25_page_count, error20=error20, non_assured_oht_page_count=non_assured_oht_page_count, firmware_download_name=firmware_download_name, printed_modes_usage_total=printed_modes_usage_total, asset_number=asset_number, destination_bin_usage_count=destination_bin_usage_count, printer_average_marking_agent_coverage_sum_squared=printer_average_marking_agent_coverage_sum_squared, error41_time_stamp=error41_time_stamp, error7=error7, printed_media_color_simplex_count=printed_media_color_simplex_count, usage_printer_color_total_charge=usage_printer_color_total_charge, error9_date_time=error9_date_time, autocleaning_page_frequency=autocleaning_page_frequency, media8=media8, media1_name=media1_name, hold_job_timeout=hold_job_timeout, job_info_size=job_info_size, mio3_model_name=mio3_model_name, active_print_jobs=active_print_jobs, media17_page_count=media17_page_count, media6=media6, default_ret=default_ret, media23=media23, marking_agent_highlights_density_setting=marking_agent_highlights_density_setting, media15_page_count=media15_page_count, error26_date_time=error26_date_time, media20_name=media20_name, media7=media7, error9_code=error9_code, postscript_print_errors=postscript_print_errors, error35_code=error35_code, media_size_west_edge_second_side_offset=media_size_west_edge_second_side_offset, held_job_enable=held_job_enable, upgradable_devices=upgradable_devices, printed_modes_accounting=printed_modes_accounting, printer_cal_cpr_utc=printer_cal_cpr_utc, error45_date_time=error45_date_time, pcl_default_font_height=pcl_default_font_height, date_display=date_display, default_copy_job_chromaticity=default_copy_job_chromaticity, error30_time_stamp=error30_time_stamp, auto_send_reset=auto_send_reset, media22=media22, printer_cal_cpr_page_count=printer_cal_cpr_page_count, io=io)
mibBuilder.exportSymbols("LJ4730-MIB", media24=media24, simm2_type=simm2_type, job_info_outcome=job_info_outcome, os_execute_file=os_execute_file, error15_time_stamp=error15_time_stamp, error40_date_time=error40_date_time, media5=media5, error27_code=error27_code, error26=error26, device_configure=device_configure, media2_engine_media_mode=media2_engine_media_mode, printer_calibration_cpr=printer_calibration_cpr, error47_code=error47_code, status_system=status_system, color_supply_out_action=color_supply_out_action, copier_job_border_setting=copier_job_border_setting, error36_code=error36_code, error48_date_time=error48_date_time, settings_io=settings_io, outbin=outbin, direct_connect_ports_enable=direct_connect_ports_enable, error8=error8, energy_star=energy_star, error28=error28, date_and_time=date_and_time, simm2=simm2, marking_agent_density=marking_agent_density, error7_code=error7_code, simm2_bank1_capacity=simm2_bank1_capacity, duplex_blank_pages=duplex_blank_pages, engine_parameter=engine_parameter, held_job_set_queue_size=held_job_set_queue_size, error36=error36, simm2_bank2=simm2_bank2, status_pdl=status_pdl, media19=media19, upgradable_devices_write_time=upgradable_devices_write_time, media13_name=media13_name, default_audible_feedback=default_audible_feedback, firmware_download_write_time=firmware_download_write_time, pcl_default_font_number=pcl_default_font_number, error18=error18, media2_short_name=media2_short_name, remote_upgrade_enable=remote_upgrade_enable, error32_code=error32_code, channel=channel, control_panel_supplies_status_message=control_panel_supplies_status_message, usage_printer_total_charge=usage_printer_total_charge, outbins=outbins, error12=error12, menus=menus, consumables=consumables, media_info=media_info, error17_code=error17_code, default_scan_background_removal=default_scan_background_removal, media8_engine_media_mode=media8_engine_media_mode, rpc_bind_protocol_address=rpc_bind_protocol_address, media2_name=media2_name, ports=ports, job_info_attr_4=job_info_attr_4, error14_time_stamp=error14_time_stamp, media12_engine_media_mode=media12_engine_media_mode, job_info_io_source=job_info_io_source, error34_code=error34_code, control_panel_key_press=control_panel_key_press, error10_code=error10_code, media26_engine_media_mode=media26_engine_media_mode, media16_engine_media_mode=media16_engine_media_mode, override_media_name=override_media_name, supply_after_out_state=supply_after_out_state, error5_date_time=error5_date_time, fw_rom_datecode=fw_rom_datecode, error13_time_stamp=error13_time_stamp, default_scan_original_size=default_scan_original_size, media18_engine_media_mode=media18_engine_media_mode, default_custom_paper_dim_unit=default_custom_paper_dim_unit, media19_short_name=media19_short_name, error49=error49, job_info_accounting_scanned_media_simplex_count=job_info_accounting_scanned_media_simplex_count, firmware_download_write_status_supported=firmware_download_write_status_supported, error39=error39, copy_job_hold_off_print_jobs=copy_job_hold_off_print_jobs, control_panel_display_contents_change_counter=control_panel_display_contents_change_counter, mono_color_switching_mode=mono_color_switching_mode, background_status_msg_line1_part1=background_status_msg_line1_part1, ram_disk_mode=ram_disk_mode, error14_code=error14_code, job_info_accounting_yellow_dots=job_info_accounting_yellow_dots, error45_time_stamp=error45_time_stamp, media_size_west_edge_first_side_offset=media_size_west_edge_first_side_offset, duplex_page_count=duplex_page_count, error46_time_stamp=error46_time_stamp, error30=error30, localization_languages_supported=localization_languages_supported, outbin1_override_mode=outbin1_override_mode, media13_page_count=media13_page_count, default_horizontal_black_resolution=default_horizontal_black_resolution, source_tray_accounting=source_tray_accounting, fax_job_scan_count=fax_job_scan_count, file_system_delete_files=file_system_delete_files, media7_page_count=media7_page_count, printer_average_marking_agent_units_per_gram=printer_average_marking_agent_units_per_gram, media_names_available=media_names_available, media24_short_name=media24_short_name, io_switch=io_switch, error42=error42, media16_page_count=media16_page_count, printer_average_marking_agent_coverage_actual=printer_average_marking_agent_coverage_actual, print_engine=print_engine, error41_date_time=error41_date_time, error43=error43, simm2_bank=simm2_bank, default_copier_page_borders=default_copier_page_borders, consumable_string_information_reset=consumable_string_information_reset, media24_engine_media_mode=media24_engine_media_mode, scanner=scanner, media25_name=media25_name, error40_code=error40_code, media12_short_name=media12_short_name, media12_page_count=media12_page_count, job_info_attr_15=job_info_attr_15, copier_media_type=copier_media_type, file_system_erase_mode=file_system_erase_mode, media7_short_name=media7_short_name, scanner_accessory_digital_send_config_fax_embedded=scanner_accessory_digital_send_config_fax_embedded, media26_name=media26_name, error2=error2, marking_agent_shadows_density_setting=marking_agent_shadows_density_setting, printed_media_maximum_pixels_per_page=printed_media_maximum_pixels_per_page, intray1=intray1, marking_agent_midtones_density_setting=marking_agent_midtones_density_setting, media14_short_name=media14_short_name, media10=media10, error23=error23, error11_time_stamp=error11_time_stamp, default_lines_per_page=default_lines_per_page, file_system_set_system_partition_writeable=file_system_set_system_partition_writeable, file_system_set_system_partition_readonly=file_system_set_system_partition_readonly, print_media=print_media, error_log_clear=error_log_clear, media12=media12, override_media_size=override_media_size, file_system3=file_system3, copy_job_interrupt_copy_jobs=copy_job_interrupt_copy_jobs, printer_cal_dhalf_data=printer_cal_dhalf_data, default_scan_text_graphics_mix=default_scan_text_graphics_mix, default_copier_flip_pages_up=default_copier_flip_pages_up, error16_time_stamp=error16_time_stamp, printer_average_marking_agent_coverage_sum=printer_average_marking_agent_coverage_sum, job_info_change_id=job_info_change_id, error44=error44, job_info_accounting_finishing_options=job_info_accounting_finishing_options, model_name=model_name, media9_engine_media_mode=media9_engine_media_mode, media23_page_count=media23_page_count, error16=error16, media11_short_name=media11_short_name, error26_code=error26_code, error12_code=error12_code, finisher_image_rotation=finisher_image_rotation, DisplayString=DisplayString, input_tray_max_media_xfeed_dim=input_tray_max_media_xfeed_dim, serial_number=serial_number, mio3_type=mio3_type, engine_media_modes_supported1=engine_media_modes_supported1, io_timeout=io_timeout, error24=error24, error21=error21, input_tray_min_media_feed_dim=input_tray_min_media_feed_dim, file_system4=file_system4, job_info=job_info, job_info_attr_6=job_info_attr_6, simm=simm, job_input_auto_continue_timeout=job_input_auto_continue_timeout, default_custom_paper_feed_dim=default_custom_paper_feed_dim, firmware_download_version=firmware_download_version, error41=error41, scanner_accounting=scanner_accounting, cold_reset_media_size=cold_reset_media_size, media23_name=media23_name, destination_bin_usage_total=destination_bin_usage_total, file_systems=file_systems, error12_date_time=error12_date_time, marker_density_calibration=marker_density_calibration, mass_storage_resource_changed=mass_storage_resource_changed, settings_web_server=settings_web_server, total_color_page_count=total_color_page_count, error7_time_stamp=error7_time_stamp, time_display=time_display, port1=port1, error27_time_stamp=error27_time_stamp, autocleaning_page_size=autocleaning_page_size, media11_page_count=media11_page_count, media4_page_count=media4_page_count, error23_time_stamp=error23_time_stamp, error25_time_stamp=error25_time_stamp, file_system4_initialize_volume=file_system4_initialize_volume, input_tray_auto_select=input_tray_auto_select, media7_name=media7_name, printed_modes_usage=printed_modes_usage, default_bits_per_pixel=default_bits_per_pixel, media22_short_name=media22_short_name, media20_engine_media_mode=media20_engine_media_mode, scanner_accessory_digital_send_module_url=scanner_accessory_digital_send_module_url, media25_short_name=media25_short_name, background_message1=background_message1, usage_instructions_line4=usage_instructions_line4, error24_time_stamp=error24_time_stamp, mass_storage_resource_change_counter=mass_storage_resource_change_counter, error47_time_stamp=error47_time_stamp, printed_media_color_usage=printed_media_color_usage, error22=error22, status_scanner=status_scanner, error8_date_time=error8_date_time, error3=error3, input_tray_max_media_feed_dim=input_tray_max_media_feed_dim, status_mass_storage_bd=status_mass_storage_bd, error31_time_stamp=error31_time_stamp, error41_code=error41_code, error10=error10, job_info_attribute=job_info_attribute, error22_code=error22_code, error3_time_stamp=error3_time_stamp, control_panel_button_press=control_panel_button_press, printed_media_color_dimplex_count=printed_media_color_dimplex_count, job_info_accounting_cyan_dots=job_info_accounting_cyan_dots, input_tray_min_media_xfeed_dim=input_tray_min_media_xfeed_dim, settings_scanner=settings_scanner, model_number=model_number, error21_date_time=error21_date_time, simm1_type=simm1_type, cancel_job=cancel_job, error44_date_time=error44_date_time, job_info_pages_processed=job_info_pages_processed, media6_short_name=media6_short_name, tray3_media_size_loaded=tray3_media_size_loaded, source_subsystem=source_subsystem, media_modes=media_modes, usage_instructions_line1=usage_instructions_line1, media21_short_name=media21_short_name, pjl=pjl, tray5_phd=tray5_phd, destination_bin_accounting=destination_bin_accounting, error46_code=error46_code, mopy_mode=mopy_mode, error2_time_stamp=error2_time_stamp, default_copy_output_bin=default_copy_output_bin, error50_date_time=error50_date_time, error7_date_time=error7_date_time, job_info_accounting_grayscale_impression_count=job_info_accounting_grayscale_impression_count, media22_engine_media_mode=media22_engine_media_mode, source_tray_usage_total=source_tray_usage_total, on_off_line=on_off_line, control_panel_display_graphical_contents=control_panel_display_graphical_contents)
mibBuilder.exportSymbols("LJ4730-MIB", printed_media_duplex_count=printed_media_duplex_count, job_info_accounting_black_dots=job_info_accounting_black_dots, job_input_auto_continue_mode=job_input_auto_continue_mode, rpc_bound_protocol_address=rpc_bound_protocol_address, held_job_pin=held_job_pin, media21_page_count=media21_page_count, background_message=background_message, job_info_stage=job_info_stage, mio3=mio3, consumable_reorder_url=consumable_reorder_url, error35=error35, error36_time_stamp=error36_time_stamp, scan_calibration_error=scan_calibration_error, cartridge_out_override_control=cartridge_out_override_control, job_info_state=job_info_state, error30_code=error30_code, custom_paper_feed_dim=custom_paper_feed_dim, error42_code=error42_code, simm2_bank2_type=simm2_bank2_type, error21_time_stamp=error21_time_stamp, simm2_bank2_capacity=simm2_bank2_capacity, default_copier_media_size=default_copier_media_size, job_info_attr_8=job_info_attr_8, usage_scanner_total_charge=usage_scanner_total_charge, job_info_attr_7=job_info_attr_7, usage_average_toner_coverage=usage_average_toner_coverage, job_info_pages_printed=job_info_pages_printed, error19_time_stamp=error19_time_stamp, postscript_defer_media=postscript_defer_media, media3_short_name=media3_short_name, media1_short_name=media1_short_name, error25_date_time=error25_date_time, error22_time_stamp=error22_time_stamp, error20_date_time=error20_date_time, upgradable_devices_max_write_count=upgradable_devices_max_write_count, printed_modes_color_count=printed_modes_color_count, first_copy_speed=first_copy_speed, error45_code=error45_code, held_job_control=held_job_control, error1=error1, error2_date_time=error2_date_time, printer_average_marking_agent_coverage=printer_average_marking_agent_coverage, error16_date_time=error16_date_time, error4_code=error4_code, error39_date_time=error39_date_time, media10_name=media10_name, media11=media11, error34_date_time=error34_date_time, job_info_requested_originals=job_info_requested_originals, error34_time_stamp=error34_time_stamp, settings_print_media=settings_print_media, default_copier_quantity=default_copier_quantity, tray1_phd=tray1_phd, error29_time_stamp=error29_time_stamp, consumables_1=consumables_1, outbin1=outbin1, default_media_size=default_media_size, media15_short_name=media15_short_name, error13=error13, error20_code=error20_code, error4_date_time=error4_date_time, control_panel_display=control_panel_display, consumable_notification_status=consumable_notification_status, media21_name=media21_name, tray1_media_size_loaded=tray1_media_size_loaded, copy_job_auto_interrupt=copy_job_auto_interrupt, media26_page_count=media26_page_count, background_message3=background_message3, error40_time_stamp=error40_time_stamp, media9_short_name=media9_short_name, held_job_delete=held_job_delete, pml=pml, mio2=mio2, file_system=file_system, sleep_mode=sleep_mode, default_scan_content_orientation=default_scan_content_orientation, pdl=pdl, error1_code=error1_code, file_system_wipe_disk_status=file_system_wipe_disk_status, media15_engine_media_mode=media15_engine_media_mode, firmware_download_maximum_write_count=firmware_download_maximum_write_count, default_mfp_color_space=default_mfp_color_space, printer_cal_cpr_data=printer_cal_cpr_data, settings_rpc=settings_rpc, job_info_attr_12=job_info_attr_12, error17_time_stamp=error17_time_stamp, error39_time_stamp=error39_time_stamp, mio2_model_name=mio2_model_name, media18_short_name=media18_short_name, simm1_bank1=simm1_bank1, media1_page_count=media1_page_count, mio1_model_name=mio1_model_name, webserver_proc_sub=webserver_proc_sub, error15_code=error15_code, default_scanner_speed=default_scanner_speed, settings_webserver=settings_webserver, socket_ping=socket_ping, marking_agent=marking_agent, scanner_accessory_digital_send_config_ldap_gateway=scanner_accessory_digital_send_config_ldap_gateway, job_info_attr_3=job_info_attr_3, postscript_total_page_count=postscript_total_page_count, pcl_default_font_width=pcl_default_font_width, error50=error50, configurable_low_threshold_setting=configurable_low_threshold_setting, supply_out_user_configured_override_limit=supply_out_user_configured_override_limit, consumable_string=consumable_string, printed_media_dimplex_count=printed_media_dimplex_count, job_output_auto_continue_timeout=job_output_auto_continue_timeout, consumable_life_usage_units=consumable_life_usage_units, error19=error19, ram_disk_size=ram_disk_size, error15=error15, resource_manager=resource_manager, status_prt_eng=status_prt_eng, tray5_media_size_loaded=tray5_media_size_loaded, printed_media_color_total_count=printed_media_color_total_count, default_scan_job_mode=default_scan_job_mode, scan_calibration_download=scan_calibration_download, tables=tables, media10_short_name=media10_short_name, printed_media_color_duplex_count=printed_media_color_duplex_count, usage_printer_mono_total_charge=usage_printer_mono_total_charge, settings_marking_agent=settings_marking_agent, id=id, printed_media_usage=printed_media_usage, default_reset_send_timeout=default_reset_send_timeout, scanned_media_usage=scanned_media_usage, upgradable_devices_write_count=upgradable_devices_write_count, error2_code=error2_code, upgradable_devices_version=upgradable_devices_version, netPMLmgmt=netPMLmgmt, media15_name=media15_name, error32_time_stamp=error32_time_stamp, scanner_accessory_digital_send_status=scanner_accessory_digital_send_status, media4_short_name=media4_short_name, media7_engine_media_mode=media7_engine_media_mode, media24_page_count=media24_page_count, consumable_life_low_threshold=consumable_life_low_threshold, media_size_count=media_size_count, error9_time_stamp=error9_time_stamp, job_info_accounting_media_simplex_count=job_info_accounting_media_simplex_count, media9_page_count=media9_page_count, pcl_total_page_count=pcl_total_page_count, printed_media_simplex_count=printed_media_simplex_count, default_vmi=default_vmi, scanner_accessory_flatbed_scan_count=scanner_accessory_flatbed_scan_count, supply_out_action_support=supply_out_action_support, printer_color_accounting=printer_color_accounting, color_copy_enabled=color_copy_enabled, job_info_accounting_magenta_dots=job_info_accounting_magenta_dots, mio2_type=mio2_type, error48_code=error48_code, job_info_accounting_media_size=job_info_accounting_media_size, media19_page_count=media19_page_count, error48=error48, consumable_status_page_count_out_while_cartridge_out_override_active=consumable_status_page_count_out_while_cartridge_out_override_active, error6_code=error6_code, error34=error34, scanned_media_simplex_charge=scanned_media_simplex_charge, interface=interface, scanner_accessory_digital_send_log_event_counter=scanner_accessory_digital_send_log_event_counter, error49_code=error49_code, settings_system=settings_system, job_info_accounting=job_info_accounting, error29_code=error29_code, media6_page_count=media6_page_count, printed_media_total_charge=printed_media_total_charge, ews_request_control_panel_supplies_status=ews_request_control_panel_supplies_status, default_media_name=default_media_name, media2=media2, default_copier_contrast=default_copier_contrast, background_message4=background_message4, job_info_outbins_used=job_info_outbins_used, device_system=device_system, printer_accounting=printer_accounting, file_system_wipe_disk=file_system_wipe_disk, supplies_replace_action_at_setting=supplies_replace_action_at_setting, processing_subsystem=processing_subsystem, control_panel_display_contents_crc=control_panel_display_contents_crc, upgradable_devices_current_state=upgradable_devices_current_state, error10_time_stamp=error10_time_stamp, error26_time_stamp=error26_time_stamp, port1_parallel_speed=port1_parallel_speed, error6_date_time=error6_date_time, file_system_external_access_capabilities=file_system_external_access_capabilities, maximum_ram_disk_memory=maximum_ram_disk_memory, media16=media16, media16_name=media16_name, display_status=display_status, media26=media26, media6_engine_media_mode=media6_engine_media_mode, consumable_string_information=consumable_string_information, error18_date_time=error18_date_time, job_info_attr_5=job_info_attr_5, current_job_parsing_id=current_job_parsing_id, host_application_available_memory=host_application_available_memory, settings_mass_storage_bd=settings_mass_storage_bd, web_server_url=web_server_url, job_info_attr_2=job_info_attr_2, media18_name=media18_name, destination_subsystem=destination_subsystem, print_meter=print_meter, printer_average=printer_average, channelprinteralert=channelprinteralert, media10_page_count=media10_page_count, media8_name=media8_name, ph=ph, error15_date_time=error15_date_time, simm2_bank1_type=simm2_bank1_type, consumable_current_state=consumable_current_state, default_custom_paper_xfeed_dim=default_custom_paper_xfeed_dim, printer_cal_dhalf_data1=printer_cal_dhalf_data1, error1_time_stamp=error1_time_stamp, job_info_accounting_color_impression_count=job_info_accounting_color_impression_count, consumable_life_usage_units_remaining=consumable_life_usage_units_remaining, media3_name=media3_name, error28_code=error28_code, form_feed=form_feed, job_info_attr_11=job_info_attr_11, show_address=show_address, error4=error4, usage_staple_count=usage_staple_count, error42_date_time=error42_date_time, media_counts=media_counts, error44_code=error44_code, error24_code=error24_code, spooler=spooler, media18=media18, error6=error6, error33_date_time=error33_date_time, error3_date_time=error3_date_time, errorlog=errorlog, media4_name=media4_name, media_number_of_type_supported=media_number_of_type_supported, firmware_download_current_state=firmware_download_current_state, error11_code=error11_code, settings_copier=settings_copier, not_ready_source_scanner=not_ready_source_scanner, status_rpc=status_rpc, error35_date_time=error35_date_time, pcl_default_font_source=pcl_default_font_source, hp=hp, scanner_accessory_digital_send_config_email_gateway=scanner_accessory_digital_send_config_email_gateway, error35_time_stamp=error35_time_stamp, error22_date_time=error22_date_time, error39_code=error39_code, intray3=intray3, copy_job_scan_ahead=copy_job_scan_ahead, media_size_west_edge_side_offset_by_tray=media_size_west_edge_side_offset_by_tray, pdl_pcl=pdl_pcl, media23_short_name=media23_short_name, job=job, media24_name=media24_name, settings_intray=settings_intray)
mibBuilder.exportSymbols("LJ4730-MIB", error6_time_stamp=error6_time_stamp, error48_time_stamp=error48_time_stamp, background_status_msg_higher_priority=background_status_msg_higher_priority, scanner_accessory_send_job_scan_count=scanner_accessory_send_job_scan_count, error43_time_stamp=error43_time_stamp, engine_self_diagnostic=engine_self_diagnostic, error31_code=error31_code, simm2_capacity=simm2_capacity, file_system2_initialize_volume=file_system2_initialize_volume, error43_code=error43_code, formatter_serial_number=formatter_serial_number, socket_ping_job_events_version=socket_ping_job_events_version, media9_name=media9_name, settings_file_system=settings_file_system, error19_code=error19_code, display=display, pysmi_continue=pysmi_continue, scanner_accessory_adf_one_sided_sheet_count=scanner_accessory_adf_one_sided_sheet_count, held_job=held_job, error38_date_time=error38_date_time, auto_continue=auto_continue, error27_date_time=error27_date_time, scan_to_folder_count=scan_to_folder_count, consumable_status=consumable_status, consumables_life=consumables_life, media17=media17, default_copier_edge_to_edge=default_copier_edge_to_edge, media11_name=media11_name, scanner_accessory_adf_sheet_count=scanner_accessory_adf_sheet_count, error32_date_time=error32_date_time, reprint=reprint, error23_date_time=error23_date_time, media5_engine_media_mode=media5_engine_media_mode, error31_date_time=error31_date_time, media26_short_name=media26_short_name, error47_date_time=error47_date_time, error18_code=error18_code, simm2_bank1=simm2_bank1, media25=media25, error49_time_stamp=error49_time_stamp, media8_short_name=media8_short_name, device=device, job_info_name2=job_info_name2, localization_countries_supported=localization_countries_supported, error5=error5, imaging=imaging, background_message2=background_message2, error28_time_stamp=error28_time_stamp, media22_page_count=media22_page_count, default_copier_collate=default_copier_collate, job_info_attr_1=job_info_attr_1, held_job_retention=held_job_retention, error8_time_stamp=error8_time_stamp, held_job_security=held_job_security, printed_modes_mono_count=printed_modes_mono_count, default_scan_image_quality=default_scan_image_quality, media21=media21, held_job_user_name=held_job_user_name, scanner_accessory_digital_send_config_dsm_enabled_fax=scanner_accessory_digital_send_config_dsm_enabled_fax, error1_date_time=error1_date_time, media23_engine_media_mode=media23_engine_media_mode, overflow_bin=overflow_bin, background_status_msg_line3_part1=background_status_msg_line3_part1, usage_instructions_line2=usage_instructions_line2, error36_date_time=error36_date_time, media22_name=media22_name, error33_code=error33_code)
