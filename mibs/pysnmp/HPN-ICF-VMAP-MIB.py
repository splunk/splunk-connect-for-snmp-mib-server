#
# PySNMP MIB module HPN-ICF-VMAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-VMAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:29:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, Counter32, Integer32, IpAddress, ModuleIdentity, NotificationType, Bits, Unsigned32, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "Counter32", "Integer32", "IpAddress", "ModuleIdentity", "NotificationType", "Bits", "Unsigned32", "TimeTicks", "Counter64")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
hpnicfVmap = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138))
hpnicfVmap.setRevisions(('2013-03-08 00:00',))
if mibBuilder.loadTexts: hpnicfVmap.setLastUpdated('201303080000Z')
if mibBuilder.loadTexts: hpnicfVmap.setOrganization('')
hpnicfVMAPNNITable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 1), )
if mibBuilder.loadTexts: hpnicfVMAPNNITable.setStatus('current')
hpnicfVMAPNNIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfVMAPNNIEntry.setStatus('current')
hpnicfVMAPNNIState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVMAPNNIState.setStatus('current')
hpnicfVMAP1to1Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 2), )
if mibBuilder.loadTexts: hpnicfVMAP1to1Table.setStatus('current')
hpnicfVMAP1to1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VMAP-MIB", "hpnicfVMAP1to1Vlan"))
if mibBuilder.loadTexts: hpnicfVMAP1to1Entry.setStatus('current')
hpnicfVMAP1to1Vlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfVMAP1to1Vlan.setStatus('current')
hpnicfVMAP1to1TranslatedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP1to1TranslatedVlan.setStatus('current')
hpnicfVMAP1to1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP1to1RowStatus.setStatus('current')
hpnicfVMAPNto1RangeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 3), )
if mibBuilder.loadTexts: hpnicfVMAPNto1RangeTable.setStatus('current')
hpnicfVMAPNto1RangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VMAP-MIB", "hpnicfVMAPNto1StartVlan"))
if mibBuilder.loadTexts: hpnicfVMAPNto1RangeEntry.setStatus('current')
hpnicfVMAPNto1StartVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfVMAPNto1StartVlan.setStatus('current')
hpnicfVMAPNto1EndVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAPNto1EndVlan.setStatus('current')
hpnicfVMAPNto1RangeTranslatedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAPNto1RangeTranslatedVlan.setStatus('current')
hpnicfVMAPNto1RangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAPNto1RangeRowStatus.setStatus('current')
hpnicfVMAPNto1SingleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 4), )
if mibBuilder.loadTexts: hpnicfVMAPNto1SingleTable.setStatus('current')
hpnicfVMAPNto1SingleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VMAP-MIB", "hpnicfVMAPNto1Vlan"))
if mibBuilder.loadTexts: hpnicfVMAPNto1SingleEntry.setStatus('current')
hpnicfVMAPNto1Vlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfVMAPNto1Vlan.setStatus('current')
hpnicfVMAPNto1SingleTranslatedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAPNto1SingleTranslatedVlan.setStatus('current')
hpnicfVMAPNto1SingleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAPNto1SingleRowStatus.setStatus('current')
hpnicfVMAP1to2RangeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 5), )
if mibBuilder.loadTexts: hpnicfVMAP1to2RangeTable.setStatus('current')
hpnicfVMAP1to2RangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VMAP-MIB", "hpnicfVMAP1to2StartVlan"))
if mibBuilder.loadTexts: hpnicfVMAP1to2RangeEntry.setStatus('current')
hpnicfVMAP1to2StartVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfVMAP1to2StartVlan.setStatus('current')
hpnicfVMAP1to2EndVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP1to2EndVlan.setStatus('current')
hpnicfVMAP1to2RangeNestedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP1to2RangeNestedVlan.setStatus('current')
hpnicfVMAP1to2RangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP1to2RangeRowStatus.setStatus('current')
hpnicfVMAP1to2SingleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 6), )
if mibBuilder.loadTexts: hpnicfVMAP1to2SingleTable.setStatus('current')
hpnicfVMAP1to2SingleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VMAP-MIB", "hpnicfVMAP1to2Vlan"))
if mibBuilder.loadTexts: hpnicfVMAP1to2SingleEntry.setStatus('current')
hpnicfVMAP1to2Vlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfVMAP1to2Vlan.setStatus('current')
hpnicfVMAP1to2SingleNestedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP1to2SingleNestedVlan.setStatus('current')
hpnicfVMAP1to2SingleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP1to2SingleRowStatus.setStatus('current')
hpnicfVMAP2to2Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 7), )
if mibBuilder.loadTexts: hpnicfVMAP2to2Table.setStatus('current')
hpnicfVMAP2to2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VMAP-MIB", "hpnicfVMAP2to2OuterVlan"), (0, "HPN-ICF-VMAP-MIB", "hpnicfVMAP2to2InnerVlan"))
if mibBuilder.loadTexts: hpnicfVMAP2to2Entry.setStatus('current')
hpnicfVMAP2to2OuterVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfVMAP2to2OuterVlan.setStatus('current')
hpnicfVMAP2to2InnerVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfVMAP2to2InnerVlan.setStatus('current')
hpnicfVMAP2to2TranslatedOuterVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP2to2TranslatedOuterVlan.setStatus('current')
hpnicfVMAP2to2TranslatedInnerVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP2to2TranslatedInnerVlan.setStatus('current')
hpnicfVMAP2to2RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 138, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVMAP2to2RowStatus.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-VMAP-MIB", hpnicfVMAP2to2RowStatus=hpnicfVMAP2to2RowStatus, hpnicfVMAP1to2RangeTable=hpnicfVMAP1to2RangeTable, hpnicfVMAPNNIEntry=hpnicfVMAPNNIEntry, hpnicfVMAP1to1Entry=hpnicfVMAP1to1Entry, hpnicfVMAPNNIState=hpnicfVMAPNNIState, hpnicfVMAP1to2Vlan=hpnicfVMAP1to2Vlan, hpnicfVMAP2to2Entry=hpnicfVMAP2to2Entry, hpnicfVMAP1to2SingleTable=hpnicfVMAP1to2SingleTable, PYSNMP_MODULE_ID=hpnicfVmap, hpnicfVMAPNto1SingleTranslatedVlan=hpnicfVMAPNto1SingleTranslatedVlan, hpnicfVMAP2to2TranslatedInnerVlan=hpnicfVMAP2to2TranslatedInnerVlan, hpnicfVMAPNto1RangeEntry=hpnicfVMAPNto1RangeEntry, hpnicfVMAP1to2StartVlan=hpnicfVMAP1to2StartVlan, hpnicfVMAP1to1TranslatedVlan=hpnicfVMAP1to1TranslatedVlan, hpnicfVMAPNto1RangeTranslatedVlan=hpnicfVMAPNto1RangeTranslatedVlan, hpnicfVMAPNto1RangeRowStatus=hpnicfVMAPNto1RangeRowStatus, hpnicfVMAP1to2RangeRowStatus=hpnicfVMAP1to2RangeRowStatus, hpnicfVMAP2to2InnerVlan=hpnicfVMAP2to2InnerVlan, hpnicfVMAP1to1Vlan=hpnicfVMAP1to1Vlan, hpnicfVMAPNto1SingleEntry=hpnicfVMAPNto1SingleEntry, hpnicfVMAP1to2EndVlan=hpnicfVMAP1to2EndVlan, hpnicfVMAPNto1SingleRowStatus=hpnicfVMAPNto1SingleRowStatus, hpnicfVMAP1to2RangeNestedVlan=hpnicfVMAP1to2RangeNestedVlan, hpnicfVMAP1to1Table=hpnicfVMAP1to1Table, hpnicfVMAP1to2SingleEntry=hpnicfVMAP1to2SingleEntry, hpnicfVMAP2to2Table=hpnicfVMAP2to2Table, hpnicfVmap=hpnicfVmap, hpnicfVMAP1to2SingleRowStatus=hpnicfVMAP1to2SingleRowStatus, hpnicfVMAP2to2TranslatedOuterVlan=hpnicfVMAP2to2TranslatedOuterVlan, hpnicfVMAP2to2OuterVlan=hpnicfVMAP2to2OuterVlan, hpnicfVMAP1to2SingleNestedVlan=hpnicfVMAP1to2SingleNestedVlan, hpnicfVMAPNto1RangeTable=hpnicfVMAPNto1RangeTable, hpnicfVMAP1to2RangeEntry=hpnicfVMAP1to2RangeEntry, hpnicfVMAPNNITable=hpnicfVMAPNNITable, hpnicfVMAPNto1StartVlan=hpnicfVMAPNto1StartVlan, hpnicfVMAPNto1SingleTable=hpnicfVMAPNto1SingleTable, hpnicfVMAPNto1Vlan=hpnicfVMAPNto1Vlan, hpnicfVMAPNto1EndVlan=hpnicfVMAPNto1EndVlan, hpnicfVMAP1to1RowStatus=hpnicfVMAP1to1RowStatus)
