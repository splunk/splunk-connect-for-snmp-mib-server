#
# PySNMP MIB module HPN-ICF-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:29:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, ifDescr, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, NotificationType, iso, Unsigned32, IpAddress, Gauge32, MibIdentifier, Bits, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "iso", "Unsigned32", "IpAddress", "Gauge32", "MibIdentifier", "Bits", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "ModuleIdentity")
TextualConvention, TruthValue, RowStatus, DisplayString, TAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString", "TAddress")
hpnicfTrap = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38))
hpnicfTrap.setRevisions(('2010-06-05 10:50',))
if mibBuilder.loadTexts: hpnicfTrap.setLastUpdated('201006051050Z')
if mibBuilder.loadTexts: hpnicfTrap.setOrganization('')
hpnicfTableGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1))
hpnicfMacTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 1))
hpnicfMacTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMacTabTrapEnable.setStatus('current')
hpnicfMacTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMacTabTrapInterval.setStatus('current')
hpnicfMacTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 1, 3))
hpnicfMacTabLen = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 1, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfMacTabLen.setStatus('current')
hpnicfMacTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 1, 4))
hpnicfMacTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 1, 4, 1)).setObjects(("HPN-ICF-TRAP-MIB", "hpnicfMacTabLen"))
if mibBuilder.loadTexts: hpnicfMacTabFullTrap.setStatus('current')
hpnicfMacTabAlmostFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 1, 4, 2))
if mibBuilder.loadTexts: hpnicfMacTabAlmostFullTrap.setStatus('current')
hpnicfArpTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 2))
hpnicfArpTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfArpTabTrapEnable.setStatus('current')
hpnicfArpTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfArpTabTrapInterval.setStatus('current')
hpnicfArpTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 2, 3))
hpnicfArpTabLen = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 2, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfArpTabLen.setStatus('current')
hpnicfArpTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 2, 4))
hpnicfArpTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 2, 4, 1)).setObjects(("HPN-ICF-TRAP-MIB", "hpnicfArpTabLen"))
if mibBuilder.loadTexts: hpnicfArpTabFullTrap.setStatus('current')
hpnicfArpPortDynamicEntryFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 2, 4, 2)).setObjects(("HPN-ICF-TRAP-MIB", "hpnicfArpTabLen"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfArpPortDynamicEntryFullTrap.setStatus('current')
hpnicfRtTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3))
hpnicfDetailRtTrapTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicfDetailRtTrapTable.setStatus('current')
hpnicfDetailRtTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-TRAP-MIB", "hpnicfDetailRtProType"))
if mibBuilder.loadTexts: hpnicfDetailRtTrapEntry.setStatus('current')
hpnicfDetailRtProType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("rip", 3), ("isis", 4), ("ospf", 5), ("bgp", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDetailRtProType.setStatus('current')
hpnicfDetailRtEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDetailRtEnable.setStatus('current')
hpnicfRtTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfRtTabTrapEnable.setStatus('current')
hpnicfRtTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfRtTabTrapInterval.setStatus('current')
hpnicfRtTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 4))
hpnicfRtTabLen = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 4, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfRtTabLen.setStatus('current')
hpnicfDefaultRtNextHopType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 4, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDefaultRtNextHopType.setStatus('current')
hpnicfDefaultRtNextHop = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 4, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDefaultRtNextHop.setStatus('current')
hpnicfDefaultRtOutIf = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 4, 4), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDefaultRtOutIf.setStatus('current')
hpnicfRtTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 5))
hpnicfRtTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 5, 1)).setObjects(("HPN-ICF-TRAP-MIB", "hpnicfRtTabLen"))
if mibBuilder.loadTexts: hpnicfRtTabFullTrap.setStatus('current')
hpnicfDetailRtTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 5, 2)).setObjects(("HPN-ICF-TRAP-MIB", "hpnicfDetailRtProType"), ("HPN-ICF-TRAP-MIB", "hpnicfRtTabLen"))
if mibBuilder.loadTexts: hpnicfDetailRtTabFullTrap.setStatus('current')
hpnicfDefaultRtDelTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 5, 3)).setObjects(("HPN-ICF-TRAP-MIB", "hpnicfDetailRtProType"), ("HPN-ICF-TRAP-MIB", "hpnicfDefaultRtNextHopType"), ("HPN-ICF-TRAP-MIB", "hpnicfDefaultRtNextHop"), ("HPN-ICF-TRAP-MIB", "hpnicfDefaultRtOutIf"))
if mibBuilder.loadTexts: hpnicfDefaultRtDelTrap.setStatus('current')
hpnicfDefaultRtDelTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 3, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDefaultRtDelTrapEnable.setStatus('current')
hpnicfMulticastTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 4))
hpnicfMulticastTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMulticastTabTrapEnable.setStatus('current')
hpnicfMulticastTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMulticastTabTrapInterval.setStatus('current')
hpnicfMulticastTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 4, 3))
hpnicfMulticastTabType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lay2", 1), ("lay3", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfMulticastTabType.setStatus('current')
hpnicfMulticastTabLen = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 4, 3, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfMulticastTabLen.setStatus('current')
hpnicfMulticastTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 4, 4))
hpnicfMulticastTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 4, 4, 1)).setObjects(("HPN-ICF-TRAP-MIB", "hpnicfMulticastTabType"), ("HPN-ICF-TRAP-MIB", "hpnicfMulticastTabLen"))
if mibBuilder.loadTexts: hpnicfMulticastTabFullTrap.setStatus('current')
hpnicfNdTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 5))
hpnicfNdTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNdTabTrapEnable.setStatus('current')
hpnicfNdTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNdTabTrapInterval.setStatus('current')
hpnicfNdTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 5, 3))
hpnicfNdTabLen = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 5, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfNdTabLen.setStatus('current')
hpnicfNdTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 5, 4))
hpnicfNdTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 5, 4, 1)).setObjects(("HPN-ICF-TRAP-MIB", "hpnicfNdTabLen"))
if mibBuilder.loadTexts: hpnicfNdTabFullTrap.setStatus('current')
hpnicfPeriodicalTrapGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6))
hpnicfPeriodicalTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6, 1))
hpnicfPeriodicalTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 3600), )).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPeriodicalTrapInterval.setStatus('current')
hpnicfPeriodicalTrapSwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPeriodicalTrapSwitch.setStatus('current')
hpnicfPeriodicalTrapSwitch2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPeriodicalTrapSwitch2.setStatus('current')
hpnicfPeriodicalTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6, 2))
hpnicfPeriodicalNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6, 3))
hpnicfPeriodicalNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6, 3, 0))
hpnicfPeriodicalTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 6, 3, 0, 1))
if mibBuilder.loadTexts: hpnicfPeriodicalTrap.setStatus('current')
hpnicfTrapDesInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 7))
hpnicfTrapDesInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 7, 1), )
if mibBuilder.loadTexts: hpnicfTrapDesInfoTable.setStatus('current')
hpnicfTrapDesInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 7, 1, 1), ).setIndexNames((0, "HPN-ICF-TRAP-MIB", "hpnicfTrapDesInfoIndex"))
if mibBuilder.loadTexts: hpnicfTrapDesInfoEntry.setStatus('current')
hpnicfTrapDesInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: hpnicfTrapDesInfoIndex.setStatus('current')
hpnicfTrapDesIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 7, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrapDesIPAddress.setStatus('current')
hpnicfTrapDesPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrapDesPort.setStatus('current')
hpnicfTrapDesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 7, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrapDesRowStatus.setStatus('current')
hpnicfTrapDesAddrTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 7, 1, 1, 5), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrapDesAddrTAddress.setStatus('current')
hpnicfTrapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 8))
hpnicfTrapConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 8, 1), )
if mibBuilder.loadTexts: hpnicfTrapConfigTable.setStatus('current')
hpnicfTrapConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 8, 1, 1), ).setIndexNames((0, "HPN-ICF-TRAP-MIB", "hpnicfTrapConfigIndex"))
if mibBuilder.loadTexts: hpnicfTrapConfigEntry.setStatus('current')
hpnicfTrapConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfTrapConfigIndex.setStatus('current')
hpnicfTrapConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 8, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfTrapConfigName.setStatus('current')
hpnicfTrapConfigDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 8, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfTrapConfigDescr.setStatus('current')
hpnicfTrapConfigSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfTrapConfigSwitch.setStatus('current')
hpnicfTrapConfigSwitch2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 38, 1, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfTrapConfigSwitch2.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-TRAP-MIB", hpnicfArpTabTrapInfo=hpnicfArpTabTrapInfo, hpnicfRtTabTrapInfo=hpnicfRtTabTrapInfo, hpnicfTableGroup=hpnicfTableGroup, hpnicfMulticastTabTrap=hpnicfMulticastTabTrap, hpnicfTrapDesPort=hpnicfTrapDesPort, hpnicfMacTabTrap=hpnicfMacTabTrap, hpnicfDefaultRtDelTrap=hpnicfDefaultRtDelTrap, hpnicfArpTabTrapInterval=hpnicfArpTabTrapInterval, hpnicfPeriodicalTrap=hpnicfPeriodicalTrap, hpnicfMulticastTabType=hpnicfMulticastTabType, hpnicfDefaultRtNextHopType=hpnicfDefaultRtNextHopType, hpnicfPeriodicalNotification=hpnicfPeriodicalNotification, hpnicfArpTabFullTrap=hpnicfArpTabFullTrap, hpnicfNdTabTrapInterval=hpnicfNdTabTrapInterval, hpnicfTrapConfigDescr=hpnicfTrapConfigDescr, hpnicfDefaultRtNextHop=hpnicfDefaultRtNextHop, hpnicfMulticastTabTrapInfo=hpnicfMulticastTabTrapInfo, hpnicfDetailRtTabFullTrap=hpnicfDetailRtTabFullTrap, hpnicfPeriodicalTrapGroup=hpnicfPeriodicalTrapGroup, hpnicfNdTabLen=hpnicfNdTabLen, hpnicfPeriodicalNotificationPrefix=hpnicfPeriodicalNotificationPrefix, hpnicfRtTabTrap=hpnicfRtTabTrap, hpnicfTrapConfig=hpnicfTrapConfig, PYSNMP_MODULE_ID=hpnicfTrap, hpnicfArpTabLen=hpnicfArpTabLen, hpnicfTrapConfigTable=hpnicfTrapConfigTable, hpnicfTrapDesInfoIndex=hpnicfTrapDesInfoIndex, hpnicfDefaultRtDelTrapEnable=hpnicfDefaultRtDelTrapEnable, hpnicfNdTabTrapEnable=hpnicfNdTabTrapEnable, hpnicfMacTabAlmostFullTrap=hpnicfMacTabAlmostFullTrap, hpnicfRtTabLen=hpnicfRtTabLen, hpnicfDetailRtEnable=hpnicfDetailRtEnable, hpnicfTrapDesRowStatus=hpnicfTrapDesRowStatus, hpnicfMacTabStatGroup=hpnicfMacTabStatGroup, hpnicfArpTabTrapEnable=hpnicfArpTabTrapEnable, hpnicfDetailRtTrapEntry=hpnicfDetailRtTrapEntry, hpnicfRtTabTrapInterval=hpnicfRtTabTrapInterval, hpnicfDetailRtTrapTable=hpnicfDetailRtTrapTable, hpnicfRtTabFullTrap=hpnicfRtTabFullTrap, hpnicfNdTabFullTrap=hpnicfNdTabFullTrap, hpnicfMacTabFullTrap=hpnicfMacTabFullTrap, hpnicfPeriodicalTrapInterval=hpnicfPeriodicalTrapInterval, hpnicfTrapDesIPAddress=hpnicfTrapDesIPAddress, hpnicfTrapDesAddrTAddress=hpnicfTrapDesAddrTAddress, hpnicfArpPortDynamicEntryFullTrap=hpnicfArpPortDynamicEntryFullTrap, hpnicfTrap=hpnicfTrap, hpnicfMacTabTrapInterval=hpnicfMacTabTrapInterval, hpnicfRtTabTrapEnable=hpnicfRtTabTrapEnable, hpnicfMulticastTabFullTrap=hpnicfMulticastTabFullTrap, hpnicfNdTabTrap=hpnicfNdTabTrap, hpnicfMacTabTrapEnable=hpnicfMacTabTrapEnable, hpnicfDefaultRtOutIf=hpnicfDefaultRtOutIf, hpnicfMulticastTabStatGroup=hpnicfMulticastTabStatGroup, hpnicfMulticastTabLen=hpnicfMulticastTabLen, hpnicfPeriodicalTrapInfo=hpnicfPeriodicalTrapInfo, hpnicfDetailRtProType=hpnicfDetailRtProType, hpnicfMulticastTabTrapEnable=hpnicfMulticastTabTrapEnable, hpnicfTrapDesInfoEntry=hpnicfTrapDesInfoEntry, hpnicfTrapConfigSwitch=hpnicfTrapConfigSwitch, hpnicfMacTabLen=hpnicfMacTabLen, hpnicfPeriodicalTrapSwitch=hpnicfPeriodicalTrapSwitch, hpnicfPeriodicalTrapObjects=hpnicfPeriodicalTrapObjects, hpnicfMacTabTrapInfo=hpnicfMacTabTrapInfo, hpnicfNdTabStatGroup=hpnicfNdTabStatGroup, hpnicfTrapConfigSwitch2=hpnicfTrapConfigSwitch2, hpnicfTrapConfigName=hpnicfTrapConfigName, hpnicfArpTabTrap=hpnicfArpTabTrap, hpnicfTrapConfigEntry=hpnicfTrapConfigEntry, hpnicfTrapConfigIndex=hpnicfTrapConfigIndex, hpnicfArpTabStatGroup=hpnicfArpTabStatGroup, hpnicfMulticastTabTrapInterval=hpnicfMulticastTabTrapInterval, hpnicfPeriodicalTrapSwitch2=hpnicfPeriodicalTrapSwitch2, hpnicfRtTabStatGroup=hpnicfRtTabStatGroup, hpnicfTrapDesInfoTable=hpnicfTrapDesInfoTable, hpnicfTrapDesInfo=hpnicfTrapDesInfo, hpnicfNdTabTrapInfo=hpnicfNdTabTrapInfo)
