#
# PySNMP MIB module FDRY-POE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FDRY-POE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:59:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
snAgentSys, = mibBuilder.importSymbols("FOUNDRY-SN-ROOT-MIB", "snAgentSys")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, TimeTicks, ObjectIdentity, NotificationType, Counter32, ModuleIdentity, Counter64, Bits, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "TimeTicks", "ObjectIdentity", "NotificationType", "Counter32", "ModuleIdentity", "Counter64", "Bits", "IpAddress", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
snAgentPoe = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14))
snAgentPoe.setRevisions(('2010-06-02 00:00', '2009-09-30 00:00', '2009-04-03 00:00',))
if mibBuilder.loadTexts: snAgentPoe.setLastUpdated('201006020000Z')
if mibBuilder.loadTexts: snAgentPoe.setOrganization('Brocade Communications Systems, Inc.')
snAgentPoeGbl = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 1))
snAgentPoePort = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2))
snAgentPoeModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 3))
snAgentPoeUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 4))
snAgentPoeGblPowerCapacityTotal = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeGblPowerCapacityTotal.setStatus('current')
snAgentPoeGblPowerCapacityFree = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeGblPowerCapacityFree.setStatus('current')
snAgentPoeGblPowerAllocationsRequestsHonored = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeGblPowerAllocationsRequestsHonored.setStatus('current')
snAgentPoePortTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2), )
if mibBuilder.loadTexts: snAgentPoePortTable.setStatus('current')
snAgentPoePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2, 1), ).setIndexNames((0, "FDRY-POE-MIB", "snAgentPoePortNumber"))
if mibBuilder.loadTexts: snAgentPoePortEntry.setStatus('current')
snAgentPoePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoePortNumber.setStatus('current')
snAgentPoePortControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3), ("enableLegacyDevice", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snAgentPoePortControl.setStatus('current')
snAgentPoePortWattage = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snAgentPoePortWattage.setStatus('current')
snAgentPoePortClass = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snAgentPoePortClass.setStatus('current')
snAgentPoePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 0), ("critical", 1), ("high", 2), ("low", 3), ("medium", 4), ("other", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snAgentPoePortPriority.setStatus('current')
snAgentPoePortConsumed = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoePortConsumed.setStatus('current')
snAgentPoePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 2, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoePortType.setStatus('current')
snAgentPoeModuleTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 3, 1), )
if mibBuilder.loadTexts: snAgentPoeModuleTable.setStatus('current')
snAgentPoeModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 3, 1, 1), ).setIndexNames((0, "FDRY-POE-MIB", "snAgentPoeModuleNumber"))
if mibBuilder.loadTexts: snAgentPoeModuleEntry.setStatus('current')
snAgentPoeModuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeModuleNumber.setStatus('current')
snAgentPoeModuleBudget = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snAgentPoeModuleBudget.setStatus('current')
snAgentPoeModuleMaxPDTypeSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ieee802dot3af", 0), ("ieee802dot3at", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeModuleMaxPDTypeSupport.setStatus('current')
snAgentPoeUnitTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 4, 1), )
if mibBuilder.loadTexts: snAgentPoeUnitTable.setStatus('current')
snAgentPoeUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 4, 1, 1), ).setIndexNames((0, "FDRY-POE-MIB", "snAgentPoeUnitIndex"))
if mibBuilder.loadTexts: snAgentPoeUnitEntry.setStatus('current')
snAgentPoeUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeUnitIndex.setStatus('current')
snAgentPoeUnitPowerCapacityTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeUnitPowerCapacityTotal.setStatus('current')
snAgentPoeUnitPowerCapacityFree = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeUnitPowerCapacityFree.setStatus('current')
snAgentPoeUnitPowerAllocationsRequestsHonored = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 2, 14, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentPoeUnitPowerAllocationsRequestsHonored.setStatus('current')
mibBuilder.exportSymbols("FDRY-POE-MIB", snAgentPoePortTable=snAgentPoePortTable, snAgentPoeModule=snAgentPoeModule, snAgentPoeGblPowerAllocationsRequestsHonored=snAgentPoeGblPowerAllocationsRequestsHonored, snAgentPoeGblPowerCapacityTotal=snAgentPoeGblPowerCapacityTotal, snAgentPoeUnitIndex=snAgentPoeUnitIndex, snAgentPoePortEntry=snAgentPoePortEntry, snAgentPoePortPriority=snAgentPoePortPriority, snAgentPoeUnitPowerCapacityTotal=snAgentPoeUnitPowerCapacityTotal, snAgentPoeUnitEntry=snAgentPoeUnitEntry, snAgentPoeModuleMaxPDTypeSupport=snAgentPoeModuleMaxPDTypeSupport, snAgentPoePortClass=snAgentPoePortClass, snAgentPoe=snAgentPoe, snAgentPoeUnitTable=snAgentPoeUnitTable, snAgentPoePortConsumed=snAgentPoePortConsumed, snAgentPoeModuleTable=snAgentPoeModuleTable, snAgentPoePortControl=snAgentPoePortControl, snAgentPoeUnit=snAgentPoeUnit, snAgentPoePortType=snAgentPoePortType, snAgentPoeGbl=snAgentPoeGbl, snAgentPoeModuleNumber=snAgentPoeModuleNumber, PYSNMP_MODULE_ID=snAgentPoe, snAgentPoePortNumber=snAgentPoePortNumber, snAgentPoePort=snAgentPoePort, snAgentPoePortWattage=snAgentPoePortWattage, snAgentPoeModuleBudget=snAgentPoeModuleBudget, snAgentPoeModuleEntry=snAgentPoeModuleEntry, snAgentPoeUnitPowerAllocationsRequestsHonored=snAgentPoeUnitPowerAllocationsRequestsHonored, snAgentPoeUnitPowerCapacityFree=snAgentPoeUnitPowerCapacityFree, snAgentPoeGblPowerCapacityFree=snAgentPoeGblPowerCapacityFree)
