#
# PySNMP MIB module Juniper-DS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-DS3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:51:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
dsx3FarEndTotalEntry, dsx3FarEndCurrentEntry, dsx3FarEndConfigEntry, dsx3FarEndIntervalEntry = mibBuilder.importSymbols("DS3-MIB", "dsx3FarEndTotalEntry", "dsx3FarEndCurrentEntry", "dsx3FarEndConfigEntry", "dsx3FarEndIntervalEntry")
InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniNextIfIndex, = mibBuilder.importSymbols("Juniper-TC", "JuniNextIfIndex")
PerfTotalCount, PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfTotalCount", "PerfCurrentCount", "PerfIntervalCount")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, NotificationType, Integer32, iso, MibIdentifier, Unsigned32, ObjectIdentity, Counter64, IpAddress, Gauge32, TimeTicks, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "Integer32", "iso", "MibIdentifier", "Unsigned32", "ObjectIdentity", "Counter64", "IpAddress", "Gauge32", "TimeTicks", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
juniDs3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4))
juniDs3MIB.setRevisions(('2004-10-12 06:51', '2003-09-30 12:11', '2002-09-16 21:44', '2002-09-12 16:59', '2002-04-04 14:07', '2002-02-22 21:21', '2001-04-27 19:49', '2001-02-05 00:00', '1999-07-27 00:00', '1998-11-13 00:00',))
if mibBuilder.loadTexts: juniDs3MIB.setLastUpdated('200309301211Z')
if mibBuilder.loadTexts: juniDs3MIB.setOrganization('Juniper Networks, Inc.')
juniDs3Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1))
juniDsx3ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1), )
if mibBuilder.loadTexts: juniDsx3ConfigTable.setStatus('current')
juniDsx3ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: juniDsx3ConfigEntry.setStatus('current')
juniDsx3LineLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 137))).setUnits('meters').setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3LineLength.setStatus('current')
juniDsx3LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 18, 20))).clone(namedValues=NamedValues(("juniDsx3other", 1), ("juniDsx3M23", 2), ("juniDsx3SYNTRAN", 3), ("juniDsx3CbitParity", 4), ("juniDsx3ClearChannel", 5), ("juniE3G832", 6), ("juniE3Framed", 7), ("juniE3Plcp", 8), ("juniDsx3M23Plcp", 18), ("juniDsx3CbitParityPlcp", 20)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3LineType.setStatus('current')
juniDsx3CellScramblerConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("scramblerOn", 1), ("scramblerOff", 2), ("notSupported", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3CellScramblerConfig.setStatus('current')
juniDsx3Channelization = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Channelization.setStatus('current')
juniDsx3InterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ds3T3", 0), ("ds3E3", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3InterfaceType.setStatus('current')
juniDsx3Application = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ds3FrameOverDs3", 0), ("ds3AtmOverDs3", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Application.setStatus('current')
juniDsx3Ds3Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 28))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Ds3Channel.setStatus('current')
juniDsx3LowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 8), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3LowerIfIndex.setStatus('current')
juniDsx3RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3RowStatus.setStatus('current')
juniDsx3Ds3DsuMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4))).clone(namedValues=NamedValues(("ds3DsuModeNone", 0), ("ds3DsuLarsCom", 2), ("ds3DsuDigitalLink", 4))).clone('ds3DsuModeNone')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Ds3DsuMode.setStatus('current')
juniDsx3Ds3BandwidthLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 44210))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Ds3BandwidthLimit.setStatus('current')
juniDsx3Ds3DsuScrambleMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ds3DsuScrambleDisabled", 0), ("ds3DsuScrambleEnable", 1))).clone('ds3DsuScrambleDisabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3Ds3DsuScrambleMode.setStatus('current')
juniDsx3MdlCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlCarrier.setStatus('current')
juniDsx3MdlTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("path", 1), ("idlesignal", 2), ("pathIdlesignal", 3), ("testsignal", 4), ("pathTestsignal", 5), ("idlesignalTestsignal", 6), ("pathIdlesignalTestsignal", 7), ("none", 8))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlTransmit.setStatus('current')
juniDsx3MdlEic = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlEic.setStatus('current')
juniDsx3MdlLic = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlLic.setStatus('current')
juniDsx3MdlFic = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlFic.setStatus('current')
juniDsx3MdlUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlUnit.setStatus('current')
juniDsx3MdlPfi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlPfi.setStatus('current')
juniDsx3MdlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlPort.setStatus('current')
juniDsx3MdlGenerator = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniDsx3MdlGenerator.setStatus('current')
juniDs3NextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 2), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDs3NextIfIndex.setStatus('current')
juniDsx3FarEndCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 3), )
if mibBuilder.loadTexts: juniDsx3FarEndCurrentTable.setStatus('current')
juniDsx3FarEndCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 3, 1), )
dsx3FarEndCurrentEntry.registerAugmentions(("Juniper-DS3-MIB", "juniDsx3FarEndCurrentEntry"))
juniDsx3FarEndCurrentEntry.setIndexNames(*dsx3FarEndCurrentEntry.getIndexNames())
if mibBuilder.loadTexts: juniDsx3FarEndCurrentEntry.setStatus('current')
juniDsx3FarEndCurrentInvalidSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 3, 1, 1), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDsx3FarEndCurrentInvalidSeconds.setStatus('current')
juniDsx3FarEndIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 4), )
if mibBuilder.loadTexts: juniDsx3FarEndIntervalTable.setStatus('current')
juniDsx3FarEndIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 4, 1), )
dsx3FarEndIntervalEntry.registerAugmentions(("Juniper-DS3-MIB", "juniDsx3FarEndIntervalEntry"))
juniDsx3FarEndIntervalEntry.setIndexNames(*dsx3FarEndIntervalEntry.getIndexNames())
if mibBuilder.loadTexts: juniDsx3FarEndIntervalEntry.setStatus('current')
juniDsx3FarEndIntervalInvalidSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 4, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDsx3FarEndIntervalInvalidSeconds.setStatus('current')
juniDsx3FarEndTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 5), )
if mibBuilder.loadTexts: juniDsx3FarEndTotalTable.setStatus('current')
juniDsx3FarEndTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 5, 1), )
dsx3FarEndTotalEntry.registerAugmentions(("Juniper-DS3-MIB", "juniDsx3FarEndTotalEntry"))
juniDsx3FarEndTotalEntry.setIndexNames(*dsx3FarEndTotalEntry.getIndexNames())
if mibBuilder.loadTexts: juniDsx3FarEndTotalEntry.setStatus('current')
juniDsx3FarEndTotalInvalidSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 5, 1, 1), PerfTotalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniDsx3FarEndTotalInvalidSeconds.setStatus('current')
juniDsx3FarEndConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6), )
if mibBuilder.loadTexts: juniDsx3FarEndConfigTable.setStatus('current')
juniDsx3FarEndConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6, 1), )
dsx3FarEndConfigEntry.registerAugmentions(("Juniper-DS3-MIB", "juniDsx3FarEndConfigEntry"))
juniDsx3FarEndConfigEntry.setIndexNames(*dsx3FarEndConfigEntry.getIndexNames())
if mibBuilder.loadTexts: juniDsx3FarEndConfigEntry.setStatus('current')
juniDsx3FarEndPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDsx3FarEndPortNumber.setStatus('current')
juniDsx3FarEndGeneratorNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDsx3FarEndGeneratorNumber.setStatus('current')
juniDsx3FarEndCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniDsx3FarEndCarrier.setStatus('current')
juniDs3Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4))
juniDs3Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1))
juniDs3Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2))
juniDs3Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 1)).setObjects(("Juniper-DS3-MIB", "juniDs3Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance = juniDs3Compliance.setStatus('obsolete')
juniDs3Compliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 2)).setObjects(("Juniper-DS3-MIB", "juniDs3Group2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance2 = juniDs3Compliance2.setStatus('obsolete')
juniDs3Compliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 3)).setObjects(("Juniper-DS3-MIB", "juniDs3Group3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance3 = juniDs3Compliance3.setStatus('obsolete')
juniDs3Compliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 4)).setObjects(("Juniper-DS3-MIB", "juniDs3Group4"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance4 = juniDs3Compliance4.setStatus('obsolete')
juniDs3Compliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 5)).setObjects(("Juniper-DS3-MIB", "juniDs3Group5"), ("Juniper-DS3-MIB", "juniDs3FarEndGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance5 = juniDs3Compliance5.setStatus('obsolete')
juniDs3Compliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 1, 6)).setObjects(("Juniper-DS3-MIB", "juniDs3Group5"), ("Juniper-DS3-MIB", "juniDs3FarEndGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Compliance6 = juniDs3Compliance6.setStatus('current')
juniDs3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 1)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group = juniDs3Group.setStatus('obsolete')
juniDs3Group2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 2)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"), ("Juniper-DS3-MIB", "juniDsx3LineType"), ("Juniper-DS3-MIB", "juniDsx3CellScramblerConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group2 = juniDs3Group2.setStatus('obsolete')
juniDs3Group3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 3)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"), ("Juniper-DS3-MIB", "juniDsx3LineType"), ("Juniper-DS3-MIB", "juniDsx3CellScramblerConfig"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuMode"), ("Juniper-DS3-MIB", "juniDsx3Ds3BandwidthLimit"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuScrambleMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group3 = juniDs3Group3.setStatus('obsolete')
juniDs3Group4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 4)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"), ("Juniper-DS3-MIB", "juniDsx3LineType"), ("Juniper-DS3-MIB", "juniDsx3CellScramblerConfig"), ("Juniper-DS3-MIB", "juniDsx3Channelization"), ("Juniper-DS3-MIB", "juniDsx3InterfaceType"), ("Juniper-DS3-MIB", "juniDsx3Application"), ("Juniper-DS3-MIB", "juniDsx3Ds3Channel"), ("Juniper-DS3-MIB", "juniDsx3LowerIfIndex"), ("Juniper-DS3-MIB", "juniDsx3RowStatus"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuMode"), ("Juniper-DS3-MIB", "juniDsx3Ds3BandwidthLimit"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuScrambleMode"), ("Juniper-DS3-MIB", "juniDs3NextIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group4 = juniDs3Group4.setStatus('obsolete')
juniDs3Group5 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 5)).setObjects(("Juniper-DS3-MIB", "juniDsx3LineLength"), ("Juniper-DS3-MIB", "juniDsx3LineType"), ("Juniper-DS3-MIB", "juniDsx3CellScramblerConfig"), ("Juniper-DS3-MIB", "juniDsx3Channelization"), ("Juniper-DS3-MIB", "juniDsx3InterfaceType"), ("Juniper-DS3-MIB", "juniDsx3Application"), ("Juniper-DS3-MIB", "juniDsx3Ds3Channel"), ("Juniper-DS3-MIB", "juniDsx3LowerIfIndex"), ("Juniper-DS3-MIB", "juniDsx3RowStatus"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuMode"), ("Juniper-DS3-MIB", "juniDsx3Ds3BandwidthLimit"), ("Juniper-DS3-MIB", "juniDsx3Ds3DsuScrambleMode"), ("Juniper-DS3-MIB", "juniDsx3MdlCarrier"), ("Juniper-DS3-MIB", "juniDsx3MdlTransmit"), ("Juniper-DS3-MIB", "juniDsx3MdlEic"), ("Juniper-DS3-MIB", "juniDsx3MdlLic"), ("Juniper-DS3-MIB", "juniDsx3MdlFic"), ("Juniper-DS3-MIB", "juniDsx3MdlUnit"), ("Juniper-DS3-MIB", "juniDsx3MdlPfi"), ("Juniper-DS3-MIB", "juniDsx3MdlPort"), ("Juniper-DS3-MIB", "juniDsx3MdlGenerator"), ("Juniper-DS3-MIB", "juniDs3NextIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3Group5 = juniDs3Group5.setStatus('current')
juniDs3FarEndGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 6)).setObjects(("Juniper-DS3-MIB", "juniDsx3FarEndCurrentInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndIntervalInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndTotalInvalidSeconds"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3FarEndGroup = juniDs3FarEndGroup.setStatus('obsolete')
juniDs3FarEndGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 4, 4, 2, 7)).setObjects(("Juniper-DS3-MIB", "juniDsx3FarEndCurrentInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndIntervalInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndTotalInvalidSeconds"), ("Juniper-DS3-MIB", "juniDsx3FarEndPortNumber"), ("Juniper-DS3-MIB", "juniDsx3FarEndGeneratorNumber"), ("Juniper-DS3-MIB", "juniDsx3FarEndCarrier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniDs3FarEndGroup2 = juniDs3FarEndGroup2.setStatus('current')
mibBuilder.exportSymbols("Juniper-DS3-MIB", juniDsx3FarEndCurrentInvalidSeconds=juniDsx3FarEndCurrentInvalidSeconds, juniDsx3FarEndCurrentTable=juniDsx3FarEndCurrentTable, juniDs3NextIfIndex=juniDs3NextIfIndex, juniDsx3FarEndIntervalEntry=juniDsx3FarEndIntervalEntry, juniDsx3FarEndPortNumber=juniDsx3FarEndPortNumber, juniDsx3FarEndConfigTable=juniDsx3FarEndConfigTable, juniDs3Groups=juniDs3Groups, juniDsx3CellScramblerConfig=juniDsx3CellScramblerConfig, juniDsx3LowerIfIndex=juniDsx3LowerIfIndex, juniDsx3RowStatus=juniDsx3RowStatus, juniDsx3MdlUnit=juniDsx3MdlUnit, juniDs3FarEndGroup=juniDs3FarEndGroup, juniDsx3MdlPort=juniDsx3MdlPort, juniDsx3FarEndIntervalInvalidSeconds=juniDsx3FarEndIntervalInvalidSeconds, juniDsx3Channelization=juniDsx3Channelization, juniDsx3FarEndCarrier=juniDsx3FarEndCarrier, juniDs3Group=juniDs3Group, juniDs3Group5=juniDs3Group5, juniDsx3MdlPfi=juniDsx3MdlPfi, juniDsx3LineLength=juniDsx3LineLength, juniDsx3MdlCarrier=juniDsx3MdlCarrier, juniDsx3Ds3BandwidthLimit=juniDsx3Ds3BandwidthLimit, juniDsx3MdlEic=juniDsx3MdlEic, juniDs3Group3=juniDs3Group3, juniDsx3Ds3DsuMode=juniDsx3Ds3DsuMode, juniDsx3InterfaceType=juniDsx3InterfaceType, juniDs3Compliance6=juniDs3Compliance6, juniDs3Group4=juniDs3Group4, juniDs3Compliance4=juniDs3Compliance4, juniDsx3MdlLic=juniDsx3MdlLic, juniDsx3FarEndGeneratorNumber=juniDsx3FarEndGeneratorNumber, juniDs3Compliance3=juniDs3Compliance3, juniDsx3LineType=juniDsx3LineType, juniDsx3FarEndCurrentEntry=juniDsx3FarEndCurrentEntry, juniDsx3MdlGenerator=juniDsx3MdlGenerator, juniDs3Compliance=juniDs3Compliance, juniDsx3Ds3DsuScrambleMode=juniDsx3Ds3DsuScrambleMode, juniDsx3FarEndConfigEntry=juniDsx3FarEndConfigEntry, juniDsx3ConfigTable=juniDsx3ConfigTable, juniDsx3Ds3Channel=juniDsx3Ds3Channel, juniDs3MIB=juniDs3MIB, juniDs3Group2=juniDs3Group2, juniDs3FarEndGroup2=juniDs3FarEndGroup2, juniDs3Compliance5=juniDs3Compliance5, juniDsx3FarEndIntervalTable=juniDsx3FarEndIntervalTable, juniDs3Objects=juniDs3Objects, juniDsx3FarEndTotalTable=juniDsx3FarEndTotalTable, juniDs3Compliance2=juniDs3Compliance2, PYSNMP_MODULE_ID=juniDs3MIB, juniDs3Conformance=juniDs3Conformance, juniDsx3FarEndTotalEntry=juniDsx3FarEndTotalEntry, juniDsx3MdlFic=juniDsx3MdlFic, juniDsx3Application=juniDsx3Application, juniDs3Compliances=juniDs3Compliances, juniDsx3ConfigEntry=juniDsx3ConfigEntry, juniDsx3FarEndTotalInvalidSeconds=juniDsx3FarEndTotalInvalidSeconds, juniDsx3MdlTransmit=juniDsx3MdlTransmit)
