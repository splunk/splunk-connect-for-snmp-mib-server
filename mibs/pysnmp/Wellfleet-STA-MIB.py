#
# PySNMP MIB module Wellfleet-STA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-STA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ModuleIdentity, Bits, iso, enterprises, Counter64, MibIdentifier, Unsigned32, mib_2, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Opaque, NotificationType, mgmt, NotificationType, Gauge32, ObjectIdentity, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Bits", "iso", "enterprises", "Counter64", "MibIdentifier", "Unsigned32", "mib-2", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Opaque", "NotificationType", "mgmt", "NotificationType", "Gauge32", "ObjectIdentity", "Counter32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfStaGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfStaGroup")
wfSta = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 1))
wfStaDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaDisable.setStatus('mandatory')
wfStaPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaPollInterval.setStatus('mandatory')
wfStaThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2), )
if mibBuilder.loadTexts: wfStaThresholdTable.setStatus('mandatory')
wfStaThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1), ).setIndexNames((0, "Wellfleet-STA-MIB", "wfStaThresholdObject"))
if mibBuilder.loadTexts: wfStaThresholdEntry.setStatus('mandatory')
wfStaThresholdDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdDelete.setStatus('mandatory')
wfStaThresholdDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdDisable.setStatus('mandatory')
wfStaThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("ignored", 2), ("held", 3), ("suspended", 4), ("invalid", 5))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdState.setStatus('mandatory')
wfStaThresholdObject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdObject.setStatus('mandatory')
wfStaThresholdLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdLowValue.setStatus('mandatory')
wfStaThresholdLowEventLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("info", 2), ("debug", 3))).clone('info')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdLowEventLevel.setStatus('mandatory')
wfStaThresholdMediumValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 7), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdMediumValue.setStatus('mandatory')
wfStaThresholdMediumEventLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("info", 2), ("debug", 3))).clone('info')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdMediumEventLevel.setStatus('mandatory')
wfStaThresholdHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 9), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdHighValue.setStatus('mandatory')
wfStaThresholdHighEventLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("info", 2), ("debug", 3))).clone('info')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdHighEventLevel.setStatus('mandatory')
wfStaThresholdCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdCurrentValue.setStatus('mandatory')
wfStaThresholdUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absolute", 1), ("persecond", 2))).clone('persecond')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdUnits.setStatus('mandatory')
wfStaThresholdAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("greaterthan", 1), ("lessthan", 2))).clone('greaterthan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdAction.setStatus('mandatory')
wfStaThresholdMaxSuccessiveAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 14), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdMaxSuccessiveAlarms.setStatus('mandatory')
wfStaThresholdHoldDownIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 15), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdHoldDownIntervals.setStatus('mandatory')
wfStaThresholdLowExceptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdLowExceptions.setStatus('mandatory')
wfStaThresholdLowAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdLowAlarms.setStatus('mandatory')
wfStaThresholdMediumExceptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdMediumExceptions.setStatus('mandatory')
wfStaThresholdMediumAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdMediumAlarms.setStatus('mandatory')
wfStaThresholdHighExceptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdHighExceptions.setStatus('mandatory')
wfStaThresholdHighAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStaThresholdHighAlarms.setStatus('mandatory')
wfStaThresholdLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 6, 2, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStaThresholdLabel.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-STA-MIB", wfStaThresholdMaxSuccessiveAlarms=wfStaThresholdMaxSuccessiveAlarms, wfStaThresholdState=wfStaThresholdState, wfStaThresholdLowValue=wfStaThresholdLowValue, wfStaThresholdDisable=wfStaThresholdDisable, wfStaThresholdAction=wfStaThresholdAction, wfStaThresholdMediumValue=wfStaThresholdMediumValue, wfStaThresholdUnits=wfStaThresholdUnits, wfStaThresholdMediumEventLevel=wfStaThresholdMediumEventLevel, wfStaDisable=wfStaDisable, wfStaThresholdDelete=wfStaThresholdDelete, wfStaThresholdTable=wfStaThresholdTable, wfStaThresholdLowAlarms=wfStaThresholdLowAlarms, wfStaThresholdMediumAlarms=wfStaThresholdMediumAlarms, wfStaThresholdHighExceptions=wfStaThresholdHighExceptions, wfStaThresholdCurrentValue=wfStaThresholdCurrentValue, wfStaThresholdEntry=wfStaThresholdEntry, wfSta=wfSta, wfStaThresholdLowEventLevel=wfStaThresholdLowEventLevel, wfStaPollInterval=wfStaPollInterval, wfStaThresholdHighEventLevel=wfStaThresholdHighEventLevel, wfStaThresholdLowExceptions=wfStaThresholdLowExceptions, wfStaThresholdHighAlarms=wfStaThresholdHighAlarms, wfStaThresholdLabel=wfStaThresholdLabel, wfStaThresholdMediumExceptions=wfStaThresholdMediumExceptions, wfStaThresholdObject=wfStaThresholdObject, wfStaThresholdHoldDownIntervals=wfStaThresholdHoldDownIntervals, wfStaThresholdHighValue=wfStaThresholdHighValue)
