#
# PySNMP MIB module ENERGY-OBJECT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENERGY-OBJECT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:48:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
PowerStateSet, = mibBuilder.importSymbols("IANAPowerStateSet-MIB", "PowerStateSet")
OwnerString, = mibBuilder.importSymbols("RMON-MIB", "OwnerString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, Bits, Unsigned32, Counter32, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, mib_2, Integer32, iso, IpAddress, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "Bits", "Unsigned32", "Counter32", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "mib-2", "Integer32", "iso", "IpAddress", "MibIdentifier", "Counter64")
DisplayString, RowStatus, TimeStamp, StorageType, TextualConvention, TruthValue, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TimeStamp", "StorageType", "TextualConvention", "TruthValue", "TimeInterval")
energyObjectMib = ModuleIdentity((1, 3, 6, 1, 2, 1, 229))
energyObjectMib.setRevisions(('2015-02-09 00:00',))
if mibBuilder.loadTexts: energyObjectMib.setLastUpdated('201502090000Z')
if mibBuilder.loadTexts: energyObjectMib.setOrganization('IETF EMAN Working Group')
energyObjectMibNotifs = MibIdentifier((1, 3, 6, 1, 2, 1, 229, 0))
energyObjectMibObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 229, 1))
energyObjectMibConform = MibIdentifier((1, 3, 6, 1, 2, 1, 229, 2))
class UnitMultiplier(TextualConvention, Integer32):
    reference = 'The International System of Units (SI), National Institute of Standards and Technology, Spec. Publ. 330, August 1991.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(-24, -21, -18, -15, -12, -9, -6, -3, 0, 3, 6, 9, 12, 15, 18, 21, 24))
    namedValues = NamedValues(("yocto", -24), ("zepto", -21), ("atto", -18), ("femto", -15), ("pico", -12), ("nano", -9), ("micro", -6), ("milli", -3), ("units", 0), ("kilo", 3), ("mega", 6), ("giga", 9), ("tera", 12), ("peta", 15), ("exa", 18), ("zetta", 21), ("yotta", 24))

eoMeterCapabilitiesTable = MibTable((1, 3, 6, 1, 2, 1, 229, 1, 1), )
if mibBuilder.loadTexts: eoMeterCapabilitiesTable.setStatus('current')
eoMeterCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 2, 1, 229, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: eoMeterCapabilitiesEntry.setStatus('current')
eoMeterCapability = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("none", 0), ("powermetering", 1), ("energymetering", 2), ("powerattributes", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoMeterCapability.setStatus('current')
eoPowerTable = MibTable((1, 3, 6, 1, 2, 1, 229, 1, 2), )
if mibBuilder.loadTexts: eoPowerTable.setStatus('current')
eoPowerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 229, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: eoPowerEntry.setStatus('current')
eoPower = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 1), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPower.setStatus('current')
eoPowerNameplate = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 2), Unsigned32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerNameplate.setStatus('current')
eoPowerUnitMultiplier = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 3), UnitMultiplier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerUnitMultiplier.setStatus('current')
eoPowerAccuracy = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerAccuracy.setStatus('current')
eoPowerMeasurementCaliber = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unavailable", 1), ("unknown", 2), ("actual", 3), ("estimated", 4), ("static", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerMeasurementCaliber.setStatus('current')
eoPowerCurrentType = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ac", 1), ("dc", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerCurrentType.setStatus('current')
eoPowerMeasurementLocal = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerMeasurementLocal.setStatus('current')
eoPowerAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 8), PowerStateSet()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eoPowerAdminState.setStatus('current')
eoPowerOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 9), PowerStateSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerOperState.setStatus('current')
eoPowerStateEnterReason = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 2, 1, 10), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eoPowerStateEnterReason.setStatus('current')
eoPowerStateTable = MibTable((1, 3, 6, 1, 2, 1, 229, 1, 3), )
if mibBuilder.loadTexts: eoPowerStateTable.setStatus('current')
eoPowerStateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 229, 1, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "ENERGY-OBJECT-MIB", "eoPowerStateIndex"))
if mibBuilder.loadTexts: eoPowerStateEntry.setStatus('current')
eoPowerStateIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 3, 1, 1), PowerStateSet())
if mibBuilder.loadTexts: eoPowerStateIndex.setStatus('current')
eoPowerStateMaxPower = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 3, 1, 2), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerStateMaxPower.setStatus('current')
eoPowerStatePowerUnitMultiplier = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 3, 1, 3), UnitMultiplier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerStatePowerUnitMultiplier.setStatus('current')
eoPowerStateTotalTime = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerStateTotalTime.setStatus('current')
eoPowerStateEnterCount = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoPowerStateEnterCount.setStatus('current')
eoEnergyParametersTable = MibTable((1, 3, 6, 1, 2, 1, 229, 1, 4), )
if mibBuilder.loadTexts: eoEnergyParametersTable.setStatus('current')
eoEnergyParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 229, 1, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "ENERGY-OBJECT-MIB", "eoEnergyParametersIndex"))
if mibBuilder.loadTexts: eoEnergyParametersEntry.setStatus('current')
eoEnergyParametersIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: eoEnergyParametersIndex.setStatus('current')
eoEnergyParametersIntervalLength = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 4, 1, 3), TimeInterval().clone(90000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eoEnergyParametersIntervalLength.setStatus('current')
eoEnergyParametersIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 4, 1, 4), Unsigned32().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eoEnergyParametersIntervalNumber.setStatus('current')
eoEnergyParametersIntervalMode = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("period", 1), ("sliding", 2), ("total", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eoEnergyParametersIntervalMode.setStatus('current')
eoEnergyParametersIntervalWindow = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 4, 1, 6), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eoEnergyParametersIntervalWindow.setStatus('current')
eoEnergyParametersSampleRate = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 4, 1, 7), Unsigned32().clone(1000)).setUnits('Milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: eoEnergyParametersSampleRate.setStatus('current')
eoEnergyParametersStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 4, 1, 8), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eoEnergyParametersStorageType.setStatus('current')
eoEnergyParametersStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eoEnergyParametersStatus.setStatus('current')
eoEnergyTable = MibTable((1, 3, 6, 1, 2, 1, 229, 1, 5), )
if mibBuilder.loadTexts: eoEnergyTable.setStatus('current')
eoEnergyEntry = MibTableRow((1, 3, 6, 1, 2, 1, 229, 1, 5, 1), ).setIndexNames((0, "ENERGY-OBJECT-MIB", "eoEnergyParametersIndex"), (0, "ENERGY-OBJECT-MIB", "eoEnergyCollectionStartTime"))
if mibBuilder.loadTexts: eoEnergyEntry.setStatus('current')
eoEnergyCollectionStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 1), TimeTicks()).setUnits('hundredths of a second')
if mibBuilder.loadTexts: eoEnergyCollectionStartTime.setStatus('current')
eoEnergyConsumed = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 2), Unsigned32()).setUnits('Watt-hours').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoEnergyConsumed.setStatus('current')
eoEnergyProvided = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 3), Unsigned32()).setUnits('Watt-hours').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoEnergyProvided.setStatus('current')
eoEnergyStored = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 4), Unsigned32()).setUnits('Watt-hours').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoEnergyStored.setStatus('current')
eoEnergyUnitMultiplier = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 5), UnitMultiplier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoEnergyUnitMultiplier.setStatus('current')
eoEnergyAccuracy = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoEnergyAccuracy.setStatus('current')
eoEnergyMaxConsumed = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 7), Unsigned32()).setUnits('Watt-hours').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoEnergyMaxConsumed.setStatus('current')
eoEnergyMaxProduced = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 8), Unsigned32()).setUnits('Watt-hours').setMaxAccess("readonly")
if mibBuilder.loadTexts: eoEnergyMaxProduced.setStatus('current')
eoEnergyDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 229, 1, 5, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eoEnergyDiscontinuityTime.setStatus('current')
eoPowerEnableStatusNotification = MibScalar((1, 3, 6, 1, 2, 1, 229, 0, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eoPowerEnableStatusNotification.setStatus('current')
eoPowerStateChange = NotificationType((1, 3, 6, 1, 2, 1, 229, 0, 2)).setObjects(("ENERGY-OBJECT-MIB", "eoPowerAdminState"), ("ENERGY-OBJECT-MIB", "eoPowerOperState"), ("ENERGY-OBJECT-MIB", "eoPowerStateEnterReason"))
if mibBuilder.loadTexts: eoPowerStateChange.setStatus('current')
energyObjectMibCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 229, 2, 1))
energyObjectMibGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 229, 2, 2))
energyObjectMibFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 229, 2, 1, 1)).setObjects(("ENERGY-OBJECT-MIB", "energyObjectMibTableGroup"), ("ENERGY-OBJECT-MIB", "energyObjectMibStateTableGroup"), ("ENERGY-OBJECT-MIB", "eoPowerEnableStatusNotificationGroup"), ("ENERGY-OBJECT-MIB", "energyObjectMibNotifGroup"), ("ENERGY-OBJECT-MIB", "energyObjectMibEnergyTableGroup"), ("ENERGY-OBJECT-MIB", "energyObjectMibEnergyParametersTableGroup"), ("ENERGY-OBJECT-MIB", "energyObjectMibMeterCapabilitiesTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    energyObjectMibFullCompliance = energyObjectMibFullCompliance.setStatus('current')
energyObjectMibReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 229, 2, 1, 2)).setObjects(("ENERGY-OBJECT-MIB", "energyObjectMibTableGroup"), ("ENERGY-OBJECT-MIB", "energyObjectMibStateTableGroup"), ("ENERGY-OBJECT-MIB", "energyObjectMibNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    energyObjectMibReadOnlyCompliance = energyObjectMibReadOnlyCompliance.setStatus('current')
energyObjectMibTableGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 229, 2, 2, 1)).setObjects(("ENERGY-OBJECT-MIB", "eoPower"), ("ENERGY-OBJECT-MIB", "eoPowerNameplate"), ("ENERGY-OBJECT-MIB", "eoPowerUnitMultiplier"), ("ENERGY-OBJECT-MIB", "eoPowerAccuracy"), ("ENERGY-OBJECT-MIB", "eoPowerMeasurementCaliber"), ("ENERGY-OBJECT-MIB", "eoPowerCurrentType"), ("ENERGY-OBJECT-MIB", "eoPowerMeasurementLocal"), ("ENERGY-OBJECT-MIB", "eoPowerAdminState"), ("ENERGY-OBJECT-MIB", "eoPowerOperState"), ("ENERGY-OBJECT-MIB", "eoPowerStateEnterReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    energyObjectMibTableGroup = energyObjectMibTableGroup.setStatus('current')
energyObjectMibStateTableGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 229, 2, 2, 2)).setObjects(("ENERGY-OBJECT-MIB", "eoPowerStateMaxPower"), ("ENERGY-OBJECT-MIB", "eoPowerStatePowerUnitMultiplier"), ("ENERGY-OBJECT-MIB", "eoPowerStateTotalTime"), ("ENERGY-OBJECT-MIB", "eoPowerStateEnterCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    energyObjectMibStateTableGroup = energyObjectMibStateTableGroup.setStatus('current')
energyObjectMibEnergyParametersTableGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 229, 2, 2, 3)).setObjects(("ENERGY-OBJECT-MIB", "eoEnergyParametersIntervalLength"), ("ENERGY-OBJECT-MIB", "eoEnergyParametersIntervalNumber"), ("ENERGY-OBJECT-MIB", "eoEnergyParametersIntervalMode"), ("ENERGY-OBJECT-MIB", "eoEnergyParametersIntervalWindow"), ("ENERGY-OBJECT-MIB", "eoEnergyParametersSampleRate"), ("ENERGY-OBJECT-MIB", "eoEnergyParametersStorageType"), ("ENERGY-OBJECT-MIB", "eoEnergyParametersStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    energyObjectMibEnergyParametersTableGroup = energyObjectMibEnergyParametersTableGroup.setStatus('current')
energyObjectMibEnergyTableGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 229, 2, 2, 4)).setObjects(("ENERGY-OBJECT-MIB", "eoEnergyConsumed"), ("ENERGY-OBJECT-MIB", "eoEnergyProvided"), ("ENERGY-OBJECT-MIB", "eoEnergyStored"), ("ENERGY-OBJECT-MIB", "eoEnergyUnitMultiplier"), ("ENERGY-OBJECT-MIB", "eoEnergyAccuracy"), ("ENERGY-OBJECT-MIB", "eoEnergyMaxConsumed"), ("ENERGY-OBJECT-MIB", "eoEnergyMaxProduced"), ("ENERGY-OBJECT-MIB", "eoEnergyDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    energyObjectMibEnergyTableGroup = energyObjectMibEnergyTableGroup.setStatus('current')
energyObjectMibMeterCapabilitiesTableGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 229, 2, 2, 5)).setObjects(("ENERGY-OBJECT-MIB", "eoMeterCapability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    energyObjectMibMeterCapabilitiesTableGroup = energyObjectMibMeterCapabilitiesTableGroup.setStatus('current')
eoPowerEnableStatusNotificationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 229, 2, 2, 6)).setObjects(("ENERGY-OBJECT-MIB", "eoPowerEnableStatusNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eoPowerEnableStatusNotificationGroup = eoPowerEnableStatusNotificationGroup.setStatus('current')
energyObjectMibNotifGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 229, 2, 2, 7)).setObjects(("ENERGY-OBJECT-MIB", "eoPowerStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    energyObjectMibNotifGroup = energyObjectMibNotifGroup.setStatus('current')
mibBuilder.exportSymbols("ENERGY-OBJECT-MIB", eoPowerStatePowerUnitMultiplier=eoPowerStatePowerUnitMultiplier, PYSNMP_MODULE_ID=energyObjectMib, eoEnergyMaxProduced=eoEnergyMaxProduced, eoEnergyEntry=eoEnergyEntry, energyObjectMibStateTableGroup=energyObjectMibStateTableGroup, eoPowerAccuracy=eoPowerAccuracy, eoMeterCapabilitiesTable=eoMeterCapabilitiesTable, eoPowerStateTable=eoPowerStateTable, eoEnergyDiscontinuityTime=eoEnergyDiscontinuityTime, energyObjectMibFullCompliance=energyObjectMibFullCompliance, energyObjectMibTableGroup=energyObjectMibTableGroup, eoPowerStateEntry=eoPowerStateEntry, eoPowerEnableStatusNotification=eoPowerEnableStatusNotification, eoPowerNameplate=eoPowerNameplate, energyObjectMibNotifGroup=energyObjectMibNotifGroup, energyObjectMibCompliances=energyObjectMibCompliances, energyObjectMibConform=energyObjectMibConform, eoPowerUnitMultiplier=eoPowerUnitMultiplier, eoEnergyMaxConsumed=eoEnergyMaxConsumed, energyObjectMibObjects=energyObjectMibObjects, eoPowerTable=eoPowerTable, UnitMultiplier=UnitMultiplier, eoPowerStateEnterCount=eoPowerStateEnterCount, eoEnergyProvided=eoEnergyProvided, eoEnergyStored=eoEnergyStored, eoPowerMeasurementCaliber=eoPowerMeasurementCaliber, eoEnergyAccuracy=eoEnergyAccuracy, eoPowerEnableStatusNotificationGroup=eoPowerEnableStatusNotificationGroup, energyObjectMibEnergyParametersTableGroup=energyObjectMibEnergyParametersTableGroup, energyObjectMibNotifs=energyObjectMibNotifs, eoPowerEntry=eoPowerEntry, eoPowerMeasurementLocal=eoPowerMeasurementLocal, eoMeterCapabilitiesEntry=eoMeterCapabilitiesEntry, eoPowerStateEnterReason=eoPowerStateEnterReason, energyObjectMibMeterCapabilitiesTableGroup=energyObjectMibMeterCapabilitiesTableGroup, eoEnergyParametersIndex=eoEnergyParametersIndex, eoPowerStateIndex=eoPowerStateIndex, eoEnergyParametersStatus=eoEnergyParametersStatus, eoEnergyParametersIntervalNumber=eoEnergyParametersIntervalNumber, eoEnergyTable=eoEnergyTable, eoPowerAdminState=eoPowerAdminState, eoPowerStateChange=eoPowerStateChange, eoEnergyParametersIntervalLength=eoEnergyParametersIntervalLength, eoEnergyUnitMultiplier=eoEnergyUnitMultiplier, energyObjectMibReadOnlyCompliance=energyObjectMibReadOnlyCompliance, eoEnergyCollectionStartTime=eoEnergyCollectionStartTime, eoPowerStateMaxPower=eoPowerStateMaxPower, eoEnergyParametersIntervalMode=eoEnergyParametersIntervalMode, eoEnergyParametersSampleRate=eoEnergyParametersSampleRate, eoPower=eoPower, energyObjectMibEnergyTableGroup=energyObjectMibEnergyTableGroup, eoEnergyParametersTable=eoEnergyParametersTable, eoPowerOperState=eoPowerOperState, energyObjectMib=energyObjectMib, eoEnergyParametersStorageType=eoEnergyParametersStorageType, energyObjectMibGroups=energyObjectMibGroups, eoMeterCapability=eoMeterCapability, eoEnergyParametersIntervalWindow=eoEnergyParametersIntervalWindow, eoEnergyConsumed=eoEnergyConsumed, eoPowerStateTotalTime=eoPowerStateTotalTime, eoEnergyParametersEntry=eoEnergyParametersEntry, eoPowerCurrentType=eoPowerCurrentType)
