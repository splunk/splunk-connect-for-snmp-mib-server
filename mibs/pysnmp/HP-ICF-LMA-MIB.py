#
# PySNMP MIB module HP-ICF-LMA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-LMA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
HpAutzUserRoleName, = mibBuilder.importSymbols("HP-AUTZ-MIB", "HpAutzUserRoleName")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
VidList, = mibBuilder.importSymbols("HP-ICF-TC", "VidList")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, Unsigned32, ModuleIdentity, TimeTicks, Counter64, NotificationType, Gauge32, Counter32, ObjectIdentity, iso, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "ModuleIdentity", "TimeTicks", "Counter64", "NotificationType", "Gauge32", "Counter32", "ObjectIdentity", "iso", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TruthValue, DisplayString, MacAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "MacAddress", "TextualConvention", "RowStatus")
hpicfLmaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97))
hpicfLmaMIB.setRevisions(('2017-06-28 07:10', '2016-02-12 07:10', '2013-04-10 09:00',))
if mibBuilder.loadTexts: hpicfLmaMIB.setLastUpdated('201706280710Z')
if mibBuilder.loadTexts: hpicfLmaMIB.setOrganization('HP Networking')
hpicfLmaNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 0))
hpicfLmaObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1))
hpicfLmaConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2))
hpicfLmaConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1))
hpicfLmaStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2))
hpicfLmaScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 1))
hpicfLmaMacGrpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 2), )
if mibBuilder.loadTexts: hpicfLmaMacGrpTable.setStatus('current')
hpicfLmaMacGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 2, 1), ).setIndexNames((0, "HP-ICF-LMA-MIB", "hpicfLmaMacGrpName"))
if mibBuilder.loadTexts: hpicfLmaMacGrpEntry.setStatus('current')
hpicfLmaMacGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpicfLmaMacGrpName.setStatus('current')
hpicfLmaMacGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfLmaMacGrpRowStatus.setStatus('current')
hpicfLmaMacTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 3), )
if mibBuilder.loadTexts: hpicfLmaMacTable.setStatus('current')
hpicfLmaMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 3, 1), ).setIndexNames((0, "HP-ICF-LMA-MIB", "hpicfLmaMacGrpName"), (0, "HP-ICF-LMA-MIB", "hpicfLmaMacType"), (0, "HP-ICF-LMA-MIB", "hpicfLmaMacValue"))
if mibBuilder.loadTexts: hpicfLmaMacEntry.setStatus('current')
hpicfLmaMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("macAddress", 1), ("macMask", 2), ("macOui", 3))))
if mibBuilder.loadTexts: hpicfLmaMacType.setStatus('current')
hpicfLmaMacValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 6)))
if mibBuilder.loadTexts: hpicfLmaMacValue.setStatus('current')
hpicfLmaMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfLmaMacRowStatus.setStatus('current')
hpicfLmaProfileTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 4), )
if mibBuilder.loadTexts: hpicfLmaProfileTable.setStatus('current')
hpicfLmaProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 4, 1), ).setIndexNames((0, "HP-ICF-LMA-MIB", "hpicfLmaProfileName"))
if mibBuilder.loadTexts: hpicfLmaProfileEntry.setStatus('current')
hpicfLmaProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpicfLmaProfileName.setStatus('current')
hpicfLmaProfileUntaggedVid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfLmaProfileUntaggedVid.setStatus('current')
hpicfLmaProfileTaggedVids = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 4, 1, 3), VidList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfLmaProfileTaggedVids.setStatus('current')
hpicfLmaProfileCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfLmaProfileCoS.setStatus('current')
hpicfLmaProfileIsAssociated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfLmaProfileIsAssociated.setStatus('current')
hpicfLmaProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfLmaProfileRowStatus.setStatus('current')
hpicfLmaAssociationTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 5), )
if mibBuilder.loadTexts: hpicfLmaAssociationTable.setStatus('current')
hpicfLmaAssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 5, 1), ).setIndexNames((0, "HP-ICF-LMA-MIB", "hpicfLmaProfileName"), (0, "HP-ICF-LMA-MIB", "hpicfLmaAssociationMacType"), (0, "HP-ICF-LMA-MIB", "hpicfLmaAssociationMacValue"))
if mibBuilder.loadTexts: hpicfLmaAssociationEntry.setStatus('current')
hpicfLmaAssociationMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("macGrp", 0), ("macAddress", 1), ("macMask", 2), ("macOui", 3))))
if mibBuilder.loadTexts: hpicfLmaAssociationMacType.setStatus('current')
hpicfLmaAssociationMacValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpicfLmaAssociationMacValue.setStatus('current')
hpicfLmaAssociationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfLmaAssociationRowStatus.setStatus('current')
hpicfLmaConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6), )
if mibBuilder.loadTexts: hpicfLmaConfigTable.setStatus('current')
hpicfLmaConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1), ).setIndexNames((0, "HP-ICF-LMA-MIB", "hpicfLmaPortNumber"))
if mibBuilder.loadTexts: hpicfLmaConfigEntry.setStatus('current')
hpicfLmaPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpicfLmaPortNumber.setStatus('current')
hpicfLmaClientLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfLmaClientLimit.setStatus('current')
hpicfLmaQuietPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfLmaQuietPeriod.setStatus('current')
hpicfLmaLogoffPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999999)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfLmaLogoffPeriod.setStatus('current')
hpicfLmaAuthVid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfLmaAuthVid.setStatus('current')
hpicfLmaUnauthVid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfLmaUnauthVid.setStatus('current')
hpicfLmaUnAuthPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfLmaUnAuthPeriod.setStatus('current')
hpicfLmaReauthenticate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfLmaReauthenticate.setStatus('current')
hpicfLmaMacPin = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 6, 1, 11), TruthValue().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfLmaMacPin.setStatus('current')
hpicfLmaUserRoleAssociationTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 7), )
if mibBuilder.loadTexts: hpicfLmaUserRoleAssociationTable.setStatus('current')
hpicfLmaUserRoleAssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 7, 1), ).setIndexNames((0, "HP-ICF-LMA-MIB", "hpicfLmaUserRoleAssociationName"), (0, "HP-ICF-LMA-MIB", "hpicfLmaUserRoleAssociationMacType"), (0, "HP-ICF-LMA-MIB", "hpicfLmaUserRoleAssociationMacValue"))
if mibBuilder.loadTexts: hpicfLmaUserRoleAssociationEntry.setStatus('current')
hpicfLmaUserRoleAssociationName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 7, 1, 1), HpAutzUserRoleName())
if mibBuilder.loadTexts: hpicfLmaUserRoleAssociationName.setStatus('current')
hpicfLmaUserRoleAssociationMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("macGrp", 0), ("macAddress", 1), ("macMask", 2), ("macOui", 3))))
if mibBuilder.loadTexts: hpicfLmaUserRoleAssociationMacType.setStatus('current')
hpicfLmaUserRoleAssociationMacValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpicfLmaUserRoleAssociationMacValue.setStatus('current')
hpicfLmaUserRoleAssociationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 1, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfLmaUserRoleAssociationRowStatus.setStatus('current')
hpicfLmaAssocActiveTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 2), )
if mibBuilder.loadTexts: hpicfLmaAssocActiveTable.setStatus('current')
hpicfLmaAssocActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 2, 1), ).setIndexNames((0, "HP-ICF-LMA-MIB", "hpicfLmaAssocActiveProfileName"), (0, "HP-ICF-LMA-MIB", "hpicfLmaAssocActiveMacAddress"))
if mibBuilder.loadTexts: hpicfLmaAssocActiveEntry.setStatus('current')
hpicfLmaAssocActiveProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpicfLmaAssocActiveProfileName.setStatus('current')
hpicfLmaAssocActiveMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfLmaAssocActiveMacAddress.setStatus('current')
hpicfLmaSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1), )
if mibBuilder.loadTexts: hpicfLmaSessionStatsTable.setStatus('current')
hpicfLmaSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1, 1), ).setIndexNames((0, "HP-ICF-LMA-MIB", "hpicfLmaPortNumber"), (0, "HP-ICF-LMA-MIB", "hpicfLmaSessionMacAddr"))
if mibBuilder.loadTexts: hpicfLmaSessionStatsEntry.setStatus('current')
hpicfLmaSessionMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpicfLmaSessionMacAddr.setStatus('current')
hpicfLmaSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("authenticated", 1), ("unauthenticated", 2), ("authenticating", 3), ("authReqRejectNoVlan", 4), ("authReqRejectUnauthVlan", 5), ("authReqTimeoutNoVlan", 6), ("authReqTimeoutUnauthVlan", 7), ("initialRole", 8), ("initialRoleFailed", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfLmaSessionState.setStatus('current')
hpicfLmaSessionStateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfLmaSessionStateTime.setStatus('current')
hpicfLmaSessionAuthVid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfLmaSessionAuthVid.setStatus('current')
hpicfLmaSessionUnauthVid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfLmaSessionUnauthVid.setStatus('current')
hpicfLmaSessionUsrNumberCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfLmaSessionUsrNumberCnt.setStatus('current')
hpicfLmaSessionUserRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 1, 2, 1, 1, 7), HpAutzUserRoleName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfLmaSessionUserRole.setStatus('current')
hpicfLmaCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 1))
hpicfLmaGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 2))
hpicfLmaCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 1, 1)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaMacGroup"), ("HP-ICF-LMA-MIB", "hpicfLmaConfigGroup"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaCompliance1 = hpicfLmaCompliance1.setStatus('deprecated')
hpicfLmaCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 1, 2)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaMacGroup1"), ("HP-ICF-LMA-MIB", "hpicfLmaConfigGroup1"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionStatsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaCompliance2 = hpicfLmaCompliance2.setStatus('deprecated')
hpicfLmaCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 1, 3)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaMacGroup1"), ("HP-ICF-LMA-MIB", "hpicfLmaConfigGroup2"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionStatsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaCompliance3 = hpicfLmaCompliance3.setStatus('current')
hpicfLmaMacGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 2, 1)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaMacGrpRowStatus"), ("HP-ICF-LMA-MIB", "hpicfLmaMacRowStatus"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileUntaggedVid"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileTaggedVids"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileCoS"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileIsAssociated"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileRowStatus"), ("HP-ICF-LMA-MIB", "hpicfLmaAssociationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaMacGroup = hpicfLmaMacGroup.setStatus('deprecated')
hpicfLmaConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 2, 2)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaClientLimit"), ("HP-ICF-LMA-MIB", "hpicfLmaQuietPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaLogoffPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaAuthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaUnauthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaUnAuthPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaReauthenticate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaConfigGroup = hpicfLmaConfigGroup.setStatus('deprecated')
hpicfLmaSessionStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 2, 3)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaAssocActiveMacAddress"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionState"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionStateTime"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionAuthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionUnauthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionUsrNumberCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaSessionStatsGroup = hpicfLmaSessionStatsGroup.setStatus('deprecated')
hpicfLmaMacGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 2, 4)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaMacGrpRowStatus"), ("HP-ICF-LMA-MIB", "hpicfLmaMacRowStatus"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileUntaggedVid"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileTaggedVids"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileCoS"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileIsAssociated"), ("HP-ICF-LMA-MIB", "hpicfLmaProfileRowStatus"), ("HP-ICF-LMA-MIB", "hpicfLmaAssociationRowStatus"), ("HP-ICF-LMA-MIB", "hpicfLmaUserRoleAssociationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaMacGroup1 = hpicfLmaMacGroup1.setStatus('current')
hpicfLmaConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 2, 5)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaClientLimit"), ("HP-ICF-LMA-MIB", "hpicfLmaQuietPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaLogoffPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaAuthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaUnauthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaUnAuthPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaReauthenticate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaConfigGroup1 = hpicfLmaConfigGroup1.setStatus('deprecated')
hpicfLmaSessionStatsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 2, 6)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaAssocActiveMacAddress"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionState"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionStateTime"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionAuthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionUnauthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionUsrNumberCnt"), ("HP-ICF-LMA-MIB", "hpicfLmaSessionUserRole"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaSessionStatsGroup1 = hpicfLmaSessionStatsGroup1.setStatus('current')
hpicfLmaConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 97, 2, 2, 7)).setObjects(("HP-ICF-LMA-MIB", "hpicfLmaClientLimit"), ("HP-ICF-LMA-MIB", "hpicfLmaQuietPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaLogoffPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaAuthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaUnauthVid"), ("HP-ICF-LMA-MIB", "hpicfLmaUnAuthPeriod"), ("HP-ICF-LMA-MIB", "hpicfLmaReauthenticate"), ("HP-ICF-LMA-MIB", "hpicfLmaMacPin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfLmaConfigGroup2 = hpicfLmaConfigGroup2.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-LMA-MIB", hpicfLmaObjects=hpicfLmaObjects, PYSNMP_MODULE_ID=hpicfLmaMIB, hpicfLmaMacTable=hpicfLmaMacTable, hpicfLmaAssociationMacType=hpicfLmaAssociationMacType, hpicfLmaSessionAuthVid=hpicfLmaSessionAuthVid, hpicfLmaCompliances=hpicfLmaCompliances, hpicfLmaMIB=hpicfLmaMIB, hpicfLmaGroups=hpicfLmaGroups, hpicfLmaConfigTable=hpicfLmaConfigTable, hpicfLmaCompliance1=hpicfLmaCompliance1, hpicfLmaConfigEntry=hpicfLmaConfigEntry, hpicfLmaUserRoleAssociationRowStatus=hpicfLmaUserRoleAssociationRowStatus, hpicfLmaClientLimit=hpicfLmaClientLimit, hpicfLmaLogoffPeriod=hpicfLmaLogoffPeriod, hpicfLmaMacPin=hpicfLmaMacPin, hpicfLmaSessionUsrNumberCnt=hpicfLmaSessionUsrNumberCnt, hpicfLmaUserRoleAssociationEntry=hpicfLmaUserRoleAssociationEntry, hpicfLmaMacGrpRowStatus=hpicfLmaMacGrpRowStatus, hpicfLmaConfigObjects=hpicfLmaConfigObjects, hpicfLmaMacValue=hpicfLmaMacValue, hpicfLmaCompliance2=hpicfLmaCompliance2, hpicfLmaQuietPeriod=hpicfLmaQuietPeriod, hpicfLmaProfileTable=hpicfLmaProfileTable, hpicfLmaUserRoleAssociationTable=hpicfLmaUserRoleAssociationTable, hpicfLmaAssocActiveEntry=hpicfLmaAssocActiveEntry, hpicfLmaCompliance3=hpicfLmaCompliance3, hpicfLmaConfigGroup=hpicfLmaConfigGroup, hpicfLmaAssocActiveProfileName=hpicfLmaAssocActiveProfileName, hpicfLmaSessionUserRole=hpicfLmaSessionUserRole, hpicfLmaSessionStatsGroup=hpicfLmaSessionStatsGroup, hpicfLmaUserRoleAssociationMacValue=hpicfLmaUserRoleAssociationMacValue, hpicfLmaSessionMacAddr=hpicfLmaSessionMacAddr, hpicfLmaUserRoleAssociationName=hpicfLmaUserRoleAssociationName, hpicfLmaConfigGroup1=hpicfLmaConfigGroup1, hpicfLmaAssociationRowStatus=hpicfLmaAssociationRowStatus, hpicfLmaMacGrpEntry=hpicfLmaMacGrpEntry, hpicfLmaProfileName=hpicfLmaProfileName, hpicfLmaMacGroup=hpicfLmaMacGroup, hpicfLmaSessionStatsGroup1=hpicfLmaSessionStatsGroup1, hpicfLmaStatsObjects=hpicfLmaStatsObjects, hpicfLmaUnAuthPeriod=hpicfLmaUnAuthPeriod, hpicfLmaSessionStatsTable=hpicfLmaSessionStatsTable, hpicfLmaProfileTaggedVids=hpicfLmaProfileTaggedVids, hpicfLmaMacGrpName=hpicfLmaMacGrpName, hpicfLmaProfileCoS=hpicfLmaProfileCoS, hpicfLmaNotifications=hpicfLmaNotifications, hpicfLmaProfileUntaggedVid=hpicfLmaProfileUntaggedVid, hpicfLmaPortNumber=hpicfLmaPortNumber, hpicfLmaSessionUnauthVid=hpicfLmaSessionUnauthVid, hpicfLmaSessionStatsEntry=hpicfLmaSessionStatsEntry, hpicfLmaReauthenticate=hpicfLmaReauthenticate, hpicfLmaUserRoleAssociationMacType=hpicfLmaUserRoleAssociationMacType, hpicfLmaAssocActiveMacAddress=hpicfLmaAssocActiveMacAddress, hpicfLmaMacEntry=hpicfLmaMacEntry, hpicfLmaMacType=hpicfLmaMacType, hpicfLmaAssociationMacValue=hpicfLmaAssociationMacValue, hpicfLmaUnauthVid=hpicfLmaUnauthVid, hpicfLmaSessionStateTime=hpicfLmaSessionStateTime, hpicfLmaConformance=hpicfLmaConformance, hpicfLmaAssociationTable=hpicfLmaAssociationTable, hpicfLmaAssociationEntry=hpicfLmaAssociationEntry, hpicfLmaMacGrpTable=hpicfLmaMacGrpTable, hpicfLmaProfileRowStatus=hpicfLmaProfileRowStatus, hpicfLmaScalarObjects=hpicfLmaScalarObjects, hpicfLmaProfileIsAssociated=hpicfLmaProfileIsAssociated, hpicfLmaMacRowStatus=hpicfLmaMacRowStatus, hpicfLmaMacGroup1=hpicfLmaMacGroup1, hpicfLmaProfileEntry=hpicfLmaProfileEntry, hpicfLmaAssocActiveTable=hpicfLmaAssocActiveTable, hpicfLmaConfigGroup2=hpicfLmaConfigGroup2, hpicfLmaAuthVid=hpicfLmaAuthVid, hpicfLmaSessionState=hpicfLmaSessionState)
