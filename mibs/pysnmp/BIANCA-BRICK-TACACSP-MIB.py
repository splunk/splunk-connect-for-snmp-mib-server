#
# PySNMP MIB module BIANCA-BRICK-TACACSP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-TACACSP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, IpAddress, Bits, enterprises, Integer32, ModuleIdentity, iso, ObjectIdentity, Unsigned32, MibIdentifier, NotificationType, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "IpAddress", "Bits", "enterprises", "Integer32", "ModuleIdentity", "iso", "ObjectIdentity", "Unsigned32", "MibIdentifier", "NotificationType", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bintecsec = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 254))
tacacsp = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 254, 13))
tacacspServerTable = MibTable((1, 3, 6, 1, 4, 1, 272, 254, 13, 1), )
if mibBuilder.loadTexts: tacacspServerTable.setStatus('mandatory')
tacacspServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-TACACSP-MIB", "tacacspSrvPriority"))
if mibBuilder.loadTexts: tacacspServerEntry.setStatus('mandatory')
tacacspSrvPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvPriority.setStatus('mandatory')
tacacspSrvAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvAddress.setStatus('mandatory')
tacacspSrvTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 3), Integer32().clone(49)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacacspSrvTcpPort.setStatus('mandatory')
tacacspSrvSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvSecret.setStatus('mandatory')
tacacspSrvTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvTimeout.setStatus('mandatory')
tacacspSrvAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("delete", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvAdminStatus.setStatus('mandatory')
tacacspSrvOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("blocked", 2), ("down", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tacacspSrvOperStatus.setStatus('mandatory')
tacacspSrvPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("authoritative", 1), ("non-authoritative", 2))).clone('non-authoritative')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvPolicy.setStatus('mandatory')
tacacspSrvEncrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("encrypt", 1), ("cleartext", 2))).clone('encrypt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvEncrMode.setStatus('mandatory')
tacacspSrvMultiSession = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvMultiSession.setStatus('mandatory')
tacacspSrvPppAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvPppAuth.setStatus('mandatory')
tacacspSrvLoginAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvLoginAuth.setStatus('mandatory')
tacacspSrvAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvAccounting.setStatus('mandatory')
tacacspSrvBlockTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvBlockTimeout.setStatus('mandatory')
tacacspSrvAuthentNoResp = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("connection-bydefault", 1), ("connection-bylocalloginpwd", 2), ("connection-forbidden", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvAuthentNoResp.setStatus('mandatory')
tacacspSrvAuthentNegResp = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("connection-bydefault", 1), ("connection-bylocalloginpwd", 2), ("connection-forbidden", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvAuthentNegResp.setStatus('mandatory')
tacacspSrvPrivLvlOnLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 254, 13, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tacacspSrvPrivLvlOnLogin.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-TACACSP-MIB", tacacspSrvTcpPort=tacacspSrvTcpPort, tacacspSrvPrivLvlOnLogin=tacacspSrvPrivLvlOnLogin, tacacspSrvBlockTimeout=tacacspSrvBlockTimeout, tacacspSrvAddress=tacacspSrvAddress, tacacspSrvEncrMode=tacacspSrvEncrMode, tacacspSrvAccounting=tacacspSrvAccounting, tacacspSrvSecret=tacacspSrvSecret, tacacspSrvAdminStatus=tacacspSrvAdminStatus, tacacspSrvLoginAuth=tacacspSrvLoginAuth, tacacspSrvPriority=tacacspSrvPriority, tacacspSrvMultiSession=tacacspSrvMultiSession, tacacspSrvOperStatus=tacacspSrvOperStatus, tacacspSrvAuthentNoResp=tacacspSrvAuthentNoResp, tacacspSrvTimeout=tacacspSrvTimeout, tacacspSrvAuthentNegResp=tacacspSrvAuthentNegResp, tacacspServerEntry=tacacspServerEntry, bintec=bintec, bintecsec=bintecsec, tacacspSrvPppAuth=tacacspSrvPppAuth, tacacspServerTable=tacacspServerTable, tacacsp=tacacsp, tacacspSrvPolicy=tacacspSrvPolicy)
