#
# PySNMP MIB module CISCO-DEVICE-EXCEPTION-REPORTING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DEVICE-EXCEPTION-REPORTING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:36:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, ModuleIdentity, iso, Gauge32, ObjectIdentity, Counter64, Counter32, MibIdentifier, Bits, IpAddress, NotificationType, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "iso", "Gauge32", "ObjectIdentity", "Counter64", "Counter32", "MibIdentifier", "Bits", "IpAddress", "NotificationType", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "TimeStamp")
ciscoDevExcepReportMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 224))
if mibBuilder.loadTexts: ciscoDevExcepReportMIB.setLastUpdated('200108140000Z')
if mibBuilder.loadTexts: ciscoDevExcepReportMIB.setOrganization('Cisco Systems, Inc.')
ciscoDevExcepReportMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 224, 1))
cderExceptionData = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1))
cderMaxExceptionRecords = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cderMaxExceptionRecords.setStatus('current')
cderNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cderNotificationEnabled.setStatus('current')
cderNotificationsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderNotificationsSent.setStatus('current')
cderNotificationsDropped = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderNotificationsDropped.setStatus('current')
cderExceptionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5), )
if mibBuilder.loadTexts: cderExceptionTable.setStatus('current')
cderExceptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepTableIndex"))
if mibBuilder.loadTexts: cderExceptionEntry.setStatus('current')
cderExcepTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cderExcepTableIndex.setStatus('current')
cderExcepId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderExcepId.setStatus('current')
cderExcepHostAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderExcepHostAddressType.setStatus('current')
cderExcepHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderExcepHostAddress.setStatus('current')
cderExcepPriorityDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderExcepPriorityDescription.setStatus('current')
cderExcepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderExcepTime.setStatus('current')
cderExcepData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderExcepData.setStatus('current')
cderExcepReportedBy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 224, 1, 1, 5, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cderExcepReportedBy.setStatus('current')
cderMIBNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 224, 2))
cderMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 224, 2, 0))
cderMonitoredExceptionEvent = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 224, 2, 0, 1)).setObjects(("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepId"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepHostAddressType"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepHostAddress"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepPriorityDescription"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepTime"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepData"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepReportedBy"))
if mibBuilder.loadTexts: cderMonitoredExceptionEvent.setStatus('current')
ciscoDEReportMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 224, 3))
ciscoDEReportMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 224, 3, 1))
ciscoDEReportMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 224, 3, 2))
ciscoDEReportMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 224, 3, 1, 1)).setObjects(("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "ciscoDERExceptionDataGroup"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "ciscoDERExceptionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDEReportMIBCompliance = ciscoDEReportMIBCompliance.setStatus('current')
ciscoDERExceptionDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 224, 3, 2, 1)).setObjects(("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderMaxExceptionRecords"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderNotificationEnabled"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderNotificationsSent"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderNotificationsDropped"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepId"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepHostAddressType"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepHostAddress"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepPriorityDescription"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepTime"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepData"), ("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderExcepReportedBy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDERExceptionDataGroup = ciscoDERExceptionDataGroup.setStatus('current')
ciscoDERExceptionGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 224, 3, 2, 2)).setObjects(("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", "cderMonitoredExceptionEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDERExceptionGroup = ciscoDERExceptionGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-DEVICE-EXCEPTION-REPORTING-MIB", cderExceptionEntry=cderExceptionEntry, ciscoDEReportMIBConformance=ciscoDEReportMIBConformance, cderExcepHostAddress=cderExcepHostAddress, ciscoDERExceptionDataGroup=ciscoDERExceptionDataGroup, cderNotificationsDropped=cderNotificationsDropped, cderExcepData=cderExcepData, cderExceptionTable=cderExceptionTable, cderMaxExceptionRecords=cderMaxExceptionRecords, ciscoDEReportMIBGroups=ciscoDEReportMIBGroups, cderNotificationEnabled=cderNotificationEnabled, PYSNMP_MODULE_ID=ciscoDevExcepReportMIB, ciscoDevExcepReportMIBObjects=ciscoDevExcepReportMIBObjects, cderMonitoredExceptionEvent=cderMonitoredExceptionEvent, cderExcepTime=cderExcepTime, cderMIBNotifications=cderMIBNotifications, ciscoDERExceptionGroup=ciscoDERExceptionGroup, ciscoDEReportMIBCompliance=ciscoDEReportMIBCompliance, cderExcepId=cderExcepId, cderNotificationsSent=cderNotificationsSent, ciscoDEReportMIBCompliances=ciscoDEReportMIBCompliances, cderExcepPriorityDescription=cderExcepPriorityDescription, ciscoDevExcepReportMIB=ciscoDevExcepReportMIB, cderExcepReportedBy=cderExcepReportedBy, cderMIBNotifPrefix=cderMIBNotifPrefix, cderExceptionData=cderExceptionData, cderExcepHostAddressType=cderExcepHostAddressType, cderExcepTableIndex=cderExcepTableIndex)
