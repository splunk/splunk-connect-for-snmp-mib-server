#
# PySNMP MIB module LIVINGSTON-PM4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIVINGSTON-PM4-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:56:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
lucentPM4, = mibBuilder.importSymbols("LIVINGSTON-ROOT-MIB", "lucentPM4")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, ModuleIdentity, NotificationType, Counter32, MibIdentifier, ObjectIdentity, Counter64, Integer32, TimeTicks, NotificationType, IpAddress, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "ModuleIdentity", "NotificationType", "Counter32", "MibIdentifier", "ObjectIdentity", "Counter64", "Integer32", "TimeTicks", "NotificationType", "IpAddress", "Unsigned32", "Gauge32")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
class PMUnitType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 255))
    namedValues = NamedValues(("mrgmodule", 1), ("quadt1", 2), ("trie1", 3), ("modem", 4), ("serialport", 5), ("ether0", 6), ("ether1", 7), ("console", 8), ("acpwrsup", 9), ("fan", 10), ("dcpwrsup", 11), ("allunits", 255))

class PMEquipPRIStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("up", 1), ("down", 2), ("loopback", 3), ("fault", 4))

class PMEquipStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("up", 1), ("down", 2), ("maintenance", 3), ("fault", 4), ("other", 5))

class PMDiagCmdStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("success", 1), ("fail", 2), ("inprogress", 3), ("notsupported", 4), ("aborted", 5), ("other", 6))

class PMDiagTestCntrl(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("normal", 1), ("start", 2), ("stop", 3), ("abort", 4))

class PMAlarmType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("informational", 1), ("warning", 2), ("minor", 3), ("major", 4), ("critical", 5))

lucentPM4Mib = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1))
lucentPM4Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2))
lucentPM4MibRev = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4MibRev.setStatus('mandatory')
lucentPM4SWRev = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SWRev.setStatus('mandatory')
lucentPM4Chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3))
lucentPM4ChasSummary = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(55, 55)).setFixedLength(55)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ChasSummary.setStatus('mandatory')
lucentPM4ChasCmdTable = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2), )
if mibBuilder.loadTexts: lucentPM4ChasCmdTable.setStatus('mandatory')
lucentPM4ChasCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4ChasCmdIndex"))
if mibBuilder.loadTexts: lucentPM4ChasCmdEntry.setStatus('mandatory')
lucentPM4ChasCmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4ChasCmdIndex.setStatus('mandatory')
lucentPM4ChasCmdBoardId = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4ChasCmdBoardId.setStatus('mandatory')
lucentPM4ChasCmdUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1, 3), PMUnitType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4ChasCmdUnitType.setStatus('mandatory')
lucentPM4ChasCmdUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4ChasCmdUnitIndex.setStatus('mandatory')
lucentPM4ChasCmdDevId = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4ChasCmdDevId.setStatus('mandatory')
lucentPM4ChasCmdId = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29))).clone(namedValues=NamedValues(("eraseflashfile", 1), ("eraseallflash", 2), ("saveall", 3), ("resetport", 4), ("resetfilter", 5), ("adduser", 6), ("deleteuser", 7), ("addlocation", 8), ("diallocation", 9), ("addfilter", 10), ("deletefilter", 11), ("addmodem", 12), ("resetvirtport", 13), ("addospfarea", 14), ("resetospf", 15), ("addprop", 16), ("deleteprop", 17), ("resetprop", 18), ("resetether0", 19), ("resetether1", 20), ("resetall", 21), ("resetconsole", 22), ("version", 23), ("traceroutes", 24), ("ptrace", 25), ("ifconfig", 26), ("eraseconfig", 27), ("erasecomos", 28), ("reboot", 29)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4ChasCmdId.setStatus('mandatory')
lucentPM4ChasCmdParams = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4ChasCmdParams.setStatus('mandatory')
lucentPM4ChasCmdResult = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 3, 2, 1, 8), PMDiagCmdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ChasCmdResult.setStatus('mandatory')
lucentPM4ConfigMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4))
lucentPM4CmInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1))
lucentPM4CmSerial = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1))
lucentPM4SerialTable = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1), )
if mibBuilder.loadTexts: lucentPM4SerialTable.setStatus('mandatory')
lucentPM4SerialEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4SerialBoardIndex"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4SerialIndex"))
if mibBuilder.loadTexts: lucentPM4SerialEntry.setStatus('mandatory')
lucentPM4SerialBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialBoardIndex.setStatus('mandatory')
lucentPM4SerialUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialUnitType.setStatus('mandatory')
lucentPM4SerialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialIndex.setStatus('mandatory')
lucentPM4ModemId = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemId.setStatus('mandatory')
lucentPM4SerialPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialPortNumber.setStatus('mandatory')
lucentPM4SerialPhysType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("async", 2), ("sync", 3), ("isdn", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialPhysType.setStatus('mandatory')
lucentPM4SerialPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connecting", 2), ("established", 3), ("disconnecting", 4), ("command", 5), ("noservice", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialPortStatus.setStatus('mandatory')
lucentPM4SerialDS0State = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notavailable", 1), ("busyout", 2), ("havecomport", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SerialDS0State.setStatus('mandatory')
lucentPM4SerialUser = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialUser.setStatus('mandatory')
lucentPM4SerialSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialSessionId.setStatus('mandatory')
lucentPM4SerialTypeHardwired = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SerialTypeHardwired.setStatus('mandatory')
lucentPM4SerialTypeNwDialIn = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SerialTypeNwDialIn.setStatus('mandatory')
lucentPM4SerialTypeNwDialout = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SerialTypeNwDialout.setStatus('mandatory')
lucentPM4SerialTypeLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SerialTypeLogin.setStatus('mandatory')
lucentPM4SerialTypeDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SerialTypeDevice.setStatus('mandatory')
lucentPM4SerialTypeDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SerialTypeDeviceName.setStatus('mandatory')
lucentPM4SerialDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("in", 1), ("out", 2), ("inout", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialDirection.setStatus('mandatory')
lucentPM4SerialStarted = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialStarted.setStatus('mandatory')
lucentPM4SerialIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialIdle.setStatus('mandatory')
lucentPM4SerialInSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialInSpeed.setStatus('mandatory')
lucentPM4SerialOutSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialOutSpeed.setStatus('mandatory')
lucentPM4SerialIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 22), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialIpAddress.setStatus('mandatory')
lucentPM4SerialifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialifDescr.setStatus('mandatory')
lucentPM4SerialInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialInOctets.setStatus('mandatory')
lucentPM4SerialOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialOutOctets.setStatus('mandatory')
lucentPM4SerialQOctets = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SerialQOctets.setStatus('mandatory')
lucentPM4CmT1E1 = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2))
lucentPM4T1E1Table = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1), )
if mibBuilder.loadTexts: lucentPM4T1E1Table.setStatus('mandatory')
lucentPM4T1E1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1BoardIndex"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1Index"))
if mibBuilder.loadTexts: lucentPM4T1E1Entry.setStatus('mandatory')
lucentPM4T1E1BoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1BoardIndex.setStatus('mandatory')
lucentPM4T1E1UnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1UnitType.setStatus('mandatory')
lucentPM4T1E1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1Index.setStatus('mandatory')
lucentPM4T1E1SerialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1SerialIndex.setStatus('mandatory')
lucentPM4T1E1SerialCount = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1SerialCount.setStatus('mandatory')
lucentPM4T1E1PhysType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PhysType.setStatus('mandatory')
lucentPM4T1E1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 7), PMEquipPRIStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1Status.setStatus('mandatory')
lucentPM4T1E1Function = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("isdn", 1), ("channelized", 2), ("clear", 3), ("fractional", 4), ("isdnfrac", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1Function.setStatus('mandatory')
lucentPM4T1E1Framing = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("esf", 1), ("d4", 2), ("crc4", 3), ("fas", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1Framing.setStatus('mandatory')
lucentPM4T1E1Encoding = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ami", 1), ("b8zs", 2), ("hdb3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1Encoding.setStatus('mandatory')
lucentPM4T1E1PCM = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ulaw", 1), ("alaw", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PCM.setStatus('mandatory')
lucentPM4T1E1SuperSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("em", 1), ("groundstart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4T1E1SuperSignal.setStatus('mandatory')
lucentPM4T1E1StartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wink", 1), ("immediate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4T1E1StartMode.setStatus('mandatory')
lucentPM4T1E1ChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1ChangeTime.setStatus('mandatory')
lucentPM4T1E1RecvLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1RecvLevel.setStatus('mandatory')
lucentPM4T1E1BlueAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1BlueAlarms.setStatus('mandatory')
lucentPM4T1E1YellowAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1YellowAlarms.setStatus('mandatory')
lucentPM4T1E1CarrierLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1CarrierLoss.setStatus('mandatory')
lucentPM4T1E1SyncLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1SyncLoss.setStatus('mandatory')
lucentPM4T1E1BipolarErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1BipolarErrors.setStatus('mandatory')
lucentPM4T1E1CRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1CRCErrors.setStatus('mandatory')
lucentPM4T1E1SyncErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1SyncErrors.setStatus('mandatory')
lucentPM4CmModem = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3))
lucentPM4ModemTable = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1), )
if mibBuilder.loadTexts: lucentPM4ModemTable.setStatus('mandatory')
lucentPM4ModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4ModemBoardIndex"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4ModemUnitType"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4ModemIndex"))
if mibBuilder.loadTexts: lucentPM4ModemEntry.setStatus('mandatory')
lucentPM4ModemBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemBoardIndex.setStatus('mandatory')
lucentPM4ModemUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemUnitType.setStatus('mandatory')
lucentPM4ModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemIndex.setStatus('mandatory')
lucentPM4ModemPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemPortName.setStatus('mandatory')
lucentPM4ModemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 1), ("bound", 2), ("connecting", 3), ("active", 4), ("test", 5), ("down", 6), ("ready", 7), ("halt", 8), ("admin", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemStatus.setStatus('mandatory')
lucentPM4ModemProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("lapm", 2), ("mnp", 3), ("bufferd", 4), ("direct", 5), ("cellular", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemProtocol.setStatus('mandatory')
lucentPM4ModemCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("v42bis", 2), ("mnp5", 3), ("stac", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemCompression.setStatus('mandatory')
lucentPM4ModemInSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemInSpeed.setStatus('mandatory')
lucentPM4ModemOutSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemOutSpeed.setStatus('mandatory')
lucentPM4ModemInByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemInByteCount.setStatus('mandatory')
lucentPM4ModemOutByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemOutByteCount.setStatus('mandatory')
lucentPM4ModemRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemRetrains.setStatus('mandatory')
lucentPM4ModemRenegotiates = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemRenegotiates.setStatus('mandatory')
lucentPM4ModemCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemCalls.setStatus('mandatory')
lucentPM4ModemDetects = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemDetects.setStatus('mandatory')
lucentPM4ModemConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4ModemConnects.setStatus('mandatory')
lucentPM4CmEther = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4))
lucentPM4EtherTable = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1), )
if mibBuilder.loadTexts: lucentPM4EtherTable.setStatus('mandatory')
lucentPM4EtherEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4EtherBoardIndex"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4EtherIfType"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4EtherIndex"))
if mibBuilder.loadTexts: lucentPM4EtherEntry.setStatus('mandatory')
lucentPM4EtherBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4EtherBoardIndex.setStatus('mandatory')
lucentPM4EtherIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4EtherIfType.setStatus('mandatory')
lucentPM4EtherIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ether0", 1), ("ether1", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4EtherIndex.setStatus('mandatory')
lucentPM4EtherIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(67436545, 168099841))).clone(namedValues=NamedValues(("ether0", 67436545), ("ether1", 168099841)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4EtherIfIndex.setStatus('mandatory')
lucentPM4EtherPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherPortName.setStatus('mandatory')
lucentPM4EtherMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4EtherMacAddress.setStatus('mandatory')
lucentPM4EtherIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherIpAddress.setStatus('mandatory')
lucentPM4EtherIpGateway = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherIpGateway.setStatus('mandatory')
lucentPM4EtherPriNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherPriNameServer.setStatus('mandatory')
lucentPM4EtherAltNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherAltNameServer.setStatus('mandatory')
lucentPM4EtherSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherSubnetMask.setStatus('mandatory')
lucentPM4EtherInFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherInFilter.setStatus('mandatory')
lucentPM4EtherOutFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOutFilter.setStatus('mandatory')
lucentPM4EtherOptRip = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptRip.setStatus('mandatory')
lucentPM4EtherOptSlip = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptSlip.setStatus('mandatory')
lucentPM4EtherOptEtherDown = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptEtherDown.setStatus('mandatory')
lucentPM4EtherOptBcastHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptBcastHigh.setStatus('mandatory')
lucentPM4EtherOptSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptSnmp.setStatus('mandatory')
lucentPM4EtherOptNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptNoListen.setStatus('mandatory')
lucentPM4EtherOptDefaultRip = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptDefaultRip.setStatus('mandatory')
lucentPM4EtherOptDefaultListen = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptDefaultListen.setStatus('mandatory')
lucentPM4EtherOptIPFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptIPFilter.setStatus('mandatory')
lucentPM4EtherOptDns = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptDns.setStatus('mandatory')
lucentPM4EtherOptPmeMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptPmeMsg.setStatus('mandatory')
lucentPM4EtherOptNoClip = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptNoClip.setStatus('mandatory')
lucentPM4EtherOptEtherIpx = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptEtherIpx.setStatus('mandatory')
lucentPM4EtherOptNetBIOS = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptNetBIOS.setStatus('mandatory')
lucentPM4EtherOptAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptAccounting.setStatus('mandatory')
lucentPM4EtherOptNoPAP = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 4, 1, 4, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4EtherOptNoPAP.setStatus('mandatory')
lucentPM4FaultMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5))
lucentPM4FaultMgmtIsolation = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1))
lucentPM4FaultMgmtChasTrap = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1), )
if mibBuilder.loadTexts: lucentPM4FaultMgmtChasTrap.setStatus('mandatory')
lucentPM4FMChasTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4FMChasTrapIndex"))
if mibBuilder.loadTexts: lucentPM4FMChasTrapEntry.setStatus('mandatory')
lucentPM4FMChasTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMChasTrapIndex.setStatus('mandatory')
lucentPM4FMChasTrapBoardID = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMChasTrapBoardID.setStatus('mandatory')
lucentPM4FMChasTrapUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1, 3), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMChasTrapUnitType.setStatus('mandatory')
lucentPM4FMChasTrapUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMChasTrapUnitIndex.setStatus('mandatory')
lucentPM4FMChasTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("online", 2), ("offline", 3), ("maintenance", 4), ("fault", 5), ("notinstalled", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMChasTrapStatus.setStatus('mandatory')
lucentPM4FMChasTrapSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1, 6), PMAlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMChasTrapSeverity.setStatus('mandatory')
lucentPM4FMChasTrapTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMChasTrapTimeStamp.setStatus('mandatory')
lucentPM4FMChasTrapState = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("trapsent", 1), ("ackdue", 2), ("acked", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMChasTrapState.setStatus('mandatory')
lucentPM4FMBoardIndex = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: lucentPM4FMBoardIndex.setStatus('mandatory')
lucentPM4FMUnitIndex = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 3), Integer32())
if mibBuilder.loadTexts: lucentPM4FMUnitIndex.setStatus('mandatory')
lucentPM4FMUnitType = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 4), PMUnitType())
if mibBuilder.loadTexts: lucentPM4FMUnitType.setStatus('mandatory')
lucentPM4FMUnitTrapStatus = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))).clone(namedValues=NamedValues(("other", 1), ("offline", 2), ("online", 3), ("failed", 4), ("restored", 5), ("pwrwarn", 6), ("tempwarn", 7), ("temphot", 8), ("dtrloss", 9), ("carrierloss", 10), ("renegotiation", 11), ("los", 12), ("ais", 13), ("redalarm", 14), ("yellowalarm", 15), ("cv", 16), ("crc", 17), ("bpv", 18), ("fer", 19), ("pll", 20), ("es", 21), ("ses", 22), ("sefs", 23), ("uas", 24), ("dm", 25), ("les", 26), ("css", 27), ("bes", 28))))
if mibBuilder.loadTexts: lucentPM4FMUnitTrapStatus.setStatus('mandatory')
lucentPM4FMUnitTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 1, 6), PMAlarmType())
if mibBuilder.loadTexts: lucentPM4FMUnitTrapSeverity.setStatus('mandatory')
lucentPM4FMTrapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2))
lucentPM4FMEqpTrapCfg = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 1), )
if mibBuilder.loadTexts: lucentPM4FMEqpTrapCfg.setStatus('mandatory')
lucentPM4FMEqpTrapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4FMEqpBoardIndex"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4FMEqpUnitType"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4FMEqpUnitIndex"))
if mibBuilder.loadTexts: lucentPM4FMEqpTrapCfgEntry.setStatus('mandatory')
lucentPM4FMEqpBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMEqpBoardIndex.setStatus('mandatory')
lucentPM4FMEqpUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 1, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMEqpUnitType.setStatus('mandatory')
lucentPM4FMEqpUnitIndex = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMEqpUnitIndex.setStatus('mandatory')
lucentPM4FMEqpTrapId = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("boardoffline", 1), ("boardonline", 2), ("pwrsupfail", 3), ("pwrsuprestored", 4), ("fanfail", 5), ("fanrestored", 6), ("boardtempwarn", 7), ("boardtempnormal", 8), ("boardtoohot", 9), ("modemfail", 10), ("linedown", 11), ("lineup", 12), ("linethresh", 13), ("boardpwrshutdown", 14), ("radiusauthfail", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMEqpTrapId.setStatus('mandatory')
lucentPM4FMEqpTrapCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMEqpTrapCtl.setStatus('mandatory')
lucentPM4FMEqpRepTimer = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMEqpRepTimer.setStatus('mandatory')
lucentPM4FMT1E1ThreshTrapCfg = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2), )
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshTrapCfg.setStatus('mandatory')
lucentPM4FMT1E1ThreshTrapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4FMThreshBoardIndex"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4FMThreshUnitType"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4FMThreshUnitIndex"))
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshTrapCfgEntry.setStatus('mandatory')
lucentPM4FMT1E1ThreshBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshBoardIndex.setStatus('mandatory')
lucentPM4FMT1E1ThreshUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshUnitType.setStatus('mandatory')
lucentPM4FMT1E1ThreshESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 3), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshESs.setStatus('mandatory')
lucentPM4FMT1E1ThreshSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshSESs.setStatus('mandatory')
lucentPM4FMT1E1ThreshSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshSEFSs.setStatus('mandatory')
lucentPM4FMT1E1ThreshUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 6), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshUASs.setStatus('mandatory')
lucentPM4FMT1E1ThreshCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 7), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshCSSs.setStatus('mandatory')
lucentPM4FMT1E1ThreshPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshPCVs.setStatus('mandatory')
lucentPM4FMT1E1ThreshLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 9), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshLESs.setStatus('mandatory')
lucentPM4FMT1E1ThreshBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 10), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshBESs.setStatus('mandatory')
lucentPM4FMT1E1ThreshDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshDMs.setStatus('mandatory')
lucentPM4FMT1E1ThreshRepTimer = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshRepTimer.setStatus('mandatory')
lucentPM4FMT1E1ThreshTrapAck = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("noack", 2), ("ack", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMT1E1ThreshTrapAck.setStatus('mandatory')
lucentPM4FMEnvTrapCfg = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3), )
if mibBuilder.loadTexts: lucentPM4FMEnvTrapCfg.setStatus('mandatory')
lucentPM4FMEnvTrapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4FMEnvBoardID"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4FMEnvUnitType"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4FMEnvUnitIndex"))
if mibBuilder.loadTexts: lucentPM4FMEnvTrapCfgEntry.setStatus('mandatory')
lucentPM4FMEnvBoardID = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMEnvBoardID.setStatus('mandatory')
lucentPM4FMEnvUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMEnvUnitType.setStatus('mandatory')
lucentPM4FMEnvUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4FMEnvUnitIndex.setStatus('mandatory')
lucentPM4FMEnvOptUnitTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMEnvOptUnitTemp.setStatus('mandatory')
lucentPM4FMEnvUnitTempRange = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMEnvUnitTempRange.setStatus('mandatory')
lucentPM4FMEnvOptUnitPwrLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMEnvOptUnitPwrLvl.setStatus('mandatory')
lucentPM4FMEnvUnitPwrRange = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMEnvUnitPwrRange.setStatus('mandatory')
lucentPM4FMEnvTrapCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 5, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4FMEnvTrapCtl.setStatus('mandatory')
lucentPM4PerfMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6))
lucentPM4T1E1PerfMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1))
lucentPM4T1E1PMCur = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1), )
if mibBuilder.loadTexts: lucentPM4T1E1PMCur.setStatus('mandatory')
lucentPM4T1E1PMCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMBoardID"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMUnitType"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMLineNum"))
if mibBuilder.loadTexts: lucentPM4T1E1PMCurEntry.setStatus('mandatory')
lucentPM4T1E1PMCurBoard = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurBoard.setStatus('mandatory')
lucentPM4T1E1PMCurUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurUnitType.setStatus('mandatory')
lucentPM4T1E1PMCurLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurLineNum.setStatus('mandatory')
lucentPM4T1E1PMCurIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurIfIndex.setStatus('mandatory')
lucentPM4T1E1PMCurESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurESs.setStatus('mandatory')
lucentPM4T1E1PMCurSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurSESs.setStatus('mandatory')
lucentPM4T1E1PMCurSEFSs = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurSEFSs.setStatus('mandatory')
lucentPM4T1E1PMCurUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurUASs.setStatus('mandatory')
lucentPM4T1E1PMCurCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurCSSs.setStatus('mandatory')
lucentPM4T1E1PMCurPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurPCVs.setStatus('mandatory')
lucentPM4T1E1PMCurLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurLESs.setStatus('mandatory')
lucentPM4T1E1PMCurBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurBESs.setStatus('mandatory')
lucentPM4T1E1PMCurDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurDMs.setStatus('mandatory')
lucentPM4T1E1PMCurLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 1, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMCurLCVs.setStatus('mandatory')
lucentPM4T1E1PMInt = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2), )
if mibBuilder.loadTexts: lucentPM4T1E1PMInt.setStatus('mandatory')
lucentPM4T1E1PMIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMIntBoard"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMIntUnitType"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMIntLineNum"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMIntInterval"))
if mibBuilder.loadTexts: lucentPM4T1E1PMIntEntry.setStatus('mandatory')
lucentPM4T1E1PMIntBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntBoard.setStatus('mandatory')
lucentPM4T1E1PMIntUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntUnitType.setStatus('mandatory')
lucentPM4T1E1PMIntLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntLineNum.setStatus('mandatory')
lucentPM4T1E1PMIntInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntInterval.setStatus('mandatory')
lucentPM4T1E1PMIntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntIfIndex.setStatus('mandatory')
lucentPM4T1E1PMIntESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntESs.setStatus('mandatory')
lucentPM4T1E1PMIntSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntSESs.setStatus('mandatory')
lucentPM4T1E1PMIntSEFSs = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntSEFSs.setStatus('mandatory')
lucentPM4T1E1PMIntUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntUASs.setStatus('mandatory')
lucentPM4T1E1PMIntCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntCSSs.setStatus('mandatory')
lucentPM4T1E1PMIntPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntPCVs.setStatus('mandatory')
lucentPM4T1E1PMIntLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntLESs.setStatus('mandatory')
lucentPM4T1E1PMIntBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntBESs.setStatus('mandatory')
lucentPM4T1E1PMIntDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntDMs.setStatus('mandatory')
lucentPM4T1E1PMIntLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMIntLCVs.setStatus('mandatory')
lucentPM4T1E1PMTotal = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3), )
if mibBuilder.loadTexts: lucentPM4T1E1PMTotal.setStatus('mandatory')
lucentPM4T1E1PMTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMTotalBoard"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMTotalUnitType"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMTotalLineNum"), (0, "LIVINGSTON-PM4-MIB", "lucentPM4T1E1PMTotalInterval"))
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalEntry.setStatus('mandatory')
lucentPM4T1E1PMTotalBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalBoard.setStatus('mandatory')
lucentPM4T1E1PMTotalUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 2), PMUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalUnitType.setStatus('mandatory')
lucentPM4T1E1PMTotalLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalLineNum.setStatus('mandatory')
lucentPM4T1E1PMTotalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalIfIndex.setStatus('mandatory')
lucentPM4T1E1PMTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalESs.setStatus('mandatory')
lucentPM4T1E1PMTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalSESs.setStatus('mandatory')
lucentPM4T1E1PMTotalSEFSs = MibScalar((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalSEFSs.setStatus('mandatory')
lucentPM4T1E1PMTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalUASs.setStatus('mandatory')
lucentPM4T1E1PMTotalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalCSSs.setStatus('mandatory')
lucentPM4T1E1PMTotalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalPCVs.setStatus('mandatory')
lucentPM4T1E1PMTotalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalLESs.setStatus('mandatory')
lucentPM4T1E1PMTotalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalBESs.setStatus('mandatory')
lucentPM4T1E1PMTotalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalDMs.setStatus('mandatory')
lucentPM4T1E1PMTotalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 6, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4T1E1PMTotalLCVs.setStatus('mandatory')
lucentPM4SecurityMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 7))
lucentPM4AcctMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8))
lucentPM4AcctMgmtComm = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1))
lucentPM4SnmpCommTable = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1), )
if mibBuilder.loadTexts: lucentPM4SnmpCommTable.setStatus('mandatory')
lucentPM4SnmpCommEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4SnmpCommName"))
if mibBuilder.loadTexts: lucentPM4SnmpCommEntry.setStatus('mandatory')
lucentPM4SnmpCommIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SnmpCommIndex.setStatus('mandatory')
lucentPM4SnmpCommName = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: lucentPM4SnmpCommName.setStatus('mandatory')
lucentPM4SnmpCommIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SnmpCommIpAddr.setStatus('mandatory')
lucentPM4SnmpCommReadAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("ensable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SnmpCommReadAccess.setStatus('mandatory')
lucentPM4SnmpCommWriteAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("ensable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SnmpCommWriteAccess.setStatus('mandatory')
lucentPM4SnmpCommTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("ensable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SnmpCommTraps.setStatus('mandatory')
lucentPM4SnmpCommStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lucentPM4SnmpCommStatus.setStatus('mandatory')
lucentPM4SnmpCommLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4SnmpCommLastError.setStatus('mandatory')
lucentPM4AcctMgmtCallEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2))
lucentPM4AMCallEventTable = MibTable((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1), )
if mibBuilder.loadTexts: lucentPM4AMCallEventTable.setStatus('mandatory')
lucentPM4AMCallEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1), ).setIndexNames((0, "LIVINGSTON-PM4-MIB", "lucentPM4AMCEIndex"))
if mibBuilder.loadTexts: lucentPM4AMCallEventEntry.setStatus('mandatory')
lucentPM4AMCEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEIndex.setStatus('mandatory')
lucentPM4AMCETimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCETimeStamp.setStatus('mandatory')
lucentPM4AMCEType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("calloriginated", 1), ("callanswered", 2), ("callcleared", 3), ("servicechanged", 4), ("namechanged", 5), ("baudratechanged", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEType.setStatus('mandatory')
lucentPM4AMCESvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("none", 1), ("ppp", 2), ("slip", 3), ("mpp", 4), ("x25", 5), ("combinet", 6), ("frameRelay", 7), ("euraw", 8), ("euui", 9), ("telnet", 10), ("telnetBinary", 11), ("rawTcp", 12), ("terminalServer", 13), ("mp", 14), ("virtualConnect", 15), ("x25DChannel", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCESvcType.setStatus('mandatory')
lucentPM4AMCEUName = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEUName.setStatus('mandatory')
lucentPM4AMCEModemBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEModemBoard.setStatus('mandatory')
lucentPM4AMCEModemID = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEModemID.setStatus('mandatory')
lucentPM4AMCEModemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEModemPort.setStatus('mandatory')
lucentPM4AMCEDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEDataRate.setStatus('mandatory')
lucentPM4AMCECallingPartyID = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCECallingPartyID.setStatus('mandatory')
lucentPM4AMCECalledPartyID = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCECalledPartyID.setStatus('mandatory')
lucentPM4AMCEInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEInOctets.setStatus('mandatory')
lucentPM4AMCEOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEOutOctets.setStatus('mandatory')
lucentPM4AMCECallCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCECallCharge.setStatus('mandatory')
lucentPM4AMCEDisconnReason = MibTableColumn((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 1, 8, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 100, 101, 102, 120, 150, 151, 152, 160, 170, 180, 185, 190, 195, 201, 210))).clone(namedValues=NamedValues(("notApplicable", 1), ("unknown", 2), ("disconnected", 3), ("clidAuthFailed", 4), ("clidAuthServTimeout", 5), ("clidAuthRequestCallback", 6), ("preT310Timeout", 7), ("noModemAvailable", 9), ("noModemNoCarrier", 10), ("noModemLossCarrier", 11), ("noModemResultCodes", 12), ("noModemOpenFailed", 13), ("noModemOpenFailedDiag", 14), ("tsUserExit", 20), ("tsIdleTimeout", 21), ("tsExitTelnet", 22), ("tsNoIPAddr", 23), ("tsExitTcp", 24), ("tsPassWordFail", 25), ("tsRawTCPDisable", 26), ("tsControlC", 27), ("tsDestroyed", 28), ("tsClosedVirtualConnect", 29), ("tsVirtualConnectDestroyed", 30), ("tsExitRlogin", 31), ("tsRloginBadOption", 32), ("tsErrorResource", 33), ("mpNullMessageTimeout", 35), ("pppLcpTimeout", 40), ("pppLcpNegotiateFail", 41), ("pppPAPAuthFail", 42), ("pppCHAPAuthFail", 43), ("pppRemoteAuthFail", 44), ("pppRcvTerminate", 45), ("pppCloseEvent", 46), ("pppCloseNoNcpsOpened", 47), ("pppCloseUnknownMpBundle", 48), ("pppCloseMpAddChanFail", 49), ("tsExitErrTooMany", 50), ("tsExitErrResource", 51), ("tsExitErrInvalidIP", 52), ("tsExitErrHostName", 53), ("tsExitErrBadPort", 54), ("tsExitErrHostReset", 60), ("tsExitErrConnRefused", 61), ("tsExitErrTimedOut", 62), ("tsExitErrClosed", 63), ("tsExitErrNetUnreach", 64), ("tsExitErrHostUnreach", 65), ("tsExitErrNetAdminUnreach", 66), ("tsExitErrHostAdminUnreach", 67), ("tsExitErrPortUnreach", 68), ("sessTimeOut", 100), ("sessFailSecurity", 101), ("sessCallback", 102), ("invalidProtocol", 120), ("requestByRadiusClient", 150), ("localAdmin", 151), ("localSnmp", 152), ("v110Timeout", 160), ("pppAuthTimeout", 170), ("userCallClearRequest", 180), ("remoteEndHungUp", 185), ("resourceQuiesced", 190), ("maxCallDurationReached", 195), ("lowMemory", 201), ("boardDied", 210)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lucentPM4AMCEDisconnReason.setStatus('mandatory')
lucentPM4BoardOfflineTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,1)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4BoardOnlineTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,2)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4PwrSupFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,3)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4PwrSupWarnTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,4)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4PwrSupRestoredTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,5)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4FanFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,6)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4FanRestoredTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,7)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4BoardTempWarnTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,8)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4BoardTempNormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,9)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4BoardTooHotTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,10)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4ModemFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,11)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4T1E1LineDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,12)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4T1E1LineUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,13)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4T1E1LineThreshTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,14)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4BoardPwrOffTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,15)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitType"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitTrapStatus"))
lucentPM4RadiusAuthFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 307, 1, 1, 2, 2) + (0,16)).setObjects(("SNMPv2-MIB", "sysName"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMBoardIndex"), ("LIVINGSTON-PM4-MIB", "lucentPM4FMUnitIndex"))
mibBuilder.exportSymbols("LIVINGSTON-PM4-MIB", lucentPM4T1E1SerialIndex=lucentPM4T1E1SerialIndex, lucentPM4AMCEModemID=lucentPM4AMCEModemID, lucentPM4ChasCmdResult=lucentPM4ChasCmdResult, lucentPM4AMCEModemPort=lucentPM4AMCEModemPort, lucentPM4ModemRetrains=lucentPM4ModemRetrains, lucentPM4ChasCmdUnitIndex=lucentPM4ChasCmdUnitIndex, lucentPM4SerialOutSpeed=lucentPM4SerialOutSpeed, lucentPM4FMT1E1ThreshESs=lucentPM4FMT1E1ThreshESs, lucentPM4EtherInFilter=lucentPM4EtherInFilter, lucentPM4ModemBoardIndex=lucentPM4ModemBoardIndex, lucentPM4FMT1E1ThreshLESs=lucentPM4FMT1E1ThreshLESs, lucentPM4T1E1PMTotalCSSs=lucentPM4T1E1PMTotalCSSs, lucentPM4EtherMacAddress=lucentPM4EtherMacAddress, PMEquipStatus=PMEquipStatus, lucentPM4ChasCmdId=lucentPM4ChasCmdId, PMDiagCmdStatus=PMDiagCmdStatus, lucentPM4FMChasTrapUnitIndex=lucentPM4FMChasTrapUnitIndex, lucentPM4FMT1E1ThreshUASs=lucentPM4FMT1E1ThreshUASs, lucentPM4EtherOptSlip=lucentPM4EtherOptSlip, lucentPM4BoardTempWarnTrap=lucentPM4BoardTempWarnTrap, lucentPM4T1E1PCM=lucentPM4T1E1PCM, lucentPM4T1E1Index=lucentPM4T1E1Index, lucentPM4T1E1PMTotalSESs=lucentPM4T1E1PMTotalSESs, lucentPM4EtherOptNoListen=lucentPM4EtherOptNoListen, lucentPM4FMT1E1ThreshCSSs=lucentPM4FMT1E1ThreshCSSs, lucentPM4FMT1E1ThreshUnitType=lucentPM4FMT1E1ThreshUnitType, lucentPM4EtherAltNameServer=lucentPM4EtherAltNameServer, lucentPM4EtherIpAddress=lucentPM4EtherIpAddress, lucentPM4T1E1PMIntLESs=lucentPM4T1E1PMIntLESs, lucentPM4AcctMgmtCallEvent=lucentPM4AcctMgmtCallEvent, lucentPM4T1E1PMTotalLineNum=lucentPM4T1E1PMTotalLineNum, lucentPM4FaultMgmtIsolation=lucentPM4FaultMgmtIsolation, lucentPM4SerialIndex=lucentPM4SerialIndex, lucentPM4ModemId=lucentPM4ModemId, lucentPM4SerialStarted=lucentPM4SerialStarted, lucentPM4EtherOptEtherDown=lucentPM4EtherOptEtherDown, lucentPM4T1E1PMCurPCVs=lucentPM4T1E1PMCurPCVs, lucentPM4T1E1PMTotalUASs=lucentPM4T1E1PMTotalUASs, lucentPM4SWRev=lucentPM4SWRev, lucentPM4SerialTypeDevice=lucentPM4SerialTypeDevice, lucentPM4ModemEntry=lucentPM4ModemEntry, lucentPM4ChasCmdIndex=lucentPM4ChasCmdIndex, lucentPM4ModemInSpeed=lucentPM4ModemInSpeed, lucentPM4T1E1SyncErrors=lucentPM4T1E1SyncErrors, lucentPM4ChasCmdDevId=lucentPM4ChasCmdDevId, lucentPM4FMTrapConfig=lucentPM4FMTrapConfig, lucentPM4T1E1PMCurLESs=lucentPM4T1E1PMCurLESs, lucentPM4ModemFailTrap=lucentPM4ModemFailTrap, lucentPM4ModemOutSpeed=lucentPM4ModemOutSpeed, lucentPM4FaultMgmt=lucentPM4FaultMgmt, lucentPM4T1E1PMCurUASs=lucentPM4T1E1PMCurUASs, lucentPM4FMEqpUnitIndex=lucentPM4FMEqpUnitIndex, lucentPM4FMEnvBoardID=lucentPM4FMEnvBoardID, lucentPM4SerialPortNumber=lucentPM4SerialPortNumber, lucentPM4FMEqpUnitType=lucentPM4FMEqpUnitType, lucentPM4FMEnvUnitIndex=lucentPM4FMEnvUnitIndex, lucentPM4EtherTable=lucentPM4EtherTable, lucentPM4SerialSessionId=lucentPM4SerialSessionId, lucentPM4BoardTooHotTrap=lucentPM4BoardTooHotTrap, lucentPM4ModemCalls=lucentPM4ModemCalls, lucentPM4T1E1LineThreshTrap=lucentPM4T1E1LineThreshTrap, lucentPM4CmModem=lucentPM4CmModem, lucentPM4FMT1E1ThreshRepTimer=lucentPM4FMT1E1ThreshRepTimer, lucentPM4T1E1PMInt=lucentPM4T1E1PMInt, lucentPM4T1E1PMCurBoard=lucentPM4T1E1PMCurBoard, lucentPM4T1E1PMIntIfIndex=lucentPM4T1E1PMIntIfIndex, lucentPM4FMUnitTrapStatus=lucentPM4FMUnitTrapStatus, lucentPM4PwrSupRestoredTrap=lucentPM4PwrSupRestoredTrap, lucentPM4T1E1Encoding=lucentPM4T1E1Encoding, lucentPM4EtherOptNetBIOS=lucentPM4EtherOptNetBIOS, lucentPM4SerialInOctets=lucentPM4SerialInOctets, lucentPM4ModemUnitType=lucentPM4ModemUnitType, lucentPM4T1E1PerfMgmt=lucentPM4T1E1PerfMgmt, lucentPM4T1E1PMCurDMs=lucentPM4T1E1PMCurDMs, lucentPM4ModemPortName=lucentPM4ModemPortName, lucentPM4SnmpCommIndex=lucentPM4SnmpCommIndex, lucentPM4T1E1PMCurLineNum=lucentPM4T1E1PMCurLineNum, lucentPM4FMChasTrapBoardID=lucentPM4FMChasTrapBoardID, lucentPM4FMT1E1ThreshPCVs=lucentPM4FMT1E1ThreshPCVs, lucentPM4AMCEDataRate=lucentPM4AMCEDataRate, lucentPM4T1E1LineDownTrap=lucentPM4T1E1LineDownTrap, lucentPM4ModemTable=lucentPM4ModemTable, PMUnitType=PMUnitType, lucentPM4FanFailTrap=lucentPM4FanFailTrap, lucentPM4SerialEntry=lucentPM4SerialEntry, lucentPM4T1E1SyncLoss=lucentPM4T1E1SyncLoss, lucentPM4T1E1PMCurESs=lucentPM4T1E1PMCurESs, lucentPM4ModemInByteCount=lucentPM4ModemInByteCount, lucentPM4T1E1PMIntCSSs=lucentPM4T1E1PMIntCSSs, lucentPM4FMT1E1ThreshBoardIndex=lucentPM4FMT1E1ThreshBoardIndex, lucentPM4CmInterfaces=lucentPM4CmInterfaces, lucentPM4T1E1PMIntBoard=lucentPM4T1E1PMIntBoard, lucentPM4EtherEntry=lucentPM4EtherEntry, lucentPM4FMEqpTrapCfgEntry=lucentPM4FMEqpTrapCfgEntry, lucentPM4T1E1StartMode=lucentPM4T1E1StartMode, lucentPM4FMEnvOptUnitPwrLvl=lucentPM4FMEnvOptUnitPwrLvl, lucentPM4T1E1PMIntPCVs=lucentPM4T1E1PMIntPCVs, lucentPM4SerialDirection=lucentPM4SerialDirection, lucentPM4T1E1RecvLevel=lucentPM4T1E1RecvLevel, lucentPM4EtherOutFilter=lucentPM4EtherOutFilter, lucentPM4T1E1PMTotalUnitType=lucentPM4T1E1PMTotalUnitType, lucentPM4T1E1PMTotalLESs=lucentPM4T1E1PMTotalLESs, lucentPM4AMCEIndex=lucentPM4AMCEIndex, lucentPM4AMCEModemBoard=lucentPM4AMCEModemBoard, lucentPM4SnmpCommEntry=lucentPM4SnmpCommEntry, lucentPM4SerialTable=lucentPM4SerialTable, lucentPM4FMChasTrapIndex=lucentPM4FMChasTrapIndex, lucentPM4T1E1SerialCount=lucentPM4T1E1SerialCount, lucentPM4ModemRenegotiates=lucentPM4ModemRenegotiates, lucentPM4FMT1E1ThreshBESs=lucentPM4FMT1E1ThreshBESs, lucentPM4SerialPhysType=lucentPM4SerialPhysType, lucentPM4EtherPortName=lucentPM4EtherPortName, lucentPM4EtherOptNoClip=lucentPM4EtherOptNoClip, lucentPM4FMEqpTrapCfg=lucentPM4FMEqpTrapCfg, lucentPM4T1E1PMTotalLCVs=lucentPM4T1E1PMTotalLCVs, lucentPM4SnmpCommName=lucentPM4SnmpCommName, lucentPM4AMCESvcType=lucentPM4AMCESvcType, lucentPM4FaultMgmtChasTrap=lucentPM4FaultMgmtChasTrap, lucentPM4EtherOptPmeMsg=lucentPM4EtherOptPmeMsg, lucentPM4SerialOutOctets=lucentPM4SerialOutOctets, lucentPM4T1E1PMIntESs=lucentPM4T1E1PMIntESs, lucentPM4T1E1Framing=lucentPM4T1E1Framing, lucentPM4FMT1E1ThreshTrapCfg=lucentPM4FMT1E1ThreshTrapCfg, lucentPM4T1E1BlueAlarms=lucentPM4T1E1BlueAlarms, lucentPM4AMCEOutOctets=lucentPM4AMCEOutOctets, lucentPM4FMUnitIndex=lucentPM4FMUnitIndex, lucentPM4AMCallEventTable=lucentPM4AMCallEventTable, lucentPM4FMEnvUnitType=lucentPM4FMEnvUnitType, lucentPM4AMCallEventEntry=lucentPM4AMCallEventEntry, lucentPM4SerialInSpeed=lucentPM4SerialInSpeed, lucentPM4T1E1PMIntUnitType=lucentPM4T1E1PMIntUnitType, lucentPM4EtherOptDefaultRip=lucentPM4EtherOptDefaultRip, lucentPM4BoardTempNormalTrap=lucentPM4BoardTempNormalTrap, lucentPM4MibRev=lucentPM4MibRev, lucentPM4T1E1PMCurEntry=lucentPM4T1E1PMCurEntry, lucentPM4T1E1LineUpTrap=lucentPM4T1E1LineUpTrap, lucentPM4FMChasTrapStatus=lucentPM4FMChasTrapStatus, lucentPM4T1E1CarrierLoss=lucentPM4T1E1CarrierLoss, lucentPM4T1E1PMCurSESs=lucentPM4T1E1PMCurSESs, lucentPM4AMCEDisconnReason=lucentPM4AMCEDisconnReason, lucentPM4SerialTypeLogin=lucentPM4SerialTypeLogin, lucentPM4T1E1PMTotalEntry=lucentPM4T1E1PMTotalEntry, PMDiagTestCntrl=PMDiagTestCntrl, lucentPM4T1E1PMIntSEFSs=lucentPM4T1E1PMIntSEFSs, lucentPM4SnmpCommStatus=lucentPM4SnmpCommStatus, lucentPM4T1E1PhysType=lucentPM4T1E1PhysType, lucentPM4T1E1PMIntEntry=lucentPM4T1E1PMIntEntry, lucentPM4SerialUser=lucentPM4SerialUser, lucentPM4EtherIndex=lucentPM4EtherIndex, lucentPM4T1E1PMIntUASs=lucentPM4T1E1PMIntUASs, lucentPM4SnmpCommLastError=lucentPM4SnmpCommLastError, lucentPM4SnmpCommIpAddr=lucentPM4SnmpCommIpAddr, lucentPM4T1E1PMTotalPCVs=lucentPM4T1E1PMTotalPCVs, lucentPM4ModemConnects=lucentPM4ModemConnects, lucentPM4CmT1E1=lucentPM4CmT1E1, lucentPM4FMEqpTrapCtl=lucentPM4FMEqpTrapCtl, lucentPM4AMCETimeStamp=lucentPM4AMCETimeStamp, lucentPM4ModemProtocol=lucentPM4ModemProtocol, lucentPM4EtherOptDns=lucentPM4EtherOptDns, lucentPM4SnmpCommReadAccess=lucentPM4SnmpCommReadAccess, lucentPM4EtherOptBcastHigh=lucentPM4EtherOptBcastHigh, lucentPM4CmSerial=lucentPM4CmSerial, lucentPM4SnmpCommTable=lucentPM4SnmpCommTable, lucentPM4PwrSupWarnTrap=lucentPM4PwrSupWarnTrap, lucentPM4Mib=lucentPM4Mib, lucentPM4EtherOptSnmp=lucentPM4EtherOptSnmp, lucentPM4ChasSummary=lucentPM4ChasSummary, lucentPM4FMEqpTrapId=lucentPM4FMEqpTrapId, lucentPM4Chassis=lucentPM4Chassis, lucentPM4CmEther=lucentPM4CmEther, lucentPM4SerialBoardIndex=lucentPM4SerialBoardIndex, lucentPM4FMT1E1ThreshTrapCfgEntry=lucentPM4FMT1E1ThreshTrapCfgEntry, lucentPM4T1E1PMTotalDMs=lucentPM4T1E1PMTotalDMs, lucentPM4SerialTypeNwDialout=lucentPM4SerialTypeNwDialout, lucentPM4T1E1PMCurCSSs=lucentPM4T1E1PMCurCSSs, lucentPM4T1E1PMIntLineNum=lucentPM4T1E1PMIntLineNum, lucentPM4FMT1E1ThreshTrapAck=lucentPM4FMT1E1ThreshTrapAck, lucentPM4FMEnvUnitTempRange=lucentPM4FMEnvUnitTempRange, lucentPM4EtherSubnetMask=lucentPM4EtherSubnetMask, lucentPM4Traps=lucentPM4Traps, PMAlarmType=PMAlarmType, lucentPM4ChasCmdEntry=lucentPM4ChasCmdEntry, lucentPM4ChasCmdBoardId=lucentPM4ChasCmdBoardId, lucentPM4AcctMgmtComm=lucentPM4AcctMgmtComm, lucentPM4T1E1PMCurIfIndex=lucentPM4T1E1PMCurIfIndex, lucentPM4SerialTypeNwDialIn=lucentPM4SerialTypeNwDialIn, lucentPM4T1E1PMTotalESs=lucentPM4T1E1PMTotalESs, lucentPM4FMT1E1ThreshSESs=lucentPM4FMT1E1ThreshSESs, lucentPM4ModemIndex=lucentPM4ModemIndex, lucentPM4T1E1ChangeTime=lucentPM4T1E1ChangeTime, lucentPM4ChasCmdTable=lucentPM4ChasCmdTable, lucentPM4FMChasTrapEntry=lucentPM4FMChasTrapEntry, lucentPM4PerfMgmt=lucentPM4PerfMgmt, lucentPM4SerialPortStatus=lucentPM4SerialPortStatus, lucentPM4FMUnitType=lucentPM4FMUnitType, lucentPM4ModemCompression=lucentPM4ModemCompression, lucentPM4BoardOnlineTrap=lucentPM4BoardOnlineTrap, lucentPM4T1E1PMCurBESs=lucentPM4T1E1PMCurBESs, lucentPM4FMChasTrapSeverity=lucentPM4FMChasTrapSeverity, lucentPM4T1E1PMCurSEFSs=lucentPM4T1E1PMCurSEFSs, lucentPM4ChasCmdUnitType=lucentPM4ChasCmdUnitType, lucentPM4T1E1Status=lucentPM4T1E1Status, lucentPM4T1E1CRCErrors=lucentPM4T1E1CRCErrors, lucentPM4FMEnvTrapCfg=lucentPM4FMEnvTrapCfg, lucentPM4AMCECalledPartyID=lucentPM4AMCECalledPartyID, lucentPM4T1E1SuperSignal=lucentPM4T1E1SuperSignal, lucentPM4EtherOptNoPAP=lucentPM4EtherOptNoPAP, lucentPM4SerialTypeHardwired=lucentPM4SerialTypeHardwired, lucentPM4AcctMgmt=lucentPM4AcctMgmt, lucentPM4BoardOfflineTrap=lucentPM4BoardOfflineTrap, lucentPM4EtherOptRip=lucentPM4EtherOptRip, lucentPM4T1E1Entry=lucentPM4T1E1Entry, lucentPM4SerialDS0State=lucentPM4SerialDS0State, lucentPM4FMEnvUnitPwrRange=lucentPM4FMEnvUnitPwrRange, lucentPM4FanRestoredTrap=lucentPM4FanRestoredTrap, lucentPM4T1E1YellowAlarms=lucentPM4T1E1YellowAlarms, lucentPM4T1E1PMCurUnitType=lucentPM4T1E1PMCurUnitType, lucentPM4EtherOptEtherIpx=lucentPM4EtherOptEtherIpx, lucentPM4T1E1PMCur=lucentPM4T1E1PMCur, lucentPM4BoardPwrOffTrap=lucentPM4BoardPwrOffTrap, lucentPM4SerialQOctets=lucentPM4SerialQOctets, lucentPM4EtherOptDefaultListen=lucentPM4EtherOptDefaultListen, lucentPM4FMUnitTrapSeverity=lucentPM4FMUnitTrapSeverity, lucentPM4EtherIpGateway=lucentPM4EtherIpGateway, lucentPM4FMEqpRepTimer=lucentPM4FMEqpRepTimer, lucentPM4ModemStatus=lucentPM4ModemStatus, lucentPM4EtherOptAccounting=lucentPM4EtherOptAccounting, lucentPM4AMCEUName=lucentPM4AMCEUName, PMEquipPRIStatus=PMEquipPRIStatus, lucentPM4AMCEType=lucentPM4AMCEType, lucentPM4SerialifDescr=lucentPM4SerialifDescr, lucentPM4FMChasTrapTimeStamp=lucentPM4FMChasTrapTimeStamp, lucentPM4T1E1PMIntBESs=lucentPM4T1E1PMIntBESs, lucentPM4EtherIfType=lucentPM4EtherIfType, lucentPM4EtherOptIPFilter=lucentPM4EtherOptIPFilter, lucentPM4T1E1PMIntSESs=lucentPM4T1E1PMIntSESs, lucentPM4SnmpCommTraps=lucentPM4SnmpCommTraps, lucentPM4T1E1BoardIndex=lucentPM4T1E1BoardIndex, lucentPM4FMChasTrapState=lucentPM4FMChasTrapState, lucentPM4T1E1PMTotal=lucentPM4T1E1PMTotal, lucentPM4T1E1PMTotalSEFSs=lucentPM4T1E1PMTotalSEFSs, lucentPM4T1E1PMIntDMs=lucentPM4T1E1PMIntDMs, lucentPM4T1E1BipolarErrors=lucentPM4T1E1BipolarErrors, lucentPM4ModemOutByteCount=lucentPM4ModemOutByteCount, lucentPM4FMEnvTrapCfgEntry=lucentPM4FMEnvTrapCfgEntry, lucentPM4SerialTypeDeviceName=lucentPM4SerialTypeDeviceName, lucentPM4AMCECallCharge=lucentPM4AMCECallCharge, lucentPM4PwrSupFailTrap=lucentPM4PwrSupFailTrap, lucentPM4SecurityMgmt=lucentPM4SecurityMgmt, lucentPM4EtherIfIndex=lucentPM4EtherIfIndex, lucentPM4RadiusAuthFailTrap=lucentPM4RadiusAuthFailTrap, lucentPM4SerialIdle=lucentPM4SerialIdle, lucentPM4SerialIpAddress=lucentPM4SerialIpAddress, lucentPM4T1E1PMIntLCVs=lucentPM4T1E1PMIntLCVs)
mibBuilder.exportSymbols("LIVINGSTON-PM4-MIB", lucentPM4FMBoardIndex=lucentPM4FMBoardIndex, lucentPM4FMT1E1ThreshDMs=lucentPM4FMT1E1ThreshDMs, lucentPM4T1E1PMTotalIfIndex=lucentPM4T1E1PMTotalIfIndex, lucentPM4ConfigMgmt=lucentPM4ConfigMgmt, lucentPM4AMCEInOctets=lucentPM4AMCEInOctets, lucentPM4EtherPriNameServer=lucentPM4EtherPriNameServer, lucentPM4FMChasTrapUnitType=lucentPM4FMChasTrapUnitType, lucentPM4FMEnvOptUnitTemp=lucentPM4FMEnvOptUnitTemp, lucentPM4T1E1PMTotalBoard=lucentPM4T1E1PMTotalBoard, lucentPM4T1E1PMIntInterval=lucentPM4T1E1PMIntInterval, lucentPM4T1E1Table=lucentPM4T1E1Table, lucentPM4T1E1PMTotalBESs=lucentPM4T1E1PMTotalBESs, lucentPM4SerialUnitType=lucentPM4SerialUnitType, lucentPM4SnmpCommWriteAccess=lucentPM4SnmpCommWriteAccess, lucentPM4FMT1E1ThreshSEFSs=lucentPM4FMT1E1ThreshSEFSs, lucentPM4FMEnvTrapCtl=lucentPM4FMEnvTrapCtl, lucentPM4AMCECallingPartyID=lucentPM4AMCECallingPartyID, lucentPM4ModemDetects=lucentPM4ModemDetects, lucentPM4EtherBoardIndex=lucentPM4EtherBoardIndex, lucentPM4T1E1PMCurLCVs=lucentPM4T1E1PMCurLCVs, lucentPM4FMEqpBoardIndex=lucentPM4FMEqpBoardIndex, lucentPM4T1E1Function=lucentPM4T1E1Function, lucentPM4ChasCmdParams=lucentPM4ChasCmdParams, lucentPM4T1E1UnitType=lucentPM4T1E1UnitType)
