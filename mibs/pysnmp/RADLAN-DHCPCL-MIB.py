#
# PySNMP MIB module RADLAN-DHCPCL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-DHCPCL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:37:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, Counter64, Counter32, Gauge32, iso, TimeTicks, IpAddress, Unsigned32, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "Counter64", "Counter32", "Gauge32", "iso", "TimeTicks", "IpAddress", "Unsigned32", "Bits", "MibIdentifier")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
rlDhcpCl = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 76))
rlDhcpCl.setRevisions(('2007-01-02 00:00',))
if mibBuilder.loadTexts: rlDhcpCl.setLastUpdated('200701020000Z')
if mibBuilder.loadTexts: rlDhcpCl.setOrganization('Radlan - a MARVELL company. Marvell Semiconductor, Inc.')
rlDhcpClActionTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 3), )
if mibBuilder.loadTexts: rlDhcpClActionTable.setStatus('current')
rlDhcpClActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 3, 1), ).setIndexNames((0, "RADLAN-DHCPCL-MIB", "rlDhcpClActionIfIndex"))
if mibBuilder.loadTexts: rlDhcpClActionEntry.setStatus('current')
rlDhcpClActionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClActionIfIndex.setStatus('current')
rlDhcpClActionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlDhcpClActionStatus.setStatus('current')
rlDhcpClActionHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlDhcpClActionHostName.setStatus('current')
rlDhcpApprovalEnabled = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalEnabled.setStatus('current')
rlDhcpApprovalWaitingTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 5), )
if mibBuilder.loadTexts: rlDhcpApprovalWaitingTable.setStatus('current')
rlDhcpApprovalWaitingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 5, 1), ).setIndexNames((0, "RADLAN-DHCPCL-MIB", "rlDhcpApprovalWaitingIfIndex"))
if mibBuilder.loadTexts: rlDhcpApprovalWaitingEntry.setStatus('current')
rlDhcpApprovalWaitingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 5, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalWaitingIfIndex.setStatus('current')
rlDhcpApprovalWaitingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalWaitingAddress.setStatus('current')
rlDhcpApprovalWaitingMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalWaitingMask.setStatus('current')
rlDhcpApprovalWaitingGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalWaitingGateway.setStatus('current')
rlDhcpApprovalActionTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 6), )
if mibBuilder.loadTexts: rlDhcpApprovalActionTable.setStatus('current')
rlDhcpApprovalActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 6, 1), ).setIndexNames((0, "RADLAN-DHCPCL-MIB", "rlDhcpApprovalActionIfIndex"), (0, "RADLAN-DHCPCL-MIB", "rlDhcpApprovalActionAddress"), (0, "RADLAN-DHCPCL-MIB", "rlDhcpApprovalActionMask"))
if mibBuilder.loadTexts: rlDhcpApprovalActionEntry.setStatus('current')
rlDhcpApprovalActionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 6, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalActionIfIndex.setStatus('current')
rlDhcpApprovalActionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalActionAddress.setStatus('current')
rlDhcpApprovalActionMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpApprovalActionMask.setStatus('current')
rlDhcpApprovalActionApprove = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 6, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpApprovalActionApprove.setStatus('current')
rlDhcpClCommandTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 7), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClCommandTable.setStatus('current')
rlDhcpClCommandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlDhcpClCommandEntry.setStatus('current')
rlDhcpClCommandAction = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("renew", 1), ("renewForceAutoconfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClCommandAction.setStatus('current')
rlDhcpClConfigurationFileName = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClConfigurationFileName.setStatus('current')
rlDhcpClOption67Enable = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClOption67Enable.setStatus('current')
rlDhcpClManualTftpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClManualTftpServerAddress.setStatus('current')
rlDhcpClSelectedTftpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClSelectedTftpServerAddress.setStatus('current')
rlDhcpClSelectedTftpServerAddressOrigin = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("sname", 1), ("option66", 2), ("option150", 3), ("option129", 4), ("siaddr", 5), ("manual", 6), ("unknown", 7), ("none", 8), ("optionv6-59", 9), ("broadcastReply", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClSelectedTftpServerAddressOrigin.setStatus('current')
rlDhcpClManualConfigurationFileName = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClManualConfigurationFileName.setStatus('current')
rlDhcpClSelectedConfigurationFileName = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClSelectedConfigurationFileName.setStatus('current')
rlDhcpClSelectedConfigurationFileNameOrigin = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("file", 1), ("option67", 2), ("manual", 3), ("none", 4), ("hostname", 5), ("defaultConfigFile", 6), ("optionv6-60", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClSelectedConfigurationFileNameOrigin.setStatus('current')
rlDhcpClEnabledByDefaultRemovedIfindex = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClEnabledByDefaultRemovedIfindex.setStatus('current')
rlDhcpClAutoUpdateEnabled = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClAutoUpdateEnabled.setStatus('current')
rlDhcpClAutoUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("noData", 1), ("openingIndirectFile", 2), ("downloadedIndirectFile", 3), ("startDownloadImageFile", 4), ("failedToDownloadImageFile", 5), ("quitFileContentsLenZero", 6), ("quitImageFileNameLenZero", 7), ("quitVersionAlreadyUpdated", 8), ("quitIndirectFileNotFound", 9), ("quitImageFileNotFound", 10), ("quitImageVersionNotSupported", 11), ("quitNoTftpOutgoingInterface", 12), ("quitUsbSetupFileOpenError", 13), ("quitUsbSetupFileFormatError", 14), ("quitUsbSetupFileReadWriteError", 15), ("quitUsbSetupFileSetIpAddrError", 16), ("quitUsbSetupFileImageFileNotExist", 17), ("quitUsbSetupFileConfigFileNotExist", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClAutoUpdateStatus.setStatus('current')
rlDhcpClAutoConfigForce = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClAutoConfigForce.setStatus('current')
rlDhcpClAutoConfigAutoSave = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClAutoConfigAutoSave.setStatus('current')
rlDhcpClAutoConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("noData", 1), ("openingDhcpConfigFile", 2), ("openingIndirectFile", 3), ("searchingHostnameInIndirectFile", 4), ("openingHostnameConfigFile", 5), ("openingHostnameCfgFile", 6), ("openingDefaultConfigFile", 7), ("downloadingConfigFile", 8), ("savingConfigInStartupCDB", 9), ("quitDhcpFileNotGivenOrNotExists", 10), ("quitFailedToFindAnyExistingConfigFile", 11), ("quitConfigFileContentsLenZero", 12), ("quitConfigFileDownloadFailed", 13), ("quitConditionsForAutoConfigChanged", 14), ("quitSelectedConfigFileNameUpdateFailed", 15), ("quitSelectedConfigFileNameOriginUpdateFailed", 16), ("quitSelectedTftpServerAddressUpdateFailed", 17), ("quitSelectedTftpServerAddressOriginUpdateFailed", 18), ("quitCopyRunningToStartupFailed", 19), ("quitNoTftpOutgoingInterface", 20), ("finishedSuccessfully", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClAutoConfigStatus.setStatus('current')
rlDhcpClAutoConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tftp", 1), ("scp", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClAutoConfigProtocol.setStatus('current')
rlDhcpClAutoConfigScpFileExtention = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('scp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClAutoConfigScpFileExtention.setStatus('current')
rlDhcpClSelectedTftpServerInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 24), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClSelectedTftpServerInetAddressType.setStatus('current')
rlDhcpClSelectedTftpServerInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 25), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClSelectedTftpServerInetAddress.setStatus('current')
rlDhcpClManualAutoConfigDataTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 26), )
if mibBuilder.loadTexts: rlDhcpClManualAutoConfigDataTable.setStatus('current')
rlDhcpClManualAutoConfigDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 26, 1), ).setIndexNames((0, "RADLAN-DHCPCL-MIB", "rlDhcpClManualAutoConfigDataIndex"))
if mibBuilder.loadTexts: rlDhcpClManualAutoConfigDataEntry.setStatus('current')
rlDhcpClManualAutoConfigDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 26, 1, 1), Integer32())
if mibBuilder.loadTexts: rlDhcpClManualAutoConfigDataIndex.setStatus('current')
rlDhcpClManualServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 26, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClManualServerInetAddressType.setStatus('current')
rlDhcpClManualServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 26, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClManualServerInetAddress.setStatus('current')
rlDhcpClManualImageIndirectFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 26, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClManualImageIndirectFileName.setStatus('current')
rlDhcpClInformationTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 27), )
if mibBuilder.loadTexts: rlDhcpClInformationTable.setStatus('current')
rlDhcpClInformationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 27, 1), ).setIndexNames((0, "RADLAN-DHCPCL-MIB", "rlDhcpClInformationIfIndex"))
if mibBuilder.loadTexts: rlDhcpClInformationEntry.setStatus('current')
rlDhcpClInformationIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationIfIndex.setStatus('current')
rlDhcpClInformationIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationIpAddress.setStatus('current')
rlDhcpClInformationIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationIpMask.setStatus('current')
rlDhcpClInformationT1 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationT1.setStatus('current')
rlDhcpClInformationT2 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationT2.setStatus('current')
rlDhcpClInformationDefaultGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationDefaultGateway.setStatus('current')
rlDhcpClInformationHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationHostName.setStatus('current')
rlDhcpClInformationDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationDomainName.setStatus('current')
rlDhcpClInformationTftpServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationTftpServerName.setStatus('current')
rlDhcpClInformationTftpFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationTftpFileName.setStatus('current')
rlDhcpClInformationTimeZone = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationTimeZone.setStatus('current')
rlDhcpClInformationTftpImageName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 27, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationTftpImageName.setStatus('current')
rlDhcpClInformationDnsServerListTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 28), )
if mibBuilder.loadTexts: rlDhcpClInformationDnsServerListTable.setStatus('current')
rlDhcpClInformationDnsServerListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 28, 1), ).setIndexNames((0, "RADLAN-DHCPCL-MIB", "rlDhcpClInformationDnsServerListIfIndex"), (0, "RADLAN-DHCPCL-MIB", "rlDhcpClInformationDnsServerListPriority"))
if mibBuilder.loadTexts: rlDhcpClInformationDnsServerListEntry.setStatus('current')
rlDhcpClInformationDnsServerListIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 28, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlDhcpClInformationDnsServerListIfIndex.setStatus('current')
rlDhcpClInformationDnsServerListPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 28, 1, 2), Integer32())
if mibBuilder.loadTexts: rlDhcpClInformationDnsServerListPriority.setStatus('current')
rlDhcpClInformationDnsServerListAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 28, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationDnsServerListAddress.setStatus('current')
rlDhcpClInformationTftpServerListTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 29), )
if mibBuilder.loadTexts: rlDhcpClInformationTftpServerListTable.setStatus('current')
rlDhcpClInformationTftpServerListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 29, 1), ).setIndexNames((0, "RADLAN-DHCPCL-MIB", "rlDhcpClInformationTftpServerListIfIndex"), (0, "RADLAN-DHCPCL-MIB", "rlDhcpClInformationTftpServerListPriority"))
if mibBuilder.loadTexts: rlDhcpClInformationTftpServerListEntry.setStatus('current')
rlDhcpClInformationTftpServerListIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 29, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlDhcpClInformationTftpServerListIfIndex.setStatus('current')
rlDhcpClInformationTftpServerListPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 29, 1, 2), Integer32())
if mibBuilder.loadTexts: rlDhcpClInformationTftpServerListPriority.setStatus('current')
rlDhcpClInformationTftpServerListAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 29, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClInformationTftpServerListAddress.setStatus('current')
rlDhcpClAutoUpdateProtocol = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tftp", 1), ("scp", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClAutoUpdateProtocol.setStatus('current')
rlDhcpClAutoUpdateScpFileExtention = MibScalar((1, 3, 6, 1, 4, 1, 89, 76, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('scp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpClAutoUpdateScpFileExtention.setStatus('current')
rlDhcpClEnabledByDefaultRemovedTable = MibTable((1, 3, 6, 1, 4, 1, 89, 76, 32), )
if mibBuilder.loadTexts: rlDhcpClEnabledByDefaultRemovedTable.setStatus('current')
rlDhcpClEnabledByDefaultRemovedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 76, 32, 1), ).setIndexNames((0, "RADLAN-DHCPCL-MIB", "rlDhcpClEnabledByDefaultRemovedIfIndex"))
if mibBuilder.loadTexts: rlDhcpClEnabledByDefaultRemovedEntry.setStatus('current')
rlDhcpClEnabledByDefaultRemovedIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 32, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlDhcpClEnabledByDefaultRemovedIfIndex.setStatus('current')
rlDhcpClEnabledByDefaultRemovedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 76, 32, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlDhcpClEnabledByDefaultRemovedStatus.setStatus('current')
mibBuilder.exportSymbols("RADLAN-DHCPCL-MIB", rlDhcpClInformationDnsServerListPriority=rlDhcpClInformationDnsServerListPriority, rlDhcpClAutoConfigForce=rlDhcpClAutoConfigForce, rlDhcpApprovalActionEntry=rlDhcpApprovalActionEntry, rlDhcpClInformationTftpServerListEntry=rlDhcpClInformationTftpServerListEntry, rlDhcpClInformationTftpServerListPriority=rlDhcpClInformationTftpServerListPriority, rlDhcpClInformationTftpServerListIfIndex=rlDhcpClInformationTftpServerListIfIndex, rlDhcpClSelectedConfigurationFileName=rlDhcpClSelectedConfigurationFileName, rlDhcpApprovalWaitingTable=rlDhcpApprovalWaitingTable, rlDhcpApprovalWaitingEntry=rlDhcpApprovalWaitingEntry, rlDhcpClInformationT2=rlDhcpClInformationT2, rlDhcpApprovalEnabled=rlDhcpApprovalEnabled, rlDhcpClOption67Enable=rlDhcpClOption67Enable, rlDhcpClActionIfIndex=rlDhcpClActionIfIndex, rlDhcpClSelectedTftpServerAddress=rlDhcpClSelectedTftpServerAddress, rlDhcpClInformationDnsServerListTable=rlDhcpClInformationDnsServerListTable, rlDhcpClInformationTable=rlDhcpClInformationTable, rlDhcpApprovalWaitingGateway=rlDhcpApprovalWaitingGateway, rlDhcpClSelectedTftpServerInetAddress=rlDhcpClSelectedTftpServerInetAddress, rlDhcpApprovalActionTable=rlDhcpApprovalActionTable, rlDhcpClAutoConfigStatus=rlDhcpClAutoConfigStatus, rlDhcpClActionHostName=rlDhcpClActionHostName, rlDhcpClManualAutoConfigDataTable=rlDhcpClManualAutoConfigDataTable, rlDhcpClInformationTftpServerName=rlDhcpClInformationTftpServerName, rlDhcpClEnabledByDefaultRemovedIfIndex=rlDhcpClEnabledByDefaultRemovedIfIndex, rlDhcpClManualImageIndirectFileName=rlDhcpClManualImageIndirectFileName, rlDhcpClEnabledByDefaultRemovedEntry=rlDhcpClEnabledByDefaultRemovedEntry, rlDhcpClInformationTftpFileName=rlDhcpClInformationTftpFileName, rlDhcpClInformationDefaultGateway=rlDhcpClInformationDefaultGateway, rlDhcpApprovalActionApprove=rlDhcpApprovalActionApprove, rlDhcpClActionTable=rlDhcpClActionTable, rlDhcpClManualAutoConfigDataIndex=rlDhcpClManualAutoConfigDataIndex, rlDhcpClAutoConfigAutoSave=rlDhcpClAutoConfigAutoSave, rlDhcpClEnabledByDefaultRemovedIfindex=rlDhcpClEnabledByDefaultRemovedIfindex, rlDhcpClInformationDnsServerListAddress=rlDhcpClInformationDnsServerListAddress, rlDhcpClManualServerInetAddress=rlDhcpClManualServerInetAddress, rlDhcpClManualAutoConfigDataEntry=rlDhcpClManualAutoConfigDataEntry, rlDhcpClAutoConfigScpFileExtention=rlDhcpClAutoConfigScpFileExtention, rlDhcpApprovalWaitingAddress=rlDhcpApprovalWaitingAddress, rlDhcpClInformationDnsServerListIfIndex=rlDhcpClInformationDnsServerListIfIndex, rlDhcpClSelectedConfigurationFileNameOrigin=rlDhcpClSelectedConfigurationFileNameOrigin, rlDhcpClAutoUpdateEnabled=rlDhcpClAutoUpdateEnabled, rlDhcpApprovalActionAddress=rlDhcpApprovalActionAddress, rlDhcpClEnabledByDefaultRemovedStatus=rlDhcpClEnabledByDefaultRemovedStatus, rlDhcpClAutoUpdateStatus=rlDhcpClAutoUpdateStatus, rlDhcpClInformationDnsServerListEntry=rlDhcpClInformationDnsServerListEntry, PYSNMP_MODULE_ID=rlDhcpCl, rlDhcpApprovalActionIfIndex=rlDhcpApprovalActionIfIndex, rlDhcpApprovalActionMask=rlDhcpApprovalActionMask, rlDhcpClInformationIpMask=rlDhcpClInformationIpMask, rlDhcpClInformationTftpImageName=rlDhcpClInformationTftpImageName, rlDhcpClAutoConfigProtocol=rlDhcpClAutoConfigProtocol, rlDhcpClInformationT1=rlDhcpClInformationT1, rlDhcpClInformationTimeZone=rlDhcpClInformationTimeZone, rlDhcpClActionStatus=rlDhcpClActionStatus, rlDhcpClManualServerInetAddressType=rlDhcpClManualServerInetAddressType, rlDhcpClActionEntry=rlDhcpClActionEntry, rlDhcpClCommandEntry=rlDhcpClCommandEntry, rlDhcpClAutoUpdateProtocol=rlDhcpClAutoUpdateProtocol, rlDhcpClAutoUpdateScpFileExtention=rlDhcpClAutoUpdateScpFileExtention, rlDhcpClCommandTable=rlDhcpClCommandTable, rlDhcpApprovalWaitingIfIndex=rlDhcpApprovalWaitingIfIndex, rlDhcpClManualTftpServerAddress=rlDhcpClManualTftpServerAddress, rlDhcpClSelectedTftpServerInetAddressType=rlDhcpClSelectedTftpServerInetAddressType, rlDhcpClInformationIfIndex=rlDhcpClInformationIfIndex, rlDhcpApprovalWaitingMask=rlDhcpApprovalWaitingMask, rlDhcpClManualConfigurationFileName=rlDhcpClManualConfigurationFileName, rlDhcpClInformationTftpServerListAddress=rlDhcpClInformationTftpServerListAddress, rlDhcpClInformationTftpServerListTable=rlDhcpClInformationTftpServerListTable, rlDhcpCl=rlDhcpCl, rlDhcpClInformationDomainName=rlDhcpClInformationDomainName, rlDhcpClInformationHostName=rlDhcpClInformationHostName, rlDhcpClCommandAction=rlDhcpClCommandAction, rlDhcpClInformationIpAddress=rlDhcpClInformationIpAddress, rlDhcpClInformationEntry=rlDhcpClInformationEntry, rlDhcpClSelectedTftpServerAddressOrigin=rlDhcpClSelectedTftpServerAddressOrigin, rlDhcpClConfigurationFileName=rlDhcpClConfigurationFileName, rlDhcpClEnabledByDefaultRemovedTable=rlDhcpClEnabledByDefaultRemovedTable)
