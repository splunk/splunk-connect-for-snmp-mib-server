#
# PySNMP MIB module ZXR10-ETH-MGT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-ETH-MGT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:42:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Unsigned32, Counter64, TimeTicks, ModuleIdentity, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, Integer32, MibIdentifier, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "Counter64", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "Integer32", "MibIdentifier", "Bits", "NotificationType")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
zxr10interfaces, = mibBuilder.importSymbols("ZXR10-SMI", "zxr10interfaces")
zxr10EthMgtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2))
zxr10EthMgtMIB.setRevisions(('2005-04-12 00:00',))
if mibBuilder.loadTexts: zxr10EthMgtMIB.setLastUpdated('200504120000Z')
if mibBuilder.loadTexts: zxr10EthMgtMIB.setOrganization('ZTE Corporation')
zxr10EthMgtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1))
zxr10EthQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 1))
zxr10EthConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2))
zxr10EthStats = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3))
class DisplayString(OctetString):
    pass

class InterfaceIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class EthEncapsulationType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("encap-802dot1Q", 1))

class IfSpeedType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4))
    namedValues = NamedValues(("speed-auto", 0), ("speed-1000mbps", 2), ("speed-100mbps", 3), ("speed-10mbps", 4))

class EthPhyFrameType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("ethernet-II", 1))

class EthPhyWorkType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("full-duplex", 1), ("half-duplex", 2))

class EthNegotiationType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 0))
    namedValues = NamedValues(("auto", 1), ("no-auto", 0))

zxr10EthSubIfQueryTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 1, 1), )
if mibBuilder.loadTexts: zxr10EthSubIfQueryTable.setStatus('current')
zxr10EthSubIfQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 1, 1, 1), ).setIndexNames((0, "ZXR10-ETH-MGT-MIB", "zxr10EthSubIfParentIfIndex"), (0, "ZXR10-ETH-MGT-MIB", "zxr10EthSubIfIndex"))
if mibBuilder.loadTexts: zxr10EthSubIfQueryEntry.setStatus('current')
zxr10EthSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSubIfIndex.setStatus('current')
zxr10EthSubIfParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 1, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSubIfParentIfIndex.setStatus('current')
zxr10EthSubIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSubIfName.setStatus('current')
zxr10EthSubIfParentIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSubIfParentIfName.setStatus('current')
zxr10EthSubIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1), )
if mibBuilder.loadTexts: zxr10EthSubIfConfigTable.setStatus('current')
zxr10EthSubIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1, 1), ).setIndexNames((0, "ZXR10-ETH-MGT-MIB", "zxr10EthSubIfConfigParentIfIndex"), (0, "ZXR10-ETH-MGT-MIB", "zxr10EthSubIfConfigSubIfName"))
if mibBuilder.loadTexts: zxr10EthSubIfConfigEntry.setStatus('current')
zxr10EthSubIfConfigParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSubIfConfigParentIfIndex.setStatus('current')
zxr10EthSubIfConfigParentIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSubIfConfigParentIfName.setStatus('current')
zxr10EthSubIfConfigSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSubIfConfigSubIfIndex.setStatus('current')
zxr10EthSubIfConfigSubIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSubIfConfigSubIfName.setStatus('current')
zxr10EthSubIfConfigVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthSubIfConfigVlanID.setStatus('current')
zxr10EthSubIfConfigEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1, 1, 6), EthEncapsulationType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthSubIfConfigEncapType.setStatus('current')
zxr10EthSubIfConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 1, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthSubIfConfigRowStatus.setStatus('current')
zxr10EthPhyIfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 3), )
if mibBuilder.loadTexts: zxr10EthPhyIfTable.setStatus('current')
zxr10EthPhyIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 3, 1), ).setIndexNames((0, "ZXR10-ETH-MGT-MIB", "zxr10EthPhyIfIndex"))
if mibBuilder.loadTexts: zxr10EthPhyIfEntry.setStatus('current')
zxr10EthPhyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthPhyIfIndex.setStatus('current')
zxr10EthPhyIfFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 3, 1, 2), EthPhyFrameType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthPhyIfFrameType.setStatus('current')
zxr10EthPhyIfNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 3, 1, 3), EthNegotiationType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthPhyIfNegotiation.setStatus('current')
zxr10EthPhyWorkType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 3, 1, 4), EthPhyWorkType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthPhyWorkType.setStatus('current')
zxr10EthPhyIfSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 3, 1, 5), IfSpeedType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthPhyIfSpeed.setStatus('current')
zxr10EthPhyIfMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthPhyIfMTU.setStatus('current')
zxr10EthRecvStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1), )
if mibBuilder.loadTexts: zxr10EthRecvStatsTable.setStatus('current')
zxr10EthRecvStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1), ).setIndexNames((0, "ZXR10-ETH-MGT-MIB", "zxr10EthPhyIfIndex"))
if mibBuilder.loadTexts: zxr10EthRecvStatsEntry.setStatus('current')
zxr10EthRecvStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvStatsIfIndex.setStatus('current')
zxr10EthRecvPktsUnder64Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPktsUnder64Octects.setStatus('current')
zxr10EthRecvPkts64Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPkts64Octects.setStatus('current')
zxr10EthRecvPkts65to127Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPkts65to127Octects.setStatus('current')
zxr10EthRecvPkts128to255Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPkts128to255Octects.setStatus('current')
zxr10EthRecvPkts255to511Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPkts255to511Octects.setStatus('current')
zxr10EthRecvPkts512to1023Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPkts512to1023Octects.setStatus('current')
zxr10EthRecvPkts1024to1518Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPkts1024to1518Octects.setStatus('current')
zxr10EthRecvPktsOverSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPktsOverSize.setStatus('current')
zxr10EthRecvPktsCRCError = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthRecvPktsCRCError.setStatus('current')
zxr10EthRecvClearCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthRecvClearCounts.setStatus('current')
zxr10EthSndStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2), )
if mibBuilder.loadTexts: zxr10EthSndStatsTable.setStatus('current')
zxr10EthSndStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1), ).setIndexNames((0, "ZXR10-ETH-MGT-MIB", "zxr10EthPhyIfIndex"))
if mibBuilder.loadTexts: zxr10EthSndStatsEntry.setStatus('current')
zxr10EthSndStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndStatsIfIndex.setStatus('current')
zxr10EthSndPktsUnder64Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndPktsUnder64Octects.setStatus('current')
zxr10EthSndPkts64Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndPkts64Octects.setStatus('current')
zxr10EthSndPkts65to127Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndPkts65to127Octects.setStatus('current')
zxr10EthSndPkts128to255Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndPkts128to255Octects.setStatus('current')
zxr10EthSndPkts255to511Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndPkts255to511Octects.setStatus('current')
zxr10EthSndPkts512to1023Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndPkts512to1023Octects.setStatus('current')
zxr10EthSndPkts1024to1518Octects = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndPkts1024to1518Octects.setStatus('current')
zxr10EthSndPktsOverSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthSndPktsOverSize.setStatus('current')
zxr10EthSndClearCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthSndClearCounts.setStatus('current')
zxr10EthLoopBackTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 4), )
if mibBuilder.loadTexts: zxr10EthLoopBackTable.setStatus('current')
zxr10EthLoopBackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 4, 1), ).setIndexNames((0, "ZXR10-ETH-MGT-MIB", "zxr10EthLoopBackNo"))
if mibBuilder.loadTexts: zxr10EthLoopBackEntry.setStatus('current')
zxr10EthLoopBackIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 4, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthLoopBackIfIndex.setStatus('current')
zxr10EthLoopBackIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthLoopBackIfName.setStatus('current')
zxr10EthLoopBackNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10EthLoopBackNo.setStatus('current')
zxr10EthLoopBackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 103, 2, 1, 2, 4, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10EthLoopBackRowStatus.setStatus('current')
mibBuilder.exportSymbols("ZXR10-ETH-MGT-MIB", IfSpeedType=IfSpeedType, DisplayString=DisplayString, zxr10EthRecvPkts128to255Octects=zxr10EthRecvPkts128to255Octects, zxr10EthStats=zxr10EthStats, zxr10EthSubIfConfigParentIfIndex=zxr10EthSubIfConfigParentIfIndex, zxr10EthPhyIfNegotiation=zxr10EthPhyIfNegotiation, zxr10EthSndPkts255to511Octects=zxr10EthSndPkts255to511Octects, zxr10EthPhyWorkType=zxr10EthPhyWorkType, zxr10EthRecvPkts64Octects=zxr10EthRecvPkts64Octects, zxr10EthSndClearCounts=zxr10EthSndClearCounts, zxr10EthPhyIfMTU=zxr10EthPhyIfMTU, zxr10EthSndPkts128to255Octects=zxr10EthSndPkts128to255Octects, zxr10EthMgtMIBObjects=zxr10EthMgtMIBObjects, zxr10EthConfiguration=zxr10EthConfiguration, zxr10EthQuery=zxr10EthQuery, zxr10EthMgtMIB=zxr10EthMgtMIB, zxr10EthLoopBackRowStatus=zxr10EthLoopBackRowStatus, zxr10EthSubIfConfigTable=zxr10EthSubIfConfigTable, zxr10EthRecvPktsCRCError=zxr10EthRecvPktsCRCError, zxr10EthRecvPkts512to1023Octects=zxr10EthRecvPkts512to1023Octects, zxr10EthLoopBackIfIndex=zxr10EthLoopBackIfIndex, zxr10EthSubIfConfigSubIfName=zxr10EthSubIfConfigSubIfName, zxr10EthRecvPkts65to127Octects=zxr10EthRecvPkts65to127Octects, zxr10EthSndPktsOverSize=zxr10EthSndPktsOverSize, zxr10EthSndPkts64Octects=zxr10EthSndPkts64Octects, zxr10EthLoopBackNo=zxr10EthLoopBackNo, zxr10EthSubIfConfigEncapType=zxr10EthSubIfConfigEncapType, zxr10EthSubIfConfigVlanID=zxr10EthSubIfConfigVlanID, zxr10EthSubIfName=zxr10EthSubIfName, zxr10EthPhyIfIndex=zxr10EthPhyIfIndex, zxr10EthRecvPkts1024to1518Octects=zxr10EthRecvPkts1024to1518Octects, zxr10EthSubIfConfigParentIfName=zxr10EthSubIfConfigParentIfName, zxr10EthPhyIfTable=zxr10EthPhyIfTable, zxr10EthSndPktsUnder64Octects=zxr10EthSndPktsUnder64Octects, zxr10EthSubIfIndex=zxr10EthSubIfIndex, zxr10EthLoopBackIfName=zxr10EthLoopBackIfName, zxr10EthSubIfQueryEntry=zxr10EthSubIfQueryEntry, zxr10EthPhyIfSpeed=zxr10EthPhyIfSpeed, zxr10EthPhyIfFrameType=zxr10EthPhyIfFrameType, zxr10EthSubIfConfigRowStatus=zxr10EthSubIfConfigRowStatus, InterfaceIndex=InterfaceIndex, zxr10EthSubIfParentIfIndex=zxr10EthSubIfParentIfIndex, zxr10EthRecvPkts255to511Octects=zxr10EthRecvPkts255to511Octects, zxr10EthSndPkts1024to1518Octects=zxr10EthSndPkts1024to1518Octects, EthPhyFrameType=EthPhyFrameType, zxr10EthSubIfParentIfName=zxr10EthSubIfParentIfName, zxr10EthLoopBackTable=zxr10EthLoopBackTable, zxr10EthLoopBackEntry=zxr10EthLoopBackEntry, zxr10EthSubIfConfigSubIfIndex=zxr10EthSubIfConfigSubIfIndex, EthPhyWorkType=EthPhyWorkType, zxr10EthRecvStatsTable=zxr10EthRecvStatsTable, zxr10EthRecvPktsOverSize=zxr10EthRecvPktsOverSize, zxr10EthRecvClearCounts=zxr10EthRecvClearCounts, EthNegotiationType=EthNegotiationType, zxr10EthPhyIfEntry=zxr10EthPhyIfEntry, zxr10EthRecvPktsUnder64Octects=zxr10EthRecvPktsUnder64Octects, zxr10EthSndStatsTable=zxr10EthSndStatsTable, PYSNMP_MODULE_ID=zxr10EthMgtMIB, zxr10EthRecvStatsEntry=zxr10EthRecvStatsEntry, zxr10EthSubIfQueryTable=zxr10EthSubIfQueryTable, zxr10EthSndPkts512to1023Octects=zxr10EthSndPkts512to1023Octects, zxr10EthSndStatsEntry=zxr10EthSndStatsEntry, zxr10EthSubIfConfigEntry=zxr10EthSubIfConfigEntry, zxr10EthSndPkts65to127Octects=zxr10EthSndPkts65to127Octects, EthEncapsulationType=EthEncapsulationType, zxr10EthRecvStatsIfIndex=zxr10EthRecvStatsIfIndex, zxr10EthSndStatsIfIndex=zxr10EthSndStatsIfIndex)
