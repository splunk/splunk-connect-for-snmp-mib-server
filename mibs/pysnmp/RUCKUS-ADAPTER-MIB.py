#
# PySNMP MIB module RUCKUS-ADAPTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RUCKUS-ADAPTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:50:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ruckusCommonAdapterModule, = mibBuilder.importSymbols("RUCKUS-ROOT-MIB", "ruckusCommonAdapterModule")
RuckusSSID, RuckusdB = mibBuilder.importSymbols("RUCKUS-TC-MIB", "RuckusSSID", "RuckusdB")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, ObjectIdentity, Integer32, ModuleIdentity, Counter64, IpAddress, Bits, iso, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "ObjectIdentity", "Integer32", "ModuleIdentity", "Counter64", "IpAddress", "Bits", "iso", "Counter32", "NotificationType")
DisplayString, TruthValue, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "MacAddress", "TextualConvention")
ruckusAdapterMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1))
if mibBuilder.loadTexts: ruckusAdapterMIB.setLastUpdated('201010150800Z')
if mibBuilder.loadTexts: ruckusAdapterMIB.setOrganization('Ruckus Wireless, Inc.')
ruckusAdapterObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1))
ruckusAdapterInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1))
ruckusAdapterEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 2))
ruckusAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 1), )
if mibBuilder.loadTexts: ruckusAdapterTable.setStatus('current')
ruckusAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RUCKUS-ADAPTER-MIB", "ruckusAdapterMacAddress"))
if mibBuilder.loadTexts: ruckusAdapterEntry.setStatus('current')
ruckusAdapterMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: ruckusAdapterMacAddress.setStatus('current')
ruckusAdapterReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusAdapterReboot.setStatus('current')
ruckusAdapterInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 2), )
if mibBuilder.loadTexts: ruckusAdapterInfoTable.setStatus('current')
ruckusAdapterInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RUCKUS-ADAPTER-MIB", "ruckusAdapterInfoMacAddr"))
if mibBuilder.loadTexts: ruckusAdapterInfoEntry.setStatus('current')
ruckusAdapterInfoMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: ruckusAdapterInfoMacAddr.setStatus('current')
ruckusAdapterInfoSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 2, 1, 2), RuckusSSID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterInfoSSID.setStatus('current')
ruckusAdapterInfoBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterInfoBSSID.setStatus('current')
ruckusAdapterRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 2, 1, 4), RuckusdB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterRssi.setStatus('current')
ruckusAdapterStatTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3), )
if mibBuilder.loadTexts: ruckusAdapterStatTable.setStatus('current')
ruckusAdapterStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RUCKUS-ADAPTER-MIB", "ruckusAdapterStatMacAddr"))
if mibBuilder.loadTexts: ruckusAdapterStatEntry.setStatus('current')
ruckusAdapterStatMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: ruckusAdapterStatMacAddr.setStatus('current')
ruckusAdapterStatRxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxDataFrames.setStatus('current')
ruckusAdapterStatRxMgmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxMgmtFrames.setStatus('current')
ruckusAdapterStatRxCtrlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxCtrlFrames.setStatus('current')
ruckusAdapterStatRxUcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxUcastFrames.setStatus('current')
ruckusAdapterStatRxMcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxMcastFrames.setStatus('current')
ruckusAdapterStatRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxBytes.setStatus('current')
ruckusAdapterStatRxDup = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxDup.setStatus('current')
ruckusAdapterStatRxNoPrivacy = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxNoPrivacy.setStatus('current')
ruckusAdapterStatRxWEPFail = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxWEPFail.setStatus('current')
ruckusAdapterStatRxDemicFail = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxDemicFail.setStatus('current')
ruckusAdapterStatRxDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxDecap.setStatus('current')
ruckusAdapterStatRxDeFrag = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxDeFrag.setStatus('current')
ruckusAdapterStatRxDisAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxDisAssoc.setStatus('current')
ruckusAdapterStatRxDeAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxDeAuth.setStatus('current')
ruckusAdapterStatRxUnAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxUnAuth.setStatus('current')
ruckusAdapterStatRxUnEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxUnEncrypted.setStatus('current')
ruckusAdapterStatRxBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatRxBeacons.setStatus('current')
ruckusAdapterStatTxDataFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxDataFrames.setStatus('current')
ruckusAdapterStatTxMgmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxMgmtFrames.setStatus('current')
ruckusAdapterStatTxUcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxUcastFrames.setStatus('current')
ruckusAdapterStatTxMcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxMcastFrames.setStatus('current')
ruckusAdapterStatTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxBytes.setStatus('current')
ruckusAdapterStatTxAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxAssoc.setStatus('current')
ruckusAdapterStatTxAssocFail = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxAssocFail.setStatus('current')
ruckusAdapterStatTxAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxAuth.setStatus('current')
ruckusAdapterStatTxAuthFail = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxAuthFail.setStatus('current')
ruckusAdapterStatTxDeAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxDeAuth.setStatus('current')
ruckusAdapterStatTxDisAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxDisAssoc.setStatus('current')
ruckusAdapterStatTxProbeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxProbeReq.setStatus('current')
ruckusAdapterStatTxProbeResp = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 1, 9, 1, 1, 1, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusAdapterStatTxProbeResp.setStatus('current')
mibBuilder.exportSymbols("RUCKUS-ADAPTER-MIB", ruckusAdapterStatTxProbeReq=ruckusAdapterStatTxProbeReq, ruckusAdapterStatRxDeAuth=ruckusAdapterStatRxDeAuth, PYSNMP_MODULE_ID=ruckusAdapterMIB, ruckusAdapterStatRxBeacons=ruckusAdapterStatRxBeacons, ruckusAdapterMacAddress=ruckusAdapterMacAddress, ruckusAdapterStatTxMcastFrames=ruckusAdapterStatTxMcastFrames, ruckusAdapterStatTxDisAssoc=ruckusAdapterStatTxDisAssoc, ruckusAdapterInfoTable=ruckusAdapterInfoTable, ruckusAdapterStatRxMgmtFrames=ruckusAdapterStatRxMgmtFrames, ruckusAdapterStatRxDisAssoc=ruckusAdapterStatRxDisAssoc, ruckusAdapterEvents=ruckusAdapterEvents, ruckusAdapterStatRxDataFrames=ruckusAdapterStatRxDataFrames, ruckusAdapterInfoBSSID=ruckusAdapterInfoBSSID, ruckusAdapterInfoEntry=ruckusAdapterInfoEntry, ruckusAdapterStatRxUnEncrypted=ruckusAdapterStatRxUnEncrypted, ruckusAdapterStatTxDeAuth=ruckusAdapterStatTxDeAuth, ruckusAdapterStatRxNoPrivacy=ruckusAdapterStatRxNoPrivacy, ruckusAdapterStatTxAuth=ruckusAdapterStatTxAuth, ruckusAdapterStatTxUcastFrames=ruckusAdapterStatTxUcastFrames, ruckusAdapterStatRxCtrlFrames=ruckusAdapterStatRxCtrlFrames, ruckusAdapterStatTxDataFrames=ruckusAdapterStatTxDataFrames, ruckusAdapterReboot=ruckusAdapterReboot, ruckusAdapterStatRxUnAuth=ruckusAdapterStatRxUnAuth, ruckusAdapterStatTxAuthFail=ruckusAdapterStatTxAuthFail, ruckusAdapterRssi=ruckusAdapterRssi, ruckusAdapterStatRxWEPFail=ruckusAdapterStatRxWEPFail, ruckusAdapterStatEntry=ruckusAdapterStatEntry, ruckusAdapterTable=ruckusAdapterTable, ruckusAdapterInfoSSID=ruckusAdapterInfoSSID, ruckusAdapterStatRxUcastFrames=ruckusAdapterStatRxUcastFrames, ruckusAdapterStatRxMcastFrames=ruckusAdapterStatRxMcastFrames, ruckusAdapterStatTable=ruckusAdapterStatTable, ruckusAdapterStatTxBytes=ruckusAdapterStatTxBytes, ruckusAdapterStatRxDemicFail=ruckusAdapterStatRxDemicFail, ruckusAdapterStatTxProbeResp=ruckusAdapterStatTxProbeResp, ruckusAdapterStatRxBytes=ruckusAdapterStatRxBytes, ruckusAdapterMIB=ruckusAdapterMIB, ruckusAdapterInfoMacAddr=ruckusAdapterInfoMacAddr, ruckusAdapterStatMacAddr=ruckusAdapterStatMacAddr, ruckusAdapterStatRxDup=ruckusAdapterStatRxDup, ruckusAdapterStatTxMgmtFrames=ruckusAdapterStatTxMgmtFrames, ruckusAdapterStatRxDecap=ruckusAdapterStatRxDecap, ruckusAdapterStatRxDeFrag=ruckusAdapterStatRxDeFrag, ruckusAdapterInfo=ruckusAdapterInfo, ruckusAdapterStatTxAssoc=ruckusAdapterStatTxAssoc, ruckusAdapterObjects=ruckusAdapterObjects, ruckusAdapterStatTxAssocFail=ruckusAdapterStatTxAssocFail, ruckusAdapterEntry=ruckusAdapterEntry)
