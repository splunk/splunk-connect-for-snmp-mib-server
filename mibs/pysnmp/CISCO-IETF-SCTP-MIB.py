#
# PySNMP MIB module CISCO-IETF-SCTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-SCTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:43:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, Counter64, Counter32, iso, ModuleIdentity, Bits, ObjectIdentity, MibIdentifier, Unsigned32, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "Counter32", "iso", "ModuleIdentity", "Bits", "ObjectIdentity", "MibIdentifier", "Unsigned32", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32")
TimeStamp, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "DisplayString")
cSctpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 75))
cSctpMIB.setRevisions(('2001-08-08 00:00',))
if mibBuilder.loadTexts: cSctpMIB.setLastUpdated('200108080000Z')
if mibBuilder.loadTexts: cSctpMIB.setOrganization('IETF SIGTRAN Working Group')
cSctpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 75, 1))
cSctpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 75, 2))
cSctpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1))
cSctpTables = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2))
class InetPortNumber(TextualConvention, Unsigned32):
    status = 'current'

cSctpRtoAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("vanj", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpRtoAlgorithm.setStatus('current')
cSctpRtoMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 2), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpRtoMin.setStatus('current')
cSctpRtoMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 3), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpRtoMax.setStatus('current')
cSctpRtoInitial = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 4), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpRtoInitial.setStatus('current')
cSctpMaxAssoc = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpMaxAssoc.setStatus('current')
cSctpValCookieLife = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 6), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpValCookieLife.setStatus('current')
cSctpMaxInitRetr = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpMaxInitRetr.setStatus('current')
cSctpCurrEstab = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpCurrEstab.setStatus('current')
cSctpActiveEstabs = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpActiveEstabs.setStatus('current')
cSctpPassiveEstabs = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpPassiveEstabs.setStatus('current')
cSctpAborteds = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAborteds.setStatus('current')
cSctpShutdowns = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpShutdowns.setStatus('current')
cSctpStatOutOfBlues = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatOutOfBlues.setStatus('current')
cSctpStatChecksumErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatChecksumErrors.setStatus('current')
cSctpStatSentCtrlChunks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatSentCtrlChunks.setStatus('current')
cSctpStatSentOrderChunks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatSentOrderChunks.setStatus('current')
cSctpStatSentUnorderChunks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatSentUnorderChunks.setStatus('current')
cSctpStatRecCtrlChunks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatRecCtrlChunks.setStatus('current')
cSctpStatRecOrderChunks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatRecOrderChunks.setStatus('current')
cSctpStatRecUnorderChunks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatRecUnorderChunks.setStatus('current')
cSctpStatFragmentedUsrMessages = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatFragmentedUsrMessages.setStatus('current')
cSctpStatReassembledUsrMessages = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatReassembledUsrMessages.setStatus('current')
cSctpStatSentSCTPPacks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatSentSCTPPacks.setStatus('current')
cSctpStatRecSCTPPacks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpStatRecSCTPPacks.setStatus('current')
cSctpAssocTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2), )
if mibBuilder.loadTexts: cSctpAssocTable.setStatus('current')
cSctpAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-IETF-SCTP-MIB", "cSctpAssocId"))
if mibBuilder.loadTexts: cSctpAssocEntry.setStatus('current')
cSctpAssocId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cSctpAssocId.setStatus('current')
cSctpAssocRemHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemHostName.setStatus('current')
cSctpAssocLocalSCTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 3), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocLocalSCTPPort.setStatus('current')
cSctpAssocRemSCTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 4), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemSCTPPort.setStatus('current')
cSctpAssocRemPrimaryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemPrimaryAddressType.setStatus('current')
cSctpAssocRemPrimaryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemPrimaryAddress.setStatus('current')
cSctpAssocHeartBeatTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocHeartBeatTimer.setStatus('current')
cSctpAssocState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("closed", 1), ("cookieWait", 2), ("cookieEchoed", 3), ("established", 4), ("shutdownPending", 5), ("shutdownSent", 6), ("shutdownReceived", 7), ("shutdownAckSent", 8), ("deleteTCB", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSctpAssocState.setStatus('current')
cSctpAssocInStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocInStreams.setStatus('current')
cSctpAssocOutStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocOutStreams.setStatus('current')
cSctpAssocMaxRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocMaxRetr.setStatus('current')
cSctpAssocT1expireds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocT1expireds.setStatus('current')
cSctpAssocT2expireds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocT2expireds.setStatus('current')
cSctpAssocRtxChunks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRtxChunks.setStatus('current')
cSctpAssocStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 2, 1, 17), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocStartTime.setStatus('current')
cSctpAssocLocalAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 3), )
if mibBuilder.loadTexts: cSctpAssocLocalAddressTable.setStatus('current')
cSctpAssocLocalAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-IETF-SCTP-MIB", "cSctpAssocId"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocLocalAddressIPType"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocLocalAddressIP"))
if mibBuilder.loadTexts: cSctpAssocLocalAddressEntry.setStatus('current')
cSctpAssocLocalAddressIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cSctpAssocLocalAddressIPType.setStatus('current')
cSctpAssocLocalAddressIP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: cSctpAssocLocalAddressIP.setStatus('current')
cSctpAssocLocalAddressStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocLocalAddressStartTime.setStatus('current')
cSctpAssocRemAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4), )
if mibBuilder.loadTexts: cSctpAssocRemAddressTable.setStatus('current')
cSctpAssocRemAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-IETF-SCTP-MIB", "cSctpAssocId"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressIPType"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressIP"))
if mibBuilder.loadTexts: cSctpAssocRemAddressEntry.setStatus('current')
cSctpAssocRemAddressIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cSctpAssocRemAddressIPType.setStatus('current')
cSctpAssocRemAddressIP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: cSctpAssocRemAddressIP.setStatus('current')
cSctpAssocRemAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemAddressStatus.setStatus('current')
cSctpAssocRemAddressHBFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemAddressHBFlag.setStatus('current')
cSctpAssocRemAddressRTO = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1, 5), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemAddressRTO.setStatus('current')
cSctpAssocRemAddressMaxPathRtx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemAddressMaxPathRtx.setStatus('current')
cSctpAssocRemAddressRtx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemAddressRtx.setStatus('current')
cSctpAssocRemAddressStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 4, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpAssocRemAddressStartTime.setStatus('current')
cSctpLookupLocalPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 5), )
if mibBuilder.loadTexts: cSctpLookupLocalPortTable.setStatus('current')
cSctpLookupLocalPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-IETF-SCTP-MIB", "cSctpAssocLocalSCTPPort"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocId"))
if mibBuilder.loadTexts: cSctpLookupLocalPortEntry.setStatus('current')
cSctpLookupLocalPortStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 5, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpLookupLocalPortStartTime.setStatus('current')
cSctpLookupRemPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 6), )
if mibBuilder.loadTexts: cSctpLookupRemPortTable.setStatus('current')
cSctpLookupRemPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-IETF-SCTP-MIB", "cSctpAssocRemSCTPPort"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocId"))
if mibBuilder.loadTexts: cSctpLookupRemPortEntry.setStatus('current')
cSctpLookupRemPortStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 6, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpLookupRemPortStartTime.setStatus('current')
cSctpLookupRemHostNameTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 7), )
if mibBuilder.loadTexts: cSctpLookupRemHostNameTable.setStatus('current')
cSctpLookupRemHostNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 7, 1), ).setIndexNames((0, "CISCO-IETF-SCTP-MIB", "cSctpAssocRemHostName"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocId"))
if mibBuilder.loadTexts: cSctpLookupRemHostNameEntry.setStatus('current')
cSctpLookupRemHostNameStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 7, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpLookupRemHostNameStartTime.setStatus('current')
cSctpLookupRemPrimIPAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 8), )
if mibBuilder.loadTexts: cSctpLookupRemPrimIPAddrTable.setStatus('current')
cSctpLookupRemPrimIPAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 8, 1), ).setIndexNames((0, "CISCO-IETF-SCTP-MIB", "cSctpAssocRemPrimaryAddressType"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocRemPrimaryAddress"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocId"))
if mibBuilder.loadTexts: cSctpLookupRemPrimIPAddrEntry.setStatus('current')
cSctpLookupRemPrimIPAddrStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 8, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpLookupRemPrimIPAddrStartTime.setStatus('current')
cSctpLookupRemIPAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 9), )
if mibBuilder.loadTexts: cSctpLookupRemIPAddrTable.setStatus('current')
cSctpLookupRemIPAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 9, 1), ).setIndexNames((0, "CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressIPType"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressIP"), (0, "CISCO-IETF-SCTP-MIB", "cSctpAssocId"))
if mibBuilder.loadTexts: cSctpLookupRemIPAddrEntry.setStatus('current')
cSctpLookupRemIPAddrStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 75, 1, 2, 9, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSctpLookupRemIPAddrStartTime.setStatus('current')
cSctpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 1))
cSctpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 2))
cSctpGeneralVariablesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 1, 1)).setObjects(("CISCO-IETF-SCTP-MIB", "cSctpRtoAlgorithm"), ("CISCO-IETF-SCTP-MIB", "cSctpRtoMin"), ("CISCO-IETF-SCTP-MIB", "cSctpRtoMax"), ("CISCO-IETF-SCTP-MIB", "cSctpRtoInitial"), ("CISCO-IETF-SCTP-MIB", "cSctpMaxAssoc"), ("CISCO-IETF-SCTP-MIB", "cSctpValCookieLife"), ("CISCO-IETF-SCTP-MIB", "cSctpMaxInitRetr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSctpGeneralVariablesGroup = cSctpGeneralVariablesGroup.setStatus('current')
cSctpStateStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 1, 2)).setObjects(("CISCO-IETF-SCTP-MIB", "cSctpCurrEstab"), ("CISCO-IETF-SCTP-MIB", "cSctpActiveEstabs"), ("CISCO-IETF-SCTP-MIB", "cSctpPassiveEstabs"), ("CISCO-IETF-SCTP-MIB", "cSctpAborteds"), ("CISCO-IETF-SCTP-MIB", "cSctpShutdowns"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSctpStateStatGroup = cSctpStateStatGroup.setStatus('current')
cSctpOtherStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 1, 3)).setObjects(("CISCO-IETF-SCTP-MIB", "cSctpStatOutOfBlues"), ("CISCO-IETF-SCTP-MIB", "cSctpStatChecksumErrors"), ("CISCO-IETF-SCTP-MIB", "cSctpStatSentCtrlChunks"), ("CISCO-IETF-SCTP-MIB", "cSctpStatSentOrderChunks"), ("CISCO-IETF-SCTP-MIB", "cSctpStatSentUnorderChunks"), ("CISCO-IETF-SCTP-MIB", "cSctpStatRecCtrlChunks"), ("CISCO-IETF-SCTP-MIB", "cSctpStatRecOrderChunks"), ("CISCO-IETF-SCTP-MIB", "cSctpStatRecUnorderChunks"), ("CISCO-IETF-SCTP-MIB", "cSctpStatFragmentedUsrMessages"), ("CISCO-IETF-SCTP-MIB", "cSctpStatReassembledUsrMessages"), ("CISCO-IETF-SCTP-MIB", "cSctpStatSentSCTPPacks"), ("CISCO-IETF-SCTP-MIB", "cSctpStatRecSCTPPacks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSctpOtherStatGroup = cSctpOtherStatGroup.setStatus('current')
cSctpAssocTablesVariablesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 1, 4)).setObjects(("CISCO-IETF-SCTP-MIB", "cSctpAssocRemHostName"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocLocalSCTPPort"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRemSCTPPort"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRemPrimaryAddressType"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRemPrimaryAddress"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocHeartBeatTimer"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocState"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocInStreams"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocOutStreams"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocMaxRetr"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocT1expireds"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocT2expireds"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRtxChunks"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocStartTime"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocLocalAddressStartTime"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressStatus"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressHBFlag"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressRTO"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressMaxPathRtx"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressStartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSctpAssocTablesVariablesGroup = cSctpAssocTablesVariablesGroup.setStatus('current')
cSctpAssocStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 1, 5)).setObjects(("CISCO-IETF-SCTP-MIB", "cSctpAssocRemAddressRtx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSctpAssocStatGroup = cSctpAssocStatGroup.setStatus('current')
cSctpInverseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 1, 6)).setObjects(("CISCO-IETF-SCTP-MIB", "cSctpLookupLocalPortStartTime"), ("CISCO-IETF-SCTP-MIB", "cSctpLookupRemPortStartTime"), ("CISCO-IETF-SCTP-MIB", "cSctpLookupRemHostNameStartTime"), ("CISCO-IETF-SCTP-MIB", "cSctpLookupRemPrimIPAddrStartTime"), ("CISCO-IETF-SCTP-MIB", "cSctpLookupRemIPAddrStartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSctpInverseGroup = cSctpInverseGroup.setStatus('current')
cSctpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 75, 2, 2, 1)).setObjects(("CISCO-IETF-SCTP-MIB", "cSctpGeneralVariablesGroup"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocTablesVariablesGroup"), ("CISCO-IETF-SCTP-MIB", "cSctpStateStatGroup"), ("CISCO-IETF-SCTP-MIB", "cSctpOtherStatGroup"), ("CISCO-IETF-SCTP-MIB", "cSctpAssocStatGroup"), ("CISCO-IETF-SCTP-MIB", "cSctpInverseGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSctpCompliance = cSctpCompliance.setStatus('current')
mibBuilder.exportSymbols("CISCO-IETF-SCTP-MIB", cSctpAssocOutStreams=cSctpAssocOutStreams, cSctpGroups=cSctpGroups, cSctpRtoInitial=cSctpRtoInitial, cSctpAssocInStreams=cSctpAssocInStreams, cSctpInverseGroup=cSctpInverseGroup, cSctpAssocLocalAddressIP=cSctpAssocLocalAddressIP, cSctpLookupLocalPortStartTime=cSctpLookupLocalPortStartTime, cSctpMaxInitRetr=cSctpMaxInitRetr, cSctpPassiveEstabs=cSctpPassiveEstabs, cSctpAssocStartTime=cSctpAssocStartTime, cSctpAssocRemAddressRTO=cSctpAssocRemAddressRTO, cSctpAssocRemAddressHBFlag=cSctpAssocRemAddressHBFlag, cSctpAssocEntry=cSctpAssocEntry, cSctpCompliance=cSctpCompliance, cSctpStatChecksumErrors=cSctpStatChecksumErrors, cSctpLookupRemPortStartTime=cSctpLookupRemPortStartTime, cSctpAssocTable=cSctpAssocTable, cSctpRtoMax=cSctpRtoMax, cSctpLookupRemPrimIPAddrStartTime=cSctpLookupRemPrimIPAddrStartTime, cSctpAssocRemAddressStatus=cSctpAssocRemAddressStatus, cSctpAssocRemPrimaryAddressType=cSctpAssocRemPrimaryAddressType, cSctpAssocLocalAddressStartTime=cSctpAssocLocalAddressStartTime, cSctpLookupRemPrimIPAddrTable=cSctpLookupRemPrimIPAddrTable, cSctpGeneralVariablesGroup=cSctpGeneralVariablesGroup, cSctpActiveEstabs=cSctpActiveEstabs, cSctpLookupRemIPAddrTable=cSctpLookupRemIPAddrTable, cSctpLookupRemHostNameEntry=cSctpLookupRemHostNameEntry, cSctpStatSentUnorderChunks=cSctpStatSentUnorderChunks, cSctpAssocRemAddressRtx=cSctpAssocRemAddressRtx, cSctpAssocLocalAddressIPType=cSctpAssocLocalAddressIPType, cSctpObjects=cSctpObjects, cSctpStateStatGroup=cSctpStateStatGroup, cSctpStatRecCtrlChunks=cSctpStatRecCtrlChunks, cSctpAssocRemSCTPPort=cSctpAssocRemSCTPPort, cSctpAssocStatGroup=cSctpAssocStatGroup, cSctpCompliances=cSctpCompliances, cSctpStatRecSCTPPacks=cSctpStatRecSCTPPacks, cSctpAssocRemAddressStartTime=cSctpAssocRemAddressStartTime, cSctpShutdowns=cSctpShutdowns, cSctpAborteds=cSctpAborteds, cSctpStatOutOfBlues=cSctpStatOutOfBlues, cSctpConformance=cSctpConformance, cSctpMaxAssoc=cSctpMaxAssoc, cSctpAssocLocalAddressEntry=cSctpAssocLocalAddressEntry, cSctpAssocRemAddressEntry=cSctpAssocRemAddressEntry, cSctpAssocRemHostName=cSctpAssocRemHostName, cSctpStatSentOrderChunks=cSctpStatSentOrderChunks, cSctpAssocT2expireds=cSctpAssocT2expireds, cSctpStatRecOrderChunks=cSctpStatRecOrderChunks, cSctpAssocLocalAddressTable=cSctpAssocLocalAddressTable, cSctpStatSentCtrlChunks=cSctpStatSentCtrlChunks, cSctpLookupRemIPAddrStartTime=cSctpLookupRemIPAddrStartTime, cSctpLookupRemPortTable=cSctpLookupRemPortTable, cSctpAssocHeartBeatTimer=cSctpAssocHeartBeatTimer, cSctpAssocRtxChunks=cSctpAssocRtxChunks, cSctpCurrEstab=cSctpCurrEstab, cSctpAssocRemAddressMaxPathRtx=cSctpAssocRemAddressMaxPathRtx, cSctpAssocState=cSctpAssocState, cSctpAssocRemAddressIP=cSctpAssocRemAddressIP, cSctpAssocRemAddressIPType=cSctpAssocRemAddressIPType, PYSNMP_MODULE_ID=cSctpMIB, cSctpStatRecUnorderChunks=cSctpStatRecUnorderChunks, cSctpLookupRemHostNameStartTime=cSctpLookupRemHostNameStartTime, cSctpLookupLocalPortEntry=cSctpLookupLocalPortEntry, cSctpAssocRemPrimaryAddress=cSctpAssocRemPrimaryAddress, cSctpAssocRemAddressTable=cSctpAssocRemAddressTable, InetPortNumber=InetPortNumber, cSctpAssocLocalSCTPPort=cSctpAssocLocalSCTPPort, cSctpScalars=cSctpScalars, cSctpValCookieLife=cSctpValCookieLife, cSctpLookupRemHostNameTable=cSctpLookupRemHostNameTable, cSctpStatFragmentedUsrMessages=cSctpStatFragmentedUsrMessages, cSctpRtoAlgorithm=cSctpRtoAlgorithm, cSctpAssocT1expireds=cSctpAssocT1expireds, cSctpRtoMin=cSctpRtoMin, cSctpLookupLocalPortTable=cSctpLookupLocalPortTable, cSctpAssocId=cSctpAssocId, cSctpAssocMaxRetr=cSctpAssocMaxRetr, cSctpStatSentSCTPPacks=cSctpStatSentSCTPPacks, cSctpLookupRemIPAddrEntry=cSctpLookupRemIPAddrEntry, cSctpLookupRemPrimIPAddrEntry=cSctpLookupRemPrimIPAddrEntry, cSctpTables=cSctpTables, cSctpLookupRemPortEntry=cSctpLookupRemPortEntry, cSctpStatReassembledUsrMessages=cSctpStatReassembledUsrMessages, cSctpAssocTablesVariablesGroup=cSctpAssocTablesVariablesGroup, cSctpMIB=cSctpMIB, cSctpOtherStatGroup=cSctpOtherStatGroup)
