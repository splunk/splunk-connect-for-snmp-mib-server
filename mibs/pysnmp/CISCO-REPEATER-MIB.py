#
# PySNMP MIB module CISCO-REPEATER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-REPEATER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:53:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
rptrPortEntry, = mibBuilder.importSymbols("SNMP-REPEATER-MIB", "rptrPortEntry")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Counter64, iso, ObjectIdentity, Bits, IpAddress, ModuleIdentity, Gauge32, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Counter64", "iso", "ObjectIdentity", "Bits", "IpAddress", "ModuleIdentity", "Gauge32", "TimeTicks", "Counter32")
DisplayString, TimeStamp, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TextualConvention", "TruthValue")
ciscoRptrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 22))
ciscoRptrMIB.setRevisions(('1995-12-05 00:00', '1995-10-17 00:00', '1995-03-09 00:00', '1994-10-26 00:00',))
if mibBuilder.loadTexts: ciscoRptrMIB.setLastUpdated('9512050000Z')
if mibBuilder.loadTexts: ciscoRptrMIB.setOrganization('Cisco Systems, Inc.')
ciscoRptrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 22, 1))
ciscoRptrPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1), )
if mibBuilder.loadTexts: ciscoRptrPortTable.setStatus('current')
ciscoRptrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1), )
rptrPortEntry.registerAugmentions(("CISCO-REPEATER-MIB", "ciscoRptrPortEntry"))
ciscoRptrPortEntry.setIndexNames(*rptrPortEntry.getIndexNames())
if mibBuilder.loadTexts: ciscoRptrPortEntry.setStatus('current')
ciscoRptrPortMDIStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("crossover", 2), ("notSwitchable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortMDIStatus.setStatus('current')
ciscoRptrPortLinkTestEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoRptrPortLinkTestEnabled.setStatus('current')
ciscoRptrPortLinkTestFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortLinkTestFailed.setStatus('current')
ciscoRptrPortAutoPolarityEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoRptrPortAutoPolarityEnabled.setStatus('current')
ciscoRptrPortAutoPolarityCorrected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortAutoPolarityCorrected.setStatus('current')
ciscoRptrPortSrcAddrCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoRptrPortSrcAddrCtrl.setStatus('current')
ciscoRptrPortAllowedSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoRptrPortAllowedSrcAddr.setStatus('current')
ciscoRptrPortAllowedSrcAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allowedSrcAddrConfig", 1), ("allowedSrcAddrLearn", 2), ("allowedSrcAddrUndefined", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortAllowedSrcAddrStatus.setStatus('current')
ciscoRptrPortLastIllegalSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortLastIllegalSrcAddr.setStatus('current')
ciscoRptrPortIllegalAddrTrapAcked = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acked", 1), ("no-acked-sending", 2), ("no-acked-no-sending", 3))).clone('no-acked-no-sending')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoRptrPortIllegalAddrTrapAcked.setStatus('current')
ciscoRptrPortIllegalAddrTrapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoRptrPortIllegalAddrTrapEnabled.setStatus('current')
ciscoRptrPortIllegalAddrFirstHeard = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortIllegalAddrFirstHeard.setStatus('current')
ciscoRptrPortIllegalAddrLastHeard = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortIllegalAddrLastHeard.setStatus('current')
ciscoRptrPortLastIllegalAddrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortLastIllegalAddrCount.setStatus('current')
ciscoRptrPortIllegalAddrTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoRptrPortIllegalAddrTotalCount.setStatus('current')
ciscoRptrMIBglobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 2))
ciscoRptrTrapAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 22, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("once", 1), ("decay", 2))).clone('decay')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoRptrTrapAlgorithm.setStatus('current')
ciscoRptrMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 22, 3))
ciscoRptrMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 22, 3, 0))
ciscoRptrIllegalSrcAddrTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 22, 3, 0, 1)).setObjects(("CISCO-REPEATER-MIB", "ciscoRptrPortLastIllegalSrcAddr"))
if mibBuilder.loadTexts: ciscoRptrIllegalSrcAddrTrap.setStatus('current')
ciscoRptrMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 22, 2))
ciscoRptrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 22, 2, 1))
ciscoRptrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 22, 2, 2))
ciscoRptrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 22, 2, 1, 1)).setObjects(("CISCO-REPEATER-MIB", "ciscoRptrMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRptrMIBCompliance = ciscoRptrMIBCompliance.setStatus('obsolete')
ciscoRptrMIBComplianceV11R01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 22, 2, 1, 2)).setObjects(("CISCO-REPEATER-MIB", "ciscoRptrMIBPortGroupV11R01"), ("CISCO-REPEATER-MIB", "ciscoRptrMIBGlobalsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRptrMIBComplianceV11R01 = ciscoRptrMIBComplianceV11R01.setStatus('current')
ciscoRptrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 22, 2, 2, 1)).setObjects(("CISCO-REPEATER-MIB", "ciscoRptrPortMDIStatus"), ("CISCO-REPEATER-MIB", "ciscoRptrPortLinkTestEnabled"), ("CISCO-REPEATER-MIB", "ciscoRptrPortLinkTestFailed"), ("CISCO-REPEATER-MIB", "ciscoRptrPortAutoPolarityEnabled"), ("CISCO-REPEATER-MIB", "ciscoRptrPortAutoPolarityCorrected"), ("CISCO-REPEATER-MIB", "ciscoRptrPortSrcAddrCtrl"), ("CISCO-REPEATER-MIB", "ciscoRptrPortAllowedSrcAddr"), ("CISCO-REPEATER-MIB", "ciscoRptrPortAllowedSrcAddrStatus"), ("CISCO-REPEATER-MIB", "ciscoRptrPortLastIllegalSrcAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRptrMIBGroup = ciscoRptrMIBGroup.setStatus('obsolete')
ciscoRptrMIBPortGroupV11R01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 22, 2, 2, 2)).setObjects(("CISCO-REPEATER-MIB", "ciscoRptrPortMDIStatus"), ("CISCO-REPEATER-MIB", "ciscoRptrPortLinkTestEnabled"), ("CISCO-REPEATER-MIB", "ciscoRptrPortLinkTestFailed"), ("CISCO-REPEATER-MIB", "ciscoRptrPortAutoPolarityEnabled"), ("CISCO-REPEATER-MIB", "ciscoRptrPortAutoPolarityCorrected"), ("CISCO-REPEATER-MIB", "ciscoRptrPortSrcAddrCtrl"), ("CISCO-REPEATER-MIB", "ciscoRptrPortAllowedSrcAddr"), ("CISCO-REPEATER-MIB", "ciscoRptrPortAllowedSrcAddrStatus"), ("CISCO-REPEATER-MIB", "ciscoRptrPortLastIllegalSrcAddr"), ("CISCO-REPEATER-MIB", "ciscoRptrPortIllegalAddrTrapAcked"), ("CISCO-REPEATER-MIB", "ciscoRptrPortIllegalAddrTrapEnabled"), ("CISCO-REPEATER-MIB", "ciscoRptrPortIllegalAddrFirstHeard"), ("CISCO-REPEATER-MIB", "ciscoRptrPortIllegalAddrLastHeard"), ("CISCO-REPEATER-MIB", "ciscoRptrPortLastIllegalAddrCount"), ("CISCO-REPEATER-MIB", "ciscoRptrPortIllegalAddrTotalCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRptrMIBPortGroupV11R01 = ciscoRptrMIBPortGroupV11R01.setStatus('current')
ciscoRptrMIBGlobalsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 22, 2, 2, 3)).setObjects(("CISCO-REPEATER-MIB", "ciscoRptrTrapAlgorithm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRptrMIBGlobalsGroup = ciscoRptrMIBGlobalsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-REPEATER-MIB", ciscoRptrMIBGroups=ciscoRptrMIBGroups, ciscoRptrPortSrcAddrCtrl=ciscoRptrPortSrcAddrCtrl, ciscoRptrPortMDIStatus=ciscoRptrPortMDIStatus, ciscoRptrPortLinkTestFailed=ciscoRptrPortLinkTestFailed, ciscoRptrMIBObjects=ciscoRptrMIBObjects, ciscoRptrMIBConformance=ciscoRptrMIBConformance, ciscoRptrPortAutoPolarityEnabled=ciscoRptrPortAutoPolarityEnabled, ciscoRptrMIBGlobalsGroup=ciscoRptrMIBGlobalsGroup, ciscoRptrPortAutoPolarityCorrected=ciscoRptrPortAutoPolarityCorrected, ciscoRptrMIBCompliance=ciscoRptrMIBCompliance, ciscoRptrPortLastIllegalAddrCount=ciscoRptrPortLastIllegalAddrCount, PYSNMP_MODULE_ID=ciscoRptrMIB, ciscoRptrPortAllowedSrcAddrStatus=ciscoRptrPortAllowedSrcAddrStatus, ciscoRptrMIBGroup=ciscoRptrMIBGroup, ciscoRptrMIBTrapPrefix=ciscoRptrMIBTrapPrefix, ciscoRptrIllegalSrcAddrTrap=ciscoRptrIllegalSrcAddrTrap, ciscoRptrMIBComplianceV11R01=ciscoRptrMIBComplianceV11R01, ciscoRptrMIBTraps=ciscoRptrMIBTraps, ciscoRptrMIBglobal=ciscoRptrMIBglobal, ciscoRptrPortAllowedSrcAddr=ciscoRptrPortAllowedSrcAddr, ciscoRptrPortIllegalAddrTotalCount=ciscoRptrPortIllegalAddrTotalCount, ciscoRptrPortIllegalAddrTrapEnabled=ciscoRptrPortIllegalAddrTrapEnabled, ciscoRptrMIBCompliances=ciscoRptrMIBCompliances, ciscoRptrPortIllegalAddrTrapAcked=ciscoRptrPortIllegalAddrTrapAcked, ciscoRptrMIB=ciscoRptrMIB, ciscoRptrPortIllegalAddrFirstHeard=ciscoRptrPortIllegalAddrFirstHeard, ciscoRptrPortEntry=ciscoRptrPortEntry, ciscoRptrMIBPortGroupV11R01=ciscoRptrMIBPortGroupV11R01, ciscoRptrTrapAlgorithm=ciscoRptrTrapAlgorithm, ciscoRptrPortLastIllegalSrcAddr=ciscoRptrPortLastIllegalSrcAddr, ciscoRptrPortLinkTestEnabled=ciscoRptrPortLinkTestEnabled, ciscoRptrPortTable=ciscoRptrPortTable, ciscoRptrPortIllegalAddrLastHeard=ciscoRptrPortIllegalAddrLastHeard)
