#
# PySNMP MIB module LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
lhnModules, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-GLOBAL-REG", "lhnModules")
lhnNusCommonClustering, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-NUS-COMMON-MIB", "lhnNusCommonClustering")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Unsigned32, Counter64, Counter32, ObjectIdentity, Bits, NotificationType, Integer32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "Counter64", "Counter32", "ObjectIdentity", "Bits", "NotificationType", "Integer32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "IpAddress", "MibIdentifier")
TruthValue, DisplayString, DateAndTime, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "DateAndTime", "TextualConvention", "RowStatus")
lhnNusCommonClusteringModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 1, 14))
if mibBuilder.loadTexts: lhnNusCommonClusteringModule.setLastUpdated('0203060000Z')
if mibBuilder.loadTexts: lhnNusCommonClusteringModule.setOrganization('LeftHand Networks, Inc.')
class ClusPermissionBits(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("read", 0), ("write", 1), ("exclusive", 2))

clusMgmtGroupName = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusMgmtGroupName.setStatus('current')
clusMgmtGroupIsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusMgmtGroupIsEnabled.setStatus('current')
clusMgmtGroupQuorum = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusMgmtGroupQuorum.setStatus('current')
clusMgmtGroupDescription = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusMgmtGroupDescription.setStatus('current')
clusMgmtGroupActiveManagerCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusMgmtGroupActiveManagerCount.setStatus('current')
clusMgmtGroupManagerCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusMgmtGroupManagerCount.setStatus('current')
clusManagerTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7), )
if mibBuilder.loadTexts: clusManagerTable.setStatus('current')
clusManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusManagerIndex"))
if mibBuilder.loadTexts: clusManagerEntry.setStatus('current')
clusManagerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusManagerIndex.setStatus('current')
clusManagerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusManagerName.setStatus('current')
clusManagerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusManagerVersion.setStatus('current')
clusManagerHostSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusManagerHostSerialNo.setStatus('current')
clusManagerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusManagerStatus.setStatus('current')
clusManagerIsVirtual = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusManagerIsVirtual.setStatus('current')
clusManagerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusManagerRowStatus.setStatus('current')
clusModuleCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusModuleCount.setStatus('current')
clusModuleTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9), )
if mibBuilder.loadTexts: clusModuleTable.setStatus('current')
clusModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusModuleIndex"))
if mibBuilder.loadTexts: clusModuleEntry.setStatus('current')
clusModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusModuleIndex.setStatus('current')
clusModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusModuleName.setStatus('current')
clusModuleVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusModuleVersion.setStatus('current')
clusModuleSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusModuleSerialNo.setStatus('current')
clusModuleTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 5), Counter64()).setUnits('kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: clusModuleTotalSize.setStatus('current')
clusModuleAvailSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 6), Counter64()).setUnits('kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: clusModuleAvailSize.setStatus('current')
clusModuleIsManager = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusModuleIsManager.setStatus('current')
clusModuleRaidConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusModuleRaidConfiguration.setStatus('current')
clusModuleRaidStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusModuleRaidStatus.setStatus('current')
clusModuleStorageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusModuleStorageStatus.setStatus('current')
clusModuleStorageIsReady = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusModuleStorageIsReady.setStatus('current')
clusModuleCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusModuleCreationTime.setStatus('current')
clusModuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusModuleDescription.setStatus('current')
clusModuleClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 14), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusModuleClusterName.setStatus('current')
clusModuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 9, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusModuleRowStatus.setStatus('current')
clusClusterCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusClusterCount.setStatus('current')
clusClusterTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 11), )
if mibBuilder.loadTexts: clusClusterTable.setStatus('current')
clusClusterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 11, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusClusterIndex"))
if mibBuilder.loadTexts: clusClusterEntry.setStatus('current')
clusClusterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 11, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterIndex.setStatus('current')
clusClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 11, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusClusterName.setStatus('current')
clusClusterModuleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusClusterModuleCount.setStatus('current')
clusClusterVolumeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusClusterVolumeCount.setStatus('current')
clusClusterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 11, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusClusterDescription.setStatus('current')
clusClusterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 11, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterRowStatus.setStatus('current')
clusClusterModuleTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 12), )
if mibBuilder.loadTexts: clusClusterModuleTable.setStatus('current')
clusClusterModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 12, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusClusterIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusClusterModuleIndex"))
if mibBuilder.loadTexts: clusClusterModuleEntry.setStatus('current')
clusClusterModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 12, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterModuleIndex.setStatus('current')
clusClusterModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 12, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterModuleName.setStatus('current')
clusClusterModuleSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 12, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterModuleSerialNo.setStatus('current')
clusClusterModuleIsHotSpare = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 12, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterModuleIsHotSpare.setStatus('current')
clusClusterModuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 12, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterModuleRowStatus.setStatus('current')
clusVolumeCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeCount.setStatus('current')
clusVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14), )
if mibBuilder.loadTexts: clusVolumeTable.setStatus('current')
clusVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusVolumeIndex"))
if mibBuilder.loadTexts: clusVolumeEntry.setStatus('current')
clusVolumeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusVolumeIndex.setStatus('current')
clusVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeName.setStatus('current')
clusVolumeCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeCreationTime.setStatus('current')
clusVolumeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeDescription.setStatus('current')
clusVolumeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 5), Counter64()).setUnits('kbytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeSize.setStatus('current')
clusVolumeSoftThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 6), Counter64()).setUnits('kbytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeSoftThreshold.setStatus('current')
clusVolumeHardThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 7), Counter64()).setUnits('kbytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeHardThreshold.setStatus('current')
clusVolumeReplicaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeReplicaCount.setStatus('current')
clusVolumeSnapshotCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotCount.setStatus('current')
clusVolumeACLCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeACLCount.setStatus('current')
clusVolumeClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeClusterName.setStatus('current')
clusVolumeIsSoftThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeIsSoftThresholdExceeded.setStatus('current')
clusVolumeIsHardThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeIsHardThresholdExceeded.setStatus('current')
clusVolumeReplicationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("faulty", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeReplicationStatus.setStatus('current')
clusVolumeIsRemoteIPCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeIsRemoteIPCopy.setStatus('current')
clusVolumeRemoteIPCopyFailureMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeRemoteIPCopyFailureMessage.setStatus('current')
clusVolumeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 14, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusVolumeRowStatus.setStatus('current')
clusVolumeACLTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 15), )
if mibBuilder.loadTexts: clusVolumeACLTable.setStatus('current')
clusVolumeACLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 15, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusVolumeIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusVolumeACLIndex"))
if mibBuilder.loadTexts: clusVolumeACLEntry.setStatus('current')
clusVolumeACLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 15, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusVolumeACLIndex.setStatus('current')
clusVolumeACLAuthGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 15, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeACLAuthGroup.setStatus('current')
clusVolumeACLPermissions = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 15, 1, 3), ClusPermissionBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeACLPermissions.setStatus('current')
clusVolumeACLRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 15, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusVolumeACLRowStatus.setStatus('current')
clusClusterVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 16), )
if mibBuilder.loadTexts: clusClusterVolumeTable.setStatus('current')
clusClusterVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 16, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusClusterIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusClusterVolumeIndex"))
if mibBuilder.loadTexts: clusClusterVolumeEntry.setStatus('current')
clusClusterVolumeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 16, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterVolumeIndex.setStatus('current')
clusClusterVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 16, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterVolumeName.setStatus('current')
clusClusterVolumeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 16, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusClusterVolumeRowStatus.setStatus('current')
clusVolumeSnapshotTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17), )
if mibBuilder.loadTexts: clusVolumeSnapshotTable.setStatus('current')
clusVolumeSnapshotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusVolumeIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusVolumeSnapshotIndex"))
if mibBuilder.loadTexts: clusVolumeSnapshotEntry.setStatus('current')
clusVolumeSnapshotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusVolumeSnapshotIndex.setStatus('current')
clusVolumeSnapshotName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeSnapshotName.setStatus('current')
clusVolumeSnapshotCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotCreationTime.setStatus('current')
clusVolumeSnapshotDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeSnapshotDescription.setStatus('current')
clusVolumeSnapshotSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 5), Counter64()).setUnits('kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotSize.setStatus('current')
clusVolumeSnapshotSoftThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 6), Counter64()).setUnits('kbytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeSnapshotSoftThreshold.setStatus('current')
clusVolumeSnapshotHardThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 7), Counter64()).setUnits('kbytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeSnapshotHardThreshold.setStatus('current')
clusVolumeSnapshotACLCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotACLCount.setStatus('current')
clusVolumeSnapshotScheduleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotScheduleName.setStatus('current')
clusVolumeSnapshotIsSoftThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotIsSoftThresholdExceeded.setStatus('current')
clusVolumeSnapshotIsHardThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotIsHardThresholdExceeded.setStatus('current')
clusVolumeSnapshotReplicationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("faulty", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotReplicationStatus.setStatus('current')
clusVolumeSnapshotType = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotType.setStatus('current')
clusVolumeSnapshotCopyProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: clusVolumeSnapshotCopyProgress.setStatus('current')
clusVolumeSnapshotRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 17, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusVolumeSnapshotRowStatus.setStatus('current')
clusVolumeSnapshotACLTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 18), )
if mibBuilder.loadTexts: clusVolumeSnapshotACLTable.setStatus('current')
clusVolumeSnapshotACLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 18, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusVolumeIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusVolumeSnapshotIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusVolumeSnapshotACLIndex"))
if mibBuilder.loadTexts: clusVolumeSnapshotACLEntry.setStatus('current')
clusVolumeSnapshotACLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 18, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusVolumeSnapshotACLIndex.setStatus('current')
clusVolumeSnapshotACLAuthGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 18, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeSnapshotACLAuthGroup.setStatus('current')
clusVolumeSnapshotACLPermission = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 18, 1, 3), ClusPermissionBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusVolumeSnapshotACLPermission.setStatus('current')
clusVolumeSnapshotACLRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 18, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusVolumeSnapshotACLRowStatus.setStatus('current')
clusAuthGroupCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusAuthGroupCount.setStatus('current')
clusAuthGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20), )
if mibBuilder.loadTexts: clusAuthGroupTable.setStatus('current')
clusAuthGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusAuthGroupIndex"))
if mibBuilder.loadTexts: clusAuthGroupEntry.setStatus('current')
clusAuthGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusAuthGroupIndex.setStatus('current')
clusAuthGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusAuthGroupName.setStatus('current')
clusAuthGroupDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusAuthGroupDescription.setStatus('current')
clusAuthGroupAcceptAll = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusAuthGroupAcceptAll.setStatus('current')
clusAuthGroupAcceptNone = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusAuthGroupAcceptNone.setStatus('current')
clusAuthGroupAcceptSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusAuthGroupAcceptSubnet.setStatus('current')
clusAuthGroupSubnetCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1, 7), Counter32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusAuthGroupSubnetCount.setStatus('current')
clusAuthGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 20, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusAuthGroupRowStatus.setStatus('current')
clusAuthGroupSubnetTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 21), )
if mibBuilder.loadTexts: clusAuthGroupSubnetTable.setStatus('current')
clusAuthGroupSubnetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 21, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusAuthGroupIndex"), (0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusAuthGroupNetmaskIndex"))
if mibBuilder.loadTexts: clusAuthGroupSubnetEntry.setStatus('current')
clusAuthGroupSubnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 21, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusAuthGroupSubnetIndex.setStatus('current')
clusAuthGroupSubnetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 21, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusAuthGroupSubnetAddress.setStatus('current')
clusAuthGroupSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 21, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusAuthGroupSubnetMask.setStatus('current')
clusAuthGroupSubnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 21, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusAuthGroupSubnetRowStatus.setStatus('current')
clusCommunicationMode = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("multicast", 1), ("unicast", 2), ("multicastAndUnicast", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusCommunicationMode.setStatus('current')
clusUnicastHostCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusUnicastHostCount.setStatus('current')
clusUnicastHostTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 24), )
if mibBuilder.loadTexts: clusUnicastHostTable.setStatus('current')
clusUnicastHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 24, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusUnicastHostIndex"))
if mibBuilder.loadTexts: clusUnicastHostEntry.setStatus('current')
clusUnicastHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 24, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusUnicastHostIndex.setStatus('current')
clusUnicastHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 24, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusUnicastHostName.setStatus('current')
clusUnicastHostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 24, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusUnicastHostRowStatus.setStatus('current')
clusSnapshotScheduleCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusSnapshotScheduleCount.setStatus('current')
clusSnapshotScheduleTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26), )
if mibBuilder.loadTexts: clusSnapshotScheduleTable.setStatus('current')
clusSnapshotScheduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", "clusSnapshotScheduleIndex"))
if mibBuilder.loadTexts: clusSnapshotScheduleEntry.setStatus('current')
clusSnapshotScheduleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusSnapshotScheduleIndex.setStatus('current')
clusSnapshotScheduleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusSnapshotScheduleName.setStatus('current')
clusSnapshotScheduleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusSnapshotScheduleDescription.setStatus('current')
clusSnapshotScheduleSoftThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 4), Counter64()).setUnits('kbytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusSnapshotScheduleSoftThreshold.setStatus('current')
clusSnapshotScheduleHardThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 5), Counter64()).setUnits('kbytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusSnapshotScheduleHardThreshold.setStatus('current')
clusSnapshotScheduleFirstCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusSnapshotScheduleFirstCreationTime.setStatus('current')
clusSnapshotScheduleFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusSnapshotScheduleFrequency.setStatus('current')
clusSnapshotScheduleVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 8), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusSnapshotScheduleVolumeName.setStatus('current')
clusSnapshotScheduleRetainType = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("byTime", 1), ("byNumber", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusSnapshotScheduleRetainType.setStatus('current')
clusSnapshotScheduleRetainCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusSnapshotScheduleRetainCount.setStatus('current')
clusSnapshotScheduleRetainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 11), Counter32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusSnapshotScheduleRetainTime.setStatus('current')
clusSnapshotScheduleType = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("primary", 2), ("remote", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusSnapshotScheduleType.setStatus('current')
clusSnapshotScheduleFailureMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusSnapshotScheduleFailureMessage.setStatus('current')
clusSnapshotScheduleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 12, 26, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusSnapshotScheduleRowStatus.setStatus('current')
mibBuilder.exportSymbols("LEFTHAND-NETWORKS-NUS-COMMON-CLUSTERING-MIB", clusMgmtGroupIsEnabled=clusMgmtGroupIsEnabled, clusVolumeACLCount=clusVolumeACLCount, clusVolumeDescription=clusVolumeDescription, clusMgmtGroupQuorum=clusMgmtGroupQuorum, clusModuleRaidConfiguration=clusModuleRaidConfiguration, clusAuthGroupIndex=clusAuthGroupIndex, clusAuthGroupSubnetEntry=clusAuthGroupSubnetEntry, clusSnapshotScheduleFirstCreationTime=clusSnapshotScheduleFirstCreationTime, clusManagerIsVirtual=clusManagerIsVirtual, clusVolumeClusterName=clusVolumeClusterName, clusVolumeACLRowStatus=clusVolumeACLRowStatus, clusClusterCount=clusClusterCount, clusSnapshotScheduleIndex=clusSnapshotScheduleIndex, clusModuleName=clusModuleName, clusVolumeSnapshotSoftThreshold=clusVolumeSnapshotSoftThreshold, clusAuthGroupSubnetTable=clusAuthGroupSubnetTable, clusSnapshotScheduleSoftThreshold=clusSnapshotScheduleSoftThreshold, clusModuleIsManager=clusModuleIsManager, clusClusterModuleSerialNo=clusClusterModuleSerialNo, clusVolumeSnapshotDescription=clusVolumeSnapshotDescription, clusAuthGroupAcceptSubnet=clusAuthGroupAcceptSubnet, clusVolumeSnapshotCreationTime=clusVolumeSnapshotCreationTime, clusSnapshotScheduleCount=clusSnapshotScheduleCount, clusClusterModuleName=clusClusterModuleName, clusMgmtGroupDescription=clusMgmtGroupDescription, clusClusterModuleRowStatus=clusClusterModuleRowStatus, clusVolumeCount=clusVolumeCount, clusVolumeACLTable=clusVolumeACLTable, clusVolumeSnapshotIsHardThresholdExceeded=clusVolumeSnapshotIsHardThresholdExceeded, clusAuthGroupEntry=clusAuthGroupEntry, clusVolumeRemoteIPCopyFailureMessage=clusVolumeRemoteIPCopyFailureMessage, clusClusterEntry=clusClusterEntry, clusVolumeEntry=clusVolumeEntry, clusSnapshotScheduleRetainType=clusSnapshotScheduleRetainType, clusVolumeIsRemoteIPCopy=clusVolumeIsRemoteIPCopy, clusVolumeName=clusVolumeName, clusModuleAvailSize=clusModuleAvailSize, ClusPermissionBits=ClusPermissionBits, clusVolumeCreationTime=clusVolumeCreationTime, clusClusterVolumeName=clusClusterVolumeName, clusVolumeSnapshotCopyProgress=clusVolumeSnapshotCopyProgress, clusSnapshotScheduleTable=clusSnapshotScheduleTable, clusVolumeTable=clusVolumeTable, clusVolumeIsHardThresholdExceeded=clusVolumeIsHardThresholdExceeded, clusMgmtGroupName=clusMgmtGroupName, clusModuleEntry=clusModuleEntry, clusVolumeACLIndex=clusVolumeACLIndex, clusManagerName=clusManagerName, clusSnapshotScheduleVolumeName=clusSnapshotScheduleVolumeName, clusSnapshotScheduleType=clusSnapshotScheduleType, clusClusterModuleIndex=clusClusterModuleIndex, clusAuthGroupSubnetMask=clusAuthGroupSubnetMask, clusCommunicationMode=clusCommunicationMode, clusAuthGroupTable=clusAuthGroupTable, clusManagerTable=clusManagerTable, clusAuthGroupRowStatus=clusAuthGroupRowStatus, clusUnicastHostName=clusUnicastHostName, clusModuleClusterName=clusModuleClusterName, clusSnapshotScheduleFrequency=clusSnapshotScheduleFrequency, clusVolumeSnapshotACLAuthGroup=clusVolumeSnapshotACLAuthGroup, clusVolumeSnapshotRowStatus=clusVolumeSnapshotRowStatus, clusManagerHostSerialNo=clusManagerHostSerialNo, clusClusterModuleCount=clusClusterModuleCount, clusVolumeSnapshotName=clusVolumeSnapshotName, clusVolumeSoftThreshold=clusVolumeSoftThreshold, clusVolumeSnapshotCount=clusVolumeSnapshotCount, clusUnicastHostIndex=clusUnicastHostIndex, clusVolumeSnapshotACLTable=clusVolumeSnapshotACLTable, clusVolumeSnapshotACLIndex=clusVolumeSnapshotACLIndex, clusVolumeSize=clusVolumeSize, clusClusterVolumeIndex=clusClusterVolumeIndex, clusModuleVersion=clusModuleVersion, clusSnapshotScheduleHardThreshold=clusSnapshotScheduleHardThreshold, clusVolumeRowStatus=clusVolumeRowStatus, clusModuleCreationTime=clusModuleCreationTime, clusClusterRowStatus=clusClusterRowStatus, clusModuleRaidStatus=clusModuleRaidStatus, clusSnapshotScheduleEntry=clusSnapshotScheduleEntry, clusAuthGroupDescription=clusAuthGroupDescription, clusClusterModuleTable=clusClusterModuleTable, clusVolumeSnapshotSize=clusVolumeSnapshotSize, clusUnicastHostEntry=clusUnicastHostEntry, clusSnapshotScheduleRowStatus=clusSnapshotScheduleRowStatus, clusManagerEntry=clusManagerEntry, clusAuthGroupSubnetCount=clusAuthGroupSubnetCount, clusSnapshotScheduleRetainCount=clusSnapshotScheduleRetainCount, clusModuleTotalSize=clusModuleTotalSize, clusManagerStatus=clusManagerStatus, clusClusterVolumeCount=clusClusterVolumeCount, clusUnicastHostCount=clusUnicastHostCount, clusAuthGroupAcceptAll=clusAuthGroupAcceptAll, clusModuleIndex=clusModuleIndex, clusClusterName=clusClusterName, clusClusterDescription=clusClusterDescription, clusVolumeReplicaCount=clusVolumeReplicaCount, clusAuthGroupCount=clusAuthGroupCount, clusClusterTable=clusClusterTable, clusVolumeHardThreshold=clusVolumeHardThreshold, clusClusterVolumeEntry=clusClusterVolumeEntry, clusClusterModuleEntry=clusClusterModuleEntry, clusManagerVersion=clusManagerVersion, clusClusterModuleIsHotSpare=clusClusterModuleIsHotSpare, clusClusterVolumeRowStatus=clusClusterVolumeRowStatus, clusVolumeSnapshotReplicationStatus=clusVolumeSnapshotReplicationStatus, clusVolumeSnapshotType=clusVolumeSnapshotType, clusUnicastHostTable=clusUnicastHostTable, lhnNusCommonClusteringModule=lhnNusCommonClusteringModule, clusClusterVolumeTable=clusClusterVolumeTable, clusVolumeSnapshotHardThreshold=clusVolumeSnapshotHardThreshold, clusVolumeSnapshotACLCount=clusVolumeSnapshotACLCount, clusVolumeACLPermissions=clusVolumeACLPermissions, clusModuleStorageStatus=clusModuleStorageStatus, clusModuleDescription=clusModuleDescription, clusSnapshotScheduleName=clusSnapshotScheduleName, clusSnapshotScheduleDescription=clusSnapshotScheduleDescription, clusMgmtGroupActiveManagerCount=clusMgmtGroupActiveManagerCount, clusVolumeReplicationStatus=clusVolumeReplicationStatus, clusSnapshotScheduleFailureMessage=clusSnapshotScheduleFailureMessage, clusModuleTable=clusModuleTable, clusVolumeSnapshotTable=clusVolumeSnapshotTable, clusSnapshotScheduleRetainTime=clusSnapshotScheduleRetainTime, clusVolumeSnapshotIsSoftThresholdExceeded=clusVolumeSnapshotIsSoftThresholdExceeded, clusVolumeIsSoftThresholdExceeded=clusVolumeIsSoftThresholdExceeded, clusVolumeSnapshotEntry=clusVolumeSnapshotEntry, clusMgmtGroupManagerCount=clusMgmtGroupManagerCount, clusModuleCount=clusModuleCount, clusVolumeIndex=clusVolumeIndex, clusAuthGroupSubnetAddress=clusAuthGroupSubnetAddress, clusVolumeSnapshotACLRowStatus=clusVolumeSnapshotACLRowStatus, clusAuthGroupName=clusAuthGroupName, clusVolumeSnapshotIndex=clusVolumeSnapshotIndex, clusAuthGroupSubnetRowStatus=clusAuthGroupSubnetRowStatus, clusVolumeSnapshotScheduleName=clusVolumeSnapshotScheduleName, clusManagerRowStatus=clusManagerRowStatus, clusAuthGroupSubnetIndex=clusAuthGroupSubnetIndex, clusModuleSerialNo=clusModuleSerialNo, clusUnicastHostRowStatus=clusUnicastHostRowStatus, clusVolumeSnapshotACLPermission=clusVolumeSnapshotACLPermission, clusModuleRowStatus=clusModuleRowStatus, clusVolumeSnapshotACLEntry=clusVolumeSnapshotACLEntry, PYSNMP_MODULE_ID=lhnNusCommonClusteringModule, clusManagerIndex=clusManagerIndex, clusClusterIndex=clusClusterIndex, clusAuthGroupAcceptNone=clusAuthGroupAcceptNone, clusModuleStorageIsReady=clusModuleStorageIsReady, clusVolumeACLEntry=clusVolumeACLEntry, clusVolumeACLAuthGroup=clusVolumeACLAuthGroup)
