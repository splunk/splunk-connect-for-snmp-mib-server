#
# PySNMP MIB module SONUS-ISUP-SERVICE-GROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-ISUP-SERVICE-GROUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Gauge32, NotificationType, Integer32, ModuleIdentity, Bits, ObjectIdentity, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Gauge32", "NotificationType", "Integer32", "ModuleIdentity", "Bits", "ObjectIdentity", "Unsigned32", "Counter32")
RowStatus, DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "DateAndTime")
sonusEventLevel, sonusEventDescription, sonusEventClass = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventLevel", "sonusEventDescription", "sonusEventClass")
sonusSignallingMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusSignallingMIBs")
SonusPointCode, PointCode, SonusSupportFlag, SonusNameReference, SonusName, SonusAdminState = mibBuilder.importSymbols("SONUS-TC", "SonusPointCode", "PointCode", "SonusSupportFlag", "SonusNameReference", "SonusName", "SonusAdminState")
sonusIsupServiceGroupMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1))
if mibBuilder.loadTexts: sonusIsupServiceGroupMIB.setLastUpdated('200107310000Z')
if mibBuilder.loadTexts: sonusIsupServiceGroupMIB.setOrganization('Sonus Networks, Inc.')
sonusIsupServiceGroupMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1))
sonusIsupsgServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1))
sonusIsupsgServiceGroupNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupNextIndex.setStatus('current')
sonusIsupsgServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2), )
if mibBuilder.loadTexts: sonusIsupsgServiceGroupTable.setStatus('current')
sonusIsupsgServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgServiceGroupListIndex"))
if mibBuilder.loadTexts: sonusIsupsgServiceGroupEntry.setStatus('current')
sonusIsupsgServiceGroupListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupListIndex.setStatus('current')
sonusIsupsgServiceGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupName.setStatus('current')
sonusIsupsgServiceGroupRemotePointCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 3), PointCode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupRemotePointCode.setStatus('current')
sonusIsupsgServiceGroupTG = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 4), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupTG.setStatus('current')
sonusIsupsgServiceGroupSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dms500", 1), ("dms250", 2), ("dms200", 3), ("dms100", 4), ("lucent5ESS", 5), ("lucent4ESS", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupSwitchType.setStatus('current')
sonusIsupsgServiceGroupRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("ansi1992", 1), ("ansi1995", 2), ("itu1993", 3), ("etsi2", 4), ("nttfcc", 5), ("itu1997", 6), ("itu1988", 7), ("ituq767", 8), ("belgacom", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupRevision.setStatus('current')
sonusIsupsgServiceGroupHuntAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("bottom2top", 1), ("top2bottom", 2), ("circuithi2lo", 3), ("circuitlo2hi", 4), ("mostnleastidle", 5), ("circularbottom2top", 6), ("circulartop2bottom", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupHuntAlgorithm.setStatus('current')
sonusIsupsgServiceGroupCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupCost.setStatus('current')
sonusIsupsgServiceGroupCicControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noCics", 1), ("oddCics", 2), ("evenCics", 3), ("allCics", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupCicControl.setStatus('current')
sonusIsupsgServiceGroupContTestFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupContTestFreq.setStatus('current')
sonusIsupsgServiceGroupOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("block", 1), ("unblock", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupOperation.setStatus('current')
sonusIsupsgServiceGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outOfService", 1), ("inService", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupMode.setStatus('current')
sonusIsupsgServiceGroupAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dryUp", 1), ("force", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAction.setStatus('current')
sonusIsupsgServiceGroupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupTimeout.setStatus('current')
sonusIsupsgServiceGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 15), SonusAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAdminState.setStatus('current')
sonusIsupsgServiceGroupProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupProfileName.setStatus('current')
sonusIsupsgServiceGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 17), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupRowStatus.setStatus('current')
sonusIsupsgServiceGroupHopCounterState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 18), SonusAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupHopCounterState.setStatus('current')
sonusIsupsgServiceGroupHopCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupHopCounterValue.setStatus('current')
sonusIsupsgServiceGroupDiscTreatmentProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 20), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupDiscTreatmentProfileName.setStatus('current')
sonusIsupsgServiceGroupTonePackageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 21), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupTonePackageName.setStatus('current')
sonusIsupsgServiceGroupGrsStartup = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupGrsStartup.setStatus('current')
sonusIsupsgServiceGroupOlipCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupOlipCheck.setStatus('current')
sonusIsupsgServiceGroupRemPc = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 24), SonusPointCode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupRemPc.setStatus('current')
sonusIsupsgServiceGroupExchangeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("typeA", 2), ("typeB", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupExchangeType.setStatus('current')
sonusIsupsgServiceGroupInspectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 26), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupInspectionTime.setStatus('current')
sonusIsupsgServiceGroupInspectionFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("onehour", 1), ("threehours", 2), ("sixhours", 3), ("twelvehours", 4), ("oneday", 5), ("twodays", 6))).clone('oneday')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupInspectionFreq.setStatus('current')
sonusIsupsgServiceGroupInspectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 28), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupInspectionState.setStatus('current')
sonusIsupsgServiceGroupSignalingProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 29), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupSignalingProfileName.setStatus('current')
sonusIsupsgServiceGroupAccRespProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAccRespProcess.setStatus('current')
sonusIsupsgServiceGroupAccL1ARCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAccL1ARCancelpercentage.setStatus('current')
sonusIsupsgServiceGroupAccL1DRCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAccL1DRCancelpercentage.setStatus('current')
sonusIsupsgServiceGroupAccL2ARCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAccL2ARCancelpercentage.setStatus('current')
sonusIsupsgServiceGroupAccL2DRCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAccL2DRCancelpercentage.setStatus('current')
sonusIsupsgServiceGroupAccL3ARCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAccL3ARCancelpercentage.setStatus('current')
sonusIsupsgServiceGroupAccL3DRCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAccL3DRCancelpercentage.setStatus('current')
sonusIsupsgServiceGroupAccSendACL = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupAccSendACL.setStatus('current')
sonusIsupsgServiceGroupGatewayOutage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 1, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("keepCalls", 1), ("removeCalls", 2))).clone('keepCalls')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupGatewayOutage.setStatus('current')
sonusIsupsgServiceGroupStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 2), )
if mibBuilder.loadTexts: sonusIsupsgServiceGroupStatTable.setStatus('current')
sonusIsupsgServiceGroupStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgServiceGroupStatListIndex"))
if mibBuilder.loadTexts: sonusIsupsgServiceGroupStatEntry.setStatus('current')
sonusIsupsgServiceGroupStatListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupStatListIndex.setStatus('current')
sonusIsupsgServiceGroupStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 2, 1, 2), SonusNameReference()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupStatName.setStatus('current')
sonusIsupsgServiceGroupStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("available", 1), ("unavailable", 2), ("congested", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupStatStatus.setStatus('current')
sonusIsupsgServiceGroupStatLastInspectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupStatLastInspectionTime.setStatus('current')
sonusIsupsgServiceGroupStatNextInspectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 2, 1, 5), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgServiceGroupStatNextInspectionTime.setStatus('current')
sonusIsupsgSvcGrpProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3))
sonusIsupsgSvcGrpProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileNextIndex.setStatus('current')
sonusIsupsgSvcGrpProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2), )
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileTable.setStatus('current')
sonusIsupsgSvcGrpProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1), ).setIndexNames((0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgSvcGrpProfileListIndex"))
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileEntry.setStatus('current')
sonusIsupsgSvcGrpProfileListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileListIndex.setStatus('current')
sonusIsupsgSvcGrpProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileName.setStatus('current')
sonusIsupsgSvcGrpProfileTG = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileTG.setStatus('current')
sonusIsupsgSvcGrpProfileSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dms500", 1), ("dms250", 2), ("dms200", 3), ("dms100", 4), ("lucent5ESS", 5), ("lucent4ESS", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileSwitchType.setStatus('current')
sonusIsupsgSvcGrpProfileRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("ansi1992", 1), ("ansi1995", 2), ("itu1993", 3), ("etsi2", 4), ("nttfcc", 5), ("itu1997", 6), ("itu1988", 7), ("ituq767", 8), ("belgacom", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileRevision.setStatus('current')
sonusIsupsgSvcGrpProfileHuntAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("bottom2top", 1), ("top2bottom", 2), ("circuithi2lo", 3), ("circuitlo2hi", 4), ("mostnleastidle", 5), ("circularbottom2top", 6), ("circulartop2bottom", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileHuntAlgorithm.setStatus('current')
sonusIsupsgSvcGrpProfileCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileCost.setStatus('current')
sonusIsupsgSvcGrpProfileCicControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noCics", 1), ("oddCics", 2), ("evenCics", 3), ("allCics", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileCicControl.setStatus('current')
sonusIsupsgSvcGrpProfileContTestFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileContTestFreq.setStatus('current')
sonusIsupsgSvcGrpProfileAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 10), SonusAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAdminState.setStatus('current')
sonusIsupsgSvcGrpProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileRowStatus.setStatus('current')
sonusIsupsgSvcGrpProfileHopCounterState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 12), SonusAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileHopCounterState.setStatus('current')
sonusIsupsgSvcGrpProfileHopCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileHopCounterValue.setStatus('current')
sonusIsupsgSvcGrpProfileDiscTreatmentProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 14), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileDiscTreatmentProfileName.setStatus('current')
sonusIsupsgSvcGrpProfileTonePackageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 15), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileTonePackageName.setStatus('current')
sonusIsupsgSvcGrpProfileGrsStartup = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileGrsStartup.setStatus('current')
sonusIsupsgSvcGrpProfileOlipCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileOlipCheck.setStatus('current')
sonusIsupsgSvcGrpProfileExchangeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("typeA", 2), ("typeB", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileExchangeType.setStatus('current')
sonusIsupsgSvcGrpProfileInspectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 19), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileInspectionTime.setStatus('current')
sonusIsupsgSvcGrpProfileInspectionFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("onehour", 1), ("threehours", 2), ("sixhours", 3), ("twelvehours", 4), ("oneday", 5), ("twodays", 6))).clone('oneday')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileInspectionFreq.setStatus('current')
sonusIsupsgSvcGrpProfileInspectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 21), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileInspectionState.setStatus('current')
sonusIsupsgSvcGrpProfileSignalingProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 22), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileSignalingProfileName.setStatus('current')
sonusIsupsgSvcGrpProfileAccRespProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAccRespProcess.setStatus('current')
sonusIsupsgSvcGrpProfileAccL1ARCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAccL1ARCancelpercentage.setStatus('current')
sonusIsupsgSvcGrpProfileAccL1DRCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAccL1DRCancelpercentage.setStatus('current')
sonusIsupsgSvcGrpProfileAccL2ARCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAccL2ARCancelpercentage.setStatus('current')
sonusIsupsgSvcGrpProfileAccL2DRCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAccL2DRCancelpercentage.setStatus('current')
sonusIsupsgSvcGrpProfileAccL3ARCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAccL3ARCancelpercentage.setStatus('current')
sonusIsupsgSvcGrpProfileAccL3DRCancelpercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAccL3DRCancelpercentage.setStatus('current')
sonusIsupsgSvcGrpProfileAccSendACL = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 3, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSvcGrpProfileAccSendACL.setStatus('current')
sonusIsupsgCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4), )
if mibBuilder.loadTexts: sonusIsupsgCircuitTable.setStatus('current')
sonusIsupsgCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1), ).setIndexNames((0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgCircuitServiceListIndex"), (0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgCircuitIdentityCode"))
if mibBuilder.loadTexts: sonusIsupsgCircuitEntry.setStatus('current')
sonusIsupsgCircuitServiceListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitServiceListIndex.setStatus('current')
sonusIsupsgCircuitIdentityCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitIdentityCode.setStatus('current')
sonusIsupsgCircuitServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 3), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitServiceName.setStatus('current')
sonusIsupsgCircuitPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 4), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitPortName.setStatus('current')
sonusIsupsgCircuitChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitChannel.setStatus('current')
sonusIsupsgCircuitDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("twoWay", 1), ("oneWayIn", 2), ("oneWayOut", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitDirection.setStatus('current')
sonusIsupsgCircuitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("block", 1), ("unblock", 2), ("reset", 3), ("cot", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitMode.setStatus('current')
sonusIsupsgCircuitAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dryUp", 1), ("force", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitAction.setStatus('current')
sonusIsupsgCircuitTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitTimeout.setStatus('current')
sonusIsupsgCircuitAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 10), SonusAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitAdminState.setStatus('current')
sonusIsupsgCircuitProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 11), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitProfileName.setStatus('current')
sonusIsupsgCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 4, 1, 12), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgCircuitRowStatus.setStatus('current')
sonusIsupsgCircuitStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5), )
if mibBuilder.loadTexts: sonusIsupsgCircuitStatTable.setStatus('current')
sonusIsupsgCircuitStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1), ).setIndexNames((0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgCircuitStatServiceListIndex"), (0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgCircuitStatIdentityCode"))
if mibBuilder.loadTexts: sonusIsupsgCircuitStatEntry.setStatus('current')
sonusIsupsgCircuitStatServiceListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitStatServiceListIndex.setStatus('current')
sonusIsupsgCircuitStatIdentityCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitStatIdentityCode.setStatus('current')
sonusIsupsgCircuitStatUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unequipped", 1), ("idle", 2), ("inBusy", 3), ("outBusy", 4), ("transientSetup", 5), ("transientRelease", 6), ("inContinuity", 7), ("outContinuity", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitStatUsage.setStatus('current')
sonusIsupsgCircuitStatLocalMaint = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unblocked", 1), ("blocked", 2), ("transientUnblock", 3), ("transientBlock", 4), ("notAvailable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitStatLocalMaint.setStatus('current')
sonusIsupsgCircuitStatLocalHw = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unblocked", 1), ("blocked", 2), ("transientUnblock", 3), ("transientBlock", 4), ("notAvailable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitStatLocalHw.setStatus('current')
sonusIsupsgCircuitStatRemoteMaint = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unblocked", 1), ("blocked", 2), ("transientUnblock", 3), ("transientBlock", 4), ("notAvailable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitStatRemoteMaint.setStatus('current')
sonusIsupsgCircuitStatRemoteHw = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unblocked", 1), ("blocked", 2), ("transientUnblock", 3), ("transientBlock", 4), ("notAvailable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitStatRemoteHw.setStatus('current')
sonusIsupsgCircuitStatManualCot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notAvailable", 1), ("pending", 2), ("inProgress", 3), ("pass", 4), ("fail", 5), ("abort", 6), ("lpaFail", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgCircuitStatManualCot.setStatus('current')
sonusIsupsgFarEndCircuitAdminTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6), )
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitAdminTable.setStatus('current')
sonusIsupsgFarEndCircuitAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1), ).setIndexNames((0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgFarEndCircuitServiceListIndex"), (0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgFarEndCircuitIdentityCode"))
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitAdminEntry.setStatus('current')
sonusIsupsgFarEndCircuitServiceListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitServiceListIndex.setStatus('current')
sonusIsupsgFarEndCircuitIdentityCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitIdentityCode.setStatus('current')
sonusIsupsgFarEndCircuitValidationTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noResponse", 0), ("successful", 1), ("failure", 2), ("notAvailable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitValidationTestResult.setStatus('current')
sonusIsupsgFarEndCircuitGroupCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noResponse", 0), ("unknown", 1), ("analog", 2), ("digital", 3), ("digitalAndAnalog", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitGroupCarrier.setStatus('current')
sonusIsupsgFarEndCircuitCicControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noResponse", 0), ("noCics", 1), ("oddCics", 2), ("evenCics", 3), ("allCics", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitCicControl.setStatus('current')
sonusIsupsgFarEndCircuitAlarmCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noResponse", 0), ("unknown", 1), ("softwareCarrier", 2), ("hardwareCarrier", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitAlarmCarrier.setStatus('current')
sonusIsupsgFarEndCircuitContinuityRequirement = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noResponse", 0), ("unknown", 1), ("none", 2), ("statistical", 3), ("perCall", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitContinuityRequirement.setStatus('current')
sonusIsupsgFarEndCircuitIdentificationTrunkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 8), SonusNameReference()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitIdentificationTrunkNumber.setStatus('current')
sonusIsupsgFarEndCircuitIdentificationOfficeA = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 9), SonusNameReference()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitIdentificationOfficeA.setStatus('current')
sonusIsupsgFarEndCircuitIdentificationOfficeZ = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 10), SonusNameReference()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitIdentificationOfficeZ.setStatus('current')
sonusIsupsgFarEndCircuitLocationIdentification = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 11), SonusNameReference()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitLocationIdentification.setStatus('current')
sonusIsupsgFarEndCircuitCicControlConflict = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noResponse", 0), ("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitCicControlConflict.setStatus('current')
sonusIsupsgFarEndCircuitStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 7), )
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitStatTable.setStatus('current')
sonusIsupsgFarEndCircuitStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 7, 1), ).setIndexNames((0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgFarEndCircuitStatServiceListIndex"), (0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgFarEndCircuitStatIdentityCode"))
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitStatEntry.setStatus('current')
sonusIsupsgFarEndCircuitStatServiceListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitStatServiceListIndex.setStatus('current')
sonusIsupsgFarEndCircuitStatIdentityCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitStatIdentityCode.setStatus('current')
sonusIsupsgFarEndCircuitStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("noResponse", 0), ("transient", 1), ("unequipped", 2), ("inbusyActive", 3), ("inbusyLocalBlocked", 4), ("inbusyRemoteBlocked", 5), ("inbusyLocalRemoteBlocked", 6), ("outbusyActive", 7), ("outbusyLocalBlocked", 8), ("outbusyRemoteBlocked", 9), ("outbusyLocalRemoteBlocked", 10), ("idle", 11), ("idleLocalBlocked", 12), ("idleRemoteBlocked", 13), ("idleLocalRemoteBlocked", 14), ("notAvailable", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitStatStatus.setStatus('current')
sonusIsupsgFarEndCircuitStatLocalMaint = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unblocked", 1), ("blocked", 2), ("transientUnblock", 3), ("transientBlock", 4), ("notAvailable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgFarEndCircuitStatLocalMaint.setStatus('current')
sonusIsupsgSignalingProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8))
sonusIsupsgSignalingProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileNextIndex.setStatus('current')
sonusIsupsgSignalingProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2), )
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileTable.setStatus('current')
sonusIsupsgSignalingProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1), ).setIndexNames((0, "SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupsgSignalingProfileListIndex"))
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileEntry.setStatus('current')
sonusIsupsgSignalingProfileListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileListIndex.setStatus('current')
sonusIsupsgSignalingProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileName.setStatus('current')
sonusIsupsgSignalingProfileCompat = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 3), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCompat.setStatus('current')
sonusIsupsgSignalingProfileAccessDel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 4), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileAccessDel.setStatus('current')
sonusIsupsgSignalingProfileGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 5), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileGenNum.setStatus('current')
sonusIsupsgSignalingProfileGenNotif = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 6), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileGenNotif.setStatus('current')
sonusIsupsgSignalingProfileGenDigs = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 7), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileGenDigs.setStatus('current')
sonusIsupsgSignalingProfileLocNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 8), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileLocNum.setStatus('current')
sonusIsupsgSignalingProfileOrigIscPC = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 9), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileOrigIscPC.setStatus('current')
sonusIsupsgSignalingProfileUserTeleService = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 10), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUserTeleService.setStatus('current')
sonusIsupsgSignalingProfileSegmentation = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 11), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileSegmentation.setStatus('current')
sonusIsupsgSignalingProfileFallback = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 12), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileFallback.setStatus('current')
sonusIsupsgSignalingProfilePropDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 13), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfilePropDelay.setStatus('current')
sonusIsupsgSignalingProfileEMcid = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 14), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileEMcid.setStatus('current')
sonusIsupsgSignalingProfileHopCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 15), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileHopCounter.setStatus('current')
sonusIsupsgSignalingProfileSubPriorityCls = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 16), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileSubPriorityCls.setStatus('current')
sonusIsupsgSignalingProfileAPM = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 17), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileAPM.setStatus('current')
sonusIsupsgSignalingProfileConNumInAcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 18), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileConNumInAcm.setStatus('current')
sonusIsupsgSignalingProfileCauseInCpg = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 19), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCauseInCpg.setStatus('current')
sonusIsupsgSignalingProfileMultiCarrierEnv = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 20), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileMultiCarrierEnv.setStatus('current')
sonusIsupsgSignalingProfileCarrierSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 21), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCarrierSelection.setStatus('current')
sonusIsupsgSignalingProfileInrInf = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 22), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileInrInf.setStatus('current')
sonusIsupsgSignalingProfileCqmCqr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 23), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCqmCqr.setStatus('current')
sonusIsupsgSignalingProfileCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 24), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCallRef.setStatus('current')
sonusIsupsgSignalingProfileCfn = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 25), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCfn.setStatus('current')
sonusIsupsgSignalingProfileFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 26), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileFacility.setStatus('current')
sonusIsupsgSignalingProfilePam = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 27), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfilePam.setStatus('current')
sonusIsupsgSignalingProfileObciAnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 28), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileObciAnm.setStatus('current')
sonusIsupsgSignalingProfileDrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 29), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileDrs.setStatus('current')
sonusIsupsgSignalingProfileRedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 30), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRedNum.setStatus('current')
sonusIsupsgSignalingProfileLpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 31), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileLpa.setStatus('current')
sonusIsupsgSignalingProfileUcic = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 32), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUcic.setStatus('current')
sonusIsupsgSignalingProfileOlm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 33), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileOlm.setStatus('current')
sonusIsupsgSignalingProfileBBRel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 34), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileBBRel.setStatus('current')
sonusIsupsgSignalingProfileUsr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 35), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUsr.setStatus('current')
sonusIsupsgSignalingProfileBBIam = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 36), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileBBIam.setStatus('current')
sonusIsupsgSignalingProfileCallModMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 37), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCallModMsgs.setStatus('current')
sonusIsupsgSignalingProfileCallDiv = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 38), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCallDiv.setStatus('current')
sonusIsupsgSignalingProfileCallHist = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 39), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCallHist.setStatus('current')
sonusIsupsgSignalingProfileGenRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 40), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileGenRef.setStatus('current')
sonusIsupsgSignalingProfileMLPP = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 41), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileMLPP.setStatus('current')
sonusIsupsgSignalingProfileNSF = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 42), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileNSF.setStatus('current')
sonusIsupsgSignalingProfileRedNumRist = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 43), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRedNumRist.setStatus('current')
sonusIsupsgSignalingProfileRemoteOp = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 44), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRemoteOp.setStatus('current')
sonusIsupsgSignalingProfileServActv = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 45), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileServActv.setStatus('current')
sonusIsupsgSignalingProfileSigPointCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 46), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileSigPointCode.setStatus('current')
sonusIsupsgSignalingProfileTmrPrime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 47), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileTmrPrime.setStatus('current')
sonusIsupsgSignalingProfileTransMedUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 48), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileTransMedUsed.setStatus('current')
sonusIsupsgSignalingProfileUsiPrime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 49), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUsiPrime.setStatus('current')
sonusIsupsgSignalingProfileRedNumInAcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 50), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRedNumInAcm.setStatus('current')
sonusIsupsgSignalingProfileRedNumInAnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 51), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRedNumInAnm.setStatus('current')
sonusIsupsgSignalingProfileUuiInRel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 52), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUuiInRel.setStatus('current')
sonusIsupsgSignalingProfileConReqInFaa = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 53), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileConReqInFaa.setStatus('current')
sonusIsupsgSignalingProfileConReqInFar = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 54), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileConReqInFar.setStatus('current')
sonusIsupsgSignalingProfileFac = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 55), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileFac.setStatus('current')
sonusIsupsgSignalingProfileEchoControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 56), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileEchoControl.setStatus('current')
sonusIsupsgSignalingProfileBackwardGVNS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 57), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileBackwardGVNS.setStatus('current')
sonusIsupsgSignalingProfileCircAssMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 58), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCircAssMap.setStatus('current')
sonusIsupsgSignalingProfileCCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 59), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCCSS.setStatus('current')
sonusIsupsgSignalingProfileCallDivTreat = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 60), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCallDivTreat.setStatus('current')
sonusIsupsgSignalingProfileCalledInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 61), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCalledInNum.setStatus('current')
sonusIsupsgSignalingProfileCollectCallReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 62), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCollectCallReq.setStatus('current')
sonusIsupsgSignalingProfileConfTreat = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 63), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileConfTreat.setStatus('current')
sonusIsupsgSignalingProfileCorrelationId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 64), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCorrelationId.setStatus('current')
sonusIsupsgSignalingProfileCallOfrTreat = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 65), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCallOfrTreat.setStatus('current')
sonusIsupsgSignalingProfileCallTransNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 66), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCallTransNum.setStatus('current')
sonusIsupsgSignalingProfileCallTransRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 67), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCallTransRef.setStatus('current')
sonusIsupsgSignalingProfileDispInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 68), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileDispInfo.setStatus('current')
sonusIsupsgSignalingProfileForwardGVNS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 69), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileForwardGVNS.setStatus('current')
sonusIsupsgSignalingProfileLoopPrevention = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 70), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileLoopPrevention.setStatus('current')
sonusIsupsgSignalingProfileNetworkMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 71), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileNetworkMgmt.setStatus('current')
sonusIsupsgSignalingProfileSCFId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 72), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileSCFId.setStatus('current')
sonusIsupsgSignalingProfileUIDActionInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 73), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUIDActionInd.setStatus('current')
sonusIsupsgSignalingProfileUIDCapInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 74), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUIDCapInd.setStatus('current')
sonusIsupsgSignalingProfileConNumInCpg = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 75), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileConNumInCpg.setStatus('current')
sonusIsupsgSignalingProfileGenNumInCpg = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 76), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileGenNumInCpg.setStatus('current')
sonusIsupsgSignalingProfileEchoCntrlInIam = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 77), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileEchoCntrlInIam.setStatus('current')
sonusIsupsgSignalingProfileRemoteOpInRel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 78), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRemoteOpInRel.setStatus('current')
sonusIsupsgSignalingProfileAccessTransInFac = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 79), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileAccessTransInFac.setStatus('current')
sonusIsupsgSignalingProfileGenNotifInFac = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 80), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileGenNotifInFac.setStatus('current')
sonusIsupsgSignalingProfileUuindAnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 81), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUuindAnm.setStatus('current')
sonusIsupsgSignalingProfileUuindCpg = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 82), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUuindCpg.setStatus('current')
sonusIsupsgSignalingProfileNrmSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 83), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileNrmSupport.setStatus('current')
sonusIsupsgSignalingProfileCseInRlc = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 84), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCseInRlc.setStatus('current')
sonusIsupsgSignalingProfileUpaUpt = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 85), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUpaUpt.setStatus('current')
sonusIsupsgSignalingProfileRecInCai = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 86), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRecInCai.setStatus('current')
sonusIsupsgSignalingProfileTransitUnrec = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 87), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileTransitUnrec.setStatus('current')
sonusIsupsgSignalingProfileCcRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 88), SonusSupportFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCcRaw.setStatus('current')
sonusIsupsgSignalingProfileCctGrpBlockFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 89), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCctGrpBlockFlag.setStatus('current')
sonusIsupsgSignalingProfileCctGrpResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 90), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCctGrpResetFlag.setStatus('current')
sonusIsupsgSignalingProfileBaseProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 91), SonusNameReference()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileBaseProfileName.setStatus('current')
sonusIsupsgSignalingProfileAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 92), SonusAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileAdminState.setStatus('current')
sonusIsupsgSignalingProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 93), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRowStatus.setStatus('current')
sonusIsupsgSignalingProfilePropDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 94), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfilePropDelayValue.setStatus('current')
sonusIsupsgSignalingProfileU2USrvcLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 95), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("level1", 1), ("level2", 2), ("level3", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileU2USrvcLevel.setStatus('current')
sonusIsupsgSignalingProfileSAM = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 96), SonusSupportFlag().clone('unsupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileSAM.setStatus('current')
sonusIsupsgSignalingProfileFOT = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 97), SonusSupportFlag().clone('unsupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileFOT.setStatus('current')
sonusIsupsgSignalingProfileSpecialDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 98), Bits().clone(namedValues=NamedValues(("digitA", 0), ("digitB", 1), ("digitC", 2), ("digitD", 3), ("digitE", 4), ("digitF", 5), ("none", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileSpecialDigits.setStatus('current')
sonusIsupsgSignalingProfileTNS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 99), SonusSupportFlag().clone('unsupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileTNS.setStatus('current')
sonusIsupsgSignalingProfileAwaitDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 100), SonusSupportFlag().clone('unsupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileAwaitDigits.setStatus('current')
sonusIsupsgSignalingProfileAccessTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 101), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileAccessTrans.setStatus('current')
sonusIsupsgSignalingProfileJurisdiction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 102), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileJurisdiction.setStatus('current')
sonusIsupsgSignalingProfileOCN = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 103), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileOCN.setStatus('current')
sonusIsupsgSignalingProfileBusinessGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 104), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileBusinessGrp.setStatus('current')
sonusIsupsgSignalingProfileConReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 105), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileConReq.setStatus('current')
sonusIsupsgSignalingProfileInfoInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 106), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileInfoInd.setStatus('current')
sonusIsupsgSignalingProfileNtp = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 107), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileNtp.setStatus('current')
sonusIsupsgSignalingProfileNotifInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 108), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileNotifInd.setStatus('current')
sonusIsupsgSignalingProfileRedInfoAcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 109), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRedInfoAcm.setStatus('current')
sonusIsupsgSignalingProfileEgressService = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 110), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileEgressService.setStatus('current')
sonusIsupsgSignalingProfileServCodeInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 111), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileServCodeInd.setStatus('current')
sonusIsupsgSignalingProfileSpecProcReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 112), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileSpecProcReq.setStatus('current')
sonusIsupsgSignalingProfileTransReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 113), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileTransReq.setStatus('current')
sonusIsupsgSignalingProfileChgNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 114), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileChgNum.setStatus('current')
sonusIsupsgSignalingProfileGenAddressREL = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 115), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileGenAddressREL.setStatus('current')
sonusIsupsgSignalingProfileUUIndAcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 116), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUUIndAcm.setStatus('current')
sonusIsupsgSignalingProfileUUInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 117), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileUUInfo.setStatus('current')
sonusIsupsgSignalingProfileOperatorServInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 118), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileOperatorServInfo.setStatus('current')
sonusIsupsgSignalingProfileCvtCvr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 119), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCvtCvr.setStatus('current')
sonusIsupsgSignalingProfileGenName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 120), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileGenName.setStatus('current')
sonusIsupsgSignalingProfileRedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 121), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRedCap.setStatus('current')
sonusIsupsgSignalingProfileRedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 122), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileRedCount.setStatus('current')
sonusIsupsgSignalingProfileSendTwoGrpMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 123), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileSendTwoGrpMsgs.setStatus('current')
sonusIsupsgSignalingProfileAwaitTwoGrpMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 124), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileAwaitTwoGrpMsgs.setStatus('current')
sonusIsupsgSignalingProfileCqmOnCardSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 125), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCqmOnCardSwap.setStatus('current')
sonusIsupsgSignalingProfileAnsi95Grs = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 126), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileAnsi95Grs.setStatus('current')
sonusIsupsgSignalingProfileCpgBeforeAcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 1, 8, 2, 1, 127), SonusSupportFlag().clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusIsupsgSignalingProfileCpgBeforeAcm.setStatus('current')
sonusIsupServiceGroupMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2))
sonusIsupServiceGroupMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0))
sonusIsupServiceGroupMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1))
sonusIsupSvcGrpName = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupSvcGrpName.setStatus('current')
sonusIsupMaintReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ss7GwRegistration", 1), ("remoteSs7PointCodeAccess", 2), ("trunkGroupMode", 3), ("serviceGroupMode", 4), ("circuitMode", 5), ("ds1Mode", 6), ("serverMode", 7), ("localHardware", 8), ("remoteMaintenance", 9), ("remoteHardware", 10), ("remoteUnequipped", 11), ("ss7GwResynchronization", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupMaintReason.setStatus('current')
sonusIsupTrunkGrpName = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupTrunkGrpName.setStatus('current')
sonusIsupCircuit = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupCircuit.setStatus('current')
sonusIsupCircuitOffsets = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1, 5), Bits().clone(namedValues=NamedValues(("cicOffset0", 0), ("cicOffset1", 1), ("cicOffset2", 2), ("cicOffset3", 3), ("cicOffset4", 4), ("cicOffset5", 5), ("cicOffset6", 6), ("cicOffset7", 7), ("cicOffset8", 8), ("cicOffset9", 9), ("cicOffset10", 10), ("cicOffset11", 11), ("cicOffset12", 12), ("cicOffset13", 13), ("cicOffset14", 14), ("cicOffset15", 15), ("cicOffset16", 16), ("cicOffset17", 17), ("cicOffset18", 18), ("cicOffset19", 19), ("cicOffset20", 20), ("cicOffset21", 21), ("cicOffset22", 22), ("cicOffset23", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupCircuitOffsets.setStatus('current')
sonusIsupCalledPartyNumber = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupCalledPartyNumber.setStatus('current')
sonusIsupCallingPartyNumber = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupCallingPartyNumber.setStatus('current')
sonusIsupMaintCode = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIsupMaintCode.setStatus('current')
sonusIsupSvcGrpInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 1)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupSvcGrpInServiceNotification.setStatus('current')
sonusIsupSvcGrpOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 2)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupSvcGrpOutOfServiceNotification.setStatus('current')
sonusIsupCircuitBlockedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 3)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupMaintReason"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupTrunkGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuitOffsets"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupCircuitBlockedNotification.setStatus('current')
sonusIsupCircuitUnblockedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 4)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupMaintReason"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupTrunkGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuitOffsets"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupCircuitUnblockedNotification.setStatus('current')
sonusIsupCircuitResetNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 5)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupTrunkGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuitOffsets"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupCircuitResetNotification.setStatus('current')
sonusIsupContinuityRecheckFailureNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 6)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupContinuityRecheckFailureNotification.setStatus('current')
sonusIsupCicRegistrationFailedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 7)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupCicRegistrationFailedNotification.setStatus('current')
sonusIsupHopCounterExhaustedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 8)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCalledPartyNumber"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCallingPartyNumber"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupHopCounterExhaustedNotification.setStatus('current')
sonusIsupRelWithExchangeRoutingErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 9)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCalledPartyNumber"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCallingPartyNumber"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupRelWithExchangeRoutingErrorNotification.setStatus('current')
sonusIsupCqmTimeoutNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 10)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupCqmTimeoutNotification.setStatus('current')
sonusIsupCvtTimeoutNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 11)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupCvtTimeoutNotification.setStatus('current')
sonusIsupFarendCircuitStateMismatchedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 12)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupFarendCircuitStateMismatchedNotification.setStatus('current')
sonusIsupCircuitTimerExpired = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 6, 1, 2, 0, 13)).setObjects(("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupTrunkGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupSvcGrpName"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupCircuit"), ("SONUS-ISUP-SERVICE-GROUP-MIB", "sonusIsupMaintCode"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusIsupCircuitTimerExpired.setStatus('current')
mibBuilder.exportSymbols("SONUS-ISUP-SERVICE-GROUP-MIB", sonusIsupsgSignalingProfileGenNum=sonusIsupsgSignalingProfileGenNum, sonusIsupsgCircuitStatLocalMaint=sonusIsupsgCircuitStatLocalMaint, sonusIsupsgSvcGrpProfileSwitchType=sonusIsupsgSvcGrpProfileSwitchType, sonusIsupsgCircuitStatManualCot=sonusIsupsgCircuitStatManualCot, sonusIsupsgServiceGroupTimeout=sonusIsupsgServiceGroupTimeout, sonusIsupsgSignalingProfileTransReq=sonusIsupsgSignalingProfileTransReq, sonusIsupsgServiceGroupAccL1ARCancelpercentage=sonusIsupsgServiceGroupAccL1ARCancelpercentage, sonusIsupsgServiceGroupTG=sonusIsupsgServiceGroupTG, sonusIsupsgSignalingProfileAwaitTwoGrpMsgs=sonusIsupsgSignalingProfileAwaitTwoGrpMsgs, sonusIsupsgSignalingProfileBaseProfileName=sonusIsupsgSignalingProfileBaseProfileName, sonusIsupsgServiceGroupRemPc=sonusIsupsgServiceGroupRemPc, sonusIsupsgSvcGrpProfileCicControl=sonusIsupsgSvcGrpProfileCicControl, sonusIsupsgSignalingProfileSCFId=sonusIsupsgSignalingProfileSCFId, sonusIsupsgSvcGrpProfileCost=sonusIsupsgSvcGrpProfileCost, sonusIsupFarendCircuitStateMismatchedNotification=sonusIsupFarendCircuitStateMismatchedNotification, sonusIsupsgSignalingProfileNSF=sonusIsupsgSignalingProfileNSF, sonusIsupMaintReason=sonusIsupMaintReason, sonusIsupsgSignalingProfileCpgBeforeAcm=sonusIsupsgSignalingProfileCpgBeforeAcm, sonusIsupsgSignalingProfileEchoControl=sonusIsupsgSignalingProfileEchoControl, sonusIsupsgCircuitStatLocalHw=sonusIsupsgCircuitStatLocalHw, sonusIsupsgSignalingProfileOCN=sonusIsupsgSignalingProfileOCN, sonusIsupsgSignalingProfileGenRef=sonusIsupsgSignalingProfileGenRef, sonusIsupMaintCode=sonusIsupMaintCode, sonusIsupsgSignalingProfileCallTransRef=sonusIsupsgSignalingProfileCallTransRef, sonusIsupsgSignalingProfileServCodeInd=sonusIsupsgSignalingProfileServCodeInd, sonusIsupsgSvcGrpProfileNextIndex=sonusIsupsgSvcGrpProfileNextIndex, sonusIsupsgSvcGrpProfileDiscTreatmentProfileName=sonusIsupsgSvcGrpProfileDiscTreatmentProfileName, sonusIsupsgSignalingProfileEntry=sonusIsupsgSignalingProfileEntry, sonusIsupsgServiceGroupCicControl=sonusIsupsgServiceGroupCicControl, sonusIsupsgSignalingProfileName=sonusIsupsgSignalingProfileName, sonusIsupsgSignalingProfileCollectCallReq=sonusIsupsgSignalingProfileCollectCallReq, sonusIsupsgSignalingProfileGenNumInCpg=sonusIsupsgSignalingProfileGenNumInCpg, sonusIsupsgSignalingProfileRowStatus=sonusIsupsgSignalingProfileRowStatus, sonusIsupsgServiceGroupMode=sonusIsupsgServiceGroupMode, sonusIsupsgServiceGroupDiscTreatmentProfileName=sonusIsupsgServiceGroupDiscTreatmentProfileName, sonusIsupCircuit=sonusIsupCircuit, sonusIsupSvcGrpInServiceNotification=sonusIsupSvcGrpInServiceNotification, sonusIsupsgSignalingProfileCallTransNum=sonusIsupsgSignalingProfileCallTransNum, sonusIsupsgSignalingProfileCauseInCpg=sonusIsupsgSignalingProfileCauseInCpg, sonusIsupsgFarEndCircuitStatStatus=sonusIsupsgFarEndCircuitStatStatus, sonusIsupsgCircuitTimeout=sonusIsupsgCircuitTimeout, sonusIsupsgSignalingProfileSubPriorityCls=sonusIsupsgSignalingProfileSubPriorityCls, sonusIsupsgServiceGroupAction=sonusIsupsgServiceGroupAction, sonusIsupsgFarEndCircuitCicControl=sonusIsupsgFarEndCircuitCicControl, sonusIsupsgFarEndCircuitCicControlConflict=sonusIsupsgFarEndCircuitCicControlConflict, sonusIsupsgSignalingProfileConReqInFaa=sonusIsupsgSignalingProfileConReqInFaa, sonusIsupsgSignalingProfileRedCap=sonusIsupsgSignalingProfileRedCap, sonusIsupsgSignalingProfileDrs=sonusIsupsgSignalingProfileDrs, sonusIsupsgServiceGroupStatName=sonusIsupsgServiceGroupStatName, sonusIsupsgSignalingProfileUuiInRel=sonusIsupsgSignalingProfileUuiInRel, sonusIsupsgServiceGroupAccSendACL=sonusIsupsgServiceGroupAccSendACL, sonusIsupsgSignalingProfileCorrelationId=sonusIsupsgSignalingProfileCorrelationId, sonusIsupsgSignalingProfileUUInfo=sonusIsupsgSignalingProfileUUInfo, sonusIsupServiceGroupMIBNotificationsObjects=sonusIsupServiceGroupMIBNotificationsObjects, sonusIsupsgSignalingProfileCallDiv=sonusIsupsgSignalingProfileCallDiv, sonusIsupsgFarEndCircuitStatEntry=sonusIsupsgFarEndCircuitStatEntry, sonusIsupsgSignalingProfileRecInCai=sonusIsupsgSignalingProfileRecInCai, sonusIsupsgCircuitChannel=sonusIsupsgCircuitChannel, sonusIsupsgSignalingProfileSpecProcReq=sonusIsupsgSignalingProfileSpecProcReq, sonusIsupsgSignalingProfileRedNum=sonusIsupsgSignalingProfileRedNum, sonusIsupsgSignalingProfileFallback=sonusIsupsgSignalingProfileFallback, sonusIsupsgSignalingProfileTNS=sonusIsupsgSignalingProfileTNS, sonusIsupsgCircuitStatRemoteMaint=sonusIsupsgCircuitStatRemoteMaint, sonusIsupsgCircuitDirection=sonusIsupsgCircuitDirection, sonusIsupsgSvcGrpProfileGrsStartup=sonusIsupsgSvcGrpProfileGrsStartup, sonusIsupsgCircuitStatUsage=sonusIsupsgCircuitStatUsage, sonusIsupServiceGroupMIBNotificationsPrefix=sonusIsupServiceGroupMIBNotificationsPrefix, sonusIsupsgSignalingProfileListIndex=sonusIsupsgSignalingProfileListIndex, sonusIsupsgSignalingProfileRedNumInAcm=sonusIsupsgSignalingProfileRedNumInAcm, sonusIsupsgSignalingProfileSAM=sonusIsupsgSignalingProfileSAM, sonusIsupsgSvcGrpProfileAccL2ARCancelpercentage=sonusIsupsgSvcGrpProfileAccL2ARCancelpercentage, sonusIsupSvcGrpName=sonusIsupSvcGrpName, sonusIsupsgServiceGroupOlipCheck=sonusIsupsgServiceGroupOlipCheck, sonusIsupsgCircuitTable=sonusIsupsgCircuitTable, sonusIsupsgSignalingProfileGenNotifInFac=sonusIsupsgSignalingProfileGenNotifInFac, sonusIsupsgSvcGrpProfileAccL3DRCancelpercentage=sonusIsupsgSvcGrpProfileAccL3DRCancelpercentage, sonusIsupsgSignalingProfileBackwardGVNS=sonusIsupsgSignalingProfileBackwardGVNS, sonusIsupCallingPartyNumber=sonusIsupCallingPartyNumber, sonusIsupsgFarEndCircuitAlarmCarrier=sonusIsupsgFarEndCircuitAlarmCarrier, sonusIsupCircuitUnblockedNotification=sonusIsupCircuitUnblockedNotification, sonusIsupCqmTimeoutNotification=sonusIsupCqmTimeoutNotification, sonusIsupsgSignalingProfileU2USrvcLevel=sonusIsupsgSignalingProfileU2USrvcLevel, sonusIsupsgSignalingProfileNetworkMgmt=sonusIsupsgSignalingProfileNetworkMgmt, sonusIsupsgCircuitStatRemoteHw=sonusIsupsgCircuitStatRemoteHw, sonusIsupsgFarEndCircuitIdentificationOfficeZ=sonusIsupsgFarEndCircuitIdentificationOfficeZ, sonusIsupsgSignalingProfileUIDActionInd=sonusIsupsgSignalingProfileUIDActionInd, sonusIsupsgSignalingProfileGenNotif=sonusIsupsgSignalingProfileGenNotif, sonusIsupsgServiceGroupSignalingProfileName=sonusIsupsgServiceGroupSignalingProfileName, sonusIsupsgServiceGroupAccL3DRCancelpercentage=sonusIsupsgServiceGroupAccL3DRCancelpercentage, sonusIsupsgSignalingProfileCalledInNum=sonusIsupsgSignalingProfileCalledInNum, sonusIsupsgSignalingProfileConNumInAcm=sonusIsupsgSignalingProfileConNumInAcm, sonusIsupsgSvcGrpProfileRowStatus=sonusIsupsgSvcGrpProfileRowStatus, sonusIsupServiceGroupMIBObjects=sonusIsupServiceGroupMIBObjects, sonusIsupsgCircuitPortName=sonusIsupsgCircuitPortName, sonusIsupsgSignalingProfileSigPointCode=sonusIsupsgSignalingProfileSigPointCode, sonusIsupsgServiceGroupGrsStartup=sonusIsupsgServiceGroupGrsStartup, sonusIsupsgServiceGroupOperation=sonusIsupsgServiceGroupOperation, sonusIsupsgSignalingProfileAccessTrans=sonusIsupsgSignalingProfileAccessTrans, sonusIsupsgFarEndCircuitIdentityCode=sonusIsupsgFarEndCircuitIdentityCode, sonusIsupsgSignalingProfileUsiPrime=sonusIsupsgSignalingProfileUsiPrime, sonusIsupCicRegistrationFailedNotification=sonusIsupCicRegistrationFailedNotification, sonusIsupsgCircuitEntry=sonusIsupsgCircuitEntry, sonusIsupsgServiceGroupNextIndex=sonusIsupsgServiceGroupNextIndex, sonusIsupsgSignalingProfileGenName=sonusIsupsgSignalingProfileGenName, sonusIsupsgServiceGroupAccRespProcess=sonusIsupsgServiceGroupAccRespProcess, sonusIsupServiceGroupMIBNotifications=sonusIsupServiceGroupMIBNotifications, sonusIsupsgSignalingProfileUpaUpt=sonusIsupsgSignalingProfileUpaUpt, sonusIsupCvtTimeoutNotification=sonusIsupCvtTimeoutNotification, sonusIsupsgSignalingProfileUIDCapInd=sonusIsupsgSignalingProfileUIDCapInd, sonusIsupsgSignalingProfileTransMedUsed=sonusIsupsgSignalingProfileTransMedUsed, sonusIsupsgSignalingProfileNotifInd=sonusIsupsgSignalingProfileNotifInd, sonusIsupsgSvcGrpProfileRevision=sonusIsupsgSvcGrpProfileRevision, sonusIsupsgSignalingProfileCseInRlc=sonusIsupsgSignalingProfileCseInRlc, sonusIsupsgSignalingProfileNrmSupport=sonusIsupsgSignalingProfileNrmSupport, sonusIsupsgSignalingProfileCctGrpResetFlag=sonusIsupsgSignalingProfileCctGrpResetFlag, sonusIsupCircuitResetNotification=sonusIsupCircuitResetNotification, sonusIsupsgCircuitRowStatus=sonusIsupsgCircuitRowStatus, sonusIsupsgSignalingProfileCallModMsgs=sonusIsupsgSignalingProfileCallModMsgs, sonusIsupsgSignalingProfileGenDigs=sonusIsupsgSignalingProfileGenDigs, PYSNMP_MODULE_ID=sonusIsupServiceGroupMIB, sonusIsupsgCircuitServiceListIndex=sonusIsupsgCircuitServiceListIndex, sonusIsupsgSignalingProfileCallRef=sonusIsupsgSignalingProfileCallRef, sonusIsupsgServiceGroupAccL2ARCancelpercentage=sonusIsupsgServiceGroupAccL2ARCancelpercentage, sonusIsupsgSignalingProfileUuindCpg=sonusIsupsgSignalingProfileUuindCpg, sonusIsupsgSignalingProfileRemoteOpInRel=sonusIsupsgSignalingProfileRemoteOpInRel, sonusIsupCircuitBlockedNotification=sonusIsupCircuitBlockedNotification, sonusIsupsgSignalingProfileRedNumInAnm=sonusIsupsgSignalingProfileRedNumInAnm, sonusIsupsgFarEndCircuitServiceListIndex=sonusIsupsgFarEndCircuitServiceListIndex, sonusIsupsgSignalingProfileAccessTransInFac=sonusIsupsgSignalingProfileAccessTransInFac, sonusIsupsgSvcGrpProfileEntry=sonusIsupsgSvcGrpProfileEntry, sonusIsupsgServiceGroupExchangeType=sonusIsupsgServiceGroupExchangeType, sonusIsupsgFarEndCircuitContinuityRequirement=sonusIsupsgFarEndCircuitContinuityRequirement, sonusIsupCalledPartyNumber=sonusIsupCalledPartyNumber, sonusIsupsgSignalingProfileCvtCvr=sonusIsupsgSignalingProfileCvtCvr, sonusIsupsgSignalingProfileRedInfoAcm=sonusIsupsgSignalingProfileRedInfoAcm, sonusIsupsgCircuitStatTable=sonusIsupsgCircuitStatTable, sonusIsupsgSvcGrpProfileName=sonusIsupsgSvcGrpProfileName, sonusIsupsgSignalingProfileMLPP=sonusIsupsgSignalingProfileMLPP, sonusIsupsgServiceGroupTable=sonusIsupsgServiceGroupTable, sonusIsupsgSignalingProfileNextIndex=sonusIsupsgSignalingProfileNextIndex, sonusIsupsgSignalingProfileLoopPrevention=sonusIsupsgSignalingProfileLoopPrevention, sonusIsupsgSignalingProfileEMcid=sonusIsupsgSignalingProfileEMcid, sonusIsupsgServiceGroupGatewayOutage=sonusIsupsgServiceGroupGatewayOutage, sonusIsupsgFarEndCircuitStatIdentityCode=sonusIsupsgFarEndCircuitStatIdentityCode, sonusIsupsgSvcGrpProfileOlipCheck=sonusIsupsgSvcGrpProfileOlipCheck, sonusIsupsgSvcGrpProfileTonePackageName=sonusIsupsgSvcGrpProfileTonePackageName, sonusIsupsgSignalingProfileConfTreat=sonusIsupsgSignalingProfileConfTreat, sonusIsupsgSignalingProfileCallOfrTreat=sonusIsupsgSignalingProfileCallOfrTreat, sonusIsupsgSignalingProfileBusinessGrp=sonusIsupsgSignalingProfileBusinessGrp, sonusIsupsgFarEndCircuitValidationTestResult=sonusIsupsgFarEndCircuitValidationTestResult, sonusIsupsgServiceGroupEntry=sonusIsupsgServiceGroupEntry, sonusIsupsgCircuitAction=sonusIsupsgCircuitAction, sonusIsupsgServiceGroupAccL1DRCancelpercentage=sonusIsupsgServiceGroupAccL1DRCancelpercentage, sonusIsupsgSignalingProfileHopCounter=sonusIsupsgSignalingProfileHopCounter, sonusIsupsgFarEndCircuitLocationIdentification=sonusIsupsgFarEndCircuitLocationIdentification, sonusIsupsgFarEndCircuitStatLocalMaint=sonusIsupsgFarEndCircuitStatLocalMaint, sonusIsupsgSignalingProfileMultiCarrierEnv=sonusIsupsgSignalingProfileMultiCarrierEnv, sonusIsupsgSignalingProfileServActv=sonusIsupsgSignalingProfileServActv, sonusIsupSvcGrpOutOfServiceNotification=sonusIsupSvcGrpOutOfServiceNotification, sonusIsupsgSignalingProfileOrigIscPC=sonusIsupsgSignalingProfileOrigIscPC, sonusIsupsgSignalingProfileSegmentation=sonusIsupsgSignalingProfileSegmentation, sonusIsupsgSignalingProfileConReqInFar=sonusIsupsgSignalingProfileConReqInFar, sonusIsupsgSvcGrpProfileInspectionTime=sonusIsupsgSvcGrpProfileInspectionTime, sonusIsupsgCircuitMode=sonusIsupsgCircuitMode, sonusIsupsgSvcGrpProfileInspectionFreq=sonusIsupsgSvcGrpProfileInspectionFreq, sonusIsupsgSvcGrpProfileAccRespProcess=sonusIsupsgSvcGrpProfileAccRespProcess, sonusIsupsgSignalingProfileFac=sonusIsupsgSignalingProfileFac, sonusIsupsgSignalingProfileLocNum=sonusIsupsgSignalingProfileLocNum, sonusIsupsgSignalingProfileObciAnm=sonusIsupsgSignalingProfileObciAnm, sonusIsupsgSignalingProfileCcRaw=sonusIsupsgSignalingProfileCcRaw, sonusIsupsgSvcGrpProfileContTestFreq=sonusIsupsgSvcGrpProfileContTestFreq, sonusIsupsgServiceGroupStatListIndex=sonusIsupsgServiceGroupStatListIndex, sonusIsupsgServiceGroupRevision=sonusIsupsgServiceGroupRevision, sonusIsupsgSignalingProfileBBRel=sonusIsupsgSignalingProfileBBRel, sonusIsupsgSignalingProfileTransitUnrec=sonusIsupsgSignalingProfileTransitUnrec, sonusIsupsgServiceGroupHuntAlgorithm=sonusIsupsgServiceGroupHuntAlgorithm, sonusIsupsgSignalingProfileConReq=sonusIsupsgSignalingProfileConReq, sonusIsupsgSignalingProfileCqmOnCardSwap=sonusIsupsgSignalingProfileCqmOnCardSwap, sonusIsupsgServiceGroupInspectionFreq=sonusIsupsgServiceGroupInspectionFreq, sonusIsupsgSignalingProfileOlm=sonusIsupsgSignalingProfileOlm, sonusIsupsgSignalingProfileUsr=sonusIsupsgSignalingProfileUsr, sonusIsupsgServiceGroupAccL3ARCancelpercentage=sonusIsupsgServiceGroupAccL3ARCancelpercentage, sonusIsupsgSignalingProfileUserTeleService=sonusIsupsgSignalingProfileUserTeleService, sonusIsupsgFarEndCircuitIdentificationOfficeA=sonusIsupsgFarEndCircuitIdentificationOfficeA, sonusIsupContinuityRecheckFailureNotification=sonusIsupContinuityRecheckFailureNotification, sonusIsupsgSignalingProfileBBIam=sonusIsupsgSignalingProfileBBIam, sonusIsupsgServiceGroupHopCounterValue=sonusIsupsgServiceGroupHopCounterValue, sonusIsupsgSignalingProfileDispInfo=sonusIsupsgSignalingProfileDispInfo, sonusIsupsgSignalingProfileAdminState=sonusIsupsgSignalingProfileAdminState, sonusIsupsgSignalingProfileCfn=sonusIsupsgSignalingProfileCfn, sonusIsupsgSvcGrpProfileAccL1DRCancelpercentage=sonusIsupsgSvcGrpProfileAccL1DRCancelpercentage, sonusIsupsgSignalingProfileUcic=sonusIsupsgSignalingProfileUcic, sonusIsupsgServiceGroupStatNextInspectionTime=sonusIsupsgServiceGroupStatNextInspectionTime, sonusIsupsgSignalingProfileConNumInCpg=sonusIsupsgSignalingProfileConNumInCpg, sonusIsupsgCircuitIdentityCode=sonusIsupsgCircuitIdentityCode, sonusIsupsgSignalingProfileCctGrpBlockFlag=sonusIsupsgSignalingProfileCctGrpBlockFlag, sonusIsupsgSignalingProfileSendTwoGrpMsgs=sonusIsupsgSignalingProfileSendTwoGrpMsgs, sonusIsupsgSignalingProfileSpecialDigits=sonusIsupsgSignalingProfileSpecialDigits, sonusIsupsgSvcGrpProfileTG=sonusIsupsgSvcGrpProfileTG, sonusIsupsgServiceGroupHopCounterState=sonusIsupsgServiceGroupHopCounterState, sonusIsupsgSvcGrpProfile=sonusIsupsgSvcGrpProfile, sonusIsupsgServiceGroup=sonusIsupsgServiceGroup, sonusIsupsgSvcGrpProfileAccL3ARCancelpercentage=sonusIsupsgSvcGrpProfileAccL3ARCancelpercentage, sonusIsupsgServiceGroupCost=sonusIsupsgServiceGroupCost, sonusIsupsgSvcGrpProfileHuntAlgorithm=sonusIsupsgSvcGrpProfileHuntAlgorithm, sonusIsupsgSignalingProfileCallHist=sonusIsupsgSignalingProfileCallHist, sonusIsupsgSignalingProfilePam=sonusIsupsgSignalingProfilePam, sonusIsupsgSignalingProfileLpa=sonusIsupsgSignalingProfileLpa, sonusIsupServiceGroupMIB=sonusIsupServiceGroupMIB, sonusIsupsgSignalingProfileRedNumRist=sonusIsupsgSignalingProfileRedNumRist, sonusIsupsgServiceGroupStatStatus=sonusIsupsgServiceGroupStatStatus, sonusIsupsgSignalingProfileGenAddressREL=sonusIsupsgSignalingProfileGenAddressREL, sonusIsupsgSvcGrpProfileHopCounterState=sonusIsupsgSvcGrpProfileHopCounterState, sonusIsupsgSignalingProfileChgNum=sonusIsupsgSignalingProfileChgNum, sonusIsupsgServiceGroupAdminState=sonusIsupsgServiceGroupAdminState, sonusIsupsgCircuitAdminState=sonusIsupsgCircuitAdminState, sonusIsupsgServiceGroupStatEntry=sonusIsupsgServiceGroupStatEntry, sonusIsupsgServiceGroupRowStatus=sonusIsupsgServiceGroupRowStatus, sonusIsupsgFarEndCircuitStatServiceListIndex=sonusIsupsgFarEndCircuitStatServiceListIndex, sonusIsupsgSignalingProfileNtp=sonusIsupsgSignalingProfileNtp, sonusIsupCircuitOffsets=sonusIsupCircuitOffsets, sonusIsupsgSvcGrpProfileTable=sonusIsupsgSvcGrpProfileTable, sonusIsupsgServiceGroupListIndex=sonusIsupsgServiceGroupListIndex, sonusIsupsgSvcGrpProfileInspectionState=sonusIsupsgSvcGrpProfileInspectionState, sonusIsupsgSignalingProfileOperatorServInfo=sonusIsupsgSignalingProfileOperatorServInfo, sonusIsupsgSignalingProfileAnsi95Grs=sonusIsupsgSignalingProfileAnsi95Grs, sonusIsupHopCounterExhaustedNotification=sonusIsupHopCounterExhaustedNotification, sonusIsupsgSignalingProfileCompat=sonusIsupsgSignalingProfileCompat, sonusIsupsgServiceGroupSwitchType=sonusIsupsgServiceGroupSwitchType, sonusIsupsgSignalingProfileRedCount=sonusIsupsgSignalingProfileRedCount, sonusIsupsgSignalingProfileJurisdiction=sonusIsupsgSignalingProfileJurisdiction, sonusIsupsgSignalingProfileInfoInd=sonusIsupsgSignalingProfileInfoInd, sonusIsupsgSignalingProfileAccessDel=sonusIsupsgSignalingProfileAccessDel, sonusIsupsgServiceGroupTonePackageName=sonusIsupsgServiceGroupTonePackageName, sonusIsupsgSvcGrpProfileSignalingProfileName=sonusIsupsgSvcGrpProfileSignalingProfileName, sonusIsupsgCircuitStatServiceListIndex=sonusIsupsgCircuitStatServiceListIndex, sonusIsupsgSignalingProfile=sonusIsupsgSignalingProfile, sonusIsupsgSignalingProfileFOT=sonusIsupsgSignalingProfileFOT, sonusIsupCircuitTimerExpired=sonusIsupCircuitTimerExpired, sonusIsupsgFarEndCircuitGroupCarrier=sonusIsupsgFarEndCircuitGroupCarrier, sonusIsupsgSvcGrpProfileAccSendACL=sonusIsupsgSvcGrpProfileAccSendACL, sonusIsupsgSignalingProfileCallDivTreat=sonusIsupsgSignalingProfileCallDivTreat, sonusIsupsgSignalingProfileUUIndAcm=sonusIsupsgSignalingProfileUUIndAcm, sonusIsupsgServiceGroupStatLastInspectionTime=sonusIsupsgServiceGroupStatLastInspectionTime, sonusIsupsgSvcGrpProfileHopCounterValue=sonusIsupsgSvcGrpProfileHopCounterValue, sonusIsupsgSignalingProfileRemoteOp=sonusIsupsgSignalingProfileRemoteOp, sonusIsupsgFarEndCircuitAdminTable=sonusIsupsgFarEndCircuitAdminTable, sonusIsupsgServiceGroupInspectionTime=sonusIsupsgServiceGroupInspectionTime, sonusIsupsgCircuitServiceName=sonusIsupsgCircuitServiceName, sonusIsupsgCircuitProfileName=sonusIsupsgCircuitProfileName, sonusIsupsgServiceGroupAccL2DRCancelpercentage=sonusIsupsgServiceGroupAccL2DRCancelpercentage, sonusIsupsgSignalingProfileCqmCqr=sonusIsupsgSignalingProfileCqmCqr, sonusIsupsgSignalingProfileCarrierSelection=sonusIsupsgSignalingProfileCarrierSelection, sonusIsupsgSignalingProfileTable=sonusIsupsgSignalingProfileTable)
mibBuilder.exportSymbols("SONUS-ISUP-SERVICE-GROUP-MIB", sonusIsupsgSignalingProfileForwardGVNS=sonusIsupsgSignalingProfileForwardGVNS, sonusIsupsgSignalingProfileEchoCntrlInIam=sonusIsupsgSignalingProfileEchoCntrlInIam, sonusIsupsgSignalingProfilePropDelayValue=sonusIsupsgSignalingProfilePropDelayValue, sonusIsupsgFarEndCircuitAdminEntry=sonusIsupsgFarEndCircuitAdminEntry, sonusIsupsgServiceGroupName=sonusIsupsgServiceGroupName, sonusIsupsgFarEndCircuitIdentificationTrunkNumber=sonusIsupsgFarEndCircuitIdentificationTrunkNumber, sonusIsupsgSvcGrpProfileAdminState=sonusIsupsgSvcGrpProfileAdminState, sonusIsupsgSvcGrpProfileAccL1ARCancelpercentage=sonusIsupsgSvcGrpProfileAccL1ARCancelpercentage, sonusIsupsgSignalingProfileAwaitDigits=sonusIsupsgSignalingProfileAwaitDigits, sonusIsupsgServiceGroupInspectionState=sonusIsupsgServiceGroupInspectionState, sonusIsupsgCircuitStatIdentityCode=sonusIsupsgCircuitStatIdentityCode, sonusIsupsgSignalingProfileCircAssMap=sonusIsupsgSignalingProfileCircAssMap, sonusIsupTrunkGrpName=sonusIsupTrunkGrpName, sonusIsupRelWithExchangeRoutingErrorNotification=sonusIsupRelWithExchangeRoutingErrorNotification, sonusIsupsgSignalingProfilePropDelay=sonusIsupsgSignalingProfilePropDelay, sonusIsupsgSignalingProfileInrInf=sonusIsupsgSignalingProfileInrInf, sonusIsupsgSvcGrpProfileListIndex=sonusIsupsgSvcGrpProfileListIndex, sonusIsupsgCircuitStatEntry=sonusIsupsgCircuitStatEntry, sonusIsupsgServiceGroupStatTable=sonusIsupsgServiceGroupStatTable, sonusIsupsgSvcGrpProfileExchangeType=sonusIsupsgSvcGrpProfileExchangeType, sonusIsupsgSignalingProfileCCSS=sonusIsupsgSignalingProfileCCSS, sonusIsupsgSignalingProfileEgressService=sonusIsupsgSignalingProfileEgressService, sonusIsupsgServiceGroupRemotePointCode=sonusIsupsgServiceGroupRemotePointCode, sonusIsupsgSignalingProfileUuindAnm=sonusIsupsgSignalingProfileUuindAnm, sonusIsupsgSignalingProfileFacility=sonusIsupsgSignalingProfileFacility, sonusIsupsgFarEndCircuitStatTable=sonusIsupsgFarEndCircuitStatTable, sonusIsupsgServiceGroupProfileName=sonusIsupsgServiceGroupProfileName, sonusIsupsgServiceGroupContTestFreq=sonusIsupsgServiceGroupContTestFreq, sonusIsupsgSignalingProfileTmrPrime=sonusIsupsgSignalingProfileTmrPrime, sonusIsupsgSvcGrpProfileAccL2DRCancelpercentage=sonusIsupsgSvcGrpProfileAccL2DRCancelpercentage, sonusIsupsgSignalingProfileAPM=sonusIsupsgSignalingProfileAPM)
