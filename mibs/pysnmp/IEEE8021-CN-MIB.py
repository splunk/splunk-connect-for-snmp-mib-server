#
# PySNMP MIB module IEEE8021-CN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IEEE8021-CN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:40:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
IEEE8021PriorityValue, IEEE8021PbbComponentIdentifier, ieee802dot1mibs = mibBuilder.importSymbols("IEEE8021-TC-MIB", "IEEE8021PriorityValue", "IEEE8021PbbComponentIdentifier", "ieee802dot1mibs")
InterfaceIndex, ifGeneralInformationGroup = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifGeneralInformationGroup")
LldpV2DestAddressTableIndex, = mibBuilder.importSymbols("LLDP-V2-TC-MIB", "LldpV2DestAddressTableIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
systemGroup, = mibBuilder.importSymbols("SNMPv2-MIB", "systemGroup")
iso, TimeTicks, Gauge32, ObjectIdentity, MibIdentifier, ModuleIdentity, Integer32, NotificationType, IpAddress, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Gauge32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Integer32", "NotificationType", "IpAddress", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64")
DisplayString, RowStatus, TruthValue, TimeInterval, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "TimeInterval", "TextualConvention", "MacAddress")
ieee8021CnMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 18))
ieee8021CnMib.setRevisions(('2014-12-15 00:00', '2011-02-27 00:00', '2009-12-18 00:00',))
if mibBuilder.loadTexts: ieee8021CnMib.setLastUpdated('201412150000Z')
if mibBuilder.loadTexts: ieee8021CnMib.setOrganization('IEEE 802.1 Working Group')
ieee8021CnMIBObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 18, 1))
ieee8021CnConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 18, 2))
class Ieee8021CnControlChoice(TextualConvention, Integer32):
    reference = '32.3.1, 32.4.1, Table 32-2'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("cpcAdmin", 1), ("cpcAuto", 2), ("cpcComp", 3))

class Ieee8021CnDefenseMode(TextualConvention, Integer32):
    reference = '32.1.1, 32.3.4, 32.4.2, 32.4.3, Table 32-2'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("cptDisabled", 1), ("cptInterior", 2), ("cptInteriorReady", 3), ("cptEdge", 4))

class Ieee8021CnLldpChoice(TextualConvention, Integer32):
    reference = '32.3.6, 32.4.4, Table 32-1'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("cnlNone", 1), ("cnlAdmin", 2), ("cnlComponent", 3))

ieee8021CnGlobalTable = MibTable((1, 3, 111, 2, 802, 1, 1, 18, 1, 1), )
if mibBuilder.loadTexts: ieee8021CnGlobalTable.setStatus('current')
ieee8021CnGlobalEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 18, 1, 1, 1), ).setIndexNames((0, "IEEE8021-CN-MIB", "ieee8021CnGlobalComponentId"))
if mibBuilder.loadTexts: ieee8021CnGlobalEntry.setStatus('current')
ieee8021CnGlobalComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021CnGlobalComponentId.setStatus('current')
ieee8021CnGlobalMasterEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnGlobalMasterEnable.setStatus('current')
ieee8021CnGlobalCnmTransmitPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 1, 1, 3), IEEE8021PriorityValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnGlobalCnmTransmitPriority.setStatus('current')
ieee8021CnGlobalDiscardedFrames = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 1, 1, 4), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnGlobalDiscardedFrames.setStatus('current')
ieee8021CnErroredPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 18, 1, 2), )
if mibBuilder.loadTexts: ieee8021CnErroredPortTable.setStatus('current')
ieee8021CnErroredPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 18, 1, 2, 1), ).setIndexNames((0, "IEEE8021-CN-MIB", "ieee8021CnEpComponentId"), (0, "IEEE8021-CN-MIB", "ieee8021CnEpPriority"), (0, "IEEE8021-CN-MIB", "ieee8021CnEpIfIndex"))
if mibBuilder.loadTexts: ieee8021CnErroredPortEntry.setStatus('current')
ieee8021CnEpComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 2, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021CnEpComponentId.setStatus('current')
ieee8021CnEpPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 2, 1, 2), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021CnEpPriority.setStatus('current')
ieee8021CnEpIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnEpIfIndex.setStatus('current')
ieee8021CnCompntPriTable = MibTable((1, 3, 111, 2, 802, 1, 1, 18, 1, 3), )
if mibBuilder.loadTexts: ieee8021CnCompntPriTable.setStatus('current')
ieee8021CnCompntPriEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1), ).setIndexNames((0, "IEEE8021-CN-MIB", "ieee8021CnComPriComponentId"), (0, "IEEE8021-CN-MIB", "ieee8021CnComPriPriority"))
if mibBuilder.loadTexts: ieee8021CnCompntPriEntry.setStatus('current')
ieee8021CnComPriComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021CnComPriComponentId.setStatus('current')
ieee8021CnComPriPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 2), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021CnComPriPriority.setStatus('current')
ieee8021CnComPriDefModeChoice = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 3), Ieee8021CnControlChoice().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cpcAdmin", 1), ("cpcAuto", 2))).clone('cpcAuto')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021CnComPriDefModeChoice.setStatus('current')
ieee8021CnComPriAlternatePriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 4), IEEE8021PriorityValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021CnComPriAlternatePriority.setStatus('current')
ieee8021CnComPriAutoAltPri = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 5), IEEE8021PriorityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnComPriAutoAltPri.setStatus('current')
ieee8021CnComPriAdminDefenseMode = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 6), Ieee8021CnDefenseMode().clone('cptInterior')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021CnComPriAdminDefenseMode.setStatus('current')
ieee8021CnComPriCreation = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cncpAutoEnable", 1), ("cncpAutoDisable", 2))).clone('cncpAutoEnable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021CnComPriCreation.setStatus('current')
ieee8021CnComPriLldpInstanceChoice = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 8), Ieee8021CnLldpChoice().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cnlNone", 1), ("cnlAdmin", 2))).clone('cnlAdmin')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021CnComPriLldpInstanceChoice.setStatus('current')
ieee8021CnComPriLldpInstanceSelector = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 9), LldpV2DestAddressTableIndex().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021CnComPriLldpInstanceSelector.setStatus('current')
ieee8021CnComPriRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021CnComPriRowStatus.setStatus('current')
ieee8021CnPortPriTable = MibTable((1, 3, 111, 2, 802, 1, 1, 18, 1, 4), )
if mibBuilder.loadTexts: ieee8021CnPortPriTable.setStatus('current')
ieee8021CnPortPriEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1), ).setIndexNames((0, "IEEE8021-CN-MIB", "ieee8021CnPortPriComponentId"), (0, "IEEE8021-CN-MIB", "ieee8021CnPortPriority"), (0, "IEEE8021-CN-MIB", "ieee8021CnPortPriIfIndex"))
if mibBuilder.loadTexts: ieee8021CnPortPriEntry.setStatus('current')
ieee8021CnPortPriComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021CnPortPriComponentId.setStatus('current')
ieee8021CnPortPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 2), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021CnPortPriority.setStatus('current')
ieee8021CnPortPriIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: ieee8021CnPortPriIfIndex.setStatus('current')
ieee8021CnPortPriDefModeChoice = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 4), Ieee8021CnControlChoice().clone('cpcComp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnPortPriDefModeChoice.setStatus('current')
ieee8021CnPortPriAdminDefenseMode = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 5), Ieee8021CnDefenseMode().clone('cptDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnPortPriAdminDefenseMode.setStatus('current')
ieee8021CnPortPriAutoDefenseMode = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 6), Ieee8021CnDefenseMode().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("cptInterior", 2), ("cptInteriorReady", 3), ("cptEdge", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnPortPriAutoDefenseMode.setStatus('current')
ieee8021CnPortPriLldpInstanceChoice = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 7), Ieee8021CnLldpChoice().clone('cnlComponent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnPortPriLldpInstanceChoice.setStatus('current')
ieee8021CnPortPriLldpInstanceSelector = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 8), LldpV2DestAddressTableIndex().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnPortPriLldpInstanceSelector.setStatus('current')
ieee8021CnPortPriAlternatePriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 4, 1, 9), IEEE8021PriorityValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnPortPriAlternatePriority.setStatus('current')
ieee8021CnCpTable = MibTable((1, 3, 111, 2, 802, 1, 1, 18, 1, 5), )
if mibBuilder.loadTexts: ieee8021CnCpTable.setStatus('current')
ieee8021CnCpEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1), ).setIndexNames((0, "IEEE8021-CN-MIB", "ieee8021CnCpComponentId"), (0, "IEEE8021-CN-MIB", "ieee8021CnCpIfIndex"), (0, "IEEE8021-CN-MIB", "ieee8021CnCpIndex"))
if mibBuilder.loadTexts: ieee8021CnCpEntry.setStatus('current')
ieee8021CnCpComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021CnCpComponentId.setStatus('current')
ieee8021CnCpIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: ieee8021CnCpIfIndex.setStatus('current')
ieee8021CnCpIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: ieee8021CnCpIndex.setStatus('current')
ieee8021CnCpPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 4), IEEE8021PriorityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpPriority.setStatus('current')
ieee8021CnCpMacAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpMacAddress.setStatus('current')
ieee8021CnCpIdentifier = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpIdentifier.setStatus('current')
ieee8021CnCpQueueSizeSetPoint = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 4294967295)).clone(26000)).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnCpQueueSizeSetPoint.setStatus('current')
ieee8021CnCpFeedbackWeight = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnCpFeedbackWeight.setStatus('current')
ieee8021CnCpMinSampleBase = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10000, 4294967295)).clone(150000)).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnCpMinSampleBase.setStatus('current')
ieee8021CnCpDiscardedFrames = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 10), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpDiscardedFrames.setStatus('current')
ieee8021CnCpTransmittedFrames = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 11), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpTransmittedFrames.setStatus('current')
ieee8021CnCpTransmittedCnms = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 12), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpTransmittedCnms.setStatus('current')
ieee8021CnCpMinHeaderOctets = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 5, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnCpMinHeaderOctets.setStatus('current')
ieee8021CnCpidToInterfaceTable = MibTable((1, 3, 111, 2, 802, 1, 1, 18, 1, 6), )
if mibBuilder.loadTexts: ieee8021CnCpidToInterfaceTable.setStatus('current')
ieee8021CnCpidToInterfaceEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 18, 1, 6, 1), ).setIndexNames((0, "IEEE8021-CN-MIB", "ieee8021CnCpidToIfCpid"))
if mibBuilder.loadTexts: ieee8021CnCpidToInterfaceEntry.setStatus('current')
ieee8021CnCpidToIfCpid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: ieee8021CnCpidToIfCpid.setStatus('current')
ieee8021CnCpidToIfComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 6, 1, 2), IEEE8021PbbComponentIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpidToIfComponentId.setStatus('current')
ieee8021CnCpidToIfIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 6, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpidToIfIfIndex.setStatus('current')
ieee8021CnCpidToIfCpIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnCpidToIfCpIndex.setStatus('current')
ieee8021CnRpPortPriTable = MibTable((1, 3, 111, 2, 802, 1, 1, 18, 1, 7), )
if mibBuilder.loadTexts: ieee8021CnRpPortPriTable.setStatus('current')
ieee8021CnRpPortPriEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 18, 1, 7, 1), ).setIndexNames((0, "IEEE8021-CN-MIB", "ieee8021CnRpPortPriComponentId"), (0, "IEEE8021-CN-MIB", "ieee8021CnRpPortPriPriority"), (0, "IEEE8021-CN-MIB", "ieee8021CnRpPortPriIfIndex"))
if mibBuilder.loadTexts: ieee8021CnRpPortPriEntry.setStatus('current')
ieee8021CnRpPortPriComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 7, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021CnRpPortPriComponentId.setStatus('current')
ieee8021CnRpPortPriPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 7, 1, 2), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021CnRpPortPriPriority.setStatus('current')
ieee8021CnRpPortPriIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 7, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: ieee8021CnRpPortPriIfIndex.setStatus('current')
ieee8021CnRpPortPriMaxRps = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpPortPriMaxRps.setStatus('current')
ieee8021CnRpPortPriCreatedRps = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnRpPortPriCreatedRps.setStatus('current')
ieee8021CnRpPortPriCentiseconds = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 7, 1, 6), Counter64()).setUnits('centiseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021CnRpPortPriCentiseconds.setStatus('current')
ieee8021CnRpGroupTable = MibTable((1, 3, 111, 2, 802, 1, 1, 18, 1, 8), )
if mibBuilder.loadTexts: ieee8021CnRpGroupTable.setStatus('current')
ieee8021CnRpGroupEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1), ).setIndexNames((0, "IEEE8021-CN-MIB", "ieee8021CnRpgComponentId"), (0, "IEEE8021-CN-MIB", "ieee8021CnRpgPriority"), (0, "IEEE8021-CN-MIB", "ieee8021CnRpgIfIndex"), (0, "IEEE8021-CN-MIB", "ieee8021CnRpgIdentifier"))
if mibBuilder.loadTexts: ieee8021CnRpGroupEntry.setStatus('current')
ieee8021CnRpgComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021CnRpgComponentId.setStatus('current')
ieee8021CnRpgPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 2), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021CnRpgPriority.setStatus('current')
ieee8021CnRpgIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: ieee8021CnRpgIfIndex.setStatus('current')
ieee8021CnRpgIdentifier = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: ieee8021CnRpgIdentifier.setStatus('current')
ieee8021CnRpgEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgEnable.setStatus('current')
ieee8021CnRpgTimeReset = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 6), TimeInterval().clone(15)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgTimeReset.setStatus('current')
ieee8021CnRpgByteReset = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 7), Unsigned32().clone(150000)).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgByteReset.setStatus('current')
ieee8021CnRpgThreshold = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 8), Unsigned32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgThreshold.setStatus('current')
ieee8021CnRpgMaxRate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 9), Unsigned32()).setUnits('Mbit/s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgMaxRate.setStatus('current')
ieee8021CnRpgAiRate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 10), Unsigned32().clone(5)).setUnits('Mbit/s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgAiRate.setStatus('current')
ieee8021CnRpgHaiRate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 11), Unsigned32().clone(50)).setUnits('Mbit/s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgHaiRate.setStatus('current')
ieee8021CnRpgGd = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 12), Integer32().clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgGd.setStatus('current')
ieee8021CnRpgMinDecFac = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgMinDecFac.setStatus('current')
ieee8021CnRpgMinRate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 18, 1, 8, 1, 14), Unsigned32().clone(5)).setUnits('Mbit/s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021CnRpgMinRate.setStatus('current')
ieee8021CnCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 18, 2, 1))
ieee8021CnGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 18, 2, 2))
ieee8021CnGlobalReqdGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 1)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnGlobalMasterEnable"), ("IEEE8021-CN-MIB", "ieee8021CnComPriLldpInstanceChoice"), ("IEEE8021-CN-MIB", "ieee8021CnComPriLldpInstanceSelector"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnGlobalReqdGroup = ieee8021CnGlobalReqdGroup.setStatus('current')
ieee8021CnCpGlobalGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 2)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnGlobalCnmTransmitPriority"), ("IEEE8021-CN-MIB", "ieee8021CnGlobalDiscardedFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnCpGlobalGroup = ieee8021CnCpGlobalGroup.setStatus('current')
ieee8021CnCpidTranslateGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 3)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnCpidToIfComponentId"), ("IEEE8021-CN-MIB", "ieee8021CnCpidToIfIfIndex"), ("IEEE8021-CN-MIB", "ieee8021CnCpidToIfCpIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnCpidTranslateGroup = ieee8021CnCpidTranslateGroup.setStatus('current')
ieee8021CnEplGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 4)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnEpIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnEplGroup = ieee8021CnEplGroup.setStatus('current')
ieee8021CnComPriGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 5)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnComPriDefModeChoice"), ("IEEE8021-CN-MIB", "ieee8021CnComPriAdminDefenseMode"), ("IEEE8021-CN-MIB", "ieee8021CnComPriCreation"), ("IEEE8021-CN-MIB", "ieee8021CnComPriRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnComPriGroup = ieee8021CnComPriGroup.setStatus('current')
ieee8021CnCpPriGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 6)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnComPriAlternatePriority"), ("IEEE8021-CN-MIB", "ieee8021CnComPriAutoAltPri"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnCpPriGroup = ieee8021CnCpPriGroup.setStatus('current')
ieee8021CnGlobalPriPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 7)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnPortPriDefModeChoice"), ("IEEE8021-CN-MIB", "ieee8021CnPortPriAdminDefenseMode"), ("IEEE8021-CN-MIB", "ieee8021CnPortPriAutoDefenseMode"), ("IEEE8021-CN-MIB", "ieee8021CnPortPriLldpInstanceChoice"), ("IEEE8021-CN-MIB", "ieee8021CnPortPriLldpInstanceSelector"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnGlobalPriPortGroup = ieee8021CnGlobalPriPortGroup.setStatus('current')
ieee8021CnCpPriPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 8)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnPortPriAlternatePriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnCpPriPortGroup = ieee8021CnCpPriPortGroup.setStatus('current')
ieee8021CnCpGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 9)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnCpPriority"), ("IEEE8021-CN-MIB", "ieee8021CnCpMacAddress"), ("IEEE8021-CN-MIB", "ieee8021CnCpIdentifier"), ("IEEE8021-CN-MIB", "ieee8021CnCpQueueSizeSetPoint"), ("IEEE8021-CN-MIB", "ieee8021CnCpFeedbackWeight"), ("IEEE8021-CN-MIB", "ieee8021CnCpMinSampleBase"), ("IEEE8021-CN-MIB", "ieee8021CnCpDiscardedFrames"), ("IEEE8021-CN-MIB", "ieee8021CnCpTransmittedFrames"), ("IEEE8021-CN-MIB", "ieee8021CnCpTransmittedCnms"), ("IEEE8021-CN-MIB", "ieee8021CnCpMinHeaderOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnCpGroup = ieee8021CnCpGroup.setStatus('current')
ieee8021CnRpppGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 10)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnRpPortPriMaxRps"), ("IEEE8021-CN-MIB", "ieee8021CnRpPortPriCreatedRps"), ("IEEE8021-CN-MIB", "ieee8021CnRpPortPriCentiseconds"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnRpppGroup = ieee8021CnRpppGroup.setStatus('current')
ieee8021CnRpGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 18, 2, 2, 11)).setObjects(("IEEE8021-CN-MIB", "ieee8021CnRpgEnable"), ("IEEE8021-CN-MIB", "ieee8021CnRpgTimeReset"), ("IEEE8021-CN-MIB", "ieee8021CnRpgByteReset"), ("IEEE8021-CN-MIB", "ieee8021CnRpgThreshold"), ("IEEE8021-CN-MIB", "ieee8021CnRpgMaxRate"), ("IEEE8021-CN-MIB", "ieee8021CnRpgAiRate"), ("IEEE8021-CN-MIB", "ieee8021CnRpgHaiRate"), ("IEEE8021-CN-MIB", "ieee8021CnRpgGd"), ("IEEE8021-CN-MIB", "ieee8021CnRpgMinDecFac"), ("IEEE8021-CN-MIB", "ieee8021CnRpgMinRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnRpGroup = ieee8021CnRpGroup.setStatus('current')
ieee8021CnBridgeCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 18, 2, 1, 1)).setObjects(("SNMPv2-MIB", "systemGroup"), ("IF-MIB", "ifGeneralInformationGroup"), ("IEEE8021-CN-MIB", "ieee8021CnGlobalReqdGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpGlobalGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpidTranslateGroup"), ("IEEE8021-CN-MIB", "ieee8021CnEplGroup"), ("IEEE8021-CN-MIB", "ieee8021CnComPriGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpPriGroup"), ("IEEE8021-CN-MIB", "ieee8021CnGlobalPriPortGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpPriPortGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnBridgeCompliance = ieee8021CnBridgeCompliance.setStatus('current')
ieee8021CnStationCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 18, 2, 1, 2)).setObjects(("SNMPv2-MIB", "systemGroup"), ("IF-MIB", "ifGeneralInformationGroup"), ("IEEE8021-CN-MIB", "ieee8021CnGlobalReqdGroup"), ("IEEE8021-CN-MIB", "ieee8021CnComPriGroup"), ("IEEE8021-CN-MIB", "ieee8021CnGlobalPriPortGroup"), ("IEEE8021-CN-MIB", "ieee8021CnRpppGroup"), ("IEEE8021-CN-MIB", "ieee8021CnRpGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpGlobalGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpidTranslateGroup"), ("IEEE8021-CN-MIB", "ieee8021CnEplGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpPriGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpPriPortGroup"), ("IEEE8021-CN-MIB", "ieee8021CnCpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021CnStationCompliance = ieee8021CnStationCompliance.setStatus('current')
mibBuilder.exportSymbols("IEEE8021-CN-MIB", ieee8021CnCpGlobalGroup=ieee8021CnCpGlobalGroup, ieee8021CnCpMinSampleBase=ieee8021CnCpMinSampleBase, ieee8021CnRpgComponentId=ieee8021CnRpgComponentId, ieee8021CnRpGroup=ieee8021CnRpGroup, ieee8021CnComPriRowStatus=ieee8021CnComPriRowStatus, ieee8021CnCpPriGroup=ieee8021CnCpPriGroup, ieee8021CnGlobalPriPortGroup=ieee8021CnGlobalPriPortGroup, ieee8021CnCompntPriEntry=ieee8021CnCompntPriEntry, ieee8021CnCpComponentId=ieee8021CnCpComponentId, ieee8021CnCpTransmittedCnms=ieee8021CnCpTransmittedCnms, ieee8021CnRpPortPriComponentId=ieee8021CnRpPortPriComponentId, ieee8021CnEpComponentId=ieee8021CnEpComponentId, ieee8021CnCpMinHeaderOctets=ieee8021CnCpMinHeaderOctets, ieee8021CnRpgIdentifier=ieee8021CnRpgIdentifier, ieee8021CnComPriDefModeChoice=ieee8021CnComPriDefModeChoice, ieee8021CnRpgGd=ieee8021CnRpgGd, ieee8021CnRpPortPriCentiseconds=ieee8021CnRpPortPriCentiseconds, ieee8021CnRpPortPriEntry=ieee8021CnRpPortPriEntry, ieee8021CnComPriCreation=ieee8021CnComPriCreation, ieee8021CnRpgTimeReset=ieee8021CnRpgTimeReset, ieee8021CnErroredPortTable=ieee8021CnErroredPortTable, ieee8021CnRpgIfIndex=ieee8021CnRpgIfIndex, ieee8021CnPortPriLldpInstanceChoice=ieee8021CnPortPriLldpInstanceChoice, ieee8021CnGlobalCnmTransmitPriority=ieee8021CnGlobalCnmTransmitPriority, ieee8021CnMIBObjects=ieee8021CnMIBObjects, ieee8021CnGlobalMasterEnable=ieee8021CnGlobalMasterEnable, ieee8021CnPortPriAdminDefenseMode=ieee8021CnPortPriAdminDefenseMode, ieee8021CnRpPortPriMaxRps=ieee8021CnRpPortPriMaxRps, ieee8021CnComPriAutoAltPri=ieee8021CnComPriAutoAltPri, ieee8021CnPortPriEntry=ieee8021CnPortPriEntry, ieee8021CnCpQueueSizeSetPoint=ieee8021CnCpQueueSizeSetPoint, PYSNMP_MODULE_ID=ieee8021CnMib, ieee8021CnPortPriLldpInstanceSelector=ieee8021CnPortPriLldpInstanceSelector, ieee8021CnRpgThreshold=ieee8021CnRpgThreshold, ieee8021CnErroredPortEntry=ieee8021CnErroredPortEntry, Ieee8021CnControlChoice=Ieee8021CnControlChoice, ieee8021CnRpppGroup=ieee8021CnRpppGroup, ieee8021CnEplGroup=ieee8021CnEplGroup, ieee8021CnComPriLldpInstanceChoice=ieee8021CnComPriLldpInstanceChoice, ieee8021CnCpMacAddress=ieee8021CnCpMacAddress, ieee8021CnCompntPriTable=ieee8021CnCompntPriTable, ieee8021CnMib=ieee8021CnMib, ieee8021CnCpidToIfComponentId=ieee8021CnCpidToIfComponentId, ieee8021CnRpgMinDecFac=ieee8021CnRpgMinDecFac, ieee8021CnCpEntry=ieee8021CnCpEntry, ieee8021CnPortPriAutoDefenseMode=ieee8021CnPortPriAutoDefenseMode, ieee8021CnCpPriority=ieee8021CnCpPriority, ieee8021CnEpIfIndex=ieee8021CnEpIfIndex, ieee8021CnCompliances=ieee8021CnCompliances, ieee8021CnRpPortPriTable=ieee8021CnRpPortPriTable, ieee8021CnCpIfIndex=ieee8021CnCpIfIndex, ieee8021CnComPriComponentId=ieee8021CnComPriComponentId, ieee8021CnComPriAdminDefenseMode=ieee8021CnComPriAdminDefenseMode, ieee8021CnPortPriTable=ieee8021CnPortPriTable, ieee8021CnPortPriDefModeChoice=ieee8021CnPortPriDefModeChoice, ieee8021CnRpgAiRate=ieee8021CnRpgAiRate, ieee8021CnRpgMinRate=ieee8021CnRpgMinRate, ieee8021CnPortPriComponentId=ieee8021CnPortPriComponentId, ieee8021CnConformance=ieee8021CnConformance, ieee8021CnGlobalEntry=ieee8021CnGlobalEntry, ieee8021CnRpGroupTable=ieee8021CnRpGroupTable, ieee8021CnCpidToIfIfIndex=ieee8021CnCpidToIfIfIndex, ieee8021CnRpPortPriIfIndex=ieee8021CnRpPortPriIfIndex, ieee8021CnGlobalReqdGroup=ieee8021CnGlobalReqdGroup, ieee8021CnCpidTranslateGroup=ieee8021CnCpidTranslateGroup, ieee8021CnBridgeCompliance=ieee8021CnBridgeCompliance, ieee8021CnCpTable=ieee8021CnCpTable, ieee8021CnRpgHaiRate=ieee8021CnRpgHaiRate, ieee8021CnRpgEnable=ieee8021CnRpgEnable, ieee8021CnRpGroupEntry=ieee8021CnRpGroupEntry, ieee8021CnRpPortPriCreatedRps=ieee8021CnRpPortPriCreatedRps, ieee8021CnRpgByteReset=ieee8021CnRpgByteReset, ieee8021CnPortPriIfIndex=ieee8021CnPortPriIfIndex, ieee8021CnGroups=ieee8021CnGroups, Ieee8021CnDefenseMode=Ieee8021CnDefenseMode, ieee8021CnGlobalComponentId=ieee8021CnGlobalComponentId, ieee8021CnPortPriAlternatePriority=ieee8021CnPortPriAlternatePriority, ieee8021CnEpPriority=ieee8021CnEpPriority, ieee8021CnComPriLldpInstanceSelector=ieee8021CnComPriLldpInstanceSelector, ieee8021CnComPriGroup=ieee8021CnComPriGroup, ieee8021CnCpPriPortGroup=ieee8021CnCpPriPortGroup, ieee8021CnRpgMaxRate=ieee8021CnRpgMaxRate, ieee8021CnGlobalDiscardedFrames=ieee8021CnGlobalDiscardedFrames, ieee8021CnComPriAlternatePriority=ieee8021CnComPriAlternatePriority, ieee8021CnCpidToInterfaceTable=ieee8021CnCpidToInterfaceTable, ieee8021CnCpidToInterfaceEntry=ieee8021CnCpidToInterfaceEntry, ieee8021CnCpidToIfCpid=ieee8021CnCpidToIfCpid, ieee8021CnCpidToIfCpIndex=ieee8021CnCpidToIfCpIndex, ieee8021CnRpgPriority=ieee8021CnRpgPriority, ieee8021CnCpGroup=ieee8021CnCpGroup, Ieee8021CnLldpChoice=Ieee8021CnLldpChoice, ieee8021CnCpIdentifier=ieee8021CnCpIdentifier, ieee8021CnPortPriority=ieee8021CnPortPriority, ieee8021CnStationCompliance=ieee8021CnStationCompliance, ieee8021CnCpFeedbackWeight=ieee8021CnCpFeedbackWeight, ieee8021CnGlobalTable=ieee8021CnGlobalTable, ieee8021CnComPriPriority=ieee8021CnComPriPriority, ieee8021CnCpTransmittedFrames=ieee8021CnCpTransmittedFrames, ieee8021CnRpPortPriPriority=ieee8021CnRpPortPriPriority, ieee8021CnCpIndex=ieee8021CnCpIndex, ieee8021CnCpDiscardedFrames=ieee8021CnCpDiscardedFrames)
