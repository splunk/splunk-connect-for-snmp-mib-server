#
# PySNMP MIB module RADLAN-OSPFV3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-OSPFV3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:39:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddress, InetAddressPrefixLength, InetAddressIPv6, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressIPv6", "InetAddressType")
TOSType, AreaID, OspfAuthenticationType, Status, PositiveInteger, UpToMaxAge, HelloRange, BigMetric, DesignatedRouterPriority, RouterID, Metric = mibBuilder.importSymbols("OSPF-MIB", "TOSType", "AreaID", "OspfAuthenticationType", "Status", "PositiveInteger", "UpToMaxAge", "HelloRange", "BigMetric", "DesignatedRouterPriority", "RouterID", "Metric")
Ospfv3LsIdTC, Ospfv3RouterIdTC, Ospfv3LsaSequenceTC, Ospfv3LsaAgeTC, Ospfv3DeadIntervalRangeTC, Ospfv3IfInstIdTC, Ospfv3AreaIdTC, Ospfv3UpToRefreshIntervalTC = mibBuilder.importSymbols("OSPFV3-MIB", "Ospfv3LsIdTC", "Ospfv3RouterIdTC", "Ospfv3LsaSequenceTC", "Ospfv3LsaAgeTC", "Ospfv3DeadIntervalRangeTC", "Ospfv3IfInstIdTC", "Ospfv3AreaIdTC", "Ospfv3UpToRefreshIntervalTC")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
RlOspfRouterIdType, RlOspfRestartHelperStatus, RlOspfFastHelloMultiplierRange, RlOspfRestartExitReason, RlOspfProcessID = mibBuilder.importSymbols("RADLAN-OSPF-MIB", "RlOspfRouterIdType", "RlOspfRestartHelperStatus", "RlOspfFastHelloMultiplierRange", "RlOspfRestartExitReason", "RlOspfProcessID")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Counter32, Unsigned32, iso, ModuleIdentity, IpAddress, TimeTicks, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, NotificationType, ObjectIdentity, mib_2 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "Unsigned32", "iso", "ModuleIdentity", "IpAddress", "TimeTicks", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "NotificationType", "ObjectIdentity", "mib-2")
TruthValue, RowStatus, TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "TimeStamp", "DisplayString")
rlOspfv3 = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 216))
rlOspfv3.setRevisions(('2011-05-04 17:00',))
if mibBuilder.loadTexts: rlOspfv3.setLastUpdated('201105041700Z')
if mibBuilder.loadTexts: rlOspfv3.setOrganization('Radlan Computer Communications Ltd.')
class RlRouterID(TextualConvention, Unsigned32):
    reference = 'OSPF for IPv6, Appendix C.1, Global Parameters'
    status = 'current'
    displayHint = 'd'

class RlLsID(TextualConvention, Unsigned32):
    reference = 'OSPF Version 2, Section 12.1.4, Link State ID'
    status = 'current'
    displayHint = 'd'

class RlOspfv3FastHelloMultiplierRange(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(3, 20)

class RlOspfv3UpToRefreshInterval(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 1800)

class RlOspfv3RestartHelperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("notHelping", 1), ("helping", 2))

class RlOspfv3RestartExitReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 1), ("inProgress", 2), ("completed", 3), ("timedOut", 4), ("topologyChanged", 5))

class RlOspfv3UpToRefreshIntervalTC(TextualConvention, Unsigned32):
    reference = 'OSPF Version 2, Appendix B, Architectural Constants'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

rlOspfv3Instance = MibScalar((1, 3, 6, 1, 4, 1, 89, 216, 1), RlOspfProcessID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3Instance.setStatus('current')
rlOspfv3GeneralGroupTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 2), )
if mibBuilder.loadTexts: rlOspfv3GeneralGroupTable.setStatus('current')
rlOspfv3GeneralGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 2, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3ProcessId"))
if mibBuilder.loadTexts: rlOspfv3GeneralGroupEntry.setStatus('current')
rlOspfv3ProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3ProcessId.setStatus('current')
rlOspfv3RouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 2), RouterID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3RouterId.setStatus('current')
rlOspfv3AdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 3), Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3AdminStatus.setStatus('current')
rlOspfv3VersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("version3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VersionNumber.setStatus('current')
rlOspfv3AreaBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaBdrRtrStatus.setStatus('current')
rlOspfv3ASBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3ASBdrRtrStatus.setStatus('current')
rlOspfv3AsScopeLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AsScopeLsaCount.setStatus('current')
rlOspfv3AsScopeLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AsScopeLsaCksumSum.setStatus('current')
rlOspfv3OriginateNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3OriginateNewLsas.setStatus('current')
rlOspfv3RxNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3RxNewLsas.setStatus('current')
rlOspfv3ExtLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3ExtLsaCount.setStatus('current')
rlOspfv3ExtAreaLsdbLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3ExtAreaLsdbLimit.setStatus('current')
rlOspfv3ExitOverflowInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 13), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3ExitOverflowInterval.setStatus('current')
rlOspfv3DemandExtensions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3DemandExtensions.setStatus('current')
rlOspfv3ReferenceBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 15), Unsigned32().clone(100000)).setUnits('kilobits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3ReferenceBandwidth.setStatus('current')
rlOspfv3RestartSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("plannedOnly", 2), ("plannedAndUnplanned", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3RestartSupport.setStatus('current')
rlOspfv3RestartInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 17), Ospfv3UpToRefreshIntervalTC().clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3RestartInterval.setStatus('current')
rlOspfv3RestartStrictLsaChecking = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 18), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3RestartStrictLsaChecking.setStatus('current')
rlOspfv3RestartStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notRestarting", 1), ("plannedRestart", 2), ("unplannedRestart", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3RestartStatus.setStatus('current')
rlOspfv3RestartAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 20), Ospfv3UpToRefreshIntervalTC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3RestartAge.setStatus('current')
rlOspfv3RestartExitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("completed", 3), ("timedOut", 4), ("topologyChanged", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3RestartExitReason.setStatus('current')
rlOspfv3NotificationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 22), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3NotificationEnable.setStatus('current')
rlOspfv3StubRouterSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3StubRouterSupport.setStatus('current')
rlOspfv3StubRouterAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("doNotAdvertise", 1), ("advertise", 2))).clone('doNotAdvertise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3StubRouterAdvertisement.setStatus('current')
rlOspfv3DiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 25), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3DiscontinuityTime.setStatus('current')
rlOspfv3RestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 26), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3RestartTime.setStatus('current')
rlOspfv3OperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3OperStatus.setStatus('current')
rlOspfv3RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 28), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3RowStatus.setStatus('current')
rlOspfv3LogAdjacencyChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("detail", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3LogAdjacencyChanges.setStatus('current')
rlOspfv3PassiveInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 30), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3PassiveInterface.setStatus('current')
rlOspfv3DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3DefaultMetric.setStatus('current')
rlOspfv3MaximumRedistPrefixNum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3MaximumRedistPrefixNum.setStatus('current')
rlOspfv3MaximumRedistPrefixThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 33), Integer32().clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3MaximumRedistPrefixThreshold.setStatus('current')
rlOspfv3MaximumRedistPrefixWarningOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 34), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3MaximumRedistPrefixWarningOnly.setStatus('current')
rlOspfv3NextRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 35), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NextRouterId.setStatus('current')
rlOspfv3RouterIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 36), RlOspfRouterIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3RouterIdType.setStatus('current')
rlOspfv3NextRouterIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 37), RlOspfRouterIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NextRouterIdType.setStatus('current')
rlOspfv3ASBdrRtrActualStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3ASBdrRtrActualStatus.setStatus('current')
rlOspfv3CalcMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 39), Unsigned32().clone(5000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3CalcMaxDelay.setStatus('current')
rlOspfv3RteMaxEqCostPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 2, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3RteMaxEqCostPaths.setStatus('current')
rlOspfv3AreaTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 3), )
if mibBuilder.loadTexts: rlOspfv3AreaTable.setStatus('current')
rlOspfv3AreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 3, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaId"))
if mibBuilder.loadTexts: rlOspfv3AreaEntry.setStatus('current')
rlOspfv3AreaProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaProcessId.setStatus('current')
rlOspfv3AreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 2), AreaID())
if mibBuilder.loadTexts: rlOspfv3AreaId.setStatus('current')
rlOspfv3AreaImportAsExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("importExternal", 1), ("importNoExternal", 2), ("importNssa", 3))).clone('importExternal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaImportAsExtern.setStatus('current')
rlOspfv3AreaSpfRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaSpfRuns.setStatus('current')
rlOspfv3AreaBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaBdrRtrCount.setStatus('current')
rlOspfv3AreaAsBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaAsBdrRtrCount.setStatus('current')
rlOspfv3AreaScopeLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaScopeLsaCount.setStatus('current')
rlOspfv3AreaScopeLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaScopeLsaCksumSum.setStatus('current')
rlOspfv3AreaSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAreaSummary", 1), ("sendAreaSummary", 2))).clone('sendAreaSummary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaSummary.setStatus('current')
rlOspfv3AreaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaRowStatus.setStatus('current')
rlOspfv3AreaStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 11), BigMetric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaStubMetric.setStatus('current')
rlOspfv3AreaNssaTranslatorRole = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("always", 1), ("candidate", 2))).clone('candidate')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaNssaTranslatorRole.setStatus('current')
rlOspfv3AreaNssaTranslatorState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("elected", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaNssaTranslatorState.setStatus('current')
rlOspfv3AreaNssaTranslatorStabInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 14), Unsigned32().clone(40)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaNssaTranslatorStabInterval.setStatus('current')
rlOspfv3AreaNssaTranslatorEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaNssaTranslatorEvents.setStatus('current')
rlOspfv3AreaStubMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rlOspfv3Metric", 1), ("comparableCost", 2), ("nonComparable", 3))).clone('rlOspfv3Metric')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaStubMetricType.setStatus('current')
rlOspfv3AreaTEEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaTEEnabled.setStatus('current')
rlOspfv3AreaAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 18), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaAdminStat.setStatus('current')
rlOspfv3AreaOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaOperStatus.setStatus('current')
rlOspfv3AreaFilterPrefixListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3AreaFilterPrefixListIn.setStatus('current')
rlOspfv3AreaFilterPrefixListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 3, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3AreaFilterPrefixListOut.setStatus('current')
rlOspfv3AsLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 4), )
if mibBuilder.loadTexts: rlOspfv3AsLsdbTable.setStatus('current')
rlOspfv3AsLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 4, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3AsLsdbProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AsLsdbType"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AsLsdbRouterId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AsLsdbLsid"))
if mibBuilder.loadTexts: rlOspfv3AsLsdbEntry.setStatus('current')
rlOspfv3AsLsdbProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AsLsdbProcessId.setStatus('current')
rlOspfv3AsLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: rlOspfv3AsLsdbType.setStatus('current')
rlOspfv3AsLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 3), RouterID())
if mibBuilder.loadTexts: rlOspfv3AsLsdbRouterId.setStatus('current')
rlOspfv3AsLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 4), RlLsID())
if mibBuilder.loadTexts: rlOspfv3AsLsdbLsid.setStatus('current')
rlOspfv3AsLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 5), Ospfv3LsaSequenceTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AsLsdbSequence.setStatus('current')
rlOspfv3AsLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 6), Ospfv3LsaAgeTC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AsLsdbAge.setStatus('current')
rlOspfv3AsLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AsLsdbChecksum.setStatus('current')
rlOspfv3AsLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AsLsdbAdvertisement.setStatus('current')
rlOspfv3AsLsdbTypeKnown = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AsLsdbTypeKnown.setStatus('current')
rlOspfv3AreaLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 5), )
if mibBuilder.loadTexts: rlOspfv3AreaLsdbTable.setStatus('current')
rlOspfv3AreaLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 5, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaLsdbProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaLsdbAreaId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaLsdbType"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaLsdbRouterId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaLsdbLsid"))
if mibBuilder.loadTexts: rlOspfv3AreaLsdbEntry.setStatus('current')
rlOspfv3AreaLsdbProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaLsdbProcessId.setStatus('current')
rlOspfv3AreaLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 2), AreaID())
if mibBuilder.loadTexts: rlOspfv3AreaLsdbAreaId.setStatus('current')
rlOspfv3AreaLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: rlOspfv3AreaLsdbType.setStatus('current')
rlOspfv3AreaLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 4), RouterID())
if mibBuilder.loadTexts: rlOspfv3AreaLsdbRouterId.setStatus('current')
rlOspfv3AreaLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 5), RlLsID())
if mibBuilder.loadTexts: rlOspfv3AreaLsdbLsid.setStatus('current')
rlOspfv3AreaLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 6), Ospfv3LsaSequenceTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaLsdbSequence.setStatus('current')
rlOspfv3AreaLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 7), Ospfv3LsaAgeTC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaLsdbAge.setStatus('current')
rlOspfv3AreaLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaLsdbChecksum.setStatus('current')
rlOspfv3AreaLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaLsdbAdvertisement.setStatus('current')
rlOspfv3AreaLsdbTypeKnown = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 5, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaLsdbTypeKnown.setStatus('current')
rlOspfv3LinkLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 6), )
if mibBuilder.loadTexts: rlOspfv3LinkLsdbTable.setStatus('current')
rlOspfv3LinkLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 6, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3LinkLsdbProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3LinkLsdbIfIndex"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3LinkLsdbIfInstId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3LinkLsdbType"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3LinkLsdbRouterId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3LinkLsdbLsid"))
if mibBuilder.loadTexts: rlOspfv3LinkLsdbEntry.setStatus('current')
rlOspfv3LinkLsdbProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3LinkLsdbProcessId.setStatus('current')
rlOspfv3LinkLsdbIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlOspfv3LinkLsdbIfIndex.setStatus('current')
rlOspfv3LinkLsdbIfInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 3), Ospfv3IfInstIdTC())
if mibBuilder.loadTexts: rlOspfv3LinkLsdbIfInstId.setStatus('current')
rlOspfv3LinkLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: rlOspfv3LinkLsdbType.setStatus('current')
rlOspfv3LinkLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 5), RouterID())
if mibBuilder.loadTexts: rlOspfv3LinkLsdbRouterId.setStatus('current')
rlOspfv3LinkLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 6), RlLsID())
if mibBuilder.loadTexts: rlOspfv3LinkLsdbLsid.setStatus('current')
rlOspfv3LinkLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 7), Ospfv3LsaSequenceTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3LinkLsdbSequence.setStatus('current')
rlOspfv3LinkLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 8), Ospfv3LsaAgeTC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3LinkLsdbAge.setStatus('current')
rlOspfv3LinkLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3LinkLsdbChecksum.setStatus('current')
rlOspfv3LinkLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3LinkLsdbAdvertisement.setStatus('current')
rlOspfv3LinkLsdbTypeKnown = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 6, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3LinkLsdbTypeKnown.setStatus('current')
rlOspfv3HostTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 7), )
if mibBuilder.loadTexts: rlOspfv3HostTable.setStatus('current')
rlOspfv3HostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 7, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3HostProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3HostAddressType"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3HostAddress"))
if mibBuilder.loadTexts: rlOspfv3HostEntry.setStatus('current')
rlOspfv3HostProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 7, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3HostProcessId.setStatus('current')
rlOspfv3HostAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 7, 1, 2), InetAddressType())
if mibBuilder.loadTexts: rlOspfv3HostAddressType.setStatus('current')
rlOspfv3HostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 7, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlOspfv3HostAddress.setStatus('current')
rlOspfv3HostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 7, 1, 4), Metric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3HostMetric.setStatus('current')
rlOspfv3HostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3HostRowStatus.setStatus('current')
rlOspfv3HostAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 7, 1, 6), AreaID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3HostAreaID.setStatus('current')
rlOspfv3IfTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 8), )
if mibBuilder.loadTexts: rlOspfv3IfTable.setStatus('current')
rlOspfv3IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 8, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3IfProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3IfIndex"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3IfInstId"))
if mibBuilder.loadTexts: rlOspfv3IfEntry.setStatus('current')
rlOspfv3IfProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3IfProcessId.setStatus('current')
rlOspfv3IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlOspfv3IfIndex.setStatus('current')
rlOspfv3IfInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 3), Ospfv3IfInstIdTC())
if mibBuilder.loadTexts: rlOspfv3IfInstId.setStatus('current')
rlOspfv3IfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 4), AreaID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfAreaId.setStatus('current')
rlOspfv3IfType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointToPoint", 3), ("pointToMultipoint", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfType.setStatus('current')
rlOspfv3IfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 6), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfAdminStatus.setStatus('current')
rlOspfv3IfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 7), DesignatedRouterPriority().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfRtrPriority.setStatus('current')
rlOspfv3IfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 8), RlOspfv3UpToRefreshIntervalTC().clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfTransitDelay.setStatus('current')
rlOspfv3IfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 9), RlOspfv3UpToRefreshIntervalTC().clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfRetransInterval.setStatus('current')
rlOspfv3IfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 10), HelloRange().clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfHelloInterval.setStatus('current')
rlOspfv3IfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 11), Ospfv3DeadIntervalRangeTC().clone(40)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfRtrDeadInterval.setStatus('current')
rlOspfv3IfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 12), Unsigned32().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfPollInterval.setStatus('current')
rlOspfv3IfState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointToPoint", 4), ("designatedRouter", 5), ("backupDesignatedRouter", 6), ("otherDesignatedRouter", 7), ("standby", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3IfState.setStatus('current')
rlOspfv3IfDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 14), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3IfDesignatedRouter.setStatus('current')
rlOspfv3IfBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 15), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3IfBackupDesignatedRouter.setStatus('current')
rlOspfv3IfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3IfEvents.setStatus('current')
rlOspfv3IfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfRowStatus.setStatus('current')
rlOspfv3IfDemand = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfDemand.setStatus('current')
rlOspfv3IfMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 19), Metric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfMetricValue.setStatus('current')
rlOspfv3IfLinkScopeLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3IfLinkScopeLsaCount.setStatus('current')
rlOspfv3IfLinkLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3IfLinkLsaCksumSum.setStatus('current')
rlOspfv3IfDemandNbrProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 22), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfDemandNbrProbe.setStatus('current')
rlOspfv3IfDemandNbrProbeRetransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 23), Unsigned32().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfDemandNbrProbeRetransLimit.setStatus('current')
rlOspfv3IfDemandNbrProbeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 24), Unsigned32().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfDemandNbrProbeInterval.setStatus('current')
rlOspfv3IfTEDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 25), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfTEDisabled.setStatus('current')
rlOspfv3IfLinkLSASuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 26), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfLinkLSASuppression.setStatus('current')
rlOspfv3IfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3IfOperStatus.setStatus('current')
rlOspfv3IfPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3IfPassive.setStatus('current')
rlOspfv3IfLsaRefreshIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3IfLsaRefreshIntvl.setStatus('current')
rlOspfv3IfFastHelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 30), RlOspfv3FastHelloMultiplierRange().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3IfFastHelloMultiplier.setStatus('current')
rlOspfv3IfMtuIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 31), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3IfMtuIgnore.setStatus('current')
rlOspfv3IfNameLookup = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 8, 1, 32), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3IfNameLookup.setStatus('current')
rlOspfv3VirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 9), )
if mibBuilder.loadTexts: rlOspfv3VirtIfTable.setStatus('current')
rlOspfv3VirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 9, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtIfProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtIfAreaId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtIfNeighbor"))
if mibBuilder.loadTexts: rlOspfv3VirtIfEntry.setStatus('current')
rlOspfv3VirtIfProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtIfProcessId.setStatus('current')
rlOspfv3VirtIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 2), AreaID())
if mibBuilder.loadTexts: rlOspfv3VirtIfAreaId.setStatus('current')
rlOspfv3VirtIfNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 3), RouterID())
if mibBuilder.loadTexts: rlOspfv3VirtIfNeighbor.setStatus('current')
rlOspfv3VirtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtIfIndex.setStatus('current')
rlOspfv3VirtIfInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 5), Ospfv3IfInstIdTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtIfInstId.setStatus('current')
rlOspfv3VirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 6), RlOspfv3UpToRefreshIntervalTC().clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3VirtIfTransitDelay.setStatus('current')
rlOspfv3VirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 7), RlOspfv3UpToRefreshIntervalTC().clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3VirtIfRetransInterval.setStatus('current')
rlOspfv3VirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 8), HelloRange().clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3VirtIfHelloInterval.setStatus('current')
rlOspfv3VirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 9), Ospfv3DeadIntervalRangeTC().clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3VirtIfRtrDeadInterval.setStatus('current')
rlOspfv3VirtIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtIfState.setStatus('current')
rlOspfv3VirtIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtIfEvents.setStatus('current')
rlOspfv3VirtIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3VirtIfRowStatus.setStatus('current')
rlOspfv3VirtIfLinkScopeLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtIfLinkScopeLsaCount.setStatus('current')
rlOspfv3VirtIfLinkLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtIfLinkLsaCksumSum.setStatus('current')
rlOspfv3VirtIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 15), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3VirtIfAdminStatus.setStatus('current')
rlOspfv3VirtIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 9, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtIfOperStatus.setStatus('current')
rlOspfv3NbrTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 10), )
if mibBuilder.loadTexts: rlOspfv3NbrTable.setStatus('current')
rlOspfv3NbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 10, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3NbrProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3NbrIfIndex"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3NbrIfInstId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3NbrRtrId"))
if mibBuilder.loadTexts: rlOspfv3NbrEntry.setStatus('current')
rlOspfv3NbrProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrProcessId.setStatus('current')
rlOspfv3NbrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlOspfv3NbrIfIndex.setStatus('current')
rlOspfv3NbrIfInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 3), Ospfv3IfInstIdTC())
if mibBuilder.loadTexts: rlOspfv3NbrIfInstId.setStatus('current')
rlOspfv3NbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 4), RouterID())
if mibBuilder.loadTexts: rlOspfv3NbrRtrId.setStatus('current')
rlOspfv3NbrAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrAddressType.setStatus('current')
rlOspfv3NbrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrAddress.setStatus('current')
rlOspfv3NbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrOptions.setStatus('current')
rlOspfv3NbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 8), DesignatedRouterPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrPriority.setStatus('current')
rlOspfv3NbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrState.setStatus('current')
rlOspfv3NbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrEvents.setStatus('current')
rlOspfv3NbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrLsRetransQLen.setStatus('current')
rlOspfv3NbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrHelloSuppressed.setStatus('current')
rlOspfv3NbrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 13), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrIfId.setStatus('current')
rlOspfv3NbrRestartHelperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notHelping", 1), ("helping", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrRestartHelperStatus.setStatus('current')
rlOspfv3NbrRestartHelperAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 15), Ospfv3UpToRefreshIntervalTC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrRestartHelperAge.setStatus('current')
rlOspfv3NbrRestartHelperExitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("completed", 3), ("timedOut", 4), ("topologyChanged", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrRestartHelperExitReason.setStatus('current')
rlOspfv3NbrDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 17), PositiveInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrDeadTime.setStatus('current')
rlOspfv3NbrAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 10, 1, 18), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3NbrAreaId.setStatus('current')
rlOspfv3CfgNbrTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 11), )
if mibBuilder.loadTexts: rlOspfv3CfgNbrTable.setStatus('current')
rlOspfv3CfgNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 11, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspf3CfgNbrProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3CfgNbrIfIndex"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3CfgNbrIfInstId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3CfgNbrAddressType"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3CfgNbrAddress"))
if mibBuilder.loadTexts: rlOspfv3CfgNbrEntry.setStatus('current')
rlOspf3CfgNbrProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 11, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspf3CfgNbrProcessId.setStatus('current')
rlOspfv3CfgNbrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 11, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlOspfv3CfgNbrIfIndex.setStatus('current')
rlOspfv3CfgNbrIfInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 11, 1, 3), Ospfv3IfInstIdTC())
if mibBuilder.loadTexts: rlOspfv3CfgNbrIfInstId.setStatus('current')
rlOspfv3CfgNbrAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 11, 1, 4), InetAddressType())
if mibBuilder.loadTexts: rlOspfv3CfgNbrAddressType.setStatus('current')
rlOspfv3CfgNbrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 11, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlOspfv3CfgNbrAddress.setStatus('current')
rlOspfv3CfgNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 11, 1, 6), DesignatedRouterPriority().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3CfgNbrPriority.setStatus('current')
rlOspfv3CfgNbrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 11, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3CfgNbrRowStatus.setStatus('current')
rlOspfv3VirtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 12), )
if mibBuilder.loadTexts: rlOspfv3VirtNbrTable.setStatus('current')
rlOspfv3VirtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 12, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtNbrProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtNbrArea"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtNbrRtrId"))
if mibBuilder.loadTexts: rlOspfv3VirtNbrEntry.setStatus('current')
rlOspfv3VirtNbrProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrProcessId.setStatus('current')
rlOspfv3VirtNbrArea = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 2), AreaID())
if mibBuilder.loadTexts: rlOspfv3VirtNbrArea.setStatus('current')
rlOspfv3VirtNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 3), RouterID())
if mibBuilder.loadTexts: rlOspfv3VirtNbrRtrId.setStatus('current')
rlOspfv3VirtNbrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrIfIndex.setStatus('current')
rlOspfv3VirtNbrIfInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 5), Ospfv3IfInstIdTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrIfInstId.setStatus('current')
rlOspfv3VirtNbrAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrAddressType.setStatus('current')
rlOspfv3VirtNbrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrAddress.setStatus('current')
rlOspfv3VirtNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrOptions.setStatus('current')
rlOspfv3VirtNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrState.setStatus('current')
rlOspfv3VirtNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrEvents.setStatus('current')
rlOspfv3VirtNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrLsRetransQLen.setStatus('current')
rlOspfv3VirtNbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrHelloSuppressed.setStatus('current')
rlOspfv3VirtNbrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 13), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrIfId.setStatus('current')
rlOspfv3VirtNbrRestartHelperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notHelping", 1), ("helping", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrRestartHelperStatus.setStatus('current')
rlOspfv3VirtNbrRestartHelperAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 15), Ospfv3UpToRefreshIntervalTC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrRestartHelperAge.setStatus('current')
rlOspfv3VirtNbrRestartHelperExitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("completed", 3), ("timedOut", 4), ("topologyChanged", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrRestartHelperExitReason.setStatus('current')
rlOspfv3VirtNbrDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 12, 1, 17), PositiveInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtNbrDeadTime.setStatus('current')
rlOspfv3AreaAggregateTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 13), )
if mibBuilder.loadTexts: rlOspfv3AreaAggregateTable.setStatus('current')
rlOspfv3AreaAggregateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 13, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaAggregateProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaAggregateAreaID"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaAggregateAreaLsdbType"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaAggregatePrefixType"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaAggregatePrefix"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3AreaAggregatePrefixLength"))
if mibBuilder.loadTexts: rlOspfv3AreaAggregateEntry.setStatus('current')
rlOspfv3AreaAggregateProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3AreaAggregateProcessId.setStatus('current')
rlOspfv3AreaAggregateAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 2), AreaID())
if mibBuilder.loadTexts: rlOspfv3AreaAggregateAreaID.setStatus('current')
rlOspfv3AreaAggregateAreaLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8195, 8199))).clone(namedValues=NamedValues(("interAreaPrefixLsa", 8195), ("nssaExternalLsa", 8199))))
if mibBuilder.loadTexts: rlOspfv3AreaAggregateAreaLsdbType.setStatus('current')
rlOspfv3AreaAggregatePrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 4), InetAddressType())
if mibBuilder.loadTexts: rlOspfv3AreaAggregatePrefixType.setStatus('current')
rlOspfv3AreaAggregatePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 5), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 16)))
if mibBuilder.loadTexts: rlOspfv3AreaAggregatePrefix.setStatus('current')
rlOspfv3AreaAggregatePrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 6), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(3, 128))).setUnits('bits')
if mibBuilder.loadTexts: rlOspfv3AreaAggregatePrefixLength.setStatus('current')
rlOspfv3AreaAggregateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaAggregateRowStatus.setStatus('current')
rlOspfv3AreaAggregateEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertiseMatching", 1), ("doNotAdvertiseMatching", 2))).clone('advertiseMatching')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaAggregateEffect.setStatus('current')
rlOspfv3AreaAggregateRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 13, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlOspfv3AreaAggregateRouteTag.setStatus('current')
rlOspfv3VirtLinkLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 89, 216, 14), )
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbTable.setStatus('current')
rlOspfv3VirtLinkLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 216, 14, 1), ).setIndexNames((0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtLinkLsdbProcessId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtLinkLsdbIfAreaId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtLinkLsdbIfNeighbor"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtLinkLsdbType"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtLinkLsdbRouterId"), (0, "RADLAN-OSPFV3-MIB", "rlOspfv3VirtLinkLsdbLsid"))
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbEntry.setStatus('current')
rlOspfv3VirtLinkLsdbProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 1), RlOspfProcessID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbProcessId.setStatus('current')
rlOspfv3VirtLinkLsdbIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 2), AreaID())
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbIfAreaId.setStatus('current')
rlOspfv3VirtLinkLsdbIfNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 3), RouterID())
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbIfNeighbor.setStatus('current')
rlOspfv3VirtLinkLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbType.setStatus('current')
rlOspfv3VirtLinkLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 5), RouterID())
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbRouterId.setStatus('current')
rlOspfv3VirtLinkLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 6), RlLsID())
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbLsid.setStatus('current')
rlOspfv3VirtLinkLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 7), Ospfv3LsaSequenceTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbSequence.setStatus('current')
rlOspfv3VirtLinkLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 8), Ospfv3LsaAgeTC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbAge.setStatus('current')
rlOspfv3VirtLinkLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbChecksum.setStatus('current')
rlOspfv3VirtLinkLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbAdvertisement.setStatus('current')
rlOspfv3VirtLinkLsdbTypeKnown = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 216, 14, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlOspfv3VirtLinkLsdbTypeKnown.setStatus('current')
rlOspfv3NotificationEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 216, 15))
rlOspfv3ConfigErrorType = MibScalar((1, 3, 6, 1, 4, 1, 89, 216, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("badVersion", 1), ("areaMismatch", 2), ("unknownNbmaNbr", 3), ("unknownVirtualNbr", 4), ("helloIntervalMismatch", 5), ("deadIntervalMismatch", 6), ("optionMismatch", 7), ("mtuMismatch", 8), ("duplicateRouterId", 9), ("noError", 10)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rlOspfv3ConfigErrorType.setStatus('current')
rlOspfv3PacketType = MibScalar((1, 3, 6, 1, 4, 1, 89, 216, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("hello", 1), ("dbDescript", 2), ("lsReq", 3), ("lsUpdate", 4), ("lsAck", 5), ("nullPacket", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rlOspfv3PacketType.setStatus('current')
rlOspfv3PacketSrc = MibScalar((1, 3, 6, 1, 4, 1, 89, 216, 15, 3), InetAddressIPv6()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rlOspfv3PacketSrc.setStatus('current')
rlOspfv3Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 216, 16))
rlOspfv3VirtIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 1)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3VirtIfState"))
if mibBuilder.loadTexts: rlOspfv3VirtIfStateChange.setStatus('current')
rlOspfv3NbrStateChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 2)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3NbrState"))
if mibBuilder.loadTexts: rlOspfv3NbrStateChange.setStatus('current')
rlOspfv3VirtNbrStateChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 3)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3VirtNbrState"))
if mibBuilder.loadTexts: rlOspfv3VirtNbrStateChange.setStatus('current')
rlOspfv3IfConfigError = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 4)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3IfState"), ("RADLAN-OSPFV3-MIB", "rlOspfv3PacketSrc"), ("RADLAN-OSPFV3-MIB", "rlOspfv3ConfigErrorType"), ("RADLAN-OSPFV3-MIB", "rlOspfv3PacketType"))
if mibBuilder.loadTexts: rlOspfv3IfConfigError.setStatus('current')
rlOspfv3VirtIfConfigError = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 5)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3VirtIfState"), ("RADLAN-OSPFV3-MIB", "rlOspfv3ConfigErrorType"), ("RADLAN-OSPFV3-MIB", "rlOspfv3PacketType"))
if mibBuilder.loadTexts: rlOspfv3VirtIfConfigError.setStatus('current')
rlOspfv3IfRxBadPacket = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 6)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3IfState"), ("RADLAN-OSPFV3-MIB", "rlOspfv3PacketSrc"), ("RADLAN-OSPFV3-MIB", "rlOspfv3PacketType"))
if mibBuilder.loadTexts: rlOspfv3IfRxBadPacket.setStatus('current')
rlOspfv3VirtIfRxBadPacket = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 7)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3VirtIfState"), ("RADLAN-OSPFV3-MIB", "rlOspfv3PacketType"))
if mibBuilder.loadTexts: rlOspfv3VirtIfRxBadPacket.setStatus('current')
rlOspfv3LsdbOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 8)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3ExtAreaLsdbLimit"))
if mibBuilder.loadTexts: rlOspfv3LsdbOverflow.setStatus('current')
rlOspfv3LsdbApproachingOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 9)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3ExtAreaLsdbLimit"))
if mibBuilder.loadTexts: rlOspfv3LsdbApproachingOverflow.setStatus('current')
rlOspfv3IfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 10)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3IfState"))
if mibBuilder.loadTexts: rlOspfv3IfStateChange.setStatus('current')
rlOspfv3NssaTranslatorStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 11)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3AreaNssaTranslatorState"))
if mibBuilder.loadTexts: rlOspfv3NssaTranslatorStatusChange.setStatus('current')
rlOspfv3RestartStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 12)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3RestartStatus"), ("RADLAN-OSPFV3-MIB", "rlOspfv3RestartInterval"), ("RADLAN-OSPFV3-MIB", "rlOspfv3RestartExitReason"))
if mibBuilder.loadTexts: rlOspfv3RestartStatusChange.setStatus('current')
rlOspfv3NbrRestartHelperStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 13)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3NbrRestartHelperStatus"), ("RADLAN-OSPFV3-MIB", "rlOspfv3NbrRestartHelperAge"), ("RADLAN-OSPFV3-MIB", "rlOspfv3NbrRestartHelperExitReason"))
if mibBuilder.loadTexts: rlOspfv3NbrRestartHelperStatusChange.setStatus('current')
rlOspfv3VirtNbrRestartHelperStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 216, 16, 14)).setObjects(("RADLAN-OSPFV3-MIB", "rlOspfv3RouterId"), ("RADLAN-OSPFV3-MIB", "rlOspfv3VirtNbrRestartHelperStatus"), ("RADLAN-OSPFV3-MIB", "rlOspfv3VirtNbrRestartHelperAge"), ("RADLAN-OSPFV3-MIB", "rlOspfv3VirtNbrRestartHelperExitReason"))
if mibBuilder.loadTexts: rlOspfv3VirtNbrRestartHelperStatusChange.setStatus('current')
rlOspfv3EnableNotificationsOspfEvents = MibScalar((1, 3, 6, 1, 4, 1, 89, 216, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3EnableNotificationsOspfEvents.setStatus('current')
rlOspfv3EnableNotificationsOspfRateLimitSeconds = MibScalar((1, 3, 6, 1, 4, 1, 89, 216, 18), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3EnableNotificationsOspfRateLimitSeconds.setStatus('current')
rlOspfv3EnableNotificationsOspfRateLimitTrapNumber = MibScalar((1, 3, 6, 1, 4, 1, 89, 216, 19), Integer32().clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlOspfv3EnableNotificationsOspfRateLimitTrapNumber.setStatus('current')
mibBuilder.exportSymbols("RADLAN-OSPFV3-MIB", rlOspfv3VirtLinkLsdbSequence=rlOspfv3VirtLinkLsdbSequence, rlOspfv3ConfigErrorType=rlOspfv3ConfigErrorType, rlOspfv3NbrEntry=rlOspfv3NbrEntry, rlOspfv3AreaAggregateRouteTag=rlOspfv3AreaAggregateRouteTag, rlOspfv3IfLinkLsaCksumSum=rlOspfv3IfLinkLsaCksumSum, rlOspfv3RowStatus=rlOspfv3RowStatus, rlOspfv3AreaNssaTranslatorEvents=rlOspfv3AreaNssaTranslatorEvents, rlOspfv3VirtLinkLsdbIfAreaId=rlOspfv3VirtLinkLsdbIfAreaId, rlOspfv3VirtNbrRestartHelperAge=rlOspfv3VirtNbrRestartHelperAge, RlOspfv3RestartHelperStatus=RlOspfv3RestartHelperStatus, rlOspfv3AsLsdbRouterId=rlOspfv3AsLsdbRouterId, rlOspfv3StubRouterSupport=rlOspfv3StubRouterSupport, rlOspfv3AreaSpfRuns=rlOspfv3AreaSpfRuns, rlOspfv3AreaBdrRtrCount=rlOspfv3AreaBdrRtrCount, rlOspfv3AreaAggregatePrefix=rlOspfv3AreaAggregatePrefix, rlOspfv3AsLsdbAdvertisement=rlOspfv3AsLsdbAdvertisement, rlOspfv3HostRowStatus=rlOspfv3HostRowStatus, rlOspfv3AreaAggregateEffect=rlOspfv3AreaAggregateEffect, rlOspfv3IfStateChange=rlOspfv3IfStateChange, rlOspfv3IfTable=rlOspfv3IfTable, rlOspfv3VirtLinkLsdbTypeKnown=rlOspfv3VirtLinkLsdbTypeKnown, rlOspfv3AdminStatus=rlOspfv3AdminStatus, rlOspfv3NotificationEntry=rlOspfv3NotificationEntry, rlOspfv3VirtNbrEntry=rlOspfv3VirtNbrEntry, rlOspfv3VirtNbrRestartHelperStatus=rlOspfv3VirtNbrRestartHelperStatus, rlOspfv3AreaAggregateTable=rlOspfv3AreaAggregateTable, rlOspfv3AreaTable=rlOspfv3AreaTable, rlOspfv3HostAreaID=rlOspfv3HostAreaID, rlOspfv3IfDemandNbrProbeRetransLimit=rlOspfv3IfDemandNbrProbeRetransLimit, rlOspfv3VirtIfState=rlOspfv3VirtIfState, rlOspfv3NbrTable=rlOspfv3NbrTable, rlOspfv3ReferenceBandwidth=rlOspfv3ReferenceBandwidth, rlOspfv3IfBackupDesignatedRouter=rlOspfv3IfBackupDesignatedRouter, rlOspfv3LinkLsdbProcessId=rlOspfv3LinkLsdbProcessId, rlOspfv3AreaBdrRtrStatus=rlOspfv3AreaBdrRtrStatus, rlOspfv3ASBdrRtrStatus=rlOspfv3ASBdrRtrStatus, rlOspfv3AreaOperStatus=rlOspfv3AreaOperStatus, rlOspfv3VirtIfTransitDelay=rlOspfv3VirtIfTransitDelay, rlOspfv3NotificationEnable=rlOspfv3NotificationEnable, rlOspfv3AreaAggregateRowStatus=rlOspfv3AreaAggregateRowStatus, rlOspfv3AreaSummary=rlOspfv3AreaSummary, rlOspfv3VirtIfConfigError=rlOspfv3VirtIfConfigError, rlOspfv3OriginateNewLsas=rlOspfv3OriginateNewLsas, rlOspfv3AreaLsdbChecksum=rlOspfv3AreaLsdbChecksum, rlOspfv3IfMetricValue=rlOspfv3IfMetricValue, rlOspfv3OperStatus=rlOspfv3OperStatus, rlOspfv3AreaNssaTranslatorState=rlOspfv3AreaNssaTranslatorState, rlOspfv3VirtIfEntry=rlOspfv3VirtIfEntry, rlOspfv3AreaScopeLsaCount=rlOspfv3AreaScopeLsaCount, rlOspfv3DemandExtensions=rlOspfv3DemandExtensions, rlOspfv3VirtLinkLsdbAge=rlOspfv3VirtLinkLsdbAge, rlOspfv3RestartStatusChange=rlOspfv3RestartStatusChange, rlOspfv3IfRtrPriority=rlOspfv3IfRtrPriority, rlOspfv3VirtIfEvents=rlOspfv3VirtIfEvents, rlOspfv3VirtLinkLsdbChecksum=rlOspfv3VirtLinkLsdbChecksum, rlOspfv3AreaStubMetricType=rlOspfv3AreaStubMetricType, rlOspfv3AsLsdbSequence=rlOspfv3AsLsdbSequence, rlOspfv3VirtNbrArea=rlOspfv3VirtNbrArea, rlOspfv3IfTransitDelay=rlOspfv3IfTransitDelay, rlOspfv3EnableNotificationsOspfRateLimitSeconds=rlOspfv3EnableNotificationsOspfRateLimitSeconds, rlOspfv3LinkLsdbType=rlOspfv3LinkLsdbType, rlOspfv3IfLinkLSASuppression=rlOspfv3IfLinkLSASuppression, rlOspfv3CfgNbrIfIndex=rlOspfv3CfgNbrIfIndex, rlOspfv3AreaAggregateAreaLsdbType=rlOspfv3AreaAggregateAreaLsdbType, rlOspfv3IfDesignatedRouter=rlOspfv3IfDesignatedRouter, rlOspfv3MaximumRedistPrefixNum=rlOspfv3MaximumRedistPrefixNum, rlOspfv3AreaProcessId=rlOspfv3AreaProcessId, rlOspfv3IfIndex=rlOspfv3IfIndex, rlOspfv3VirtNbrOptions=rlOspfv3VirtNbrOptions, rlOspfv3LsdbApproachingOverflow=rlOspfv3LsdbApproachingOverflow, rlOspfv3AreaImportAsExtern=rlOspfv3AreaImportAsExtern, rlOspfv3AreaScopeLsaCksumSum=rlOspfv3AreaScopeLsaCksumSum, rlOspfv3AreaFilterPrefixListOut=rlOspfv3AreaFilterPrefixListOut, rlOspfv3VirtIfNeighbor=rlOspfv3VirtIfNeighbor, rlOspfv3IfEvents=rlOspfv3IfEvents, rlOspfv3RestartAge=rlOspfv3RestartAge, rlOspfv3VirtIfIndex=rlOspfv3VirtIfIndex, rlOspfv3StubRouterAdvertisement=rlOspfv3StubRouterAdvertisement, rlOspfv3NbrOptions=rlOspfv3NbrOptions, rlOspfv3VirtLinkLsdbRouterId=rlOspfv3VirtLinkLsdbRouterId, rlOspfv3IfHelloInterval=rlOspfv3IfHelloInterval, rlOspfv3LinkLsdbEntry=rlOspfv3LinkLsdbEntry, rlOspfv3AreaId=rlOspfv3AreaId, rlOspfv3AreaLsdbProcessId=rlOspfv3AreaLsdbProcessId, rlOspfv3LsdbOverflow=rlOspfv3LsdbOverflow, rlOspfv3VirtNbrRtrId=rlOspfv3VirtNbrRtrId, rlOspfv3IfConfigError=rlOspfv3IfConfigError, rlOspfv3RxNewLsas=rlOspfv3RxNewLsas, rlOspfv3IfAdminStatus=rlOspfv3IfAdminStatus, rlOspfv3DefaultMetric=rlOspfv3DefaultMetric, rlOspfv3AreaAggregatePrefixLength=rlOspfv3AreaAggregatePrefixLength, rlOspfv3VirtIfLinkLsaCksumSum=rlOspfv3VirtIfLinkLsaCksumSum, rlOspfv3AsLsdbTypeKnown=rlOspfv3AsLsdbTypeKnown, rlOspfv3GeneralGroupEntry=rlOspfv3GeneralGroupEntry, rlOspfv3NbrState=rlOspfv3NbrState, rlOspfv3IfRetransInterval=rlOspfv3IfRetransInterval, rlOspfv3VirtNbrAddress=rlOspfv3VirtNbrAddress, rlOspfv3AreaLsdbLsid=rlOspfv3AreaLsdbLsid, rlOspfv3IfState=rlOspfv3IfState, rlOspfv3CfgNbrAddressType=rlOspfv3CfgNbrAddressType, rlOspfv3VirtNbrLsRetransQLen=rlOspfv3VirtNbrLsRetransQLen, rlOspfv3NbrRestartHelperStatusChange=rlOspfv3NbrRestartHelperStatusChange, rlOspfv3VirtLinkLsdbTable=rlOspfv3VirtLinkLsdbTable, rlOspfv3AreaAggregateProcessId=rlOspfv3AreaAggregateProcessId, rlOspfv3AsLsdbChecksum=rlOspfv3AsLsdbChecksum, rlOspfv3VirtNbrRestartHelperStatusChange=rlOspfv3VirtNbrRestartHelperStatusChange, rlOspfv3IfLsaRefreshIntvl=rlOspfv3IfLsaRefreshIntvl, rlOspfv3MaximumRedistPrefixThreshold=rlOspfv3MaximumRedistPrefixThreshold, rlOspfv3LinkLsdbChecksum=rlOspfv3LinkLsdbChecksum, rlOspfv3IfMtuIgnore=rlOspfv3IfMtuIgnore, rlOspfv3RestartStrictLsaChecking=rlOspfv3RestartStrictLsaChecking, rlOspfv3VirtIfOperStatus=rlOspfv3VirtIfOperStatus, rlOspfv3NbrLsRetransQLen=rlOspfv3NbrLsRetransQLen, rlOspfv3IfEntry=rlOspfv3IfEntry, rlOspfv3IfInstId=rlOspfv3IfInstId, rlOspfv3IfLinkScopeLsaCount=rlOspfv3IfLinkScopeLsaCount, rlOspfv3NbrRestartHelperAge=rlOspfv3NbrRestartHelperAge, rlOspfv3AreaAggregatePrefixType=rlOspfv3AreaAggregatePrefixType, rlOspfv3VirtIfRtrDeadInterval=rlOspfv3VirtIfRtrDeadInterval, rlOspfv3VirtNbrEvents=rlOspfv3VirtNbrEvents, rlOspfv3HostAddress=rlOspfv3HostAddress, rlOspfv3AsLsdbTable=rlOspfv3AsLsdbTable, rlOspfv3IfDemandNbrProbeInterval=rlOspfv3IfDemandNbrProbeInterval, rlOspfv3RestartTime=rlOspfv3RestartTime, rlOspfv3HostAddressType=rlOspfv3HostAddressType, rlOspfv3AreaLsdbType=rlOspfv3AreaLsdbType, rlOspfv3NbrAreaId=rlOspfv3NbrAreaId, rlOspfv3LinkLsdbAdvertisement=rlOspfv3LinkLsdbAdvertisement, rlOspfv3RouterId=rlOspfv3RouterId, rlOspfv3ExtLsaCount=rlOspfv3ExtLsaCount, rlOspfv3IfTEDisabled=rlOspfv3IfTEDisabled, rlOspfv3NbrIfInstId=rlOspfv3NbrIfInstId, rlOspfv3VirtNbrDeadTime=rlOspfv3VirtNbrDeadTime, rlOspfv3VirtIfTable=rlOspfv3VirtIfTable, rlOspfv3MaximumRedistPrefixWarningOnly=rlOspfv3MaximumRedistPrefixWarningOnly, rlOspfv3AreaRowStatus=rlOspfv3AreaRowStatus, rlOspfv3AreaLsdbAge=rlOspfv3AreaLsdbAge, rlOspfv3NbrIfId=rlOspfv3NbrIfId, rlOspfv3AreaNssaTranslatorRole=rlOspfv3AreaNssaTranslatorRole, rlOspfv3NssaTranslatorStatusChange=rlOspfv3NssaTranslatorStatusChange, rlOspfv3RteMaxEqCostPaths=rlOspfv3RteMaxEqCostPaths, rlOspfv3RouterIdType=rlOspfv3RouterIdType, rlOspfv3AreaLsdbSequence=rlOspfv3AreaLsdbSequence, rlOspfv3VirtNbrState=rlOspfv3VirtNbrState, rlOspfv3AsLsdbAge=rlOspfv3AsLsdbAge, rlOspfv3AsLsdbEntry=rlOspfv3AsLsdbEntry, rlOspfv3CfgNbrRowStatus=rlOspfv3CfgNbrRowStatus, rlOspfv3IfDemand=rlOspfv3IfDemand, rlOspfv3AreaNssaTranslatorStabInterval=rlOspfv3AreaNssaTranslatorStabInterval, rlOspfv3VirtNbrAddressType=rlOspfv3VirtNbrAddressType, rlOspfv3LinkLsdbRouterId=rlOspfv3LinkLsdbRouterId, rlOspfv3VirtIfRxBadPacket=rlOspfv3VirtIfRxBadPacket, rlOspfv3AreaLsdbEntry=rlOspfv3AreaLsdbEntry, rlOspfv3CfgNbrTable=rlOspfv3CfgNbrTable, rlOspfv3VirtNbrHelloSuppressed=rlOspfv3VirtNbrHelloSuppressed, rlOspfv3LinkLsdbSequence=rlOspfv3LinkLsdbSequence, rlOspfv3AreaAggregateAreaID=rlOspfv3AreaAggregateAreaID, RlOspfv3UpToRefreshInterval=RlOspfv3UpToRefreshInterval, rlOspfv3Notifications=rlOspfv3Notifications, rlOspfv3IfType=rlOspfv3IfType, rlOspfv3PacketSrc=rlOspfv3PacketSrc, rlOspfv3NextRouterId=rlOspfv3NextRouterId, rlOspfv3PacketType=rlOspfv3PacketType, rlOspfv3GeneralGroupTable=rlOspfv3GeneralGroupTable, rlOspfv3VirtLinkLsdbIfNeighbor=rlOspfv3VirtLinkLsdbIfNeighbor, rlOspfv3CfgNbrEntry=rlOspfv3CfgNbrEntry, rlOspfv3AreaAsBdrRtrCount=rlOspfv3AreaAsBdrRtrCount, rlOspfv3ProcessId=rlOspfv3ProcessId, rlOspfv3=rlOspfv3, rlOspfv3RestartExitReason=rlOspfv3RestartExitReason, rlOspfv3AreaTEEnabled=rlOspfv3AreaTEEnabled, rlOspfv3LinkLsdbIfIndex=rlOspfv3LinkLsdbIfIndex, rlOspfv3IfPassive=rlOspfv3IfPassive, rlOspfv3VirtIfInstId=rlOspfv3VirtIfInstId, rlOspfv3AreaLsdbAreaId=rlOspfv3AreaLsdbAreaId, rlOspfv3HostMetric=rlOspfv3HostMetric, rlOspfv3VirtLinkLsdbAdvertisement=rlOspfv3VirtLinkLsdbAdvertisement, rlOspfv3VirtNbrTable=rlOspfv3VirtNbrTable, rlOspfv3AsScopeLsaCount=rlOspfv3AsScopeLsaCount, rlOspfv3LinkLsdbLsid=rlOspfv3LinkLsdbLsid, rlOspfv3IfAreaId=rlOspfv3IfAreaId, rlOspfv3CalcMaxDelay=rlOspfv3CalcMaxDelay, rlOspfv3VirtIfAreaId=rlOspfv3VirtIfAreaId, rlOspfv3NbrEvents=rlOspfv3NbrEvents, RlLsID=RlLsID, rlOspf3CfgNbrProcessId=rlOspf3CfgNbrProcessId, rlOspfv3VirtNbrIfId=rlOspfv3VirtNbrIfId, rlOspfv3LinkLsdbTable=rlOspfv3LinkLsdbTable, rlOspfv3IfRowStatus=rlOspfv3IfRowStatus, rlOspfv3VersionNumber=rlOspfv3VersionNumber, rlOspfv3AsLsdbLsid=rlOspfv3AsLsdbLsid, rlOspfv3IfDemandNbrProbe=rlOspfv3IfDemandNbrProbe, rlOspfv3HostEntry=rlOspfv3HostEntry, rlOspfv3IfPollInterval=rlOspfv3IfPollInterval, rlOspfv3AsLsdbProcessId=rlOspfv3AsLsdbProcessId, rlOspfv3VirtNbrIfIndex=rlOspfv3VirtNbrIfIndex, rlOspfv3HostProcessId=rlOspfv3HostProcessId, RlOspfv3UpToRefreshIntervalTC=RlOspfv3UpToRefreshIntervalTC, rlOspfv3AsScopeLsaCksumSum=rlOspfv3AsScopeLsaCksumSum, rlOspfv3RestartSupport=rlOspfv3RestartSupport, rlOspfv3LinkLsdbTypeKnown=rlOspfv3LinkLsdbTypeKnown, rlOspfv3VirtLinkLsdbLsid=rlOspfv3VirtLinkLsdbLsid, RlOspfv3FastHelloMultiplierRange=RlOspfv3FastHelloMultiplierRange, rlOspfv3AreaLsdbRouterId=rlOspfv3AreaLsdbRouterId, rlOspfv3NextRouterIdType=rlOspfv3NextRouterIdType, rlOspfv3NbrDeadTime=rlOspfv3NbrDeadTime, rlOspfv3ExitOverflowInterval=rlOspfv3ExitOverflowInterval, rlOspfv3AreaAggregateEntry=rlOspfv3AreaAggregateEntry, rlOspfv3RestartStatus=rlOspfv3RestartStatus, rlOspfv3NbrStateChange=rlOspfv3NbrStateChange, rlOspfv3AreaLsdbAdvertisement=rlOspfv3AreaLsdbAdvertisement, rlOspfv3IfOperStatus=rlOspfv3IfOperStatus, rlOspfv3NbrAddressType=rlOspfv3NbrAddressType, rlOspfv3AreaEntry=rlOspfv3AreaEntry, rlOspfv3NbrIfIndex=rlOspfv3NbrIfIndex, rlOspfv3VirtNbrRestartHelperExitReason=rlOspfv3VirtNbrRestartHelperExitReason, rlOspfv3DiscontinuityTime=rlOspfv3DiscontinuityTime, rlOspfv3VirtNbrStateChange=rlOspfv3VirtNbrStateChange, rlOspfv3EnableNotificationsOspfRateLimitTrapNumber=rlOspfv3EnableNotificationsOspfRateLimitTrapNumber, rlOspfv3IfNameLookup=rlOspfv3IfNameLookup, rlOspfv3Instance=rlOspfv3Instance, rlOspfv3NbrRtrId=rlOspfv3NbrRtrId, rlOspfv3VirtLinkLsdbType=rlOspfv3VirtLinkLsdbType, rlOspfv3AreaLsdbTable=rlOspfv3AreaLsdbTable, rlOspfv3AreaLsdbTypeKnown=rlOspfv3AreaLsdbTypeKnown, rlOspfv3VirtIfProcessId=rlOspfv3VirtIfProcessId, rlOspfv3NbrRestartHelperExitReason=rlOspfv3NbrRestartHelperExitReason, rlOspfv3CfgNbrIfInstId=rlOspfv3CfgNbrIfInstId, rlOspfv3IfFastHelloMultiplier=rlOspfv3IfFastHelloMultiplier, rlOspfv3CfgNbrAddress=rlOspfv3CfgNbrAddress, rlOspfv3VirtNbrProcessId=rlOspfv3VirtNbrProcessId, rlOspfv3VirtIfLinkScopeLsaCount=rlOspfv3VirtIfLinkScopeLsaCount, rlOspfv3NbrProcessId=rlOspfv3NbrProcessId, rlOspfv3VirtIfRowStatus=rlOspfv3VirtIfRowStatus, rlOspfv3VirtNbrIfInstId=rlOspfv3VirtNbrIfInstId, rlOspfv3AreaFilterPrefixListIn=rlOspfv3AreaFilterPrefixListIn, rlOspfv3AsLsdbType=rlOspfv3AsLsdbType, rlOspfv3VirtIfStateChange=rlOspfv3VirtIfStateChange, RlOspfv3RestartExitReason=RlOspfv3RestartExitReason, rlOspfv3IfRtrDeadInterval=rlOspfv3IfRtrDeadInterval, PYSNMP_MODULE_ID=rlOspfv3, rlOspfv3CfgNbrPriority=rlOspfv3CfgNbrPriority, rlOspfv3RestartInterval=rlOspfv3RestartInterval, rlOspfv3NbrAddress=rlOspfv3NbrAddress, rlOspfv3HostTable=rlOspfv3HostTable, rlOspfv3ExtAreaLsdbLimit=rlOspfv3ExtAreaLsdbLimit, rlOspfv3VirtLinkLsdbEntry=rlOspfv3VirtLinkLsdbEntry, rlOspfv3IfRxBadPacket=rlOspfv3IfRxBadPacket, rlOspfv3VirtIfAdminStatus=rlOspfv3VirtIfAdminStatus, rlOspfv3PassiveInterface=rlOspfv3PassiveInterface, rlOspfv3ASBdrRtrActualStatus=rlOspfv3ASBdrRtrActualStatus, rlOspfv3AreaAdminStat=rlOspfv3AreaAdminStat, rlOspfv3VirtIfHelloInterval=rlOspfv3VirtIfHelloInterval, rlOspfv3VirtIfRetransInterval=rlOspfv3VirtIfRetransInterval)
mibBuilder.exportSymbols("RADLAN-OSPFV3-MIB", rlOspfv3LogAdjacencyChanges=rlOspfv3LogAdjacencyChanges, rlOspfv3NbrPriority=rlOspfv3NbrPriority, rlOspfv3LinkLsdbAge=rlOspfv3LinkLsdbAge, rlOspfv3NbrRestartHelperStatus=rlOspfv3NbrRestartHelperStatus, rlOspfv3NbrHelloSuppressed=rlOspfv3NbrHelloSuppressed, RlRouterID=RlRouterID, rlOspfv3VirtLinkLsdbProcessId=rlOspfv3VirtLinkLsdbProcessId, rlOspfv3LinkLsdbIfInstId=rlOspfv3LinkLsdbIfInstId, rlOspfv3AreaStubMetric=rlOspfv3AreaStubMetric, rlOspfv3EnableNotificationsOspfEvents=rlOspfv3EnableNotificationsOspfEvents, rlOspfv3IfProcessId=rlOspfv3IfProcessId)
