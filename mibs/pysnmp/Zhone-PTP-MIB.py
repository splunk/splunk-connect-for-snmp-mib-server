#
# PySNMP MIB module Zhone-PTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Zhone-PTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:46:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, Integer32, ObjectIdentity, Counter32, NotificationType, TimeTicks, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, iso, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ObjectIdentity", "Counter32", "NotificationType", "TimeTicks", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "iso", "ModuleIdentity", "Counter64")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
zhoneShelfSlotGroup, zhoneGroups, zhoneModules, zhonePtp = mibBuilder.importSymbols("Zhone", "zhoneShelfSlotGroup", "zhoneGroups", "zhoneModules", "zhonePtp")
ZhoneRowStatus, = mibBuilder.importSymbols("Zhone-TC", "ZhoneRowStatus")
zhonePtpModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 119))
zhonePtpModule.setRevisions(('2013-05-09 15:15', '2012-01-13 14:50',))
if mibBuilder.loadTexts: zhonePtpModule.setLastUpdated('201205091450Z')
if mibBuilder.loadTexts: zhonePtpModule.setOrganization('Zhone Technologies.')
zhonePtpObjectID = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1))
zhonePtpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1), )
if mibBuilder.loadTexts: zhonePtpConfigTable.setStatus('current')
zhonePtpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1), ).setIndexNames((0, "Zhone-PTP-MIB", "zhonePtpConfigIfIndex"))
if mibBuilder.loadTexts: zhonePtpConfigEntry.setStatus('current')
zhonePtpConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: zhonePtpConfigIfIndex.setStatus('current')
zhonePtpConfigClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("boundary", 3), ("transparent", 4), ("forward", 5))).clone('slave')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigClockMode.setStatus('current')
zhonePtpConfigSyncMsgInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127)).clone(-5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigSyncMsgInterval.setStatus('current')
zhonePtpConfigAnnounceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigAnnounceInterval.setStatus('current')
zhonePtpConfigDelayReqInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigDelayReqInterval.setStatus('current')
zhonePtpConfigDomain1MS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigDomain1MS.setStatus('current')
zhonePtpConfigVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32767)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigVariance.setStatus('current')
zhonePtpConfigPriority1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigPriority1.setStatus('current')
zhonePtpConfigPriority2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigPriority2.setStatus('current')
zhonePtpConfigDomain2M = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigDomain2M.setStatus('current')
zhonePtpConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 11), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigRowStatus.setStatus('current')
zhonePtpConfigIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 12), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigIpIfIndex.setStatus('current')
zhonePtpConfigAcceptableMaster1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 13), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigAcceptableMaster1.setStatus('current')
zhonePtpConfigAcceptableMaster2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 1, 1, 14), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhonePtpConfigAcceptableMaster2.setStatus('current')
zhonePtpStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 2), )
if mibBuilder.loadTexts: zhonePtpStatusTable.setStatus('current')
zhonePtpStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 2, 1), ).setIndexNames((0, "Zhone-PTP-MIB", "zhonePtpConfigIfIndex"))
if mibBuilder.loadTexts: zhonePtpStatusEntry.setStatus('current')
zhonePtpStatusMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePtpStatusMacAddress.setStatus('current')
zhonePtpConfigTimeSource = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("atom", 1), ("gps", 2), ("radio", 3), ("ptp", 4), ("ntp", 5), ("handSet", 6), ("other", 7), ("internalOscillator", 8))).clone('internalOscillator')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePtpConfigTimeSource.setStatus('current')
zhonePtpConfigClockStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("force", 1), ("primaryReference", 2), ("secondaryReference", 3), ("bestClockStratumThatCanBeSlave", 4), ("stratum3", 5), ("stratum4", 6), ("defaultStratum", 7))).clone('defaultStratum')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePtpConfigClockStratum.setStatus('current')
zhonePtpConfigClockAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("nSec25", 1), ("nSec100", 2), ("nSec250", 3), ("uSec1", 4), ("uSec2point5", 5), ("uSec10", 6), ("uSec25", 7), ("uSec100", 8), ("uSec250", 9), ("mSec1", 10), ("mSec2point5", 11), ("mSec10", 12), ("mSec25", 13), ("mSec100", 14), ("mSec250", 15), ("sec1", 16), ("sec10", 17), ("gT10S", 18), ("accUnknown", 19))).clone('accUnknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePtpConfigClockAccuracy.setStatus('current')
zhonePtpStatusTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 17, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("standard", 1), ("uniOnly", 2), ("multiOnly", 3))).clone('standard')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhonePtpStatusTxMode.setStatus('current')
zhonePtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 52)).setObjects(("Zhone-PTP-MIB", "zhonePtpConfigClockMode"), ("Zhone-PTP-MIB", "zhonePtpConfigIpIfIndex"), ("Zhone-PTP-MIB", "zhonePtpConfigSyncMsgInterval"), ("Zhone-PTP-MIB", "zhonePtpConfigAnnounceInterval"), ("Zhone-PTP-MIB", "zhonePtpConfigDelayReqInterval"), ("Zhone-PTP-MIB", "zhonePtpConfigTimeSource"), ("Zhone-PTP-MIB", "zhonePtpConfigClockStratum"), ("Zhone-PTP-MIB", "zhonePtpConfigClockAccuracy"), ("Zhone-PTP-MIB", "zhonePtpConfigVariance"), ("Zhone-PTP-MIB", "zhonePtpConfigPriority1"), ("Zhone-PTP-MIB", "zhonePtpConfigPriority2"), ("Zhone-PTP-MIB", "zhonePtpConfigRowStatus"), ("Zhone-PTP-MIB", "zhonePtpStatusTxMode"), ("Zhone-PTP-MIB", "zhonePtpStatusMacAddress"), ("Zhone-PTP-MIB", "zhonePtpConfigDomain2M"), ("Zhone-PTP-MIB", "zhonePtpConfigDomain1MS"), ("Zhone-PTP-MIB", "zhonePtpConfigAcceptableMaster1"), ("Zhone-PTP-MIB", "zhonePtpConfigAcceptableMaster2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhonePtpGroup = zhonePtpGroup.setStatus('current')
mibBuilder.exportSymbols("Zhone-PTP-MIB", zhonePtpModule=zhonePtpModule, zhonePtpConfigTable=zhonePtpConfigTable, zhonePtpConfigDomain2M=zhonePtpConfigDomain2M, zhonePtpConfigTimeSource=zhonePtpConfigTimeSource, zhonePtpConfigAnnounceInterval=zhonePtpConfigAnnounceInterval, zhonePtpConfigVariance=zhonePtpConfigVariance, zhonePtpConfigClockAccuracy=zhonePtpConfigClockAccuracy, zhonePtpConfigAcceptableMaster2=zhonePtpConfigAcceptableMaster2, zhonePtpConfigDomain1MS=zhonePtpConfigDomain1MS, zhonePtpStatusMacAddress=zhonePtpStatusMacAddress, zhonePtpConfigEntry=zhonePtpConfigEntry, zhonePtpStatusTxMode=zhonePtpStatusTxMode, zhonePtpConfigIpIfIndex=zhonePtpConfigIpIfIndex, zhonePtpStatusEntry=zhonePtpStatusEntry, zhonePtpConfigClockMode=zhonePtpConfigClockMode, zhonePtpConfigIfIndex=zhonePtpConfigIfIndex, zhonePtpConfigPriority1=zhonePtpConfigPriority1, zhonePtpConfigClockStratum=zhonePtpConfigClockStratum, zhonePtpConfigAcceptableMaster1=zhonePtpConfigAcceptableMaster1, zhonePtpGroup=zhonePtpGroup, zhonePtpConfigDelayReqInterval=zhonePtpConfigDelayReqInterval, zhonePtpObjectID=zhonePtpObjectID, zhonePtpConfigPriority2=zhonePtpConfigPriority2, PYSNMP_MODULE_ID=zhonePtpModule, zhonePtpConfigRowStatus=zhonePtpConfigRowStatus, zhonePtpConfigSyncMsgInterval=zhonePtpConfigSyncMsgInterval, zhonePtpStatusTable=zhonePtpStatusTable)
