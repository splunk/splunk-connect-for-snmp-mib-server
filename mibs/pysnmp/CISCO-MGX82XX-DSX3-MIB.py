#
# PySNMP MIB module CISCO-MGX82XX-DSX3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MGX82XX-DSX3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:50:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
dsx3Line, dsx3Framing = mibBuilder.importSymbols("BASIS-MIB", "dsx3Line", "dsx3Framing")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
IpAddress, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, ModuleIdentity, Gauge32, Bits, iso, Integer32, MibIdentifier, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Gauge32", "Bits", "iso", "Integer32", "MibIdentifier", "Unsigned32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoMgx82xxDsx3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 59))
ciscoMgx82xxDsx3MIB.setRevisions(('2003-01-11 00:00',))
if mibBuilder.loadTexts: ciscoMgx82xxDsx3MIB.setLastUpdated('200301110000Z')
if mibBuilder.loadTexts: ciscoMgx82xxDsx3MIB.setOrganization('Cisco Systems, Inc.')
dsx3Config = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1))
dsx3AlarmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2))
dsx3Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3))
dsx3Counter = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4))
dsx3PlcpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 1))
dsx3PlcpAlarmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2))
dsx3PlcpAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3))
dsx3PlcpCounter = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4))
cwDsx3ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1), )
if mibBuilder.loadTexts: cwDsx3ConfigTable.setStatus('current')
cwDsx3ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-DSX3-MIB", "dsx3LineNum"))
if mibBuilder.loadTexts: cwDsx3ConfigEntry.setStatus('current')
dsx3LineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LineNum.setStatus('current')
cwDsx3LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsx3CbitParity", 1), ("g832-g804", 2), ("dsx3M23", 3), ("g751", 4), ("dsx3Unframed", 5), ("e3Unframed", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwDsx3LineType.setStatus('current')
cwDsx3LineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsx3B3ZS", 1), ("e3HDB3", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwDsx3LineCoding.setStatus('current')
cwDsx3LineLength = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessThan225", 1), ("moreThan225", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwDsx3LineLength.setStatus('current')
dsx3LineOOFCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fBits3Of8", 1), ("fBits3Of16", 2), ("notApplicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineOOFCriteria.setStatus('current')
dsx3LineAIScBitsCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("checkCbits", 1), ("ignorebits", 2), ("notApplicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineAIScBitsCheck.setStatus('current')
dsx3LineLoopbackCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dsx3NoLoop", 1), ("dsx3RemoteLineLoop", 2), ("dsx3LocalLineLoop", 3), ("dsx3InbndLocalLoopback", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineLoopbackCommand.setStatus('current')
dsx3LineRcvFEACValidation = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fFEACCodes4Of5", 1), ("fFEACCodes8Of10", 2), ("fFEACCodesDisable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineRcvFEACValidation.setStatus('current')
dsx3LineXmtFEACCode = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsx3SendNoCode", 1), ("dsx3SendLineCode", 2), ("dsx3SendPayloadCode", 3), ("dsx3SendResetCode", 4), ("dsx3SendDS1LoopCode", 5), ("dsx3SendTestPattern", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineXmtFEACCode.setStatus('current')
dsx3LineBERTEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineBERTEnable.setStatus('current')
dsx3LineBERTPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("allZero", 1), ("allOnes", 2), ("alternateOneZero", 3), ("doubleOneZero", 4), ("userOneWord", 5), ("userTwoWords", 6), ("userThreeWords", 7), ("userFourWords", 8), ("pattern2p15minus1", 9), ("pattern2p20minus1", 10), ("pattern2p23minus1", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineBERTPattern.setStatus('current')
dsx3LineBERTResult = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bertFailed", 1), ("bertPassed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LineBERTResult.setStatus('current')
dsx3BERTResultClrButton = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3BERTResultClrButton.setStatus('current')
dsx3TrailTraceOption = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3TrailTraceOption.setStatus('current')
dsx3TxTrailTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3TxTrailTrace.setStatus('current')
dsx3RxTrailTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RxTrailTrace.setStatus('current')
dsx3TxTimingMarker = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("traceable", 1), ("untraceable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3TxTimingMarker.setStatus('current')
dsx3RxTimingMarker = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("traceable", 1), ("untraceable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3RxTimingMarker.setStatus('current')
dsx3TxPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unequipped", 1), ("equipped", 2), ("atm", 3), ("sdhtu12s", 4))).clone('unequipped')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3TxPayloadType.setStatus('current')
dsx3RxPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unequipped", 1), ("equipped", 2), ("atm", 3), ("sdhtu12s", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RxPayloadType.setStatus('current')
dsx3TxTumf = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3TxTumf.setStatus('current')
dsx3RxTumf = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RxTumf.setStatus('current')
dsx3LineEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("modify", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineEnable.setStatus('current')
dsx3FarEndLoopbkLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))).clone(namedValues=NamedValues(("ds1line1", 1), ("ds1line2", 2), ("ds1line3", 3), ("ds1line4", 4), ("ds1line5", 5), ("ds1line6", 6), ("ds1line7", 7), ("ds1line8", 8), ("ds1line9", 9), ("ds1line10", 10), ("ds1line11", 11), ("ds1line12", 12), ("ds1line13", 13), ("ds1line14", 14), ("ds1line15", 15), ("ds1line16", 16), ("ds1line17", 17), ("ds1line18", 18), ("ds1line19", 19), ("ds1line20", 20), ("ds1line21", 21), ("ds1line22", 22), ("ds1line23", 23), ("ds1line24", 24), ("ds1line25", 25), ("ds1line26", 26), ("ds1line27", 27), ("ds1line28", 28), ("ds1line29", 29), ("ds3line", 30)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3FarEndLoopbkLineNum.setStatus('current')
dsx3LineXmtClockSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("backplaneClk", 1), ("recoverClk", 2), ("localClk", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineXmtClockSrc.setStatus('current')
dsx3FarEndLoopbkLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3FarEndLoopbkLineStatus.setStatus('current')
dsx3LineEqualizer = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("intrnlequalizer", 1), ("extequalizer", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineEqualizer.setStatus('current')
dsx3NearEndLoopbkLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3NearEndLoopbkLineStatus.setStatus('current')
dsx3SubRateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3SubRateEnable.setStatus('current')
dsx3DsuSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("dl3100Mode", 1), ("adcKentroxMode", 2), ("larsCom", 3), ("clearChannel", 4), ("dsuAlgorithm2", 5), ("dsuAlgorithm3", 6), ("dsuAlgorithm4", 7), ("dsuAlgorithm5", 8))).clone('dl3100Mode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3DsuSelect.setStatus('current')
dsx3LineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 44736))).setUnits('kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineRate.setStatus('current')
dsx3LineScrambleEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineScrambleEnable.setStatus('current')
dsx3LineNumOfValidEntries = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LineNumOfValidEntries.setStatus('current')
dsx3AlarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1), )
if mibBuilder.loadTexts: dsx3AlarmConfigTable.setStatus('current')
dsx3AlarmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-DSX3-MIB", "dsx3LineNum"))
if mibBuilder.loadTexts: dsx3AlarmConfigEntry.setStatus('current')
dsx3RedSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("minor", 1), ("major", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3RedSeverity.setStatus('current')
dsx3RAISeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("minor", 1), ("major", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3RAISeverity.setStatus('current')
dsx3NEAlarmUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3NEAlarmUpCount.setStatus('current')
dsx3NEAlarmDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3NEAlarmDownCount.setStatus('current')
dsx3NEAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3NEAlarmThreshold.setStatus('current')
dsx3FEAlarmUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3FEAlarmUpCount.setStatus('current')
dsx3FEAlarmDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3FEAlarmDownCount.setStatus('current')
dsx3FEAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3FEAlarmThreshold.setStatus('current')
dsx3StatisticalAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("minor", 1), ("major", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3StatisticalAlarmSeverity.setStatus('current')
dsx3LCV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LCV15MinThreshold.setStatus('current')
dsx3LCV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LCV24HrThreshold.setStatus('current')
dsx3LES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LES15MinThreshold.setStatus('current')
dsx3LES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LES24HrThreshold.setStatus('current')
dsx3LSES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LSES15MinThreshold.setStatus('current')
dsx3LSES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LSES24HrThreshold.setStatus('current')
dsx3PCV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PCV15MinThreshold.setStatus('current')
dsx3PCV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PCV24HrThreshold.setStatus('current')
dsx3PES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PES15MinThreshold.setStatus('current')
dsx3PES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PES24HrThreshold.setStatus('current')
dsx3PSES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PSES15MinThreshold.setStatus('current')
dsx3PSES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PSES24HrThreshold.setStatus('current')
dsx3SEFS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3SEFS15MinThreshold.setStatus('current')
dsx3SEFS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3SEFS24HrThreshold.setStatus('current')
dsx3AISS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3AISS15MinThreshold.setStatus('current')
dsx3AISS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3AISS24HrThreshold.setStatus('current')
dsx3UAS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3UAS15MinThreshold.setStatus('current')
dsx3UAS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3UAS24HrThreshold.setStatus('current')
dsx3E3BIP8CV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3E3BIP8CV15MinThreshold.setStatus('current')
dsx3E3BIP8CV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3E3BIP8CV24HrThreshold.setStatus('current')
dsx3E3BIP8ES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3E3BIP8ES15MinThreshold.setStatus('current')
dsx3E3BIP8ES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3E3BIP8ES24HrThreshold.setStatus('current')
dsx3E3BIP8SES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3E3BIP8SES15MinThreshold.setStatus('current')
dsx3E3BIP8SES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3E3BIP8SES24HrThreshold.setStatus('current')
dsx3CCV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3CCV15MinThreshold.setStatus('current')
dsx3CCV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3CCV24HrThreshold.setStatus('current')
dsx3CES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3CES15MinThreshold.setStatus('current')
dsx3CES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3CES24HrThreshold.setStatus('current')
dsx3CSES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3CSES15MinThreshold.setStatus('current')
dsx3CSES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 2, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3CSES24HrThreshold.setStatus('current')
dsx3AlarmTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1), )
if mibBuilder.loadTexts: dsx3AlarmTable.setStatus('current')
dsx3AlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-DSX3-MIB", "dsx3LineNum"))
if mibBuilder.loadTexts: dsx3AlarmEntry.setStatus('current')
dsx3LineAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LineAlarmState.setStatus('current')
dsx3LineStatisticalAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LineStatisticalAlarmState.setStatus('current')
dsx3LCVCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LCVCurrent.setStatus('current')
dsx3LCV15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LCV15MinBucket.setStatus('current')
dsx3LCV24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LCV24HrBucket.setStatus('current')
dsx3LESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LESCurrent.setStatus('current')
dsx3LES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LES15MinBucket.setStatus('current')
dsx3LES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LES24HrBucket.setStatus('current')
dsx3LSESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LSESCurrent.setStatus('current')
dsx3LSES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LSES15MinBucket.setStatus('current')
dsx3LSES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LSES24HrBucket.setStatus('current')
dsx3PCVCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PCVCurrent.setStatus('current')
dsx3PCV15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PCV15MinBucket.setStatus('current')
dsx3PCV24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PCV24HrBucket.setStatus('current')
dsx3PESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PESCurrent.setStatus('current')
dsx3PES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PES15MinBucket.setStatus('current')
dsx3PES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PES24HrBucket.setStatus('current')
dsx3PSESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PSESCurrent.setStatus('current')
dsx3PSES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PSES15MinBucket.setStatus('current')
dsx3PSES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PSES24HrBucket.setStatus('current')
dsx3SEFSCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3SEFSCurrent.setStatus('current')
dsx3SEFS15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3SEFS15MinBucket.setStatus('current')
dsx3SEFS24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3SEFS24HrBucket.setStatus('current')
dsx3AISSCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3AISSCurrent.setStatus('current')
dsx3AISS15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3AISS15MinBucket.setStatus('current')
dsx3AISS24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3AISS24HrBucket.setStatus('current')
dsx3UASCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3UASCurrent.setStatus('current')
dsx3UAS15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3UAS15MinBucket.setStatus('current')
dsx3UAS24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3UAS24HrBucket.setStatus('current')
dsx3PercentLcvEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PercentLcvEFS.setStatus('current')
dsx3E3BIP8CVCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8CVCurrent.setStatus('current')
dsx3E3BIP8CV15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8CV15MinBucket.setStatus('current')
dsx3E3BIP8CV24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8CV24HrBucket.setStatus('current')
dsx3E3BIP8ESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8ESCurrent.setStatus('current')
dsx3E3BIP8ES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8ES15MinBucket.setStatus('current')
dsx3E3BIP8ES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8ES24HrBucket.setStatus('current')
dsx3E3BIP8SESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8SESCurrent.setStatus('current')
dsx3E3BIP8SES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8SES15MinBucket.setStatus('current')
dsx3E3BIP8SES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3E3BIP8SES24HrBucket.setStatus('current')
dsx3LineAlarmClrButton = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3LineAlarmClrButton.setStatus('current')
dsx3CCVCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CCVCurrent.setStatus('current')
dsx3CCV15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CCV15MinBucket.setStatus('current')
dsx3CCV24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CCV24HrBucket.setStatus('current')
dsx3CESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CESCurrent.setStatus('current')
dsx3CES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CES15MinBucket.setStatus('current')
dsx3CES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CES24HrBucket.setStatus('current')
dsx3CSESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CSESCurrent.setStatus('current')
dsx3CSES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CSES15MinBucket.setStatus('current')
dsx3CSES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 3, 1, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CSES24HrBucket.setStatus('current')
dsx3CounterTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1), )
if mibBuilder.loadTexts: dsx3CounterTable.setStatus('current')
dsx3CounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-DSX3-MIB", "dsx3LineNum"))
if mibBuilder.loadTexts: dsx3CounterEntry.setStatus('current')
dsx3RcvLOSCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RcvLOSCount.setStatus('current')
dsx3RcvOOFCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RcvOOFCount.setStatus('current')
dsx3RAICount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RAICount.setStatus('current')
dsx3CCVCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3CCVCount.setStatus('current')
dsx3FECount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3FECount.setStatus('current')
dsx3AtmHECCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3AtmHECCount.setStatus('current')
dsx3AtmHECSecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3AtmHECSecCount.setStatus('current')
dsx3AtmSEHECSecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3AtmSEHECSecCount.setStatus('current')
dsx3CounterClrButton = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3CounterClrButton.setStatus('current')
dsx3RcvPERRCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RcvPERRCounter.setStatus('current')
dsx3RcvFEBECounter = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RcvFEBECounter.setStatus('current')
dsx3RcvEXZCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3RcvEXZCounter.setStatus('current')
dsx3LCVCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3LCVCount.setStatus('current')
dsx3PlcpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 1, 1), )
if mibBuilder.loadTexts: dsx3PlcpConfigTable.setStatus('current')
dsx3PlcpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 1, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpNum"))
if mibBuilder.loadTexts: dsx3PlcpConfigEntry.setStatus('current')
dsx3PlcpNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpNum.setStatus('current')
dsx3PlcpCellFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("framingByPlcp", 1), ("framingbyAtmHec", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpCellFraming.setStatus('current')
dsx3PlcpPayloadScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableScrambling", 1), ("disableScrambling", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpPayloadScramble.setStatus('current')
dsx3PlcpLoopCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noLoop", 1), ("remoteLineLoop", 2), ("localLineLoop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpLoopCommand.setStatus('current')
dsx3PlcpNumOfValidEntries = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpNumOfValidEntries.setStatus('current')
dsx3PlcpAlarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1), )
if mibBuilder.loadTexts: dsx3PlcpAlarmConfigTable.setStatus('current')
dsx3PlcpAlarmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpNum"))
if mibBuilder.loadTexts: dsx3PlcpAlarmConfigEntry.setStatus('current')
dsx3PlcpRedSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("minor", 1), ("major", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpRedSeverity.setStatus('current')
dsx3PlcpRAISeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("minor", 1), ("major", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpRAISeverity.setStatus('current')
dsx3PlcpLssSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("minor", 1), ("major", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpLssSeverity.setStatus('current')
dsx3PlcpLssEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lssEnable", 1), ("lssDisable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpLssEnable.setStatus('current')
dsx3PlcpLssCodeConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpLssCodeConnected.setStatus('current')
dsx3PlcpLssCodeRxLinkDn = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpLssCodeRxLinkDn.setStatus('current')
dsx3PlcpLssCodeRxLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpLssCodeRxLinkUp.setStatus('current')
dsx3PlcpStatisticalAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("minor", 1), ("major", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpStatisticalAlarmSeverity.setStatus('current')
dsx3PlcpBip8CV15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpBip8CV15MinThreshold.setStatus('current')
dsx3PlcpBip8CV24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpBip8CV24HrThreshold.setStatus('current')
dsx3PlcpBip8ES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpBip8ES15MinThreshold.setStatus('current')
dsx3PlcpBip8ES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpBip8ES24HrThreshold.setStatus('current')
dsx3PlcpBip8SES15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpBip8SES15MinThreshold.setStatus('current')
dsx3PlcpBip8SES24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpBip8SES24HrThreshold.setStatus('current')
dsx3PlcpSEFS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpSEFS15MinThreshold.setStatus('current')
dsx3PlcpSEFS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpSEFS24HrThreshold.setStatus('current')
dsx3PlcpUAS15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpUAS15MinThreshold.setStatus('current')
dsx3PlcpUAS24HrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpUAS24HrThreshold.setStatus('current')
dsx3PlcpAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1), )
if mibBuilder.loadTexts: dsx3PlcpAlarmTable.setStatus('current')
dsx3PlcpAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpNum"))
if mibBuilder.loadTexts: dsx3PlcpAlarmEntry.setStatus('current')
dsx3PlcpLineAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpLineAlarmState.setStatus('current')
dsx3PlcpLineStatisticalAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpLineStatisticalAlarmState.setStatus('current')
dsx3PlcpBip8CVCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8CVCurrent.setStatus('current')
dsx3PlcpBip8CV15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8CV15MinBucket.setStatus('current')
dsx3PlcpBip8CV24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8CV24HrBucket.setStatus('current')
dsx3PlcpBip8ESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8ESCurrent.setStatus('current')
dsx3PlcpBip8ES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8ES15MinBucket.setStatus('current')
dsx3PlcpBip8ES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8ES24HrBucket.setStatus('current')
dsx3PlcpBip8SESCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8SESCurrent.setStatus('current')
dsx3PlcpBip8SES15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8SES15MinBucket.setStatus('current')
dsx3PlcpBip8SES24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpBip8SES24HrBucket.setStatus('current')
dsx3PlcpSEFSCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpSEFSCurrent.setStatus('current')
dsx3PlcpSEFS15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpSEFS15MinBucket.setStatus('current')
dsx3PlcpSEFS24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpSEFS24HrBucket.setStatus('current')
dsx3PlcpUASCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpUASCurrent.setStatus('current')
dsx3PlcpUAS15MinBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpUAS15MinBucket.setStatus('current')
dsx3PlcpUAS24HrBucket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpUAS24HrBucket.setStatus('current')
dsx3PlcpAlarmClrButton = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsx3PlcpAlarmNoAction", 1), ("dsx3PlcpAlarmClear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpAlarmClrButton.setStatus('current')
dsx3PlcpCounterTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1), )
if mibBuilder.loadTexts: dsx3PlcpCounterTable.setStatus('current')
dsx3PlcpCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpNum"))
if mibBuilder.loadTexts: dsx3PlcpCounterEntry.setStatus('current')
dsx3PlcpRcvBip8Count = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpRcvBip8Count.setStatus('current')
dsx3PlcpRcvOOFCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpRcvOOFCount.setStatus('current')
dsx3PlcpRcvRAICount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpRcvRAICount.setStatus('current')
dsx3PlcpFECount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpFECount.setStatus('current')
dsx3PlcpFESecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpFESecCount.setStatus('current')
dsx3PlcpSEFESecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpSEFESecCount.setStatus('current')
dsx3PlcpFEBECount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpFEBECount.setStatus('current')
dsx3PlcpFEBESecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpFEBESecCount.setStatus('current')
dsx3PlcpSEFEBESecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpSEFEBESecCount.setStatus('current')
dsx3PlcpHECCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpHECCount.setStatus('current')
dsx3PlcpHECSecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpHECSecCount.setStatus('current')
dsx3PlcpSEHECSecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpSEHECSecCount.setStatus('current')
dsx3PlcpCounterClrButton = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsx3PlcpCounterNoAction", 1), ("dsx3PlcpCounterClear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx3PlcpCounterClrButton.setStatus('current')
dsx3PlcpCounterValidEntries = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx3PlcpCounterValidEntries.setStatus('current')
cmDsx3MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 59, 2))
cmDsx3MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1))
cmDsx3MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 2))
cmDsx3Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 2, 1)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "cmDsx3GeneralGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3ConfGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3BertConfigGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3StatsGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3E3AlarmConfGenGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3AlarmStatsGenGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3PlcpConfGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3PlcpStatsGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3PlcpAlarmConfGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3PlcpAlarmGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3E3ConfGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3AlarmConfGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3E3AlarmConfGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3AlarmStatsGroup"), ("CISCO-MGX82XX-DSX3-MIB", "cmDsx3E3AlarmStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3Compliance = cmDsx3Compliance.setStatus('current')
cmDsx3GeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 1)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3LineNumOfValidEntries"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpNumOfValidEntries"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpCounterValidEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3GeneralGroup = cmDsx3GeneralGroup.setStatus('current')
cmDsx3ConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 2)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3LineNum"), ("CISCO-MGX82XX-DSX3-MIB", "cwDsx3LineType"), ("CISCO-MGX82XX-DSX3-MIB", "cwDsx3LineCoding"), ("CISCO-MGX82XX-DSX3-MIB", "cwDsx3LineLength"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineOOFCriteria"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineAIScBitsCheck"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineLoopbackCommand"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineXmtFEACCode"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineEnable"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3FarEndLoopbkLineNum"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineXmtClockSrc"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3FarEndLoopbkLineStatus"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineEqualizer"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3NearEndLoopbkLineStatus"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3SubRateEnable"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3DsuSelect"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineRate"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineScrambleEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3ConfGroup = cmDsx3ConfGroup.setStatus('current')
cmDsx3E3ConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 3)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3LineRcvFEACValidation"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3TrailTraceOption"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3TxTrailTrace"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RxTrailTrace"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3TxTimingMarker"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RxTimingMarker"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3TxPayloadType"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RxPayloadType"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3TxTumf"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RxTumf"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3E3ConfGroup = cmDsx3E3ConfGroup.setStatus('current')
cmDsx3BertConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 4)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3LineBERTEnable"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineBERTPattern"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineBERTResult"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3BERTResultClrButton"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3BertConfigGroup = cmDsx3BertConfigGroup.setStatus('current')
cmDsx3StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 5)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3RcvLOSCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RcvOOFCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RAICount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CCVCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3FECount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3AtmHECCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3AtmHECSecCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3AtmSEHECSecCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CounterClrButton"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RcvPERRCounter"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RcvFEBECounter"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RcvEXZCounter"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LCVCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3StatsGroup = cmDsx3StatsGroup.setStatus('current')
cmDsx3E3AlarmConfGenGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 6)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3RedSeverity"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3RAISeverity"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3NEAlarmUpCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3NEAlarmDownCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3NEAlarmThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3FEAlarmUpCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3FEAlarmDownCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3FEAlarmThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3StatisticalAlarmSeverity"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LCV15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LCV24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LES24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LSES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LSES24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3SEFS15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3SEFS24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3UAS15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3UAS24HrThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3E3AlarmConfGenGroup = cmDsx3E3AlarmConfGenGroup.setStatus('current')
cmDsx3AlarmConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 7)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3PCV15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PCV24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PES24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PSES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PSES24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3AISS15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3AISS24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CCV15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CCV24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CES24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CSES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CSES24HrThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3AlarmConfGroup = cmDsx3AlarmConfGroup.setStatus('current')
cmDsx3E3AlarmConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 8)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8CV15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8CV24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8ES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8ES24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8SES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8SES24HrThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3E3AlarmConfGroup = cmDsx3E3AlarmConfGroup.setStatus('current')
cmDsx3AlarmStatsGenGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 9)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3LineAlarmState"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineStatisticalAlarmState"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LCVCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LCV15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LCV24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LES24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LSESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LSES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LSES24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3SEFSCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3SEFS15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3SEFS24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3UASCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3UAS15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3UAS24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PercentLcvEFS"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3LineAlarmClrButton"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3AlarmStatsGenGroup = cmDsx3AlarmStatsGenGroup.setStatus('current')
cmDsx3AlarmStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 10)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3PCVCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PCV15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PCV24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PES24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PSESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PSES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PSES24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3AISSCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3AISS15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3AISS24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CCVCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CCV15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CCV24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CES24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CSESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CSES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3CSES24HrBucket"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3AlarmStatsGroup = cmDsx3AlarmStatsGroup.setStatus('current')
cmDsx3E3AlarmStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 11)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8CVCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8CV15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8CV24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8ESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8ES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8ES24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8SESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8SES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3E3BIP8SES24HrBucket"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3E3AlarmStatsGroup = cmDsx3E3AlarmStatsGroup.setStatus('current')
cmDsx3PlcpConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 12)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpNum"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpCellFraming"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpPayloadScramble"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpLoopCommand"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3PlcpConfGroup = cmDsx3PlcpConfGroup.setStatus('current')
cmDsx3PlcpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 13)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpRcvBip8Count"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpRcvOOFCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpRcvRAICount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpFECount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpFESecCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpSEFESecCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpFEBECount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpFEBESecCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpSEFEBESecCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpHECCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpHECSecCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpSEHECSecCount"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpCounterClrButton"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3PlcpStatsGroup = cmDsx3PlcpStatsGroup.setStatus('current')
cmDsx3PlcpAlarmConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 14)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpRedSeverity"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpRAISeverity"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpLssSeverity"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpLssEnable"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpLssCodeConnected"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpLssCodeRxLinkDn"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpLssCodeRxLinkUp"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpStatisticalAlarmSeverity"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8CV15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8CV24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8ES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8ES24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8SES15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8SES24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpSEFS15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpSEFS24HrThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpUAS15MinThreshold"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpUAS24HrThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3PlcpAlarmConfGroup = cmDsx3PlcpAlarmConfGroup.setStatus('current')
cmDsx3PlcpAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 59, 2, 1, 15)).setObjects(("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpLineAlarmState"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpLineStatisticalAlarmState"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8CVCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8CV15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8CV24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8ESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8ES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8ES24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8SESCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8SES15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpBip8SES24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpSEFSCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpSEFS15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpSEFS24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpUASCurrent"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpUAS15MinBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpUAS24HrBucket"), ("CISCO-MGX82XX-DSX3-MIB", "dsx3PlcpAlarmClrButton"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmDsx3PlcpAlarmGroup = cmDsx3PlcpAlarmGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-MGX82XX-DSX3-MIB", dsx3PlcpUAS15MinBucket=dsx3PlcpUAS15MinBucket, dsx3Alarm=dsx3Alarm, dsx3PlcpAlarm=dsx3PlcpAlarm, cmDsx3BertConfigGroup=cmDsx3BertConfigGroup, dsx3RAISeverity=dsx3RAISeverity, dsx3PSES24HrBucket=dsx3PSES24HrBucket, dsx3LSESCurrent=dsx3LSESCurrent, dsx3PlcpLineStatisticalAlarmState=dsx3PlcpLineStatisticalAlarmState, dsx3LSES15MinThreshold=dsx3LSES15MinThreshold, dsx3PlcpCellFraming=dsx3PlcpCellFraming, dsx3PlcpSEFS15MinThreshold=dsx3PlcpSEFS15MinThreshold, dsx3LCVCount=dsx3LCVCount, dsx3RcvFEBECounter=dsx3RcvFEBECounter, dsx3PlcpBip8ES24HrBucket=dsx3PlcpBip8ES24HrBucket, dsx3PlcpLssEnable=dsx3PlcpLssEnable, dsx3PlcpLssSeverity=dsx3PlcpLssSeverity, dsx3PES15MinBucket=dsx3PES15MinBucket, dsx3PlcpRedSeverity=dsx3PlcpRedSeverity, dsx3TxPayloadType=dsx3TxPayloadType, dsx3LineRcvFEACValidation=dsx3LineRcvFEACValidation, dsx3FEAlarmDownCount=dsx3FEAlarmDownCount, dsx3PlcpAlarmClrButton=dsx3PlcpAlarmClrButton, cmDsx3E3AlarmStatsGroup=cmDsx3E3AlarmStatsGroup, dsx3LES15MinThreshold=dsx3LES15MinThreshold, dsx3PlcpSEFS15MinBucket=dsx3PlcpSEFS15MinBucket, cmDsx3PlcpAlarmConfGroup=cmDsx3PlcpAlarmConfGroup, dsx3PlcpConfig=dsx3PlcpConfig, dsx3LineNum=dsx3LineNum, dsx3PlcpUASCurrent=dsx3PlcpUASCurrent, dsx3PES15MinThreshold=dsx3PES15MinThreshold, dsx3E3BIP8ES15MinBucket=dsx3E3BIP8ES15MinBucket, dsx3RcvOOFCount=dsx3RcvOOFCount, dsx3PlcpNum=dsx3PlcpNum, dsx3PlcpBip8CV24HrThreshold=dsx3PlcpBip8CV24HrThreshold, dsx3LineBERTResult=dsx3LineBERTResult, dsx3PlcpFEBESecCount=dsx3PlcpFEBESecCount, dsx3RcvLOSCount=dsx3RcvLOSCount, dsx3SEFS15MinBucket=dsx3SEFS15MinBucket, dsx3PSES15MinBucket=dsx3PSES15MinBucket, cmDsx3PlcpAlarmGroup=cmDsx3PlcpAlarmGroup, dsx3E3BIP8SES24HrBucket=dsx3E3BIP8SES24HrBucket, dsx3PlcpAlarmEntry=dsx3PlcpAlarmEntry, cmDsx3MIBCompliances=cmDsx3MIBCompliances, dsx3TrailTraceOption=dsx3TrailTraceOption, dsx3PlcpAlarmConfigTable=dsx3PlcpAlarmConfigTable, dsx3PlcpLssCodeRxLinkUp=dsx3PlcpLssCodeRxLinkUp, cmDsx3GeneralGroup=cmDsx3GeneralGroup, dsx3AISSCurrent=dsx3AISSCurrent, dsx3LSES24HrBucket=dsx3LSES24HrBucket, dsx3AtmSEHECSecCount=dsx3AtmSEHECSecCount, dsx3PlcpPayloadScramble=dsx3PlcpPayloadScramble, dsx3LCVCurrent=dsx3LCVCurrent, dsx3LineXmtClockSrc=dsx3LineXmtClockSrc, dsx3PlcpRcvRAICount=dsx3PlcpRcvRAICount, dsx3UASCurrent=dsx3UASCurrent, cmDsx3Compliance=cmDsx3Compliance, dsx3PCV24HrBucket=dsx3PCV24HrBucket, dsx3CCV24HrThreshold=dsx3CCV24HrThreshold, dsx3FarEndLoopbkLineStatus=dsx3FarEndLoopbkLineStatus, dsx3CCVCurrent=dsx3CCVCurrent, cmDsx3PlcpStatsGroup=cmDsx3PlcpStatsGroup, dsx3TxTrailTrace=dsx3TxTrailTrace, dsx3NEAlarmUpCount=dsx3NEAlarmUpCount, dsx3LES15MinBucket=dsx3LES15MinBucket, dsx3StatisticalAlarmSeverity=dsx3StatisticalAlarmSeverity, dsx3PlcpBip8CV15MinBucket=dsx3PlcpBip8CV15MinBucket, dsx3PlcpSEFEBESecCount=dsx3PlcpSEFEBESecCount, dsx3CCV15MinThreshold=dsx3CCV15MinThreshold, dsx3PlcpAlarmTable=dsx3PlcpAlarmTable, dsx3Config=dsx3Config, dsx3CES15MinThreshold=dsx3CES15MinThreshold, dsx3E3BIP8ESCurrent=dsx3E3BIP8ESCurrent, dsx3PlcpBip8ES24HrThreshold=dsx3PlcpBip8ES24HrThreshold, cmDsx3ConfGroup=cmDsx3ConfGroup, dsx3AISS15MinThreshold=dsx3AISS15MinThreshold, dsx3AlarmEntry=dsx3AlarmEntry, dsx3CSES24HrThreshold=dsx3CSES24HrThreshold, dsx3PlcpLoopCommand=dsx3PlcpLoopCommand, dsx3CCVCount=dsx3CCVCount, dsx3PlcpUAS15MinThreshold=dsx3PlcpUAS15MinThreshold, dsx3TxTumf=dsx3TxTumf, dsx3PlcpBip8SES24HrThreshold=dsx3PlcpBip8SES24HrThreshold, dsx3AtmHECCount=dsx3AtmHECCount, dsx3LineStatisticalAlarmState=dsx3LineStatisticalAlarmState, dsx3UAS15MinThreshold=dsx3UAS15MinThreshold, dsx3CCV24HrBucket=dsx3CCV24HrBucket, dsx3LineNumOfValidEntries=dsx3LineNumOfValidEntries, dsx3PlcpHECCount=dsx3PlcpHECCount, dsx3E3BIP8CV15MinThreshold=dsx3E3BIP8CV15MinThreshold, dsx3RedSeverity=dsx3RedSeverity, dsx3PlcpNumOfValidEntries=dsx3PlcpNumOfValidEntries, dsx3FEAlarmUpCount=dsx3FEAlarmUpCount, dsx3PlcpLssCodeConnected=dsx3PlcpLssCodeConnected, dsx3PlcpCounterClrButton=dsx3PlcpCounterClrButton, cmDsx3E3AlarmConfGenGroup=cmDsx3E3AlarmConfGenGroup, dsx3PlcpRcvBip8Count=dsx3PlcpRcvBip8Count, dsx3LineRate=dsx3LineRate, dsx3PlcpLssCodeRxLinkDn=dsx3PlcpLssCodeRxLinkDn, dsx3NearEndLoopbkLineStatus=dsx3NearEndLoopbkLineStatus, dsx3LineXmtFEACCode=dsx3LineXmtFEACCode, dsx3AlarmConfigTable=dsx3AlarmConfigTable, dsx3LCV15MinThreshold=dsx3LCV15MinThreshold, dsx3SEFSCurrent=dsx3SEFSCurrent, dsx3PSES15MinThreshold=dsx3PSES15MinThreshold, dsx3E3BIP8SES24HrThreshold=dsx3E3BIP8SES24HrThreshold, dsx3PlcpBip8CV24HrBucket=dsx3PlcpBip8CV24HrBucket, dsx3PSES24HrThreshold=dsx3PSES24HrThreshold, cmDsx3StatsGroup=cmDsx3StatsGroup, dsx3PlcpSEFS24HrBucket=dsx3PlcpSEFS24HrBucket, dsx3CES24HrThreshold=dsx3CES24HrThreshold, dsx3PlcpBip8ESCurrent=dsx3PlcpBip8ESCurrent, dsx3LineAlarmState=dsx3LineAlarmState, dsx3PlcpSEHECSecCount=dsx3PlcpSEHECSecCount, dsx3PlcpHECSecCount=dsx3PlcpHECSecCount, dsx3AtmHECSecCount=dsx3AtmHECSecCount, dsx3PlcpUAS24HrThreshold=dsx3PlcpUAS24HrThreshold, dsx3AlarmTable=dsx3AlarmTable, dsx3LCV15MinBucket=dsx3LCV15MinBucket, dsx3PlcpBip8ES15MinBucket=dsx3PlcpBip8ES15MinBucket, dsx3RcvEXZCounter=dsx3RcvEXZCounter, cmDsx3MIBGroups=cmDsx3MIBGroups, dsx3PlcpCounterValidEntries=dsx3PlcpCounterValidEntries, cmDsx3E3ConfGroup=cmDsx3E3ConfGroup, dsx3NEAlarmThreshold=dsx3NEAlarmThreshold, dsx3E3BIP8SES15MinThreshold=dsx3E3BIP8SES15MinThreshold, ciscoMgx82xxDsx3MIB=ciscoMgx82xxDsx3MIB, dsx3LSES15MinBucket=dsx3LSES15MinBucket, dsx3RxTimingMarker=dsx3RxTimingMarker, cmDsx3E3AlarmConfGroup=cmDsx3E3AlarmConfGroup, dsx3E3BIP8CV15MinBucket=dsx3E3BIP8CV15MinBucket, dsx3CounterEntry=dsx3CounterEntry, dsx3PlcpBip8ES15MinThreshold=dsx3PlcpBip8ES15MinThreshold, dsx3PCVCurrent=dsx3PCVCurrent, dsx3PlcpSEFS24HrThreshold=dsx3PlcpSEFS24HrThreshold, dsx3CSES15MinBucket=dsx3CSES15MinBucket, dsx3PercentLcvEFS=dsx3PercentLcvEFS, dsx3AlarmConfig=dsx3AlarmConfig, dsx3UAS24HrBucket=dsx3UAS24HrBucket, dsx3E3BIP8SESCurrent=dsx3E3BIP8SESCurrent, dsx3SEFS15MinThreshold=dsx3SEFS15MinThreshold, dsx3PlcpConfigTable=dsx3PlcpConfigTable, dsx3PlcpBip8CVCurrent=dsx3PlcpBip8CVCurrent, dsx3CES15MinBucket=dsx3CES15MinBucket, dsx3RxTrailTrace=dsx3RxTrailTrace, cwDsx3LineType=cwDsx3LineType, cmDsx3AlarmConfGroup=cmDsx3AlarmConfGroup, dsx3LineBERTEnable=dsx3LineBERTEnable, cwDsx3ConfigEntry=cwDsx3ConfigEntry, cwDsx3LineLength=cwDsx3LineLength, dsx3LES24HrBucket=dsx3LES24HrBucket, cmDsx3AlarmStatsGroup=cmDsx3AlarmStatsGroup, dsx3LineScrambleEnable=dsx3LineScrambleEnable, dsx3PlcpRcvOOFCount=dsx3PlcpRcvOOFCount, dsx3PlcpAlarmConfigEntry=dsx3PlcpAlarmConfigEntry, dsx3PlcpBip8SES15MinBucket=dsx3PlcpBip8SES15MinBucket, dsx3CSES24HrBucket=dsx3CSES24HrBucket, cwDsx3LineCoding=cwDsx3LineCoding, cwDsx3ConfigTable=cwDsx3ConfigTable, dsx3CounterTable=dsx3CounterTable, dsx3CESCurrent=dsx3CESCurrent, dsx3BERTResultClrButton=dsx3BERTResultClrButton, dsx3PES24HrBucket=dsx3PES24HrBucket, dsx3LineEnable=dsx3LineEnable, dsx3PlcpSEFESecCount=dsx3PlcpSEFESecCount, dsx3E3BIP8CVCurrent=dsx3E3BIP8CVCurrent, dsx3FarEndLoopbkLineNum=dsx3FarEndLoopbkLineNum, dsx3PlcpCounterEntry=dsx3PlcpCounterEntry, dsx3RxPayloadType=dsx3RxPayloadType, dsx3LineEqualizer=dsx3LineEqualizer, dsx3SEFS24HrBucket=dsx3SEFS24HrBucket, dsx3PlcpFEBECount=dsx3PlcpFEBECount, dsx3LES24HrThreshold=dsx3LES24HrThreshold, dsx3PlcpStatisticalAlarmSeverity=dsx3PlcpStatisticalAlarmSeverity, dsx3PCV15MinThreshold=dsx3PCV15MinThreshold, dsx3RAICount=dsx3RAICount, dsx3PES24HrThreshold=dsx3PES24HrThreshold, dsx3LineAIScBitsCheck=dsx3LineAIScBitsCheck, dsx3CSES15MinThreshold=dsx3CSES15MinThreshold, dsx3E3BIP8SES15MinBucket=dsx3E3BIP8SES15MinBucket, dsx3PlcpSEFSCurrent=dsx3PlcpSEFSCurrent, dsx3LineOOFCriteria=dsx3LineOOFCriteria, dsx3UAS24HrThreshold=dsx3UAS24HrThreshold, dsx3LESCurrent=dsx3LESCurrent, dsx3PlcpRAISeverity=dsx3PlcpRAISeverity, dsx3PlcpBip8SES15MinThreshold=dsx3PlcpBip8SES15MinThreshold, dsx3PlcpConfigEntry=dsx3PlcpConfigEntry, cmDsx3AlarmStatsGenGroup=cmDsx3AlarmStatsGenGroup, dsx3E3BIP8ES24HrThreshold=dsx3E3BIP8ES24HrThreshold, dsx3E3BIP8CV24HrThreshold=dsx3E3BIP8CV24HrThreshold, dsx3RcvPERRCounter=dsx3RcvPERRCounter, dsx3PlcpBip8SES24HrBucket=dsx3PlcpBip8SES24HrBucket, dsx3AISS24HrThreshold=dsx3AISS24HrThreshold, cmDsx3MIBConformance=cmDsx3MIBConformance, dsx3AISS15MinBucket=dsx3AISS15MinBucket, dsx3Counter=dsx3Counter, dsx3PSESCurrent=dsx3PSESCurrent, dsx3UAS15MinBucket=dsx3UAS15MinBucket, dsx3PCV15MinBucket=dsx3PCV15MinBucket, dsx3CCV15MinBucket=dsx3CCV15MinBucket, dsx3PlcpAlarmConfig=dsx3PlcpAlarmConfig, dsx3LSES24HrThreshold=dsx3LSES24HrThreshold, dsx3AISS24HrBucket=dsx3AISS24HrBucket, dsx3E3BIP8ES24HrBucket=dsx3E3BIP8ES24HrBucket, dsx3PESCurrent=dsx3PESCurrent, dsx3LineBERTPattern=dsx3LineBERTPattern, dsx3CES24HrBucket=dsx3CES24HrBucket, dsx3DsuSelect=dsx3DsuSelect, dsx3CounterClrButton=dsx3CounterClrButton, dsx3AlarmConfigEntry=dsx3AlarmConfigEntry, dsx3LineLoopbackCommand=dsx3LineLoopbackCommand, dsx3LineAlarmClrButton=dsx3LineAlarmClrButton, dsx3PCV24HrThreshold=dsx3PCV24HrThreshold, dsx3CSESCurrent=dsx3CSESCurrent, PYSNMP_MODULE_ID=ciscoMgx82xxDsx3MIB, dsx3SubRateEnable=dsx3SubRateEnable, dsx3FECount=dsx3FECount, dsx3SEFS24HrThreshold=dsx3SEFS24HrThreshold, dsx3PlcpUAS24HrBucket=dsx3PlcpUAS24HrBucket, dsx3RxTumf=dsx3RxTumf, dsx3PlcpCounterTable=dsx3PlcpCounterTable, dsx3PlcpCounter=dsx3PlcpCounter, dsx3FEAlarmThreshold=dsx3FEAlarmThreshold, dsx3PlcpFECount=dsx3PlcpFECount, dsx3PlcpLineAlarmState=dsx3PlcpLineAlarmState, dsx3PlcpBip8SESCurrent=dsx3PlcpBip8SESCurrent, cmDsx3PlcpConfGroup=cmDsx3PlcpConfGroup, dsx3NEAlarmDownCount=dsx3NEAlarmDownCount, dsx3TxTimingMarker=dsx3TxTimingMarker, dsx3LCV24HrThreshold=dsx3LCV24HrThreshold, dsx3PlcpBip8CV15MinThreshold=dsx3PlcpBip8CV15MinThreshold, dsx3LCV24HrBucket=dsx3LCV24HrBucket, dsx3E3BIP8CV24HrBucket=dsx3E3BIP8CV24HrBucket, dsx3PlcpFESecCount=dsx3PlcpFESecCount, dsx3E3BIP8ES15MinThreshold=dsx3E3BIP8ES15MinThreshold)
