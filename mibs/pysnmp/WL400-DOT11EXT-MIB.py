#
# PySNMP MIB module WL400-DOT11EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WL400-DOT11EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, iso, Integer32, Gauge32, IpAddress, NotificationType, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Bits, Counter32, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "Integer32", "Gauge32", "IpAddress", "NotificationType", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Bits", "Counter32", "Counter64", "Bits")
TextualConvention, RowStatus, DisplayString, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "MacAddress", "TruthValue")
wl400Products, wl400Modules = mibBuilder.importSymbols("WL400-GLOBAL-REG", "wl400Products", "wl400Modules")
dot11ExtMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 232, 143, 1, 2))
if mibBuilder.loadTexts: dot11ExtMibModule.setLastUpdated('9906020000Z')
if mibBuilder.loadTexts: dot11ExtMibModule.setOrganization('Compaq Computer Corporation')
dot11ExtMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1))
dot11ExtConf = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 1))
dot11ExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 1))
dot11ExtCompl = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 2))
dot11ExtGenObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 2))
smt = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1))
dot11ExtAPObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 3))
assoc = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1))
security = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2))
dot11ExtWBUObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 5))
roam = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1))
dot11ExtEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 4))
dot11ExtEventsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 145, 1, 4, 0))
smtAssociationID = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtAssociationID.setStatus('current')
smtCapabilityInfo = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 2), Bits().clone(namedValues=NamedValues(("privacy", 0), ("cfPollRequest", 1), ("cfPollable", 2), ("ibss", 3), ("ess", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtCapabilityInfo.setStatus('current')
smtPowerSaveInterval = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtPowerSaveInterval.setStatus('current')
smtListenInterval = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtListenInterval.setStatus('current')
smtATIMWindow = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtATIMWindow.setStatus('current')
smtOperationalChannels = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtOperationalChannels.setStatus('current')
smtCurrentBSSID = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtCurrentBSSID.setStatus('current')
smtCurrentSSID = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtCurrentSSID.setStatus('current')
smtCurrentBSSType = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("infrastructure", 1), ("adhoc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtCurrentBSSType.setStatus('current')
smtPublicKeyEnable = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtPublicKeyEnable.setStatus('current')
smtQualityLevel0 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtQualityLevel0.setStatus('current')
smtQualityLevel1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtQualityLevel1.setStatus('current')
smtQualityLevel2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtQualityLevel2.setStatus('current')
smtQualityPenalty = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtQualityPenalty.setStatus('current')
smtStationDBTimeout = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtStationDBTimeout.setStatus('current')
smtQualityIndicator = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtQualityIndicator.setStatus('current')
smtQualityUpperLimit = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtQualityUpperLimit.setStatus('current')
smtQualityLowerLimit = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtQualityLowerLimit.setStatus('current')
smtOEMCapabilityInformation = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtOEMCapabilityInformation.setStatus('current')
smtCWMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtCWMin.setStatus('current')
smtCWMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtCWMax.setStatus('current')
smtACKWindow = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 2, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtACKWindow.setStatus('current')
assocTableMaxLength = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: assocTableMaxLength.setStatus('current')
assocTable = MibTable((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1, 2), )
if mibBuilder.loadTexts: assocTable.setStatus('current')
assocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1, 2, 1), ).setIndexNames((0, "WL400-DOT11EXT-MIB", "assocIndex"))
if mibBuilder.loadTexts: assocEntry.setStatus('current')
assocIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2007)))
if mibBuilder.loadTexts: assocIndex.setStatus('current')
assocAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: assocAddress.setStatus('current')
assocQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: assocQuality.setStatus('current')
assocAge = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: assocAge.setStatus('current')
assocRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: assocRSSI.setStatus('current')
secMACAclMaxTableLength = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secMACAclMaxTableLength.setStatus('current')
secMACAclTable = MibTable((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 2), )
if mibBuilder.loadTexts: secMACAclTable.setStatus('current')
secMACAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 2, 1), ).setIndexNames((0, "WL400-DOT11EXT-MIB", "secMACAclIndex"))
if mibBuilder.loadTexts: secMACAclEntry.setStatus('current')
secMACAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2007)))
if mibBuilder.loadTexts: secMACAclIndex.setStatus('current')
secMACAclAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secMACAclAddress.setStatus('current')
secMACAclAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 2, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secMACAclAllowed.setStatus('current')
secMACAclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: secMACAclRowStatus.setStatus('current')
secLastError = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secLastError.setStatus('current')
secLastErrorAddress = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 3, 2, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secLastErrorAddress.setStatus('current')
securityViolation = NotificationType((1, 3, 6, 1, 4, 1, 232, 145, 1, 4, 0, 1)).setObjects(("WL400-DOT11EXT-MIB", "secLastError"), ("WL400-DOT11EXT-MIB", "secLastErrorAddress"))
if mibBuilder.loadTexts: securityViolation.setStatus('current')
roamScanType = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("passive", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamScanType.setStatus('current')
roamScanInterval = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamScanInterval.setStatus('current')
roamProbeDelay = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamProbeDelay.setStatus('current')
roamMinChannelTime = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamMinChannelTime.setStatus('current')
roamMaxChannelTime = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamMaxChannelTime.setStatus('current')
roamJoinTimeout = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamJoinTimeout.setStatus('current')
roamBeaconPeriodTimeout = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamBeaconPeriodTimeout.setStatus('current')
roamDontSwitch = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamDontSwitch.setStatus('current')
roamBlackout = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamBlackout.setStatus('current')
roamDisassociateTime = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamDisassociateTime.setStatus('current')
roamHandoffTime = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamHandoffTime.setStatus('current')
roamWeightMetric1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamWeightMetric1.setStatus('current')
roamWeightMetric2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamWeightMetric2.setStatus('current')
roamWeightMetric3 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamWeightMetric3.setStatus('current')
roamWeightMetric4 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamWeightMetric4.setStatus('current')
roamWeightMetric5 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamWeightMetric5.setStatus('current')
roamWeightMetric6 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamWeightMetric6.setStatus('current')
roamWeightMetric7 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamWeightMetric7.setStatus('current')
roamWeightMetric8 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamWeightMetric8.setStatus('current')
roamMisc1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamMisc1.setStatus('current')
roamMisc2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamMisc2.setStatus('current')
roamTableLength = MibScalar((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamTableLength.setStatus('current')
roamTable = MibTable((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23), )
if mibBuilder.loadTexts: roamTable.setStatus('current')
roamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1), ).setIndexNames((0, "WL400-DOT11EXT-MIB", "roamIndex"))
if mibBuilder.loadTexts: roamEntry.setStatus('current')
roamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 1), Integer32())
if mibBuilder.loadTexts: roamIndex.setStatus('current')
roamBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamBSSID.setStatus('current')
roamSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamSSID.setStatus('current')
roamBSSType = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("infrastructure", 1), ("independent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamBSSType.setStatus('current')
roamChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamChannel.setStatus('current')
roamAge = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamAge.setStatus('current')
roamQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamQuality.setStatus('current')
roamLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamLoad.setStatus('current')
roamBeaconPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamBeaconPeriod.setStatus('current')
roamDTIMPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamDTIMPeriod.setStatus('current')
roamCapabilityInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 11), Bits().clone(namedValues=NamedValues(("privacy", 0), ("cfPollRequest", 1), ("cfPollable", 2), ("ibss", 3), ("ess", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamCapabilityInfo.setStatus('current')
roamRates = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamRates.setStatus('current')
roamRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 145, 1, 5, 1, 23, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: roamRSSI.setStatus('current')
smtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 1, 1)).setObjects(("WL400-DOT11EXT-MIB", "smtAssociationID"), ("WL400-DOT11EXT-MIB", "smtCapabilityInfo"), ("WL400-DOT11EXT-MIB", "smtPowerSaveInterval"), ("WL400-DOT11EXT-MIB", "smtListenInterval"), ("WL400-DOT11EXT-MIB", "smtATIMWindow"), ("WL400-DOT11EXT-MIB", "smtOperationalChannels"), ("WL400-DOT11EXT-MIB", "smtCurrentBSSID"), ("WL400-DOT11EXT-MIB", "smtCurrentSSID"), ("WL400-DOT11EXT-MIB", "smtCurrentBSSType"), ("WL400-DOT11EXT-MIB", "smtPublicKeyEnable"), ("WL400-DOT11EXT-MIB", "smtQualityLevel0"), ("WL400-DOT11EXT-MIB", "smtQualityLevel1"), ("WL400-DOT11EXT-MIB", "smtQualityLevel2"), ("WL400-DOT11EXT-MIB", "smtQualityPenalty"), ("WL400-DOT11EXT-MIB", "smtStationDBTimeout"), ("WL400-DOT11EXT-MIB", "smtQualityIndicator"), ("WL400-DOT11EXT-MIB", "smtQualityUpperLimit"), ("WL400-DOT11EXT-MIB", "smtQualityLowerLimit"), ("WL400-DOT11EXT-MIB", "smtOEMCapabilityInformation"), ("WL400-DOT11EXT-MIB", "smtCWMin"), ("WL400-DOT11EXT-MIB", "smtCWMax"), ("WL400-DOT11EXT-MIB", "smtACKWindow"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smtGroup = smtGroup.setStatus('current')
assocGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 1, 2)).setObjects(("WL400-DOT11EXT-MIB", "assocTableMaxLength"), ("WL400-DOT11EXT-MIB", "assocAddress"), ("WL400-DOT11EXT-MIB", "assocQuality"), ("WL400-DOT11EXT-MIB", "assocAge"), ("WL400-DOT11EXT-MIB", "assocRSSI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    assocGroup = assocGroup.setStatus('current')
securityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 1, 3)).setObjects(("WL400-DOT11EXT-MIB", "secMACAclMaxTableLength"), ("WL400-DOT11EXT-MIB", "secMACAclAddress"), ("WL400-DOT11EXT-MIB", "secMACAclAllowed"), ("WL400-DOT11EXT-MIB", "secMACAclRowStatus"), ("WL400-DOT11EXT-MIB", "secLastError"), ("WL400-DOT11EXT-MIB", "secLastErrorAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    securityGroup = securityGroup.setStatus('current')
secNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 1, 4)).setObjects(("WL400-DOT11EXT-MIB", "securityViolation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    secNotificationGroup = secNotificationGroup.setStatus('current')
roamGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 1, 5)).setObjects(("WL400-DOT11EXT-MIB", "roamScanType"), ("WL400-DOT11EXT-MIB", "roamScanInterval"), ("WL400-DOT11EXT-MIB", "roamBeaconPeriodTimeout"), ("WL400-DOT11EXT-MIB", "roamBlackout"), ("WL400-DOT11EXT-MIB", "roamDisassociateTime"), ("WL400-DOT11EXT-MIB", "roamHandoffTime"), ("WL400-DOT11EXT-MIB", "roamWeightMetric1"), ("WL400-DOT11EXT-MIB", "roamWeightMetric2"), ("WL400-DOT11EXT-MIB", "roamWeightMetric3"), ("WL400-DOT11EXT-MIB", "roamWeightMetric4"), ("WL400-DOT11EXT-MIB", "roamWeightMetric5"), ("WL400-DOT11EXT-MIB", "roamWeightMetric6"), ("WL400-DOT11EXT-MIB", "roamWeightMetric7"), ("WL400-DOT11EXT-MIB", "roamWeightMetric8"), ("WL400-DOT11EXT-MIB", "roamMisc1"), ("WL400-DOT11EXT-MIB", "roamMisc2"), ("WL400-DOT11EXT-MIB", "roamProbeDelay"), ("WL400-DOT11EXT-MIB", "roamDontSwitch"), ("WL400-DOT11EXT-MIB", "roamMinChannelTime"), ("WL400-DOT11EXT-MIB", "roamMaxChannelTime"), ("WL400-DOT11EXT-MIB", "roamJoinTimeout"), ("WL400-DOT11EXT-MIB", "roamTableLength"), ("WL400-DOT11EXT-MIB", "roamSSID"), ("WL400-DOT11EXT-MIB", "roamBSSID"), ("WL400-DOT11EXT-MIB", "roamBSSType"), ("WL400-DOT11EXT-MIB", "roamChannel"), ("WL400-DOT11EXT-MIB", "roamAge"), ("WL400-DOT11EXT-MIB", "roamQuality"), ("WL400-DOT11EXT-MIB", "roamLoad"), ("WL400-DOT11EXT-MIB", "roamBeaconPeriod"), ("WL400-DOT11EXT-MIB", "roamDTIMPeriod"), ("WL400-DOT11EXT-MIB", "roamCapabilityInfo"), ("WL400-DOT11EXT-MIB", "roamRates"), ("WL400-DOT11EXT-MIB", "roamRSSI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    roamGroup = roamGroup.setStatus('current')
dot11ExtBasicCompl = ModuleCompliance((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 2, 1)).setObjects(("WL400-DOT11EXT-MIB", "smtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot11ExtBasicCompl = dot11ExtBasicCompl.setStatus('current')
dot11ExtAPCompl = ModuleCompliance((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 2, 2)).setObjects(("WL400-DOT11EXT-MIB", "smtGroup"), ("WL400-DOT11EXT-MIB", "assocGroup"), ("WL400-DOT11EXT-MIB", "securityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot11ExtAPCompl = dot11ExtAPCompl.setStatus('current')
dot11ExtWBUCompl = ModuleCompliance((1, 3, 6, 1, 4, 1, 232, 145, 1, 1, 2, 3)).setObjects(("WL400-DOT11EXT-MIB", "roamGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot11ExtWBUCompl = dot11ExtWBUCompl.setStatus('current')
mibBuilder.exportSymbols("WL400-DOT11EXT-MIB", roamWeightMetric8=roamWeightMetric8, smt=smt, roamCapabilityInfo=roamCapabilityInfo, security=security, roamScanInterval=roamScanInterval, PYSNMP_MODULE_ID=dot11ExtMibModule, smtATIMWindow=smtATIMWindow, roamRSSI=roamRSSI, assocEntry=assocEntry, roamBSSID=roamBSSID, secMACAclEntry=secMACAclEntry, roamChannel=roamChannel, assocQuality=assocQuality, smtCurrentBSSID=smtCurrentBSSID, smtQualityPenalty=smtQualityPenalty, smtQualityLevel2=smtQualityLevel2, roamGroup=roamGroup, dot11ExtAPObjs=dot11ExtAPObjs, roamWeightMetric1=roamWeightMetric1, roamSSID=roamSSID, roamDTIMPeriod=roamDTIMPeriod, roamBeaconPeriod=roamBeaconPeriod, smtPowerSaveInterval=smtPowerSaveInterval, roamMinChannelTime=roamMinChannelTime, roamProbeDelay=roamProbeDelay, dot11ExtWBUCompl=dot11ExtWBUCompl, dot11ExtCompl=dot11ExtCompl, smtCapabilityInfo=smtCapabilityInfo, roam=roam, smtOEMCapabilityInformation=smtOEMCapabilityInformation, assocIndex=assocIndex, roamMisc2=roamMisc2, roamBSSType=roamBSSType, secMACAclIndex=secMACAclIndex, smtPublicKeyEnable=smtPublicKeyEnable, roamBlackout=roamBlackout, dot11ExtWBUObjs=dot11ExtWBUObjs, roamTable=roamTable, smtACKWindow=smtACKWindow, roamDontSwitch=roamDontSwitch, roamWeightMetric7=roamWeightMetric7, roamIndex=roamIndex, roamMaxChannelTime=roamMaxChannelTime, smtQualityUpperLimit=smtQualityUpperLimit, roamMisc1=roamMisc1, smtCurrentSSID=smtCurrentSSID, securityViolation=securityViolation, dot11ExtAPCompl=dot11ExtAPCompl, roamRates=roamRates, assocAge=assocAge, smtGroup=smtGroup, secMACAclTable=secMACAclTable, smtQualityIndicator=smtQualityIndicator, roamQuality=roamQuality, dot11ExtGenObjs=dot11ExtGenObjs, secMACAclAddress=secMACAclAddress, assocAddress=assocAddress, assoc=assoc, dot11ExtEventsV2=dot11ExtEventsV2, roamScanType=roamScanType, secNotificationGroup=secNotificationGroup, roamWeightMetric2=roamWeightMetric2, secMACAclMaxTableLength=secMACAclMaxTableLength, roamJoinTimeout=roamJoinTimeout, smtAssociationID=smtAssociationID, smtQualityLevel0=smtQualityLevel0, smtQualityLevel1=smtQualityLevel1, secLastError=secLastError, assocRSSI=assocRSSI, dot11ExtGroups=dot11ExtGroups, smtOperationalChannels=smtOperationalChannels, roamWeightMetric3=roamWeightMetric3, smtCWMin=smtCWMin, roamBeaconPeriodTimeout=roamBeaconPeriodTimeout, secMACAclRowStatus=secMACAclRowStatus, secLastErrorAddress=secLastErrorAddress, smtStationDBTimeout=smtStationDBTimeout, securityGroup=securityGroup, roamLoad=roamLoad, smtCurrentBSSType=smtCurrentBSSType, roamDisassociateTime=roamDisassociateTime, secMACAclAllowed=secMACAclAllowed, assocGroup=assocGroup, roamAge=roamAge, dot11ExtMibModule=dot11ExtMibModule, roamEntry=roamEntry, smtListenInterval=smtListenInterval, roamWeightMetric6=roamWeightMetric6, assocTableMaxLength=assocTableMaxLength, smtCWMax=smtCWMax, roamWeightMetric5=roamWeightMetric5, smtQualityLowerLimit=smtQualityLowerLimit, dot11ExtBasicCompl=dot11ExtBasicCompl, roamTableLength=roamTableLength, dot11ExtConf=dot11ExtConf, dot11ExtMIB=dot11ExtMIB, roamWeightMetric4=roamWeightMetric4, dot11ExtEvents=dot11ExtEvents, roamHandoffTime=roamHandoffTime, assocTable=assocTable)
