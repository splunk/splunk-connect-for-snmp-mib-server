#
# PySNMP MIB module REDSTONE-PPPOE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-PPPOE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:47:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
rsMgmt, = mibBuilder.importSymbols("REDSTONE-SMI", "rsMgmt")
RsNextIfIndex, = mibBuilder.importSymbols("REDSTONE-TC", "RsNextIfIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, ModuleIdentity, Unsigned32, Integer32, TimeTicks, Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, iso, ObjectIdentity, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "Unsigned32", "Integer32", "TimeTicks", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "NotificationType")
DisplayString, TextualConvention, TimeStamp, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeStamp", "RowStatus")
rsPPPoEMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773, 2, 18))
rsPPPoEMIB.setRevisions(('1998-01-01 00:00',))
if mibBuilder.loadTexts: rsPPPoEMIB.setLastUpdated('9801010000Z')
if mibBuilder.loadTexts: rsPPPoEMIB.setOrganization('Redstone Communications, Inc.')
rsPPPoEObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1))
rsPPPoEIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1))
rsPPPoESubIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2))
rsPPPoENextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 1), RsNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoENextIfIndex.setStatus('current')
rsPPPoEIfTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2), )
if mibBuilder.loadTexts: rsPPPoEIfTable.setStatus('current')
rsPPPoEIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1), ).setIndexNames((0, "REDSTONE-PPPOE-MIB", "rsPPPoEIfIfIndex"))
if mibBuilder.loadTexts: rsPPPoEIfEntry.setStatus('current')
rsPPPoEIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfIfIndex.setStatus('current')
rsPPPoEIfMaxNumSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65336))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsPPPoEIfMaxNumSessions.setStatus('current')
rsPPPoEIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoEIfRowStatus.setStatus('current')
rsPPPoEIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 2, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoEIfLowerIfIndex.setStatus('current')
rsPPPoEIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3), )
if mibBuilder.loadTexts: rsPPPoEIfStatsTable.setStatus('current')
rsPPPoEIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1), ).setIndexNames((0, "REDSTONE-PPPOE-MIB", "rsPPPoEIfIfIndex"))
if mibBuilder.loadTexts: rsPPPoEIfStatsEntry.setStatus('current')
rsPPPoEIfStatsRxPADI = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADI.setStatus('current')
rsPPPoEIfStatsTxPADO = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADO.setStatus('current')
rsPPPoEIfStatsRxPADR = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADR.setStatus('current')
rsPPPoEIfStatsTxPADS = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADS.setStatus('current')
rsPPPoEIfStatsRxPADT = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxPADT.setStatus('current')
rsPPPoEIfStatsTxPADT = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsTxPADT.setStatus('current')
rsPPPoEIfStatsRxInvVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvVersion.setStatus('current')
rsPPPoEIfStatsRxInvCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvCode.setStatus('current')
rsPPPoEIfStatsRxInvTags = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvTags.setStatus('current')
rsPPPoEIfStatsRxInvSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvSession.setStatus('current')
rsPPPoEIfStatsRxInvTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvTypes.setStatus('current')
rsPPPoEIfStatsRxInvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInvPackets.setStatus('current')
rsPPPoEIfStatsRxInsufficientResources = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoEIfStatsRxInsufficientResources.setStatus('current')
rsPPPoESubIfNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 1), RsNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoESubIfNextIfIndex.setStatus('current')
rsPPPoESubIfTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2), )
if mibBuilder.loadTexts: rsPPPoESubIfTable.setStatus('current')
rsPPPoESubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1), ).setIndexNames((0, "REDSTONE-PPPOE-MIB", "rsPPPoESubIfIndex"))
if mibBuilder.loadTexts: rsPPPoESubIfEntry.setStatus('current')
rsPPPoESubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rsPPPoESubIfIndex.setStatus('current')
rsPPPoESubIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoESubIfRowStatus.setStatus('current')
rsPPPoESubIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoESubIfLowerIfIndex.setStatus('current')
rsPPPoESubIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsPPPoESubIfId.setStatus('current')
rsPPPoESubIfSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 18, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPPPoESubIfSessionId.setStatus('current')
rsPPPoEConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4))
rsPPPoECompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 1))
rsPPPoEGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 2))
rsPPPoECompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 1, 1)).setObjects(("REDSTONE-PPPOE-MIB", "rsPPPoEGroup"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsPPPoECompliance = rsPPPoECompliance.setStatus('current')
rsPPPoEGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 2, 1)).setObjects(("REDSTONE-PPPOE-MIB", "rsPPPoENextIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfMaxNumSessions"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfRowStatus"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfLowerIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxPADI"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsTxPADO"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxPADR"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsTxPADS"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxPADT"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsTxPADT"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxInvVersion"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxInvCode"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxInvTags"), ("REDSTONE-PPPOE-MIB", "rsPPPoEIfStatsRxInvSession"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsPPPoEGroup = rsPPPoEGroup.setStatus('current')
rsPPPoESubIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 18, 4, 2, 2)).setObjects(("REDSTONE-PPPOE-MIB", "rsPPPoESubIfNextIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfRowStatus"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfLowerIfIndex"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfId"), ("REDSTONE-PPPOE-MIB", "rsPPPoESubIfSessionId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsPPPoESubIfGroup = rsPPPoESubIfGroup.setStatus('current')
mibBuilder.exportSymbols("REDSTONE-PPPOE-MIB", rsPPPoEIfLayer=rsPPPoEIfLayer, rsPPPoEIfStatsRxPADI=rsPPPoEIfStatsRxPADI, rsPPPoEIfStatsRxInvSession=rsPPPoEIfStatsRxInvSession, rsPPPoEIfRowStatus=rsPPPoEIfRowStatus, rsPPPoESubIfGroup=rsPPPoESubIfGroup, rsPPPoEGroups=rsPPPoEGroups, rsPPPoECompliance=rsPPPoECompliance, rsPPPoESubIfId=rsPPPoESubIfId, rsPPPoEIfStatsTxPADS=rsPPPoEIfStatsTxPADS, rsPPPoESubIfRowStatus=rsPPPoESubIfRowStatus, rsPPPoECompliances=rsPPPoECompliances, rsPPPoEIfStatsRxInvPackets=rsPPPoEIfStatsRxInvPackets, rsPPPoESubIfSessionId=rsPPPoESubIfSessionId, rsPPPoEIfStatsRxPADR=rsPPPoEIfStatsRxPADR, rsPPPoEMIB=rsPPPoEMIB, rsPPPoEIfStatsRxInvVersion=rsPPPoEIfStatsRxInvVersion, rsPPPoEIfStatsEntry=rsPPPoEIfStatsEntry, rsPPPoEIfStatsRxInsufficientResources=rsPPPoEIfStatsRxInsufficientResources, rsPPPoEIfMaxNumSessions=rsPPPoEIfMaxNumSessions, rsPPPoEIfStatsRxInvTypes=rsPPPoEIfStatsRxInvTypes, rsPPPoEIfIfIndex=rsPPPoEIfIfIndex, rsPPPoEConformance=rsPPPoEConformance, rsPPPoEIfTable=rsPPPoEIfTable, rsPPPoEIfStatsTable=rsPPPoEIfStatsTable, rsPPPoEIfStatsRxPADT=rsPPPoEIfStatsRxPADT, rsPPPoEIfStatsTxPADT=rsPPPoEIfStatsTxPADT, rsPPPoENextIfIndex=rsPPPoENextIfIndex, PYSNMP_MODULE_ID=rsPPPoEMIB, rsPPPoESubIfEntry=rsPPPoESubIfEntry, rsPPPoESubIfTable=rsPPPoESubIfTable, rsPPPoEIfLowerIfIndex=rsPPPoEIfLowerIfIndex, rsPPPoEIfStatsRxInvTags=rsPPPoEIfStatsRxInvTags, rsPPPoESubIfNextIfIndex=rsPPPoESubIfNextIfIndex, rsPPPoEObjects=rsPPPoEObjects, rsPPPoESubIfLayer=rsPPPoESubIfLayer, rsPPPoEGroup=rsPPPoEGroup, rsPPPoESubIfLowerIfIndex=rsPPPoESubIfLowerIfIndex, rsPPPoEIfStatsRxInvCode=rsPPPoEIfStatsRxInvCode, rsPPPoESubIfIndex=rsPPPoESubIfIndex, rsPPPoEIfEntry=rsPPPoEIfEntry, rsPPPoEIfStatsTxPADO=rsPPPoEIfStatsTxPADO)
