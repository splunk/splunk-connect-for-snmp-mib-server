#
# PySNMP MIB module Wellfleet-BISYNC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-BISYNC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, NotificationType, ObjectIdentity, Bits, Unsigned32, Gauge32, Integer32, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Bits", "Unsigned32", "Gauge32", "Integer32", "iso", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfBisyncGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfBisyncGroup")
wfBisyncTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1), )
if mibBuilder.loadTexts: wfBisyncTable.setStatus('mandatory')
wfBisyncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1), ).setIndexNames((0, "Wellfleet-BISYNC-MIB", "wfBisyncSlot"), (0, "Wellfleet-BISYNC-MIB", "wfBisyncConnector"))
if mibBuilder.loadTexts: wfBisyncEntry.setStatus('mandatory')
wfBisyncDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncDelete.setStatus('mandatory')
wfBisyncDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncDisable.setStatus('mandatory')
wfBisyncCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncCct.setStatus('mandatory')
wfBisyncMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4568)).clone(1580)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncMtu.setStatus('mandatory')
wfBisyncMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("raisedtr", 2), ("v25bis", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncMediaType.setStatus('mandatory')
wfBisyncCableType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rs232", 1), ("rs422", 2), ("v35", 3), ("x21", 4))).clone('rs232')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncCableType.setStatus('mandatory')
wfBisyncClkSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2))).clone('external')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncClkSource.setStatus('mandatory')
wfBisyncClkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1200, 2401, 4807, 7204, 9615, 19230))).clone(namedValues=NamedValues(("clk1200b", 1200), ("clk2400b", 2401), ("clk4800b", 4807), ("clk7200b", 7204), ("clk9600b", 9615), ("clk19200b", 19230))).clone('clk9600b')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncClkSpeed.setStatus('mandatory')
wfBisyncService = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dlsw", 1), ("tunneling", 2))).clone('tunneling')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncService.setStatus('mandatory')
wfBisyncCfgTxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncCfgTxQueueLength.setStatus('mandatory')
wfBisyncCfgRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncCfgRxQueueLength.setStatus('mandatory')
wfBisyncCharMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ebcdic", 1), ("ascii", 2))).clone('ebcdic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncCharMode.setStatus('mandatory')
wfBisyncLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncLineNumber.setStatus('mandatory')
wfBisyncRtsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncRtsEnable.setStatus('mandatory')
wfBisyncExternalClkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1200, 19200)).clone(9600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncExternalClkSpeed.setStatus('mandatory')
wfBisyncModule = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncModule.setStatus('mandatory')
wfBisyncActualConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4), ("five", 5), ("six", 6), ("seven", 7), ("eight", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncActualConnector.setStatus('mandatory')
wfBisyncConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncConnector.setStatus('mandatory')
wfBisyncSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncSlot.setStatus('mandatory')
wfBisyncActiveCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncActiveCct.setStatus('mandatory')
wfBisyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 20))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("dsrwait", 4), ("notpresent", 20))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncState.setStatus('mandatory')
wfBisyncLastState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 20))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("dsrwait", 4), ("notpresent", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncLastState.setStatus('mandatory')
wfBisyncRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxOctets.setStatus('mandatory')
wfBisyncTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncTxOctets.setStatus('mandatory')
wfBisyncRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxFrames.setStatus('mandatory')
wfBisyncTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncTxFrames.setStatus('mandatory')
wfBisyncRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxErrors.setStatus('mandatory')
wfBisyncTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncTxErrors.setStatus('mandatory')
wfBisyncTxLackRescs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncTxLackRescs.setStatus('mandatory')
wfBisyncTxUnderFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncTxUnderFlows.setStatus('mandatory')
wfBisyncRxOverFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxOverFlows.setStatus('mandatory')
wfBisyncRxBadFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxBadFrames.setStatus('mandatory')
wfBisyncRxRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxRunts.setStatus('mandatory')
wfBisyncTxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncTxQueueLength.setStatus('mandatory')
wfBisyncRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxQueueLength.setStatus('mandatory')
wfBisyncRxReplenMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxReplenMisses.setStatus('mandatory')
wfBisyncLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 37), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncLastChange.setStatus('mandatory')
wfBisyncOutQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncOutQLen.setStatus('mandatory')
wfBisyncRxLackRescsChar = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRxLackRescsChar.setStatus('mandatory')
wfBisyncIsrBCZero = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncIsrBCZero.setStatus('mandatory')
wfBisyncIsrBCSix = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncIsrBCSix.setStatus('mandatory')
wfBisyncIsrBCInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncIsrBCInvalid.setStatus('mandatory')
wfBisyncIsrBCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncIsrBCErrors.setStatus('mandatory')
wfBisyncLocalConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncLocalConnectionState.setStatus('mandatory')
wfBisyncRemoteConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("devicestreaming", 3), ("unknown", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBisyncRemoteConnectionState.setStatus('mandatory')
wfBisyncAdditionalSyncPairs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 27, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBisyncAdditionalSyncPairs.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-BISYNC-MIB", wfBisyncClkSpeed=wfBisyncClkSpeed, wfBisyncModule=wfBisyncModule, wfBisyncRxQueueLength=wfBisyncRxQueueLength, wfBisyncDisable=wfBisyncDisable, wfBisyncExternalClkSpeed=wfBisyncExternalClkSpeed, wfBisyncSlot=wfBisyncSlot, wfBisyncAdditionalSyncPairs=wfBisyncAdditionalSyncPairs, wfBisyncMtu=wfBisyncMtu, wfBisyncClkSource=wfBisyncClkSource, wfBisyncRxReplenMisses=wfBisyncRxReplenMisses, wfBisyncTxQueueLength=wfBisyncTxQueueLength, wfBisyncLocalConnectionState=wfBisyncLocalConnectionState, wfBisyncRemoteConnectionState=wfBisyncRemoteConnectionState, wfBisyncRxOverFlows=wfBisyncRxOverFlows, wfBisyncTxLackRescs=wfBisyncTxLackRescs, wfBisyncOutQLen=wfBisyncOutQLen, wfBisyncCfgTxQueueLength=wfBisyncCfgTxQueueLength, wfBisyncCct=wfBisyncCct, wfBisyncRxOctets=wfBisyncRxOctets, wfBisyncIsrBCErrors=wfBisyncIsrBCErrors, wfBisyncMediaType=wfBisyncMediaType, wfBisyncConnector=wfBisyncConnector, wfBisyncIsrBCZero=wfBisyncIsrBCZero, wfBisyncTxOctets=wfBisyncTxOctets, wfBisyncTxErrors=wfBisyncTxErrors, wfBisyncRxLackRescsChar=wfBisyncRxLackRescsChar, wfBisyncIsrBCInvalid=wfBisyncIsrBCInvalid, wfBisyncActualConnector=wfBisyncActualConnector, wfBisyncIsrBCSix=wfBisyncIsrBCSix, wfBisyncService=wfBisyncService, wfBisyncActiveCct=wfBisyncActiveCct, wfBisyncTxUnderFlows=wfBisyncTxUnderFlows, wfBisyncTxFrames=wfBisyncTxFrames, wfBisyncEntry=wfBisyncEntry, wfBisyncTable=wfBisyncTable, wfBisyncLineNumber=wfBisyncLineNumber, wfBisyncRxBadFrames=wfBisyncRxBadFrames, wfBisyncCharMode=wfBisyncCharMode, wfBisyncCableType=wfBisyncCableType, wfBisyncDelete=wfBisyncDelete, wfBisyncRxFrames=wfBisyncRxFrames, wfBisyncRxRunts=wfBisyncRxRunts, wfBisyncState=wfBisyncState, wfBisyncCfgRxQueueLength=wfBisyncCfgRxQueueLength, wfBisyncLastState=wfBisyncLastState, wfBisyncRtsEnable=wfBisyncRtsEnable, wfBisyncRxErrors=wfBisyncRxErrors, wfBisyncLastChange=wfBisyncLastChange)
