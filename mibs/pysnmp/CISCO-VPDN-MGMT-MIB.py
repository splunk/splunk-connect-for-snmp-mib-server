#
# PySNMP MIB module CISCO-VPDN-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VPDN-MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:03:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, Bits, Unsigned32, ObjectIdentity, IpAddress, NotificationType, TimeTicks, Integer32, Counter32, Counter64, MibIdentifier, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "Unsigned32", "ObjectIdentity", "IpAddress", "NotificationType", "TimeTicks", "Integer32", "Counter32", "Counter64", "MibIdentifier", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "TimeStamp")
ciscoVpdnMgmtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 24))
ciscoVpdnMgmtMIB.setRevisions(('2006-01-20 00:00', '2004-06-08 00:00', '2004-04-02 00:00', '2002-07-08 00:00', '2002-05-17 00:00', '2002-04-02 00:00', '2000-01-12 00:00', '1999-03-24 00:00', '1997-07-15 00:00',))
if mibBuilder.loadTexts: ciscoVpdnMgmtMIB.setLastUpdated('200906160000Z')
if mibBuilder.loadTexts: ciscoVpdnMgmtMIB.setOrganization('Cisco Systems, Inc.')
class TunnelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("l2f", 1), ("l2tp", 2), ("pptp", 3))

class EndpointClass(TextualConvention, Integer32):
    reference = 'The PPP Multilink Protocol (MP), RFC 1990, Section 5.1.3.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("local", 2), ("ipV4Address", 3), ("macAddress", 4), ("magicNumber", 5), ("phone", 6))

ciscoVpdnMgmtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 1))
cvpdnSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1))
cvpdnTunnelInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2))
cvpdnTunnelSessionInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3))
cvpdnUserToFailHistInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4))
cvpdnTemplateInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 5))
cvpdnMultilinkInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6))
cvpdnTunnelTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 1), Gauge32()).setUnits('tunnels').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelTotal.setStatus('obsolete')
cvpdnSessionTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 2), Gauge32()).setUnits('users').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionTotal.setStatus('obsolete')
cvpdnDeniedUsersTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 3), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnDeniedUsersTotal.setStatus('obsolete')
cvpdnSystemTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4), )
if mibBuilder.loadTexts: cvpdnSystemTable.setStatus('current')
cvpdnSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-VPDN-MGMT-MIB", "cvpdnSystemTunnelType"))
if mibBuilder.loadTexts: cvpdnSystemEntry.setStatus('current')
cvpdnSystemTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4, 1, 1), TunnelType())
if mibBuilder.loadTexts: cvpdnSystemTunnelType.setStatus('current')
cvpdnSystemTunnelTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4, 1, 2), Gauge32()).setUnits('tunnels').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSystemTunnelTotal.setStatus('current')
cvpdnSystemSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4, 1, 3), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSystemSessionTotal.setStatus('current')
cvpdnSystemDeniedUsersTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4, 1, 4), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSystemDeniedUsersTotal.setStatus('current')
cvpdnSystemInitialConnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4, 1, 5), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSystemInitialConnReq.setStatus('current')
cvpdnSystemSuccessConnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4, 1, 6), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSystemSuccessConnReq.setStatus('current')
cvpdnSystemFailedConnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 4, 1, 7), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSystemFailedConnReq.setStatus('current')
cvpdnSystemNotifSessionEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSystemNotifSessionEnabled.setStatus('current')
cvpdnSystemClearSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("l2f", 3), ("l2tp", 4), ("pptp", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvpdnSystemClearSessions.setStatus('current')
cvpdnTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1), )
if mibBuilder.loadTexts: cvpdnTunnelTable.setStatus('obsolete')
cvpdnTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-VPDN-MGMT-MIB", "cvpdnTunnelTunnelId"))
if mibBuilder.loadTexts: cvpdnTunnelEntry.setStatus('obsolete')
cvpdnTunnelTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cvpdnTunnelTunnelId.setStatus('obsolete')
cvpdnTunnelRemoteTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelRemoteTunnelId.setStatus('obsolete')
cvpdnTunnelLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelLocalName.setStatus('obsolete')
cvpdnTunnelRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelRemoteName.setStatus('obsolete')
cvpdnTunnelRemoteEndpointName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelRemoteEndpointName.setStatus('obsolete')
cvpdnTunnelLocalInitConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelLocalInitConnection.setStatus('obsolete')
cvpdnTunnelOrigCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("domain", 1), ("dnis", 2), ("stack", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelOrigCause.setStatus('obsolete')
cvpdnTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("opening", 2), ("open", 3), ("closing", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelState.setStatus('obsolete')
cvpdnTunnelActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 9), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelActiveSessions.setStatus('obsolete')
cvpdnTunnelDeniedUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 10), Counter32()).setUnits('calls').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelDeniedUsers.setStatus('obsolete')
cvpdnTunnelSoftshut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSoftshut.setStatus('obsolete')
cvpdnTunnelNetworkServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelNetworkServiceType.setStatus('obsolete')
cvpdnTunnelLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelLocalIpAddress.setStatus('obsolete')
cvpdnTunnelSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSourceIpAddress.setStatus('obsolete')
cvpdnTunnelRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 1, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelRemoteIpAddress.setStatus('obsolete')
cvpdnTunnelAttrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2), )
if mibBuilder.loadTexts: cvpdnTunnelAttrTable.setStatus('current')
cvpdnTunnelAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-VPDN-MGMT-MIB", "cvpdnSystemTunnelType"), (0, "CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrTunnelId"))
if mibBuilder.loadTexts: cvpdnTunnelAttrEntry.setStatus('current')
cvpdnTunnelAttrTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cvpdnTunnelAttrTunnelId.setStatus('current')
cvpdnTunnelAttrRemoteTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrRemoteTunnelId.setStatus('current')
cvpdnTunnelAttrLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrLocalName.setStatus('current')
cvpdnTunnelAttrRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrRemoteName.setStatus('current')
cvpdnTunnelAttrRemoteEndpointName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrRemoteEndpointName.setStatus('current')
cvpdnTunnelAttrLocalInitConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrLocalInitConnection.setStatus('current')
cvpdnTunnelAttrOrigCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("domain", 1), ("dnis", 2), ("stack", 3), ("xconnect", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrOrigCause.setStatus('current')
cvpdnTunnelAttrState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("unknown", 1), ("l2fOpening", 2), ("l2fOpenWait", 3), ("l2fOpen", 4), ("l2fClosing", 5), ("l2fCloseWait", 6), ("l2tpIdle", 7), ("l2tpWaitCtlReply", 8), ("l2tpEstablished", 9), ("l2tpShuttingDown", 10), ("l2tpNoSessionLeft", 11), ("pptpIdle", 12), ("pptpWaitConnect", 13), ("pptpWaitCtlRequest", 14), ("pptpWaitCtlReply", 15), ("pptpEstablished", 16), ("pptpWaitStopReply", 17), ("pptpTerminal", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrState.setStatus('current')
cvpdnTunnelAttrActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 9), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrActiveSessions.setStatus('current')
cvpdnTunnelAttrDeniedUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 10), Counter32()).setUnits('calls').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrDeniedUsers.setStatus('current')
cvpdnTunnelAttrSoftshut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrSoftshut.setStatus('current')
cvpdnTunnelAttrNetworkServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrNetworkServiceType.setStatus('current')
cvpdnTunnelAttrLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrLocalIpAddress.setStatus('deprecated')
cvpdnTunnelAttrSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrSourceIpAddress.setStatus('deprecated')
cvpdnTunnelAttrRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrRemoteIpAddress.setStatus('deprecated')
cvpdnTunnelAttrLocalInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 16), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrLocalInetAddressType.setStatus('current')
cvpdnTunnelAttrLocalInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 17), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrLocalInetAddress.setStatus('current')
cvpdnTunnelAttrSourceInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 18), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrSourceInetAddressType.setStatus('current')
cvpdnTunnelAttrSourceInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 19), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrSourceInetAddress.setStatus('current')
cvpdnTunnelAttrRemoteInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 20), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrRemoteInetAddressType.setStatus('current')
cvpdnTunnelAttrRemoteInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 2, 2, 1, 21), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelAttrRemoteInetAddress.setStatus('current')
cvpdnTunnelSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1), )
if mibBuilder.loadTexts: cvpdnTunnelSessionTable.setStatus('obsolete')
cvpdnTunnelSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-VPDN-MGMT-MIB", "cvpdnTunnelTunnelId"), (0, "CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionId"))
if mibBuilder.loadTexts: cvpdnTunnelSessionEntry.setStatus('obsolete')
cvpdnTunnelSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cvpdnTunnelSessionId.setStatus('obsolete')
cvpdnTunnelSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionUserName.setStatus('obsolete')
cvpdnTunnelSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("opening", 2), ("open", 3), ("closing", 4), ("waitingForTunnel", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionState.setStatus('obsolete')
cvpdnTunnelSessionCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionCallDuration.setStatus('obsolete')
cvpdnTunnelSessionPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionPacketsOut.setStatus('obsolete')
cvpdnTunnelSessionBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionBytesOut.setStatus('obsolete')
cvpdnTunnelSessionPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionPacketsIn.setStatus('obsolete')
cvpdnTunnelSessionBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionBytesIn.setStatus('obsolete')
cvpdnTunnelSessionDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("asyncInternalModem", 2), ("async", 3), ("bchan", 4), ("sync", 5), ("virtualAccess", 6), ("xdsl", 7), ("cable", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionDeviceType.setStatus('obsolete')
cvpdnTunnelSessionDeviceCallerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionDeviceCallerId.setStatus('obsolete')
cvpdnTunnelSessionDevicePhyId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionDevicePhyId.setStatus('obsolete')
cvpdnTunnelSessionMultilink = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionMultilink.setStatus('obsolete')
cvpdnTunnelSessionModemSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionModemSlotIndex.setStatus('obsolete')
cvpdnTunnelSessionModemPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionModemPortIndex.setStatus('obsolete')
cvpdnTunnelSessionDS1SlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionDS1SlotIndex.setStatus('obsolete')
cvpdnTunnelSessionDS1PortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionDS1PortIndex.setStatus('obsolete')
cvpdnTunnelSessionDS1ChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionDS1ChannelIndex.setStatus('obsolete')
cvpdnTunnelSessionModemCallStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionModemCallStartTime.setStatus('obsolete')
cvpdnTunnelSessionModemCallStartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTunnelSessionModemCallStartIndex.setStatus('obsolete')
cvpdnSessionAttrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2), )
if mibBuilder.loadTexts: cvpdnSessionAttrTable.setStatus('current')
cvpdnSessionAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-VPDN-MGMT-MIB", "cvpdnSystemTunnelType"), (0, "CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrTunnelId"), (0, "CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrSessionId"))
if mibBuilder.loadTexts: cvpdnSessionAttrEntry.setStatus('current')
cvpdnSessionAttrSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cvpdnSessionAttrSessionId.setStatus('current')
cvpdnSessionAttrUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrUserName.setStatus('current')
cvpdnSessionAttrState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("unknown", 1), ("l2fOpening", 2), ("l2fOpen", 3), ("l2fCloseWait", 4), ("l2fWaitingForTunnel", 5), ("l2tpIdle", 6), ("l2tpWaitingTunnel", 7), ("l2tpWaitReply", 8), ("l2tpWaitConnect", 9), ("l2tpEstablished", 10), ("l2tpShuttingDown", 11), ("pptpWaitVAccess", 12), ("pptpPacEstablished", 13), ("pptpWaitTunnel", 14), ("pptpWaitOCRP", 15), ("pptpPnsEstablished", 16), ("pptpWaitCallDisc", 17), ("pptpTerminal", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrState.setStatus('current')
cvpdnSessionAttrCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrCallDuration.setStatus('current')
cvpdnSessionAttrPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrPacketsOut.setStatus('current')
cvpdnSessionAttrBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrBytesOut.setStatus('current')
cvpdnSessionAttrPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrPacketsIn.setStatus('current')
cvpdnSessionAttrBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrBytesIn.setStatus('current')
cvpdnSessionAttrDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("asyncInternalModem", 2), ("async", 3), ("bchan", 4), ("sync", 5), ("virtualAccess", 6), ("xdsl", 7), ("cable", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrDeviceType.setStatus('current')
cvpdnSessionAttrDeviceCallerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrDeviceCallerId.setStatus('current')
cvpdnSessionAttrDevicePhyId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrDevicePhyId.setStatus('current')
cvpdnSessionAttrMultilink = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrMultilink.setStatus('current')
cvpdnSessionAttrModemSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrModemSlotIndex.setStatus('current')
cvpdnSessionAttrModemPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrModemPortIndex.setStatus('current')
cvpdnSessionAttrDS1SlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrDS1SlotIndex.setStatus('current')
cvpdnSessionAttrDS1PortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrDS1PortIndex.setStatus('current')
cvpdnSessionAttrDS1ChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrDS1ChannelIndex.setStatus('current')
cvpdnSessionAttrModemCallStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrModemCallStartTime.setStatus('current')
cvpdnSessionAttrModemCallStartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrModemCallStartIndex.setStatus('current')
cvpdnSessionAttrVirtualCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrVirtualCircuitID.setStatus('current')
cvpdnSessionAttrSentPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 21), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrSentPktsDropped.setStatus('current')
cvpdnSessionAttrRecvPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 22), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrRecvPktsDropped.setStatus('current')
cvpdnSessionAttrMultilinkBundle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 23), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrMultilinkBundle.setStatus('current')
cvpdnSessionAttrMultilinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 3, 2, 1, 24), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnSessionAttrMultilinkIfIndex.setStatus('current')
cvpdnUserToFailHistInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1), )
if mibBuilder.loadTexts: cvpdnUserToFailHistInfoTable.setStatus('current')
cvpdnUserToFailHistInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistUname"), (0, "CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistTunnelId"))
if mibBuilder.loadTexts: cvpdnUserToFailHistInfoEntry.setStatus('current')
cvpdnUnameToFailHistUname = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: cvpdnUnameToFailHistUname.setStatus('current')
cvpdnUnameToFailHistTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cvpdnUnameToFailHistTunnelId.setStatus('current')
cvpdnUnameToFailHistUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistUserId.setStatus('current')
cvpdnUnameToFailHistLocalInitConn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistLocalInitConn.setStatus('current')
cvpdnUnameToFailHistLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistLocalName.setStatus('current')
cvpdnUnameToFailHistRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistRemoteName.setStatus('current')
cvpdnUnameToFailHistSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistSourceIp.setStatus('deprecated')
cvpdnUnameToFailHistDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistDestIp.setStatus('deprecated')
cvpdnUnameToFailHistCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 9), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistCount.setStatus('current')
cvpdnUnameToFailHistFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistFailTime.setStatus('current')
cvpdnUnameToFailHistFailType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistFailType.setStatus('current')
cvpdnUnameToFailHistFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistFailReason.setStatus('current')
cvpdnUnameToFailHistSourceInetType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 13), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistSourceInetType.setStatus('current')
cvpdnUnameToFailHistSourceInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistSourceInetAddr.setStatus('current')
cvpdnUnameToFailHistDestInetType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 15), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistDestInetType.setStatus('current')
cvpdnUnameToFailHistDestInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 4, 1, 1, 16), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnUnameToFailHistDestInetAddr.setStatus('current')
ciscoVpdnMgmtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 0))
cvpdnNotifSessionID = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 0, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnNotifSessionID.setStatus('current')
cvpdnNotifSessionEvent = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 0, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("pwUp", 3), ("pwDown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnNotifSessionEvent.setStatus('current')
cvpdnNotifSession = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 24, 0, 3)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnNotifSessionID"), ("CISCO-VPDN-MGMT-MIB", "cvpdnNotifSessionEvent"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDevicePhyId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrVirtualCircuitID"))
if mibBuilder.loadTexts: cvpdnNotifSession.setStatus('current')
cvpdnTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 5, 1), )
if mibBuilder.loadTexts: cvpdnTemplateTable.setStatus('current')
cvpdnTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 5, 1, 1), ).setIndexNames((1, "CISCO-VPDN-MGMT-MIB", "cvpdnTemplateName"))
if mibBuilder.loadTexts: cvpdnTemplateEntry.setStatus('current')
cvpdnTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 5, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: cvpdnTemplateName.setStatus('current')
cvpdnTemplateActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 5, 1, 1, 2), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnTemplateActiveSessions.setStatus('current')
cvpdnBundlesWithOneLink = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundlesWithOneLink.setStatus('current')
cvpdnBundlesWithTwoLinks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundlesWithTwoLinks.setStatus('current')
cvpdnBundlesWithMoreThanTwoLinks = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundlesWithMoreThanTwoLinks.setStatus('current')
cvpdnBundleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4), )
if mibBuilder.loadTexts: cvpdnBundleTable.setStatus('current')
cvpdnBundleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4, 1), ).setIndexNames((0, "CISCO-VPDN-MGMT-MIB", "cvpdnBundleName"))
if mibBuilder.loadTexts: cvpdnBundleEntry.setStatus('current')
cvpdnBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cvpdnBundleName.setStatus('current')
cvpdnBundleLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4, 1, 2), Gauge32()).setUnits('links').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundleLinkCount.setStatus('current')
cvpdnBundleEndpointType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("hostname", 2), ("string", 3), ("macAddress", 4), ("ipV4Address", 5), ("ipV6Address", 6), ("phone", 7), ("magicNumber", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundleEndpointType.setStatus('deprecated')
cvpdnBundleEndpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundleEndpoint.setStatus('current')
cvpdnBundlePeerIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundlePeerIpAddrType.setStatus('current')
cvpdnBundlePeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundlePeerIpAddr.setStatus('current')
cvpdnBundleEndpointClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 4, 1, 7), EndpointClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundleEndpointClass.setStatus('current')
cvpdnBundleLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundleLastChanged.setStatus('current')
cvpdnBundleChildTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 6), )
if mibBuilder.loadTexts: cvpdnBundleChildTable.setStatus('current')
cvpdnBundleChildEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 6, 1), ).setIndexNames((0, "CISCO-VPDN-MGMT-MIB", "cvpdnBundleName"), (0, "CISCO-VPDN-MGMT-MIB", "cvpdnBundleChildTunnelType"), (0, "CISCO-VPDN-MGMT-MIB", "cvpdnBundleChildTunnelId"), (0, "CISCO-VPDN-MGMT-MIB", "cvpdnBundleChildSessionId"))
if mibBuilder.loadTexts: cvpdnBundleChildEntry.setStatus('current')
cvpdnBundleChildTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 6, 1, 1), TunnelType())
if mibBuilder.loadTexts: cvpdnBundleChildTunnelType.setStatus('current')
cvpdnBundleChildTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 6, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cvpdnBundleChildTunnelId.setStatus('current')
cvpdnBundleChildSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 24, 1, 6, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvpdnBundleChildSessionId.setStatus('current')
ciscoVpdnMgmtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 3))
ciscoVpdnMgmtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 1))
ciscoVpdnMgmtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2))
ciscoVpdnMgmtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 1, 1)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSystemInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUserToFailHistInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVpdnMgmtMIBCompliance = ciscoVpdnMgmtMIBCompliance.setStatus('obsolete')
ciscoVpdnMgmtMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 1, 2)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSystemInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUserToFailHistInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVpdnMgmtMIBComplianceRev1 = ciscoVpdnMgmtMIBComplianceRev1.setStatus('obsolete')
ciscoVpdnMgmtMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 1, 3)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnUserToFailHistInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVpdnMgmtMIBComplianceRev2 = ciscoVpdnMgmtMIBComplianceRev2.setStatus('deprecated')
ciscoVpdnMgmtMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 1, 4)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnUserToFailHistInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrGroupRev1"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTemplateGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnNotifEnabledGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionNotifGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnConfigGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnMultilinkGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVpdnMgmtMIBComplianceRev3 = ciscoVpdnMgmtMIBComplianceRev3.setStatus('deprecated')
ciscoVpdnMgmtMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 1, 5)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnUserToFailHistInfoGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrGroupRev1"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTemplateGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnNotifEnabledGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionNotifGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnConfigGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnMultilinkGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVpdnMgmtMIBComplianceRev4 = ciscoVpdnMgmtMIBComplianceRev4.setStatus('deprecated')
ciscoVpdnMgmtMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 1, 6)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnUserToFailHistInfoGroupRev1"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrGroupRev1"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrGroupRev1"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTemplateGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnNotifEnabledGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionNotifGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnConfigGroup"), ("CISCO-VPDN-MGMT-MIB", "cvpdnMultilinkGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVpdnMgmtMIBComplianceRev5 = ciscoVpdnMgmtMIBComplianceRev5.setStatus('current')
cvpdnSystemInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 1)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelTotal"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionTotal"), ("CISCO-VPDN-MGMT-MIB", "cvpdnDeniedUsersTotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnSystemInfoGroup = cvpdnSystemInfoGroup.setStatus('obsolete')
cvpdnTunnelInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 2)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelRemoteTunnelId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelLocalName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelRemoteName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelRemoteEndpointName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelLocalInitConnection"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelOrigCause"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelState"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelActiveSessions"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelDeniedUsers"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSoftshut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelNetworkServiceType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelLocalIpAddress"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSourceIpAddress"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelRemoteIpAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnTunnelInfoGroup = cvpdnTunnelInfoGroup.setStatus('obsolete')
cvpdnTunnelSessionInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 3)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionUserName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionState"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionCallDuration"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionPacketsOut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionBytesOut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionPacketsIn"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionBytesIn"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionDeviceType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionDeviceCallerId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionDevicePhyId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionMultilink"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionModemSlotIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionModemPortIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionDS1SlotIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionDS1PortIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionDS1ChannelIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionModemCallStartTime"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelSessionModemCallStartIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnTunnelSessionInfoGroup = cvpdnTunnelSessionInfoGroup.setStatus('obsolete')
cvpdnUserToFailHistInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 4)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistUserId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistLocalInitConn"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistLocalName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistRemoteName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistSourceIp"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistDestIp"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistCount"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistFailTime"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistFailType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistFailReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnUserToFailHistInfoGroup = cvpdnUserToFailHistInfoGroup.setStatus('deprecated')
cvpdnSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 5)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSystemTunnelTotal"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemSessionTotal"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemDeniedUsersTotal"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemInitialConnReq"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemSuccessConnReq"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSystemFailedConnReq"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnSystemGroup = cvpdnSystemGroup.setStatus('current')
cvpdnTunnelAttrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 6)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteTunnelId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrLocalName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteEndpointName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrLocalInitConnection"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrOrigCause"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrState"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrActiveSessions"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrDeniedUsers"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrSoftshut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrNetworkServiceType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrLocalIpAddress"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrSourceIpAddress"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteIpAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnTunnelAttrGroup = cvpdnTunnelAttrGroup.setStatus('deprecated')
cvpdnSessionAttrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 7)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrUserName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrState"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrCallDuration"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrPacketsOut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrBytesOut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrPacketsIn"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrBytesIn"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDeviceType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDeviceCallerId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDevicePhyId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrMultilink"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrModemSlotIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrModemPortIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDS1SlotIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDS1PortIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDS1ChannelIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrModemCallStartTime"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrModemCallStartIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnSessionAttrGroup = cvpdnSessionAttrGroup.setStatus('deprecated')
cvpdnSessionAttrGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 8)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrUserName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrState"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrCallDuration"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrPacketsOut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrBytesOut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrPacketsIn"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrBytesIn"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDeviceType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDeviceCallerId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDevicePhyId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrMultilink"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrModemSlotIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrModemPortIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDS1SlotIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDS1PortIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrDS1ChannelIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrModemCallStartTime"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrModemCallStartIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrVirtualCircuitID"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrSentPktsDropped"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrRecvPktsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnSessionAttrGroupRev1 = cvpdnSessionAttrGroupRev1.setStatus('current')
cvpdnNotifEnabledGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 9)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSystemNotifSessionEnabled"), ("CISCO-VPDN-MGMT-MIB", "cvpdnNotifSessionID"), ("CISCO-VPDN-MGMT-MIB", "cvpdnNotifSessionEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnNotifEnabledGroup = cvpdnNotifEnabledGroup.setStatus('current')
cvpdnSessionNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 10)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnNotifSession"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnSessionNotifGroup = cvpdnSessionNotifGroup.setStatus('current')
cvpdnTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 11)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnTemplateActiveSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnTemplateGroup = cvpdnTemplateGroup.setStatus('current')
cvpdnConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 12)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSystemClearSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnConfigGroup = cvpdnConfigGroup.setStatus('current')
cvpdnMultilinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 13)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrMultilinkBundle"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrMultilinkIfIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlesWithOneLink"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlesWithTwoLinks"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlesWithMoreThanTwoLinks"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleLinkCount"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleEndpointType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleEndpoint"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlePeerIpAddrType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlePeerIpAddr"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleLastChanged"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleChildSessionId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnMultilinkGroup = cvpdnMultilinkGroup.setStatus('deprecated')
cvpdnMultilinkGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 14)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrMultilinkBundle"), ("CISCO-VPDN-MGMT-MIB", "cvpdnSessionAttrMultilinkIfIndex"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlesWithOneLink"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlesWithTwoLinks"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlesWithMoreThanTwoLinks"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleLinkCount"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleEndpoint"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlePeerIpAddrType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundlePeerIpAddr"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleLastChanged"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleChildSessionId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnBundleEndpointClass"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnMultilinkGroupRev1 = cvpdnMultilinkGroupRev1.setStatus('current')
cvpdnUserToFailHistInfoGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 15)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistUserId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistLocalInitConn"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistLocalName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistRemoteName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistCount"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistFailTime"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistFailType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistFailReason"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistSourceInetType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistSourceInetAddr"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistDestInetType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnUnameToFailHistDestInetAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnUserToFailHistInfoGroupRev1 = cvpdnUserToFailHistInfoGroupRev1.setStatus('current')
cvpdnTunnelAttrGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 24, 3, 2, 16)).setObjects(("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteTunnelId"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrLocalName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteEndpointName"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrLocalInitConnection"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrOrigCause"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrState"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrActiveSessions"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrDeniedUsers"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrSoftshut"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrNetworkServiceType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrLocalInetAddressType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrLocalInetAddress"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrSourceInetAddressType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrSourceInetAddress"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteInetAddressType"), ("CISCO-VPDN-MGMT-MIB", "cvpdnTunnelAttrRemoteInetAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvpdnTunnelAttrGroupRev1 = cvpdnTunnelAttrGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-VPDN-MGMT-MIB", cvpdnBundleLastChanged=cvpdnBundleLastChanged, cvpdnSystemDeniedUsersTotal=cvpdnSystemDeniedUsersTotal, cvpdnTunnelTable=cvpdnTunnelTable, cvpdnSessionAttrCallDuration=cvpdnSessionAttrCallDuration, cvpdnUserToFailHistInfo=cvpdnUserToFailHistInfo, cvpdnBundlePeerIpAddrType=cvpdnBundlePeerIpAddrType, cvpdnTunnelInfoGroup=cvpdnTunnelInfoGroup, ciscoVpdnMgmtMIBComplianceRev1=ciscoVpdnMgmtMIBComplianceRev1, cvpdnSessionAttrGroup=cvpdnSessionAttrGroup, cvpdnTunnelAttrRemoteName=cvpdnTunnelAttrRemoteName, cvpdnSessionAttrSessionId=cvpdnSessionAttrSessionId, cvpdnTunnelAttrActiveSessions=cvpdnTunnelAttrActiveSessions, cvpdnNotifSessionID=cvpdnNotifSessionID, cvpdnTunnelSessionState=cvpdnTunnelSessionState, cvpdnBundleEntry=cvpdnBundleEntry, ciscoVpdnMgmtMIBObjects=ciscoVpdnMgmtMIBObjects, cvpdnTunnelRemoteName=cvpdnTunnelRemoteName, cvpdnMultilinkInfo=cvpdnMultilinkInfo, cvpdnSessionAttrDS1PortIndex=cvpdnSessionAttrDS1PortIndex, cvpdnUnameToFailHistRemoteName=cvpdnUnameToFailHistRemoteName, cvpdnTunnelSessionUserName=cvpdnTunnelSessionUserName, cvpdnUnameToFailHistDestInetAddr=cvpdnUnameToFailHistDestInetAddr, cvpdnSystemInfoGroup=cvpdnSystemInfoGroup, cvpdnTunnelSessionModemCallStartIndex=cvpdnTunnelSessionModemCallStartIndex, cvpdnTunnelRemoteEndpointName=cvpdnTunnelRemoteEndpointName, cvpdnTunnelSessionId=cvpdnTunnelSessionId, cvpdnSessionAttrUserName=cvpdnSessionAttrUserName, cvpdnSessionAttrState=cvpdnSessionAttrState, cvpdnSessionAttrSentPktsDropped=cvpdnSessionAttrSentPktsDropped, cvpdnTunnelSessionDS1SlotIndex=cvpdnTunnelSessionDS1SlotIndex, cvpdnSessionAttrEntry=cvpdnSessionAttrEntry, cvpdnSessionAttrBytesIn=cvpdnSessionAttrBytesIn, cvpdnSessionAttrRecvPktsDropped=cvpdnSessionAttrRecvPktsDropped, EndpointClass=EndpointClass, cvpdnTunnelNetworkServiceType=cvpdnTunnelNetworkServiceType, ciscoVpdnMgmtMIBNotifs=ciscoVpdnMgmtMIBNotifs, cvpdnUnameToFailHistFailReason=cvpdnUnameToFailHistFailReason, cvpdnBundlesWithTwoLinks=cvpdnBundlesWithTwoLinks, cvpdnSessionAttrMultilinkIfIndex=cvpdnSessionAttrMultilinkIfIndex, cvpdnSessionAttrGroupRev1=cvpdnSessionAttrGroupRev1, cvpdnTunnelSessionMultilink=cvpdnTunnelSessionMultilink, cvpdnUnameToFailHistDestInetType=cvpdnUnameToFailHistDestInetType, cvpdnTunnelSourceIpAddress=cvpdnTunnelSourceIpAddress, cvpdnSessionAttrModemPortIndex=cvpdnSessionAttrModemPortIndex, cvpdnUnameToFailHistFailTime=cvpdnUnameToFailHistFailTime, cvpdnBundleChildTunnelId=cvpdnBundleChildTunnelId, cvpdnTunnelAttrSourceInetAddressType=cvpdnTunnelAttrSourceInetAddressType, TunnelType=TunnelType, cvpdnUnameToFailHistUname=cvpdnUnameToFailHistUname, cvpdnTunnelAttrRemoteIpAddress=cvpdnTunnelAttrRemoteIpAddress, cvpdnSystemTable=cvpdnSystemTable, cvpdnSessionAttrDeviceCallerId=cvpdnSessionAttrDeviceCallerId, cvpdnTunnelAttrLocalInetAddress=cvpdnTunnelAttrLocalInetAddress, cvpdnSessionAttrDS1SlotIndex=cvpdnSessionAttrDS1SlotIndex, cvpdnBundleChildTable=cvpdnBundleChildTable, cvpdnTemplateEntry=cvpdnTemplateEntry, cvpdnSessionAttrDeviceType=cvpdnSessionAttrDeviceType, cvpdnTunnelAttrRemoteInetAddressType=cvpdnTunnelAttrRemoteInetAddressType, cvpdnTunnelAttrLocalInetAddressType=cvpdnTunnelAttrLocalInetAddressType, cvpdnUnameToFailHistUserId=cvpdnUnameToFailHistUserId, cvpdnSystemGroup=cvpdnSystemGroup, cvpdnBundleEndpoint=cvpdnBundleEndpoint, cvpdnUnameToFailHistDestIp=cvpdnUnameToFailHistDestIp, cvpdnTunnelAttrOrigCause=cvpdnTunnelAttrOrigCause, cvpdnTunnelEntry=cvpdnTunnelEntry, cvpdnBundleName=cvpdnBundleName, PYSNMP_MODULE_ID=ciscoVpdnMgmtMIB, cvpdnUnameToFailHistCount=cvpdnUnameToFailHistCount, ciscoVpdnMgmtMIBComplianceRev2=ciscoVpdnMgmtMIBComplianceRev2, cvpdnMultilinkGroup=cvpdnMultilinkGroup, cvpdnTunnelSessionCallDuration=cvpdnTunnelSessionCallDuration, cvpdnTunnelAttrSourceIpAddress=cvpdnTunnelAttrSourceIpAddress, cvpdnSystemClearSessions=cvpdnSystemClearSessions, cvpdnSessionAttrBytesOut=cvpdnSessionAttrBytesOut, cvpdnTunnelSessionModemPortIndex=cvpdnTunnelSessionModemPortIndex, cvpdnTunnelSessionPacketsIn=cvpdnTunnelSessionPacketsIn, cvpdnSessionAttrVirtualCircuitID=cvpdnSessionAttrVirtualCircuitID, cvpdnTunnelTotal=cvpdnTunnelTotal, cvpdnTunnelSessionDS1PortIndex=cvpdnTunnelSessionDS1PortIndex, cvpdnSessionAttrMultilink=cvpdnSessionAttrMultilink, cvpdnBundleChildSessionId=cvpdnBundleChildSessionId, cvpdnNotifSessionEvent=cvpdnNotifSessionEvent, cvpdnUnameToFailHistLocalInitConn=cvpdnUnameToFailHistLocalInitConn, cvpdnSystemInfo=cvpdnSystemInfo, cvpdnUserToFailHistInfoGroupRev1=cvpdnUserToFailHistInfoGroupRev1, cvpdnTemplateName=cvpdnTemplateName, cvpdnSystemFailedConnReq=cvpdnSystemFailedConnReq, ciscoVpdnMgmtMIBComplianceRev4=ciscoVpdnMgmtMIBComplianceRev4, cvpdnSystemEntry=cvpdnSystemEntry, cvpdnTunnelSessionBytesOut=cvpdnTunnelSessionBytesOut, cvpdnTunnelAttrSoftshut=cvpdnTunnelAttrSoftshut, cvpdnTunnelSessionTable=cvpdnTunnelSessionTable, cvpdnBundleLinkCount=cvpdnBundleLinkCount, cvpdnBundleChildTunnelType=cvpdnBundleChildTunnelType, cvpdnNotifEnabledGroup=cvpdnNotifEnabledGroup, ciscoVpdnMgmtMIBConformance=ciscoVpdnMgmtMIBConformance, cvpdnConfigGroup=cvpdnConfigGroup, cvpdnTunnelSessionEntry=cvpdnTunnelSessionEntry, cvpdnTunnelSessionModemSlotIndex=cvpdnTunnelSessionModemSlotIndex, cvpdnTunnelAttrTunnelId=cvpdnTunnelAttrTunnelId, cvpdnUnameToFailHistFailType=cvpdnUnameToFailHistFailType, cvpdnUnameToFailHistTunnelId=cvpdnUnameToFailHistTunnelId, cvpdnSessionAttrMultilinkBundle=cvpdnSessionAttrMultilinkBundle, cvpdnUnameToFailHistSourceInetAddr=cvpdnUnameToFailHistSourceInetAddr, cvpdnTunnelOrigCause=cvpdnTunnelOrigCause, cvpdnTunnelRemoteIpAddress=cvpdnTunnelRemoteIpAddress, cvpdnTunnelSessionInfoGroup=cvpdnTunnelSessionInfoGroup, cvpdnUserToFailHistInfoEntry=cvpdnUserToFailHistInfoEntry, ciscoVpdnMgmtMIBCompliance=ciscoVpdnMgmtMIBCompliance, cvpdnTunnelLocalInitConnection=cvpdnTunnelLocalInitConnection, cvpdnTunnelAttrRemoteEndpointName=cvpdnTunnelAttrRemoteEndpointName, cvpdnTunnelAttrLocalName=cvpdnTunnelAttrLocalName, cvpdnSystemTunnelTotal=cvpdnSystemTunnelTotal, cvpdnUnameToFailHistLocalName=cvpdnUnameToFailHistLocalName, cvpdnTunnelAttrEntry=cvpdnTunnelAttrEntry, cvpdnSessionAttrPacketsIn=cvpdnSessionAttrPacketsIn, cvpdnBundlesWithMoreThanTwoLinks=cvpdnBundlesWithMoreThanTwoLinks, ciscoVpdnMgmtMIBComplianceRev5=ciscoVpdnMgmtMIBComplianceRev5, cvpdnSystemNotifSessionEnabled=cvpdnSystemNotifSessionEnabled, cvpdnTunnelLocalName=cvpdnTunnelLocalName, cvpdnTunnelAttrLocalIpAddress=cvpdnTunnelAttrLocalIpAddress, cvpdnBundlePeerIpAddr=cvpdnBundlePeerIpAddr, cvpdnTemplateActiveSessions=cvpdnTemplateActiveSessions, cvpdnTunnelSessionPacketsOut=cvpdnTunnelSessionPacketsOut, cvpdnTunnelSessionDeviceCallerId=cvpdnTunnelSessionDeviceCallerId, cvpdnTunnelAttrState=cvpdnTunnelAttrState, cvpdnSessionAttrDS1ChannelIndex=cvpdnSessionAttrDS1ChannelIndex, cvpdnSessionNotifGroup=cvpdnSessionNotifGroup, cvpdnTunnelAttrRemoteInetAddress=cvpdnTunnelAttrRemoteInetAddress, cvpdnBundleTable=cvpdnBundleTable, cvpdnBundleEndpointClass=cvpdnBundleEndpointClass, ciscoVpdnMgmtMIBComplianceRev3=ciscoVpdnMgmtMIBComplianceRev3, cvpdnNotifSession=cvpdnNotifSession, cvpdnTemplateInfo=cvpdnTemplateInfo, cvpdnTunnelAttrSourceInetAddress=cvpdnTunnelAttrSourceInetAddress, cvpdnBundleChildEntry=cvpdnBundleChildEntry, cvpdnTunnelActiveSessions=cvpdnTunnelActiveSessions, cvpdnSessionAttrTable=cvpdnSessionAttrTable, cvpdnUserToFailHistInfoGroup=cvpdnUserToFailHistInfoGroup, cvpdnTunnelState=cvpdnTunnelState, cvpdnMultilinkGroupRev1=cvpdnMultilinkGroupRev1, cvpdnSessionAttrPacketsOut=cvpdnSessionAttrPacketsOut, cvpdnTemplateGroup=cvpdnTemplateGroup, cvpdnUnameToFailHistSourceIp=cvpdnUnameToFailHistSourceIp, cvpdnSessionAttrModemSlotIndex=cvpdnSessionAttrModemSlotIndex, cvpdnTemplateTable=cvpdnTemplateTable, cvpdnSystemSessionTotal=cvpdnSystemSessionTotal, cvpdnTunnelAttrGroup=cvpdnTunnelAttrGroup, cvpdnTunnelSessionInfo=cvpdnTunnelSessionInfo, cvpdnTunnelSoftshut=cvpdnTunnelSoftshut, cvpdnTunnelAttrRemoteTunnelId=cvpdnTunnelAttrRemoteTunnelId, cvpdnTunnelInfo=cvpdnTunnelInfo, cvpdnTunnelTunnelId=cvpdnTunnelTunnelId, cvpdnTunnelAttrNetworkServiceType=cvpdnTunnelAttrNetworkServiceType, cvpdnSessionTotal=cvpdnSessionTotal, cvpdnSystemInitialConnReq=cvpdnSystemInitialConnReq, cvpdnTunnelAttrGroupRev1=cvpdnTunnelAttrGroupRev1, cvpdnSystemSuccessConnReq=cvpdnSystemSuccessConnReq, cvpdnTunnelLocalIpAddress=cvpdnTunnelLocalIpAddress, cvpdnTunnelAttrLocalInitConnection=cvpdnTunnelAttrLocalInitConnection, cvpdnTunnelSessionDevicePhyId=cvpdnTunnelSessionDevicePhyId, cvpdnTunnelAttrDeniedUsers=cvpdnTunnelAttrDeniedUsers, cvpdnBundleEndpointType=cvpdnBundleEndpointType, cvpdnTunnelRemoteTunnelId=cvpdnTunnelRemoteTunnelId, cvpdnBundlesWithOneLink=cvpdnBundlesWithOneLink, ciscoVpdnMgmtMIB=ciscoVpdnMgmtMIB, cvpdnSessionAttrModemCallStartTime=cvpdnSessionAttrModemCallStartTime, cvpdnSystemTunnelType=cvpdnSystemTunnelType, ciscoVpdnMgmtMIBCompliances=ciscoVpdnMgmtMIBCompliances, cvpdnTunnelSessionDS1ChannelIndex=cvpdnTunnelSessionDS1ChannelIndex, ciscoVpdnMgmtMIBGroups=ciscoVpdnMgmtMIBGroups, cvpdnTunnelSessionDeviceType=cvpdnTunnelSessionDeviceType, cvpdnTunnelSessionModemCallStartTime=cvpdnTunnelSessionModemCallStartTime, cvpdnTunnelSessionBytesIn=cvpdnTunnelSessionBytesIn, cvpdnTunnelDeniedUsers=cvpdnTunnelDeniedUsers, cvpdnUserToFailHistInfoTable=cvpdnUserToFailHistInfoTable, cvpdnUnameToFailHistSourceInetType=cvpdnUnameToFailHistSourceInetType, cvpdnTunnelAttrTable=cvpdnTunnelAttrTable, cvpdnSessionAttrModemCallStartIndex=cvpdnSessionAttrModemCallStartIndex, cvpdnDeniedUsersTotal=cvpdnDeniedUsersTotal, cvpdnSessionAttrDevicePhyId=cvpdnSessionAttrDevicePhyId)
