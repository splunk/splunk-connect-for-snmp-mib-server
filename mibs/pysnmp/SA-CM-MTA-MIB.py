#
# PySNMP MIB module SA-CM-MTA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SA-CM-MTA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:51:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Unsigned32, enterprises, IpAddress, MibIdentifier, iso, ObjectIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, Integer32, Counter32, Bits, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "enterprises", "IpAddress", "MibIdentifier", "iso", "ObjectIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "Integer32", "Counter32", "Bits", "Counter64")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
sa = MibIdentifier((1, 3, 6, 1, 4, 1, 1429))
saVoip = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 78))
saCmMta = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 78, 1))
saCmMta.setRevisions(('2016-12-23 00:00',))
if mibBuilder.loadTexts: saCmMta.setLastUpdated('201612230000Z')
if mibBuilder.loadTexts: saCmMta.setOrganization('Cisco Systems, Inc.')
saCmMtaDevice = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saCmMtaDevice.setStatus('current')
saCmMtaIpFilters = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("perSpec", 0), ("openMta", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saCmMtaIpFilters.setStatus('current')
saCmMtaSidCount = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(4, 4), ValueRangeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saCmMtaSidCount.setStatus('current')
saCmMtaProvisioningMode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("packetCable", 0), ("oneConfigFile", 1), ("twoConfigFilesDHCP", 2), ("twoConfigFilesSNMP", 3), ("twoConfigFilesDHCPmacAddress", 4), ("twoConfigFilesMacAddressOnly", 5), ("webPage", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saCmMtaProvisioningMode.setStatus('current')
saCmMtaDhcpPktcOption = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("require122", 0), ("requireNone", 1), ("require177", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saCmMtaDhcpPktcOption.setStatus('current')
saCmMtaRequireTod = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: saCmMtaRequireTod.setStatus('current')
saCmMtaDecryptMtaConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("RSA-CM-cert", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: saCmMtaDecryptMtaConfigFile.setStatus('current')
saCmMtaSwUpgradeControlTimer = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7200))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saCmMtaSwUpgradeControlTimer.setStatus('current')
saCmMtaDhcpOptionSixty = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 20), SnmpAdminString().clone('pktc1.0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: saCmMtaDhcpOptionSixty.setStatus('current')
saCmMtaProvSnmpSetCommunityString = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 26), SnmpAdminString().clone('public')).setMaxAccess("readonly")
if mibBuilder.loadTexts: saCmMtaProvSnmpSetCommunityString.setStatus('current')
saCmMtaCliAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 78, 1, 1001))
saCmMtaCliAccessPasswordType = MibScalar((1, 3, 6, 1, 4, 1, 1429, 78, 1, 1001, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("plain", 0), ("md5", 1), ("pod", 2))))
if mibBuilder.loadTexts: saCmMtaCliAccessPasswordType.setStatus('current')
mibBuilder.exportSymbols("SA-CM-MTA-MIB", PYSNMP_MODULE_ID=saCmMta, saCmMtaDhcpOptionSixty=saCmMtaDhcpOptionSixty, saCmMtaSwUpgradeControlTimer=saCmMtaSwUpgradeControlTimer, saCmMtaCliAccess=saCmMtaCliAccess, saCmMtaIpFilters=saCmMtaIpFilters, sa=sa, saVoip=saVoip, saCmMtaDevice=saCmMtaDevice, saCmMtaProvisioningMode=saCmMtaProvisioningMode, saCmMtaDecryptMtaConfigFile=saCmMtaDecryptMtaConfigFile, saCmMta=saCmMta, saCmMtaCliAccessPasswordType=saCmMtaCliAccessPasswordType, saCmMtaProvSnmpSetCommunityString=saCmMtaProvSnmpSetCommunityString, saCmMtaRequireTod=saCmMtaRequireTod, saCmMtaSidCount=saCmMtaSidCount, saCmMtaDhcpPktcOption=saCmMtaDhcpPktcOption)
