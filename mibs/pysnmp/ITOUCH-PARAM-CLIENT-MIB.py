#
# PySNMP MIB module ITOUCH-PARAM-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ITOUCH-PARAM-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:47:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
AddressType, iTouch, DateTime = mibBuilder.importSymbols("ITOUCH-MIB", "AddressType", "iTouch", "DateTime")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Bits, Counter32, MibIdentifier, IpAddress, Gauge32, Unsigned32, iso, ObjectIdentity, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Bits", "Counter32", "MibIdentifier", "IpAddress", "Gauge32", "Unsigned32", "iso", "ObjectIdentity", "ModuleIdentity", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xParamClient = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 7))
paramClientLoaderName = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientLoaderName.setStatus('mandatory')
paramClientLoaderAddressType = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 2), AddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientLoaderAddressType.setStatus('mandatory')
paramClientLoaderAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientLoaderAddress.setStatus('mandatory')
paramClientParameterVersion = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientParameterVersion.setStatus('mandatory')
paramClientUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 5), DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientUpdateTime.setStatus('mandatory')
paramClientServerCheck = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientServerCheck.setStatus('mandatory')
paramClientCheckInterval = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientCheckInterval.setStatus('mandatory')
paramClientCheckNow = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientCheckNow.setStatus('mandatory')
paramClientServerLimit = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientServerLimit.setStatus('mandatory')
paramClientRetransmitInterval = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientRetransmitInterval.setStatus('mandatory')
paramClientRetransmitLimit = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientRetransmitLimit.setStatus('mandatory')
paramClientState = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("other", 1), ("idle", 2), ("internal1", 3), ("internal2", 4), ("internal3", 5), ("internal4", 6), ("internal5", 7), ("internal6", 8), ("internal7", 9), ("internal8", 10), ("hold", 11), ("retry", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientState.setStatus('mandatory')
paramClientProtocolErrors = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientProtocolErrors.setStatus('mandatory')
paramClientServerRejects = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientServerRejects.setStatus('mandatory')
paramClientServerNumber = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientServerNumber.setStatus('mandatory')
paramServerTable = MibTable((1, 3, 6, 1, 4, 1, 33, 7, 16), )
if mibBuilder.loadTexts: paramServerTable.setStatus('mandatory')
paramServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 7, 16, 1), ).setIndexNames((0, "ITOUCH-PARAM-CLIENT-MIB", "paramServerName"))
if mibBuilder.loadTexts: paramServerEntry.setStatus('mandatory')
paramServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramServerName.setStatus('mandatory')
paramServerEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2))).clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramServerEntryStatus.setStatus('mandatory')
paramServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 3), AddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramServerAddressType.setStatus('mandatory')
paramServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramServerAddress.setStatus('mandatory')
paramServerStoredVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramServerStoredVersion.setStatus('mandatory')
paramServerStoredTime = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 6), DateTime().clone(hexValue="00")).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramServerStoredTime.setStatus('mandatory')
paramServerStoredStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("current", 2), ("ahead", 3), ("behind", 4), ("failing", 5), ("failed", 6), ("query", 7), ("noMemCard", 8))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramServerStoredStatus.setStatus('mandatory')
paramServerStoredFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("protocolOut", 3), ("open", 4), ("read", 5), ("write", 6), ("resource", 7), ("protocolIn", 8), ("response", 9), ("close", 10), ("delete", 11), ("rename", 12), ("fileData", 13))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramServerStoredFailure.setStatus('mandatory')
paramClientPath = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientPath.setStatus('mandatory')
paramClientChassisStorageState = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notApplicable", 1), ("unknown", 2), ("current", 3), ("verifying", 4), ("busBusy", 5), ("retrying", 6), ("failing", 7), ("behind", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: paramClientChassisStorageState.setStatus('mandatory')
paramClientTftpBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientTftpBroadcast.setStatus('mandatory')
paramClientWriteNow = MibScalar((1, 3, 6, 1, 4, 1, 33, 7, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paramClientWriteNow.setStatus('mandatory')
mibBuilder.exportSymbols("ITOUCH-PARAM-CLIENT-MIB", paramClientTftpBroadcast=paramClientTftpBroadcast, paramClientServerCheck=paramClientServerCheck, paramServerStoredTime=paramServerStoredTime, paramClientLoaderAddressType=paramClientLoaderAddressType, paramClientCheckNow=paramClientCheckNow, paramServerStoredFailure=paramServerStoredFailure, paramClientCheckInterval=paramClientCheckInterval, paramServerStoredVersion=paramServerStoredVersion, paramClientUpdateTime=paramClientUpdateTime, paramClientRetransmitInterval=paramClientRetransmitInterval, paramServerEntry=paramServerEntry, paramClientParameterVersion=paramClientParameterVersion, paramClientServerNumber=paramClientServerNumber, paramClientWriteNow=paramClientWriteNow, xParamClient=xParamClient, paramServerName=paramServerName, paramClientProtocolErrors=paramClientProtocolErrors, paramClientServerRejects=paramClientServerRejects, paramServerAddressType=paramServerAddressType, paramClientState=paramClientState, paramClientServerLimit=paramClientServerLimit, paramClientLoaderName=paramClientLoaderName, paramServerStoredStatus=paramServerStoredStatus, paramClientPath=paramClientPath, paramClientRetransmitLimit=paramClientRetransmitLimit, paramServerEntryStatus=paramServerEntryStatus, paramServerAddress=paramServerAddress, paramClientLoaderAddress=paramClientLoaderAddress, paramClientChassisStorageState=paramClientChassisStorageState, paramServerTable=paramServerTable)
