#
# PySNMP MIB module ELFIQ-MODULE-FOVE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELFIQ-MODULE-FOVE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:45:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
commonConformance, common = mibBuilder.importSymbols("ELFIQ-INC-MIB", "commonConformance", "common")
commonComponent, commonNotification = mibBuilder.importSymbols("ELFIQ-MODULE-COMMON-MIB", "commonComponent", "commonNotification")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
snmpTraps, = mibBuilder.importSymbols("SNMPv2-MIB", "snmpTraps")
NotificationType, iso, ObjectIdentity, ModuleIdentity, MibIdentifier, Gauge32, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, Counter64, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Gauge32", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "Counter64", "Unsigned32", "Integer32")
MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention")
foveInfo = ModuleIdentity((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2))
if mibBuilder.loadTexts: foveInfo.setLastUpdated('0902190000Z')
if mibBuilder.loadTexts: foveInfo.setOrganization('Elfiq Inc.')
class FoveIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 5)

foveIntNumber = MibScalar((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveIntNumber.setStatus('current')
foveTable = MibTable((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: foveTable.setStatus('current')
foveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "ELFIQ-MODULE-FOVE-MIB", "foveIntIndex"))
if mibBuilder.loadTexts: foveEntry.setStatus('current')
foveIntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 1), FoveIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveIntIndex.setStatus('current')
foveIntUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveIntUsed.setStatus('current')
foveIntType = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("management", 1), ("critical", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveIntType.setStatus('current')
foveLocalState = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("negociation", 1), ("master", 2), ("slave", 3), ("failure", 4), ("dead", 5), ("paused", 6), ("managementfailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveLocalState.setStatus('current')
foveRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteId.setStatus('current')
foveRemoteSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteSeq.setStatus('current')
foveRemoteState = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("negociation", 1), ("master", 2), ("slave", 3), ("failure", 4), ("dead", 5), ("paused", 6), ("managementfailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteState.setStatus('current')
foveRemoteMgmtIP = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteMgmtIP.setStatus('current')
foveRemoteIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteIfName.setStatus('current')
foveRemoteLastL2FoMSec = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteLastL2FoMSec.setStatus('current')
foveRemoteMac = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteMac.setStatus('current')
foveVIPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveVIPStatus.setStatus('current')
foveVIP = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveVIP.setStatus('current')
foveNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 2))
foveStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 2, 1)).setObjects(("ELFIQ-MODULE-FOVE-MIB", "foveLocalState"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteState"), ("ELFIQ-MODULE-FOVE-MIB", "foveVIPStatus"), ("ELFIQ-MODULE-FOVE-MIB", "foveVIP"))
if mibBuilder.loadTexts: foveStatusChanged.setStatus('current')
foveGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 19713, 2, 1, 2))
systInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 19713, 2, 1, 2, 1)).setObjects(("ELFIQ-MODULE-FOVE-MIB", "foveIntNumber"), ("ELFIQ-MODULE-FOVE-MIB", "foveIntIndex"), ("ELFIQ-MODULE-FOVE-MIB", "foveIntUsed"), ("ELFIQ-MODULE-FOVE-MIB", "foveIntType"), ("ELFIQ-MODULE-FOVE-MIB", "foveLocalState"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteId"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteSeq"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteState"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteMgmtIP"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteIfName"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteLastL2FoMSec"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteMac"), ("ELFIQ-MODULE-FOVE-MIB", "foveVIPStatus"), ("ELFIQ-MODULE-FOVE-MIB", "foveVIP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    systInfoGroup = systInfoGroup.setStatus('current')
foveNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 19713, 2, 1, 2, 2)).setObjects(("ELFIQ-MODULE-FOVE-MIB", "foveStatusChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    foveNotificationGroup = foveNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("ELFIQ-MODULE-FOVE-MIB", foveRemoteLastL2FoMSec=foveRemoteLastL2FoMSec, foveRemoteState=foveRemoteState, FoveIndex=FoveIndex, foveRemoteId=foveRemoteId, foveVIPStatus=foveVIPStatus, PYSNMP_MODULE_ID=foveInfo, foveRemoteSeq=foveRemoteSeq, foveIntUsed=foveIntUsed, foveIntNumber=foveIntNumber, foveInfo=foveInfo, foveVIP=foveVIP, foveIntType=foveIntType, systInfoGroup=systInfoGroup, foveNotification=foveNotification, foveTable=foveTable, foveStatusChanged=foveStatusChanged, foveNotificationGroup=foveNotificationGroup, foveEntry=foveEntry, foveLocalState=foveLocalState, foveGroups=foveGroups, foveRemoteMac=foveRemoteMac, foveRemoteMgmtIP=foveRemoteMgmtIP, foveIntIndex=foveIntIndex, foveRemoteIfName=foveRemoteIfName)
