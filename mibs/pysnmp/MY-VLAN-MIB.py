#
# PySNMP MIB module MY-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
IfIndex, ConfigStatus, MemberMap = mibBuilder.importSymbols("MY-TC", "IfIndex", "ConfigStatus", "MemberMap")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
PortList, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanId")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, ModuleIdentity, ObjectIdentity, NotificationType, IpAddress, Counter32, TimeTicks, Bits, Gauge32, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "ModuleIdentity", "ObjectIdentity", "NotificationType", "IpAddress", "Counter32", "TimeTicks", "Bits", "Gauge32", "Unsigned32", "MibIdentifier")
TextualConvention, TruthValue, RowStatus, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "MacAddress", "DisplayString")
myVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9))
myVlanMIB.setRevisions(('2002-03-20 00:00',))
if mibBuilder.loadTexts: myVlanMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myVlanMIB.setOrganization('D-Link Crop.')
myVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1))
class VlanList(TextualConvention, OctetString):
    status = 'current'

myVlanMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myVlanMaxNumber.setStatus('current')
myVlanCurrentNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myVlanCurrentNumber.setStatus('current')
mySystemMaxVID = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemMaxVID.setStatus('current')
myVlanIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 4), )
if mibBuilder.loadTexts: myVlanIfConfigTable.setStatus('obsolete')
myVlanIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 4, 1), ).setIndexNames((0, "MY-VLAN-MIB", "myVlanIfConfigIfIndex"))
if mibBuilder.loadTexts: myVlanIfConfigEntry.setStatus('obsolete')
myVlanIfConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 4, 1, 1), IfIndex())
if mibBuilder.loadTexts: myVlanIfConfigIfIndex.setStatus('obsolete')
myVlanIfAccessVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 4, 1, 2), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanIfAccessVlan.setStatus('obsolete')
myVlanIfNativeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 4, 1, 3), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanIfNativeVlan.setStatus('obsolete')
myVlanIfAllowedVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanIfAllowedVlanList.setStatus('obsolete')
myVlanTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 5), )
if mibBuilder.loadTexts: myVlanTable.setStatus('obsolete')
myVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 5, 1), ).setIndexNames((0, "MY-VLAN-MIB", "myVlanVID"))
if mibBuilder.loadTexts: myVlanEntry.setStatus('obsolete')
myVlanVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 5, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myVlanVID.setStatus('obsolete')
myVlanPortMemberAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 5, 1, 2), MemberMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myVlanPortMemberAction.setStatus('obsolete')
myVlanApMemberAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 5, 1, 3), MemberMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myVlanApMemberAction.setStatus('obsolete')
myVlanAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanAlias.setStatus('obsolete')
myVlanEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 5, 1, 5), ConfigStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myVlanEntryStatus.setStatus('obsolete')
myVlanPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 6), )
if mibBuilder.loadTexts: myVlanPortConfigTable.setStatus('current')
myVlanPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 6, 1), ).setIndexNames((0, "MY-VLAN-MIB", "myVlanPortConfigIndex"))
if mibBuilder.loadTexts: myVlanPortConfigEntry.setStatus('current')
myVlanPortConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 6, 1, 1), IfIndex())
if mibBuilder.loadTexts: myVlanPortConfigIndex.setStatus('current')
myVlanPortConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("access", 1), ("trunk", 2), ("dot1q-tunnel", 3), ("hybrid", 4), ("other", 5), ("uplink", 6), ("host", 7), ("promiscuous", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myVlanPortConfigMode.setStatus('current')
myVlanPortAccessVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 6, 1, 3), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanPortAccessVlan.setStatus('current')
myVlanPortNativeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 6, 1, 4), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanPortNativeVlan.setStatus('current')
myVlanPortAllowedVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 6, 1, 5), VlanList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanPortAllowedVlanList.setStatus('current')
myVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 7), )
if mibBuilder.loadTexts: myVlanConfigTable.setStatus('current')
myVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 7, 1), ).setIndexNames((0, "MY-VLAN-MIB", "myVlanConfigVID"))
if mibBuilder.loadTexts: myVlanConfigEntry.setStatus('current')
myVlanConfigVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 7, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myVlanConfigVID.setStatus('current')
myVlanConfigAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanConfigAction.setStatus('current')
myVlanConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myVlanConfigName.setStatus('current')
myVlanConfigPortMember = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 1, 7, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myVlanConfigPortMember.setStatus('current')
myVlanMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 2))
myVlanMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 2, 1))
myVlanMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 2, 2))
myVlanMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 2, 1, 1)).setObjects(("MY-VLAN-MIB", "myVlanMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myVlanMIBCompliance = myVlanMIBCompliance.setStatus('current')
myVlanMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 9, 2, 2, 1)).setObjects(("MY-VLAN-MIB", "myVlanMaxNumber"), ("MY-VLAN-MIB", "myVlanCurrentNumber"), ("MY-VLAN-MIB", "mySystemMaxVID"), ("MY-VLAN-MIB", "myVlanIfAccessVlan"), ("MY-VLAN-MIB", "myVlanIfNativeVlan"), ("MY-VLAN-MIB", "myVlanIfAllowedVlanList"), ("MY-VLAN-MIB", "myVlanVID"), ("MY-VLAN-MIB", "myVlanApMemberAction"), ("MY-VLAN-MIB", "myVlanPortMemberAction"), ("MY-VLAN-MIB", "myVlanAlias"), ("MY-VLAN-MIB", "myVlanEntryStatus"), ("MY-VLAN-MIB", "myVlanPortConfigMode"), ("MY-VLAN-MIB", "myVlanPortAccessVlan"), ("MY-VLAN-MIB", "myVlanPortNativeVlan"), ("MY-VLAN-MIB", "myVlanPortAllowedVlanList"), ("MY-VLAN-MIB", "myVlanConfigVID"), ("MY-VLAN-MIB", "myVlanConfigAction"), ("MY-VLAN-MIB", "myVlanConfigName"), ("MY-VLAN-MIB", "myVlanConfigPortMember"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myVlanMIBGroup = myVlanMIBGroup.setStatus('current')
mibBuilder.exportSymbols("MY-VLAN-MIB", myVlanMIBConformance=myVlanMIBConformance, myVlanIfAccessVlan=myVlanIfAccessVlan, myVlanPortConfigMode=myVlanPortConfigMode, myVlanConfigName=myVlanConfigName, PYSNMP_MODULE_ID=myVlanMIB, myVlanMaxNumber=myVlanMaxNumber, myVlanVID=myVlanVID, myVlanMIBCompliance=myVlanMIBCompliance, myVlanMIB=myVlanMIB, myVlanConfigAction=myVlanConfigAction, VlanList=VlanList, myVlanMIBCompliances=myVlanMIBCompliances, myVlanEntryStatus=myVlanEntryStatus, myVlanCurrentNumber=myVlanCurrentNumber, myVlanPortConfigTable=myVlanPortConfigTable, myVlanPortAllowedVlanList=myVlanPortAllowedVlanList, myVlanConfigTable=myVlanConfigTable, myVlanPortConfigIndex=myVlanPortConfigIndex, myVlanEntry=myVlanEntry, myVlanIfNativeVlan=myVlanIfNativeVlan, myVlanApMemberAction=myVlanApMemberAction, myVlanConfigPortMember=myVlanConfigPortMember, myVlanPortNativeVlan=myVlanPortNativeVlan, myVlanIfConfigEntry=myVlanIfConfigEntry, myVlanConfigVID=myVlanConfigVID, myVlanPortAccessVlan=myVlanPortAccessVlan, myVlanMIBObjects=myVlanMIBObjects, myVlanIfAllowedVlanList=myVlanIfAllowedVlanList, myVlanIfConfigIfIndex=myVlanIfConfigIfIndex, myVlanPortConfigEntry=myVlanPortConfigEntry, myVlanIfConfigTable=myVlanIfConfigTable, myVlanMIBGroup=myVlanMIBGroup, mySystemMaxVID=mySystemMaxVID, myVlanMIBGroups=myVlanMIBGroups, myVlanAlias=myVlanAlias, myVlanConfigEntry=myVlanConfigEntry, myVlanPortMemberAction=myVlanPortMemberAction, myVlanTable=myVlanTable)
