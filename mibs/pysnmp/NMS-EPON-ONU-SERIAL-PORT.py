#
# PySNMP MIB module NMS-EPON-ONU-SERIAL-PORT (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-EPON-ONU-SERIAL-PORT
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
nmsEPONGroup, = mibBuilder.importSymbols("NMS-SMI", "nmsEPONGroup")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, ObjectIdentity, IpAddress, Counter32, MibIdentifier, Bits, Unsigned32, TimeTicks, Counter64, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "ObjectIdentity", "IpAddress", "Counter32", "MibIdentifier", "Bits", "Unsigned32", "TimeTicks", "Counter64", "NotificationType", "Gauge32")
DisplayString, RowStatus, MacAddress, TruthValue, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "MacAddress", "TruthValue", "PhysAddress", "TextualConvention")
nmsEponOnuSerialPort = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27))
nmsEponOnuSerialPortTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1), )
if mibBuilder.loadTexts: nmsEponOnuSerialPortTable.setStatus('mandatory')
nmsEponOnuSerialPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1), ).setIndexNames((0, "NMS-EPON-ONU-SERIAL-PORT", "llidIfIndex"), (0, "NMS-EPON-ONU-SERIAL-PORT", "onuSerialPortSeqNo"))
if mibBuilder.loadTexts: nmsEponOnuSerialPortEntry.setStatus('mandatory')
llidIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llidIfIndex.setStatus('mandatory')
onuSerialPortSeqNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(224, 239))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuSerialPortSeqNo.setStatus('mandatory')
onuSerialPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 115200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortSpeed.setStatus('mandatory')
onuSerialPortDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortDataBits.setStatus('mandatory')
onuSerialPortHaltBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortHaltBits.setStatus('mandatory')
onuSerialPortParity = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("odd", 1), ("even", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortParity.setStatus('mandatory')
onuSerialPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("software", 1), ("hardware", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortFlowControl.setStatus('mandatory')
onuSerialPortPropRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: onuSerialPortPropRowStatus.setStatus('mandatory')
onuSerialPortDataReadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortDataReadInterval.setStatus('mandatory')
onuSerialPortDataReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortDataReadBytes.setStatus('mandatory')
onuSerialPortBufferRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: onuSerialPortBufferRowStatus.setStatus('mandatory')
onuSerialPortKeepaliveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortKeepaliveMode.setStatus('mandatory')
onuSerialPortKeepaliveIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortKeepaliveIdle.setStatus('mandatory')
onuSerialPortKeepaliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortKeepaliveTimeout.setStatus('mandatory')
onuSerialPortKeepaliveProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortKeepaliveProbeCount.setStatus('mandatory')
onuSerialPortKeepaliveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: onuSerialPortKeepaliveRowStatus.setStatus('mandatory')
onuSerialPortLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 101, 27, 1, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSerialPortLoopback.setStatus('mandatory')
mibBuilder.exportSymbols("NMS-EPON-ONU-SERIAL-PORT", onuSerialPortDataReadInterval=onuSerialPortDataReadInterval, onuSerialPortDataReadBytes=onuSerialPortDataReadBytes, nmsEponOnuSerialPortEntry=nmsEponOnuSerialPortEntry, onuSerialPortHaltBits=onuSerialPortHaltBits, onuSerialPortBufferRowStatus=onuSerialPortBufferRowStatus, onuSerialPortDataBits=onuSerialPortDataBits, onuSerialPortSeqNo=onuSerialPortSeqNo, onuSerialPortLoopback=onuSerialPortLoopback, onuSerialPortKeepaliveTimeout=onuSerialPortKeepaliveTimeout, onuSerialPortKeepaliveMode=onuSerialPortKeepaliveMode, onuSerialPortParity=onuSerialPortParity, onuSerialPortPropRowStatus=onuSerialPortPropRowStatus, onuSerialPortKeepaliveProbeCount=onuSerialPortKeepaliveProbeCount, onuSerialPortKeepaliveIdle=onuSerialPortKeepaliveIdle, onuSerialPortSpeed=onuSerialPortSpeed, nmsEponOnuSerialPort=nmsEponOnuSerialPort, onuSerialPortFlowControl=onuSerialPortFlowControl, llidIfIndex=llidIfIndex, onuSerialPortKeepaliveRowStatus=onuSerialPortKeepaliveRowStatus, nmsEponOnuSerialPortTable=nmsEponOnuSerialPortTable)
