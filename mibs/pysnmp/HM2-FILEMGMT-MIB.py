#
# PySNMP MIB module HM2-FILEMGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-FILEMGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:18:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
HmTimeSeconds1970, HmEnabledStatus, hm2ConfigurationMibs = mibBuilder.importSymbols("HM2-TC-MIB", "HmTimeSeconds1970", "HmEnabledStatus", "hm2ConfigurationMibs")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, IpAddress, MibIdentifier, ModuleIdentity, ObjectIdentity, Integer32, Counter64, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "IpAddress", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "Integer32", "Counter64", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "TimeTicks", "Unsigned32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
hm2FileMgmtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21))
hm2FileMgmtMib.setRevisions(('2011-03-16 00:00',))
if mibBuilder.loadTexts: hm2FileMgmtMib.setLastUpdated('201103160000Z')
if mibBuilder.loadTexts: hm2FileMgmtMib.setOrganization('Hirschmann Automation and Control GmbH')
hm2FileMgmtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 0))
hm2FileMgmtMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 1))
hm2FileMgmtSNMPExtensionGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 3))
hm2FileMgmtProfileGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1))
hm2FileMgmtActionGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2))
hm2FileMgmtStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 3))
hm2FileMgmtConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4))
hm2FMActionTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 1), )
if mibBuilder.loadTexts: hm2FMActionTable.setStatus('current')
hm2FMActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 1, 1), ).setIndexNames((0, "HM2-FILEMGMT-MIB", "hm2FMActionType"), (0, "HM2-FILEMGMT-MIB", "hm2FMActionItemType"), (0, "HM2-FILEMGMT-MIB", "hm2FMActionSourceType"), (0, "HM2-FILEMGMT-MIB", "hm2FMActionDestinationType"))
if mibBuilder.loadTexts: hm2FMActionEntry.setStatus('current')
hm2FMActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nop", 1), ("copy", 2), ("clear", 3), ("swap", 4))))
if mibBuilder.loadTexts: hm2FMActionType.setStatus('current')
hm2FMActionItemType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 10, 15, 20, 30, 31, 40, 41, 42, 50, 51, 52, 53, 60, 65, 70, 71, 80, 81, 82, 83, 84, 90, 100))).clone(namedValues=NamedValues(("none", 1), ("config", 10), ("filesystem", 15), ("script", 20), ("firmware", 30), ("bootcode", 31), ("eventlog", 40), ("audittrail", 41), ("traplog", 42), ("sysinfo", 50), ("sfpWhiteList", 51), ("cliBanner", 52), ("sysinfoall", 53), ("sshkey", 60), ("httpsServerCert", 65), ("tcpdumpcap", 70), ("tcpdumpfilter", 71), ("camcert", 80), ("ldapCacert", 81), ("mailCacert", 82), ("syslogCacert", 83), ("camcertPEM", 84), ("edsFile", 90), ("gsdmlFile", 100))))
if mibBuilder.loadTexts: hm2FMActionItemType.setStatus('current')
hm2FMActionSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 10, 11, 20))).clone(namedValues=NamedValues(("none", 1), ("nvm", 2), ("envm", 3), ("buffered", 6), ("persistent", 7), ("runningConfig", 10), ("system", 11), ("server", 20))))
if mibBuilder.loadTexts: hm2FMActionSourceType.setStatus('current')
hm2FMActionDestinationType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 11, 20))).clone(namedValues=NamedValues(("none", 1), ("nvm", 2), ("envm", 3), ("runningConfig", 10), ("system", 11), ("server", 20))))
if mibBuilder.loadTexts: hm2FMActionDestinationType.setStatus('current')
hm2FMActionActivate = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMActionActivate.setStatus('current')
hm2FMActionSourceData = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMActionSourceData.setStatus('current')
hm2FMActionDestinationData = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMActionDestinationData.setStatus('current')
hm2FMActionActivateResult = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("paramError", 2), ("busy", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMActionActivateResult.setStatus('current')
hm2FMActionActivateResultText = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMActionActivateResultText.setStatus('current')
hm2FMActionStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("running", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMActionStatus.setStatus('current')
hm2FMActionPercentReady = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMActionPercentReady.setStatus('current')
hm2FMActionResult = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("error", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMActionResult.setStatus('current')
hm2FMActionResultText = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMActionResultText.setStatus('current')
hm2FMActionActivateKey = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMActionActivateKey.setStatus('current')
hm2FMActionContainerPassword = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMActionContainerPassword.setStatus('current')
hm2FMActionParameter = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("all", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMActionParameter.setStatus('current')
hm2FMActionSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 2, 21), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMActionSourceInterface.setStatus('current')
hm2FMProfileTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1), )
if mibBuilder.loadTexts: hm2FMProfileTable.setStatus('current')
hm2FMProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1), ).setIndexNames((0, "HM2-FILEMGMT-MIB", "hm2FMProfileStorageType"), (0, "HM2-FILEMGMT-MIB", "hm2FMProfileIndex"))
if mibBuilder.loadTexts: hm2FMProfileEntry.setStatus('current')
hm2FMProfileStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nvm", 1), ("envm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileStorageType.setStatus('current')
hm2FMProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileIndex.setStatus('current')
hm2FMProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileName.setStatus('current')
hm2FMProfileDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 4), HmTimeSeconds1970()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileDateTime.setStatus('current')
hm2FMProfileActive = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMProfileActive.setStatus('current')
hm2FMProfileAction = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMProfileAction.setStatus('current')
hm2FMProfileDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 7), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileDeviceType.setStatus('current')
hm2FMProfileEncryptionActive = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileEncryptionActive.setStatus('current')
hm2FMProfileEncryptionVerified = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileEncryptionVerified.setStatus('current')
hm2FMProfileSwMajorRelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileSwMajorRelNum.setStatus('current')
hm2FMProfileSwMinorRelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileSwMinorRelNum.setStatus('current')
hm2FMProfileSwBugfixRelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileSwBugfixRelNum.setStatus('current')
hm2FMProfileFingerprint = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileFingerprint.setStatus('current')
hm2FMProfileFingerprintVerified = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 1, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMProfileFingerprintVerified.setStatus('current')
hm2FMNvmState = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("outOfSync", 2), ("busy", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMNvmState.setStatus('current')
hm2FMEnvmState = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("outOfSync", 2), ("absent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMEnvmState.setStatus('current')
hm2FMBootParamState = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("outOfSync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FMBootParamState.setStatus('current')
hm2FileMgmtConfigWatchdogControl = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 1))
hm2ConfigWatchdogAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 1, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2ConfigWatchdogAdminStatus.setStatus('current')
hm2ConfigWatchdogOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 1, 2), HmEnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2ConfigWatchdogOperStatus.setStatus('current')
hm2ConfigWatchdogTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 600)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2ConfigWatchdogTimeInterval.setStatus('current')
hm2ConfigWatchdogTimerValue = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2ConfigWatchdogTimerValue.setStatus('current')
hm2ConfigWatchdogIPAddressType = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2ConfigWatchdogIPAddressType.setStatus('current')
hm2ConfigWatchdogIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2ConfigWatchdogIPAddress.setStatus('current')
hm2FileMgmtServerAccessGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 2))
hm2FMServerUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMServerUserName.setStatus('current')
hm2FMServerPassword = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FMServerPassword.setStatus('current')
hm2FileMgmtSecurityGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 4))
hm2FileMgmtConfigPasswordStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 4, 1), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2FileMgmtConfigPasswordStatus.setStatus('current')
hm2FileMgmtConfigPasswordChange = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FileMgmtConfigPasswordChange.setStatus('current')
hm2FileMgmtGlobalSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 9), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FileMgmtGlobalSourceInterface.setStatus('current')
hm2FileMgmtConfigCompatibilityMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 21, 1, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("hiosV1V2", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2FileMgmtConfigCompatibilityMode.setStatus('current')
hm2FileMgmtSESCfgActivateSuccessSetFailuresReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21, 3, 1))
if mibBuilder.loadTexts: hm2FileMgmtSESCfgActivateSuccessSetFailuresReturn.setStatus('current')
hm2FileMgmtSESCfgActivateErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21, 3, 2))
if mibBuilder.loadTexts: hm2FileMgmtSESCfgActivateErrorReturn.setStatus('current')
hm2FileMgmtSESCfgActivateIncomlpeteReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21, 3, 3))
if mibBuilder.loadTexts: hm2FileMgmtSESCfgActivateIncomlpeteReturn.setStatus('current')
hm2FileMgmtSESCfgMgrCopyCommandErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21, 3, 4))
if mibBuilder.loadTexts: hm2FileMgmtSESCfgMgrCopyCommandErrorReturn.setStatus('current')
hm2FileMgmtSESCfgMgrClearCommandErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21, 3, 5))
if mibBuilder.loadTexts: hm2FileMgmtSESCfgMgrClearCommandErrorReturn.setStatus('current')
hm2FileMgmtSESCfgMgrSwapCommandErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21, 3, 6))
if mibBuilder.loadTexts: hm2FileMgmtSESCfgMgrSwapCommandErrorReturn.setStatus('current')
hm2FileMgmtSESCfgErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21, 3, 7))
if mibBuilder.loadTexts: hm2FileMgmtSESCfgErrorReturn.setStatus('current')
hm2FileMgmtSESCfgMgrCommandActivateErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 11, 21, 3, 8))
if mibBuilder.loadTexts: hm2FileMgmtSESCfgMgrCommandActivateErrorReturn.setStatus('current')
hm2ConfigurationSavedTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 21, 0, 1)).setObjects(("HM2-FILEMGMT-MIB", "hm2FMNvmState"), ("HM2-FILEMGMT-MIB", "hm2FMEnvmState"))
if mibBuilder.loadTexts: hm2ConfigurationSavedTrap.setStatus('current')
hm2ConfigurationChangedTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 21, 0, 2)).setObjects(("HM2-FILEMGMT-MIB", "hm2FMNvmState"))
if mibBuilder.loadTexts: hm2ConfigurationChangedTrap.setStatus('current')
mibBuilder.exportSymbols("HM2-FILEMGMT-MIB", hm2FMProfileSwMajorRelNum=hm2FMProfileSwMajorRelNum, hm2FMActionParameter=hm2FMActionParameter, hm2FMActionType=hm2FMActionType, hm2FMActionPercentReady=hm2FMActionPercentReady, hm2FMActionContainerPassword=hm2FMActionContainerPassword, hm2FileMgmtConfigPasswordChange=hm2FileMgmtConfigPasswordChange, hm2FMProfileStorageType=hm2FMProfileStorageType, hm2FMProfileActive=hm2FMProfileActive, hm2FMProfileEncryptionActive=hm2FMProfileEncryptionActive, hm2FileMgmtSESCfgErrorReturn=hm2FileMgmtSESCfgErrorReturn, hm2FileMgmtConfigCompatibilityMode=hm2FileMgmtConfigCompatibilityMode, hm2FMActionActivateResult=hm2FMActionActivateResult, hm2FileMgmtServerAccessGroup=hm2FileMgmtServerAccessGroup, hm2FMProfileDeviceType=hm2FMProfileDeviceType, hm2FileMgmtNotifications=hm2FileMgmtNotifications, hm2ConfigWatchdogIPAddressType=hm2ConfigWatchdogIPAddressType, hm2FMActionActivateResultText=hm2FMActionActivateResultText, hm2FileMgmtGlobalSourceInterface=hm2FileMgmtGlobalSourceInterface, hm2FMActionSourceData=hm2FMActionSourceData, hm2FileMgmtMibObjects=hm2FileMgmtMibObjects, hm2FMNvmState=hm2FMNvmState, hm2ConfigWatchdogAdminStatus=hm2ConfigWatchdogAdminStatus, hm2FMServerUserName=hm2FMServerUserName, hm2FMActionResult=hm2FMActionResult, hm2FileMgmtSESCfgActivateSuccessSetFailuresReturn=hm2FileMgmtSESCfgActivateSuccessSetFailuresReturn, PYSNMP_MODULE_ID=hm2FileMgmtMib, hm2FileMgmtActionGroup=hm2FileMgmtActionGroup, hm2FileMgmtSecurityGroup=hm2FileMgmtSecurityGroup, hm2FMProfileDateTime=hm2FMProfileDateTime, hm2FMActionSourceType=hm2FMActionSourceType, hm2FileMgmtSNMPExtensionGroup=hm2FileMgmtSNMPExtensionGroup, hm2FMProfileEncryptionVerified=hm2FMProfileEncryptionVerified, hm2ConfigWatchdogTimeInterval=hm2ConfigWatchdogTimeInterval, hm2ConfigWatchdogOperStatus=hm2ConfigWatchdogOperStatus, hm2FileMgmtSESCfgMgrCopyCommandErrorReturn=hm2FileMgmtSESCfgMgrCopyCommandErrorReturn, hm2FileMgmtSESCfgActivateErrorReturn=hm2FileMgmtSESCfgActivateErrorReturn, hm2FileMgmtSESCfgMgrSwapCommandErrorReturn=hm2FileMgmtSESCfgMgrSwapCommandErrorReturn, hm2FMProfileName=hm2FMProfileName, hm2FMActionTable=hm2FMActionTable, hm2FMBootParamState=hm2FMBootParamState, hm2ConfigurationSavedTrap=hm2ConfigurationSavedTrap, hm2FileMgmtConfigWatchdogControl=hm2FileMgmtConfigWatchdogControl, hm2FMActionDestinationType=hm2FMActionDestinationType, hm2FileMgmtSESCfgActivateIncomlpeteReturn=hm2FileMgmtSESCfgActivateIncomlpeteReturn, hm2FileMgmtSESCfgMgrClearCommandErrorReturn=hm2FileMgmtSESCfgMgrClearCommandErrorReturn, hm2FMProfileTable=hm2FMProfileTable, hm2FMProfileSwMinorRelNum=hm2FMProfileSwMinorRelNum, hm2FileMgmtProfileGroup=hm2FileMgmtProfileGroup, hm2FMActionStatus=hm2FMActionStatus, hm2FMProfileFingerprintVerified=hm2FMProfileFingerprintVerified, hm2FMActionDestinationData=hm2FMActionDestinationData, hm2FMProfileIndex=hm2FMProfileIndex, hm2FMEnvmState=hm2FMEnvmState, hm2ConfigurationChangedTrap=hm2ConfigurationChangedTrap, hm2FMActionEntry=hm2FMActionEntry, hm2FileMgmtConfigGroup=hm2FileMgmtConfigGroup, hm2FMProfileAction=hm2FMProfileAction, hm2FileMgmtStatusGroup=hm2FileMgmtStatusGroup, hm2FileMgmtMib=hm2FileMgmtMib, hm2FileMgmtConfigPasswordStatus=hm2FileMgmtConfigPasswordStatus, hm2ConfigWatchdogIPAddress=hm2ConfigWatchdogIPAddress, hm2FMProfileSwBugfixRelNum=hm2FMProfileSwBugfixRelNum, hm2FMProfileFingerprint=hm2FMProfileFingerprint, hm2FMActionActivate=hm2FMActionActivate, hm2FMActionResultText=hm2FMActionResultText, hm2FileMgmtSESCfgMgrCommandActivateErrorReturn=hm2FileMgmtSESCfgMgrCommandActivateErrorReturn, hm2FMActionSourceInterface=hm2FMActionSourceInterface, hm2FMProfileEntry=hm2FMProfileEntry, hm2ConfigWatchdogTimerValue=hm2ConfigWatchdogTimerValue, hm2FMActionItemType=hm2FMActionItemType, hm2FMActionActivateKey=hm2FMActionActivateKey, hm2FMServerPassword=hm2FMServerPassword)
