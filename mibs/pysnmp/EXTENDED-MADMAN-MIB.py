#
# PySNMP MIB module EXTENDED-MADMAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTENDED-MADMAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:52:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
mtaGroupInboundRejectionReason, mtaGroupName, mtaGroupOutboundConnectFailureReason, mtaGroupIndex = mibBuilder.importSymbols("MTA-MIB", "mtaGroupInboundRejectionReason", "mtaGroupName", "mtaGroupOutboundConnectFailureReason", "mtaGroupIndex")
applName, applIndex, applOperStatus, applLastChange = mibBuilder.importSymbols("NETWORK-SERVICES-MIB", "applName", "applIndex", "applOperStatus", "applLastChange")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, TimeTicks, Counter32, ModuleIdentity, ObjectIdentity, Integer32, Unsigned32, iso, NotificationType, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "TimeTicks", "Counter32", "ModuleIdentity", "ObjectIdentity", "Integer32", "Unsigned32", "iso", "NotificationType", "Counter64", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
lotus = MibIdentifier((1, 3, 6, 1, 4, 1, 334))
notes = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 1))
lcs = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 2))
softswitch = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 3))
common_mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 3, 1)).setLabel("common-mibs")
lms = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 3, 2))
extendedMADMAN = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 3, 1, 1))
class TimeInterval(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

extendedApplTable = MibTable((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 1), )
if mibBuilder.loadTexts: extendedApplTable.setStatus('mandatory')
extendedApplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 1, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: extendedApplEntry.setStatus('mandatory')
applDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applDescr.setStatus('mandatory')
applContact = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applContact.setStatus('mandatory')
applDesiredOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("halted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applDesiredOperStatus.setStatus('mandatory')
extendedMtaTable = MibTable((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2), )
if mibBuilder.loadTexts: extendedMtaTable.setStatus('mandatory')
extendedMtaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: extendedMtaEntry.setStatus('mandatory')
mtaFailedMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaFailedMessages.setStatus('mandatory')
mtaFailedVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaFailedVolume.setStatus('mandatory')
mtaFailedRecipients = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaFailedRecipients.setStatus('mandatory')
mtaLastMessageFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaLastMessageFailureReason.setStatus('mandatory')
mtaLargestMessageStored = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaLargestMessageStored.setStatus('mandatory')
mtaOldestMessageStored = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOldestMessageStored.setStatus('mandatory')
mtaInputInhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtaInputInhibited.setStatus('mandatory')
mtaType = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21))).clone(namedValues=NamedValues(("x400-92", 1), ("x400-88", 2), ("x400-84", 3), ("smtp-mime", 4), ("smtp", 5), ("ccMail", 6), ("notes", 7), ("cmc", 8), ("mapi", 9), ("snapi", 10), ("snads", 11), ("profs", 12), ("fax", 13), ("other", 20), ("unknown", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaType.setStatus('mandatory')
extendedMtaGroupTable = MibTable((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3), )
if mibBuilder.loadTexts: extendedMtaGroupTable.setStatus('mandatory')
extendedMtaGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "MTA-MIB", "mtaGroupIndex"))
if mibBuilder.loadTexts: extendedMtaGroupEntry.setStatus('mandatory')
mtaGroupIdOfOldestMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupIdOfOldestMessage.setStatus('mandatory')
mtaGroupLastOutboundAssociationAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupLastOutboundAssociationAttempt.setStatus('mandatory')
mtaGroupMaxInboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupMaxInboundAssociations.setStatus('mandatory')
mtaGroupMaxOutboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupMaxOutboundAssociations.setStatus('mandatory')
mtaGroupCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("stopped", 1), ("initializing", 2), ("configurable", 3), ("input-disabled", 4), ("output-disabled", 5), ("running", 6), ("stopping", 7), ("unknown", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupCurrentState.setStatus('mandatory')
mtaGroupLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupLastChange.setStatus('mandatory')
mtaGroupLargestMessageStored = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupLargestMessageStored.setStatus('mandatory')
mtaGroupInboundRejectSecurityViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupInboundRejectSecurityViolations.setStatus('mandatory')
mtaGroupOutboundFailSecurityViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupOutboundFailSecurityViolations.setStatus('mandatory')
mtaGroupInboundRejectResourceFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupInboundRejectResourceFailures.setStatus('mandatory')
mtaGroupOutboundFailResourceFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupOutboundFailResourceFailures.setStatus('mandatory')
mtaGroupFailedVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupFailedVolume.setStatus('mandatory')
mtaGroupFailedRecipients = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 3, 1, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupFailedRecipients.setStatus('mandatory')
mibBuilder.exportSymbols("EXTENDED-MADMAN-MIB", mtaOldestMessageStored=mtaOldestMessageStored, mtaFailedRecipients=mtaFailedRecipients, mtaFailedVolume=mtaFailedVolume, mtaGroupLastOutboundAssociationAttempt=mtaGroupLastOutboundAssociationAttempt, mtaGroupFailedVolume=mtaGroupFailedVolume, lcs=lcs, mtaGroupOutboundFailResourceFailures=mtaGroupOutboundFailResourceFailures, notes=notes, mtaGroupLargestMessageStored=mtaGroupLargestMessageStored, extendedMtaGroupEntry=extendedMtaGroupEntry, extendedApplTable=extendedApplTable, extendedMtaGroupTable=extendedMtaGroupTable, extendedMtaTable=extendedMtaTable, mtaLastMessageFailureReason=mtaLastMessageFailureReason, applDescr=applDescr, applContact=applContact, extendedMADMAN=extendedMADMAN, lotus=lotus, common_mibs=common_mibs, mtaGroupFailedRecipients=mtaGroupFailedRecipients, mtaGroupMaxInboundAssociations=mtaGroupMaxInboundAssociations, mtaGroupIdOfOldestMessage=mtaGroupIdOfOldestMessage, mtaGroupMaxOutboundAssociations=mtaGroupMaxOutboundAssociations, applDesiredOperStatus=applDesiredOperStatus, mtaInputInhibited=mtaInputInhibited, mtaType=mtaType, lms=lms, mtaGroupInboundRejectSecurityViolations=mtaGroupInboundRejectSecurityViolations, mtaGroupInboundRejectResourceFailures=mtaGroupInboundRejectResourceFailures, mtaGroupLastChange=mtaGroupLastChange, extendedApplEntry=extendedApplEntry, softswitch=softswitch, mtaGroupOutboundFailSecurityViolations=mtaGroupOutboundFailSecurityViolations, TimeInterval=TimeInterval, mtaGroupCurrentState=mtaGroupCurrentState, mtaLargestMessageStored=mtaLargestMessageStored, extendedMtaEntry=extendedMtaEntry, mtaFailedMessages=mtaFailedMessages)
