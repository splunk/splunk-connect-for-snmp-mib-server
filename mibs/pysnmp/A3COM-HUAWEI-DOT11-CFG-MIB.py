#
# PySNMP MIB module A3COM-HUAWEI-DOT11-CFG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-DOT11-CFG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:49:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
H3cDot11RadioScopeType, H3cDot11TxPwrLevelScopeType, H3cDot11SecIEStatusType, H3cDot11ChannelScopeType, h3cDot11APElementIndex, H3cDot11PreambleType, H3cDot11WorkMode, H3cDot11RadioType2, H3cDot11SSIDEncryptModeType, H3cDot11AuthenType, H3cDot11RadioElementIndex, H3cDot11TunnelSecSchemType, H3cDot11CirMode, H3cDot11SSIDStringType, H3cDot11ServicePolicyIDType, H3cDot11ObjectIDType, H3cDot11RadioType, h3cDot11 = mibBuilder.importSymbols("A3COM-HUAWEI-DOT11-REF-MIB", "H3cDot11RadioScopeType", "H3cDot11TxPwrLevelScopeType", "H3cDot11SecIEStatusType", "H3cDot11ChannelScopeType", "h3cDot11APElementIndex", "H3cDot11PreambleType", "H3cDot11WorkMode", "H3cDot11RadioType2", "H3cDot11SSIDEncryptModeType", "H3cDot11AuthenType", "H3cDot11RadioElementIndex", "H3cDot11TunnelSecSchemType", "H3cDot11CirMode", "H3cDot11SSIDStringType", "H3cDot11ServicePolicyIDType", "H3cDot11ObjectIDType", "H3cDot11RadioType", "h3cDot11")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, iso, NotificationType, TimeTicks, ModuleIdentity, IpAddress, Integer32, ObjectIdentity, Gauge32, MibIdentifier, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "NotificationType", "TimeTicks", "ModuleIdentity", "IpAddress", "Integer32", "ObjectIdentity", "Gauge32", "MibIdentifier", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
IpAddress, RowStatus, TextualConvention, MacAddress, DateAndTime, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "IpAddress", "RowStatus", "TextualConvention", "MacAddress", "DateAndTime", "TruthValue", "DisplayString")
h3cDot11CFG = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4))
h3cDot11CFG.setRevisions(('2010-09-25 18:00', '2010-09-02 18:00', '2009-07-29 18:00', '2009-05-07 20:00', '2009-03-20 15:30', '2008-11-07 15:30', '2008-07-09 18:00', '2008-02-25 18:00', '2007-12-21 18:00', '2007-10-09 16:55', '2007-06-19 18:00', '2007-04-27 20:00', '2007-02-01 20:00', '2006-05-10 19:00',))
if mibBuilder.loadTexts: h3cDot11CFG.setLastUpdated('201009251800Z')
if mibBuilder.loadTexts: h3cDot11CFG.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cDot11GlobeConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1))
h3cDot11PolicyConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2))
h3cDot11APConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3))
h3cDot11RadioIntfConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4))
h3cDot11DataRateConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 5))
h3cDot11InterfaceConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6))
h3cDot11ACBackupGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 7))
h3cDot11RadioElementConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8))
h3cDot11CfgNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9))
h3cDot11GlobalCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11GlobalCountryCode.setStatus('current')
h3cDot11StaKeepALiveTimerIntvl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 2), Unsigned32()).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11StaKeepALiveTimerIntvl.setStatus('current')
h3cDot11StaIdleTimerIntvl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 3), Integer32()).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11StaIdleTimerIntvl.setStatus('current')
h3cDot11BroadcastProbeReply = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11BroadcastProbeReply.setStatus('current')
h3cDot11APScanMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2))).clone('passive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APScanMode.setStatus('current')
h3cDot11ACCtrlTunnelSecSupport = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 6), H3cDot11TunnelSecSchemType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ACCtrlTunnelSecSupport.setStatus('current')
h3cDot11ACDataTunnelSecSupport = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 7), H3cDot11TunnelSecSchemType().clone('cleartxt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ACDataTunnelSecSupport.setStatus('current')
h3cDot11ACAutoAPSupport = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ACAutoAPSupport.setStatus('current')
h3cDot11AutoAPName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11AutoAPName.setStatus('current')
h3cDot11PersistentName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11PersistentName.setStatus('current')
h3cDot11IntfTrapThreshold = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 11), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11IntfTrapThreshold.setStatus('current')
h3cDot11MonitorInterval = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 15), ))).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11MonitorInterval.setStatus('current')
h3cDot11SampleInterval = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 13), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 300), ))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SampleInterval.setStatus('current')
h3cDot11ChnlSwitChkInterval = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 180)).clone(8)).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ChnlSwitChkInterval.setStatus('current')
h3cDot11APUserUplimit = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APUserUplimit.setStatus('current')
h3cDot11APL2IsolateEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APL2IsolateEnable.setStatus('current')
h3cDot11APBSSIDSupportNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11APBSSIDSupportNum.setStatus('current')
h3cDot11APLastUpdateStatTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11APLastUpdateStatTime.setStatus('current')
h3cDot11APDoSProtectEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 19), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APDoSProtectEnable.setStatus('current')
h3cDot11MaxAPPerIf = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11MaxAPPerIf.setStatus('current')
h3cDot11SampleTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11SampleTimeStamp.setStatus('current')
h3cDot11UplinkTrackId = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 22), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11UplinkTrackId.setStatus('current')
h3cDot11RtCollectSwitch = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 23), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RtCollectSwitch.setStatus('current')
h3cDot11RglCollectIntvl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 24), Integer32()).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RglCollectIntvl.setStatus('current')
h3cDot11RtCollectIntvl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 25), Integer32()).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RtCollectIntvl.setStatus('current')
h3cDot11AllAPCpuUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('onepercent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11AllAPCpuUsageThreshold.setStatus('current')
h3cDot11AllAPMemUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('onepercent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11AllAPMemUsageThreshold.setStatus('current')
h3cDot11AdjIntfTrapThreshold = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 28), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11AdjIntfTrapThreshold.setStatus('current')
h3cDot11AllAPMonitorMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11AllAPMonitorMode.setStatus('current')
h3cDot11RadioPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1), )
if mibBuilder.loadTexts: h3cDot11RadioPolicyTable.setStatus('current')
h3cDot11RadioPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1), ).setIndexNames((1, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioPolicyName"))
if mibBuilder.loadTexts: h3cDot11RadioPolicyEntry.setStatus('current')
h3cDot11RadioPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: h3cDot11RadioPolicyName.setStatus('current')
h3cDot11BeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 2), Integer32().clone(100)).setUnits('TU').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11BeaconInterval.setStatus('current')
h3cDot11DtimInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 3), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11DtimInterval.setStatus('current')
h3cDot11RtsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 4), Integer32().clone(2346)).setUnits('byte').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RtsThreshold.setStatus('current')
h3cDot11FragThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 5), Integer32().clone(2346)).setUnits('byte').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11FragThreshold.setStatus('current')
h3cDot11ShortRetryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 6), Integer32().clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11ShortRetryThreshold.setStatus('current')
h3cDot11LongRetryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 7), Integer32().clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11LongRetryThreshold.setStatus('current')
h3cDot11MaxRxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 8), Unsigned32().clone(2000)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11MaxRxLifetime.setStatus('current')
h3cDot11RdoPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RdoPolicyRowStatus.setStatus('current')
h3cDot11RdoClientMaxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RdoClientMaxCount.setStatus('current')
h3cDot11BeaconIntervalMs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 1, 1, 11), Integer32()).setUnits('ms').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11BeaconIntervalMs.setStatus('current')
h3cDot11ServicePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2), )
if mibBuilder.loadTexts: h3cDot11ServicePolicyTable.setStatus('current')
h3cDot11ServicePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11ServicePolicyID"))
if mibBuilder.loadTexts: h3cDot11ServicePolicyEntry.setStatus('current')
h3cDot11ServicePolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 1), H3cDot11ServicePolicyIDType())
if mibBuilder.loadTexts: h3cDot11ServicePolicyID.setStatus('current')
h3cDot11SSIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 2), H3cDot11SSIDStringType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SSIDName.setStatus('current')
h3cDot11SSIDHidden = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SSIDHidden.setStatus('current')
h3cDot11AuthenMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 4), H3cDot11AuthenType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11AuthenMode.setStatus('current')
h3cDot11SSIDEncryptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 5), H3cDot11SSIDEncryptModeType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SSIDEncryptionMode.setStatus('current')
h3cDot11WlanInfBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 6), OctetString().clone('WLAN-ESS')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11WlanInfBindingType.setStatus('current')
h3cDot11WlanInfBindingID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11WlanInfBindingID.setStatus('current')
h3cDot11SrvPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SrvPolicyRowStatus.setStatus('current')
h3cDot11ClientMaxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11ClientMaxCount.setStatus('current')
h3cDot11SPInCirMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 10), H3cDot11CirMode().clone('static')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SPInCirMode.setStatus('current')
h3cDot11SPInCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 11), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SPInCirValue.setStatus('current')
h3cDot11SPOutCirMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 12), H3cDot11CirMode().clone('static')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SPOutCirMode.setStatus('current')
h3cDot11SPOutCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 13), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SPOutCirValue.setStatus('current')
h3cDot11WlanInfPVID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 14), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11WlanInfPVID.setStatus('current')
h3cDot11SPInCirStaticValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 15), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SPInCirStaticValue.setStatus('current')
h3cDot11SPOutCirStaticValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 16), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SPOutCirStaticValue.setStatus('current')
h3cDot11SPIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SPIsolate.setStatus('current')
h3cDot11WAPIAuthServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 2, 1, 18), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11WAPIAuthServerIP.setStatus('current')
h3cDot11ServicePolicyExtTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3), )
if mibBuilder.loadTexts: h3cDot11ServicePolicyExtTable.setStatus('current')
h3cDot11ServicePolicyExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11ServicePolicyExtID"))
if mibBuilder.loadTexts: h3cDot11ServicePolicyExtEntry.setStatus('current')
h3cDot11ServicePolicyExtID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3, 1, 1), H3cDot11ServicePolicyIDType())
if mibBuilder.loadTexts: h3cDot11ServicePolicyExtID.setStatus('current')
h3cDot11SecIEStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3, 1, 2), H3cDot11SecIEStatusType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SecIEStatus.setStatus('current')
h3cDot11SecurityCiphers = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SecurityCiphers.setStatus('current')
h3cDot11CipherKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3, 1, 4), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11CipherKeyIndex.setStatus('current')
h3cDot11CipherKey = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11CipherKey.setStatus('current')
h3cDot11SrvPolicyExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SrvPolicyExtRowStatus.setStatus('current')
h3cDot11CipherKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("char", 1), ("hex", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11CipherKeyType.setStatus('current')
h3cDot11RadioPolicyExtTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4), )
if mibBuilder.loadTexts: h3cDot11RadioPolicyExtTable.setStatus('current')
h3cDot11RadioPolicyExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RPAPSerialID"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RPRadioID"))
if mibBuilder.loadTexts: h3cDot11RadioPolicyExtEntry.setStatus('current')
h3cDot11RPAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: h3cDot11RPAPSerialID.setStatus('current')
h3cDot11RPRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 2), H3cDot11RadioScopeType())
if mibBuilder.loadTexts: h3cDot11RPRadioID.setStatus('current')
h3cDot11RPBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 3), Integer32().clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RPBeaconInterval.setStatus('current')
h3cDot11RPDtimInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 4), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RPDtimInterval.setStatus('current')
h3cDot11RPRtsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 5), Integer32().clone(2346)).setUnits('byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RPRtsThreshold.setStatus('current')
h3cDot11RPFragThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 6), Integer32().clone(2346)).setUnits('byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RPFragThreshold.setStatus('current')
h3cDot11RPShortRetryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 7), Integer32().clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RPShortRetryThreshold.setStatus('current')
h3cDot11RPLongRetryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 8), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RPLongRetryThreshold.setStatus('current')
h3cDot11RPClientMaxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RPClientMaxCount.setStatus('current')
h3cDot11SrvPortSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 5), )
if mibBuilder.loadTexts: h3cDot11SrvPortSecurityTable.setStatus('current')
h3cDot11SrvPortSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11SecurityServicePolicyID"))
if mibBuilder.loadTexts: h3cDot11SrvPortSecurityEntry.setStatus('current')
h3cDot11SecurityServicePolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 5, 1, 1), H3cDot11ServicePolicyIDType())
if mibBuilder.loadTexts: h3cDot11SecurityServicePolicyID.setStatus('current')
h3cDot11SrvPortSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noRestrictions", 1), ("userLoginSecureExt", 2), ("psk", 3), ("macAddressAndPsk", 4), ("userLoginSecureExtOrPsk", 5), ("ext", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SrvPortSecurityMode.setStatus('current')
h3cDot11SrvSecurityKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("userLoginTxKeyTypeNone", 1), ("userLoginTxKeyTypeDot11Key", 2), ("userLoginTxKeyTypeRsaRC4Key", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SrvSecurityKeyType.setStatus('current')
h3cDot11SrvSecurityPskKeyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pskKeyModeNone", 1), ("pskKeyModePassPhrase", 2), ("pskKeyModeRawKey", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SrvSecurityPskKeyMode.setStatus('current')
h3cDot11SrvSecurityPskKeyString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SrvSecurityPskKeyString.setStatus('current')
h3cDot11SrvPolicyExtendTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 6), )
if mibBuilder.loadTexts: h3cDot11SrvPolicyExtendTable.setStatus('current')
h3cDot11SrvPolicyExtendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11ServicePolicyID"))
if mibBuilder.loadTexts: h3cDot11SrvPolicyExtendEntry.setStatus('current')
h3cDot11SPEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SPEnable.setStatus('current')
h3cDot11APTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1), )
if mibBuilder.loadTexts: h3cDot11APTemplateTable.setStatus('current')
h3cDot11APTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11APTemplateName"))
if mibBuilder.loadTexts: h3cDot11APTemplateEntry.setStatus('current')
h3cDot11APTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: h3cDot11APTemplateName.setStatus('current')
h3cDot11APSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APSerialID.setStatus('current')
h3cDot11TemplateAPModelAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11TemplateAPModelAlias.setStatus('current')
h3cDot11Description = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11Description.setStatus('current')
h3cDot11APWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APWorkMode.setStatus('current')
h3cDot11APTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APTemplateRowStatus.setStatus('current')
h3cDot11APName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 7), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APName.setStatus('current')
h3cDot11StatisInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 8), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11StatisInterv.setStatus('current')
h3cDot11APBroadcastProbeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 9), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APBroadcastProbeReply.setStatus('current')
h3cDot11StaIdleTimerInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 10), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11StaIdleTimerInterv.setStatus('current')
h3cDot11StaKeepAliveTimerInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 11), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11StaKeepAliveTimerInterv.setStatus('current')
h3cDot11APCir = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 12), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APCir.setStatus('current')
h3cDot11APCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 13), Integer32()).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APCbs.setStatus('current')
h3cDot11APPriorityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APPriorityLevel.setStatus('current')
h3cDot11APElementID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11APElementID.setStatus('current')
h3cDot11APDevDetectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APDevDetectEnable.setStatus('current')
h3cDot11APGetIPMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhcpAlloc", 1), ("static", 2))).clone('dhcpAlloc')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APGetIPMethod.setStatus('current')
h3cDot11StatisIntervMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("realtime", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11StatisIntervMode.setStatus('current')
h3cDot11ApTrapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 1, 1, 19), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ApTrapEnabled.setStatus('current')
h3cDot11RadioToConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2), )
if mibBuilder.loadTexts: h3cDot11RadioToConfigTable.setStatus('current')
h3cDot11RadioToConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11APTemplateNameCfg"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11CfgRadioID"))
if mibBuilder.loadTexts: h3cDot11RadioToConfigEntry.setStatus('current')
h3cDot11APTemplateNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: h3cDot11APTemplateNameCfg.setStatus('current')
h3cDot11CfgRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 2), H3cDot11RadioScopeType())
if mibBuilder.loadTexts: h3cDot11CfgRadioID.setStatus('current')
h3cDot11CfgRadioPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgRadioPolicyName.setStatus('current')
h3cDot11CfgRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 4), H3cDot11RadioType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgRadioType.setStatus('current')
h3cDot11CfgChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 5), H3cDot11ChannelScopeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgChannel.setStatus('current')
h3cDot11CfgMaxTxPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 6), H3cDot11TxPwrLevelScopeType()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgMaxTxPowerLevel.setStatus('current')
h3cDot11PreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 7), H3cDot11PreambleType().clone('short')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11PreambleLen.setStatus('current')
h3cDot11CfgRadioStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgRadioStatus.setStatus('current')
h3cDot11CfgRdElementID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11CfgRdElementID.setStatus('current')
h3cDot11CfgWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 10), H3cDot11WorkMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgWorkMode.setStatus('current')
h3cDot11CfgPwrAttValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgPwrAttValue.setStatus('current')
h3cDot11RadioTxArithmetic = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("quality", 1), ("bandwidth", 2))).clone('quality')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioTxArithmetic.setStatus('current')
h3cDot11CfgChannelLockStat = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unlocked", 1), ("locked", 2))).clone('unlocked')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgChannelLockStat.setStatus('current')
h3cDot11CfgPowerLockStat = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unlocked", 1), ("locked", 2))).clone('unlocked')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgPowerLockStat.setStatus('current')
h3cDot11CfgLBRdGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgLBRdGroupId.setStatus('current')
h3cDot11CfgRRMSDRdGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgRRMSDRdGroupId.setStatus('current')
h3cDot11CfgRadioType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 17), H3cDot11RadioType2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgRadioType2.setStatus('current')
h3cDot11CfgIDSEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgIDSEnable.setStatus('current')
h3cDot11CfgSaEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgSaEnable.setStatus('current')
h3cDot11CfgSaCltRtFFTData = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgSaCltRtFFTData.setStatus('current')
h3cDot11CfgSaBand = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dot11g", 1), ("dot11aLower", 2), ("dot11aMiddle", 3), ("dot11aUpper", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CfgSaBand.setStatus('current')
h3cDot11APServiceSetTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 3), )
if mibBuilder.loadTexts: h3cDot11APServiceSetTable.setStatus('current')
h3cDot11APServiceSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11APTemplateNameCfg"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11CfgRadioID"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11CfgServicePolicyID"))
if mibBuilder.loadTexts: h3cDot11APServiceSetEntry.setStatus('current')
h3cDot11CfgServicePolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 3, 1, 1), H3cDot11ServicePolicyIDType())
if mibBuilder.loadTexts: h3cDot11CfgServicePolicyID.setStatus('current')
h3cDot11SrvSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SrvSetRowStatus.setStatus('current')
h3cDot11ServiceSetVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11ServiceSetVlanId.setStatus('current')
h3cDot11APSTVlanTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 11), )
if mibBuilder.loadTexts: h3cDot11APSTVlanTable.setStatus('current')
h3cDot11APSTVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 11, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11SIDAPSerialID"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11CfgRadioID"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11CfgServicePolicyID"))
if mibBuilder.loadTexts: h3cDot11APSTVlanEntry.setStatus('current')
h3cDot11CfgSTVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11CfgSTVLANID.setStatus('current')
h3cDot11CfgSTNASPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11CfgSTNASPortID.setStatus('current')
h3cDot11CfgServiceSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11CfgServiceSetRowStatus.setStatus('current')
h3cDot11APSysInfoSetTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 4), )
if mibBuilder.loadTexts: h3cDot11APSysInfoSetTable.setStatus('current')
h3cDot11APSysInfoSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11SIDAPSerialID"))
if mibBuilder.loadTexts: h3cDot11APSysInfoSetEntry.setStatus('current')
h3cDot11APSysNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APSysNetID.setStatus('current')
h3cDot11APCpuUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('onepercent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APCpuUsageThreshold.setStatus('current')
h3cDot11APMemUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('onepercent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APMemUsageThreshold.setStatus('current')
h3cDot11APLimitTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 5), )
if mibBuilder.loadTexts: h3cDot11APLimitTable.setStatus('current')
h3cDot11APLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-REF-MIB", "h3cDot11APElementIndex"))
if mibBuilder.loadTexts: h3cDot11APLimitEntry.setStatus('current')
h3cDot11APSsidNumLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APSsidNumLimit.setStatus('current')
h3cDot11APUserCntLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APUserCntLimit.setStatus('current')
h3cDot11APUserThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APUserThreshold.setStatus('current')
h3cDot11APIfSetTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 6), )
if mibBuilder.loadTexts: h3cDot11APIfSetTable.setStatus('current')
h3cDot11APIfSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-REF-MIB", "h3cDot11APElementIndex"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11APSetIfIndex"))
if mibBuilder.loadTexts: h3cDot11APIfSetEntry.setStatus('current')
h3cDot11APSetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11APSetIfIndex.setStatus('current')
h3cDot11APIfAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APIfAlias.setStatus('current')
h3cDot11APServiceVlanTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 7), )
if mibBuilder.loadTexts: h3cDot11APServiceVlanTable.setStatus('current')
h3cDot11APServiceVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11APServiceVlanSerialID"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11APServiceVlanSPID"))
if mibBuilder.loadTexts: h3cDot11APServiceVlanEntry.setStatus('current')
h3cDot11APServiceVlanSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 7, 1, 1), OctetString())
if mibBuilder.loadTexts: h3cDot11APServiceVlanSerialID.setStatus('current')
h3cDot11APServiceVlanSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 7, 1, 2), H3cDot11ServicePolicyIDType())
if mibBuilder.loadTexts: h3cDot11APServiceVlanSPID.setStatus('current')
h3cDot11APServiceVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APServiceVlanId.setStatus('current')
h3cDot11APServiceVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11APServiceVlanRowStatus.setStatus('current')
h3cDot11RadioConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8), )
if mibBuilder.loadTexts: h3cDot11RadioConfigTable.setStatus('current')
h3cDot11RadioConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RCAPSerialID"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RCRadioID"))
if mibBuilder.loadTexts: h3cDot11RadioConfigEntry.setStatus('current')
h3cDot11RCAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: h3cDot11RCAPSerialID.setStatus('current')
h3cDot11RCRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 2), H3cDot11RadioScopeType())
if mibBuilder.loadTexts: h3cDot11RCRadioID.setStatus('current')
h3cDot11RCRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 3), H3cDot11RadioType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCRadioType.setStatus('current')
h3cDot11RCChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 4), H3cDot11ChannelScopeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCChannel.setStatus('current')
h3cDot11RCPreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 5), H3cDot11PreambleType().clone('short')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCPreambleLen.setStatus('current')
h3cDot11RCPwrAttValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCPwrAttValue.setStatus('current')
h3cDot11RCApPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 7), H3cDot11TxPwrLevelScopeType()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCApPowerLevel.setStatus('current')
h3cDot11RCDynamicChlState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCDynamicChlState.setStatus('current')
h3cDot11RCDynamicPowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCDynamicPowerState.setStatus('current')
h3cDot11RCRadioStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCRadioStatus.setStatus('current')
h3cDot11RCRadioRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCRadioRate.setStatus('current')
h3cDot11RCPwrAdjustStepLength = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RCPwrAdjustStepLength.setStatus('current')
h3cDot11RCRadioType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 8, 1, 13), H3cDot11RadioType2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RCRadioType2.setStatus('current')
h3cDot11RadioSSIDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 9), )
if mibBuilder.loadTexts: h3cDot11RadioSSIDCfgTable.setStatus('current')
h3cDot11RadioSSIDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 9, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioSSIDSerialID"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioSSIDRadioID"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioSSIDWLANID"))
if mibBuilder.loadTexts: h3cDot11RadioSSIDCfgEntry.setStatus('current')
h3cDot11RadioSSIDSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 9, 1, 1), H3cDot11ObjectIDType())
if mibBuilder.loadTexts: h3cDot11RadioSSIDSerialID.setStatus('current')
h3cDot11RadioSSIDRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 9, 1, 2), H3cDot11RadioScopeType())
if mibBuilder.loadTexts: h3cDot11RadioSSIDRadioID.setStatus('current')
h3cDot11RadioSSIDWLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 9, 1, 3), Integer32())
if mibBuilder.loadTexts: h3cDot11RadioSSIDWLANID.setStatus('current')
h3cDot11RadioSSIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 9, 1, 4), H3cDot11ServicePolicyIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RadioSSIDIndex.setStatus('current')
h3cDot11RadioBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 9, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RadioBSSID.setStatus('current')
h3cDot11RadioSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 9, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RadioSSIDRowStatus.setStatus('current')
h3cDot11APSerialIDTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10), )
if mibBuilder.loadTexts: h3cDot11APSerialIDTable.setStatus('current')
h3cDot11APSerialIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11SIDAPSerialID"))
if mibBuilder.loadTexts: h3cDot11APSerialIDEntry.setStatus('current')
h3cDot11SIDAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 1), OctetString())
if mibBuilder.loadTexts: h3cDot11SIDAPSerialID.setStatus('current')
h3cDot11SIDAPWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPWorkMode.setStatus('current')
h3cDot11SIDAPGetIPMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhcpAlloc", 1), ("static", 2))).clone('dhcpAlloc')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPGetIPMethod.setStatus('current')
h3cDot11SIDAPTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPTemplateName.setStatus('current')
h3cDot11SIDModelAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDModelAlias.setStatus('current')
h3cDot11SIDAPDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPDescription.setStatus('current')
h3cDot11SIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDRowStatus.setStatus('current')
h3cDot11SIDAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 8), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPName.setStatus('current')
h3cDot11SIDStatisInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 9), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDStatisInterv.setStatus('current')
h3cDot11SIDAPBroadcastProbeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 10), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPBroadcastProbeReply.setStatus('current')
h3cDot11SIDAPStaIdleTimerInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 11), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPStaIdleTimerInterv.setStatus('current')
h3cDot11SIDStaKeepAliveTimerInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 12), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDStaKeepAliveTimerInterv.setStatus('current')
h3cDot11SIDAPCir = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 13), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPCir.setStatus('current')
h3cDot11SIDAPCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 14), Integer32()).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPCbs.setStatus('current')
h3cDot11SIDAPPriorityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPPriorityLevel.setStatus('current')
h3cDot11SIDAPElementID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11SIDAPElementID.setStatus('current')
h3cDot11SIDAPDevDetectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPDevDetectEnable.setStatus('current')
h3cDot11SIDAPStatisIntervMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 3, 10, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("realtime", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11SIDAPStatisIntervMode.setStatus('current')
h3cDot11RadioIntfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1), )
if mibBuilder.loadTexts: h3cDot11RadioIntfConfigTable.setStatus('current')
h3cDot11RadioIntfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioIfIdx"))
if mibBuilder.loadTexts: h3cDot11RadioIntfConfigEntry.setStatus('current')
h3cDot11RadioIfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11RadioIfIdx.setStatus('current')
h3cDot11RadioCfgBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 2), Integer32().clone(100)).setUnits('TU').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgBeaconIntvl.setStatus('current')
h3cDot11RadioCfgDtimIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 3), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgDtimIntvl.setStatus('current')
h3cDot11RadioCfgRtsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 4), Integer32().clone(2346)).setUnits('Byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgRtsThreshold.setStatus('current')
h3cDot11RadioCfgFragThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 5), Integer32().clone(2346)).setUnits('Byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgFragThreshold.setStatus('current')
h3cDot11RadioCfgShtRetryThld = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 6), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgShtRetryThld.setStatus('current')
h3cDot11RadioCfglongRtrThld = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 7), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfglongRtrThld.setStatus('current')
h3cDot11RadioCfgMaxRxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 8), Unsigned32().clone(2000)).setUnits('millisecond').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgMaxRxLifetime.setStatus('current')
h3cDot11RadioCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 9), H3cDot11RadioType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgType.setStatus('current')
h3cDot11RadioCfgChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 10), H3cDot11ChannelScopeType().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgChannel.setStatus('current')
h3cDot11RadioCfgMaxTxPwrLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 11), H3cDot11TxPwrLevelScopeType()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgMaxTxPwrLvl.setStatus('current')
h3cDot11RadioCfgPreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 12), H3cDot11PreambleType().clone('short')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgPreambleLen.setStatus('current')
h3cDot11RadioCfgWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 13), H3cDot11WorkMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgWorkMode.setStatus('current')
h3cDot11RadioCfgOnly11gEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgOnly11gEnable.setStatus('current')
h3cDot11RadioCfgType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 1, 1, 15), H3cDot11RadioType2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioCfgType2.setStatus('current')
h3cDot11RadioIntfBindTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 2), )
if mibBuilder.loadTexts: h3cDot11RadioIntfBindTable.setStatus('current')
h3cDot11RadioIntfBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioIfIdx"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioIntfBindSvcPlcyID"))
if mibBuilder.loadTexts: h3cDot11RadioIntfBindEntry.setStatus('current')
h3cDot11RadioIntfBindSvcPlcyID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 2, 1, 1), H3cDot11ServicePolicyIDType())
if mibBuilder.loadTexts: h3cDot11RadioIntfBindSvcPlcyID.setStatus('current')
h3cDot11RadioIntfBindIfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RadioIntfBindIfIdx.setStatus('current')
h3cDot11RadioIntfBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 4, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RadioIntfBindRowStatus.setStatus('current')
h3cDot11DataRateConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 5, 1), )
if mibBuilder.loadTexts: h3cDot11DataRateConfigTable.setStatus('current')
h3cDot11DataRateConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 5, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioTypeID"))
if mibBuilder.loadTexts: h3cDot11DataRateConfigEntry.setStatus('current')
h3cDot11RadioTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 5, 1, 1, 1), H3cDot11RadioType())
if mibBuilder.loadTexts: h3cDot11RadioTypeID.setStatus('current')
h3cDot11SupportedRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SupportedRateSet.setStatus('current')
h3cDot11MandatoryRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11MandatoryRateSet.setStatus('current')
h3cDot11DisabledRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11DisabledRateSet.setStatus('current')
h3cDot11SmartRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 5, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SmartRateSet.setStatus('current')
h3cDot11WlanEssIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 1), )
if mibBuilder.loadTexts: h3cDot11WlanEssIfTable.setStatus('current')
h3cDot11WlanEssIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11WlanEssIfNumber"))
if mibBuilder.loadTexts: h3cDot11WlanEssIfEntry.setStatus('current')
h3cDot11WlanEssIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11WlanEssIfNumber.setStatus('current')
h3cDot11WlanEssIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WlanEssIfIndex.setStatus('current')
h3cDot11WlanEssRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11WlanEssRowStatus.setStatus('current')
h3cDot11WlanBssIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 2), )
if mibBuilder.loadTexts: h3cDot11WlanBssIfTable.setStatus('current')
h3cDot11WlanBssIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11WlanBssIfNumber"))
if mibBuilder.loadTexts: h3cDot11WlanBssIfEntry.setStatus('current')
h3cDot11WlanBssIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11WlanBssIfNumber.setStatus('current')
h3cDot11WlanBssIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WlanBssIfIndex.setStatus('current')
h3cDot11WlanBssRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11WlanBssRowStatus.setStatus('current')
h3cDot11WLANEthernetIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 3), )
if mibBuilder.loadTexts: h3cDot11WLANEthernetIfTable.setStatus('current')
h3cDot11WLANEthernetIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11WlanEthernetIfNumber"))
if mibBuilder.loadTexts: h3cDot11WLANEthernetIfEntry.setStatus('current')
h3cDot11WlanEthernetIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11WlanEthernetIfNumber.setStatus('current')
h3cDot11WLANEthernetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WLANEthernetIfIndex.setStatus('current')
h3cDot11WlanEthernetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11WlanEthernetRowStatus.setStatus('current')
h3cDot11PortSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 4), )
if mibBuilder.loadTexts: h3cDot11PortSecurityTable.setStatus('current')
h3cDot11PortSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDot11PortSecurityEntry.setStatus('current')
h3cDot11PortSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noRestrictions", 1), ("userLoginSecureExt", 2), ("psk", 3), ("macAddressAndPsk", 4), ("userLoginSecureExtOrPsk", 5), ("ext", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11PortSecurityMode.setStatus('current')
h3cDot11SecurityUserLoginTxKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("userLoginTxKeyTypeNone", 1), ("userLoginTxKeyTypeDot11Key", 2), ("userLoginTxKeyTypeRsaRC4Key", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SecurityUserLoginTxKeyType.setStatus('current')
h3cDot11SecurityPskKeyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pskKeyModeNone", 1), ("pskKeyModePassPhrase", 2), ("pskKeyModeRawKey", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SecurityPskKeyMode.setStatus('current')
h3cDot11SecurityPskKeyString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SecurityPskKeyString.setStatus('current')
h3cDot11WlanMeshIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 5), )
if mibBuilder.loadTexts: h3cDot11WlanMeshIfTable.setStatus('current')
h3cDot11WlanMeshIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11WlanMeshIfNumber"))
if mibBuilder.loadTexts: h3cDot11WlanMeshIfEntry.setStatus('current')
h3cDot11WlanMeshIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11WlanMeshIfNumber.setStatus('current')
h3cDot11WlanMeshIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WlanMeshIfIndex.setStatus('current')
h3cDot11WlanMeshRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 6, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11WlanMeshRowStatus.setStatus('current')
h3cDot11BackupACAdrssIP = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 7, 1), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11BackupACAdrssIP.setStatus('current')
h3cDot11BackupACAdrssIPv6 = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 7, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11BackupACAdrssIPv6.setStatus('current')
h3cDot11nRadioCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 1), )
if mibBuilder.loadTexts: h3cDot11nRadioCfgTable.setStatus('current')
h3cDot11nRadioCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11nRadioCfgIndex"))
if mibBuilder.loadTexts: h3cDot11nRadioCfgEntry.setStatus('current')
h3cDot11nRadioCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 1, 1, 1), H3cDot11RadioElementIndex())
if mibBuilder.loadTexts: h3cDot11nRadioCfgIndex.setStatus('current')
h3cDot11nAMpduEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nAMpduEnable.setStatus('current')
h3cDot11nAMsduEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nAMsduEnable.setStatus('current')
h3cDot11nClientDot11nOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nClientDot11nOnly.setStatus('current')
h3cDot11nChanelBand = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mode20", 1), ("mode40", 2))).clone('mode40')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nChanelBand.setStatus('current')
h3cDot11nShortGiEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nShortGiEnable.setStatus('current')
h3cDot11RadioWDSTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 2), )
if mibBuilder.loadTexts: h3cDot11RadioWDSTable.setStatus('current')
h3cDot11RadioWDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11RadioWDSIndex"))
if mibBuilder.loadTexts: h3cDot11RadioWDSEntry.setStatus('current')
h3cDot11RadioWDSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 2, 1, 1), H3cDot11RadioElementIndex())
if mibBuilder.loadTexts: h3cDot11RadioWDSIndex.setStatus('current')
h3cDot11RadioWDSMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nowds", 1), ("wds", 2))).clone('nowds')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioWDSMode.setStatus('current')
h3cDot11RadioWDSNetWorkID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RadioWDSNetWorkID.setStatus('current')
h3cDot11WDSSecPskKeyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pskKeyModeNone", 1), ("pskKeyModePassPhrase", 2), ("pskKeyModeRawKey", 3))).clone('pskKeyModeNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11WDSSecPskKeyMode.setStatus('current')
h3cDot11WDSSecPskKeyString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11WDSSecPskKeyString.setStatus('current')
h3cDot11nRadioCfg2Table = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3), )
if mibBuilder.loadTexts: h3cDot11nRadioCfg2Table.setStatus('current')
h3cDot11nRadioCfg2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11nRadioCfg2APIDIndex"), (0, "A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11nRadioCfg2RadioIDIndex"))
if mibBuilder.loadTexts: h3cDot11nRadioCfg2Entry.setStatus('current')
h3cDot11nRadioCfg2APIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3, 1, 1), H3cDot11ObjectIDType())
if mibBuilder.loadTexts: h3cDot11nRadioCfg2APIDIndex.setStatus('current')
h3cDot11nRadioCfg2RadioIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3, 1, 2), H3cDot11RadioScopeType())
if mibBuilder.loadTexts: h3cDot11nRadioCfg2RadioIDIndex.setStatus('current')
h3cDot11nRadioCfg2AMpduEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nRadioCfg2AMpduEnable.setStatus('current')
h3cDot11nRadioCfg2AMsduEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nRadioCfg2AMsduEnable.setStatus('current')
h3cDot11nRadioCfg2ClientDot11nOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nRadioCfg2ClientDot11nOnly.setStatus('current')
h3cDot11nRadioCfg2ChannelBand = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mode20", 1), ("mode40", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nRadioCfg2ChannelBand.setStatus('current')
h3cDot11nRadioCfg2ShortGiEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 8, 3, 1, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11nRadioCfg2ShortGiEnable.setStatus('current')
h3cDot11CfgNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 0))
h3cDot11CfgCipherChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 0, 1)).setObjects(("A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11SSIDName"), ("A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11SecurityCiphers"))
if mibBuilder.loadTexts: h3cDot11CfgCipherChange.setStatus('current')
h3cDot11CfgPSKChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 0, 2)).setObjects(("A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11SSIDName"))
if mibBuilder.loadTexts: h3cDot11CfgPSKChange.setStatus('current')
h3cDot11SSIDWepIDConflictTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 0, 3)).setObjects(("A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11PreConflictTemplateNum"), ("A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11CurrConflictTemplateNum"), ("A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11ConflictCipherIdx"), ("A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11ConfigureAPID"), ("A3COM-HUAWEI-DOT11-CFG-MIB", "h3cDot11ConfigureRadioID"))
if mibBuilder.loadTexts: h3cDot11SSIDWepIDConflictTrap.setStatus('current')
h3cDot11CfgTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 1))
h3cDot11PreConflictTemplateNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11PreConflictTemplateNum.setStatus('current')
h3cDot11CurrConflictTemplateNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11CurrConflictTemplateNum.setStatus('current')
h3cDot11ConflictCipherIdx = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ConflictCipherIdx.setStatus('current')
h3cDot11ConfigureAPID = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 1, 4), H3cDot11ObjectIDType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ConfigureAPID.setStatus('current')
h3cDot11ConfigureRadioID = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 4, 9, 1, 5), H3cDot11RadioScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11ConfigureRadioID.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-DOT11-CFG-MIB", h3cDot11APTemplateNameCfg=h3cDot11APTemplateNameCfg, h3cDot11SrvPolicyExtendTable=h3cDot11SrvPolicyExtendTable, h3cDot11CfgLBRdGroupId=h3cDot11CfgLBRdGroupId, h3cDot11RPClientMaxCount=h3cDot11RPClientMaxCount, h3cDot11CfgPwrAttValue=h3cDot11CfgPwrAttValue, h3cDot11ACCtrlTunnelSecSupport=h3cDot11ACCtrlTunnelSecSupport, h3cDot11ApTrapEnabled=h3cDot11ApTrapEnabled, h3cDot11RadioCfgWorkMode=h3cDot11RadioCfgWorkMode, h3cDot11CfgRadioType=h3cDot11CfgRadioType, h3cDot11CfgPSKChange=h3cDot11CfgPSKChange, h3cDot11nRadioCfgTable=h3cDot11nRadioCfgTable, h3cDot11CfgChannel=h3cDot11CfgChannel, h3cDot11RadioWDSEntry=h3cDot11RadioWDSEntry, h3cDot11SrvSetRowStatus=h3cDot11SrvSetRowStatus, h3cDot11APL2IsolateEnable=h3cDot11APL2IsolateEnable, h3cDot11CfgIDSEnable=h3cDot11CfgIDSEnable, h3cDot11PreConflictTemplateNum=h3cDot11PreConflictTemplateNum, h3cDot11SIDAPTemplateName=h3cDot11SIDAPTemplateName, h3cDot11nAMpduEnable=h3cDot11nAMpduEnable, h3cDot11SIDAPBroadcastProbeReply=h3cDot11SIDAPBroadcastProbeReply, h3cDot11SupportedRateSet=h3cDot11SupportedRateSet, h3cDot11APSysNetID=h3cDot11APSysNetID, h3cDot11APLimitTable=h3cDot11APLimitTable, h3cDot11RadioCfgMaxTxPwrLvl=h3cDot11RadioCfgMaxTxPwrLvl, h3cDot11WlanBssIfEntry=h3cDot11WlanBssIfEntry, h3cDot11RadioSSIDCfgEntry=h3cDot11RadioSSIDCfgEntry, h3cDot11RPLongRetryThreshold=h3cDot11RPLongRetryThreshold, h3cDot11RPBeaconInterval=h3cDot11RPBeaconInterval, h3cDot11RadioIntfBindSvcPlcyID=h3cDot11RadioIntfBindSvcPlcyID, h3cDot11SecurityPskKeyString=h3cDot11SecurityPskKeyString, h3cDot11RadioIntfConfigTable=h3cDot11RadioIntfConfigTable, h3cDot11SrvSecurityKeyType=h3cDot11SrvSecurityKeyType, h3cDot11RPFragThreshold=h3cDot11RPFragThreshold, h3cDot11APCpuUsageThreshold=h3cDot11APCpuUsageThreshold, h3cDot11ACAutoAPSupport=h3cDot11ACAutoAPSupport, h3cDot11CfgPowerLockStat=h3cDot11CfgPowerLockStat, h3cDot11RadioCfglongRtrThld=h3cDot11RadioCfglongRtrThld, h3cDot11SIDAPName=h3cDot11SIDAPName, h3cDot11UplinkTrackId=h3cDot11UplinkTrackId, h3cDot11APUserCntLimit=h3cDot11APUserCntLimit, h3cDot11WlanBssIfIndex=h3cDot11WlanBssIfIndex, h3cDot11WDSSecPskKeyMode=h3cDot11WDSSecPskKeyMode, h3cDot11RCRadioStatus=h3cDot11RCRadioStatus, h3cDot11RadioBSSID=h3cDot11RadioBSSID, h3cDot11SrvPolicyRowStatus=h3cDot11SrvPolicyRowStatus, h3cDot11RadioSSIDSerialID=h3cDot11RadioSSIDSerialID, h3cDot11CfgServicePolicyID=h3cDot11CfgServicePolicyID, h3cDot11APUserUplimit=h3cDot11APUserUplimit, h3cDot11AutoAPName=h3cDot11AutoAPName, h3cDot11RadioPolicyTable=h3cDot11RadioPolicyTable, h3cDot11RCRadioRate=h3cDot11RCRadioRate, h3cDot11WlanEssIfNumber=h3cDot11WlanEssIfNumber, h3cDot11APDevDetectEnable=h3cDot11APDevDetectEnable, h3cDot11RCRadioID=h3cDot11RCRadioID, h3cDot11RadioSSIDIndex=h3cDot11RadioSSIDIndex, h3cDot11nRadioCfg2AMpduEnable=h3cDot11nRadioCfg2AMpduEnable, h3cDot11SPEnable=h3cDot11SPEnable, h3cDot11CfgNotifyGroup=h3cDot11CfgNotifyGroup, h3cDot11RdoPolicyRowStatus=h3cDot11RdoPolicyRowStatus, h3cDot11CipherKey=h3cDot11CipherKey, h3cDot11RadioWDSIndex=h3cDot11RadioWDSIndex, h3cDot11APSTVlanTable=h3cDot11APSTVlanTable, h3cDot11WDSSecPskKeyString=h3cDot11WDSSecPskKeyString, h3cDot11CFG=h3cDot11CFG, h3cDot11APPriorityLevel=h3cDot11APPriorityLevel, h3cDot11SPInCirMode=h3cDot11SPInCirMode, h3cDot11RCDynamicPowerState=h3cDot11RCDynamicPowerState, h3cDot11RCChannel=h3cDot11RCChannel, h3cDot11RtsThreshold=h3cDot11RtsThreshold, h3cDot11CfgServiceSetRowStatus=h3cDot11CfgServiceSetRowStatus, h3cDot11AllAPMemUsageThreshold=h3cDot11AllAPMemUsageThreshold, h3cDot11RadioCfgChannel=h3cDot11RadioCfgChannel, h3cDot11ConfigureAPID=h3cDot11ConfigureAPID, h3cDot11WlanBssIfNumber=h3cDot11WlanBssIfNumber, h3cDot11CfgTrapVarObjects=h3cDot11CfgTrapVarObjects, h3cDot11RadioIntfConfigEntry=h3cDot11RadioIntfConfigEntry, h3cDot11ConflictCipherIdx=h3cDot11ConflictCipherIdx, h3cDot11RadioPolicyExtTable=h3cDot11RadioPolicyExtTable, h3cDot11Description=h3cDot11Description, h3cDot11ServiceSetVlanId=h3cDot11ServiceSetVlanId, h3cDot11RPRadioID=h3cDot11RPRadioID, h3cDot11RadioToConfigTable=h3cDot11RadioToConfigTable, h3cDot11SampleInterval=h3cDot11SampleInterval, h3cDot11PersistentName=h3cDot11PersistentName, h3cDot11ServicePolicyExtID=h3cDot11ServicePolicyExtID, h3cDot11PortSecurityEntry=h3cDot11PortSecurityEntry, h3cDot11nRadioCfg2Table=h3cDot11nRadioCfg2Table, h3cDot11APDoSProtectEnable=h3cDot11APDoSProtectEnable, h3cDot11RadioTypeID=h3cDot11RadioTypeID, h3cDot11RadioCfgShtRetryThld=h3cDot11RadioCfgShtRetryThld, h3cDot11BeaconInterval=h3cDot11BeaconInterval, h3cDot11RadioToConfigEntry=h3cDot11RadioToConfigEntry, h3cDot11BackupACAdrssIPv6=h3cDot11BackupACAdrssIPv6, h3cDot11nRadioCfgIndex=h3cDot11nRadioCfgIndex, h3cDot11WlanInfPVID=h3cDot11WlanInfPVID, h3cDot11RtCollectSwitch=h3cDot11RtCollectSwitch, h3cDot11WlanEssRowStatus=h3cDot11WlanEssRowStatus, h3cDot11CfgRadioPolicyName=h3cDot11CfgRadioPolicyName, h3cDot11ACDataTunnelSecSupport=h3cDot11ACDataTunnelSecSupport, h3cDot11WlanInfBindingID=h3cDot11WlanInfBindingID, h3cDot11APUserThreshold=h3cDot11APUserThreshold, h3cDot11RadioIntfBindIfIdx=h3cDot11RadioIntfBindIfIdx, h3cDot11nShortGiEnable=h3cDot11nShortGiEnable, h3cDot11WlanInfBindingType=h3cDot11WlanInfBindingType, h3cDot11ServicePolicyTable=h3cDot11ServicePolicyTable, h3cDot11SecurityServicePolicyID=h3cDot11SecurityServicePolicyID, h3cDot11ConfigureRadioID=h3cDot11ConfigureRadioID, h3cDot11APServiceVlanId=h3cDot11APServiceVlanId, h3cDot11APSerialID=h3cDot11APSerialID, h3cDot11CfgSaCltRtFFTData=h3cDot11CfgSaCltRtFFTData, h3cDot11RadioCfgBeaconIntvl=h3cDot11RadioCfgBeaconIntvl, h3cDot11SIDStatisInterv=h3cDot11SIDStatisInterv, h3cDot11CipherKeyIndex=h3cDot11CipherKeyIndex, h3cDot11InterfaceConfigGroup=h3cDot11InterfaceConfigGroup, h3cDot11APBroadcastProbeReply=h3cDot11APBroadcastProbeReply, h3cDot11StaKeepAliveTimerInterv=h3cDot11StaKeepAliveTimerInterv, h3cDot11RCRadioType=h3cDot11RCRadioType, h3cDot11SIDAPWorkMode=h3cDot11SIDAPWorkMode, h3cDot11WlanMeshIfEntry=h3cDot11WlanMeshIfEntry, h3cDot11RadioSSIDWLANID=h3cDot11RadioSSIDWLANID, h3cDot11CfgSaEnable=h3cDot11CfgSaEnable, h3cDot11BackupACAdrssIP=h3cDot11BackupACAdrssIP, h3cDot11WLANEthernetIfIndex=h3cDot11WLANEthernetIfIndex, h3cDot11APServiceVlanEntry=h3cDot11APServiceVlanEntry, h3cDot11ServicePolicyID=h3cDot11ServicePolicyID, h3cDot11RCPreambleLen=h3cDot11RCPreambleLen, h3cDot11CfgChannelLockStat=h3cDot11CfgChannelLockStat, h3cDot11SampleTimeStamp=h3cDot11SampleTimeStamp, h3cDot11APGetIPMethod=h3cDot11APGetIPMethod, h3cDot11RadioCfgMaxRxLifetime=h3cDot11RadioCfgMaxRxLifetime, h3cDot11APMemUsageThreshold=h3cDot11APMemUsageThreshold, h3cDot11nRadioCfg2Entry=h3cDot11nRadioCfg2Entry, h3cDot11WlanEssIfIndex=h3cDot11WlanEssIfIndex, h3cDot11SPOutCirStaticValue=h3cDot11SPOutCirStaticValue, h3cDot11WlanEthernetIfNumber=h3cDot11WlanEthernetIfNumber, h3cDot11APServiceVlanSPID=h3cDot11APServiceVlanSPID, h3cDot11SmartRateSet=h3cDot11SmartRateSet, h3cDot11RadioWDSMode=h3cDot11RadioWDSMode, h3cDot11RadioSSIDCfgTable=h3cDot11RadioSSIDCfgTable, h3cDot11DisabledRateSet=h3cDot11DisabledRateSet, h3cDot11SPInCirStaticValue=h3cDot11SPInCirStaticValue, h3cDot11SIDAPStaIdleTimerInterv=h3cDot11SIDAPStaIdleTimerInterv, h3cDot11MaxAPPerIf=h3cDot11MaxAPPerIf, h3cDot11RCApPowerLevel=h3cDot11RCApPowerLevel, h3cDot11SIDAPCbs=h3cDot11SIDAPCbs, h3cDot11CurrConflictTemplateNum=h3cDot11CurrConflictTemplateNum, h3cDot11SecurityCiphers=h3cDot11SecurityCiphers, h3cDot11SrvPolicyExtRowStatus=h3cDot11SrvPolicyExtRowStatus, h3cDot11GlobalCountryCode=h3cDot11GlobalCountryCode, h3cDot11AdjIntfTrapThreshold=h3cDot11AdjIntfTrapThreshold, h3cDot11PortSecurityMode=h3cDot11PortSecurityMode, h3cDot11APBSSIDSupportNum=h3cDot11APBSSIDSupportNum, h3cDot11StaIdleTimerIntvl=h3cDot11StaIdleTimerIntvl, h3cDot11RtCollectIntvl=h3cDot11RtCollectIntvl, h3cDot11APIfSetEntry=h3cDot11APIfSetEntry, h3cDot11nChanelBand=h3cDot11nChanelBand, h3cDot11APCbs=h3cDot11APCbs, h3cDot11SrvSecurityPskKeyString=h3cDot11SrvSecurityPskKeyString, h3cDot11SPInCirValue=h3cDot11SPInCirValue, h3cDot11CfgRdElementID=h3cDot11CfgRdElementID, h3cDot11ShortRetryThreshold=h3cDot11ShortRetryThreshold, PYSNMP_MODULE_ID=h3cDot11CFG, h3cDot11SecurityPskKeyMode=h3cDot11SecurityPskKeyMode, h3cDot11SrvPortSecurityMode=h3cDot11SrvPortSecurityMode, h3cDot11ServicePolicyExtEntry=h3cDot11ServicePolicyExtEntry, h3cDot11RadioSSIDRadioID=h3cDot11RadioSSIDRadioID, h3cDot11SIDAPCir=h3cDot11SIDAPCir, h3cDot11WlanEssIfTable=h3cDot11WlanEssIfTable, h3cDot11SIDAPElementID=h3cDot11SIDAPElementID, h3cDot11RadioIfIdx=h3cDot11RadioIfIdx, h3cDot11nRadioCfg2APIDIndex=h3cDot11nRadioCfg2APIDIndex, h3cDot11SIDModelAlias=h3cDot11SIDModelAlias, h3cDot11CipherKeyType=h3cDot11CipherKeyType, h3cDot11nRadioCfg2ChannelBand=h3cDot11nRadioCfg2ChannelBand, h3cDot11BroadcastProbeReply=h3cDot11BroadcastProbeReply, h3cDot11APLastUpdateStatTime=h3cDot11APLastUpdateStatTime, h3cDot11CfgRRMSDRdGroupId=h3cDot11CfgRRMSDRdGroupId, h3cDot11RadioCfgDtimIntvl=h3cDot11RadioCfgDtimIntvl, h3cDot11TemplateAPModelAlias=h3cDot11TemplateAPModelAlias, h3cDot11APIfSetTable=h3cDot11APIfSetTable, h3cDot11APServiceVlanRowStatus=h3cDot11APServiceVlanRowStatus, h3cDot11RadioPolicyExtEntry=h3cDot11RadioPolicyExtEntry, h3cDot11LongRetryThreshold=h3cDot11LongRetryThreshold, h3cDot11MandatoryRateSet=h3cDot11MandatoryRateSet, h3cDot11ChnlSwitChkInterval=h3cDot11ChnlSwitChkInterval, h3cDot11RadioCfgPreambleLen=h3cDot11RadioCfgPreambleLen, h3cDot11RPAPSerialID=h3cDot11RPAPSerialID, h3cDot11APConfigGroup=h3cDot11APConfigGroup, h3cDot11RPShortRetryThreshold=h3cDot11RPShortRetryThreshold, h3cDot11SIDAPStatisIntervMode=h3cDot11SIDAPStatisIntervMode, h3cDot11RadioCfgType2=h3cDot11RadioCfgType2, h3cDot11RadioWDSNetWorkID=h3cDot11RadioWDSNetWorkID, h3cDot11WlanMeshIfIndex=h3cDot11WlanMeshIfIndex, h3cDot11APServiceSetTable=h3cDot11APServiceSetTable, h3cDot11SrvPolicyExtendEntry=h3cDot11SrvPolicyExtendEntry, h3cDot11SIDAPGetIPMethod=h3cDot11SIDAPGetIPMethod, h3cDot11StaIdleTimerInterv=h3cDot11StaIdleTimerInterv, h3cDot11CfgSaBand=h3cDot11CfgSaBand, h3cDot11RCDynamicChlState=h3cDot11RCDynamicChlState, h3cDot11CfgRadioStatus=h3cDot11CfgRadioStatus, h3cDot11WlanBssRowStatus=h3cDot11WlanBssRowStatus, h3cDot11BeaconIntervalMs=h3cDot11BeaconIntervalMs, h3cDot11DtimInterval=h3cDot11DtimInterval, h3cDot11IntfTrapThreshold=h3cDot11IntfTrapThreshold, h3cDot11CfgSTVLANID=h3cDot11CfgSTVLANID, h3cDot11WLANEthernetIfTable=h3cDot11WLANEthernetIfTable, h3cDot11RadioConfigEntry=h3cDot11RadioConfigEntry, h3cDot11WlanEssIfEntry=h3cDot11WlanEssIfEntry, h3cDot11APSTVlanEntry=h3cDot11APSTVlanEntry, h3cDot11StatisIntervMode=h3cDot11StatisIntervMode, h3cDot11RglCollectIntvl=h3cDot11RglCollectIntvl, h3cDot11PreambleLen=h3cDot11PreambleLen, h3cDot11DataRateConfigEntry=h3cDot11DataRateConfigEntry, h3cDot11SSIDWepIDConflictTrap=h3cDot11SSIDWepIDConflictTrap, h3cDot11SIDStaKeepAliveTimerInterv=h3cDot11SIDStaKeepAliveTimerInterv, h3cDot11StaKeepALiveTimerIntvl=h3cDot11StaKeepALiveTimerIntvl, h3cDot11APWorkMode=h3cDot11APWorkMode, h3cDot11CfgMaxTxPowerLevel=h3cDot11CfgMaxTxPowerLevel, h3cDot11RadioIntfBindEntry=h3cDot11RadioIntfBindEntry, h3cDot11APElementID=h3cDot11APElementID, h3cDot11SPOutCirValue=h3cDot11SPOutCirValue, h3cDot11ServicePolicyExtTable=h3cDot11ServicePolicyExtTable, h3cDot11RadioPolicyName=h3cDot11RadioPolicyName, h3cDot11APTemplateName=h3cDot11APTemplateName, h3cDot11PortSecurityTable=h3cDot11PortSecurityTable, h3cDot11RCPwrAdjustStepLength=h3cDot11RCPwrAdjustStepLength, h3cDot11RCAPSerialID=h3cDot11RCAPSerialID, h3cDot11RadioElementConfigGroup=h3cDot11RadioElementConfigGroup, h3cDot11RadioIntfBindRowStatus=h3cDot11RadioIntfBindRowStatus, h3cDot11ACBackupGroup=h3cDot11ACBackupGroup, h3cDot11SIDRowStatus=h3cDot11SIDRowStatus, h3cDot11RadioPolicyEntry=h3cDot11RadioPolicyEntry, h3cDot11SPIsolate=h3cDot11SPIsolate, h3cDot11APSsidNumLimit=h3cDot11APSsidNumLimit, h3cDot11RadioCfgRtsThreshold=h3cDot11RadioCfgRtsThreshold, h3cDot11APIfAlias=h3cDot11APIfAlias, h3cDot11DataRateConfigTable=h3cDot11DataRateConfigTable, h3cDot11SrvPortSecurityEntry=h3cDot11SrvPortSecurityEntry, h3cDot11nRadioCfg2AMsduEnable=h3cDot11nRadioCfg2AMsduEnable, h3cDot11APSerialIDTable=h3cDot11APSerialIDTable, h3cDot11APScanMode=h3cDot11APScanMode, h3cDot11APServiceVlanSerialID=h3cDot11APServiceVlanSerialID, h3cDot11RCRadioType2=h3cDot11RCRadioType2, h3cDot11ClientMaxCount=h3cDot11ClientMaxCount, h3cDot11FragThreshold=h3cDot11FragThreshold, h3cDot11CfgSTNASPortID=h3cDot11CfgSTNASPortID, h3cDot11CfgRadioType2=h3cDot11CfgRadioType2, h3cDot11SIDAPPriorityLevel=h3cDot11SIDAPPriorityLevel, h3cDot11RadioWDSTable=h3cDot11RadioWDSTable, h3cDot11nRadioCfgEntry=h3cDot11nRadioCfgEntry, h3cDot11nRadioCfg2ShortGiEnable=h3cDot11nRadioCfg2ShortGiEnable, h3cDot11SPOutCirMode=h3cDot11SPOutCirMode, h3cDot11APTemplateTable=h3cDot11APTemplateTable, h3cDot11WlanEthernetRowStatus=h3cDot11WlanEthernetRowStatus)
mibBuilder.exportSymbols("A3COM-HUAWEI-DOT11-CFG-MIB", h3cDot11RPRtsThreshold=h3cDot11RPRtsThreshold, h3cDot11RadioConfigTable=h3cDot11RadioConfigTable, h3cDot11WAPIAuthServerIP=h3cDot11WAPIAuthServerIP, h3cDot11MonitorInterval=h3cDot11MonitorInterval, h3cDot11WlanMeshIfNumber=h3cDot11WlanMeshIfNumber, h3cDot11APSerialIDEntry=h3cDot11APSerialIDEntry, h3cDot11SIDAPDescription=h3cDot11SIDAPDescription, h3cDot11SrvPortSecurityTable=h3cDot11SrvPortSecurityTable, h3cDot11PolicyConfigGroup=h3cDot11PolicyConfigGroup, h3cDot11CfgCipherChange=h3cDot11CfgCipherChange, h3cDot11RadioTxArithmetic=h3cDot11RadioTxArithmetic, h3cDot11ServicePolicyEntry=h3cDot11ServicePolicyEntry, h3cDot11APServiceVlanTable=h3cDot11APServiceVlanTable, h3cDot11APLimitEntry=h3cDot11APLimitEntry, h3cDot11RadioSSIDRowStatus=h3cDot11RadioSSIDRowStatus, h3cDot11WLANEthernetIfEntry=h3cDot11WLANEthernetIfEntry, h3cDot11SecIEStatus=h3cDot11SecIEStatus, h3cDot11RdoClientMaxCount=h3cDot11RdoClientMaxCount, h3cDot11SecurityUserLoginTxKeyType=h3cDot11SecurityUserLoginTxKeyType, h3cDot11SSIDHidden=h3cDot11SSIDHidden, h3cDot11APTemplateEntry=h3cDot11APTemplateEntry, h3cDot11RadioCfgFragThreshold=h3cDot11RadioCfgFragThreshold, h3cDot11APSysInfoSetTable=h3cDot11APSysInfoSetTable, h3cDot11CfgNotifications=h3cDot11CfgNotifications, h3cDot11SIDAPDevDetectEnable=h3cDot11SIDAPDevDetectEnable, h3cDot11CfgWorkMode=h3cDot11CfgWorkMode, h3cDot11APCir=h3cDot11APCir, h3cDot11APName=h3cDot11APName, h3cDot11RadioIntfBindTable=h3cDot11RadioIntfBindTable, h3cDot11nRadioCfg2RadioIDIndex=h3cDot11nRadioCfg2RadioIDIndex, h3cDot11RadioCfgType=h3cDot11RadioCfgType, h3cDot11nRadioCfg2ClientDot11nOnly=h3cDot11nRadioCfg2ClientDot11nOnly, h3cDot11RPDtimInterval=h3cDot11RPDtimInterval, h3cDot11DataRateConfigGroup=h3cDot11DataRateConfigGroup, h3cDot11SIDAPSerialID=h3cDot11SIDAPSerialID, h3cDot11MaxRxLifetime=h3cDot11MaxRxLifetime, h3cDot11RCPwrAttValue=h3cDot11RCPwrAttValue, h3cDot11APTemplateRowStatus=h3cDot11APTemplateRowStatus, h3cDot11AllAPMonitorMode=h3cDot11AllAPMonitorMode, h3cDot11AllAPCpuUsageThreshold=h3cDot11AllAPCpuUsageThreshold, h3cDot11SSIDName=h3cDot11SSIDName, h3cDot11CfgRadioID=h3cDot11CfgRadioID, h3cDot11WlanBssIfTable=h3cDot11WlanBssIfTable, h3cDot11APServiceSetEntry=h3cDot11APServiceSetEntry, h3cDot11AuthenMode=h3cDot11AuthenMode, h3cDot11SSIDEncryptionMode=h3cDot11SSIDEncryptionMode, h3cDot11APSetIfIndex=h3cDot11APSetIfIndex, h3cDot11RadioCfgOnly11gEnable=h3cDot11RadioCfgOnly11gEnable, h3cDot11nAMsduEnable=h3cDot11nAMsduEnable, h3cDot11WlanMeshRowStatus=h3cDot11WlanMeshRowStatus, h3cDot11SrvSecurityPskKeyMode=h3cDot11SrvSecurityPskKeyMode, h3cDot11GlobeConfigGroup=h3cDot11GlobeConfigGroup, h3cDot11APSysInfoSetEntry=h3cDot11APSysInfoSetEntry, h3cDot11StatisInterv=h3cDot11StatisInterv, h3cDot11RadioIntfConfigGroup=h3cDot11RadioIntfConfigGroup, h3cDot11nClientDot11nOnly=h3cDot11nClientDot11nOnly, h3cDot11WlanMeshIfTable=h3cDot11WlanMeshIfTable)
