#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-FrameRelayNniMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-FrameRelayNniMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
Counter32, Unsigned32, InterfaceIndex, Integer32, StorageType, RowPointer, DisplayString, Gauge32, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Counter32", "Unsigned32", "InterfaceIndex", "Integer32", "StorageType", "RowPointer", "DisplayString", "Gauge32", "RowStatus")
Link, DigitString, EnterpriseDateAndTime, HexString, FixedPoint3, Unsigned64, PassportCounter64, AsciiString, Hex, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link", "DigitString", "EnterpriseDateAndTime", "HexString", "FixedPoint3", "Unsigned64", "PassportCounter64", "AsciiString", "Hex", "NonReplicated")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, Unsigned32, IpAddress, Bits, Integer32, TimeTicks, ObjectIdentity, NotificationType, Counter64, Gauge32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "Unsigned32", "IpAddress", "Bits", "Integer32", "TimeTicks", "ObjectIdentity", "NotificationType", "Counter64", "Gauge32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frameRelayNniMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23))
mscFrNni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70))
mscFrNniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 1), )
if mibBuilder.loadTexts: mscFrNniRowStatusTable.setStatus('mandatory')
mscFrNniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"))
if mibBuilder.loadTexts: mscFrNniRowStatusEntry.setStatus('mandatory')
mscFrNniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniRowStatus.setStatus('mandatory')
mscFrNniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniComponentName.setStatus('mandatory')
mscFrNniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniStorageType.setStatus('mandatory')
mscFrNniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscFrNniIndex.setStatus('mandatory')
mscFrNniCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 10), )
if mibBuilder.loadTexts: mscFrNniCidDataTable.setStatus('mandatory')
mscFrNniCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"))
if mibBuilder.loadTexts: mscFrNniCidDataEntry.setStatus('mandatory')
mscFrNniCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCustomerIdentifier.setStatus('mandatory')
mscFrNniStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11), )
if mibBuilder.loadTexts: mscFrNniStateTable.setStatus('mandatory')
mscFrNniStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"))
if mibBuilder.loadTexts: mscFrNniStateEntry.setStatus('mandatory')
mscFrNniAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniAdminState.setStatus('mandatory')
mscFrNniOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniOperationalState.setStatus('mandatory')
mscFrNniUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniUsageState.setStatus('mandatory')
mscFrNniAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniAvailabilityStatus.setStatus('mandatory')
mscFrNniProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniProceduralStatus.setStatus('mandatory')
mscFrNniControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniControlStatus.setStatus('mandatory')
mscFrNniAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniAlarmStatus.setStatus('mandatory')
mscFrNniStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniStandbyStatus.setStatus('mandatory')
mscFrNniUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniUnknownStatus.setStatus('mandatory')
mscFrNniStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 12), )
if mibBuilder.loadTexts: mscFrNniStatsTable.setStatus('mandatory')
mscFrNniStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"))
if mibBuilder.loadTexts: mscFrNniStatsEntry.setStatus('mandatory')
mscFrNniLastUnknownDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLastUnknownDlci.setStatus('mandatory')
mscFrNniUnknownDlciFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniUnknownDlciFramesFromIf.setStatus('mandatory')
mscFrNniInvalidHeaderFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniInvalidHeaderFramesFromIf.setStatus('mandatory')
mscFrNniIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 13), )
if mibBuilder.loadTexts: mscFrNniIfEntryTable.setStatus('mandatory')
mscFrNniIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"))
if mibBuilder.loadTexts: mscFrNniIfEntryEntry.setStatus('mandatory')
mscFrNniIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniIfAdminStatus.setStatus('mandatory')
mscFrNniIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 13, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniIfIndex.setStatus('mandatory')
mscFrNniOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 14), )
if mibBuilder.loadTexts: mscFrNniOperStatusTable.setStatus('mandatory')
mscFrNniOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"))
if mibBuilder.loadTexts: mscFrNniOperStatusEntry.setStatus('mandatory')
mscFrNniSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSnmpOperStatus.setStatus('mandatory')
mscFrNniEmissionPriorityQsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 15), )
if mibBuilder.loadTexts: mscFrNniEmissionPriorityQsTable.setStatus('mandatory')
mscFrNniEmissionPriorityQsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"))
if mibBuilder.loadTexts: mscFrNniEmissionPriorityQsEntry.setStatus('mandatory')
mscFrNniNumberOfEmissionQs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniNumberOfEmissionQs.setStatus('mandatory')
mscFrNniFrmToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 341), )
if mibBuilder.loadTexts: mscFrNniFrmToIfByQueueTable.setStatus('mandatory')
mscFrNniFrmToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 341, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniFrmToIfByQueueIndex"))
if mibBuilder.loadTexts: mscFrNniFrmToIfByQueueEntry.setStatus('mandatory')
mscFrNniFrmToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 341, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscFrNniFrmToIfByQueueIndex.setStatus('mandatory')
mscFrNniFrmToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 341, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFrmToIfByQueueValue.setStatus('mandatory')
mscFrNniOctetToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 342), )
if mibBuilder.loadTexts: mscFrNniOctetToIfByQueueTable.setStatus('mandatory')
mscFrNniOctetToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 342, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniOctetToIfByQueueIndex"))
if mibBuilder.loadTexts: mscFrNniOctetToIfByQueueEntry.setStatus('mandatory')
mscFrNniOctetToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 342, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscFrNniOctetToIfByQueueIndex.setStatus('mandatory')
mscFrNniOctetToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 342, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniOctetToIfByQueueValue.setStatus('mandatory')
mscFrNniDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2))
mscFrNniDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 1), )
if mibBuilder.loadTexts: mscFrNniDnaRowStatusTable.setStatus('mandatory')
mscFrNniDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"))
if mibBuilder.loadTexts: mscFrNniDnaRowStatusEntry.setStatus('mandatory')
mscFrNniDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaRowStatus.setStatus('mandatory')
mscFrNniDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaComponentName.setStatus('mandatory')
mscFrNniDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaStorageType.setStatus('mandatory')
mscFrNniDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniDnaIndex.setStatus('mandatory')
mscFrNniDnaAddressTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 10), )
if mibBuilder.loadTexts: mscFrNniDnaAddressTable.setStatus('mandatory')
mscFrNniDnaAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"))
if mibBuilder.loadTexts: mscFrNniDnaAddressEntry.setStatus('mandatory')
mscFrNniDnaNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaNumberingPlanIndicator.setStatus('mandatory')
mscFrNniDnaDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaDataNetworkAddress.setStatus('mandatory')
mscFrNniDnaOutgoingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11), )
if mibBuilder.loadTexts: mscFrNniDnaOutgoingOptionsTable.setStatus('mandatory')
mscFrNniDnaOutgoingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"))
if mibBuilder.loadTexts: mscFrNniDnaOutgoingOptionsEntry.setStatus('mandatory')
mscFrNniDnaOutDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaOutDefaultPriority.setStatus('mandatory')
mscFrNniDnaOutDefaultPathSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1))).clone('throughput')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaOutDefaultPathSensitivity.setStatus('obsolete')
mscFrNniDnaOutPathSensitivityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaOutPathSensitivityOverRide.setStatus('obsolete')
mscFrNniDnaOutDefaultPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaOutDefaultPathReliability.setStatus('mandatory')
mscFrNniDnaOutAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaOutAccess.setStatus('obsolete')
mscFrNniDnaDefaultTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaDefaultTransferPriority.setStatus('mandatory')
mscFrNniDnaTransferPriorityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaTransferPriorityOverRide.setStatus('mandatory')
mscFrNniDnaIncomingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 12), )
if mibBuilder.loadTexts: mscFrNniDnaIncomingOptionsTable.setStatus('mandatory')
mscFrNniDnaIncomingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"))
if mibBuilder.loadTexts: mscFrNniDnaIncomingOptionsEntry.setStatus('mandatory')
mscFrNniDnaIncAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaIncAccess.setStatus('obsolete')
mscFrNniDnaCallOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 13), )
if mibBuilder.loadTexts: mscFrNniDnaCallOptionsTable.setStatus('mandatory')
mscFrNniDnaCallOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"))
if mibBuilder.loadTexts: mscFrNniDnaCallOptionsEntry.setStatus('mandatory')
mscFrNniDnaAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaAccountClass.setStatus('mandatory')
mscFrNniDnaAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 13, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaAccountCollection.setStatus('mandatory')
mscFrNniDnaServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 13, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaServiceExchange.setStatus('mandatory')
mscFrNniDnaEgressAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaEgressAccounting.setStatus('mandatory')
mscFrNniDnaDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 13, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("dprsOnly", 0), ("dprsMcsOnly", 1), ("dprsMcsFirst", 2))).clone('dprsOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaDataPath.setStatus('mandatory')
mscFrNniDnaCug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2))
mscFrNniDnaCugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 1), )
if mibBuilder.loadTexts: mscFrNniDnaCugRowStatusTable.setStatus('obsolete')
mscFrNniDnaCugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaCugIndex"))
if mibBuilder.loadTexts: mscFrNniDnaCugRowStatusEntry.setStatus('obsolete')
mscFrNniDnaCugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaCugRowStatus.setStatus('obsolete')
mscFrNniDnaCugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaCugComponentName.setStatus('obsolete')
mscFrNniDnaCugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaCugStorageType.setStatus('obsolete')
mscFrNniDnaCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: mscFrNniDnaCugIndex.setStatus('obsolete')
mscFrNniDnaCugCugOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 10), )
if mibBuilder.loadTexts: mscFrNniDnaCugCugOptionsTable.setStatus('obsolete')
mscFrNniDnaCugCugOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaCugIndex"))
if mibBuilder.loadTexts: mscFrNniDnaCugCugOptionsEntry.setStatus('obsolete')
mscFrNniDnaCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("national", 0), ("international", 1))).clone('national')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaCugType.setStatus('obsolete')
mscFrNniDnaCugDnic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="30303030")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaCugDnic.setStatus('obsolete')
mscFrNniDnaCugInterlockCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaCugInterlockCode.setStatus('obsolete')
mscFrNniDnaCugPreferential = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaCugPreferential.setStatus('obsolete')
mscFrNniDnaCugOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaCugOutCalls.setStatus('obsolete')
mscFrNniDnaCugIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaCugIncCalls.setStatus('obsolete')
mscFrNniDnaHgM = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3))
mscFrNniDnaHgMRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 1), )
if mibBuilder.loadTexts: mscFrNniDnaHgMRowStatusTable.setStatus('mandatory')
mscFrNniDnaHgMRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaHgMIndex"))
if mibBuilder.loadTexts: mscFrNniDnaHgMRowStatusEntry.setStatus('mandatory')
mscFrNniDnaHgMRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaHgMRowStatus.setStatus('mandatory')
mscFrNniDnaHgMComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMComponentName.setStatus('mandatory')
mscFrNniDnaHgMStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMStorageType.setStatus('mandatory')
mscFrNniDnaHgMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniDnaHgMIndex.setStatus('mandatory')
mscFrNniDnaHgMIfTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 10), )
if mibBuilder.loadTexts: mscFrNniDnaHgMIfTable.setStatus('mandatory')
mscFrNniDnaHgMIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaHgMIndex"))
if mibBuilder.loadTexts: mscFrNniDnaHgMIfEntry.setStatus('mandatory')
mscFrNniDnaHgMAvailabilityUpdateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2048, 16777216)).clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaHgMAvailabilityUpdateThreshold.setStatus('mandatory')
mscFrNniDnaHgMOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 11), )
if mibBuilder.loadTexts: mscFrNniDnaHgMOpTable.setStatus('mandatory')
mscFrNniDnaHgMOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaHgMIndex"))
if mibBuilder.loadTexts: mscFrNniDnaHgMOpEntry.setStatus('mandatory')
mscFrNniDnaHgMMaximumAvailableAggregateCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMMaximumAvailableAggregateCir.setStatus('obsolete')
mscFrNniDnaHgMAvailableAggregateCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMAvailableAggregateCir.setStatus('obsolete')
mscFrNniDnaHgMAvailabilityDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-16777216, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMAvailabilityDelta.setStatus('mandatory')
mscFrNniDnaHgMAvailableDlcis = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMAvailableDlcis.setStatus('mandatory')
mscFrNniDnaHgMMaximumAvailableAggregateCir64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 11, 1, 6), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMMaximumAvailableAggregateCir64.setStatus('mandatory')
mscFrNniDnaHgMAvailableAggregateCir64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 11, 1, 7), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMAvailableAggregateCir64.setStatus('mandatory')
mscFrNniDnaHgMHgAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2))
mscFrNniDnaHgMHgAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 1), )
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrRowStatusTable.setStatus('mandatory')
mscFrNniDnaHgMHgAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaHgMIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaHgMHgAddrIndex"))
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrRowStatusEntry.setStatus('mandatory')
mscFrNniDnaHgMHgAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrRowStatus.setStatus('mandatory')
mscFrNniDnaHgMHgAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrComponentName.setStatus('mandatory')
mscFrNniDnaHgMHgAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrStorageType.setStatus('mandatory')
mscFrNniDnaHgMHgAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrIndex.setStatus('mandatory')
mscFrNniDnaHgMHgAddrAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 10), )
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrAddrTable.setStatus('mandatory')
mscFrNniDnaHgMHgAddrAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaHgMIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDnaHgMHgAddrIndex"))
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrAddrEntry.setStatus('mandatory')
mscFrNniDnaHgMHgAddrNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrNumberingPlanIndicator.setStatus('mandatory')
mscFrNniDnaHgMHgAddrDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 2, 3, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDnaHgMHgAddrDataNetworkAddress.setStatus('mandatory')
mscFrNniFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3))
mscFrNniFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 1), )
if mibBuilder.loadTexts: mscFrNniFramerRowStatusTable.setStatus('mandatory')
mscFrNniFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniFramerIndex"))
if mibBuilder.loadTexts: mscFrNniFramerRowStatusEntry.setStatus('mandatory')
mscFrNniFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniFramerRowStatus.setStatus('mandatory')
mscFrNniFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerComponentName.setStatus('mandatory')
mscFrNniFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerStorageType.setStatus('mandatory')
mscFrNniFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniFramerIndex.setStatus('mandatory')
mscFrNniFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 10), )
if mibBuilder.loadTexts: mscFrNniFramerProvTable.setStatus('mandatory')
mscFrNniFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniFramerIndex"))
if mibBuilder.loadTexts: mscFrNniFramerProvEntry.setStatus('mandatory')
mscFrNniFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniFramerInterfaceName.setStatus('mandatory')
mscFrNniFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 11), )
if mibBuilder.loadTexts: mscFrNniFramerLinkTable.setStatus('mandatory')
mscFrNniFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniFramerIndex"))
if mibBuilder.loadTexts: mscFrNniFramerLinkEntry.setStatus('mandatory')
mscFrNniFramerDataInversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("off", 0), ("on", 16))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniFramerDataInversion.setStatus('mandatory')
mscFrNniFramerFrameCrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crc16", 0), ("crc32", 1), ("noCrc", 2))).clone('crc16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniFramerFrameCrcType.setStatus('mandatory')
mscFrNniFramerFlagsBetweenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniFramerFlagsBetweenFrames.setStatus('mandatory')
mscFrNniFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 12), )
if mibBuilder.loadTexts: mscFrNniFramerStateTable.setStatus('mandatory')
mscFrNniFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniFramerIndex"))
if mibBuilder.loadTexts: mscFrNniFramerStateEntry.setStatus('mandatory')
mscFrNniFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerAdminState.setStatus('mandatory')
mscFrNniFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerOperationalState.setStatus('mandatory')
mscFrNniFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerUsageState.setStatus('mandatory')
mscFrNniFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13), )
if mibBuilder.loadTexts: mscFrNniFramerStatsTable.setStatus('mandatory')
mscFrNniFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniFramerIndex"))
if mibBuilder.loadTexts: mscFrNniFramerStatsEntry.setStatus('mandatory')
mscFrNniFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerFrmToIf.setStatus('obsolete')
mscFrNniFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerFrmFromIf.setStatus('obsolete')
mscFrNniFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerOctetFromIf.setStatus('obsolete')
mscFrNniFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerAborts.setStatus('mandatory')
mscFrNniFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerCrcErrors.setStatus('mandatory')
mscFrNniFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerLrcErrors.setStatus('mandatory')
mscFrNniFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerNonOctetErrors.setStatus('mandatory')
mscFrNniFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerOverruns.setStatus('mandatory')
mscFrNniFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerUnderruns.setStatus('mandatory')
mscFrNniFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerLargeFrmErrors.setStatus('mandatory')
mscFrNniFramerFrmModeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerFrmModeErrors.setStatus('mandatory')
mscFrNniFramerFrmToIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 14), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerFrmToIf64.setStatus('mandatory')
mscFrNniFramerFrmFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 15), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerFrmFromIf64.setStatus('mandatory')
mscFrNniFramerOctetFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 13, 1, 16), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerOctetFromIf64.setStatus('mandatory')
mscFrNniFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 14), )
if mibBuilder.loadTexts: mscFrNniFramerUtilTable.setStatus('mandatory')
mscFrNniFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniFramerIndex"))
if mibBuilder.loadTexts: mscFrNniFramerUtilEntry.setStatus('mandatory')
mscFrNniFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerNormPrioLinkUtilToIf.setStatus('mandatory')
mscFrNniFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 3, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
mscFrNniLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4))
mscFrNniLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 1), )
if mibBuilder.loadTexts: mscFrNniLmiRowStatusTable.setStatus('mandatory')
mscFrNniLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLmiIndex"))
if mibBuilder.loadTexts: mscFrNniLmiRowStatusEntry.setStatus('mandatory')
mscFrNniLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiRowStatus.setStatus('mandatory')
mscFrNniLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiComponentName.setStatus('mandatory')
mscFrNniLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiStorageType.setStatus('mandatory')
mscFrNniLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniLmiIndex.setStatus('mandatory')
mscFrNniLmiParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 10), )
if mibBuilder.loadTexts: mscFrNniLmiParmsTable.setStatus('mandatory')
mscFrNniLmiParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLmiIndex"))
if mibBuilder.loadTexts: mscFrNniLmiParmsEntry.setStatus('mandatory')
mscFrNniLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("ansi", 2), ("itu", 3), ("autoConfigure", 4))).clone('autoConfigure')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLmiProcedures.setStatus('mandatory')
mscFrNniLmiAsyncStatusReport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLmiAsyncStatusReport.setStatus('mandatory')
mscFrNniLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLmiErrorEventThreshold.setStatus('mandatory')
mscFrNniLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLmiEventCount.setStatus('mandatory')
mscFrNniLmiCheckPointTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLmiCheckPointTimer.setStatus('mandatory')
mscFrNniLmiIgnoreActiveBit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLmiIgnoreActiveBit.setStatus('mandatory')
mscFrNniLmiNniParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 11), )
if mibBuilder.loadTexts: mscFrNniLmiNniParmsTable.setStatus('mandatory')
mscFrNniLmiNniParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLmiIndex"))
if mibBuilder.loadTexts: mscFrNniLmiNniParmsEntry.setStatus('mandatory')
mscFrNniLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLmiFullStatusPollingCycles.setStatus('mandatory')
mscFrNniLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLmiLinkVerificationTimer.setStatus('mandatory')
mscFrNniLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 12), )
if mibBuilder.loadTexts: mscFrNniLmiStateTable.setStatus('mandatory')
mscFrNniLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLmiIndex"))
if mibBuilder.loadTexts: mscFrNniLmiStateEntry.setStatus('mandatory')
mscFrNniLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiAdminState.setStatus('mandatory')
mscFrNniLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiOperationalState.setStatus('mandatory')
mscFrNniLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiUsageState.setStatus('mandatory')
mscFrNniLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 13), )
if mibBuilder.loadTexts: mscFrNniLmiPsiTable.setStatus('mandatory')
mscFrNniLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLmiIndex"))
if mibBuilder.loadTexts: mscFrNniLmiPsiEntry.setStatus('mandatory')
mscFrNniLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1), ("configuring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiProtocolStatus.setStatus('mandatory')
mscFrNniLmiOpProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("ansi", 2), ("itu", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiOpProcedures.setStatus('mandatory')
mscFrNniLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14), )
if mibBuilder.loadTexts: mscFrNniLmiStatsTable.setStatus('mandatory')
mscFrNniLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLmiIndex"))
if mibBuilder.loadTexts: mscFrNniLmiStatsEntry.setStatus('mandatory')
mscFrNniLmiKeepAliveStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiKeepAliveStatusToIf.setStatus('mandatory')
mscFrNniLmiFullStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiFullStatusToIf.setStatus('mandatory')
mscFrNniLmiKeepAliveStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiKeepAliveStatusEnqFromIf.setStatus('mandatory')
mscFrNniLmiFullStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiFullStatusEnqFromIf.setStatus('mandatory')
mscFrNniLmiNetworkSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiNetworkSideEventHistory.setStatus('mandatory')
mscFrNniLmiUserSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 6), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiUserSideEventHistory.setStatus('mandatory')
mscFrNniLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiProtocolErrors.setStatus('mandatory')
mscFrNniLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiUnexpectedIes.setStatus('mandatory')
mscFrNniLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiSequenceErrors.setStatus('mandatory')
mscFrNniLmiStatusSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiStatusSequenceErrors.setStatus('mandatory')
mscFrNniLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiUnexpectedReports.setStatus('mandatory')
mscFrNniLmiPollingVerifTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiPollingVerifTimeouts.setStatus('mandatory')
mscFrNniLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 4, 14, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLmiNoStatusReportCount.setStatus('mandatory')
mscFrNniDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5))
mscFrNniDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 1), )
if mibBuilder.loadTexts: mscFrNniDlciRowStatusTable.setStatus('mandatory')
mscFrNniDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"))
if mibBuilder.loadTexts: mscFrNniDlciRowStatusEntry.setStatus('mandatory')
mscFrNniDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciRowStatus.setStatus('mandatory')
mscFrNniDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciComponentName.setStatus('mandatory')
mscFrNniDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciStorageType.setStatus('mandatory')
mscFrNniDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: mscFrNniDlciIndex.setStatus('mandatory')
mscFrNniDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10), )
if mibBuilder.loadTexts: mscFrNniDlciStateTable.setStatus('mandatory')
mscFrNniDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"))
if mibBuilder.loadTexts: mscFrNniDlciStateEntry.setStatus('mandatory')
mscFrNniDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciAdminState.setStatus('mandatory')
mscFrNniDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciOperationalState.setStatus('mandatory')
mscFrNniDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciUsageState.setStatus('mandatory')
mscFrNniDlciAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciAvailabilityStatus.setStatus('mandatory')
mscFrNniDlciProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciProceduralStatus.setStatus('mandatory')
mscFrNniDlciControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciControlStatus.setStatus('mandatory')
mscFrNniDlciAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciAlarmStatus.setStatus('mandatory')
mscFrNniDlciStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciStandbyStatus.setStatus('mandatory')
mscFrNniDlciUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciUnknownStatus.setStatus('mandatory')
mscFrNniDlciAbitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 12), )
if mibBuilder.loadTexts: mscFrNniDlciAbitTable.setStatus('mandatory')
mscFrNniDlciAbitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"))
if mibBuilder.loadTexts: mscFrNniDlciAbitEntry.setStatus('mandatory')
mscFrNniDlciABitStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciABitStatusToIf.setStatus('mandatory')
mscFrNniDlciABitReasonToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("remoteLmiError", 3), ("localLinkDown", 4), ("remoteLinkDown", 5), ("pvcSpvcDown", 6), ("userNotAuthorized", 8), ("resourceNotAvailable", 9), ("dlciCollisionAtNni", 10))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciABitReasonToIf.setStatus('mandatory')
mscFrNniDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciABitStatusFromIf.setStatus('mandatory')
mscFrNniDlciABitReasonFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("localLinkDown", 4), ("missingFromLmiReport", 7))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciABitReasonFromIf.setStatus('mandatory')
mscFrNniDlciLoopbackState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLoopbackState.setStatus('mandatory')
mscFrNniDlciSpOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13), )
if mibBuilder.loadTexts: mscFrNniDlciSpOpTable.setStatus('mandatory')
mscFrNniDlciSpOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"))
if mibBuilder.loadTexts: mscFrNniDlciSpOpEntry.setStatus('mandatory')
mscFrNniDlciMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciMaximumFrameSize.setStatus('mandatory')
mscFrNniDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciRateEnforcement.setStatus('obsolete')
mscFrNniDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCommittedInformationRate.setStatus('mandatory')
mscFrNniDlciCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCommittedBurstSize.setStatus('mandatory')
mscFrNniDlciExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciExcessBurstSize.setStatus('mandatory')
mscFrNniDlciMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciMeasurementInterval.setStatus('mandatory')
mscFrNniDlciRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciRateAdaptation.setStatus('obsolete')
mscFrNniDlciAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciAccounting.setStatus('mandatory')
mscFrNniDlciEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEmissionPriorityToIf.setStatus('mandatory')
mscFrNniDlciTransferPriToNwk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciTransferPriToNwk.setStatus('mandatory')
mscFrNniDlciTransferPriFromNwk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 13, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciTransferPriFromNwk.setStatus('mandatory')
mscFrNniDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14), )
if mibBuilder.loadTexts: mscFrNniDlciStatsTable.setStatus('mandatory')
mscFrNniDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"))
if mibBuilder.loadTexts: mscFrNniDlciStatsEntry.setStatus('mandatory')
mscFrNniDlciFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciFrmToIf.setStatus('mandatory')
mscFrNniDlciFecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciFecnFrmToIf.setStatus('mandatory')
mscFrNniDlciBecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciBecnFrmToIf.setStatus('mandatory')
mscFrNniDlciBciToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciBciToSubnet.setStatus('mandatory')
mscFrNniDlciDeFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDeFrmToIf.setStatus('mandatory')
mscFrNniDlciDiscCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscCongestedToIf.setStatus('mandatory')
mscFrNniDlciDiscDeCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscDeCongestedToIf.setStatus('mandatory')
mscFrNniDlciFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciFrmFromIf.setStatus('mandatory')
mscFrNniDlciFecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciFecnFrmFromIf.setStatus('mandatory')
mscFrNniDlciBecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciBecnFrmFromIf.setStatus('mandatory')
mscFrNniDlciFciFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciFciFromSubnet.setStatus('mandatory')
mscFrNniDlciBciFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciBciFromSubnet.setStatus('mandatory')
mscFrNniDlciDeFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDeFrmFromIf.setStatus('mandatory')
mscFrNniDlciExcessFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciExcessFrmFromIf.setStatus('mandatory')
mscFrNniDlciDiscExcessFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscExcessFromIf.setStatus('mandatory')
mscFrNniDlciDiscFrameAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscFrameAbit.setStatus('mandatory')
mscFrNniDlciDiscCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscCongestedFromIf.setStatus('mandatory')
mscFrNniDlciDiscDeCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscDeCongestedFromIf.setStatus('mandatory')
mscFrNniDlciErrorShortFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciErrorShortFrmFromIf.setStatus('mandatory')
mscFrNniDlciErrorLongFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciErrorLongFrmFromIf.setStatus('mandatory')
mscFrNniDlciBecnFrmSetByService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciBecnFrmSetByService.setStatus('mandatory')
mscFrNniDlciBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciBytesToIf.setStatus('mandatory')
mscFrNniDlciDeBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDeBytesToIf.setStatus('mandatory')
mscFrNniDlciDiscCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscCongestedToIfBytes.setStatus('mandatory')
mscFrNniDlciDiscDeCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscDeCongestedToIfBytes.setStatus('mandatory')
mscFrNniDlciBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciBytesFromIf.setStatus('mandatory')
mscFrNniDlciDeBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDeBytesFromIf.setStatus('mandatory')
mscFrNniDlciExcessBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciExcessBytesFromIf.setStatus('mandatory')
mscFrNniDlciDiscExcessFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscExcessFromIfBytes.setStatus('mandatory')
mscFrNniDlciDiscByteAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscByteAbit.setStatus('mandatory')
mscFrNniDlciDiscCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscCongestedFromIfBytes.setStatus('mandatory')
mscFrNniDlciDiscDeCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscDeCongestedFromIfBytes.setStatus('mandatory')
mscFrNniDlciErrorShortBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciErrorShortBytesFromIf.setStatus('mandatory')
mscFrNniDlciErrorLongBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciErrorLongBytesFromIf.setStatus('mandatory')
mscFrNniDlciRateAdaptReduct = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciRateAdaptReduct.setStatus('mandatory')
mscFrNniDlciRateAdaptReductPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciRateAdaptReductPeriod.setStatus('mandatory')
mscFrNniDlciTransferPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciTransferPriorityToNetwork.setStatus('obsolete')
mscFrNniDlciTransferPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciTransferPriorityFromNetwork.setStatus('obsolete')
mscFrNniDlciCirPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 39), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCirPresent.setStatus('mandatory')
mscFrNniDlciEirPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 14, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEirPresent.setStatus('mandatory')
mscFrNniDlciIntTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15), )
if mibBuilder.loadTexts: mscFrNniDlciIntTable.setStatus('mandatory')
mscFrNniDlciIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"))
if mibBuilder.loadTexts: mscFrNniDlciIntEntry.setStatus('mandatory')
mscFrNniDlciStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 1), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciStartTime.setStatus('mandatory')
mscFrNniDlciTotalIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 2), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciTotalIngressBytes.setStatus('mandatory')
mscFrNniDlciTotalEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 3), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciTotalEgressBytes.setStatus('mandatory')
mscFrNniDlciEirIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 4), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEirIngressBytes.setStatus('mandatory')
mscFrNniDlciEirEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 5), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEirEgressBytes.setStatus('mandatory')
mscFrNniDlciDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 6), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscardedBytes.setStatus('mandatory')
mscFrNniDlciTotalIngressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciTotalIngressSegFrm.setStatus('mandatory')
mscFrNniDlciTotalEgressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciTotalEgressSegFrm.setStatus('mandatory')
mscFrNniDlciEirIngressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEirIngressSegFrm.setStatus('mandatory')
mscFrNniDlciEirEgressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEirEgressSegFrm.setStatus('mandatory')
mscFrNniDlciDiscardedSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDiscardedSegFrm.setStatus('mandatory')
mscFrNniDlciCirPresentObs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCirPresentObs.setStatus('obsolete')
mscFrNniDlciEirPresentObs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEirPresentObs.setStatus('obsolete')
mscFrNniDlciRateEnforcementPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciRateEnforcementPresent.setStatus('obsolete')
mscFrNniDlciRateAdaptationPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciRateAdaptationPresent.setStatus('obsolete')
mscFrNniDlciLocalRateAdaptOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLocalRateAdaptOccurred.setStatus('mandatory')
mscFrNniDlciCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 17), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCallReferenceNumber.setStatus('obsolete')
mscFrNniDlciElapsedDifference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciElapsedDifference.setStatus('mandatory')
mscFrNniDlciCallRefNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 15, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCallRefNumber.setStatus('mandatory')
mscFrNniDlciCalldTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 16), )
if mibBuilder.loadTexts: mscFrNniDlciCalldTable.setStatus('mandatory')
mscFrNniDlciCalldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"))
if mibBuilder.loadTexts: mscFrNniDlciCalldEntry.setStatus('mandatory')
mscFrNniDlciCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("pvc", 0), ("svc", 1), ("spvc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCallType.setStatus('mandatory')
mscFrNniDlciCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 6, 9, 10, 11, 12, 20, 61, 62))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("callProceedingSent", 3), ("callPresent", 6), ("callProceedingReceived", 9), ("active", 10), ("releaseRequest", 11), ("releaseIndication", 12), ("notApplicable", 20), ("restartRequest", 61), ("restart", 62)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCallState.setStatus('mandatory')
mscFrNniDlciCallReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciCallReference.setStatus('mandatory')
mscFrNniDlciDc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2))
mscFrNniDlciDcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 1), )
if mibBuilder.loadTexts: mscFrNniDlciDcRowStatusTable.setStatus('mandatory')
mscFrNniDlciDcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciDcIndex"))
if mibBuilder.loadTexts: mscFrNniDlciDcRowStatusEntry.setStatus('mandatory')
mscFrNniDlciDcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDcRowStatus.setStatus('mandatory')
mscFrNniDlciDcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDcComponentName.setStatus('mandatory')
mscFrNniDlciDcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciDcStorageType.setStatus('mandatory')
mscFrNniDlciDcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniDlciDcIndex.setStatus('mandatory')
mscFrNniDlciDcOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10), )
if mibBuilder.loadTexts: mscFrNniDlciDcOptionsTable.setStatus('mandatory')
mscFrNniDlciDcOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciDcIndex"))
if mibBuilder.loadTexts: mscFrNniDlciDcOptionsEntry.setStatus('mandatory')
mscFrNniDlciDcRemoteNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcRemoteNpi.setStatus('mandatory')
mscFrNniDlciDcRemoteDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcRemoteDna.setStatus('mandatory')
mscFrNniDlciDcRemoteDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcRemoteDlci.setStatus('mandatory')
mscFrNniDlciDcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("permanentMaster", 1), ("permanentSlave", 2), ("permanentBackupSlave", 3), ("permanentSlaveWithBackup", 4), ("spvcMaster", 5), ("spvcSlave", 6), ("spvcBackupSlave", 7), ("spvcSlaveWithBackup", 8))).clone('permanentMaster')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcType.setStatus('mandatory')
mscFrNniDlciDcTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("useDnaDefTP", 255))).clone('useDnaDefTP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcTransferPriority.setStatus('mandatory')
mscFrNniDlciDcDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("useDnaDefPriority", 3))).clone('useDnaDefPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcDiscardPriority.setStatus('mandatory')
mscFrNniDlciDcDeDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lowest", 0), ("determinedByDiscardPriority", 1))).clone('determinedByDiscardPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcDeDiscardPriority.setStatus('mandatory')
mscFrNniDlciDcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dprsOnly", 0), ("dprsMcsOnly", 1), ("dprsMcsFirst", 2), ("useDnaValue", 3))).clone('useDnaValue')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcDataPath.setStatus('mandatory')
mscFrNniDlciDcCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcCugIndex.setStatus('mandatory')
mscFrNniDlciDcCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 9))).clone(namedValues=NamedValues(("doNotSignal", 0), ("cug", 3), ("cugOa", 9))).clone('doNotSignal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcCugType.setStatus('mandatory')
mscFrNniDlciDcMapIpCosToFrQos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcMapIpCosToFrQos.setStatus('mandatory')
mscFrNniDlciDcNfaTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 202), )
if mibBuilder.loadTexts: mscFrNniDlciDcNfaTable.setStatus('obsolete')
mscFrNniDlciDcNfaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 202, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciDcIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciDcNfaIndex"))
if mibBuilder.loadTexts: mscFrNniDlciDcNfaEntry.setStatus('obsolete')
mscFrNniDlciDcNfaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 202, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(48, 48), )))
if mibBuilder.loadTexts: mscFrNniDlciDcNfaIndex.setStatus('obsolete')
mscFrNniDlciDcNfaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 202, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciDcNfaValue.setStatus('obsolete')
mscFrNniDlciDcNfaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 2, 202, 1, 3), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscFrNniDlciDcNfaRowStatus.setStatus('obsolete')
mscFrNniDlciVc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3))
mscFrNniDlciVcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 1), )
if mibBuilder.loadTexts: mscFrNniDlciVcRowStatusTable.setStatus('mandatory')
mscFrNniDlciVcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciVcIndex"))
if mibBuilder.loadTexts: mscFrNniDlciVcRowStatusEntry.setStatus('mandatory')
mscFrNniDlciVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcRowStatus.setStatus('mandatory')
mscFrNniDlciVcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcComponentName.setStatus('mandatory')
mscFrNniDlciVcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcStorageType.setStatus('mandatory')
mscFrNniDlciVcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniDlciVcIndex.setStatus('mandatory')
mscFrNniDlciVcCadTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10), )
if mibBuilder.loadTexts: mscFrNniDlciVcCadTable.setStatus('mandatory')
mscFrNniDlciVcCadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciVcIndex"))
if mibBuilder.loadTexts: mscFrNniDlciVcCadEntry.setStatus('mandatory')
mscFrNniDlciVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("svc", 0), ("pvc", 1), ("spvc", 2), ("frf10spvc", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcType.setStatus('mandatory')
mscFrNniDlciVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcState.setStatus('mandatory')
mscFrNniDlciVcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPreviousState.setStatus('mandatory')
mscFrNniDlciVcDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcDiagnosticCode.setStatus('mandatory')
mscFrNniDlciVcPreviousDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPreviousDiagnosticCode.setStatus('mandatory')
mscFrNniDlciVcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCalledNpi.setStatus('mandatory')
mscFrNniDlciVcCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCalledDna.setStatus('mandatory')
mscFrNniDlciVcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCalledLcn.setStatus('mandatory')
mscFrNniDlciVcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCallingNpi.setStatus('mandatory')
mscFrNniDlciVcCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCallingDna.setStatus('mandatory')
mscFrNniDlciVcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCallingLcn.setStatus('mandatory')
mscFrNniDlciVcAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcAccountingEnabled.setStatus('mandatory')
mscFrNniDlciVcFastSelectCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcFastSelectCall.setStatus('mandatory')
mscFrNniDlciVcPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPathReliability.setStatus('mandatory')
mscFrNniDlciVcAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcAccountingEnd.setStatus('mandatory')
mscFrNniDlciVcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPriority.setStatus('mandatory')
mscFrNniDlciVcSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcSegmentSize.setStatus('mandatory')
mscFrNniDlciVcMaxSubnetPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcMaxSubnetPktSize.setStatus('mandatory')
mscFrNniDlciVcRcosToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcRcosToNetwork.setStatus('mandatory')
mscFrNniDlciVcRcosFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcRcosFromNetwork.setStatus('mandatory')
mscFrNniDlciVcEmissionPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcEmissionPriorityToNetwork.setStatus('mandatory')
mscFrNniDlciVcEmissionPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcEmissionPriorityFromNetwork.setStatus('mandatory')
mscFrNniDlciVcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 10, 1, 32), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcDataPath.setStatus('mandatory')
mscFrNniDlciVcIntdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 11), )
if mibBuilder.loadTexts: mscFrNniDlciVcIntdTable.setStatus('mandatory')
mscFrNniDlciVcIntdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciVcIndex"))
if mibBuilder.loadTexts: mscFrNniDlciVcIntdEntry.setStatus('mandatory')
mscFrNniDlciVcCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 11, 1, 1), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCallReferenceNumber.setStatus('obsolete')
mscFrNniDlciVcElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcElapsedTimeTillNow.setStatus('mandatory')
mscFrNniDlciVcSegmentsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcSegmentsRx.setStatus('mandatory')
mscFrNniDlciVcSegmentsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcSegmentsSent.setStatus('mandatory')
mscFrNniDlciVcStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcStartTime.setStatus('mandatory')
mscFrNniDlciVcCallReferenceNumberDecimal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCallReferenceNumberDecimal.setStatus('mandatory')
mscFrNniDlciVcFrdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12), )
if mibBuilder.loadTexts: mscFrNniDlciVcFrdTable.setStatus('mandatory')
mscFrNniDlciVcFrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciVcIndex"))
if mibBuilder.loadTexts: mscFrNniDlciVcFrdEntry.setStatus('mandatory')
mscFrNniDlciVcFrmCongestedToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcFrmCongestedToSubnet.setStatus('mandatory')
mscFrNniDlciVcCannotForwardToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCannotForwardToSubnet.setStatus('mandatory')
mscFrNniDlciVcNotDataXferToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcNotDataXferToSubnet.setStatus('mandatory')
mscFrNniDlciVcOutOfRangeFrmFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcOutOfRangeFrmFromSubnet.setStatus('mandatory')
mscFrNniDlciVcCombErrorsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcCombErrorsFromSubnet.setStatus('mandatory')
mscFrNniDlciVcDuplicatesFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcDuplicatesFromSubnet.setStatus('mandatory')
mscFrNniDlciVcNotDataXferFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcNotDataXferFromSubnet.setStatus('mandatory')
mscFrNniDlciVcFrmLossTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcFrmLossTimeouts.setStatus('mandatory')
mscFrNniDlciVcOoSeqByteCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcOoSeqByteCntExceeded.setStatus('mandatory')
mscFrNniDlciVcPeakOoSeqPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPeakOoSeqPktCount.setStatus('mandatory')
mscFrNniDlciVcPeakOoSeqFrmForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPeakOoSeqFrmForwarded.setStatus('mandatory')
mscFrNniDlciVcSendSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcSendSequenceNumber.setStatus('mandatory')
mscFrNniDlciVcPktRetryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPktRetryTimeouts.setStatus('mandatory')
mscFrNniDlciVcPeakRetryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPeakRetryQueueSize.setStatus('mandatory')
mscFrNniDlciVcSubnetRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcSubnetRecoveries.setStatus('mandatory')
mscFrNniDlciVcOoSeqPktCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcOoSeqPktCntExceeded.setStatus('mandatory')
mscFrNniDlciVcPeakOoSeqByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 12, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcPeakOoSeqByteCount.setStatus('mandatory')
mscFrNniDlciVcDmepTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 417), )
if mibBuilder.loadTexts: mscFrNniDlciVcDmepTable.setStatus('mandatory')
mscFrNniDlciVcDmepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 417, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciVcIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciVcDmepValue"))
if mibBuilder.loadTexts: mscFrNniDlciVcDmepEntry.setStatus('mandatory')
mscFrNniDlciVcDmepValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 3, 417, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciVcDmepValue.setStatus('mandatory')
mscFrNniDlciSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4))
mscFrNniDlciSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 1), )
if mibBuilder.loadTexts: mscFrNniDlciSpRowStatusTable.setStatus('mandatory')
mscFrNniDlciSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciSpIndex"))
if mibBuilder.loadTexts: mscFrNniDlciSpRowStatusEntry.setStatus('mandatory')
mscFrNniDlciSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciSpRowStatus.setStatus('mandatory')
mscFrNniDlciSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciSpComponentName.setStatus('mandatory')
mscFrNniDlciSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciSpStorageType.setStatus('mandatory')
mscFrNniDlciSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniDlciSpIndex.setStatus('mandatory')
mscFrNniDlciSpParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11), )
if mibBuilder.loadTexts: mscFrNniDlciSpParmsTable.setStatus('mandatory')
mscFrNniDlciSpParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciSpIndex"))
if mibBuilder.loadTexts: mscFrNniDlciSpParmsEntry.setStatus('mandatory')
mscFrNniDlciSpMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(2100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpMaximumFrameSize.setStatus('mandatory')
mscFrNniDlciSpRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpRateEnforcement.setStatus('mandatory')
mscFrNniDlciSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpCommittedInformationRate.setStatus('mandatory')
mscFrNniDlciSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpCommittedBurstSize.setStatus('mandatory')
mscFrNniDlciSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpExcessBurstSize.setStatus('mandatory')
mscFrNniDlciSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpMeasurementInterval.setStatus('mandatory')
mscFrNniDlciSpRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2), ("cirProportionate", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpRateAdaptation.setStatus('mandatory')
mscFrNniDlciSpAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpAccounting.setStatus('mandatory')
mscFrNniDlciSpRaSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpRaSensitivity.setStatus('mandatory')
mscFrNniDlciSpUpdateBCI = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 4, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciSpUpdateBCI.setStatus('mandatory')
mscFrNniDlciLb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5))
mscFrNniDlciLbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 1), )
if mibBuilder.loadTexts: mscFrNniDlciLbRowStatusTable.setStatus('mandatory')
mscFrNniDlciLbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciLbIndex"))
if mibBuilder.loadTexts: mscFrNniDlciLbRowStatusEntry.setStatus('mandatory')
mscFrNniDlciLbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbRowStatus.setStatus('mandatory')
mscFrNniDlciLbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbComponentName.setStatus('mandatory')
mscFrNniDlciLbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbStorageType.setStatus('mandatory')
mscFrNniDlciLbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniDlciLbIndex.setStatus('mandatory')
mscFrNniDlciLbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10), )
if mibBuilder.loadTexts: mscFrNniDlciLbStatsTable.setStatus('mandatory')
mscFrNniDlciLbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciLbIndex"))
if mibBuilder.loadTexts: mscFrNniDlciLbStatsEntry.setStatus('mandatory')
mscFrNniDlciLbLocalTotalFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbLocalTotalFrm.setStatus('mandatory')
mscFrNniDlciLbLocalTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbLocalTotalBytes.setStatus('mandatory')
mscFrNniDlciLbLocalFecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbLocalFecnFrm.setStatus('mandatory')
mscFrNniDlciLbLocalBecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbLocalBecnFrm.setStatus('mandatory')
mscFrNniDlciLbLocalDeFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbLocalDeFrm.setStatus('mandatory')
mscFrNniDlciLbLocalDeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbLocalDeBytes.setStatus('mandatory')
mscFrNniDlciLbRemoteTotalFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbRemoteTotalFrm.setStatus('mandatory')
mscFrNniDlciLbRemoteTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbRemoteTotalBytes.setStatus('mandatory')
mscFrNniDlciLbRemoteFecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbRemoteFecnFrm.setStatus('mandatory')
mscFrNniDlciLbRemoteBecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbRemoteBecnFrm.setStatus('mandatory')
mscFrNniDlciLbRemoteDeFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbRemoteDeFrm.setStatus('mandatory')
mscFrNniDlciLbRemoteDeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 5, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciLbRemoteDeBytes.setStatus('mandatory')
mscFrNniDlciEgressSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6))
mscFrNniDlciEgressSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 1), )
if mibBuilder.loadTexts: mscFrNniDlciEgressSpRowStatusTable.setStatus('mandatory')
mscFrNniDlciEgressSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciEgressSpIndex"))
if mibBuilder.loadTexts: mscFrNniDlciEgressSpRowStatusEntry.setStatus('mandatory')
mscFrNniDlciEgressSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEgressSpRowStatus.setStatus('mandatory')
mscFrNniDlciEgressSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEgressSpComponentName.setStatus('mandatory')
mscFrNniDlciEgressSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniDlciEgressSpStorageType.setStatus('mandatory')
mscFrNniDlciEgressSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniDlciEgressSpIndex.setStatus('mandatory')
mscFrNniDlciEgressSpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 10), )
if mibBuilder.loadTexts: mscFrNniDlciEgressSpProvTable.setStatus('mandatory')
mscFrNniDlciEgressSpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniDlciEgressSpIndex"))
if mibBuilder.loadTexts: mscFrNniDlciEgressSpProvEntry.setStatus('mandatory')
mscFrNniDlciEgressSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 50000000), ValueRangeConstraint(50000001, 50000001), )).clone(50000001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciEgressSpCommittedInformationRate.setStatus('mandatory')
mscFrNniDlciEgressSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 50000000), ValueRangeConstraint(50000001, 50000001), )).clone(50000001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciEgressSpCommittedBurstSize.setStatus('mandatory')
mscFrNniDlciEgressSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 50000000), ValueRangeConstraint(50000001, 50000001), )).clone(50000001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciEgressSpExcessBurstSize.setStatus('mandatory')
mscFrNniDlciEgressSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 5, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 25500), ValueRangeConstraint(25501, 25501), )).clone(25501)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniDlciEgressSpMeasurementInterval.setStatus('mandatory')
mscFrNniVFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6))
mscFrNniVFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 1), )
if mibBuilder.loadTexts: mscFrNniVFramerRowStatusTable.setStatus('mandatory')
mscFrNniVFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniVFramerIndex"))
if mibBuilder.loadTexts: mscFrNniVFramerRowStatusEntry.setStatus('mandatory')
mscFrNniVFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniVFramerRowStatus.setStatus('mandatory')
mscFrNniVFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniVFramerComponentName.setStatus('mandatory')
mscFrNniVFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniVFramerStorageType.setStatus('mandatory')
mscFrNniVFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniVFramerIndex.setStatus('mandatory')
mscFrNniVFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 10), )
if mibBuilder.loadTexts: mscFrNniVFramerProvTable.setStatus('mandatory')
mscFrNniVFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniVFramerIndex"))
if mibBuilder.loadTexts: mscFrNniVFramerProvEntry.setStatus('mandatory')
mscFrNniVFramerOtherVirtualFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniVFramerOtherVirtualFramer.setStatus('mandatory')
mscFrNniVFramerLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 10, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniVFramerLogicalProcessor.setStatus('mandatory')
mscFrNniVFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 11), )
if mibBuilder.loadTexts: mscFrNniVFramerStateTable.setStatus('mandatory')
mscFrNniVFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniVFramerIndex"))
if mibBuilder.loadTexts: mscFrNniVFramerStateEntry.setStatus('mandatory')
mscFrNniVFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniVFramerAdminState.setStatus('mandatory')
mscFrNniVFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniVFramerOperationalState.setStatus('mandatory')
mscFrNniVFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniVFramerUsageState.setStatus('mandatory')
mscFrNniVFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 12), )
if mibBuilder.loadTexts: mscFrNniVFramerStatsTable.setStatus('mandatory')
mscFrNniVFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniVFramerIndex"))
if mibBuilder.loadTexts: mscFrNniVFramerStatsEntry.setStatus('mandatory')
mscFrNniVFramerFrmToOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 12, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniVFramerFrmToOtherVFramer.setStatus('mandatory')
mscFrNniVFramerFrmFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 12, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniVFramerFrmFromOtherVFramer.setStatus('mandatory')
mscFrNniVFramerOctetFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 6, 12, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniVFramerOctetFromOtherVFramer.setStatus('mandatory')
mscFrNniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8))
mscFrNniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 1), )
if mibBuilder.loadTexts: mscFrNniSigRowStatusTable.setStatus('mandatory')
mscFrNniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigRowStatusEntry.setStatus('mandatory')
mscFrNniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigRowStatus.setStatus('mandatory')
mscFrNniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigComponentName.setStatus('mandatory')
mscFrNniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigStorageType.setStatus('mandatory')
mscFrNniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniSigIndex.setStatus('mandatory')
mscFrNniSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 11), )
if mibBuilder.loadTexts: mscFrNniSigProvTable.setStatus('mandatory')
mscFrNniSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigProvEntry.setStatus('mandatory')
mscFrNniSigDlciAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fromLowEnd", 0), ("fromHighEnd", 1))).clone('fromLowEnd')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigDlciAllocation.setStatus('mandatory')
mscFrNniSigHighestPermanentDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), )).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigHighestPermanentDlci.setStatus('obsolete')
mscFrNniSigHighestPvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), )).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigHighestPvcDlci.setStatus('mandatory')
mscFrNniSigServParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12), )
if mibBuilder.loadTexts: mscFrNniSigServParmsTable.setStatus('mandatory')
mscFrNniSigServParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigServParmsEntry.setStatus('mandatory')
mscFrNniSigMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigMaximumFrameSize.setStatus('mandatory')
mscFrNniSigDefaultMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(2100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigDefaultMaximumFrameSize.setStatus('mandatory')
mscFrNniSigDefaultCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigDefaultCommittedInformationRate.setStatus('mandatory')
mscFrNniSigDefaultCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigDefaultCommittedBurstSize.setStatus('mandatory')
mscFrNniSigDefaultExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigDefaultExcessBurstSize.setStatus('mandatory')
mscFrNniSigRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigRateEnforcement.setStatus('mandatory')
mscFrNniSigRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2), ("cirProportionate", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigRateAdaptation.setStatus('mandatory')
mscFrNniSigRaSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigRaSensitivity.setStatus('mandatory')
mscFrNniSigUpdateBCI = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigUpdateBCI.setStatus('mandatory')
mscFrNniSigSysParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13), )
if mibBuilder.loadTexts: mscFrNniSigSysParmsTable.setStatus('mandatory')
mscFrNniSigSysParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigSysParmsEntry.setStatus('mandatory')
mscFrNniSigCallSetupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigCallSetupTimer.setStatus('mandatory')
mscFrNniSigReleaseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigReleaseTimer.setStatus('mandatory')
mscFrNniSigCallProceedingTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigCallProceedingTimer.setStatus('mandatory')
mscFrNniSigRestartReqTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigRestartReqTimer.setStatus('mandatory')
mscFrNniSigRestartRcvTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(110)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigRestartRcvTimer.setStatus('mandatory')
mscFrNniSigStatusEnqTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigStatusEnqTimer.setStatus('mandatory')
mscFrNniSigNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("private", 1), ("public", 2))).clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigNetworkType.setStatus('mandatory')
mscFrNniSigLapfSysTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 14), )
if mibBuilder.loadTexts: mscFrNniSigLapfSysTable.setStatus('mandatory')
mscFrNniSigLapfSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigLapfSysEntry.setStatus('mandatory')
mscFrNniSigWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigWindowSize.setStatus('mandatory')
mscFrNniSigRetransmitLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigRetransmitLimit.setStatus('mandatory')
mscFrNniSigAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigAckTimer.setStatus('mandatory')
mscFrNniSigAckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigAckDelayTimer.setStatus('mandatory')
mscFrNniSigIdleProbeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigIdleProbeTimer.setStatus('mandatory')
mscFrNniSigCodesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 15), )
if mibBuilder.loadTexts: mscFrNniSigCodesTable.setStatus('mandatory')
mscFrNniSigCodesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigCodesEntry.setStatus('mandatory')
mscFrNniSigLastClearRemoteDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 15, 1, 1), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigLastClearRemoteDataNetworkAddress.setStatus('mandatory')
mscFrNniSigLastClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigLastClearCause.setStatus('mandatory')
mscFrNniSigLastDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigLastDiagnosticCode.setStatus('mandatory')
mscFrNniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 16), )
if mibBuilder.loadTexts: mscFrNniSigStateTable.setStatus('mandatory')
mscFrNniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigStateEntry.setStatus('mandatory')
mscFrNniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigAdminState.setStatus('mandatory')
mscFrNniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigOperationalState.setStatus('mandatory')
mscFrNniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigUsageState.setStatus('mandatory')
mscFrNniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17), )
if mibBuilder.loadTexts: mscFrNniSigStatsTable.setStatus('mandatory')
mscFrNniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigStatsEntry.setStatus('mandatory')
mscFrNniSigCurrentNumberOfSvcCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigCurrentNumberOfSvcCalls.setStatus('mandatory')
mscFrNniSigInCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigInCalls.setStatus('mandatory')
mscFrNniSigInCallsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigInCallsRefused.setStatus('mandatory')
mscFrNniSigOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigOutCalls.setStatus('mandatory')
mscFrNniSigOutCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigOutCallsFailed.setStatus('mandatory')
mscFrNniSigProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigProtocolErrors.setStatus('mandatory')
mscFrNniSigQualityOfServiceNotAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigQualityOfServiceNotAvailable.setStatus('mandatory')
mscFrNniSigSetupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigSetupTimeout.setStatus('mandatory')
mscFrNniSigLastCauseInStatusMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigLastCauseInStatusMsgReceived.setStatus('mandatory')
mscFrNniSigLastStateInStatusMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("n2", 2), ("outgoingCallProceeding", 3), ("n4", 4), ("n5", 5), ("callPresent", 6), ("n7", 7), ("n8", 8), ("incomingCallProceeding", 9), ("active", 10), ("releaseRequest", 11), ("releaseIndication", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("n18", 18), ("n19", 19), ("notApplicable", 20), ("n21", 21), ("n22", 22), ("n23", 23), ("n24", 24), ("n25", 25), ("n26", 26), ("n27", 27), ("n28", 28), ("n29", 29), ("n30", 30), ("n31", 31), ("n32", 32), ("n33", 33), ("n34", 34), ("n35", 35), ("n36", 36), ("n37", 37), ("n38", 38), ("n39", 39), ("n40", 40), ("n41", 41), ("n42", 42), ("n43", 43), ("n44", 44), ("n45", 45), ("n46", 46), ("n47", 47), ("n48", 48), ("n49", 49), ("n50", 50), ("n51", 51), ("n52", 52), ("n53", 53), ("n54", 54), ("n55", 55), ("n56", 56), ("n57", 57), ("n58", 58), ("n59", 59), ("n60", 60), ("restartRequest", 61), ("restart", 62), ("n63", 63))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigLastStateInStatusMsgReceived.setStatus('mandatory')
mscFrNniSigLastDlciReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigLastDlciReceivedStatus.setStatus('mandatory')
mscFrNniSigLastStateReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 6, 9, 10, 11, 12, 20, 61, 62))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("outgoingCallProceeding", 3), ("callPresent", 6), ("incomingCallProceeding", 9), ("active", 10), ("releaseRequest", 11), ("releaseIndication", 12), ("notApplicable", 20), ("restartRequest", 61), ("restart", 62))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigLastStateReceivedStatus.setStatus('mandatory')
mscFrNniSigDlciCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 17, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigDlciCollisions.setStatus('mandatory')
mscFrNniSigLapfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 18), )
if mibBuilder.loadTexts: mscFrNniSigLapfStatusTable.setStatus('mandatory')
mscFrNniSigLapfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigLapfStatusEntry.setStatus('mandatory')
mscFrNniSigCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 7))).clone(namedValues=NamedValues(("disconnected", 1), ("linkSetup", 2), ("disconnectRequest", 4), ("informationTransfer", 5), ("waitingAck", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigCurrentState.setStatus('mandatory')
mscFrNniSigLastStateChangeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 6, 7, 8, 9, 10, 12, 13))).clone(namedValues=NamedValues(("notStarted", 1), ("abmeEntered", 3), ("abmeReset", 5), ("dmReceived", 6), ("dmSent", 7), ("discReceived", 8), ("discSent", 9), ("frmrReceived", 10), ("n200RetranTimeOut", 12), ("other", 13))).clone('notStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigLastStateChangeReason.setStatus('mandatory')
mscFrNniSigFrmrReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 18, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigFrmrReceive.setStatus('mandatory')
mscFrNniSigCurrentQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigCurrentQueueSize.setStatus('mandatory')
mscFrNniSigLapfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19), )
if mibBuilder.loadTexts: mscFrNniSigLapfStatsTable.setStatus('mandatory')
mscFrNniSigLapfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigLapfStatsEntry.setStatus('mandatory')
mscFrNniSigRemoteBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigRemoteBusy.setStatus('mandatory')
mscFrNniSigReceiveRejectFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigReceiveRejectFrame.setStatus('mandatory')
mscFrNniSigAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigAckTimeout.setStatus('mandatory')
mscFrNniSigIFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigIFramesTransmitted.setStatus('mandatory')
mscFrNniSigIFramesTxDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigIFramesTxDiscarded.setStatus('mandatory')
mscFrNniSigIFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigIFramesReceived.setStatus('mandatory')
mscFrNniSigIFramesRcvdDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigIFramesRcvdDiscarded.setStatus('mandatory')
mscFrNniSigStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 19, 1, 8650), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigStateChange.setStatus('mandatory')
mscFrNniSigSvcaccTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 20), )
if mibBuilder.loadTexts: mscFrNniSigSvcaccTable.setStatus('mandatory')
mscFrNniSigSvcaccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"))
if mibBuilder.loadTexts: mscFrNniSigSvcaccEntry.setStatus('mandatory')
mscFrNniSigDefaultAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniSigDefaultAccounting.setStatus('mandatory')
mscFrNniSigBandwidthNotAvailableTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 672), )
if mibBuilder.loadTexts: mscFrNniSigBandwidthNotAvailableTable.setStatus('mandatory')
mscFrNniSigBandwidthNotAvailableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 672, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniSigBandwidthNotAvailableIndex"))
if mibBuilder.loadTexts: mscFrNniSigBandwidthNotAvailableEntry.setStatus('mandatory')
mscFrNniSigBandwidthNotAvailableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 672, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniSigBandwidthNotAvailableIndex.setStatus('mandatory')
mscFrNniSigBandwidthNotAvailableValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 8, 672, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniSigBandwidthNotAvailableValue.setStatus('mandatory')
mscFrNniLts = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9))
mscFrNniLtsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 1), )
if mibBuilder.loadTexts: mscFrNniLtsRowStatusTable.setStatus('mandatory')
mscFrNniLtsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"))
if mibBuilder.loadTexts: mscFrNniLtsRowStatusEntry.setStatus('mandatory')
mscFrNniLtsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsRowStatus.setStatus('mandatory')
mscFrNniLtsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsComponentName.setStatus('mandatory')
mscFrNniLtsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsStorageType.setStatus('mandatory')
mscFrNniLtsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniLtsIndex.setStatus('mandatory')
mscFrNniLtsSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 10), )
if mibBuilder.loadTexts: mscFrNniLtsSetupTable.setStatus('mandatory')
mscFrNniLtsSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"))
if mibBuilder.loadTexts: mscFrNniLtsSetupEntry.setStatus('mandatory')
mscFrNniLtsDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 10, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsDuration.setStatus('mandatory')
mscFrNniLtsAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 10, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("continousBurst", 0), ("intervalBurst", 1), ("delayBurst", 2), ("fixedBurst", 3))).clone('continousBurst')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsAlgorithm.setStatus('mandatory')
mscFrNniLtsBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 10, 1, 204), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsBurstSize.setStatus('mandatory')
mscFrNniLtsTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 10, 1, 205), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsTimeInterval.setStatus('mandatory')
mscFrNniLtsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 11), )
if mibBuilder.loadTexts: mscFrNniLtsStateTable.setStatus('mandatory')
mscFrNniLtsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"))
if mibBuilder.loadTexts: mscFrNniLtsStateEntry.setStatus('mandatory')
mscFrNniLtsGeneratorState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 11, 1, 200), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stopped", 0), ("running", 1))).clone('stopped')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsGeneratorState.setStatus('mandatory')
mscFrNniLtsCycleIncomplete = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 11, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsCycleIncomplete.setStatus('mandatory')
mscFrNniLtsLastActiveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 11, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsLastActiveInterval.setStatus('mandatory')
mscFrNniLtsLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 11, 1, 204), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsLoad.setStatus('mandatory')
mscFrNniLtsElapsedGenerationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 11, 1, 205), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsElapsedGenerationTime.setStatus('mandatory')
mscFrNniLtsResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 12), )
if mibBuilder.loadTexts: mscFrNniLtsResultsTable.setStatus('mandatory')
mscFrNniLtsResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"))
if mibBuilder.loadTexts: mscFrNniLtsResultsEntry.setStatus('mandatory')
mscFrNniLtsFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 12, 1, 200), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsFramesTx.setStatus('mandatory')
mscFrNniLtsBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 12, 1, 204), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsBytesTx.setStatus('mandatory')
mscFrNniLtsBitRateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 12, 1, 208), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsBitRateTx.setStatus('mandatory')
mscFrNniLtsFrameRateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 12, 1, 209), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsFrameRateTx.setStatus('mandatory')
mscFrNniLtsPat = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2))
mscFrNniLtsPatRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 1), )
if mibBuilder.loadTexts: mscFrNniLtsPatRowStatusTable.setStatus('mandatory')
mscFrNniLtsPatRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrNniLtsPatRowStatusEntry.setStatus('mandatory')
mscFrNniLtsPatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatRowStatus.setStatus('mandatory')
mscFrNniLtsPatComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsPatComponentName.setStatus('mandatory')
mscFrNniLtsPatStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsPatStorageType.setStatus('mandatory')
mscFrNniLtsPatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 29)))
if mibBuilder.loadTexts: mscFrNniLtsPatIndex.setStatus('mandatory')
mscFrNniLtsPatDefaultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10), )
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultsTable.setStatus('mandatory')
mscFrNniLtsPatDefaultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultsEntry.setStatus('mandatory')
mscFrNniLtsPatDefaultDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultDlci.setStatus('mandatory')
mscFrNniLtsPatDefaultNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultNumFrames.setStatus('mandatory')
mscFrNniLtsPatDefaultDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8200)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultDataSize.setStatus('mandatory')
mscFrNniLtsPatDefaultHeaderBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 203), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultHeaderBits.setStatus('mandatory')
mscFrNniLtsPatDefaultHeaderLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 204), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultHeaderLength.setStatus('mandatory')
mscFrNniLtsPatDefaultEABits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 205), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultEABits.setStatus('mandatory')
mscFrNniLtsPatDefaultPayloadPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 206), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 12)).clone(hexValue="55")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultPayloadPattern.setStatus('mandatory')
mscFrNniLtsPatDefaultRfc1490Header = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 207), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("none", 18))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultRfc1490Header.setStatus('mandatory')
mscFrNniLtsPatDefaultUseBadLrc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 10, 1, 208), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDefaultUseBadLrc.setStatus('mandatory')
mscFrNniLtsPatSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11), )
if mibBuilder.loadTexts: mscFrNniLtsPatSetupTable.setStatus('mandatory')
mscFrNniLtsPatSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrNniLtsPatSetupEntry.setStatus('mandatory')
mscFrNniLtsPatDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDlci.setStatus('mandatory')
mscFrNniLtsPatNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatNumFrames.setStatus('mandatory')
mscFrNniLtsPatDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8200)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatDataSize.setStatus('mandatory')
mscFrNniLtsPatHeaderBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 203), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatHeaderBits.setStatus('mandatory')
mscFrNniLtsPatHeaderLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 204), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatHeaderLength.setStatus('mandatory')
mscFrNniLtsPatEaBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 205), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatEaBits.setStatus('mandatory')
mscFrNniLtsPatPayloadPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 206), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 12)).clone(hexValue="55")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatPayloadPattern.setStatus('mandatory')
mscFrNniLtsPatRfc1490Header = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 207), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("none", 18))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatRfc1490Header.setStatus('mandatory')
mscFrNniLtsPatUseBadLrc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 11, 1, 208), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatUseBadLrc.setStatus('mandatory')
mscFrNniLtsPatOpDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 12), )
if mibBuilder.loadTexts: mscFrNniLtsPatOpDataTable.setStatus('mandatory')
mscFrNniLtsPatOpDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrNniLtsPatOpDataEntry.setStatus('mandatory')
mscFrNniLtsPatFramePattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 12, 1, 200), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsPatFramePattern.setStatus('mandatory')
mscFrNniLtsPatHdlcBitsInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 12, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsPatHdlcBitsInserted.setStatus('mandatory')
mscFrNniLtsPatOpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 13), )
if mibBuilder.loadTexts: mscFrNniLtsPatOpStateTable.setStatus('mandatory')
mscFrNniLtsPatOpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrNniLtsPatOpStateEntry.setStatus('mandatory')
mscFrNniLtsPatLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 13, 1, 200), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniLtsPatLoad.setStatus('mandatory')
mscFrNniLtsPatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 9, 2, 13, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniLtsPatStatus.setStatus('mandatory')
mscFrNniCa = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101))
mscFrNniCaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 1), )
if mibBuilder.loadTexts: mscFrNniCaRowStatusTable.setStatus('mandatory')
mscFrNniCaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"))
if mibBuilder.loadTexts: mscFrNniCaRowStatusEntry.setStatus('mandatory')
mscFrNniCaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaRowStatus.setStatus('mandatory')
mscFrNniCaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaComponentName.setStatus('mandatory')
mscFrNniCaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaStorageType.setStatus('mandatory')
mscFrNniCaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrNniCaIndex.setStatus('mandatory')
mscFrNniCaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 10), )
if mibBuilder.loadTexts: mscFrNniCaProvTable.setStatus('mandatory')
mscFrNniCaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"))
if mibBuilder.loadTexts: mscFrNniCaProvEntry.setStatus('mandatory')
mscFrNniCaOverrideLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 429496729))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaOverrideLinkRate.setStatus('mandatory')
mscFrNniCaMaximumBandwidthPerCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000)).clone(520000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaMaximumBandwidthPerCall.setStatus('mandatory')
mscFrNniCaIngressCacTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 11), )
if mibBuilder.loadTexts: mscFrNniCaIngressCacTable.setStatus('mandatory')
mscFrNniCaIngressCacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"))
if mibBuilder.loadTexts: mscFrNniCaIngressCacEntry.setStatus('mandatory')
mscFrNniCaIngressApplyToCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("cirOnly", 1), ("cirAndEir", 2))).clone('cirOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaIngressApplyToCos.setStatus('mandatory')
mscFrNniCaIngressMaximumEirOnlyCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 992)).clone(992)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaIngressMaximumEirOnlyCalls.setStatus('mandatory')
mscFrNniCaEgressCacTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 12), )
if mibBuilder.loadTexts: mscFrNniCaEgressCacTable.setStatus('mandatory')
mscFrNniCaEgressCacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"))
if mibBuilder.loadTexts: mscFrNniCaEgressCacEntry.setStatus('mandatory')
mscFrNniCaEgressApplyToCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("cirOnly", 1), ("cirAndEir", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaEgressApplyToCos.setStatus('mandatory')
mscFrNniCaEgressMaximumEirOnlyCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 992)).clone(992)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaEgressMaximumEirOnlyCalls.setStatus('mandatory')
mscFrNniCaOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 13), )
if mibBuilder.loadTexts: mscFrNniCaOpTable.setStatus('mandatory')
mscFrNniCaOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"))
if mibBuilder.loadTexts: mscFrNniCaOpEntry.setStatus('mandatory')
mscFrNniCaLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaLinkRate.setStatus('mandatory')
mscFrNniCaNumberRejectedEgressCirPermConn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 13, 1, 681), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaNumberRejectedEgressCirPermConn.setStatus('mandatory')
mscFrNniCaNumberRejectedEgressEirPermConn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 13, 1, 682), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaNumberRejectedEgressEirPermConn.setStatus('mandatory')
mscFrNniCaIngCirBPTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 666), )
if mibBuilder.loadTexts: mscFrNniCaIngCirBPTable.setStatus('mandatory')
mscFrNniCaIngCirBPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 666, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIngCirBPIndex"))
if mibBuilder.loadTexts: mscFrNniCaIngCirBPEntry.setStatus('mandatory')
mscFrNniCaIngCirBPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 666, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaIngCirBPIndex.setStatus('mandatory')
mscFrNniCaIngCirBPValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 666, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaIngCirBPValue.setStatus('mandatory')
mscFrNniCaEgCirBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 667), )
if mibBuilder.loadTexts: mscFrNniCaEgCirBpTable.setStatus('mandatory')
mscFrNniCaEgCirBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 667, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaEgCirBpIndex"))
if mibBuilder.loadTexts: mscFrNniCaEgCirBpEntry.setStatus('mandatory')
mscFrNniCaEgCirBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 667, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaEgCirBpIndex.setStatus('mandatory')
mscFrNniCaEgCirBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 667, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaEgCirBpValue.setStatus('mandatory')
mscFrNniCaIngCirPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 668), )
if mibBuilder.loadTexts: mscFrNniCaIngCirPoolAdmitBwTable.setStatus('mandatory')
mscFrNniCaIngCirPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 668, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIngCirPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrNniCaIngCirPoolAdmitBwEntry.setStatus('mandatory')
mscFrNniCaIngCirPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 668, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaIngCirPoolAdmitBwIndex.setStatus('mandatory')
mscFrNniCaIngCirPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 668, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaIngCirPoolAdmitBwValue.setStatus('mandatory')
mscFrNniCaIngCirPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 669), )
if mibBuilder.loadTexts: mscFrNniCaIngCirPoolAvailBwTable.setStatus('mandatory')
mscFrNniCaIngCirPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 669, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIngCirPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrNniCaIngCirPoolAvailBwEntry.setStatus('mandatory')
mscFrNniCaIngCirPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 669, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaIngCirPoolAvailBwIndex.setStatus('mandatory')
mscFrNniCaIngCirPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 669, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaIngCirPoolAvailBwValue.setStatus('mandatory')
mscFrNniCaEgCirPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 670), )
if mibBuilder.loadTexts: mscFrNniCaEgCirPoolAdmitBwTable.setStatus('mandatory')
mscFrNniCaEgCirPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 670, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaEgCirPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrNniCaEgCirPoolAdmitBwEntry.setStatus('mandatory')
mscFrNniCaEgCirPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 670, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaEgCirPoolAdmitBwIndex.setStatus('mandatory')
mscFrNniCaEgCirPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 670, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaEgCirPoolAdmitBwValue.setStatus('mandatory')
mscFrNniCaEgCirPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 671), )
if mibBuilder.loadTexts: mscFrNniCaEgCirPoolAvailBwTable.setStatus('mandatory')
mscFrNniCaEgCirPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 671, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaEgCirPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrNniCaEgCirPoolAvailBwEntry.setStatus('mandatory')
mscFrNniCaEgCirPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 671, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaEgCirPoolAvailBwIndex.setStatus('mandatory')
mscFrNniCaEgCirPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 671, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaEgCirPoolAvailBwValue.setStatus('mandatory')
mscFrNniCaIngEirBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 673), )
if mibBuilder.loadTexts: mscFrNniCaIngEirBpTable.setStatus('mandatory')
mscFrNniCaIngEirBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 673, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIngEirBpIndex"))
if mibBuilder.loadTexts: mscFrNniCaIngEirBpEntry.setStatus('mandatory')
mscFrNniCaIngEirBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 673, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaIngEirBpIndex.setStatus('mandatory')
mscFrNniCaIngEirBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 673, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaIngEirBpValue.setStatus('mandatory')
mscFrNniCaEgEirBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 674), )
if mibBuilder.loadTexts: mscFrNniCaEgEirBpTable.setStatus('mandatory')
mscFrNniCaEgEirBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 674, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaEgEirBpIndex"))
if mibBuilder.loadTexts: mscFrNniCaEgEirBpEntry.setStatus('mandatory')
mscFrNniCaEgEirBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 674, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaEgEirBpIndex.setStatus('mandatory')
mscFrNniCaEgEirBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 674, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaEgEirBpValue.setStatus('mandatory')
mscFrNniCaIngEirPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 675), )
if mibBuilder.loadTexts: mscFrNniCaIngEirPoolAdmitBwTable.setStatus('mandatory')
mscFrNniCaIngEirPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 675, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIngEirPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrNniCaIngEirPoolAdmitBwEntry.setStatus('mandatory')
mscFrNniCaIngEirPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 675, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaIngEirPoolAdmitBwIndex.setStatus('mandatory')
mscFrNniCaIngEirPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 675, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaIngEirPoolAdmitBwValue.setStatus('mandatory')
mscFrNniCaIngEirPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 676), )
if mibBuilder.loadTexts: mscFrNniCaIngEirPoolAvailBwTable.setStatus('mandatory')
mscFrNniCaIngEirPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 676, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIngEirPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrNniCaIngEirPoolAvailBwEntry.setStatus('mandatory')
mscFrNniCaIngEirPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 676, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaIngEirPoolAvailBwIndex.setStatus('mandatory')
mscFrNniCaIngEirPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 676, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaIngEirPoolAvailBwValue.setStatus('mandatory')
mscFrNniCaEgEirPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 677), )
if mibBuilder.loadTexts: mscFrNniCaEgEirPoolAdmitBwTable.setStatus('mandatory')
mscFrNniCaEgEirPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 677, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaEgEirPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrNniCaEgEirPoolAdmitBwEntry.setStatus('mandatory')
mscFrNniCaEgEirPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 677, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaEgEirPoolAdmitBwIndex.setStatus('mandatory')
mscFrNniCaEgEirPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 677, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaEgEirPoolAdmitBwValue.setStatus('mandatory')
mscFrNniCaEgEirPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 678), )
if mibBuilder.loadTexts: mscFrNniCaEgEirPoolAvailBwTable.setStatus('mandatory')
mscFrNniCaEgEirPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 678, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaEgEirPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrNniCaEgEirPoolAvailBwEntry.setStatus('mandatory')
mscFrNniCaEgEirPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 678, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaEgEirPoolAvailBwIndex.setStatus('mandatory')
mscFrNniCaEgEirPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 678, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaEgEirPoolAvailBwValue.setStatus('mandatory')
mscFrNniCaTpm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2))
mscFrNniCaTpmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 1), )
if mibBuilder.loadTexts: mscFrNniCaTpmRowStatusTable.setStatus('mandatory')
mscFrNniCaTpmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaTpmIndex"))
if mibBuilder.loadTexts: mscFrNniCaTpmRowStatusEntry.setStatus('mandatory')
mscFrNniCaTpmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaTpmRowStatus.setStatus('mandatory')
mscFrNniCaTpmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaTpmComponentName.setStatus('mandatory')
mscFrNniCaTpmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrNniCaTpmStorageType.setStatus('mandatory')
mscFrNniCaTpmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrNniCaTpmIndex.setStatus('mandatory')
mscFrNniCaTpmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 10), )
if mibBuilder.loadTexts: mscFrNniCaTpmProvTable.setStatus('mandatory')
mscFrNniCaTpmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", "mscFrNniCaTpmIndex"))
if mibBuilder.loadTexts: mscFrNniCaTpmProvEntry.setStatus('mandatory')
mscFrNniCaTpmAssignedIngressBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(16, 16), )).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaTpmAssignedIngressBandwidthPool.setStatus('mandatory')
mscFrNniCaTpmAssignedEgressBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 70, 101, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(16, 16), )).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrNniCaTpmAssignedEgressBandwidthPool.setStatus('mandatory')
frameRelayNniGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23, 1))
frameRelayNniGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23, 1, 1))
frameRelayNniGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23, 1, 1, 3))
frameRelayNniGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23, 1, 1, 3, 2))
frameRelayNniCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23, 3))
frameRelayNniCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23, 3, 1))
frameRelayNniCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23, 3, 1, 3))
frameRelayNniCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 23, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", mscFrNniDlciLbStatsTable=mscFrNniDlciLbStatsTable, mscFrNniDlciFciFromSubnet=mscFrNniDlciFciFromSubnet, mscFrNniDlciDcOptionsEntry=mscFrNniDlciDcOptionsEntry, mscFrNniSigRateAdaptation=mscFrNniSigRateAdaptation, mscFrNniDnaOutDefaultPathSensitivity=mscFrNniDnaOutDefaultPathSensitivity, mscFrNniDlciVcRcosToNetwork=mscFrNniDlciVcRcosToNetwork, mscFrNniSigRateEnforcement=mscFrNniSigRateEnforcement, mscFrNniLtsRowStatusEntry=mscFrNniLtsRowStatusEntry, mscFrNniDlciVcFrdEntry=mscFrNniDlciVcFrdEntry, mscFrNniCaStorageType=mscFrNniCaStorageType, mscFrNniDlciEirPresent=mscFrNniDlciEirPresent, mscFrNniLtsPatSetupEntry=mscFrNniLtsPatSetupEntry, mscFrNniDlciCalldEntry=mscFrNniDlciCalldEntry, mscFrNniComponentName=mscFrNniComponentName, mscFrNniFramerStatsEntry=mscFrNniFramerStatsEntry, mscFrNniDlciVc=mscFrNniDlciVc, mscFrNniLtsPatIndex=mscFrNniLtsPatIndex, mscFrNniFramerLrcErrors=mscFrNniFramerLrcErrors, mscFrNniCaTpmRowStatusTable=mscFrNniCaTpmRowStatusTable, mscFrNniLmiAdminState=mscFrNniLmiAdminState, mscFrNniDlciDcType=mscFrNniDlciDcType, mscFrNniDlciLbStatsEntry=mscFrNniDlciLbStatsEntry, mscFrNniSigLastClearCause=mscFrNniSigLastClearCause, mscFrNniDlciSpRowStatusTable=mscFrNniDlciSpRowStatusTable, mscFrNniCaIngEirBpValue=mscFrNniCaIngEirBpValue, mscFrNniSigLapfSysTable=mscFrNniSigLapfSysTable, mscFrNniDlciLbComponentName=mscFrNniDlciLbComponentName, mscFrNniCaIngCirPoolAdmitBwIndex=mscFrNniCaIngCirPoolAdmitBwIndex, mscFrNniDlciVcRowStatus=mscFrNniDlciVcRowStatus, mscFrNniDlciCallReference=mscFrNniDlciCallReference, mscFrNniStateEntry=mscFrNniStateEntry, mscFrNniDlciAlarmStatus=mscFrNniDlciAlarmStatus, mscFrNniCaIngCirPoolAdmitBwEntry=mscFrNniCaIngCirPoolAdmitBwEntry, mscFrNniVFramerFrmToOtherVFramer=mscFrNniVFramerFrmToOtherVFramer, mscFrNniLtsBytesTx=mscFrNniLtsBytesTx, mscFrNniFramerOctetFromIf64=mscFrNniFramerOctetFromIf64, mscFrNniDlciDcNfaValue=mscFrNniDlciDcNfaValue, mscFrNniLmiOpProcedures=mscFrNniLmiOpProcedures, mscFrNniDlciVcPreviousDiagnosticCode=mscFrNniDlciVcPreviousDiagnosticCode, mscFrNniDlciVcRcosFromNetwork=mscFrNniDlciVcRcosFromNetwork, mscFrNniIfEntryTable=mscFrNniIfEntryTable, mscFrNniLtsPatDataSize=mscFrNniLtsPatDataSize, mscFrNniDnaTransferPriorityOverRide=mscFrNniDnaTransferPriorityOverRide, mscFrNniLmiRowStatusEntry=mscFrNniLmiRowStatusEntry, mscFrNniDlciDcNfaRowStatus=mscFrNniDlciDcNfaRowStatus, mscFrNniDlciSpParmsTable=mscFrNniDlciSpParmsTable, mscFrNniDnaCug=mscFrNniDnaCug, mscFrNniSigAckTimeout=mscFrNniSigAckTimeout, mscFrNniDlciDcRemoteDna=mscFrNniDlciDcRemoteDna, mscFrNniRowStatusTable=mscFrNniRowStatusTable, mscFrNniFramerLinkEntry=mscFrNniFramerLinkEntry, mscFrNniLtsPatDefaultHeaderBits=mscFrNniLtsPatDefaultHeaderBits, mscFrNniDlciVcDiagnosticCode=mscFrNniDlciVcDiagnosticCode, mscFrNniFramerInterfaceName=mscFrNniFramerInterfaceName, mscFrNniDlciVcEmissionPriorityFromNetwork=mscFrNniDlciVcEmissionPriorityFromNetwork, mscFrNniDlciABitReasonFromIf=mscFrNniDlciABitReasonFromIf, mscFrNniSigUpdateBCI=mscFrNniSigUpdateBCI, mscFrNniFramerComponentName=mscFrNniFramerComponentName, mscFrNniCaIngCirPoolAvailBwTable=mscFrNniCaIngCirPoolAvailBwTable, mscFrNniDlciVcState=mscFrNniDlciVcState, mscFrNniDlciSp=mscFrNniDlciSp, mscFrNniSigLapfStatusTable=mscFrNniSigLapfStatusTable, mscFrNniCaTpmAssignedIngressBandwidthPool=mscFrNniCaTpmAssignedIngressBandwidthPool, mscFrNniOperationalState=mscFrNniOperationalState, mscFrNniDlciLbLocalTotalBytes=mscFrNniDlciLbLocalTotalBytes, mscFrNniSigBandwidthNotAvailableIndex=mscFrNniSigBandwidthNotAvailableIndex, mscFrNniDlciSpMaximumFrameSize=mscFrNniDlciSpMaximumFrameSize, mscFrNniDlciDcDeDiscardPriority=mscFrNniDlciDcDeDiscardPriority, mscFrNniLmiProcedures=mscFrNniLmiProcedures, mscFrNniDnaIncomingOptionsEntry=mscFrNniDnaIncomingOptionsEntry, mscFrNniSigStorageType=mscFrNniSigStorageType, mscFrNniDlciVcPktRetryTimeouts=mscFrNniDlciVcPktRetryTimeouts, mscFrNniDnaHgMHgAddrComponentName=mscFrNniDnaHgMHgAddrComponentName, mscFrNniSigDlciAllocation=mscFrNniSigDlciAllocation, mscFrNniDnaCugRowStatus=mscFrNniDnaCugRowStatus, mscFrNniLmiStatsTable=mscFrNniLmiStatsTable, mscFrNniLtsRowStatus=mscFrNniLtsRowStatus, mscFrNniDnaServiceExchange=mscFrNniDnaServiceExchange, mscFrNniLtsStateEntry=mscFrNniLtsStateEntry, mscFrNniSigSetupTimeout=mscFrNniSigSetupTimeout, mscFrNniDnaHgMHgAddrDataNetworkAddress=mscFrNniDnaHgMHgAddrDataNetworkAddress, mscFrNniDnaHgMIndex=mscFrNniDnaHgMIndex, mscFrNniCaEgEirBpTable=mscFrNniCaEgEirBpTable, mscFrNniDlciVcRowStatusEntry=mscFrNniDlciVcRowStatusEntry, mscFrNniDnaHgMAvailabilityUpdateThreshold=mscFrNniDnaHgMAvailabilityUpdateThreshold, mscFrNniDlciErrorLongFrmFromIf=mscFrNniDlciErrorLongFrmFromIf, mscFrNniSigRaSensitivity=mscFrNniSigRaSensitivity, mscFrNniCaEgEirBpEntry=mscFrNniCaEgEirBpEntry, mscFrNniLtsPatHeaderBits=mscFrNniLtsPatHeaderBits, mscFrNniCaIngEirPoolAvailBwTable=mscFrNniCaIngEirPoolAvailBwTable, mscFrNniDlciSpExcessBurstSize=mscFrNniDlciSpExcessBurstSize, mscFrNniFramerRowStatus=mscFrNniFramerRowStatus, mscFrNniDlciDcStorageType=mscFrNniDlciDcStorageType, mscFrNniDlciSpRateAdaptation=mscFrNniDlciSpRateAdaptation, mscFrNniOctetToIfByQueueTable=mscFrNniOctetToIfByQueueTable, mscFrNniLtsPatNumFrames=mscFrNniLtsPatNumFrames, mscFrNniCaEgCirPoolAvailBwValue=mscFrNniCaEgCirPoolAvailBwValue, mscFrNniVFramerStatsEntry=mscFrNniVFramerStatsEntry, mscFrNniDlciVcCadEntry=mscFrNniDlciVcCadEntry, mscFrNniStatsEntry=mscFrNniStatsEntry, mscFrNniDlciRateAdaptReductPeriod=mscFrNniDlciRateAdaptReductPeriod, mscFrNniFrmToIfByQueueIndex=mscFrNniFrmToIfByQueueIndex, mscFrNniDnaAddressTable=mscFrNniDnaAddressTable, mscFrNniDlciAbitEntry=mscFrNniDlciAbitEntry, mscFrNniFramerUnderruns=mscFrNniFramerUnderruns, mscFrNniDlciDcRowStatusTable=mscFrNniDlciDcRowStatusTable, mscFrNniDlciMaximumFrameSize=mscFrNniDlciMaximumFrameSize, mscFrNniDlciElapsedDifference=mscFrNniDlciElapsedDifference, mscFrNniDlciDiscCongestedToIf=mscFrNniDlciDiscCongestedToIf, mscFrNniDlciExcessBytesFromIf=mscFrNniDlciExcessBytesFromIf, mscFrNniDlciTransferPriToNwk=mscFrNniDlciTransferPriToNwk, mscFrNniSigSysParmsTable=mscFrNniSigSysParmsTable, mscFrNniDlciEgressSp=mscFrNniDlciEgressSp, mscFrNniDlciVcOutOfRangeFrmFromSubnet=mscFrNniDlciVcOutOfRangeFrmFromSubnet, mscFrNniSigLastStateChangeReason=mscFrNniSigLastStateChangeReason, mscFrNniDlciVcPeakOoSeqByteCount=mscFrNniDlciVcPeakOoSeqByteCount, mscFrNniCaIngEirPoolAvailBwEntry=mscFrNniCaIngEirPoolAvailBwEntry, mscFrNniDlciRowStatus=mscFrNniDlciRowStatus, mscFrNniDlciLbLocalFecnFrm=mscFrNniDlciLbLocalFecnFrm, mscFrNniDlciBecnFrmToIf=mscFrNniDlciBecnFrmToIf, mscFrNniCaIngCirBPValue=mscFrNniCaIngCirBPValue, mscFrNniDlciVcStartTime=mscFrNniDlciVcStartTime, mscFrNniCaIngEirPoolAvailBwIndex=mscFrNniCaIngEirPoolAvailBwIndex, mscFrNniDlciDiscExcessFromIf=mscFrNniDlciDiscExcessFromIf, mscFrNniDlciErrorLongBytesFromIf=mscFrNniDlciErrorLongBytesFromIf, mscFrNniDnaDefaultTransferPriority=mscFrNniDnaDefaultTransferPriority, mscFrNniDlciVcIntdTable=mscFrNniDlciVcIntdTable, mscFrNniDlciLbRowStatusEntry=mscFrNniDlciLbRowStatusEntry, mscFrNniDlciCallReferenceNumber=mscFrNniDlciCallReferenceNumber, mscFrNniLtsPatDefaultEABits=mscFrNniLtsPatDefaultEABits, mscFrNniSigRestartReqTimer=mscFrNniSigRestartReqTimer, mscFrNniDnaHgMHgAddrRowStatusTable=mscFrNniDnaHgMHgAddrRowStatusTable, mscFrNniLmi=mscFrNniLmi, mscFrNniFramerStateTable=mscFrNniFramerStateTable, mscFrNniDlciCirPresentObs=mscFrNniDlciCirPresentObs, mscFrNniDlciEgressSpRowStatusEntry=mscFrNniDlciEgressSpRowStatusEntry, mscFrNniDlciVcCallReferenceNumberDecimal=mscFrNniDlciVcCallReferenceNumberDecimal, mscFrNniDlciDcCugType=mscFrNniDlciDcCugType, mscFrNniLtsPatRfc1490Header=mscFrNniLtsPatRfc1490Header, mscFrNniDlciRowStatusEntry=mscFrNniDlciRowStatusEntry, mscFrNniDlciVcFrmLossTimeouts=mscFrNniDlciVcFrmLossTimeouts, mscFrNniDlciSpMeasurementInterval=mscFrNniDlciSpMeasurementInterval, mscFrNniDlciEgressSpExcessBurstSize=mscFrNniDlciEgressSpExcessBurstSize, mscFrNniDlciSpComponentName=mscFrNniDlciSpComponentName, mscFrNniSigAdminState=mscFrNniSigAdminState, mscFrNniDna=mscFrNniDna, mscFrNniDnaCallOptionsEntry=mscFrNniDnaCallOptionsEntry, mscFrNniDlciEirPresentObs=mscFrNniDlciEirPresentObs, mscFrNniLmiErrorEventThreshold=mscFrNniLmiErrorEventThreshold, mscFrNniDlciVcFrdTable=mscFrNniDlciVcFrdTable, mscFrNniLtsPatDefaultRfc1490Header=mscFrNniLtsPatDefaultRfc1490Header, mscFrNniStateTable=mscFrNniStateTable, mscFrNniLtsPatSetupTable=mscFrNniLtsPatSetupTable, mscFrNniSigProvTable=mscFrNniSigProvTable, mscFrNniFramerStateEntry=mscFrNniFramerStateEntry, mscFrNniControlStatus=mscFrNniControlStatus, mscFrNniVFramerOctetFromOtherVFramer=mscFrNniVFramerOctetFromOtherVFramer, mscFrNniDlciSpRowStatus=mscFrNniDlciSpRowStatus, mscFrNniDlciLbLocalDeBytes=mscFrNniDlciLbLocalDeBytes, mscFrNniDnaDataPath=mscFrNniDnaDataPath, mscFrNniVFramer=mscFrNniVFramer, mscFrNniNumberOfEmissionQs=mscFrNniNumberOfEmissionQs, mscFrNniDnaComponentName=mscFrNniDnaComponentName, mscFrNniEmissionPriorityQsTable=mscFrNniEmissionPriorityQsTable, mscFrNniDlciEgressSpStorageType=mscFrNniDlciEgressSpStorageType, mscFrNniCaIngEirPoolAdmitBwValue=mscFrNniCaIngEirPoolAdmitBwValue, mscFrNniDnaHgMRowStatusTable=mscFrNniDnaHgMRowStatusTable, mscFrNniCaIngCirPoolAdmitBwTable=mscFrNniCaIngCirPoolAdmitBwTable, mscFrNniSigCurrentState=mscFrNniSigCurrentState, mscFrNniDnaOutDefaultPathReliability=mscFrNniDnaOutDefaultPathReliability, mscFrNniVFramerProvEntry=mscFrNniVFramerProvEntry, frameRelayNniCapabilitiesCA02A=frameRelayNniCapabilitiesCA02A, mscFrNniFramerRowStatusTable=mscFrNniFramerRowStatusTable, mscFrNniDlciDcNfaEntry=mscFrNniDlciDcNfaEntry, mscFrNniDnaRowStatus=mscFrNniDnaRowStatus, mscFrNniDlciVcStorageType=mscFrNniDlciVcStorageType, mscFrNniOperStatusTable=mscFrNniOperStatusTable, mscFrNniDlciVcType=mscFrNniDlciVcType, mscFrNniDlciDiscFrameAbit=mscFrNniDlciDiscFrameAbit, mscFrNniFramerFlagsBetweenFrames=mscFrNniFramerFlagsBetweenFrames, mscFrNniCaIngCirBPTable=mscFrNniCaIngCirBPTable, mscFrNniCaEgressMaximumEirOnlyCalls=mscFrNniCaEgressMaximumEirOnlyCalls, mscFrNniFramerFrmFromIf64=mscFrNniFramerFrmFromIf64, frameRelayNniCapabilities=frameRelayNniCapabilities, mscFrNniLmiNniParmsEntry=mscFrNniLmiNniParmsEntry, mscFrNniVFramerOtherVirtualFramer=mscFrNniVFramerOtherVirtualFramer, mscFrNniFramerFrmFromIf=mscFrNniFramerFrmFromIf, mscFrNniDlciTotalEgressSegFrm=mscFrNniDlciTotalEgressSegFrm, mscFrNniSigCodesTable=mscFrNniSigCodesTable, mscFrNniLtsPatPayloadPattern=mscFrNniLtsPatPayloadPattern, mscFrNniLtsPatHeaderLength=mscFrNniLtsPatHeaderLength, mscFrNniDlciEgressSpProvEntry=mscFrNniDlciEgressSpProvEntry, mscFrNniDnaCugCugOptionsEntry=mscFrNniDnaCugCugOptionsEntry, mscFrNniCaIngEirBpIndex=mscFrNniCaIngEirBpIndex, mscFrNniDnaHgMHgAddrRowStatus=mscFrNniDnaHgMHgAddrRowStatus, mscFrNniFramerOctetFromIf=mscFrNniFramerOctetFromIf, mscFrNniLastUnknownDlci=mscFrNniLastUnknownDlci, mscFrNniDlciUsageState=mscFrNniDlciUsageState, mscFrNniDlciEirEgressBytes=mscFrNniDlciEirEgressBytes, mscFrNniSigStatusEnqTimer=mscFrNniSigStatusEnqTimer, mscFrNniDlciDcDiscardPriority=mscFrNniDlciDcDiscardPriority, mscFrNniDlciDcNfaIndex=mscFrNniDlciDcNfaIndex, mscFrNniDlciDcIndex=mscFrNniDlciDcIndex, mscFrNniDlciVcSegmentsRx=mscFrNniDlciVcSegmentsRx, mscFrNniDlciDiscDeCongestedToIfBytes=mscFrNniDlciDiscDeCongestedToIfBytes, mscFrNniDnaIncomingOptionsTable=mscFrNniDnaIncomingOptionsTable, mscFrNniCaIngCirPoolAvailBwValue=mscFrNniCaIngCirPoolAvailBwValue, mscFrNniDnaCugOutCalls=mscFrNniDnaCugOutCalls, mscFrNniSigFrmrReceive=mscFrNniSigFrmrReceive, mscFrNniDnaCugRowStatusEntry=mscFrNniDnaCugRowStatusEntry, mscFrNniUnknownDlciFramesFromIf=mscFrNniUnknownDlciFramesFromIf, mscFrNniDnaHgMAvailabilityDelta=mscFrNniDnaHgMAvailabilityDelta, mscFrNniDlciRowStatusTable=mscFrNniDlciRowStatusTable, mscFrNniDlciDcMapIpCosToFrQos=mscFrNniDlciDcMapIpCosToFrQos, mscFrNniSigLastCauseInStatusMsgReceived=mscFrNniSigLastCauseInStatusMsgReceived, mscFrNniDlciVcPathReliability=mscFrNniDlciVcPathReliability, mscFrNniLmiStatsEntry=mscFrNniLmiStatsEntry, mscFrNniDlciVcElapsedTimeTillNow=mscFrNniDlciVcElapsedTimeTillNow, mscFrNniLtsRowStatusTable=mscFrNniLtsRowStatusTable, mscFrNniLmiUnexpectedReports=mscFrNniLmiUnexpectedReports, mscFrNniDlciVcDuplicatesFromSubnet=mscFrNniDlciVcDuplicatesFromSubnet, mscFrNniLtsPatRowStatusTable=mscFrNniLtsPatRowStatusTable, mscFrNniDlciVcDmepValue=mscFrNniDlciVcDmepValue, mscFrNniLtsPatDefaultDlci=mscFrNniLtsPatDefaultDlci, mscFrNniSnmpOperStatus=mscFrNniSnmpOperStatus, mscFrNniLmiRowStatusTable=mscFrNniLmiRowStatusTable, mscFrNniSigServParmsEntry=mscFrNniSigServParmsEntry, mscFrNniCaEgEirPoolAdmitBwTable=mscFrNniCaEgEirPoolAdmitBwTable, mscFrNniDlciTransferPriorityFromNetwork=mscFrNniDlciTransferPriorityFromNetwork, mscFrNniLmiProtocolErrors=mscFrNniLmiProtocolErrors, mscFrNniSigReceiveRejectFrame=mscFrNniSigReceiveRejectFrame, mscFrNniDlciABitStatusFromIf=mscFrNniDlciABitStatusFromIf, mscFrNniLmiProtocolStatus=mscFrNniLmiProtocolStatus, mscFrNniDlciDiscDeCongestedFromIfBytes=mscFrNniDlciDiscDeCongestedFromIfBytes, mscFrNniDnaNumberingPlanIndicator=mscFrNniDnaNumberingPlanIndicator, mscFrNniDlciABitReasonToIf=mscFrNniDlciABitReasonToIf, mscFrNniDlciStandbyStatus=mscFrNniDlciStandbyStatus, mscFrNniDlciVcOoSeqByteCntExceeded=mscFrNniDlciVcOoSeqByteCntExceeded, frameRelayNniCapabilitiesCA02=frameRelayNniCapabilitiesCA02, mscFrNniLtsPatDefaultDataSize=mscFrNniLtsPatDefaultDataSize, mscFrNniDlciLbRowStatusTable=mscFrNniDlciLbRowStatusTable, mscFrNniCaEgCirBpValue=mscFrNniCaEgCirBpValue, mscFrNniCaNumberRejectedEgressCirPermConn=mscFrNniCaNumberRejectedEgressCirPermConn, mscFrNniDlciAccounting=mscFrNniDlciAccounting, mscFrNniDlciCommittedInformationRate=mscFrNniDlciCommittedInformationRate, mscFrNniCaEgCirBpTable=mscFrNniCaEgCirBpTable, mscFrNniDnaHgMStorageType=mscFrNniDnaHgMStorageType, mscFrNniDnaHgMHgAddrIndex=mscFrNniDnaHgMHgAddrIndex, mscFrNniCaEgEirBpValue=mscFrNniCaEgEirBpValue, mscFrNniCaEgEirPoolAdmitBwIndex=mscFrNniCaEgEirPoolAdmitBwIndex, mscFrNniFramerUtilEntry=mscFrNniFramerUtilEntry, mscFrNniDlciTransferPriorityToNetwork=mscFrNniDlciTransferPriorityToNetwork, mscFrNniDlciVcCallReferenceNumber=mscFrNniDlciVcCallReferenceNumber, mscFrNniFrmToIfByQueueValue=mscFrNniFrmToIfByQueueValue)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", mscFrNniIndex=mscFrNniIndex, mscFrNniCaEgEirPoolAvailBwEntry=mscFrNniCaEgEirPoolAvailBwEntry, mscFrNniSigDlciCollisions=mscFrNniSigDlciCollisions, mscFrNniDlciDcRemoteDlci=mscFrNniDlciDcRemoteDlci, mscFrNniDlciCirPresent=mscFrNniDlciCirPresent, mscFrNniSigRestartRcvTimer=mscFrNniSigRestartRcvTimer, mscFrNniLtsFramesTx=mscFrNniLtsFramesTx, mscFrNniSigRemoteBusy=mscFrNniSigRemoteBusy, mscFrNniDlciVcCallingDna=mscFrNniDlciVcCallingDna, mscFrNniLtsSetupEntry=mscFrNniLtsSetupEntry, mscFrNniCaProvTable=mscFrNniCaProvTable, mscFrNniDlciDcNfaTable=mscFrNniDlciDcNfaTable, mscFrNniLtsDuration=mscFrNniLtsDuration, mscFrNniDlciVcPeakRetryQueueSize=mscFrNniDlciVcPeakRetryQueueSize, mscFrNniDlciBytesFromIf=mscFrNniDlciBytesFromIf, mscFrNniVFramerAdminState=mscFrNniVFramerAdminState, mscFrNniDlciVcCalledDna=mscFrNniDlciVcCalledDna, mscFrNniLmiParmsEntry=mscFrNniLmiParmsEntry, mscFrNniSigCurrentQueueSize=mscFrNniSigCurrentQueueSize, mscFrNniLtsComponentName=mscFrNniLtsComponentName, mscFrNniLmiKeepAliveStatusToIf=mscFrNniLmiKeepAliveStatusToIf, mscFrNniDlciDcRowStatus=mscFrNniDlciDcRowStatus, mscFrNniDlciVcAccountingEnd=mscFrNniDlciVcAccountingEnd, mscFrNniCaEgEirPoolAdmitBwEntry=mscFrNniCaEgEirPoolAdmitBwEntry, mscFrNniSigInCallsRefused=mscFrNniSigInCallsRefused, mscFrNniDnaCugIncCalls=mscFrNniDnaCugIncCalls, mscFrNniDlciSpOpTable=mscFrNniDlciSpOpTable, mscFrNniCaIngCirPoolAdmitBwValue=mscFrNniCaIngCirPoolAdmitBwValue, mscFrNniDlciErrorShortBytesFromIf=mscFrNniDlciErrorShortBytesFromIf, mscFrNniLtsResultsEntry=mscFrNniLtsResultsEntry, mscFrNniCaEgressCacEntry=mscFrNniCaEgressCacEntry, mscFrNniDnaHgMHgAddrNumberingPlanIndicator=mscFrNniDnaHgMHgAddrNumberingPlanIndicator, mscFrNniSigAckDelayTimer=mscFrNniSigAckDelayTimer, mscFrNniFramerLargeFrmErrors=mscFrNniFramerLargeFrmErrors, mscFrNniSigOutCallsFailed=mscFrNniSigOutCallsFailed, mscFrNniDlciSpOpEntry=mscFrNniDlciSpOpEntry, frameRelayNniCapabilitiesCA=frameRelayNniCapabilitiesCA, mscFrNniDlciBciFromSubnet=mscFrNniDlciBciFromSubnet, mscFrNniSigInCalls=mscFrNniSigInCalls, mscFrNniDlciAvailabilityStatus=mscFrNniDlciAvailabilityStatus, mscFrNniSigNetworkType=mscFrNniSigNetworkType, mscFrNniCaIngCirPoolAvailBwIndex=mscFrNniCaIngCirPoolAvailBwIndex, mscFrNniDlciDiscByteAbit=mscFrNniDlciDiscByteAbit, mscFrNniDlciVcCalledLcn=mscFrNniDlciVcCalledLcn, mscFrNniCaTpmProvTable=mscFrNniCaTpmProvTable, mscFrNniLmiOperationalState=mscFrNniLmiOperationalState, mscFrNniDlciRateAdaptReduct=mscFrNniDlciRateAdaptReduct, mscFrNniDlciVcCombErrorsFromSubnet=mscFrNniDlciVcCombErrorsFromSubnet, mscFrNniCaEgCirPoolAvailBwTable=mscFrNniCaEgCirPoolAvailBwTable, mscFrNniCaEgressApplyToCos=mscFrNniCaEgressApplyToCos, mscFrNniDlciLbLocalDeFrm=mscFrNniDlciLbLocalDeFrm, mscFrNniDlciVcPriority=mscFrNniDlciVcPriority, mscFrNniVFramerFrmFromOtherVFramer=mscFrNniVFramerFrmFromOtherVFramer, mscFrNniDlciStatsEntry=mscFrNniDlciStatsEntry, mscFrNniDnaAccountCollection=mscFrNniDnaAccountCollection, mscFrNniDlciStorageType=mscFrNniDlciStorageType, mscFrNniDnaCugPreferential=mscFrNniDnaCugPreferential, mscFrNniSigIndex=mscFrNniSigIndex, mscFrNniCaOverrideLinkRate=mscFrNniCaOverrideLinkRate, mscFrNniSigReleaseTimer=mscFrNniSigReleaseTimer, mscFrNniCaEgEirPoolAdmitBwValue=mscFrNniCaEgEirPoolAdmitBwValue, mscFrNniDnaHgMHgAddrStorageType=mscFrNniDnaHgMHgAddrStorageType, mscFrNniDnaRowStatusTable=mscFrNniDnaRowStatusTable, mscFrNniDlciVcNotDataXferToSubnet=mscFrNniDlciVcNotDataXferToSubnet, mscFrNniDlciEgressSpCommittedBurstSize=mscFrNniDlciEgressSpCommittedBurstSize, mscFrNniDnaCugIndex=mscFrNniDnaCugIndex, mscFrNniLtsSetupTable=mscFrNniLtsSetupTable, mscFrNniLtsPatLoad=mscFrNniLtsPatLoad, mscFrNniDlciSpRaSensitivity=mscFrNniDlciSpRaSensitivity, mscFrNniDlciSpRowStatusEntry=mscFrNniDlciSpRowStatusEntry, mscFrNniCaComponentName=mscFrNniCaComponentName, frameRelayNniMIB=frameRelayNniMIB, mscFrNniEmissionPriorityQsEntry=mscFrNniEmissionPriorityQsEntry, mscFrNniDnaOutgoingOptionsTable=mscFrNniDnaOutgoingOptionsTable, mscFrNniCaIngEirPoolAdmitBwIndex=mscFrNniCaIngEirPoolAdmitBwIndex, mscFrNniSigLastClearRemoteDataNetworkAddress=mscFrNniSigLastClearRemoteDataNetworkAddress, mscFrNniCaIngEirPoolAdmitBwEntry=mscFrNniCaIngEirPoolAdmitBwEntry, mscFrNniVFramerStorageType=mscFrNniVFramerStorageType, mscFrNniDlciEgressSpRowStatus=mscFrNniDlciEgressSpRowStatus, mscFrNniLtsPatOpDataEntry=mscFrNniLtsPatOpDataEntry, mscFrNniDlciDiscCongestedFromIfBytes=mscFrNniDlciDiscCongestedFromIfBytes, mscFrNniIfAdminStatus=mscFrNniIfAdminStatus, mscFrNniSigOperationalState=mscFrNniSigOperationalState, mscFrNniCaIngEirBpTable=mscFrNniCaIngEirBpTable, mscFrNniCaIngEirBpEntry=mscFrNniCaIngEirBpEntry, mscFrNniSigRetransmitLimit=mscFrNniSigRetransmitLimit, mscFrNniDlciVcAccountingEnabled=mscFrNniDlciVcAccountingEnabled, mscFrNniDnaCugRowStatusTable=mscFrNniDnaCugRowStatusTable, mscFrNniDlciVcCannotForwardToSubnet=mscFrNniDlciVcCannotForwardToSubnet, mscFrNniOctetToIfByQueueEntry=mscFrNniOctetToIfByQueueEntry, mscFrNniSigRowStatusTable=mscFrNniSigRowStatusTable, mscFrNniLtsPatDefaultUseBadLrc=mscFrNniLtsPatDefaultUseBadLrc, mscFrNniLmiUsageState=mscFrNniLmiUsageState, mscFrNniDlciStateEntry=mscFrNniDlciStateEntry, mscFrNniDlciDc=mscFrNniDlciDc, mscFrNniLtsPatFramePattern=mscFrNniLtsPatFramePattern, frameRelayNniGroup=frameRelayNniGroup, mscFrNniSigRowStatusEntry=mscFrNniSigRowStatusEntry, mscFrNniCaIndex=mscFrNniCaIndex, mscFrNniVFramerLogicalProcessor=mscFrNniVFramerLogicalProcessor, mscFrNniDlciVcOoSeqPktCntExceeded=mscFrNniDlciVcOoSeqPktCntExceeded, mscFrNniSigOutCalls=mscFrNniSigOutCalls, mscFrNniLtsPatHdlcBitsInserted=mscFrNniLtsPatHdlcBitsInserted, mscFrNniDlciEgressSpIndex=mscFrNniDlciEgressSpIndex, mscFrNniLtsPat=mscFrNniLtsPat, mscFrNniDlciAbitTable=mscFrNniDlciAbitTable, mscFrNniDnaCugType=mscFrNniDnaCugType, mscFrNniCaRowStatus=mscFrNniCaRowStatus, mscFrNniSigIFramesTxDiscarded=mscFrNniSigIFramesTxDiscarded, mscFrNniDlciEgressSpMeasurementInterval=mscFrNniDlciEgressSpMeasurementInterval, mscFrNniLmiKeepAliveStatusEnqFromIf=mscFrNniLmiKeepAliveStatusEnqFromIf, mscFrNniDlciStartTime=mscFrNniDlciStartTime, mscFrNniLmiStateEntry=mscFrNniLmiStateEntry, mscFrNniSigLastStateInStatusMsgReceived=mscFrNniSigLastStateInStatusMsgReceived, mscFrNniDnaCugComponentName=mscFrNniDnaCugComponentName, mscFrNniRowStatus=mscFrNniRowStatus, mscFrNniCaEgCirPoolAdmitBwEntry=mscFrNniCaEgCirPoolAdmitBwEntry, mscFrNniDnaHgMHgAddrAddrEntry=mscFrNniDnaHgMHgAddrAddrEntry, mscFrNniSigLastDlciReceivedStatus=mscFrNniSigLastDlciReceivedStatus, mscFrNniDlciVcPeakOoSeqFrmForwarded=mscFrNniDlciVcPeakOoSeqFrmForwarded, mscFrNniDlciStateTable=mscFrNniDlciStateTable, mscFrNniOctetToIfByQueueIndex=mscFrNniOctetToIfByQueueIndex, mscFrNniDlciDiscCongestedFromIf=mscFrNniDlciDiscCongestedFromIf, mscFrNniDnaIndex=mscFrNniDnaIndex, mscFrNniLmiEventCount=mscFrNniLmiEventCount, mscFrNniDlciLbRemoteBecnFrm=mscFrNniDlciLbRemoteBecnFrm, mscFrNniCaTpmProvEntry=mscFrNniCaTpmProvEntry, mscFrNniDlciFecnFrmToIf=mscFrNniDlciFecnFrmToIf, mscFrNniLtsLoad=mscFrNniLtsLoad, mscFrNniCaEgCirPoolAdmitBwTable=mscFrNniCaEgCirPoolAdmitBwTable, mscFrNniDlciSpAccounting=mscFrNniDlciSpAccounting, mscFrNniDnaCugInterlockCode=mscFrNniDnaCugInterlockCode, mscFrNniFramerNormPrioLinkUtilFromIf=mscFrNniFramerNormPrioLinkUtilFromIf, mscFrNniDlciSpCommittedBurstSize=mscFrNniDlciSpCommittedBurstSize, mscFrNniSig=mscFrNniSig, mscFrNniSigCallSetupTimer=mscFrNniSigCallSetupTimer, mscFrNniCaOpEntry=mscFrNniCaOpEntry, mscFrNniAvailabilityStatus=mscFrNniAvailabilityStatus, mscFrNniDlciVcRowStatusTable=mscFrNniDlciVcRowStatusTable, mscFrNniLtsLastActiveInterval=mscFrNniLtsLastActiveInterval, mscFrNniSigLastDiagnosticCode=mscFrNniSigLastDiagnosticCode, mscFrNniLtsPatOpStateEntry=mscFrNniLtsPatOpStateEntry, mscFrNniLtsPatRowStatusEntry=mscFrNniLtsPatRowStatusEntry, mscFrNniDlciTotalEgressBytes=mscFrNniDlciTotalEgressBytes, mscFrNniCaIngCirBPIndex=mscFrNniCaIngCirBPIndex, mscFrNniSigStatsTable=mscFrNniSigStatsTable, mscFrNniSigLapfStatusEntry=mscFrNniSigLapfStatusEntry, mscFrNniLmiLinkVerificationTimer=mscFrNniLmiLinkVerificationTimer, mscFrNniDlciLbStorageType=mscFrNniDlciLbStorageType, mscFrNniCaTpmRowStatusEntry=mscFrNniCaTpmRowStatusEntry, mscFrNniDnaHgMOpEntry=mscFrNniDnaHgMOpEntry, mscFrNniCaNumberRejectedEgressEirPermConn=mscFrNniCaNumberRejectedEgressEirPermConn, mscFrNniProceduralStatus=mscFrNniProceduralStatus, mscFrNniLmiPsiEntry=mscFrNniLmiPsiEntry, mscFrNniLmiFullStatusEnqFromIf=mscFrNniLmiFullStatusEnqFromIf, mscFrNniDlciEirIngressSegFrm=mscFrNniDlciEirIngressSegFrm, mscFrNniDlciABitStatusToIf=mscFrNniDlciABitStatusToIf, mscFrNniFramerAdminState=mscFrNniFramerAdminState, mscFrNniDlciLbRemoteTotalBytes=mscFrNniDlciLbRemoteTotalBytes, mscFrNniSigIFramesTransmitted=mscFrNniSigIFramesTransmitted, mscFrNniDlciDcDataPath=mscFrNniDlciDcDataPath, mscFrNniSigStateChange=mscFrNniSigStateChange, mscFrNniUsageState=mscFrNniUsageState, mscFrNniSigSvcaccTable=mscFrNniSigSvcaccTable, mscFrNniLtsPatDefaultsTable=mscFrNniLtsPatDefaultsTable, mscFrNniLtsPatDefaultHeaderLength=mscFrNniLtsPatDefaultHeaderLength, mscFrNniLtsStorageType=mscFrNniLtsStorageType, mscFrNniLmiFullStatusToIf=mscFrNniLmiFullStatusToIf, mscFrNniDlciVcCadTable=mscFrNniDlciVcCadTable, mscFrNniVFramerRowStatusTable=mscFrNniVFramerRowStatusTable, mscFrNniDlciIntEntry=mscFrNniDlciIntEntry, mscFrNniFramer=mscFrNniFramer, mscFrNniDlciBciToSubnet=mscFrNniDlciBciToSubnet, mscFrNniFramerFrmToIf=mscFrNniFramerFrmToIf, mscFrNniLtsResultsTable=mscFrNniLtsResultsTable, mscFrNniDlciLbRemoteDeFrm=mscFrNniDlciLbRemoteDeFrm, mscFrNniDlciTransferPriFromNwk=mscFrNniDlciTransferPriFromNwk, mscFrNniLmiCheckPointTimer=mscFrNniLmiCheckPointTimer, mscFrNniDlciCallRefNumber=mscFrNniDlciCallRefNumber, mscFrNniFramerStatsTable=mscFrNniFramerStatsTable, mscFrNniSigQualityOfServiceNotAvailable=mscFrNniSigQualityOfServiceNotAvailable, mscFrNniSigBandwidthNotAvailableValue=mscFrNniSigBandwidthNotAvailableValue, mscFrNniDlciTotalIngressBytes=mscFrNniDlciTotalIngressBytes, mscFrNniLtsPatStatus=mscFrNniLtsPatStatus, mscFrNniDlciVcCallingNpi=mscFrNniDlciVcCallingNpi, mscFrNniFramerOperationalState=mscFrNniFramerOperationalState, mscFrNniSigStateEntry=mscFrNniSigStateEntry, mscFrNniCaEgEirPoolAvailBwIndex=mscFrNniCaEgEirPoolAvailBwIndex, frameRelayNniGroupCA02A=frameRelayNniGroupCA02A, mscFrNniLmiIndex=mscFrNniLmiIndex, mscFrNniDlciBytesToIf=mscFrNniDlciBytesToIf, mscFrNniDlciDcTransferPriority=mscFrNniDlciDcTransferPriority, mscFrNniSigHighestPermanentDlci=mscFrNniSigHighestPermanentDlci, mscFrNniCaTpm=mscFrNniCaTpm, mscFrNniFramerUsageState=mscFrNniFramerUsageState, mscFrNniDlciRateAdaptationPresent=mscFrNniDlciRateAdaptationPresent, mscFrNniVFramerStateEntry=mscFrNniVFramerStateEntry, mscFrNniSigDefaultCommittedBurstSize=mscFrNniSigDefaultCommittedBurstSize, mscFrNniVFramerStateTable=mscFrNniVFramerStateTable, mscFrNniDnaHgMMaximumAvailableAggregateCir64=mscFrNniDnaHgMMaximumAvailableAggregateCir64, mscFrNniLmiComponentName=mscFrNniLmiComponentName, mscFrNniVFramerComponentName=mscFrNniVFramerComponentName, mscFrNniDlciVcEmissionPriorityToNetwork=mscFrNniDlciVcEmissionPriorityToNetwork, mscFrNniSigSvcaccEntry=mscFrNniSigSvcaccEntry, mscFrNniCaIngressCacTable=mscFrNniCaIngressCacTable, mscFrNniDnaCallOptionsTable=mscFrNniDnaCallOptionsTable, mscFrNniDlciVcDataPath=mscFrNniDlciVcDataPath, mscFrNniDnaDataNetworkAddress=mscFrNniDnaDataNetworkAddress, mscFrNniDlciExcessBurstSize=mscFrNniDlciExcessBurstSize, mscFrNniDlciVcFastSelectCall=mscFrNniDlciVcFastSelectCall, mscFrNniDnaCugCugOptionsTable=mscFrNniDnaCugCugOptionsTable, mscFrNniDlciDiscDeCongestedToIf=mscFrNniDlciDiscDeCongestedToIf, mscFrNniSigLapfStatsTable=mscFrNniSigLapfStatsTable, mscFrNniDlciDiscardedBytes=mscFrNniDlciDiscardedBytes, mscFrNniUnknownStatus=mscFrNniUnknownStatus, mscFrNniDlciDcOptionsTable=mscFrNniDlciDcOptionsTable, mscFrNniDlciCommittedBurstSize=mscFrNniDlciCommittedBurstSize, mscFrNniDlciVcNotDataXferFromSubnet=mscFrNniDlciVcNotDataXferFromSubnet, mscFrNniLtsFrameRateTx=mscFrNniLtsFrameRateTx, mscFrNniDlciStatsTable=mscFrNniDlciStatsTable, mscFrNniDnaEgressAccounting=mscFrNniDnaEgressAccounting, mscFrNniLtsPatStorageType=mscFrNniLtsPatStorageType, mscFrNniSigIFramesReceived=mscFrNniSigIFramesReceived, mscFrNniFramerCrcErrors=mscFrNniFramerCrcErrors, mscFrNniDlciVcPreviousState=mscFrNniDlciVcPreviousState, mscFrNniLtsPatDlci=mscFrNniLtsPatDlci, mscFrNniVFramerRowStatusEntry=mscFrNniVFramerRowStatusEntry, mscFrNniCaMaximumBandwidthPerCall=mscFrNniCaMaximumBandwidthPerCall, mscFrNniDlciEgressSpProvTable=mscFrNniDlciEgressSpProvTable, mscFrNniDlciEirEgressSegFrm=mscFrNniDlciEirEgressSegFrm, mscFrNniSigDefaultAccounting=mscFrNniSigDefaultAccounting, mscFrNniFrmToIfByQueueTable=mscFrNniFrmToIfByQueueTable, mscFrNniOctetToIfByQueueValue=mscFrNniOctetToIfByQueueValue, mscFrNniDlciDiscCongestedToIfBytes=mscFrNniDlciDiscCongestedToIfBytes, mscFrNniLmiStatusSequenceErrors=mscFrNniLmiStatusSequenceErrors, mscFrNniLmiNoStatusReportCount=mscFrNniLmiNoStatusReportCount, mscFrNniDlciFecnFrmFromIf=mscFrNniDlciFecnFrmFromIf, mscFrNniLmiFullStatusPollingCycles=mscFrNniLmiFullStatusPollingCycles, mscFrNniDlciEgressSpCommittedInformationRate=mscFrNniDlciEgressSpCommittedInformationRate, mscFrNniDlciIndex=mscFrNniDlciIndex, mscFrNniDnaHgMComponentName=mscFrNniDnaHgMComponentName, mscFrNniDlciDeFrmFromIf=mscFrNniDlciDeFrmFromIf, mscFrNniDlciErrorShortFrmFromIf=mscFrNniDlciErrorShortFrmFromIf, mscFrNniDlciVcPeakOoSeqPktCount=mscFrNniDlciVcPeakOoSeqPktCount, mscFrNniDlciSpStorageType=mscFrNniDlciSpStorageType, mscFrNniLtsCycleIncomplete=mscFrNniLtsCycleIncomplete, mscFrNniStorageType=mscFrNniStorageType, mscFrNniCaIngEirPoolAvailBwValue=mscFrNniCaIngEirPoolAvailBwValue, mscFrNniDlciEgressSpRowStatusTable=mscFrNniDlciEgressSpRowStatusTable, mscFrNniSigSysParmsEntry=mscFrNniSigSysParmsEntry, frameRelayNniGroupCA=frameRelayNniGroupCA, mscFrNniCaTpmIndex=mscFrNniCaTpmIndex, mscFrNniSigStateTable=mscFrNniSigStateTable, mscFrNniLtsElapsedGenerationTime=mscFrNniLtsElapsedGenerationTime)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayNniMIB", mscFrNniCidDataTable=mscFrNniCidDataTable, mscFrNniDlciVcSegmentsSent=mscFrNniDlciVcSegmentsSent, mscFrNniIfEntryEntry=mscFrNniIfEntryEntry, mscFrNniDnaAddressEntry=mscFrNniDnaAddressEntry, mscFrNniCaRowStatusTable=mscFrNniCaRowStatusTable, mscFrNniDnaStorageType=mscFrNniDnaStorageType, mscFrNniLmiAsyncStatusReport=mscFrNniLmiAsyncStatusReport, mscFrNniSigRowStatus=mscFrNniSigRowStatus, mscFrNniSigMaximumFrameSize=mscFrNniSigMaximumFrameSize, mscFrNniSigDefaultCommittedInformationRate=mscFrNniSigDefaultCommittedInformationRate, mscFrNniCaEgCirPoolAdmitBwValue=mscFrNniCaEgCirPoolAdmitBwValue, mscFrNniSigServParmsTable=mscFrNniSigServParmsTable, mscFrNniDnaCugStorageType=mscFrNniDnaCugStorageType, mscFrNniAlarmStatus=mscFrNniAlarmStatus, mscFrNniSigCallProceedingTimer=mscFrNniSigCallProceedingTimer, mscFrNniDlciDiscExcessFromIfBytes=mscFrNniDlciDiscExcessFromIfBytes, mscFrNniDlciVcFrmCongestedToSubnet=mscFrNniDlciVcFrmCongestedToSubnet, mscFrNniCaTpmAssignedEgressBandwidthPool=mscFrNniCaTpmAssignedEgressBandwidthPool, mscFrNniCaOpTable=mscFrNniCaOpTable, mscFrNniDnaHgMRowStatusEntry=mscFrNniDnaHgMRowStatusEntry, mscFrNniDlciRateEnforcement=mscFrNniDlciRateEnforcement, mscFrNniDnaHgM=mscFrNniDnaHgM, mscFrNniLtsPatComponentName=mscFrNniLtsPatComponentName, mscFrNniLtsPatDefaultPayloadPattern=mscFrNniLtsPatDefaultPayloadPattern, mscFrNniDlciLbRowStatus=mscFrNniDlciLbRowStatus, mscFrNniLtsBurstSize=mscFrNniLtsBurstSize, mscFrNniDlciAdminState=mscFrNniDlciAdminState, mscFrNniCaIngressCacEntry=mscFrNniCaIngressCacEntry, mscFrNniDlciEirIngressBytes=mscFrNniDlciEirIngressBytes, mscFrNniDnaHgMAvailableAggregateCir64=mscFrNniDnaHgMAvailableAggregateCir64, mscFrNniCaIngressApplyToCos=mscFrNniCaIngressApplyToCos, mscFrNniCaRowStatusEntry=mscFrNniCaRowStatusEntry, mscFrNniRowStatusEntry=mscFrNniRowStatusEntry, mscFrNniDnaHgMRowStatus=mscFrNniDnaHgMRowStatus, mscFrNniSigCurrentNumberOfSvcCalls=mscFrNniSigCurrentNumberOfSvcCalls, mscFrNniLmiNniParmsTable=mscFrNniLmiNniParmsTable, mscFrNniDlciSpCommittedInformationRate=mscFrNniDlciSpCommittedInformationRate, mscFrNniDlciMeasurementInterval=mscFrNniDlciMeasurementInterval, mscFrNniSigStatsEntry=mscFrNniSigStatsEntry, mscFrNniDlciDcRowStatusEntry=mscFrNniDlciDcRowStatusEntry, mscFrNniFramerProvTable=mscFrNniFramerProvTable, mscFrNniSigLapfStatsEntry=mscFrNniSigLapfStatsEntry, mscFrNniDlciRateEnforcementPresent=mscFrNniDlciRateEnforcementPresent, mscFrNniDlciEmissionPriorityToIf=mscFrNniDlciEmissionPriorityToIf, mscFrNniCaEgCirPoolAdmitBwIndex=mscFrNniCaEgCirPoolAdmitBwIndex, mscFrNniDnaOutPathSensitivityOverRide=mscFrNniDnaOutPathSensitivityOverRide, mscFrNniDlciProceduralStatus=mscFrNniDlciProceduralStatus, mscFrNniDlciVcSubnetRecoveries=mscFrNniDlciVcSubnetRecoveries, mscFrNniDlciComponentName=mscFrNniDlciComponentName, mscFrNniDlciIntTable=mscFrNniDlciIntTable, mscFrNniCaEgEirPoolAvailBwTable=mscFrNniCaEgEirPoolAvailBwTable, mscFrNniSigProtocolErrors=mscFrNniSigProtocolErrors, mscFrNniDlciLbIndex=mscFrNniDlciLbIndex, mscFrNniLtsPatEaBits=mscFrNniLtsPatEaBits, mscFrNniFramerLinkTable=mscFrNniFramerLinkTable, mscFrNniDlciSpIndex=mscFrNniDlciSpIndex, mscFrNniDlciFrmToIf=mscFrNniDlciFrmToIf, mscFrNniDlciLb=mscFrNniDlciLb, mscFrNniFrmToIfByQueueEntry=mscFrNniFrmToIfByQueueEntry, mscFrNniLtsAlgorithm=mscFrNniLtsAlgorithm, mscFrNniDlciOperationalState=mscFrNniDlciOperationalState, mscFrNniVFramerProvTable=mscFrNniVFramerProvTable, mscFrNniCidDataEntry=mscFrNniCidDataEntry, mscFrNniCaTpmRowStatus=mscFrNniCaTpmRowStatus, mscFrNni=mscFrNni, mscFrNniVFramerRowStatus=mscFrNniVFramerRowStatus, mscFrNniSigUsageState=mscFrNniSigUsageState, mscFrNniDnaHgMIfTable=mscFrNniDnaHgMIfTable, mscFrNniDnaHgMOpTable=mscFrNniDnaHgMOpTable, mscFrNniDlciDeFrmToIf=mscFrNniDlciDeFrmToIf, mscFrNniFramerDataInversion=mscFrNniFramerDataInversion, mscFrNniDlciLbRemoteTotalFrm=mscFrNniDlciLbRemoteTotalFrm, mscFrNniCaEgEirBpIndex=mscFrNniCaEgEirBpIndex, mscFrNniDnaHgMMaximumAvailableAggregateCir=mscFrNniDnaHgMMaximumAvailableAggregateCir, mscFrNniSigDefaultExcessBurstSize=mscFrNniSigDefaultExcessBurstSize, mscFrNniDnaHgMHgAddr=mscFrNniDnaHgMHgAddr, mscFrNniDnaHgMAvailableDlcis=mscFrNniDnaHgMAvailableDlcis, mscFrNniDlciVcCallingLcn=mscFrNniDlciVcCallingLcn, mscFrNniDlciLbLocalBecnFrm=mscFrNniDlciLbLocalBecnFrm, mscFrNniDnaRowStatusEntry=mscFrNniDnaRowStatusEntry, mscFrNniDlciControlStatus=mscFrNniDlciControlStatus, mscFrNniDlciLocalRateAdaptOccurred=mscFrNniDlciLocalRateAdaptOccurred, mscFrNniDlciLbRemoteDeBytes=mscFrNniDlciLbRemoteDeBytes, mscFrNniVFramerStatsTable=mscFrNniVFramerStatsTable, mscFrNniLmiRowStatus=mscFrNniLmiRowStatus, mscFrNniSigComponentName=mscFrNniSigComponentName, mscFrNniFramerFrmToIf64=mscFrNniFramerFrmToIf64, mscFrNniDlciDcRemoteNpi=mscFrNniDlciDcRemoteNpi, mscFrNniFramerProvEntry=mscFrNniFramerProvEntry, mscFrNniDlci=mscFrNniDlci, mscFrNniLmiStateTable=mscFrNniLmiStateTable, mscFrNniDlciVcDmepEntry=mscFrNniDlciVcDmepEntry, mscFrNniLtsTimeInterval=mscFrNniLtsTimeInterval, mscFrNniCaTpmStorageType=mscFrNniCaTpmStorageType, mscFrNniCaEgCirPoolAvailBwEntry=mscFrNniCaEgCirPoolAvailBwEntry, mscFrNniDlciCallState=mscFrNniDlciCallState, mscFrNniDlciCallType=mscFrNniDlciCallType, mscFrNniFramerAborts=mscFrNniFramerAborts, mscFrNniDlciDcCugIndex=mscFrNniDlciDcCugIndex, mscFrNniFramerIndex=mscFrNniFramerIndex, mscFrNniCa=mscFrNniCa, mscFrNniCaIngCirPoolAvailBwEntry=mscFrNniCaIngCirPoolAvailBwEntry, mscFrNniDnaHgMAvailableAggregateCir=mscFrNniDnaHgMAvailableAggregateCir, mscFrNniCaEgEirPoolAvailBwValue=mscFrNniCaEgEirPoolAvailBwValue, mscFrNniInvalidHeaderFramesFromIf=mscFrNniInvalidHeaderFramesFromIf, mscFrNniFramerFrmModeErrors=mscFrNniFramerFrmModeErrors, mscFrNniDlciDeBytesToIf=mscFrNniDlciDeBytesToIf, mscFrNniSigAckTimer=mscFrNniSigAckTimer, mscFrNniLtsPatOpDataTable=mscFrNniLtsPatOpDataTable, mscFrNniDnaOutgoingOptionsEntry=mscFrNniDnaOutgoingOptionsEntry, mscFrNniDlciDiscardedSegFrm=mscFrNniDlciDiscardedSegFrm, mscFrNniDnaAccountClass=mscFrNniDnaAccountClass, mscFrNniDnaHgMHgAddrRowStatusEntry=mscFrNniDnaHgMHgAddrRowStatusEntry, mscFrNniDlciBecnFrmFromIf=mscFrNniDlciBecnFrmFromIf, mscFrNniDlciVcIntdEntry=mscFrNniDlciVcIntdEntry, mscFrNniDlciDeBytesFromIf=mscFrNniDlciDeBytesFromIf, mscFrNniSigIFramesRcvdDiscarded=mscFrNniSigIFramesRcvdDiscarded, frameRelayNniGroupCA02=frameRelayNniGroupCA02, mscFrNniLtsPatDefaultsEntry=mscFrNniLtsPatDefaultsEntry, mscFrNniLmiUserSideEventHistory=mscFrNniLmiUserSideEventHistory, mscFrNniFramerUtilTable=mscFrNniFramerUtilTable, mscFrNniCaEgCirBpIndex=mscFrNniCaEgCirBpIndex, mscFrNniFramerFrameCrcType=mscFrNniFramerFrameCrcType, mscFrNniDnaCugDnic=mscFrNniDnaCugDnic, mscFrNniLmiStorageType=mscFrNniLmiStorageType, mscFrNniLmiUnexpectedIes=mscFrNniLmiUnexpectedIes, mscFrNniDlciCalldTable=mscFrNniDlciCalldTable, mscFrNniCaIngEirPoolAdmitBwTable=mscFrNniCaIngEirPoolAdmitBwTable, mscFrNniLtsBitRateTx=mscFrNniLtsBitRateTx, mscFrNniLtsPatDefaultNumFrames=mscFrNniLtsPatDefaultNumFrames, mscFrNniLmiPsiTable=mscFrNniLmiPsiTable, mscFrNniDnaHgMIfEntry=mscFrNniDnaHgMIfEntry, mscFrNniStatsTable=mscFrNniStatsTable, mscFrNniSigLapfSysEntry=mscFrNniSigLapfSysEntry, mscFrNniDnaHgMHgAddrAddrTable=mscFrNniDnaHgMHgAddrAddrTable, mscFrNniDlciVcDmepTable=mscFrNniDlciVcDmepTable, mscFrNniDnaOutAccess=mscFrNniDnaOutAccess, mscFrNniFramerNormPrioLinkUtilToIf=mscFrNniFramerNormPrioLinkUtilToIf, mscFrNniDlciLbLocalTotalFrm=mscFrNniDlciLbLocalTotalFrm, mscFrNniSigIdleProbeTimer=mscFrNniSigIdleProbeTimer, mscFrNniSigCodesEntry=mscFrNniSigCodesEntry, mscFrNniVFramerOperationalState=mscFrNniVFramerOperationalState, mscFrNniLtsGeneratorState=mscFrNniLtsGeneratorState, mscFrNniLtsPatUseBadLrc=mscFrNniLtsPatUseBadLrc, mscFrNniFramerRowStatusEntry=mscFrNniFramerRowStatusEntry, mscFrNniDlciFrmFromIf=mscFrNniDlciFrmFromIf, mscFrNniCaEgCirPoolAvailBwIndex=mscFrNniCaEgCirPoolAvailBwIndex, mscFrNniDlciVcCalledNpi=mscFrNniDlciVcCalledNpi, mscFrNniCaIngressMaximumEirOnlyCalls=mscFrNniCaIngressMaximumEirOnlyCalls, mscFrNniDlciDiscDeCongestedFromIf=mscFrNniDlciDiscDeCongestedFromIf, mscFrNniCaProvEntry=mscFrNniCaProvEntry, mscFrNniCustomerIdentifier=mscFrNniCustomerIdentifier, mscFrNniDnaOutDefaultPriority=mscFrNniDnaOutDefaultPriority, mscFrNniDlciVcSegmentSize=mscFrNniDlciVcSegmentSize, mscFrNniLmiPollingVerifTimeouts=mscFrNniLmiPollingVerifTimeouts, mscFrNniDlciLoopbackState=mscFrNniDlciLoopbackState, mscFrNniLmiIgnoreActiveBit=mscFrNniLmiIgnoreActiveBit, mscFrNniSigLastStateReceivedStatus=mscFrNniSigLastStateReceivedStatus, mscFrNniDlciTotalIngressSegFrm=mscFrNniDlciTotalIngressSegFrm, mscFrNniSigBandwidthNotAvailableTable=mscFrNniSigBandwidthNotAvailableTable, mscFrNniDlciSpUpdateBCI=mscFrNniDlciSpUpdateBCI, mscFrNniFramerNonOctetErrors=mscFrNniFramerNonOctetErrors, mscFrNniIfIndex=mscFrNniIfIndex, mscFrNniDlciVcIndex=mscFrNniDlciVcIndex, mscFrNniSigHighestPvcDlci=mscFrNniSigHighestPvcDlci, mscFrNniDlciUnknownStatus=mscFrNniDlciUnknownStatus, mscFrNniSigDefaultMaximumFrameSize=mscFrNniSigDefaultMaximumFrameSize, mscFrNniDlciVcSendSequenceNumber=mscFrNniDlciVcSendSequenceNumber, mscFrNniDlciSpRateEnforcement=mscFrNniDlciSpRateEnforcement, mscFrNniLtsIndex=mscFrNniLtsIndex, mscFrNniLts=mscFrNniLts, mscFrNniDlciVcComponentName=mscFrNniDlciVcComponentName, mscFrNniLtsPatOpStateTable=mscFrNniLtsPatOpStateTable, mscFrNniVFramerUsageState=mscFrNniVFramerUsageState, mscFrNniSigWindowSize=mscFrNniSigWindowSize, mscFrNniOperStatusEntry=mscFrNniOperStatusEntry, mscFrNniFramerStorageType=mscFrNniFramerStorageType, mscFrNniDnaIncAccess=mscFrNniDnaIncAccess, mscFrNniSigProvEntry=mscFrNniSigProvEntry, mscFrNniCaEgCirBpEntry=mscFrNniCaEgCirBpEntry, mscFrNniDlciDcComponentName=mscFrNniDlciDcComponentName, mscFrNniDlciRateAdaptation=mscFrNniDlciRateAdaptation, mscFrNniLtsStateTable=mscFrNniLtsStateTable, mscFrNniDlciExcessFrmFromIf=mscFrNniDlciExcessFrmFromIf, mscFrNniDlciVcMaxSubnetPktSize=mscFrNniDlciVcMaxSubnetPktSize, mscFrNniDlciSpParmsEntry=mscFrNniDlciSpParmsEntry, mscFrNniLmiNetworkSideEventHistory=mscFrNniLmiNetworkSideEventHistory, mscFrNniDlciLbRemoteFecnFrm=mscFrNniDlciLbRemoteFecnFrm, mscFrNniFramerOverruns=mscFrNniFramerOverruns, mscFrNniSigBandwidthNotAvailableEntry=mscFrNniSigBandwidthNotAvailableEntry, mscFrNniDlciBecnFrmSetByService=mscFrNniDlciBecnFrmSetByService, mscFrNniLmiSequenceErrors=mscFrNniLmiSequenceErrors, mscFrNniCaLinkRate=mscFrNniCaLinkRate, mscFrNniLmiParmsTable=mscFrNniLmiParmsTable, mscFrNniAdminState=mscFrNniAdminState, mscFrNniDlciEgressSpComponentName=mscFrNniDlciEgressSpComponentName, mscFrNniVFramerIndex=mscFrNniVFramerIndex, mscFrNniCaIngCirBPEntry=mscFrNniCaIngCirBPEntry, mscFrNniCaEgressCacTable=mscFrNniCaEgressCacTable, mscFrNniLtsPatRowStatus=mscFrNniLtsPatRowStatus, mscFrNniStandbyStatus=mscFrNniStandbyStatus, mscFrNniCaTpmComponentName=mscFrNniCaTpmComponentName)
