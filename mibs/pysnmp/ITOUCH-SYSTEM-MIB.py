#
# PySNMP MIB module ITOUCH-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ITOUCH-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:47:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
iTouch, DateTime, ChassisType, HardwareType, TypedAddress, AddressType = mibBuilder.importSymbols("ITOUCH-MIB", "iTouch", "DateTime", "ChassisType", "HardwareType", "TypedAddress", "AddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysLocation, = mibBuilder.importSymbols("SNMPv2-MIB", "sysLocation")
ObjectIdentity, Integer32, Counter32, TimeTicks, MibIdentifier, Unsigned32, Counter64, NotificationType, iso, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "Counter32", "TimeTicks", "MibIdentifier", "Unsigned32", "Counter64", "NotificationType", "iso", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 1))
sysIdent = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysIdent.setStatus('mandatory')
sysDefineMode = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permOnly", 1), ("operAndPerm", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDefineMode.setStatus('mandatory')
sysDateTime = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 3), DateTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDateTime.setStatus('mandatory')
sysTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeZone.setStatus('mandatory')
sysLoadSoftware = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLoadSoftware.setStatus('mandatory')
sysDump = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDump.setStatus('mandatory')
sysMaintenancePassword = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMaintenancePassword.setStatus('mandatory')
sysLocalName = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocalName.setStatus('mandatory')
sysSoftwareVersionType = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alpha", 1), ("beta", 2), ("production", 3), ("special", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSoftwareVersionType.setStatus('mandatory')
sysSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSoftwareVersion.setStatus('mandatory')
sysRomVersion = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysRomVersion.setStatus('mandatory')
sysHardwareType = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 12), HardwareType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysHardwareType.setStatus('mandatory')
sysHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysHardwareVersion.setStatus('mandatory')
sysChassisType = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 14), ChassisType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysChassisType.setStatus('mandatory')
sysChassisVersion = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysChassisVersion.setStatus('mandatory')
sysCrash = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCrash.setStatus('mandatory')
sysInitialize = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ready", 1), ("conditionalExecute", 2), ("unconditionalExecute", 3), ("cancel", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysInitialize.setStatus('mandatory')
sysInitializeDelay = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysInitializeDelay.setStatus('mandatory')
sysZeroAll = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysZeroAll.setStatus('mandatory')
sysZeroBase = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysZeroBase.setStatus('mandatory')
sysZeroBaseTime = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 21), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysZeroBaseTime.setStatus('mandatory')
sysLoaderName = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLoaderName.setStatus('mandatory')
sysLoaderAddressType = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 23), AddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLoaderAddressType.setStatus('mandatory')
sysLoaderAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 24), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLoaderAddress.setStatus('mandatory')
sysDumperAddressType = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 25), AddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDumperAddressType.setStatus('mandatory')
sysDumperAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDumperAddress.setStatus('mandatory')
sysResourceLacks = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysResourceLacks.setStatus('mandatory')
sysChassisState = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("noFault", 2), ("fault", 3), ("loop", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysChassisState.setStatus('mandatory')
sysChassisFaultTransitions = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysChassisFaultTransitions.setStatus('mandatory')
sysResourceNumber = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysResourceNumber.setStatus('mandatory')
sysFeatureNumber = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFeatureNumber.setStatus('mandatory')
resTable = MibTable((1, 3, 6, 1, 4, 1, 33, 1, 32), )
if mibBuilder.loadTexts: resTable.setStatus('mandatory')
resEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 1, 32, 1), ).setIndexNames((0, "ITOUCH-SYSTEM-MIB", "resType"))
if mibBuilder.loadTexts: resEntry.setStatus('mandatory')
resType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("cpuPercent", 1), ("memoryPercent", 2), ("process", 3), ("timer", 4), ("packetBuffer", 5), ("ipcMessage", 6), ("textPool", 7), ("freeMemory", 8), ("globalMemoryPercent", 9), ("phivDecnetRouteCache", 10), ("ipFilterCache", 11), ("ipRouteCache", 12), ("ipxRouteCache", 13), ("ipPolicyTable", 14), ("ipFilterTable", 15), ("phivDecnetPolicyTable", 16), ("phivDecnetFilterTable", 17), ("appleRouteCache", 18), ("appleFilterTable", 19), ("repeaterPortAccessTable", 20), ("repeaterPortNameTable", 21), ("ipxRipTable", 22), ("ipxSapTable", 23), ("repeaterPortSecurityTable", 24), ("bridgeFilterTable", 25), ("bridgeStaticFilters", 26), ("bridgeSourceFilters", 27), ("bridgeLearnedFilters", 28), ("bridgeInactiveFilters", 29), ("bridgeProtocolFilters", 30), ("latAnnouncementCompressionTable", 31), ("packetCompressionTable", 32), ("ipFragmentTable", 33), ("repeaterRedundancyTable", 34), ("repeaterGlobalSecurityTable", 35), ("packetHeaders", 36), ("interfaces", 37), ("circuits", 38), ("ipIgmpTable", 39), ("ipMulticastTable", 40), ("ipRouteTable", 41), ("ipxRipFilterTable", 42), ("ipxSapFilterTable", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resType.setStatus('mandatory')
resCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resCurrent.setStatus('mandatory')
resWorst = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resWorst.setStatus('mandatory')
resAdminMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resAdminMaximum.setStatus('mandatory')
resLacks = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resLacks.setStatus('mandatory')
resLackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 6), DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resLackTime.setStatus('mandatory')
resOperMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resOperMaximum.setStatus('mandatory')
featTable = MibTable((1, 3, 6, 1, 4, 1, 33, 1, 33), )
if mibBuilder.loadTexts: featTable.setStatus('mandatory')
featEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 1, 33, 1), ).setIndexNames((0, "ITOUCH-SYSTEM-MIB", "featType"))
if mibBuilder.loadTexts: featEntry.setStatus('mandatory')
featType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 33, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))).clone(namedValues=NamedValues(("help", 1), ("snmp", 2), ("xremote", 3), ("tn3270", 4), ("menu", 5), ("multisessions", 6), ("lat", 7), ("eventLog", 8), ("internetSecurity", 9), ("slip", 10), ("scriptServer", 11), ("kerberos", 12), ("telnet", 13), ("rlogin", 14), ("allPorts", 15), ("xprinter", 16), ("x25", 17), ("frameRelay", 18), ("ipMulticastSpecial", 19), ("changeEthernetAddress", 20), ("expanded800", 21), ("lpDaemon", 22), ("ppp", 23), ("unixCommands", 24), ("arap", 25), ("fingerDaemon", 26), ("routeDaemon", 27), ("rwhoDaemon", 28), ("securID", 29), ("apd", 30), ("ipxRouting", 31), ("ipxFiltering", 32), ("ipFiltering", 33), ("kerberos5", 34), ("radius", 35), ("enviromentalManager", 36), ("terminalServer", 37), ("ssh", 38), ("tl1", 39)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: featType.setStatus('mandatory')
featStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("locked", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: featStatus.setStatus('mandatory')
featKey = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 33, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: featKey.setStatus('mandatory')
xBootControl = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 1, 34))
bootControlLoadInternetFile = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadInternetFile.setStatus('deprecated')
bootControlLoadInternetServer = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadInternetServer.setStatus('deprecated')
bootControlLoadInternetGateway = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadInternetGateway.setStatus('deprecated')
bootControlLoadBootpTftp = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadBootpTftp.setStatus('deprecated')
bootControlLoadTftpDirect = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadTftpDirect.setStatus('deprecated')
bootControlLoadLocal = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadLocal.setStatus('deprecated')
bootControlLoadMop = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadMop.setStatus('deprecated')
bootControlLoadProprietary = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadProprietary.setStatus('deprecated')
bootControlLoadRarpTftp = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlLoadRarpTftp.setStatus('deprecated')
bootControlDumpBootpTftp = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlDumpBootpTftp.setStatus('deprecated')
bootControlDumpLocal = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlDumpLocal.setStatus('deprecated')
bootControlDumpMop = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlDumpMop.setStatus('deprecated')
bootControlDumpProprietary = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlDumpProprietary.setStatus('deprecated')
bootControlDumpRarpTftp = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlDumpRarpTftp.setStatus('deprecated')
bootControlParamBootpTftp = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlParamBootpTftp.setStatus('deprecated')
bootControlParamLocal = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlParamLocal.setStatus('deprecated')
bootControlParamMop = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlParamMop.setStatus('deprecated')
bootControlParamProprietary = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlParamProprietary.setStatus('deprecated')
bootControlParamRarpTftp = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 34, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootControlParamRarpTftp.setStatus('deprecated')
sysInstalledMemory = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInstalledMemory.setStatus('mandatory')
sysTemperatureLevel = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("normal", 2), ("high", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTemperatureLevel.setStatus('mandatory')
bootRecordTable = MibTable((1, 3, 6, 1, 4, 1, 33, 1, 37), )
if mibBuilder.loadTexts: bootRecordTable.setStatus('mandatory')
bootRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 1, 37, 1), ).setIndexNames((0, "ITOUCH-SYSTEM-MIB", "bootRecordIndex"))
if mibBuilder.loadTexts: bootRecordEntry.setStatus('mandatory')
bootRecordIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootRecordIndex.setStatus('mandatory')
bootRecordLoadInternetFile = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadInternetFile.setStatus('mandatory')
bootRecordLoadInternetServer = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadInternetServer.setStatus('mandatory')
bootRecordLoadInternetGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadInternetGateway.setStatus('mandatory')
bootRecordLoadBootpTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadBootpTftp.setStatus('mandatory')
bootRecordLoadTftpDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadTftpDirect.setStatus('mandatory')
bootRecordLoadLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadLocal.setStatus('mandatory')
bootRecordLoadMop = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadMop.setStatus('mandatory')
bootRecordLoadProprietary = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadProprietary.setStatus('mandatory')
bootRecordLoadRarpTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordLoadRarpTftp.setStatus('mandatory')
bootRecordDumpBootpTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordDumpBootpTftp.setStatus('mandatory')
bootRecordDumpLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordDumpLocal.setStatus('mandatory')
bootRecordDumpMop = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordDumpMop.setStatus('mandatory')
bootRecordDumpProprietary = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordDumpProprietary.setStatus('mandatory')
bootRecordDumpRarpTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordDumpRarpTftp.setStatus('mandatory')
bootRecordParamBootpTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordParamBootpTftp.setStatus('mandatory')
bootRecordParamLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordParamLocal.setStatus('mandatory')
bootRecordParamMop = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordParamMop.setStatus('mandatory')
bootRecordParamProprietary = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordParamProprietary.setStatus('mandatory')
bootRecordParamRarpTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordParamRarpTftp.setStatus('mandatory')
bootRecordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordStatus.setStatus('mandatory')
bootRecordMopFile = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordMopFile.setStatus('mandatory')
bootRecordInternetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 23), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordInternetAddress.setStatus('mandatory')
bootRecordParamTftpDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordParamTftpDirect.setStatus('mandatory')
bootRecordInternetDelimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1)).clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootRecordInternetDelimiter.setStatus('mandatory')
sysLastAgentError = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("noError", 1), ("tooBig", 2), ("noSuchName", 3), ("badValue", 4), ("readOnly", 5), ("genErr", 6), ("badCommunity", 7), ("badVersion", 8), ("badType", 9), ("badClient", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLastAgentError.setStatus('mandatory')
sysRcpMulticast = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRcpMulticast.setStatus('mandatory')
sysTimeServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 41), TypedAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTimeServerAddress.setStatus('mandatory')
sysTimeServerConfiguredAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 46), TypedAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeServerConfiguredAddress.setStatus('mandatory')
sysTimeServerConfiguredStatus = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("required", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeServerConfiguredStatus.setStatus('mandatory')
sysBootRecordOverrideDefinedAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysBootRecordOverrideDefinedAddress.setStatus('mandatory')
sysBootRecordMessageEnable = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysBootRecordMessageEnable.setStatus('mandatory')
sysBootRecordParamDefaults = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysBootRecordParamDefaults.setStatus('mandatory')
sysLoginAuthFailureTrapType = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 1), ("loginPassword", 2), ("pap", 3), ("chap", 4), ("kerberos", 5), ("securId", 6), ("radius", 7), ("privilegedPassword", 8), ("limitedPrivilegedPassword", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLoginAuthFailureTrapType.setStatus('mandatory')
sysLoginAuthTrapIdentity = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 81), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLoginAuthTrapIdentity.setStatus('mandatory')
sysLocalScriptServer = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocalScriptServer.setStatus('mandatory')
sysInReachManagementSecurityStatus = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysInReachManagementSecurityStatus.setStatus('mandatory')
sysProductName = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 84), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysProductName.setStatus('mandatory')
sysModemPresent = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noModem", 1), ("modem", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysModemPresent.setStatus('mandatory')
sysCauseAction = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCauseAction.setStatus('mandatory')
sysWebServerConfigAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 87), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysWebServerConfigAdminStatus.setStatus('mandatory')
sysTl1SourceIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 88), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTl1SourceIdentifier.setStatus('mandatory')
sysInitializeDelayParameter = MibScalar((1, 3, 6, 1, 4, 1, 33, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysInitializeDelayParameter.setStatus('mandatory')
resourceLack = NotificationType((1, 3, 6, 1, 4, 1, 33, 1) + (0,1)).setObjects(("ITOUCH-SYSTEM-MIB", "resType"))
resourceFailure = NotificationType((1, 3, 6, 1, 4, 1, 33) + (0,9)).setObjects(("ITOUCH-SYSTEM-MIB", "resType"), ("SNMPv2-MIB", "sysLocation"))
sysLoginAuthenticationFailure = NotificationType((1, 3, 6, 1, 4, 1, 33) + (0,28)).setObjects(("ITOUCH-SYSTEM-MIB", "sysLoginAuthFailureTrapType"), ("ITOUCH-SYSTEM-MIB", "sysLoginAuthTrapIdentity"))
mibBuilder.exportSymbols("ITOUCH-SYSTEM-MIB", bootRecordLoadRarpTftp=bootRecordLoadRarpTftp, sysZeroBaseTime=sysZeroBaseTime, sysChassisVersion=sysChassisVersion, sysLoginAuthFailureTrapType=sysLoginAuthFailureTrapType, sysIdent=sysIdent, featTable=featTable, bootRecordLoadInternetGateway=bootRecordLoadInternetGateway, bootRecordParamLocal=bootRecordParamLocal, bootRecordEntry=bootRecordEntry, bootRecordParamTftpDirect=bootRecordParamTftpDirect, sysTimeServerConfiguredStatus=sysTimeServerConfiguredStatus, xSystem=xSystem, sysProductName=sysProductName, bootControlLoadProprietary=bootControlLoadProprietary, sysChassisState=sysChassisState, sysTimeZone=sysTimeZone, sysRomVersion=sysRomVersion, bootRecordInternetDelimiter=bootRecordInternetDelimiter, sysResourceLacks=sysResourceLacks, sysTl1SourceIdentifier=sysTl1SourceIdentifier, featKey=featKey, sysDateTime=sysDateTime, bootControlLoadRarpTftp=bootControlLoadRarpTftp, sysZeroAll=sysZeroAll, sysChassisType=sysChassisType, resLacks=resLacks, bootControlLoadBootpTftp=bootControlLoadBootpTftp, bootControlDumpRarpTftp=bootControlDumpRarpTftp, sysWebServerConfigAdminStatus=sysWebServerConfigAdminStatus, bootRecordTable=bootRecordTable, sysDumperAddressType=sysDumperAddressType, bootRecordDumpMop=bootRecordDumpMop, bootRecordDumpBootpTftp=bootRecordDumpBootpTftp, sysTemperatureLevel=sysTemperatureLevel, sysInReachManagementSecurityStatus=sysInReachManagementSecurityStatus, sysDefineMode=sysDefineMode, sysLocalScriptServer=sysLocalScriptServer, bootControlDumpBootpTftp=bootControlDumpBootpTftp, bootControlLoadMop=bootControlLoadMop, sysTimeServerConfiguredAddress=sysTimeServerConfiguredAddress, bootRecordLoadBootpTftp=bootRecordLoadBootpTftp, sysLoginAuthTrapIdentity=sysLoginAuthTrapIdentity, sysCauseAction=sysCauseAction, bootControlParamLocal=bootControlParamLocal, sysDumperAddress=sysDumperAddress, bootControlLoadInternetServer=bootControlLoadInternetServer, bootRecordLoadTftpDirect=bootRecordLoadTftpDirect, bootControlParamMop=bootControlParamMop, bootControlLoadTftpDirect=bootControlLoadTftpDirect, sysSoftwareVersion=sysSoftwareVersion, sysBootRecordParamDefaults=sysBootRecordParamDefaults, bootRecordLoadProprietary=bootRecordLoadProprietary, sysBootRecordOverrideDefinedAddress=sysBootRecordOverrideDefinedAddress, bootControlLoadLocal=bootControlLoadLocal, bootControlParamBootpTftp=bootControlParamBootpTftp, resTable=resTable, sysMaintenancePassword=sysMaintenancePassword, resType=resType, bootRecordParamMop=bootRecordParamMop, xBootControl=xBootControl, sysHardwareType=sysHardwareType, sysModemPresent=sysModemPresent, featEntry=featEntry, bootRecordLoadInternetServer=bootRecordLoadInternetServer, bootControlDumpMop=bootControlDumpMop, resLackTime=resLackTime, resourceFailure=resourceFailure, featStatus=featStatus, resAdminMaximum=resAdminMaximum, bootRecordParamBootpTftp=bootRecordParamBootpTftp, sysRcpMulticast=sysRcpMulticast, bootRecordLoadLocal=bootRecordLoadLocal, bootRecordDumpRarpTftp=bootRecordDumpRarpTftp, bootRecordMopFile=bootRecordMopFile, bootControlParamRarpTftp=bootControlParamRarpTftp, resCurrent=resCurrent, sysCrash=sysCrash, sysLoaderName=sysLoaderName, sysLoginAuthenticationFailure=sysLoginAuthenticationFailure, resOperMaximum=resOperMaximum, featType=featType, sysInitialize=sysInitialize, sysDump=sysDump, bootRecordDumpProprietary=bootRecordDumpProprietary, sysInstalledMemory=sysInstalledMemory, sysLocalName=sysLocalName, bootControlLoadInternetGateway=bootControlLoadInternetGateway, sysLastAgentError=sysLastAgentError, sysResourceNumber=sysResourceNumber, bootRecordLoadInternetFile=bootRecordLoadInternetFile, sysTimeServerAddress=sysTimeServerAddress, sysLoaderAddress=sysLoaderAddress, sysLoadSoftware=sysLoadSoftware, sysHardwareVersion=sysHardwareVersion, bootRecordParamRarpTftp=bootRecordParamRarpTftp, sysSoftwareVersionType=sysSoftwareVersionType, sysLoaderAddressType=sysLoaderAddressType, bootRecordStatus=bootRecordStatus, resEntry=resEntry, bootRecordDumpLocal=bootRecordDumpLocal, sysZeroBase=sysZeroBase, sysBootRecordMessageEnable=sysBootRecordMessageEnable, bootRecordInternetAddress=bootRecordInternetAddress, resourceLack=resourceLack, bootControlDumpLocal=bootControlDumpLocal, resWorst=resWorst, bootRecordParamProprietary=bootRecordParamProprietary, bootControlParamProprietary=bootControlParamProprietary, bootRecordLoadMop=bootRecordLoadMop, bootControlDumpProprietary=bootControlDumpProprietary, bootControlLoadInternetFile=bootControlLoadInternetFile, sysInitializeDelay=sysInitializeDelay, sysChassisFaultTransitions=sysChassisFaultTransitions, sysFeatureNumber=sysFeatureNumber, sysInitializeDelayParameter=sysInitializeDelayParameter, bootRecordIndex=bootRecordIndex)
