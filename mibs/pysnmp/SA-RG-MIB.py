#
# PySNMP MIB module SA-RG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SA-RG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:51:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddressIPv6, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddressIPv6", "InetPortNumber", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, enterprises, ObjectIdentity, Unsigned32, iso, NotificationType, ModuleIdentity, IpAddress, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "enterprises", "ObjectIdentity", "Unsigned32", "iso", "NotificationType", "ModuleIdentity", "IpAddress", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "TimeTicks", "Counter32")
DisplayString, RowStatus, DateAndTime, MacAddress, TextualConvention, PhysAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "DateAndTime", "MacAddress", "TextualConvention", "PhysAddress", "TruthValue")
sa = MibIdentifier((1, 3, 6, 1, 4, 1, 1429))
saModules = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79))
saRg = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 79, 2))
saRg.setRevisions(('2015-05-26 00:00',))
if mibBuilder.loadTexts: saRg.setLastUpdated('201505260000Z')
if mibBuilder.loadTexts: saRg.setOrganization('Cisco Systems, Inc.')
class SaRgTimeZone(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62))
    namedValues = NamedValues(("gmtMinusTwelveEniwetokKwajalein", 1), ("gmtMinusElevenMidwayIslandSamoa", 2), ("gmtMinusTenHawaii", 3), ("gmtMinusNineAlaska", 4), ("gmtMinusEightPacificTimeCanadaTijuana", 5), ("gmtMinusSevenArizona", 6), ("gmtMinusSevenMountainTimeCanada", 7), ("gmtMinusSixCentralAmerica", 8), ("gmtMinusSixCentralTimeCanada", 9), ("gmtMinusSixMexicoCity", 10), ("gmtMinusSixSaskatchewan", 11), ("gmtMinusFiveBogotaLimaQuito", 12), ("gmtMinusFiveEasternTimeCanada", 13), ("gmtMinusFiveIndianaEast", 14), ("gmtMinusFourAtlanticTimeCanada", 15), ("gmtMinusFourCaracasLaPaz", 16), ("gmtMinusFourSantiago", 17), ("gmtMinusThreeThirtyNewfoundland", 18), ("gmtMinusThreeBrasilia", 19), ("gmtMinusThreeBuenosAiresGeorgetown", 20), ("gmtMinusThreeGreenland", 21), ("gmtMinusTwoMid-Atlantic", 22), ("gmtMinusOneAzores", 23), ("gmtMinusOneCapeVerdeIs", 24), ("gmtZeroCasablancaMonrovia", 25), ("gmtZeroDublinEdinburghLisbonLondon", 26), ("gmtPlusOneAmsterdamBerlinRomeStockholmVienna", 27), ("gmtPlusOneBelgradeBratislavaBudapestLjubljanaPrague", 28), ("gmtPlusOneBrusselsCopenhagenMadridParis", 29), ("gmtPlusOneSarajevoSkopjeSofijaVilniusWarsawZagreb", 30), ("gmtPlusOneWestCentralAfrica", 31), ("gmtPlusTwoAthensIstanbilMinsk", 32), ("gmtPlusTwoBucharest", 33), ("gmtPlusTwoHelsinkiRigaTallinn", 34), ("gmtPlusTwoJerusalem", 35), ("gmtPlusThreeBaghdad", 36), ("gmtPlusThreeMoscowStPetersburgVolgograd", 37), ("gmtPlusThreeNairobi", 38), ("gmtPlusThreeThirtyTehran", 39), ("gmtPlusFourAbuDhabiMuscat", 40), ("gmtPlusFourThirtyKabul", 41), ("gmtPlusFiveEkaterinburg", 42), ("gmtPlusFiveThirtyCalcuttaChennaiMumbaiNewDelhi", 43), ("gmtPlusFiveFourtyFiveKathmandu", 44), ("gmtPlusSixAlmatyNovosibirsk", 45), ("gmtPlusSixAstanaDhaka", 46), ("gmtPlusSixThirtyRangoon", 47), ("gmtPlusSevenBangkokHanoiJakarta", 48), ("gmtPlusSevenKrasnoyarsk", 49), ("gmtPlusEightBeijingChongqingHongKongUrumqi", 50), ("gmtPlusEightIrkustkUlaanBataar", 51), ("gmtPlusEightKualaLumpurSingapore", 52), ("gmtPlusEightTaipei", 53), ("gmtPlusNineOsakaSapporoTokyo", 54), ("gmtPlusNineSeoul", 55), ("gmtPlusNineThirtyAdelaide", 56), ("gmtPlusTenBrisbane", 57), ("gmtPlusTenVladivostok", 58), ("gmtPlusElevenMagadanSolomonIsNewCaledonia", 59), ("gmtPlusTwelveAucklandWellington", 60), ("gmtPlusTwelveFiji", 61), ("gmtPlusThirteenNukuAlofa", 62))

saRgDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1))
saRgDeviceBase = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1))
saRgDeviceMode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5))).clone(namedValues=NamedValues(("disable", 0), ("multiSsid", 1), ("ipv4", 3), ("ipv6", 4), ("dualstack", 5))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceMode.setStatus('current')
saRgDeviceResetDefaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceResetDefaultEnable.setStatus('current')
saRgDeviceRemoteWebAccessPort = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1, 4), InetPortNumber().clone(8080)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceRemoteWebAccessPort.setStatus('current')
saRgDeviceLanLanIsolation = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceLanLanIsolation.setStatus('current')
saRgDeviceLanWlanIsolation = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceLanWlanIsolation.setStatus('current')
saRgDeviceIpv6Trans = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("dslite", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIpv6Trans.setStatus('current')
saRgDeviceIpv6Passthrough = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceIpv6Passthrough.setStatus('current')
saRgDeviceFactoryReset = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 1, 1002), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("false", 0), ("routerAndWifi", 1), ("routerOnly", 2), ("wifi", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceFactoryReset.setStatus('current')
saRgDeviceTimeSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 5))
saRgDeviceTimeSetupNtpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceTimeSetupNtpEnabled.setStatus('current')
saRgDeviceTimeSetupNtpServerTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 5, 2), )
if mibBuilder.loadTexts: saRgDeviceTimeSetupNtpServerTable.setStatus('current')
saRgDeviceTimeSetupNtpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 5, 2, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgDeviceTimeSetupNtpServerIndex"))
if mibBuilder.loadTexts: saRgDeviceTimeSetupNtpServerEntry.setStatus('current')
saRgDeviceTimeSetupNtpServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: saRgDeviceTimeSetupNtpServerIndex.setStatus('current')
saRgDeviceTimeSetupNtpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 5, 2, 1, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceTimeSetupNtpServerAddress.setStatus('current')
saRgDeviceTimeSetupZone = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 5, 3), SaRgTimeZone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceTimeSetupZone.setStatus('current')
saRgDeviceTimeSetupDst = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDeviceTimeSetupDst.setStatus('current')
saRgDeviceIanaContent = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7))
saRgDeviceIanaIAID = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIanaIAID.setStatus('current')
saRgDeviceIanaT1 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIanaT1.setStatus('current')
saRgDeviceIanaT2 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIanaT2.setStatus('current')
saRgDeviceIanaTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 4), )
if mibBuilder.loadTexts: saRgDeviceIanaTable.setStatus('current')
saRgDeviceIanaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 4, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgDeviceIanaIndex"))
if mibBuilder.loadTexts: saRgDeviceIanaEntry.setStatus('current')
saRgDeviceIanaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: saRgDeviceIanaIndex.setStatus('current')
saRgDeviceIanaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 4, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIanaValue.setStatus('current')
saRgDeviceIanaPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIanaPreferredLifetime.setStatus('current')
saRgDeviceIanaValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 7, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIanaValidLifetime.setStatus('current')
saRgDeviceIapdContent = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8))
saRgDeviceIapdIAID = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIapdIAID.setStatus('current')
saRgDeviceIapdT1 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIapdT1.setStatus('current')
saRgDeviceIapdT2 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIapdT2.setStatus('current')
saRgDeviceIapdTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 4), )
if mibBuilder.loadTexts: saRgDeviceIapdTable.setStatus('current')
saRgDeviceIapdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 4, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgDeviceIapdIndex"))
if mibBuilder.loadTexts: saRgDeviceIapdEntry.setStatus('current')
saRgDeviceIapdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: saRgDeviceIapdIndex.setStatus('current')
saRgDeviceIapdPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIapdPreferredLifetime.setStatus('current')
saRgDeviceIapdValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIapdValidLifetime.setStatus('current')
saRgDeviceIapdPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIapdPrefixLength.setStatus('current')
saRgDeviceIapdPrefixValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 1, 8, 4, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDeviceIapdPrefixValue.setStatus('current')
saRgDot11 = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2))
saRgDot11MgmtBase = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 1))
saRgDot11OnOffPushButtonTime = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 11))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11OnOffPushButtonTime.setStatus('current')
saRgDot11Bss = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2))
saRgDot11BssTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1), )
if mibBuilder.loadTexts: saRgDot11BssTable.setStatus('current')
saRgDot11BssEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saRgDot11BssEntry.setStatus('current')
saRgDot11BssId = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 1), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDot11BssId.setStatus('current')
saRgDot11BssEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("enableOnline", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssEnable.setStatus('current')
saRgDot11BssSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssSsid.setStatus('current')
saRgDot11BssSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 7, 8))).clone(namedValues=NamedValues(("disabled", 0), ("wep", 1), ("wpaPsk", 2), ("wpa2Psk", 3), ("wpaEnterprise", 4), ("wpa2Enterprise", 5), ("wpaWpa2Psk", 7), ("wpaWpa2Enterprise", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssSecurityMode.setStatus('current')
saRgDot11BssClosedNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssClosedNetwork.setStatus('current')
saRgDot11BssAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("allowAny", 0), ("allowList", 1), ("denyList", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssAccessMode.setStatus('current')
saRgDot11BssMaxNumSta = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssMaxNumSta.setStatus('current')
saRgDot11BssUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDot11BssUserStatus.setStatus('current')
saRgDot11BssApIsolation = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssApIsolation.setStatus('current')
saRgDot11BssSecSsidTrafficPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("acBk", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDot11BssSecSsidTrafficPriority.setStatus('current')
saRgDot11BssRejectPriSsidSta = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDot11BssRejectPriSsidSta.setStatus('current')
saRgDot11BssPrimary = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 3))
saRgDot11BssPrimarySsidType = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("mac6char", 1), ("mac6char-prefix", 2), ("mac4char-prefix", 3), ("prefix-force", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssPrimarySsidType.setStatus('current')
saRgDot11BssPrimarySsidPrefix = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 2, 3, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11BssPrimarySsidPrefix.setStatus('current')
saRgDot11Privacy = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3))
saRgDot11WpaTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 1), )
if mibBuilder.loadTexts: saRgDot11WpaTable.setStatus('current')
saRgDot11WpaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saRgDot11WpaEntry.setStatus('current')
saRgDot11WpaAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("tkip", 0), ("aes", 1), ("tkipPlusAes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11WpaAlgorithm.setStatus('current')
saRgDot11WpaPreSharedKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11WpaPreSharedKey.setStatus('current')
saRgDot11WpaGroupRekeyInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 1, 1, 3), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11WpaGroupRekeyInterval.setStatus('current')
saRgDot11RadiusTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 2), )
if mibBuilder.loadTexts: saRgDot11RadiusTable.setStatus('current')
saRgDot11RadiusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saRgDot11RadiusEntry.setStatus('current')
saRgDot11RadiusAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 2, 1, 1), InetAddressType().clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11RadiusAddressType.setStatus('current')
saRgDot11RadiusAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 2, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11RadiusAddress.setStatus('current')
saRgDot11RadiusPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 2, 1, 3), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11RadiusPort.setStatus('current')
saRgDot11RadiusKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11RadiusKey.setStatus('current')
saRgDot11RadiusReAuthInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 2, 1, 5), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11RadiusReAuthInterval.setStatus('current')
saRgDot11WepTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 3), )
if mibBuilder.loadTexts: saRgDot11WepTable.setStatus('current')
saRgDot11WepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saRgDot11WepEntry.setStatus('current')
saRgDot11WepDefaultKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11WepDefaultKey.setStatus('current')
saRgDot11WepEncryptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("wep64", 0), ("wep128", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11WepEncryptionMode.setStatus('current')
saRgDot11WepPassPhrase = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11WepPassPhrase.setStatus('current')
saRgDot11Wep64BitKeyTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 4), )
if mibBuilder.loadTexts: saRgDot11Wep64BitKeyTable.setStatus('current')
saRgDot11Wep64BitKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SA-RG-MIB", "saRgDot11Wep64BitKeyIndex"))
if mibBuilder.loadTexts: saRgDot11Wep64BitKeyEntry.setStatus('current')
saRgDot11Wep64BitKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: saRgDot11Wep64BitKeyIndex.setStatus('current')
saRgDot11Wep64BitKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11Wep64BitKeyValue.setStatus('current')
saRgDot11Wep128BitKeyTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 5), )
if mibBuilder.loadTexts: saRgDot11Wep128BitKeyTable.setStatus('current')
saRgDot11Wep128BitKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SA-RG-MIB", "saRgDot11Wep128BitKeyIndex"))
if mibBuilder.loadTexts: saRgDot11Wep128BitKeyEntry.setStatus('current')
saRgDot11Wep128BitKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: saRgDot11Wep128BitKeyIndex.setStatus('current')
saRgDot11Wep128BitKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(13, 13)).setFixedLength(13)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11Wep128BitKeyValue.setStatus('current')
saRgDot11PrivacyWps = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 6))
saRgDot11PrivacyWpsPushButtonTime = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 3, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11PrivacyWpsPushButtonTime.setStatus('current')
saRgDot11Client = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 4))
saRgDot11ClientTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 4, 2), )
if mibBuilder.loadTexts: saRgDot11ClientTable.setStatus('current')
saRgDot11ClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SA-RG-MIB", "saRgDot11ClientIndex"))
if mibBuilder.loadTexts: saRgDot11ClientEntry.setStatus('current')
saRgDot11ClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: saRgDot11ClientIndex.setStatus('current')
saRgDot11ClientStation = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 4, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDot11ClientStation.setStatus('current')
saRgDot11ExtMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 6))
saRgDot11ExtMgmtTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 6, 1), )
if mibBuilder.loadTexts: saRgDot11ExtMgmtTable.setStatus('current')
saRgDot11ExtMgmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saRgDot11ExtMgmtEntry.setStatus('current')
saRgDot11ExtMbssUserControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 8), ValueRangeConstraint(65536, 16711680), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11ExtMbssUserControl.setStatus('current')
saRgDot11ExtMbssUseNonvol = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 6, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11ExtMbssUseNonvol.setStatus('current')
saRgDot11ExtMbssAdminControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 8), ValueRangeConstraint(65536, 16711680), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11ExtMbssAdminControl.setStatus('current')
saRgDot11ExtActualChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 6, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgDot11ExtActualChannel.setStatus('current')
saRgDot11ApplySettings = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 2, 1001), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDot11ApplySettings.setStatus('current')
saRgIpMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3))
saRgIpMgmtLanTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2), )
if mibBuilder.loadTexts: saRgIpMgmtLanTable.setStatus('current')
saRgIpMgmtLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saRgIpMgmtLanEntry.setStatus('current')
saRgIpMgmtLanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("bridge", 1), ("router", 2), ("l2tpv2-client", 3), ("mixed", 4), ("vlan", 5))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanMode.setStatus('current')
saRgIpMgmtLanNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanNetwork.setStatus('current')
saRgIpMgmtLanNetworksAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("default", 0), ("anyPrivateClass", 1), ("anyClass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanNetworksAllow.setStatus('current')
saRgIpMgmtLanSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 5), IpAddress().clone(hexValue="ffffff00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanSubnetMask.setStatus('current')
saRgIpMgmtLanGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanGateway.setStatus('current')
saRgIpMgmtLanDhcpServer = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanDhcpServer.setStatus('current')
saRgIpMgmtLanNapt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanNapt.setStatus('current')
saRgIpMgmtLanTypeOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanTypeOfService.setStatus('current')
saRgIpMgmtLanDhcp125Option = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("addSsidName", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanDhcp125Option.setStatus('current')
saRgIpMgmtLanUpnp = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanUpnp.setStatus('current')
saRgIpMgmtLanDhcpOption43 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 2, 1, 14), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanDhcpOption43.setStatus('current')
saRgIpMgmtLanDhcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 3), )
if mibBuilder.loadTexts: saRgIpMgmtLanDhcpServerTable.setStatus('current')
saRgIpMgmtLanDhcpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saRgIpMgmtLanDhcpServerEntry.setStatus('current')
saRgIpMgmtLanDhcpServerPoolStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanDhcpServerPoolStart.setStatus('current')
saRgIpMgmtLanDhcpServerPoolEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanDhcpServerPoolEnd.setStatus('current')
saRgIpMgmtLanDhcpServerLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 3, 1, 5), Unsigned32().clone(3600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanDhcpServerLeaseTime.setStatus('current')
saRgIpMgmtLanAddrTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4), )
if mibBuilder.loadTexts: saRgIpMgmtLanAddrTable.setStatus('current')
saRgIpMgmtLanAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SA-RG-MIB", "saRgIpMgmtLanAddrIndex"))
if mibBuilder.loadTexts: saRgIpMgmtLanAddrEntry.setStatus('current')
saRgIpMgmtLanAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: saRgIpMgmtLanAddrIndex.setStatus('current')
saRgIpMgmtLanAddrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgIpMgmtLanAddrIp.setStatus('current')
saRgIpMgmtLanAddrPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgIpMgmtLanAddrPhysAddr.setStatus('current')
saRgIpMgmtLanAddrLeaseCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgIpMgmtLanAddrLeaseCreateTime.setStatus('current')
saRgIpMgmtLanAddrLeaseExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgIpMgmtLanAddrLeaseExpireTime.setStatus('current')
saRgIpMgmtLanAddrHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgIpMgmtLanAddrHostName.setStatus('current')
saRgIpMgmtLanAddrClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgIpMgmtLanAddrClientId.setStatus('current')
saRgIpMgmtLanAddrInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 4, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgIpMgmtLanAddrInterface.setStatus('current')
saRgIpMgmtDnsServerTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 5), )
if mibBuilder.loadTexts: saRgIpMgmtDnsServerTable.setStatus('current')
saRgIpMgmtDnsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 5, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgIpMgmtDnsServerOrder"))
if mibBuilder.loadTexts: saRgIpMgmtDnsServerEntry.setStatus('current')
saRgIpMgmtDnsServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtDnsServerIp.setStatus('current')
saRgIpMgmtDhcpFixedIpTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 6), )
if mibBuilder.loadTexts: saRgIpMgmtDhcpFixedIpTable.setStatus('current')
saRgIpMgmtDhcpFixedIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SA-RG-MIB", "saRgIpMgmtDhcpFixedIpIndex"))
if mibBuilder.loadTexts: saRgIpMgmtDhcpFixedIpEntry.setStatus('current')
saRgIpMgmtDhcpFixedIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: saRgIpMgmtDhcpFixedIpIndex.setStatus('current')
saRgIpMgmtDhcpFixedIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 6, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtDhcpFixedIpRowStatus.setStatus('current')
saRgIpMgmtDhcpFixedIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtDhcpFixedIpAddress.setStatus('current')
saRgIpMgmtDhcpFixedIpPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 6, 1, 5), PhysAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saRgIpMgmtDhcpFixedIpPhysAddr.setStatus('current')
saRgIpMgmtDhcpFixedIpHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 6, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtDhcpFixedIpHostName.setStatus('current')
saRgIpMgmtStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 8), )
if mibBuilder.loadTexts: saRgIpMgmtStaticRouteTable.setStatus('current')
saRgIpMgmtStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 8, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgIpMgmtStaticRouteIndex"))
if mibBuilder.loadTexts: saRgIpMgmtStaticRouteEntry.setStatus('current')
saRgIpMgmtStaticRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: saRgIpMgmtStaticRouteIndex.setStatus('current')
saRgIpMgmtStaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 8, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtStaticRouteRowStatus.setStatus('current')
saRgIpMgmtStaticRouteNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 8, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtStaticRouteNetwork.setStatus('current')
saRgIpMgmtStaticRouteSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 8, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtStaticRouteSubnetMask.setStatus('current')
saRgIpMgmtStaticRouteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 8, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtStaticRouteGateway.setStatus('current')
saRgIpMgmtStaticRouteRipAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 8, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtStaticRouteRipAdvertise.setStatus('current')
saRgIpMgmtWanAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9))
saRgIpMgmtWanAddrBase = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 1))
saRgIpMgmtWanMode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dhcp", 1), ("static", 2), ("dualIp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtWanMode.setStatus('current')
saRgIpMgmtWanMtu = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtWanMtu.setStatus('current')
saRgIpMgmtWanTtl = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('hops').setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtWanTtl.setStatus('current')
saRgIpMgmtWanAddrStatic = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 3))
saRgIpMgmtWanStaticNetwork = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtWanStaticNetwork.setStatus('current')
saRgIpMgmtWanStaticSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtWanStaticSubnetMask.setStatus('current')
saRgIpMgmtWanStaticGateway = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtWanStaticGateway.setStatus('current')
saRgIpMgmtWanAddrDualIp = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 4))
saRgIpMgmtWanDualIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 4, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgIpMgmtWanDualIpAddr.setStatus('current')
saRgIpMgmtWanDualIpRipAdvertised = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 9, 4, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtWanDualIpRipAdvertised.setStatus('current')
saRgIpMgmtLanExtraSubnetTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 11), )
if mibBuilder.loadTexts: saRgIpMgmtLanExtraSubnetTable.setStatus('current')
saRgIpMgmtLanExtraSubnetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: saRgIpMgmtLanExtraSubnetEntry.setStatus('current')
saRgIpMgmtLanExtraSubnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("secondSubnet", 1), ("thirdSubnet", 2), ("fourthSubnet", 3))))
if mibBuilder.loadTexts: saRgIpMgmtLanExtraSubnetIndex.setStatus('current')
saRgIpMgmtLanExtraSubnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 11, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanExtraSubnetRowStatus.setStatus('current')
saRgIpMgmtLanExtraSubnetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 11, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanExtraSubnetIpAddress.setStatus('current')
saRgIpMgmtLanExtraSubnetSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 11, 1, 4), IpAddress().clone(hexValue="ffffff00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanExtraSubnetSubnetMask.setStatus('current')
saRgIpMgmtLanExtraSubnetGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 11, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanExtraSubnetGateway.setStatus('current')
saRgIpMgmtLanPortControl = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 13))
saRgIpMgmtLanPortControlTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 13, 1), )
if mibBuilder.loadTexts: saRgIpMgmtLanPortControlTable.setStatus('current')
saRgIpMgmtLanPortControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 13, 1, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgIpMgmtLanPortControlIndex"))
if mibBuilder.loadTexts: saRgIpMgmtLanPortControlEntry.setStatus('current')
saRgIpMgmtLanPortControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: saRgIpMgmtLanPortControlIndex.setStatus('current')
saRgIpMgmtLanPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridge", 1), ("router", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtLanPortMode.setStatus('current')
saRgIpMgmtApplySettings = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 3, 1001), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgIpMgmtApplySettings.setStatus('current')
saRgFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4))
saRgFirewallReport = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4))
saRgFirewallReportEventTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 1), )
if mibBuilder.loadTexts: saRgFirewallReportEventTable.setStatus('current')
saRgFirewallReportEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 1, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgFirewallReportEventIndex"))
if mibBuilder.loadTexts: saRgFirewallReportEventEntry.setStatus('current')
saRgFirewallReportEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: saRgFirewallReportEventIndex.setStatus('current')
saRgFirewallReportEventDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgFirewallReportEventDescription.setStatus('current')
saRgFirewallReportEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgFirewallReportEventCount.setStatus('current')
saRgFirewallReportEventLastOccurance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgFirewallReportEventLastOccurance.setStatus('current')
saRgFirewallReportEventTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgFirewallReportEventTarget.setStatus('current')
saRgFirewallReportEventSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saRgFirewallReportEventSource.setStatus('current')
saRgFirewallReportMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 2))
saRgFirewallReportMgmtClearLog = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 2, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallReportMgmtClearLog.setStatus('current')
saRgFirewallReportEmailLogNow = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 2, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallReportEmailLogNow.setStatus('current')
saRgFirewallReportEmail = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 3))
saRgFirewallReportEmailEnable = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallReportEmailEnable.setStatus('current')
saRgFirewallReportEmailAddress = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 3, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallReportEmailAddress.setStatus('current')
saRgFirewallReportEmailSmtpServer = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 3, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallReportEmailSmtpServer.setStatus('current')
saRgFirewallReportEmailUsername = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 3, 4), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallReportEmailUsername.setStatus('current')
saRgFirewallReportEmailPassword = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 4, 3, 5), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallReportEmailPassword.setStatus('current')
saRgFirewallRules = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5))
saRgFirewallIpFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 1), )
if mibBuilder.loadTexts: saRgFirewallIpFilterTable.setStatus('current')
saRgFirewallIpFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 1, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgFirewallIpFilterIndex"))
if mibBuilder.loadTexts: saRgFirewallIpFilterEntry.setStatus('current')
saRgFirewallIpFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: saRgFirewallIpFilterIndex.setStatus('current')
saRgFirewallIpFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 1, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallIpFilterRowStatus.setStatus('current')
saRgFirewallIpFilterAddressStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallIpFilterAddressStart.setStatus('current')
saRgFirewallIpFilterAddressEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallIpFilterAddressEnd.setStatus('current')
saRgFirewallPortFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 2), )
if mibBuilder.loadTexts: saRgFirewallPortFilterTable.setStatus('current')
saRgFirewallPortFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 2, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgFirewallPortFilterIndex"))
if mibBuilder.loadTexts: saRgFirewallPortFilterEntry.setStatus('current')
saRgFirewallPortFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: saRgFirewallPortFilterIndex.setStatus('current')
saRgFirewallPortFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 2, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFilterRowStatus.setStatus('current')
saRgFirewallPortFilterPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 2, 1, 5), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFilterPortStart.setStatus('current')
saRgFirewallPortFilterPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 2, 1, 6), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFilterPortEnd.setStatus('current')
saRgFirewallPortFilterProto = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2), ("udpTcp", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFilterProto.setStatus('current')
saRgFirewallMacFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 3), )
if mibBuilder.loadTexts: saRgFirewallMacFilterTable.setStatus('current')
saRgFirewallMacFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 3, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgFirewallMacFilterIndex"))
if mibBuilder.loadTexts: saRgFirewallMacFilterEntry.setStatus('current')
saRgFirewallMacFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: saRgFirewallMacFilterIndex.setStatus('current')
saRgFirewallMacFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 3, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallMacFilterRowStatus.setStatus('current')
saRgFirewallMacFilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 3, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallMacFilterAddress.setStatus('current')
saRgFirewallMacFilterEnable = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallMacFilterEnable.setStatus('current')
saRgFirewallMacFilterMode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("permit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallMacFilterMode.setStatus('current')
saRgFirewallPortFwdTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6), )
if mibBuilder.loadTexts: saRgFirewallPortFwdTable.setStatus('current')
saRgFirewallPortFwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgFirewallPortFwdIndex"))
if mibBuilder.loadTexts: saRgFirewallPortFwdEntry.setStatus('current')
saRgFirewallPortFwdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: saRgFirewallPortFwdIndex.setStatus('current')
saRgFirewallPortFwdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFwdRowStatus.setStatus('current')
saRgFirewallPortFwdToAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFwdToAddress.setStatus('current')
saRgFirewallPortFwdPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1, 4), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFwdPortStart.setStatus('current')
saRgFirewallPortFwdPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1, 5), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFwdPortEnd.setStatus('current')
saRgFirewallPortFwdProto = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2), ("udpTcp", 3))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFwdProto.setStatus('current')
saRgFirewallPortFwdExternalPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1, 8), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFwdExternalPortStart.setStatus('current')
saRgFirewallPortFwdExternalPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 6, 1, 9), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortFwdExternalPortEnd.setStatus('current')
saRgFirewallPortTrigTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7), )
if mibBuilder.loadTexts: saRgFirewallPortTrigTable.setStatus('current')
saRgFirewallPortTrigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7, 1), ).setIndexNames((0, "SA-RG-MIB", "saRgFirewallPortTrigIndex"))
if mibBuilder.loadTexts: saRgFirewallPortTrigEntry.setStatus('current')
saRgFirewallPortTrigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: saRgFirewallPortTrigIndex.setStatus('current')
saRgFirewallPortTrigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortTrigRowStatus.setStatus('current')
saRgFirewallPortTrigTriggerPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7, 1, 3), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortTrigTriggerPortStart.setStatus('current')
saRgFirewallPortTrigTriggerPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7, 1, 4), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortTrigTriggerPortEnd.setStatus('current')
saRgFirewallPortTrigTargetPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7, 1, 5), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortTrigTargetPortStart.setStatus('current')
saRgFirewallPortTrigTargetPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7, 1, 6), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortTrigTargetPortEnd.setStatus('current')
saRgFirewallPortTrigProto = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2), ("udpTcp", 3))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallPortTrigProto.setStatus('current')
saRgFirewallApplySettings = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 4, 1001), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgFirewallApplySettings.setStatus('current')
saRgDslite = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 79, 2, 12))
saRgDsliteOption = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("option-64", 1))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDsliteOption.setStatus('current')
saRgDsliteAftrName = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 12, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDsliteAftrName.setStatus('current')
saRgDsliteAftrAddress = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 12, 3), InetAddressIPv6()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDsliteAftrAddress.setStatus('current')
saRgDsliteTcpMssClamping = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 12, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1420))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDsliteTcpMssClamping.setStatus('current')
saRgDsliteApplySettings = MibScalar((1, 3, 6, 1, 4, 1, 1429, 79, 2, 12, 1001), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saRgDsliteApplySettings.setStatus('current')
mibBuilder.exportSymbols("SA-RG-MIB", saRgDot11WepPassPhrase=saRgDot11WepPassPhrase, saRgDsliteTcpMssClamping=saRgDsliteTcpMssClamping, saRgDot11WpaAlgorithm=saRgDot11WpaAlgorithm, saRgIpMgmtDnsServerIp=saRgIpMgmtDnsServerIp, saRgDot11PrivacyWpsPushButtonTime=saRgDot11PrivacyWpsPushButtonTime, saRgFirewallPortFilterProto=saRgFirewallPortFilterProto, saRgIpMgmtLanDhcpServerPoolStart=saRgIpMgmtLanDhcpServerPoolStart, saRgFirewallReportEmailLogNow=saRgFirewallReportEmailLogNow, saRgIpMgmtLanAddrEntry=saRgIpMgmtLanAddrEntry, saRgDeviceIapdContent=saRgDeviceIapdContent, saRgIpMgmtWanMode=saRgIpMgmtWanMode, PYSNMP_MODULE_ID=saRg, saRgDeviceTimeSetupDst=saRgDeviceTimeSetupDst, SaRgTimeZone=SaRgTimeZone, saRgFirewallReport=saRgFirewallReport, saRgDot11WpaEntry=saRgDot11WpaEntry, saRgIpMgmtWanTtl=saRgIpMgmtWanTtl, saRgFirewallPortTrigProto=saRgFirewallPortTrigProto, saRgFirewallReportEventDescription=saRgFirewallReportEventDescription, saRgFirewallPortFilterPortEnd=saRgFirewallPortFilterPortEnd, saRgDot11WepTable=saRgDot11WepTable, saRgDot11Bss=saRgDot11Bss, saRgIpMgmtLanAddrIndex=saRgIpMgmtLanAddrIndex, saRgIpMgmtStaticRouteRipAdvertise=saRgIpMgmtStaticRouteRipAdvertise, saRgDeviceTimeSetupNtpServerTable=saRgDeviceTimeSetupNtpServerTable, saRgIpMgmtLanAddrPhysAddr=saRgIpMgmtLanAddrPhysAddr, saRgDeviceLanWlanIsolation=saRgDeviceLanWlanIsolation, saRgIpMgmtLanNetworksAllow=saRgIpMgmtLanNetworksAllow, saRgIpMgmtDhcpFixedIpAddress=saRgIpMgmtDhcpFixedIpAddress, saRgIpMgmtApplySettings=saRgIpMgmtApplySettings, saRgDeviceIapdT2=saRgDeviceIapdT2, saRgDot11RadiusAddressType=saRgDot11RadiusAddressType, saRgIpMgmtDhcpFixedIpHostName=saRgIpMgmtDhcpFixedIpHostName, saRgDot11BssMaxNumSta=saRgDot11BssMaxNumSta, saRgDot11Wep128BitKeyEntry=saRgDot11Wep128BitKeyEntry, saRgDot11ClientIndex=saRgDot11ClientIndex, saRgDot11BssId=saRgDot11BssId, saRgIpMgmtWanAddrBase=saRgIpMgmtWanAddrBase, saRgIpMgmtLanDhcpServer=saRgIpMgmtLanDhcpServer, saRgIpMgmtLanExtraSubnetEntry=saRgIpMgmtLanExtraSubnetEntry, saRgIpMgmtLanMode=saRgIpMgmtLanMode, saRgFirewallIpFilterRowStatus=saRgFirewallIpFilterRowStatus, saRgFirewallPortFwdTable=saRgFirewallPortFwdTable, saRgDot11ExtMgmtEntry=saRgDot11ExtMgmtEntry, saRgDot11ExtMbssUseNonvol=saRgDot11ExtMbssUseNonvol, saRgIpMgmtWanAddrStatic=saRgIpMgmtWanAddrStatic, saRgFirewallPortFilterEntry=saRgFirewallPortFilterEntry, saRgDot11BssEnable=saRgDot11BssEnable, saRgDeviceLanLanIsolation=saRgDeviceLanLanIsolation, saRgIpMgmtLanDhcpServerLeaseTime=saRgIpMgmtLanDhcpServerLeaseTime, saRgFirewallPortFwdProto=saRgFirewallPortFwdProto, saRgDeviceIapdIAID=saRgDeviceIapdIAID, saRgDot11ApplySettings=saRgDot11ApplySettings, saRgIpMgmtLanDhcpServerEntry=saRgIpMgmtLanDhcpServerEntry, saRgIpMgmtLanPortControlTable=saRgIpMgmtLanPortControlTable, saRgDeviceIapdTable=saRgDeviceIapdTable, saRgFirewallReportEmailAddress=saRgFirewallReportEmailAddress, saRgDeviceIpv6Passthrough=saRgDeviceIpv6Passthrough, saRgIpMgmtWanAddr=saRgIpMgmtWanAddr, saRgDot11ExtMgmtTable=saRgDot11ExtMgmtTable, saRgFirewallMacFilterMode=saRgFirewallMacFilterMode, saRgDeviceIpv6Trans=saRgDeviceIpv6Trans, saRgFirewallPortTrigIndex=saRgFirewallPortTrigIndex, saRgDeviceIapdPreferredLifetime=saRgDeviceIapdPreferredLifetime, saRgFirewallIpFilterTable=saRgFirewallIpFilterTable, saRgIpMgmtStaticRouteGateway=saRgIpMgmtStaticRouteGateway, saRgDeviceTimeSetupNtpServerIndex=saRgDeviceTimeSetupNtpServerIndex, saRg=saRg, saRgDsliteAftrAddress=saRgDsliteAftrAddress, saRgDeviceIanaTable=saRgDeviceIanaTable, saRgIpMgmtStaticRouteNetwork=saRgIpMgmtStaticRouteNetwork, saRgIpMgmtWanStaticSubnetMask=saRgIpMgmtWanStaticSubnetMask, saRgFirewallPortFwdRowStatus=saRgFirewallPortFwdRowStatus, saRgFirewallPortTrigTriggerPortEnd=saRgFirewallPortTrigTriggerPortEnd, saRgDevice=saRgDevice, saRgIpMgmtLanExtraSubnetIndex=saRgIpMgmtLanExtraSubnetIndex, saRgFirewallPortTrigTargetPortStart=saRgFirewallPortTrigTargetPortStart, saRgDot11PrivacyWps=saRgDot11PrivacyWps, saRgDot11BssAccessMode=saRgDot11BssAccessMode, saRgDot11WepDefaultKey=saRgDot11WepDefaultKey, saRgDot11ExtMbssUserControl=saRgDot11ExtMbssUserControl, saRgIpMgmtLanAddrInterface=saRgIpMgmtLanAddrInterface, saRgFirewallPortTrigTargetPortEnd=saRgFirewallPortTrigTargetPortEnd, saRgDsliteAftrName=saRgDsliteAftrName, saRgDot11RadiusEntry=saRgDot11RadiusEntry, saRgFirewallReportEventTable=saRgFirewallReportEventTable, saRgFirewallApplySettings=saRgFirewallApplySettings, saRgDot11RadiusPort=saRgDot11RadiusPort, saRgIpMgmtLanPortControl=saRgIpMgmtLanPortControl, saRgFirewallPortFwdPortEnd=saRgFirewallPortFwdPortEnd, saRgFirewallPortFwdIndex=saRgFirewallPortFwdIndex, saRgIpMgmtStaticRouteTable=saRgIpMgmtStaticRouteTable, saRgFirewallReportMgmtClearLog=saRgFirewallReportMgmtClearLog, saRgDeviceFactoryReset=saRgDeviceFactoryReset, saRgIpMgmtStaticRouteIndex=saRgIpMgmtStaticRouteIndex, saRgDot11ExtMgmt=saRgDot11ExtMgmt, saRgDot11WepEntry=saRgDot11WepEntry, saRgIpMgmtLanTypeOfService=saRgIpMgmtLanTypeOfService, saRgIpMgmtLanAddrHostName=saRgIpMgmtLanAddrHostName, saRgDot11BssEntry=saRgDot11BssEntry, saRgFirewallIpFilterEntry=saRgFirewallIpFilterEntry, saRgFirewallMacFilterAddress=saRgFirewallMacFilterAddress, saRgDot11WpaPreSharedKey=saRgDot11WpaPreSharedKey, saRgFirewallPortTrigEntry=saRgFirewallPortTrigEntry, saRgDot11BssTable=saRgDot11BssTable, saRgFirewall=saRgFirewall, sa=sa, saRgFirewallReportEmailEnable=saRgFirewallReportEmailEnable, saRgDot11MgmtBase=saRgDot11MgmtBase, saRgDot11Wep64BitKeyValue=saRgDot11Wep64BitKeyValue, saRgDot11ExtMbssAdminControl=saRgDot11ExtMbssAdminControl, saRgIpMgmtLanNetwork=saRgIpMgmtLanNetwork, saRgIpMgmtLanDhcpServerTable=saRgIpMgmtLanDhcpServerTable, saRgIpMgmtWanDualIpRipAdvertised=saRgIpMgmtWanDualIpRipAdvertised, saRgFirewallIpFilterAddressStart=saRgFirewallIpFilterAddressStart, saRgFirewallReportEmailUsername=saRgFirewallReportEmailUsername, saRgFirewallMacFilterRowStatus=saRgFirewallMacFilterRowStatus, saRgIpMgmt=saRgIpMgmt, saRgDeviceBase=saRgDeviceBase, saRgDeviceTimeSetup=saRgDeviceTimeSetup, saRgDot11WpaTable=saRgDot11WpaTable, saRgIpMgmtLanAddrLeaseCreateTime=saRgIpMgmtLanAddrLeaseCreateTime, saRgIpMgmtStaticRouteRowStatus=saRgIpMgmtStaticRouteRowStatus, saRgFirewallReportEventLastOccurance=saRgFirewallReportEventLastOccurance, saRgFirewallPortFwdPortStart=saRgFirewallPortFwdPortStart, saRgFirewallReportEmail=saRgFirewallReportEmail, saRgIpMgmtWanAddrDualIp=saRgIpMgmtWanAddrDualIp, saRgFirewallMacFilterEnable=saRgFirewallMacFilterEnable, saRgDot11BssPrimarySsidType=saRgDot11BssPrimarySsidType, saRgDot11Wep64BitKeyEntry=saRgDot11Wep64BitKeyEntry, saRgIpMgmtLanDhcp125Option=saRgIpMgmtLanDhcp125Option, saRgIpMgmtStaticRouteEntry=saRgIpMgmtStaticRouteEntry, saRgFirewallPortFilterRowStatus=saRgFirewallPortFilterRowStatus, saRgFirewallMacFilterTable=saRgFirewallMacFilterTable, saRgFirewallIpFilterIndex=saRgFirewallIpFilterIndex, saRgDeviceIanaT1=saRgDeviceIanaT1, saRgDeviceIapdPrefixValue=saRgDeviceIapdPrefixValue, saRgDeviceRemoteWebAccessPort=saRgDeviceRemoteWebAccessPort, saRgDsliteApplySettings=saRgDsliteApplySettings, saRgDot11BssSecSsidTrafficPriority=saRgDot11BssSecSsidTrafficPriority, saRgFirewallPortTrigTriggerPortStart=saRgFirewallPortTrigTriggerPortStart, saRgIpMgmtWanStaticNetwork=saRgIpMgmtWanStaticNetwork, saRgDot11BssUserStatus=saRgDot11BssUserStatus, saRgIpMgmtDhcpFixedIpEntry=saRgIpMgmtDhcpFixedIpEntry, saRgIpMgmtWanMtu=saRgIpMgmtWanMtu, saRgDot11Client=saRgDot11Client, saRgIpMgmtLanEntry=saRgIpMgmtLanEntry, saRgFirewallReportEventTarget=saRgFirewallReportEventTarget, saRgDot11WpaGroupRekeyInterval=saRgDot11WpaGroupRekeyInterval, saRgIpMgmtLanExtraSubnetTable=saRgIpMgmtLanExtraSubnetTable, saRgDeviceTimeSetupNtpServerEntry=saRgDeviceTimeSetupNtpServerEntry, saRgFirewallReportEventCount=saRgFirewallReportEventCount, saRgIpMgmtLanPortControlEntry=saRgIpMgmtLanPortControlEntry, saRgDot11Wep64BitKeyTable=saRgDot11Wep64BitKeyTable, saRgDeviceIanaValue=saRgDeviceIanaValue, saRgDeviceIapdEntry=saRgDeviceIapdEntry, saRgIpMgmtDhcpFixedIpIndex=saRgIpMgmtDhcpFixedIpIndex, saRgDot11BssSecurityMode=saRgDot11BssSecurityMode, saRgDeviceResetDefaultEnable=saRgDeviceResetDefaultEnable, saRgDeviceIanaEntry=saRgDeviceIanaEntry, saRgDeviceIapdValidLifetime=saRgDeviceIapdValidLifetime, saRgDot11ClientTable=saRgDot11ClientTable, saRgIpMgmtWanDualIpAddr=saRgIpMgmtWanDualIpAddr, saRgFirewallReportEmailSmtpServer=saRgFirewallReportEmailSmtpServer, saRgFirewallPortFilterTable=saRgFirewallPortFilterTable, saRgIpMgmtLanPortControlIndex=saRgIpMgmtLanPortControlIndex, saRgDsliteOption=saRgDsliteOption, saRgDot11=saRgDot11, saRgIpMgmtLanAddrTable=saRgIpMgmtLanAddrTable, saRgFirewallReportEventSource=saRgFirewallReportEventSource, saRgDslite=saRgDslite, saRgIpMgmtLanAddrIp=saRgIpMgmtLanAddrIp, saRgIpMgmtLanSubnetMask=saRgIpMgmtLanSubnetMask, saRgIpMgmtDhcpFixedIpRowStatus=saRgIpMgmtDhcpFixedIpRowStatus, saRgDeviceIanaIndex=saRgDeviceIanaIndex, saRgDeviceTimeSetupZone=saRgDeviceTimeSetupZone, saRgDot11Wep128BitKeyTable=saRgDot11Wep128BitKeyTable, saRgDot11ClientStation=saRgDot11ClientStation, saRgFirewallPortTrigTable=saRgFirewallPortTrigTable, saRgDot11BssSsid=saRgDot11BssSsid, saRgIpMgmtDhcpFixedIpTable=saRgIpMgmtDhcpFixedIpTable, saRgIpMgmtWanStaticGateway=saRgIpMgmtWanStaticGateway, saRgIpMgmtLanExtraSubnetSubnetMask=saRgIpMgmtLanExtraSubnetSubnetMask, saRgIpMgmtLanAddrClientId=saRgIpMgmtLanAddrClientId, saRgDot11BssRejectPriSsidSta=saRgDot11BssRejectPriSsidSta, saRgFirewallPortFwdEntry=saRgFirewallPortFwdEntry, saModules=saModules, saRgDeviceIapdIndex=saRgDeviceIapdIndex, saRgIpMgmtStaticRouteSubnetMask=saRgIpMgmtStaticRouteSubnetMask, saRgFirewallReportEventIndex=saRgFirewallReportEventIndex, saRgIpMgmtLanDhcpServerPoolEnd=saRgIpMgmtLanDhcpServerPoolEnd, saRgIpMgmtLanPortMode=saRgIpMgmtLanPortMode, saRgDot11BssClosedNetwork=saRgDot11BssClosedNetwork, saRgFirewallReportMgmt=saRgFirewallReportMgmt, saRgDeviceTimeSetupNtpServerAddress=saRgDeviceTimeSetupNtpServerAddress, saRgDeviceIanaPreferredLifetime=saRgDeviceIanaPreferredLifetime, saRgDot11Privacy=saRgDot11Privacy, saRgDot11RadiusTable=saRgDot11RadiusTable, saRgDot11Wep128BitKeyIndex=saRgDot11Wep128BitKeyIndex, saRgDeviceTimeSetupNtpEnabled=saRgDeviceTimeSetupNtpEnabled, saRgDeviceIanaIAID=saRgDeviceIanaIAID, saRgDot11RadiusReAuthInterval=saRgDot11RadiusReAuthInterval, saRgIpMgmtDhcpFixedIpPhysAddr=saRgIpMgmtDhcpFixedIpPhysAddr, saRgIpMgmtLanExtraSubnetRowStatus=saRgIpMgmtLanExtraSubnetRowStatus, saRgDot11ClientEntry=saRgDot11ClientEntry, saRgDot11Wep128BitKeyValue=saRgDot11Wep128BitKeyValue, saRgFirewallMacFilterEntry=saRgFirewallMacFilterEntry, saRgDot11BssPrimarySsidPrefix=saRgDot11BssPrimarySsidPrefix, saRgDot11RadiusAddress=saRgDot11RadiusAddress, saRgDot11RadiusKey=saRgDot11RadiusKey, saRgDot11WepEncryptionMode=saRgDot11WepEncryptionMode, saRgIpMgmtLanUpnp=saRgIpMgmtLanUpnp, saRgIpMgmtLanGateway=saRgIpMgmtLanGateway, saRgDeviceIanaT2=saRgDeviceIanaT2, saRgIpMgmtDnsServerTable=saRgIpMgmtDnsServerTable, saRgDot11BssPrimary=saRgDot11BssPrimary, saRgIpMgmtLanTable=saRgIpMgmtLanTable, saRgFirewallMacFilterIndex=saRgFirewallMacFilterIndex, saRgFirewallPortFilterIndex=saRgFirewallPortFilterIndex, saRgIpMgmtLanExtraSubnetIpAddress=saRgIpMgmtLanExtraSubnetIpAddress, saRgFirewallRules=saRgFirewallRules, saRgFirewallIpFilterAddressEnd=saRgFirewallIpFilterAddressEnd, saRgFirewallPortFwdToAddress=saRgFirewallPortFwdToAddress, saRgDeviceIapdPrefixLength=saRgDeviceIapdPrefixLength, saRgDeviceIanaValidLifetime=saRgDeviceIanaValidLifetime, saRgFirewallPortTrigRowStatus=saRgFirewallPortTrigRowStatus, saRgFirewallReportEventEntry=saRgFirewallReportEventEntry, saRgIpMgmtLanAddrLeaseExpireTime=saRgIpMgmtLanAddrLeaseExpireTime, saRgDot11ExtActualChannel=saRgDot11ExtActualChannel, saRgDot11OnOffPushButtonTime=saRgDot11OnOffPushButtonTime, saRgDeviceIanaContent=saRgDeviceIanaContent, saRgFirewallReportEmailPassword=saRgFirewallReportEmailPassword, saRgFirewallPortFwdExternalPortStart=saRgFirewallPortFwdExternalPortStart, saRgIpMgmtLanNapt=saRgIpMgmtLanNapt, saRgIpMgmtLanDhcpOption43=saRgIpMgmtLanDhcpOption43, saRgFirewallPortFwdExternalPortEnd=saRgFirewallPortFwdExternalPortEnd, saRgDot11Wep64BitKeyIndex=saRgDot11Wep64BitKeyIndex, saRgDeviceMode=saRgDeviceMode, saRgIpMgmtDnsServerEntry=saRgIpMgmtDnsServerEntry, saRgIpMgmtLanExtraSubnetGateway=saRgIpMgmtLanExtraSubnetGateway, saRgDeviceIapdT1=saRgDeviceIapdT1, saRgDot11BssApIsolation=saRgDot11BssApIsolation, saRgFirewallPortFilterPortStart=saRgFirewallPortFilterPortStart)
