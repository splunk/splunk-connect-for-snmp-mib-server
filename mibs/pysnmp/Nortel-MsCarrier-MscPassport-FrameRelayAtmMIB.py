#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, DisplayString, Counter32, Gauge32, StorageType, RowPointer, RowStatus, Unsigned32, Integer32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "InterfaceIndex", "DisplayString", "Counter32", "Gauge32", "StorageType", "RowPointer", "RowStatus", "Unsigned32", "Integer32")
Unsigned64, IntegerSequence, AsciiString, Link, NonReplicated, PassportCounter64, HexString, EnterpriseDateAndTime = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Unsigned64", "IntegerSequence", "AsciiString", "Link", "NonReplicated", "PassportCounter64", "HexString", "EnterpriseDateAndTime")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, TimeTicks, MibIdentifier, Bits, Counter64, ModuleIdentity, iso, Unsigned32, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "TimeTicks", "MibIdentifier", "Bits", "Counter64", "ModuleIdentity", "iso", "Unsigned32", "IpAddress", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frameRelayAtmMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51))
mscFrAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72))
mscFrAtmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 1), )
if mibBuilder.loadTexts: mscFrAtmRowStatusTable.setStatus('mandatory')
mscFrAtmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"))
if mibBuilder.loadTexts: mscFrAtmRowStatusEntry.setStatus('mandatory')
mscFrAtmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmRowStatus.setStatus('mandatory')
mscFrAtmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmComponentName.setStatus('mandatory')
mscFrAtmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmStorageType.setStatus('mandatory')
mscFrAtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscFrAtmIndex.setStatus('mandatory')
mscFrAtmCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 10), )
if mibBuilder.loadTexts: mscFrAtmCidDataTable.setStatus('mandatory')
mscFrAtmCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"))
if mibBuilder.loadTexts: mscFrAtmCidDataEntry.setStatus('mandatory')
mscFrAtmCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCustomerIdentifier.setStatus('mandatory')
mscFrAtmStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11), )
if mibBuilder.loadTexts: mscFrAtmStateTable.setStatus('mandatory')
mscFrAtmStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"))
if mibBuilder.loadTexts: mscFrAtmStateEntry.setStatus('mandatory')
mscFrAtmAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmAdminState.setStatus('mandatory')
mscFrAtmOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmOperationalState.setStatus('mandatory')
mscFrAtmUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmUsageState.setStatus('mandatory')
mscFrAtmAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmAvailabilityStatus.setStatus('mandatory')
mscFrAtmProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmProceduralStatus.setStatus('mandatory')
mscFrAtmControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmControlStatus.setStatus('mandatory')
mscFrAtmAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmAlarmStatus.setStatus('mandatory')
mscFrAtmStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmStandbyStatus.setStatus('mandatory')
mscFrAtmUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmUnknownStatus.setStatus('mandatory')
mscFrAtmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 12), )
if mibBuilder.loadTexts: mscFrAtmStatsTable.setStatus('mandatory')
mscFrAtmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"))
if mibBuilder.loadTexts: mscFrAtmStatsEntry.setStatus('mandatory')
mscFrAtmLastUnknownDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLastUnknownDlci.setStatus('mandatory')
mscFrAtmUnknownDlciFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmUnknownDlciFramesFromIf.setStatus('mandatory')
mscFrAtmInvalidHeaderFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmInvalidHeaderFramesFromIf.setStatus('mandatory')
mscFrAtmIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 13), )
if mibBuilder.loadTexts: mscFrAtmIfEntryTable.setStatus('mandatory')
mscFrAtmIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"))
if mibBuilder.loadTexts: mscFrAtmIfEntryEntry.setStatus('mandatory')
mscFrAtmIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmIfAdminStatus.setStatus('mandatory')
mscFrAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 13, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmIfIndex.setStatus('mandatory')
mscFrAtmOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 14), )
if mibBuilder.loadTexts: mscFrAtmOperStatusTable.setStatus('mandatory')
mscFrAtmOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"))
if mibBuilder.loadTexts: mscFrAtmOperStatusEntry.setStatus('mandatory')
mscFrAtmSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmSnmpOperStatus.setStatus('mandatory')
mscFrAtmEmissionPriorityQsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 15), )
if mibBuilder.loadTexts: mscFrAtmEmissionPriorityQsTable.setStatus('mandatory')
mscFrAtmEmissionPriorityQsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"))
if mibBuilder.loadTexts: mscFrAtmEmissionPriorityQsEntry.setStatus('mandatory')
mscFrAtmNumberOfEmissionQs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmNumberOfEmissionQs.setStatus('mandatory')
mscFrAtmFrmToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 341), )
if mibBuilder.loadTexts: mscFrAtmFrmToIfByQueueTable.setStatus('mandatory')
mscFrAtmFrmToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 341, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmFrmToIfByQueueIndex"))
if mibBuilder.loadTexts: mscFrAtmFrmToIfByQueueEntry.setStatus('mandatory')
mscFrAtmFrmToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 341, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscFrAtmFrmToIfByQueueIndex.setStatus('mandatory')
mscFrAtmFrmToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 341, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFrmToIfByQueueValue.setStatus('mandatory')
mscFrAtmOctetToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 342), )
if mibBuilder.loadTexts: mscFrAtmOctetToIfByQueueTable.setStatus('mandatory')
mscFrAtmOctetToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 342, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmOctetToIfByQueueIndex"))
if mibBuilder.loadTexts: mscFrAtmOctetToIfByQueueEntry.setStatus('mandatory')
mscFrAtmOctetToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 342, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscFrAtmOctetToIfByQueueIndex.setStatus('mandatory')
mscFrAtmOctetToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 342, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmOctetToIfByQueueValue.setStatus('mandatory')
mscFrAtmFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2))
mscFrAtmFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 1), )
if mibBuilder.loadTexts: mscFrAtmFramerRowStatusTable.setStatus('mandatory')
mscFrAtmFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmFramerRowStatusEntry.setStatus('mandatory')
mscFrAtmFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmFramerRowStatus.setStatus('mandatory')
mscFrAtmFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerComponentName.setStatus('mandatory')
mscFrAtmFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerStorageType.setStatus('mandatory')
mscFrAtmFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmFramerIndex.setStatus('mandatory')
mscFrAtmFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 10), )
if mibBuilder.loadTexts: mscFrAtmFramerProvTable.setStatus('mandatory')
mscFrAtmFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmFramerProvEntry.setStatus('mandatory')
mscFrAtmFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmFramerInterfaceName.setStatus('mandatory')
mscFrAtmFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 11), )
if mibBuilder.loadTexts: mscFrAtmFramerLinkTable.setStatus('mandatory')
mscFrAtmFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmFramerLinkEntry.setStatus('mandatory')
mscFrAtmFramerDataInversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("off", 0), ("on", 16))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmFramerDataInversion.setStatus('mandatory')
mscFrAtmFramerFrameCrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crc16", 0), ("crc32", 1), ("noCrc", 2))).clone('crc16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmFramerFrameCrcType.setStatus('mandatory')
mscFrAtmFramerFlagsBetweenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmFramerFlagsBetweenFrames.setStatus('mandatory')
mscFrAtmFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 12), )
if mibBuilder.loadTexts: mscFrAtmFramerStateTable.setStatus('mandatory')
mscFrAtmFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmFramerStateEntry.setStatus('mandatory')
mscFrAtmFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerAdminState.setStatus('mandatory')
mscFrAtmFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerOperationalState.setStatus('mandatory')
mscFrAtmFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerUsageState.setStatus('mandatory')
mscFrAtmFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13), )
if mibBuilder.loadTexts: mscFrAtmFramerStatsTable.setStatus('mandatory')
mscFrAtmFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmFramerStatsEntry.setStatus('mandatory')
mscFrAtmFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerFrmToIf.setStatus('obsolete')
mscFrAtmFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerFrmFromIf.setStatus('obsolete')
mscFrAtmFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerOctetFromIf.setStatus('obsolete')
mscFrAtmFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerAborts.setStatus('mandatory')
mscFrAtmFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerCrcErrors.setStatus('mandatory')
mscFrAtmFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerLrcErrors.setStatus('mandatory')
mscFrAtmFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerNonOctetErrors.setStatus('mandatory')
mscFrAtmFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerOverruns.setStatus('mandatory')
mscFrAtmFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerUnderruns.setStatus('mandatory')
mscFrAtmFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerLargeFrmErrors.setStatus('mandatory')
mscFrAtmFramerFrmModeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerFrmModeErrors.setStatus('mandatory')
mscFrAtmFramerFrmToIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 14), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerFrmToIf64.setStatus('mandatory')
mscFrAtmFramerFrmFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 15), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerFrmFromIf64.setStatus('mandatory')
mscFrAtmFramerOctetFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 13, 1, 16), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerOctetFromIf64.setStatus('mandatory')
mscFrAtmFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 14), )
if mibBuilder.loadTexts: mscFrAtmFramerUtilTable.setStatus('mandatory')
mscFrAtmFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmFramerUtilEntry.setStatus('mandatory')
mscFrAtmFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerNormPrioLinkUtilToIf.setStatus('mandatory')
mscFrAtmFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 2, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
mscFrAtmLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3))
mscFrAtmLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 1), )
if mibBuilder.loadTexts: mscFrAtmLmiRowStatusTable.setStatus('mandatory')
mscFrAtmLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmLmiIndex"))
if mibBuilder.loadTexts: mscFrAtmLmiRowStatusEntry.setStatus('mandatory')
mscFrAtmLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiRowStatus.setStatus('mandatory')
mscFrAtmLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiComponentName.setStatus('mandatory')
mscFrAtmLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiStorageType.setStatus('mandatory')
mscFrAtmLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmLmiIndex.setStatus('mandatory')
mscFrAtmLmiParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10), )
if mibBuilder.loadTexts: mscFrAtmLmiParmsTable.setStatus('mandatory')
mscFrAtmLmiParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmLmiIndex"))
if mibBuilder.loadTexts: mscFrAtmLmiParmsEntry.setStatus('mandatory')
mscFrAtmLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("itu", 3), ("autoConfigure", 4))).clone('autoConfigure')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiProcedures.setStatus('mandatory')
mscFrAtmLmiAsyncStatusReport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiAsyncStatusReport.setStatus('mandatory')
mscFrAtmLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiErrorEventThreshold.setStatus('mandatory')
mscFrAtmLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiEventCount.setStatus('mandatory')
mscFrAtmLmiCheckPointTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiCheckPointTimer.setStatus('mandatory')
mscFrAtmLmiMessageCountTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiMessageCountTimer.setStatus('mandatory')
mscFrAtmLmiIgnoreActiveBit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiIgnoreActiveBit.setStatus('mandatory')
mscFrAtmLmiSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("network", 0), ("user", 1), ("both", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiSide.setStatus('mandatory')
mscFrAtmLmiPvcConfigParmsInFsr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiPvcConfigParmsInFsr.setStatus('mandatory')
mscFrAtmLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 11), )
if mibBuilder.loadTexts: mscFrAtmLmiStateTable.setStatus('mandatory')
mscFrAtmLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmLmiIndex"))
if mibBuilder.loadTexts: mscFrAtmLmiStateEntry.setStatus('mandatory')
mscFrAtmLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiAdminState.setStatus('mandatory')
mscFrAtmLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiOperationalState.setStatus('mandatory')
mscFrAtmLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiUsageState.setStatus('mandatory')
mscFrAtmLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 12), )
if mibBuilder.loadTexts: mscFrAtmLmiPsiTable.setStatus('mandatory')
mscFrAtmLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmLmiIndex"))
if mibBuilder.loadTexts: mscFrAtmLmiPsiEntry.setStatus('mandatory')
mscFrAtmLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1), ("configuring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiProtocolStatus.setStatus('mandatory')
mscFrAtmLmiOpProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("itu", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiOpProcedures.setStatus('mandatory')
mscFrAtmLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13), )
if mibBuilder.loadTexts: mscFrAtmLmiStatsTable.setStatus('mandatory')
mscFrAtmLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmLmiIndex"))
if mibBuilder.loadTexts: mscFrAtmLmiStatsEntry.setStatus('mandatory')
mscFrAtmLmiKeepAliveStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiKeepAliveStatusToIf.setStatus('mandatory')
mscFrAtmLmiFullStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiFullStatusToIf.setStatus('mandatory')
mscFrAtmLmiKeepAliveStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiKeepAliveStatusEnqFromIf.setStatus('mandatory')
mscFrAtmLmiFullStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiFullStatusEnqFromIf.setStatus('mandatory')
mscFrAtmLmiNetworkSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiNetworkSideEventHistory.setStatus('mandatory')
mscFrAtmLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiProtocolErrors.setStatus('mandatory')
mscFrAtmLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiUnexpectedIes.setStatus('mandatory')
mscFrAtmLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiSequenceErrors.setStatus('mandatory')
mscFrAtmLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiUnexpectedReports.setStatus('mandatory')
mscFrAtmLmiPollingVerifTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiPollingVerifTimeouts.setStatus('mandatory')
mscFrAtmLmiKeepAliveEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiKeepAliveEnqToIf.setStatus('mandatory')
mscFrAtmLmiFullStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiFullStatusEnqToIf.setStatus('mandatory')
mscFrAtmLmiUserSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiUserSideEventHistory.setStatus('mandatory')
mscFrAtmLmiStatusSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiStatusSequenceErrors.setStatus('mandatory')
mscFrAtmLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmLmiNoStatusReportCount.setStatus('mandatory')
mscFrAtmLmiUspParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 14), )
if mibBuilder.loadTexts: mscFrAtmLmiUspParmsTable.setStatus('mandatory')
mscFrAtmLmiUspParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmLmiIndex"))
if mibBuilder.loadTexts: mscFrAtmLmiUspParmsEntry.setStatus('mandatory')
mscFrAtmLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiFullStatusPollingCycles.setStatus('mandatory')
mscFrAtmLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 3, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmLmiLinkVerificationTimer.setStatus('mandatory')
mscFrAtmDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4))
mscFrAtmDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciRowStatusTable.setStatus('mandatory')
mscFrAtmDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciRowStatus.setStatus('mandatory')
mscFrAtmDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciComponentName.setStatus('mandatory')
mscFrAtmDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciStorageType.setStatus('mandatory')
mscFrAtmDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: mscFrAtmDlciIndex.setStatus('mandatory')
mscFrAtmDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciStateTable.setStatus('mandatory')
mscFrAtmDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciStateEntry.setStatus('mandatory')
mscFrAtmDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciAdminState.setStatus('mandatory')
mscFrAtmDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciOperationalState.setStatus('mandatory')
mscFrAtmDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciUsageState.setStatus('mandatory')
mscFrAtmDlciABitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 11), )
if mibBuilder.loadTexts: mscFrAtmDlciABitTable.setStatus('mandatory')
mscFrAtmDlciABitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciABitEntry.setStatus('mandatory')
mscFrAtmDlciABitStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciABitStatusToIf.setStatus('mandatory')
mscFrAtmDlciABitReasonToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("remoteLmiError", 3), ("localLinkDown", 4), ("remoteLinkDown", 5), ("pvcDown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciABitReasonToIf.setStatus('mandatory')
mscFrAtmDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciABitStatusFromIf.setStatus('mandatory')
mscFrAtmDlciABitReasonFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 6, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("localLinkDown", 4), ("pvcDown", 6), ("missingFromLmiReport", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciABitReasonFromIf.setStatus('mandatory')
mscFrAtmDlciSpOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12), )
if mibBuilder.loadTexts: mscFrAtmDlciSpOpTable.setStatus('mandatory')
mscFrAtmDlciSpOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSpOpEntry.setStatus('mandatory')
mscFrAtmDlciMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciMaximumFrameSize.setStatus('mandatory')
mscFrAtmDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciRateEnforcement.setStatus('mandatory')
mscFrAtmDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciCommittedInformationRate.setStatus('mandatory')
mscFrAtmDlciCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciCommittedBurstSize.setStatus('mandatory')
mscFrAtmDlciExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciExcessBurstSize.setStatus('mandatory')
mscFrAtmDlciMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciMeasurementInterval.setStatus('mandatory')
mscFrAtmDlciEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciEmissionPriorityToIf.setStatus('mandatory')
mscFrAtmDlciDlciType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("serviceInterworking", 0), ("networkInterworking", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDlciType.setStatus('mandatory')
mscFrAtmDlciTroubled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciTroubled.setStatus('mandatory')
mscFrAtmDlciTroubledReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notApplicable", 0), ("notAdmitted", 1))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciTroubledReason.setStatus('mandatory')
mscFrAtmDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13), )
if mibBuilder.loadTexts: mscFrAtmDlciStatsTable.setStatus('mandatory')
mscFrAtmDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciStatsEntry.setStatus('mandatory')
mscFrAtmDlciFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciFrmToIf.setStatus('mandatory')
mscFrAtmDlciFecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciFecnFrmToIf.setStatus('mandatory')
mscFrAtmDlciBecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciBecnFrmToIf.setStatus('mandatory')
mscFrAtmDlciDeFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDeFrmToIf.setStatus('mandatory')
mscFrAtmDlciDiscCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscCongestedToIf.setStatus('mandatory')
mscFrAtmDlciDiscDeCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscDeCongestedToIf.setStatus('mandatory')
mscFrAtmDlciFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciFrmFromIf.setStatus('mandatory')
mscFrAtmDlciFecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciFecnFrmFromIf.setStatus('mandatory')
mscFrAtmDlciBecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciBecnFrmFromIf.setStatus('mandatory')
mscFrAtmDlciEfciFrmFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciEfciFrmFromNetwork.setStatus('mandatory')
mscFrAtmDlciDeFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDeFrmFromIf.setStatus('mandatory')
mscFrAtmDlciExcessFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciExcessFrmFromIf.setStatus('mandatory')
mscFrAtmDlciDiscExcessFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscExcessFromIf.setStatus('mandatory')
mscFrAtmDlciDiscFrameAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscFrameAbit.setStatus('mandatory')
mscFrAtmDlciDiscCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscCongestedFromIf.setStatus('mandatory')
mscFrAtmDlciDiscDeCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscDeCongestedFromIf.setStatus('mandatory')
mscFrAtmDlciErrorShortFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciErrorShortFrmFromIf.setStatus('mandatory')
mscFrAtmDlciErrorLongFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciErrorLongFrmFromIf.setStatus('mandatory')
mscFrAtmDlciBecnFrmSetByService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciBecnFrmSetByService.setStatus('mandatory')
mscFrAtmDlciBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciBytesToIf.setStatus('mandatory')
mscFrAtmDlciDeBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDeBytesToIf.setStatus('mandatory')
mscFrAtmDlciDiscCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscCongestedToIfBytes.setStatus('mandatory')
mscFrAtmDlciDiscDeCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscDeCongestedToIfBytes.setStatus('mandatory')
mscFrAtmDlciBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciBytesFromIf.setStatus('mandatory')
mscFrAtmDlciDeBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDeBytesFromIf.setStatus('mandatory')
mscFrAtmDlciExcessBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciExcessBytesFromIf.setStatus('mandatory')
mscFrAtmDlciDiscExcessFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscExcessFromIfBytes.setStatus('mandatory')
mscFrAtmDlciDiscByteAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscByteAbit.setStatus('mandatory')
mscFrAtmDlciDiscCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscCongestedFromIfBytes.setStatus('mandatory')
mscFrAtmDlciDiscDeCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscDeCongestedFromIfBytes.setStatus('mandatory')
mscFrAtmDlciErrorShortBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciErrorShortBytesFromIf.setStatus('mandatory')
mscFrAtmDlciErrorLongBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 13, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciErrorLongBytesFromIf.setStatus('mandatory')
mscFrAtmDlciCalldTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 14), )
if mibBuilder.loadTexts: mscFrAtmDlciCalldTable.setStatus('mandatory')
mscFrAtmDlciCalldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciCalldEntry.setStatus('mandatory')
mscFrAtmDlciAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciAccountingEnabled.setStatus('mandatory')
mscFrAtmDlciAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciAccountingEnd.setStatus('mandatory')
mscFrAtmDlciCorrelationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 14, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 28)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciCorrelationTag.setStatus('mandatory')
mscFrAtmDlciIntTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15), )
if mibBuilder.loadTexts: mscFrAtmDlciIntTable.setStatus('mandatory')
mscFrAtmDlciIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciIntEntry.setStatus('mandatory')
mscFrAtmDlciStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 1), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciStartTime.setStatus('mandatory')
mscFrAtmDlciTotalIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 2), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciTotalIngressBytes.setStatus('mandatory')
mscFrAtmDlciTotalEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 3), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciTotalEgressBytes.setStatus('mandatory')
mscFrAtmDlciEirIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 4), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciEirIngressBytes.setStatus('mandatory')
mscFrAtmDlciEirEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 5), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciEirEgressBytes.setStatus('mandatory')
mscFrAtmDlciDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 6), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscardedBytes.setStatus('mandatory')
mscFrAtmDlciTotalIngressFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciTotalIngressFrames.setStatus('mandatory')
mscFrAtmDlciTotalEgressFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciTotalEgressFrames.setStatus('mandatory')
mscFrAtmDlciEirIngressFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciEirIngressFrames.setStatus('mandatory')
mscFrAtmDlciEirEgressFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciEirEgressFrames.setStatus('mandatory')
mscFrAtmDlciDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciDiscardedFrames.setStatus('mandatory')
mscFrAtmDlciElapsedDifference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 15, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciElapsedDifference.setStatus('mandatory')
mscFrAtmDlciSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2))
mscFrAtmDlciSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciSpRowStatusTable.setStatus('mandatory')
mscFrAtmDlciSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSpIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSpRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSpRowStatus.setStatus('mandatory')
mscFrAtmDlciSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSpComponentName.setStatus('mandatory')
mscFrAtmDlciSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSpStorageType.setStatus('mandatory')
mscFrAtmDlciSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciSpIndex.setStatus('mandatory')
mscFrAtmDlciSpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciSpProvTable.setStatus('mandatory')
mscFrAtmDlciSpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSpIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSpProvEntry.setStatus('mandatory')
mscFrAtmDlciSpMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(2100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpMaximumFrameSize.setStatus('mandatory')
mscFrAtmDlciSpRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpRateEnforcement.setStatus('mandatory')
mscFrAtmDlciSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpCommittedInformationRate.setStatus('mandatory')
mscFrAtmDlciSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpCommittedBurstSize.setStatus('mandatory')
mscFrAtmDlciSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpExcessBurstSize.setStatus('mandatory')
mscFrAtmDlciSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpMeasurementInterval.setStatus('mandatory')
mscFrAtmDlciSpEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3))).clone(namedValues=NamedValues(("low", 0), ("high", 3))).clone('low')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpEmissionPriorityToIf.setStatus('obsolete')
mscFrAtmDlciSpEmissionPrioToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpEmissionPrioToIf.setStatus('obsolete')
mscFrAtmDlciSpAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSpAccounting.setStatus('mandatory')
mscFrAtmDlciSiwf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3))
mscFrAtmDlciSiwfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfRowStatusTable.setStatus('mandatory')
mscFrAtmDlciSiwfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciSiwfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfRowStatus.setStatus('mandatory')
mscFrAtmDlciSiwfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfComponentName.setStatus('mandatory')
mscFrAtmDlciSiwfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfStorageType.setStatus('mandatory')
mscFrAtmDlciSiwfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciSiwfIndex.setStatus('mandatory')
mscFrAtmDlciSiwfConnOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 11), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfConnOpTable.setStatus('mandatory')
mscFrAtmDlciSiwfConnOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfConnOpEntry.setStatus('mandatory')
mscFrAtmDlciSiwfDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dp1", 1), ("dp2", 2), ("dp3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfDiscardPriority.setStatus('mandatory')
mscFrAtmDlciSiwfAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmServiceCategory.setStatus('mandatory')
mscFrAtmDlciSiwfTrafficParmConvPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("notApplicable", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfTrafficParmConvPolicy.setStatus('mandatory')
mscFrAtmDlciSiwfAvgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAvgFrameSize.setStatus('mandatory')
mscFrAtmDlciSiwfRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 11, 1, 8), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfRemoteAddress.setStatus('mandatory')
mscFrAtmDlciSiwfRemoteConnectionIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 11, 1, 9), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfRemoteConnectionIdentifier.setStatus('mandatory')
mscFrAtmDlciSiwfSdOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdOpTable.setStatus('mandatory')
mscFrAtmDlciSiwfSdOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdOpEntry.setStatus('mandatory')
mscFrAtmDlciSiwfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("translationMode", 0), ("transparentMode", 1), ("speTranslationMode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfMode.setStatus('mandatory')
mscFrAtmDlciSiwfDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfDeToClpMapping.setStatus('mandatory')
mscFrAtmDlciSiwfClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfClpToDeMapping.setStatus('mandatory')
mscFrAtmDlciSiwfFecnToEfciMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfFecnToEfciMapping.setStatus('mandatory')
mscFrAtmDlciSiwfCrToUuMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2))).clone('preserve')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfCrToUuMapping.setStatus('obsolete')
mscFrAtmDlciSiwfTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 253))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("notApplicable", 253)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfTransferPriority.setStatus('mandatory')
mscFrAtmDlciSiwfAssignedBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAssignedBandwidthPool.setStatus('mandatory')
mscFrAtmDlciSiwfSiwfSpvcOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSiwfSpvcOpTable.setStatus('mandatory')
mscFrAtmDlciSiwfSiwfSpvcOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSiwfSpvcOpEntry.setStatus('mandatory')
mscFrAtmDlciSiwfPeakCellRate0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfPeakCellRate0.setStatus('mandatory')
mscFrAtmDlciSiwfPeakCellRate01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfPeakCellRate01.setStatus('mandatory')
mscFrAtmDlciSiwfSustainedCellRate0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSustainedCellRate0.setStatus('mandatory')
mscFrAtmDlciSiwfSustainedCellRate01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSustainedCellRate01.setStatus('mandatory')
mscFrAtmDlciSiwfMaximumBurstSize0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfMaximumBurstSize0.setStatus('mandatory')
mscFrAtmDlciSiwfMaximumBurstSize01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfMaximumBurstSize01.setStatus('mandatory')
mscFrAtmDlciSiwfEquivalentBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfEquivalentBitRate.setStatus('mandatory')
mscFrAtmDlciSiwfType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("master", 0), ("slave", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfType.setStatus('mandatory')
mscFrAtmDlciSiwfVccClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfVccClearCause.setStatus('mandatory')
mscFrAtmDlciSiwfVccCauseDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 13, 1, 15), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfVccCauseDiag.setStatus('mandatory')
mscFrAtmDlciSiwfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 14), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfStatsTable.setStatus('mandatory')
mscFrAtmDlciSiwfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfStatsEntry.setStatus('mandatory')
mscFrAtmDlciSiwfUnknown1490Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfUnknown1490Frames.setStatus('mandatory')
mscFrAtmDlciSiwfInvalid1490Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfInvalid1490Frames.setStatus('mandatory')
mscFrAtmDlciSiwfLastUnknown1490ProtocolHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 14, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfLastUnknown1490ProtocolHeader.setStatus('mandatory')
mscFrAtmDlciSiwfUnknown1483Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfUnknown1483Frames.setStatus('mandatory')
mscFrAtmDlciSiwfInvalid1483Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfInvalid1483Frames.setStatus('mandatory')
mscFrAtmDlciSiwfLastUnknown1483ProtocolHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 14, 1, 6), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfLastUnknown1483ProtocolHeader.setStatus('mandatory')
mscFrAtmDlciSiwfSd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2))
mscFrAtmDlciSiwfSdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdRowStatusTable.setStatus('mandatory')
mscFrAtmDlciSiwfSdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfSdIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciSiwfSdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdRowStatus.setStatus('mandatory')
mscFrAtmDlciSiwfSdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdComponentName.setStatus('mandatory')
mscFrAtmDlciSiwfSdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdStorageType.setStatus('mandatory')
mscFrAtmDlciSiwfSdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdIndex.setStatus('mandatory')
mscFrAtmDlciSiwfSdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdProvTable.setStatus('mandatory')
mscFrAtmDlciSiwfSdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfSdIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdProvEntry.setStatus('mandatory')
mscFrAtmDlciSiwfSdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("translationMode", 0), ("transparentMode", 1), ("speTranslationMode", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdMode.setStatus('mandatory')
mscFrAtmDlciSiwfSdDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdDeToClpMapping.setStatus('mandatory')
mscFrAtmDlciSiwfSdClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdClpToDeMapping.setStatus('mandatory')
mscFrAtmDlciSiwfSdFecnToEfciMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdFecnToEfciMapping.setStatus('mandatory')
mscFrAtmDlciSiwfSdCrToUuMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSdCrToUuMapping.setStatus('obsolete')
mscFrAtmDlciSiwfNPvc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3))
mscFrAtmDlciSiwfNPvcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcRowStatusTable.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfNPvcIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcRowStatus.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcComponentName.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcStorageType.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcIndex.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcProvTable.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfNPvcIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcProvEntry.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcAtmConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcAtmConnection.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcCorrelationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 28)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcCorrelationTag.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcSiwfNpvcOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 11), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcSiwfNpvcOpTable.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcSiwfNpvcOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfNPvcIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcSiwfNpvcOpEntry.setStatus('mandatory')
mscFrAtmDlciSiwfNPvcConnectionToAtm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 3, 11, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfNPvcConnectionToAtm.setStatus('mandatory')
mscFrAtmDlciSiwfSPvc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4))
mscFrAtmDlciSiwfSPvcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcRowStatusTable.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfSPvcIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcRowStatus.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcComponentName.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcStorageType.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcIndex.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcProvTable.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfSPvcIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcProvEntry.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 44))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcRemoteAddress.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcRemoteConnectionIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 10, 1, 3), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcRemoteConnectionIdentifier.setStatus('mandatory')
mscFrAtmDlciSiwfSPvcCorrelationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 4, 10, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 28)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfSPvcCorrelationTag.setStatus('mandatory')
mscFrAtmDlciSiwfQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5))
mscFrAtmDlciSiwfQoSRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSRowStatusTable.setStatus('mandatory')
mscFrAtmDlciSiwfQoSRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfQoSIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciSiwfQoSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSRowStatus.setStatus('mandatory')
mscFrAtmDlciSiwfQoSComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSComponentName.setStatus('mandatory')
mscFrAtmDlciSiwfQoSStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSStorageType.setStatus('mandatory')
mscFrAtmDlciSiwfQoSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSIndex.setStatus('mandatory')
mscFrAtmDlciSiwfQoSProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSProvTable.setStatus('mandatory')
mscFrAtmDlciSiwfQoSProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfQoSIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSProvEntry.setStatus('mandatory')
mscFrAtmDlciSiwfQoSEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 254, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("deriveFromTp", 254), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSEmissionPriorityToIf.setStatus('mandatory')
mscFrAtmDlciSiwfQoSTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfQoSTransferPriority.setStatus('mandatory')
mscFrAtmDlciSiwfAtmCon = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6))
mscFrAtmDlciSiwfAtmConRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConRowStatusTable.setStatus('mandatory')
mscFrAtmDlciSiwfAtmConRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfAtmConIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciSiwfAtmConRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConRowStatus.setStatus('mandatory')
mscFrAtmDlciSiwfAtmConComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConComponentName.setStatus('mandatory')
mscFrAtmDlciSiwfAtmConStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConStorageType.setStatus('mandatory')
mscFrAtmDlciSiwfAtmConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConIndex.setStatus('mandatory')
mscFrAtmDlciSiwfAtmConOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConOperTable.setStatus('mandatory')
mscFrAtmDlciSiwfAtmConOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciSiwfAtmConIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConOperEntry.setStatus('mandatory')
mscFrAtmDlciSiwfAtmConNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 3, 6, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciSiwfAtmConNextHop.setStatus('mandatory')
mscFrAtmDlciNiwf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4))
mscFrAtmDlciNiwfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciNiwfRowStatusTable.setStatus('mandatory')
mscFrAtmDlciNiwfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciNiwfRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciNiwfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfRowStatus.setStatus('mandatory')
mscFrAtmDlciNiwfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfComponentName.setStatus('mandatory')
mscFrAtmDlciNiwfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfStorageType.setStatus('mandatory')
mscFrAtmDlciNiwfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciNiwfIndex.setStatus('mandatory')
mscFrAtmDlciNiwfOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciNiwfOperTable.setStatus('mandatory')
mscFrAtmDlciNiwfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciNiwfOperEntry.setStatus('mandatory')
mscFrAtmDlciNiwfDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfDeToClpMapping.setStatus('mandatory')
mscFrAtmDlciNiwfClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("preserve", 2), ("transparent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfClpToDeMapping.setStatus('mandatory')
mscFrAtmDlciNiwfTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfTransferPriority.setStatus('mandatory')
mscFrAtmDlciNiwfAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3), ("scNotAvailable", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfAtmServiceCategory.setStatus('mandatory')
mscFrAtmDlciNiwfTrafficParmConvPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 4, 5, 6))).clone(namedValues=NamedValues(("policyNotAvailable", 0), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfTrafficParmConvPolicy.setStatus('mandatory')
mscFrAtmDlciNiwfAvgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfAvgFrameSize.setStatus('mandatory')
mscFrAtmDlciNiwfEquivalentBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfEquivalentBitRate.setStatus('mandatory')
mscFrAtmDlciNiwfAtmDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 8), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfAtmDlci.setStatus('mandatory')
mscFrAtmDlciNiwfAssignedBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfAssignedBandwidthPool.setStatus('mandatory')
mscFrAtmDlciNiwfSpvc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2))
mscFrAtmDlciNiwfSpvcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcRowStatusTable.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfSpvcIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcRowStatus.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcComponentName.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcStorageType.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcIndex.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcProvTable.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfSpvcIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcProvEntry.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcRemoteAddress.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcRemoteDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(16, 1007), ValueRangeConstraint(1022, 1022), )).clone(1022)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcRemoteDlci.setStatus('mandatory')
mscFrAtmDlciNiwfSpvcCorrelationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 2, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 28)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfSpvcCorrelationTag.setStatus('mandatory')
mscFrAtmDlciNiwfNd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3))
mscFrAtmDlciNiwfNdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdRowStatusTable.setStatus('mandatory')
mscFrAtmDlciNiwfNdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfNdIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciNiwfNdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdRowStatus.setStatus('mandatory')
mscFrAtmDlciNiwfNdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdComponentName.setStatus('mandatory')
mscFrAtmDlciNiwfNdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdStorageType.setStatus('mandatory')
mscFrAtmDlciNiwfNdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdIndex.setStatus('mandatory')
mscFrAtmDlciNiwfNdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdProvTable.setStatus('mandatory')
mscFrAtmDlciNiwfNdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfNdIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdProvEntry.setStatus('mandatory')
mscFrAtmDlciNiwfNdDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdDeToClpMapping.setStatus('mandatory')
mscFrAtmDlciNiwfNdClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 255))).clone(namedValues=NamedValues(("preserve", 2), ("transparent", 3), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdClpToDeMapping.setStatus('mandatory')
mscFrAtmDlciNiwfNdTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfNdTransferPriority.setStatus('obsolete')
mscFrAtmDlciNiwfQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4))
mscFrAtmDlciNiwfQoSRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSRowStatusTable.setStatus('mandatory')
mscFrAtmDlciNiwfQoSRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfQoSIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciNiwfQoSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSRowStatus.setStatus('mandatory')
mscFrAtmDlciNiwfQoSComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSComponentName.setStatus('mandatory')
mscFrAtmDlciNiwfQoSStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSStorageType.setStatus('mandatory')
mscFrAtmDlciNiwfQoSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSIndex.setStatus('mandatory')
mscFrAtmDlciNiwfQoSProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSProvTable.setStatus('mandatory')
mscFrAtmDlciNiwfQoSProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciNiwfQoSIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSProvEntry.setStatus('mandatory')
mscFrAtmDlciNiwfQoSEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 254, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("deriveFromTp", 254), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSEmissionPriorityToIf.setStatus('mandatory')
mscFrAtmDlciNiwfQoSTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 4, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciNiwfQoSTransferPriority.setStatus('mandatory')
mscFrAtmDlciEgSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5))
mscFrAtmDlciEgSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 1), )
if mibBuilder.loadTexts: mscFrAtmDlciEgSpRowStatusTable.setStatus('mandatory')
mscFrAtmDlciEgSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciEgSpIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciEgSpRowStatusEntry.setStatus('mandatory')
mscFrAtmDlciEgSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciEgSpRowStatus.setStatus('mandatory')
mscFrAtmDlciEgSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciEgSpComponentName.setStatus('mandatory')
mscFrAtmDlciEgSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmDlciEgSpStorageType.setStatus('mandatory')
mscFrAtmDlciEgSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmDlciEgSpIndex.setStatus('mandatory')
mscFrAtmDlciEgSpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 10), )
if mibBuilder.loadTexts: mscFrAtmDlciEgSpProvTable.setStatus('mandatory')
mscFrAtmDlciEgSpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmDlciEgSpIndex"))
if mibBuilder.loadTexts: mscFrAtmDlciEgSpProvEntry.setStatus('mandatory')
mscFrAtmDlciEgSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciEgSpCommittedInformationRate.setStatus('mandatory')
mscFrAtmDlciEgSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciEgSpCommittedBurstSize.setStatus('mandatory')
mscFrAtmDlciEgSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciEgSpExcessBurstSize.setStatus('mandatory')
mscFrAtmDlciEgSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 4, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmDlciEgSpMeasurementInterval.setStatus('mandatory')
mscFrAtmVFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5))
mscFrAtmVFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 1), )
if mibBuilder.loadTexts: mscFrAtmVFramerRowStatusTable.setStatus('mandatory')
mscFrAtmVFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmVFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmVFramerRowStatusEntry.setStatus('mandatory')
mscFrAtmVFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmVFramerRowStatus.setStatus('mandatory')
mscFrAtmVFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmVFramerComponentName.setStatus('mandatory')
mscFrAtmVFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmVFramerStorageType.setStatus('mandatory')
mscFrAtmVFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmVFramerIndex.setStatus('mandatory')
mscFrAtmVFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 10), )
if mibBuilder.loadTexts: mscFrAtmVFramerProvTable.setStatus('mandatory')
mscFrAtmVFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmVFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmVFramerProvEntry.setStatus('mandatory')
mscFrAtmVFramerOtherVirtualFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmVFramerOtherVirtualFramer.setStatus('mandatory')
mscFrAtmVFramerLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 10, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmVFramerLogicalProcessor.setStatus('mandatory')
mscFrAtmVFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 11), )
if mibBuilder.loadTexts: mscFrAtmVFramerStateTable.setStatus('mandatory')
mscFrAtmVFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmVFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmVFramerStateEntry.setStatus('mandatory')
mscFrAtmVFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmVFramerAdminState.setStatus('mandatory')
mscFrAtmVFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmVFramerOperationalState.setStatus('mandatory')
mscFrAtmVFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmVFramerUsageState.setStatus('mandatory')
mscFrAtmVFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 12), )
if mibBuilder.loadTexts: mscFrAtmVFramerStatsTable.setStatus('mandatory')
mscFrAtmVFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmVFramerIndex"))
if mibBuilder.loadTexts: mscFrAtmVFramerStatsEntry.setStatus('mandatory')
mscFrAtmVFramerFrmToOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 12, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmVFramerFrmToOtherVFramer.setStatus('mandatory')
mscFrAtmVFramerFrmFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 12, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmVFramerFrmFromOtherVFramer.setStatus('mandatory')
mscFrAtmVFramerOctetFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 5, 12, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmVFramerOctetFromOtherVFramer.setStatus('mandatory')
mscFrAtmAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6))
mscFrAtmAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 1), )
if mibBuilder.loadTexts: mscFrAtmAddrRowStatusTable.setStatus('mandatory')
mscFrAtmAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmAddrIndex"))
if mibBuilder.loadTexts: mscFrAtmAddrRowStatusEntry.setStatus('mandatory')
mscFrAtmAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmAddrRowStatus.setStatus('mandatory')
mscFrAtmAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmAddrComponentName.setStatus('mandatory')
mscFrAtmAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmAddrStorageType.setStatus('mandatory')
mscFrAtmAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmAddrIndex.setStatus('mandatory')
mscFrAtmAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 10), )
if mibBuilder.loadTexts: mscFrAtmAddrProvTable.setStatus('mandatory')
mscFrAtmAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmAddrIndex"))
if mibBuilder.loadTexts: mscFrAtmAddrProvEntry.setStatus('mandatory')
mscFrAtmAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 44))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmAddrAddress.setStatus('mandatory')
mscFrAtmAddrAddrOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 11), )
if mibBuilder.loadTexts: mscFrAtmAddrAddrOpTable.setStatus('mandatory')
mscFrAtmAddrAddrOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmAddrIndex"))
if mibBuilder.loadTexts: mscFrAtmAddrAddrOpEntry.setStatus('mandatory')
mscFrAtmAddrMyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 6, 11, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmAddrMyAddress.setStatus('mandatory')
mscFrAtmCa = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7))
mscFrAtmCaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 1), )
if mibBuilder.loadTexts: mscFrAtmCaRowStatusTable.setStatus('mandatory')
mscFrAtmCaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"))
if mibBuilder.loadTexts: mscFrAtmCaRowStatusEntry.setStatus('mandatory')
mscFrAtmCaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaRowStatus.setStatus('mandatory')
mscFrAtmCaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaComponentName.setStatus('mandatory')
mscFrAtmCaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaStorageType.setStatus('mandatory')
mscFrAtmCaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrAtmCaIndex.setStatus('mandatory')
mscFrAtmCaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 10), )
if mibBuilder.loadTexts: mscFrAtmCaProvTable.setStatus('mandatory')
mscFrAtmCaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"))
if mibBuilder.loadTexts: mscFrAtmCaProvEntry.setStatus('mandatory')
mscFrAtmCaCallAdmissionControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaCallAdmissionControl.setStatus('mandatory')
mscFrAtmCaOverrideLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaOverrideLinkRate.setStatus('mandatory')
mscFrAtmCaSdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 11), )
if mibBuilder.loadTexts: mscFrAtmCaSdTable.setStatus('mandatory')
mscFrAtmCaSdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"))
if mibBuilder.loadTexts: mscFrAtmCaSdEntry.setStatus('mandatory')
mscFrAtmCaSdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("translationMode", 0), ("transparentMode", 1), ("speTranslationMode", 2))).clone('translationMode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaSdMode.setStatus('mandatory')
mscFrAtmCaSdDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaSdDeToClpMapping.setStatus('mandatory')
mscFrAtmCaSdClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaSdClpToDeMapping.setStatus('mandatory')
mscFrAtmCaSdFecnToEfciMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaSdFecnToEfciMapping.setStatus('mandatory')
mscFrAtmCaSdCrToUuMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaSdCrToUuMapping.setStatus('obsolete')
mscFrAtmCaNdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 12), )
if mibBuilder.loadTexts: mscFrAtmCaNdTable.setStatus('mandatory')
mscFrAtmCaNdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"))
if mibBuilder.loadTexts: mscFrAtmCaNdEntry.setStatus('mandatory')
mscFrAtmCaNdDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaNdDeToClpMapping.setStatus('mandatory')
mscFrAtmCaNdClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("preserve", 2), ("transparent", 3))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaNdClpToDeMapping.setStatus('mandatory')
mscFrAtmCaIfQoSTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 13), )
if mibBuilder.loadTexts: mscFrAtmCaIfQoSTable.setStatus('mandatory')
mscFrAtmCaIfQoSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"))
if mibBuilder.loadTexts: mscFrAtmCaIfQoSEntry.setStatus('mandatory')
mscFrAtmCaSiwfEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 254))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("deriveFromTp", 254))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaSiwfEmissionPriorityToIf.setStatus('mandatory')
mscFrAtmCaSiwfTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaSiwfTransferPriority.setStatus('mandatory')
mscFrAtmCaNiwfEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 254))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("deriveFromTp", 254))).clone('deriveFromTp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaNiwfEmissionPriorityToIf.setStatus('mandatory')
mscFrAtmCaNiwfTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaNiwfTransferPriority.setStatus('mandatory')
mscFrAtmCaOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 14), )
if mibBuilder.loadTexts: mscFrAtmCaOpTable.setStatus('mandatory')
mscFrAtmCaOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"))
if mibBuilder.loadTexts: mscFrAtmCaOpEntry.setStatus('mandatory')
mscFrAtmCaLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaLinkRate.setStatus('mandatory')
mscFrAtmCaNailedUpPvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaNailedUpPvcs.setStatus('mandatory')
mscFrAtmCaTroubledDlcis = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 14, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaTroubledDlcis.setStatus('mandatory')
mscFrAtmCaSoftPvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 14, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaSoftPvcs.setStatus('mandatory')
mscFrAtmCaAccountingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 15), )
if mibBuilder.loadTexts: mscFrAtmCaAccountingOptionsTable.setStatus('mandatory')
mscFrAtmCaAccountingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"))
if mibBuilder.loadTexts: mscFrAtmCaAccountingOptionsEntry.setStatus('mandatory')
mscFrAtmCaAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaAccountClass.setStatus('mandatory')
mscFrAtmCaAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 15, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaAccountCollection.setStatus('mandatory')
mscFrAtmCaServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaServiceExchange.setStatus('mandatory')
mscFrAtmCaBwPoolTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 365), )
if mibBuilder.loadTexts: mscFrAtmCaBwPoolTable.setStatus('mandatory')
mscFrAtmCaBwPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 365, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaBwPoolIndex"))
if mibBuilder.loadTexts: mscFrAtmCaBwPoolEntry.setStatus('mandatory')
mscFrAtmCaBwPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 365, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrAtmCaBwPoolIndex.setStatus('mandatory')
mscFrAtmCaBwPoolValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 365, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaBwPoolValue.setStatus('mandatory')
mscFrAtmCaPoolProvBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 366), )
if mibBuilder.loadTexts: mscFrAtmCaPoolProvBwTable.setStatus('mandatory')
mscFrAtmCaPoolProvBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 366, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaPoolProvBwIndex"))
if mibBuilder.loadTexts: mscFrAtmCaPoolProvBwEntry.setStatus('mandatory')
mscFrAtmCaPoolProvBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 366, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrAtmCaPoolProvBwIndex.setStatus('mandatory')
mscFrAtmCaPoolProvBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 366, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaPoolProvBwValue.setStatus('mandatory')
mscFrAtmCaPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 367), )
if mibBuilder.loadTexts: mscFrAtmCaPoolAvailBwTable.setStatus('mandatory')
mscFrAtmCaPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 367, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrAtmCaPoolAvailBwEntry.setStatus('mandatory')
mscFrAtmCaPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 367, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrAtmCaPoolAvailBwIndex.setStatus('mandatory')
mscFrAtmCaPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 367, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaPoolAvailBwValue.setStatus('mandatory')
mscFrAtmCaPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 380), )
if mibBuilder.loadTexts: mscFrAtmCaPoolAdmitBwTable.setStatus('mandatory')
mscFrAtmCaPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 380, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrAtmCaPoolAdmitBwEntry.setStatus('mandatory')
mscFrAtmCaPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 380, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrAtmCaPoolAdmitBwIndex.setStatus('mandatory')
mscFrAtmCaPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 380, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaPoolAdmitBwValue.setStatus('mandatory')
mscFrAtmCaTpm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2))
mscFrAtmCaTpmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 1), )
if mibBuilder.loadTexts: mscFrAtmCaTpmRowStatusTable.setStatus('mandatory')
mscFrAtmCaTpmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaTpmIndex"))
if mibBuilder.loadTexts: mscFrAtmCaTpmRowStatusEntry.setStatus('mandatory')
mscFrAtmCaTpmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaTpmRowStatus.setStatus('mandatory')
mscFrAtmCaTpmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaTpmComponentName.setStatus('mandatory')
mscFrAtmCaTpmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrAtmCaTpmStorageType.setStatus('mandatory')
mscFrAtmCaTpmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrAtmCaTpmIndex.setStatus('mandatory')
mscFrAtmCaTpmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 10), )
if mibBuilder.loadTexts: mscFrAtmCaTpmProvTable.setStatus('mandatory')
mscFrAtmCaTpmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", "mscFrAtmCaTpmIndex"))
if mibBuilder.loadTexts: mscFrAtmCaTpmProvEntry.setStatus('mandatory')
mscFrAtmCaTpmAssignedBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("samePoolAsModule", 255))).clone('samePoolAsModule')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaTpmAssignedBandwidthPool.setStatus('mandatory')
mscFrAtmCaTpmTrafficParmConvPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sameAsModule", 0), ("policy3", 3), ("policy4", 4), ("policy5", 5), ("policy6", 6))).clone('sameAsModule')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaTpmTrafficParmConvPolicy.setStatus('mandatory')
mscFrAtmCaTpmAverageFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 72, 7, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8187))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrAtmCaTpmAverageFrameSize.setStatus('mandatory')
frameRelayAtmGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51, 1))
frameRelayAtmGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51, 1, 1))
frameRelayAtmGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51, 1, 1, 3))
frameRelayAtmGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51, 1, 1, 3, 2))
frameRelayAtmCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51, 3))
frameRelayAtmCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51, 3, 1))
frameRelayAtmCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51, 3, 1, 3))
frameRelayAtmCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 51, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", mscFrAtmDlciNiwfOperTable=mscFrAtmDlciNiwfOperTable, mscFrAtmFramerNormPrioLinkUtilToIf=mscFrAtmFramerNormPrioLinkUtilToIf, mscFrAtmDlciNiwfAtmDlci=mscFrAtmDlciNiwfAtmDlci, mscFrAtmDlciDiscDeCongestedFromIfBytes=mscFrAtmDlciDiscDeCongestedFromIfBytes, mscFrAtmDlciSiwfNPvcRowStatusEntry=mscFrAtmDlciSiwfNPvcRowStatusEntry, mscFrAtmDlciSiwfConnOpTable=mscFrAtmDlciSiwfConnOpTable, mscFrAtmDlciDiscDeCongestedToIfBytes=mscFrAtmDlciDiscDeCongestedToIfBytes, mscFrAtmCaBwPoolIndex=mscFrAtmCaBwPoolIndex, mscFrAtmLmiNetworkSideEventHistory=mscFrAtmLmiNetworkSideEventHistory, mscFrAtmFramerProvEntry=mscFrAtmFramerProvEntry, mscFrAtmDlciSiwfSdMode=mscFrAtmDlciSiwfSdMode, mscFrAtmLmiUnexpectedIes=mscFrAtmLmiUnexpectedIes, mscFrAtmLmiParmsEntry=mscFrAtmLmiParmsEntry, mscFrAtmDlciNiwfSpvcRowStatusEntry=mscFrAtmDlciNiwfSpvcRowStatusEntry, mscFrAtmLastUnknownDlci=mscFrAtmLastUnknownDlci, mscFrAtmDlciNiwfAtmServiceCategory=mscFrAtmDlciNiwfAtmServiceCategory, mscFrAtmDlciDeBytesFromIf=mscFrAtmDlciDeBytesFromIf, mscFrAtmDlciEgSpCommittedBurstSize=mscFrAtmDlciEgSpCommittedBurstSize, mscFrAtmFramerRowStatusTable=mscFrAtmFramerRowStatusTable, mscFrAtmDlciNiwfNdRowStatusTable=mscFrAtmDlciNiwfNdRowStatusTable, mscFrAtmDlciUsageState=mscFrAtmDlciUsageState, mscFrAtmOperStatusTable=mscFrAtmOperStatusTable, mscFrAtmDlciTotalEgressFrames=mscFrAtmDlciTotalEgressFrames, mscFrAtmCaStorageType=mscFrAtmCaStorageType, mscFrAtmAddrRowStatusTable=mscFrAtmAddrRowStatusTable, mscFrAtmDlciNiwfDeToClpMapping=mscFrAtmDlciNiwfDeToClpMapping, mscFrAtmDlciExcessFrmFromIf=mscFrAtmDlciExcessFrmFromIf, mscFrAtmDlciStateTable=mscFrAtmDlciStateTable, mscFrAtmDlciSiwfCrToUuMapping=mscFrAtmDlciSiwfCrToUuMapping, mscFrAtmDlciSiwfNPvcComponentName=mscFrAtmDlciSiwfNPvcComponentName, mscFrAtmLmiIndex=mscFrAtmLmiIndex, mscFrAtmCaPoolAvailBwIndex=mscFrAtmCaPoolAvailBwIndex, mscFrAtmDlciSiwfTrafficParmConvPolicy=mscFrAtmDlciSiwfTrafficParmConvPolicy, mscFrAtmLmiStatsTable=mscFrAtmLmiStatsTable, mscFrAtmFramerFrmToIf64=mscFrAtmFramerFrmToIf64, mscFrAtmDlciSiwfAtmConRowStatusEntry=mscFrAtmDlciSiwfAtmConRowStatusEntry, mscFrAtmDlciSiwfType=mscFrAtmDlciSiwfType, mscFrAtmLmiUnexpectedReports=mscFrAtmLmiUnexpectedReports, mscFrAtmIndex=mscFrAtmIndex, mscFrAtmLmiPsiEntry=mscFrAtmLmiPsiEntry, mscFrAtmVFramerLogicalProcessor=mscFrAtmVFramerLogicalProcessor, mscFrAtmCaTpmRowStatusTable=mscFrAtmCaTpmRowStatusTable, mscFrAtmDlciAccountingEnabled=mscFrAtmDlciAccountingEnabled, mscFrAtmLmiFullStatusEnqFromIf=mscFrAtmLmiFullStatusEnqFromIf, mscFrAtmCa=mscFrAtmCa, mscFrAtmLmiIgnoreActiveBit=mscFrAtmLmiIgnoreActiveBit, mscFrAtmLmiPsiTable=mscFrAtmLmiPsiTable, mscFrAtmLmiSequenceErrors=mscFrAtmLmiSequenceErrors, mscFrAtmDlciSiwfAtmConOperEntry=mscFrAtmDlciSiwfAtmConOperEntry, mscFrAtmCaRowStatusTable=mscFrAtmCaRowStatusTable, mscFrAtmCaPoolAdmitBwEntry=mscFrAtmCaPoolAdmitBwEntry, mscFrAtmDlciSiwfSiwfSpvcOpEntry=mscFrAtmDlciSiwfSiwfSpvcOpEntry, mscFrAtmDlciNiwfSpvcStorageType=mscFrAtmDlciNiwfSpvcStorageType, mscFrAtmDlciSpStorageType=mscFrAtmDlciSpStorageType, mscFrAtmDlciSiwfStorageType=mscFrAtmDlciSiwfStorageType, mscFrAtmDlciSiwfAtmConStorageType=mscFrAtmDlciSiwfAtmConStorageType, mscFrAtmDlciSiwfAtmConNextHop=mscFrAtmDlciSiwfAtmConNextHop, frameRelayAtmGroupCA=frameRelayAtmGroupCA, mscFrAtmDlciNiwfNdTransferPriority=mscFrAtmDlciNiwfNdTransferPriority, mscFrAtmCaSdCrToUuMapping=mscFrAtmCaSdCrToUuMapping, mscFrAtmDlciSiwfNPvcConnectionToAtm=mscFrAtmDlciSiwfNPvcConnectionToAtm, mscFrAtmDlciEfciFrmFromNetwork=mscFrAtmDlciEfciFrmFromNetwork, mscFrAtmDlciDiscCongestedToIf=mscFrAtmDlciDiscCongestedToIf, mscFrAtmDlciBecnFrmToIf=mscFrAtmDlciBecnFrmToIf, mscFrAtmDlciAccountingEnd=mscFrAtmDlciAccountingEnd, mscFrAtmDlciSiwfQoSTransferPriority=mscFrAtmDlciSiwfQoSTransferPriority, mscFrAtmDlciSiwfMaximumBurstSize0=mscFrAtmDlciSiwfMaximumBurstSize0, mscFrAtmLmiProtocolErrors=mscFrAtmLmiProtocolErrors, mscFrAtmLmiKeepAliveEnqToIf=mscFrAtmLmiKeepAliveEnqToIf, mscFrAtmDlciSiwfAtmConRowStatusTable=mscFrAtmDlciSiwfAtmConRowStatusTable, mscFrAtmDlciSiwfLastUnknown1490ProtocolHeader=mscFrAtmDlciSiwfLastUnknown1490ProtocolHeader, mscFrAtmVFramerIndex=mscFrAtmVFramerIndex, mscFrAtmDlciSiwfQoSProvTable=mscFrAtmDlciSiwfQoSProvTable, mscFrAtmDlciFecnFrmToIf=mscFrAtmDlciFecnFrmToIf, mscFrAtmDlciEgSpRowStatusEntry=mscFrAtmDlciEgSpRowStatusEntry, mscFrAtmDlciSiwfStatsEntry=mscFrAtmDlciSiwfStatsEntry, mscFrAtmCaServiceExchange=mscFrAtmCaServiceExchange, mscFrAtmFramerUtilTable=mscFrAtmFramerUtilTable, mscFrAtmCaPoolProvBwIndex=mscFrAtmCaPoolProvBwIndex, mscFrAtmLmiProtocolStatus=mscFrAtmLmiProtocolStatus, mscFrAtmFrmToIfByQueueTable=mscFrAtmFrmToIfByQueueTable, mscFrAtmDlciSpEmissionPrioToIf=mscFrAtmDlciSpEmissionPrioToIf, mscFrAtmDlciEgSpExcessBurstSize=mscFrAtmDlciEgSpExcessBurstSize, mscFrAtmDlciSiwfSdProvEntry=mscFrAtmDlciSiwfSdProvEntry, mscFrAtmFramerUtilEntry=mscFrAtmFramerUtilEntry, mscFrAtmDlciMeasurementInterval=mscFrAtmDlciMeasurementInterval, mscFrAtmCaBwPoolValue=mscFrAtmCaBwPoolValue, mscFrAtmFramerRowStatusEntry=mscFrAtmFramerRowStatusEntry, mscFrAtmDlciABitReasonToIf=mscFrAtmDlciABitReasonToIf, mscFrAtmDlciSiwfNPvc=mscFrAtmDlciSiwfNPvc, mscFrAtmDlciEgSpProvTable=mscFrAtmDlciEgSpProvTable, mscFrAtmDlciSpProvEntry=mscFrAtmDlciSpProvEntry, mscFrAtmDlciSiwfRowStatusTable=mscFrAtmDlciSiwfRowStatusTable, mscFrAtmCaPoolAvailBwEntry=mscFrAtmCaPoolAvailBwEntry, mscFrAtmDlciNiwfRowStatusTable=mscFrAtmDlciNiwfRowStatusTable, mscFrAtmDlciDiscardedBytes=mscFrAtmDlciDiscardedBytes, mscFrAtmDlciNiwfIndex=mscFrAtmDlciNiwfIndex, mscFrAtmVFramer=mscFrAtmVFramer, mscFrAtmFrmToIfByQueueEntry=mscFrAtmFrmToIfByQueueEntry, mscFrAtmCaTpm=mscFrAtmCaTpm, mscFrAtmFramerProvTable=mscFrAtmFramerProvTable, mscFrAtmDlciSiwfMaximumBurstSize01=mscFrAtmDlciSiwfMaximumBurstSize01, mscFrAtmDlciSiwfAvgFrameSize=mscFrAtmDlciSiwfAvgFrameSize, mscFrAtmDlciSiwfNPvcIndex=mscFrAtmDlciSiwfNPvcIndex, mscFrAtmNumberOfEmissionQs=mscFrAtmNumberOfEmissionQs, mscFrAtmLmiProcedures=mscFrAtmLmiProcedures, mscFrAtmDlciSiwfSdRowStatusEntry=mscFrAtmDlciSiwfSdRowStatusEntry, mscFrAtmLmiOperationalState=mscFrAtmLmiOperationalState, mscFrAtmDlciSiwfSdStorageType=mscFrAtmDlciSiwfSdStorageType, mscFrAtmLmiEventCount=mscFrAtmLmiEventCount, mscFrAtmCaPoolAvailBwValue=mscFrAtmCaPoolAvailBwValue, mscFrAtmAvailabilityStatus=mscFrAtmAvailabilityStatus, mscFrAtmDlciSiwfQoSStorageType=mscFrAtmDlciSiwfQoSStorageType, mscFrAtmLmiParmsTable=mscFrAtmLmiParmsTable, mscFrAtmStatsTable=mscFrAtmStatsTable, mscFrAtmDlciRowStatusTable=mscFrAtmDlciRowStatusTable, mscFrAtmCaOverrideLinkRate=mscFrAtmCaOverrideLinkRate, mscFrAtmDlciSiwfSdClpToDeMapping=mscFrAtmDlciSiwfSdClpToDeMapping, mscFrAtmDlciSiwfQoSRowStatusEntry=mscFrAtmDlciSiwfQoSRowStatusEntry, mscFrAtmVFramerOperationalState=mscFrAtmVFramerOperationalState, mscFrAtmFramerFrmFromIf=mscFrAtmFramerFrmFromIf, mscFrAtmDlciErrorLongBytesFromIf=mscFrAtmDlciErrorLongBytesFromIf, mscFrAtmLmiStatsEntry=mscFrAtmLmiStatsEntry, mscFrAtmDlciSiwfSPvcProvEntry=mscFrAtmDlciSiwfSPvcProvEntry, mscFrAtmCaTpmProvEntry=mscFrAtmCaTpmProvEntry, mscFrAtmDlciEgSp=mscFrAtmDlciEgSp, mscFrAtmAddrProvTable=mscFrAtmAddrProvTable, mscFrAtmUsageState=mscFrAtmUsageState, mscFrAtmInvalidHeaderFramesFromIf=mscFrAtmInvalidHeaderFramesFromIf, mscFrAtmLmiMessageCountTimer=mscFrAtmLmiMessageCountTimer, mscFrAtmDlciSiwfInvalid1483Frames=mscFrAtmDlciSiwfInvalid1483Frames, mscFrAtmDlciNiwfTrafficParmConvPolicy=mscFrAtmDlciNiwfTrafficParmConvPolicy, mscFrAtmDlciSiwfSPvcRemoteAddress=mscFrAtmDlciSiwfSPvcRemoteAddress, mscFrAtmDlciNiwfQoSComponentName=mscFrAtmDlciNiwfQoSComponentName, mscFrAtmDlciDiscDeCongestedFromIf=mscFrAtmDlciDiscDeCongestedFromIf, mscFrAtmFramerUnderruns=mscFrAtmFramerUnderruns, mscFrAtmDlciFecnFrmFromIf=mscFrAtmDlciFecnFrmFromIf, mscFrAtmDlciSiwfAssignedBandwidthPool=mscFrAtmDlciSiwfAssignedBandwidthPool, mscFrAtmStatsEntry=mscFrAtmStatsEntry, mscFrAtmVFramerRowStatus=mscFrAtmVFramerRowStatus, mscFrAtmDlciNiwfNdStorageType=mscFrAtmDlciNiwfNdStorageType, mscFrAtmDlciSiwfMode=mscFrAtmDlciSiwfMode, mscFrAtmDlciSiwfAtmServiceCategory=mscFrAtmDlciSiwfAtmServiceCategory, mscFrAtmDlciTotalIngressBytes=mscFrAtmDlciTotalIngressBytes, mscFrAtmDlciDeFrmToIf=mscFrAtmDlciDeFrmToIf, mscFrAtmDlciSiwfNPvcRowStatus=mscFrAtmDlciSiwfNPvcRowStatus, mscFrAtmFramerNormPrioLinkUtilFromIf=mscFrAtmFramerNormPrioLinkUtilFromIf, mscFrAtmFramerOctetFromIf64=mscFrAtmFramerOctetFromIf64, mscFrAtmDlciStorageType=mscFrAtmDlciStorageType, mscFrAtmDlciCommittedInformationRate=mscFrAtmDlciCommittedInformationRate, mscFrAtmDlciSiwfStatsTable=mscFrAtmDlciSiwfStatsTable, mscFrAtmLmiAdminState=mscFrAtmLmiAdminState, mscFrAtmLmiRowStatusTable=mscFrAtmLmiRowStatusTable, mscFrAtmDlciStartTime=mscFrAtmDlciStartTime, mscFrAtmDlciNiwfQoSRowStatusTable=mscFrAtmDlciNiwfQoSRowStatusTable, mscFrAtmDlciStateEntry=mscFrAtmDlciStateEntry, mscFrAtmDlciIntEntry=mscFrAtmDlciIntEntry, mscFrAtmLmi=mscFrAtmLmi, mscFrAtmDlciDeFrmFromIf=mscFrAtmDlciDeFrmFromIf, mscFrAtmDlciSpComponentName=mscFrAtmDlciSpComponentName, mscFrAtmDlciSiwfLastUnknown1483ProtocolHeader=mscFrAtmDlciSiwfLastUnknown1483ProtocolHeader, mscFrAtmDlciSiwfSdRowStatus=mscFrAtmDlciSiwfSdRowStatus, mscFrAtmDlciNiwfQoSIndex=mscFrAtmDlciNiwfQoSIndex, mscFrAtmDlciEgSpComponentName=mscFrAtmDlciEgSpComponentName, mscFrAtmLmiNoStatusReportCount=mscFrAtmLmiNoStatusReportCount, mscFrAtmDlciBecnFrmSetByService=mscFrAtmDlciBecnFrmSetByService, mscFrAtmDlciDeBytesToIf=mscFrAtmDlciDeBytesToIf, mscFrAtmOctetToIfByQueueIndex=mscFrAtmOctetToIfByQueueIndex, mscFrAtmDlciNiwfQoSEmissionPriorityToIf=mscFrAtmDlciNiwfQoSEmissionPriorityToIf, mscFrAtmDlciSiwfVccClearCause=mscFrAtmDlciSiwfVccClearCause, mscFrAtmCaRowStatus=mscFrAtmCaRowStatus, mscFrAtmCaProvTable=mscFrAtmCaProvTable, mscFrAtmFramerFrmFromIf64=mscFrAtmFramerFrmFromIf64, mscFrAtmStandbyStatus=mscFrAtmStandbyStatus, mscFrAtmDlciNiwfNdComponentName=mscFrAtmDlciNiwfNdComponentName, mscFrAtmDlciDiscardedFrames=mscFrAtmDlciDiscardedFrames, mscFrAtmLmiPvcConfigParmsInFsr=mscFrAtmLmiPvcConfigParmsInFsr, mscFrAtmDlciDiscExcessFromIfBytes=mscFrAtmDlciDiscExcessFromIfBytes, mscFrAtmVFramerRowStatusTable=mscFrAtmVFramerRowStatusTable, mscFrAtmCaPoolProvBwEntry=mscFrAtmCaPoolProvBwEntry, mscFrAtmVFramerOtherVirtualFramer=mscFrAtmVFramerOtherVirtualFramer, mscFrAtmDlciNiwfComponentName=mscFrAtmDlciNiwfComponentName, mscFrAtmDlciSiwfRemoteConnectionIdentifier=mscFrAtmDlciSiwfRemoteConnectionIdentifier, mscFrAtmCaIfQoSTable=mscFrAtmCaIfQoSTable, mscFrAtmOctetToIfByQueueValue=mscFrAtmOctetToIfByQueueValue, mscFrAtmLmiStateEntry=mscFrAtmLmiStateEntry, mscFrAtmDlciDiscByteAbit=mscFrAtmDlciDiscByteAbit, mscFrAtmDlciNiwfNdProvEntry=mscFrAtmDlciNiwfNdProvEntry, mscFrAtmVFramerProvEntry=mscFrAtmVFramerProvEntry, mscFrAtmLmiErrorEventThreshold=mscFrAtmLmiErrorEventThreshold, mscFrAtmDlciSiwfRowStatus=mscFrAtmDlciSiwfRowStatus, mscFrAtmCaTpmRowStatus=mscFrAtmCaTpmRowStatus, mscFrAtmDlciSpRowStatusEntry=mscFrAtmDlciSpRowStatusEntry, mscFrAtmDlciSpCommittedBurstSize=mscFrAtmDlciSpCommittedBurstSize, mscFrAtmDlciSiwfNPvcAtmConnection=mscFrAtmDlciSiwfNPvcAtmConnection, mscFrAtmDlciSpRateEnforcement=mscFrAtmDlciSpRateEnforcement, mscFrAtmDlciSiwfPeakCellRate0=mscFrAtmDlciSiwfPeakCellRate0, mscFrAtmDlciSiwfAtmCon=mscFrAtmDlciSiwfAtmCon, mscFrAtmSnmpOperStatus=mscFrAtmSnmpOperStatus, mscFrAtmCaSdClpToDeMapping=mscFrAtmCaSdClpToDeMapping, mscFrAtmOperationalState=mscFrAtmOperationalState, frameRelayAtmCapabilitiesCA02=frameRelayAtmCapabilitiesCA02, mscFrAtmAddrAddrOpEntry=mscFrAtmAddrAddrOpEntry, mscFrAtmDlciSpRowStatus=mscFrAtmDlciSpRowStatus, mscFrAtmDlciNiwfSpvcProvTable=mscFrAtmDlciNiwfSpvcProvTable, mscFrAtmIfAdminStatus=mscFrAtmIfAdminStatus, mscFrAtmFramerCrcErrors=mscFrAtmFramerCrcErrors, mscFrAtmDlciTotalIngressFrames=mscFrAtmDlciTotalIngressFrames, mscFrAtmLmiOpProcedures=mscFrAtmLmiOpProcedures, mscFrAtmDlciSiwfSustainedCellRate0=mscFrAtmDlciSiwfSustainedCellRate0, mscFrAtmDlciNiwfQoSRowStatus=mscFrAtmDlciNiwfQoSRowStatus, mscFrAtmDlciSiwfSPvcRemoteConnectionIdentifier=mscFrAtmDlciSiwfSPvcRemoteConnectionIdentifier, mscFrAtmDlciEgSpCommittedInformationRate=mscFrAtmDlciEgSpCommittedInformationRate, mscFrAtmDlciSiwfSdIndex=mscFrAtmDlciSiwfSdIndex, mscFrAtmDlciTroubledReason=mscFrAtmDlciTroubledReason, mscFrAtmCaSdMode=mscFrAtmCaSdMode, mscFrAtmDlci=mscFrAtmDlci, mscFrAtmDlciBytesFromIf=mscFrAtmDlciBytesFromIf, mscFrAtmDlciSiwfSustainedCellRate01=mscFrAtmDlciSiwfSustainedCellRate01, mscFrAtmCaNailedUpPvcs=mscFrAtmCaNailedUpPvcs, mscFrAtmDlciSiwfSdCrToUuMapping=mscFrAtmDlciSiwfSdCrToUuMapping, mscFrAtmDlciElapsedDifference=mscFrAtmDlciElapsedDifference, mscFrAtmDlciABitStatusToIf=mscFrAtmDlciABitStatusToIf, mscFrAtmLmiStatusSequenceErrors=mscFrAtmLmiStatusSequenceErrors, mscFrAtmCaSdEntry=mscFrAtmCaSdEntry, mscFrAtmOctetToIfByQueueEntry=mscFrAtmOctetToIfByQueueEntry, mscFrAtmDlciSiwfVccCauseDiag=mscFrAtmDlciSiwfVccCauseDiag, mscFrAtmDlciSiwfNPvcSiwfNpvcOpTable=mscFrAtmDlciSiwfNPvcSiwfNpvcOpTable, mscFrAtmDlciNiwfNdDeToClpMapping=mscFrAtmDlciNiwfNdDeToClpMapping, mscFrAtmVFramerUsageState=mscFrAtmVFramerUsageState, mscFrAtmDlciFrmToIf=mscFrAtmDlciFrmToIf, mscFrAtmFramerAdminState=mscFrAtmFramerAdminState, mscFrAtmDlciCalldTable=mscFrAtmDlciCalldTable, mscFrAtmDlciSiwfClpToDeMapping=mscFrAtmDlciSiwfClpToDeMapping, mscFrAtmDlciSiwfUnknown1483Frames=mscFrAtmDlciSiwfUnknown1483Frames, mscFrAtmEmissionPriorityQsTable=mscFrAtmEmissionPriorityQsTable, mscFrAtmDlciErrorLongFrmFromIf=mscFrAtmDlciErrorLongFrmFromIf, mscFrAtmLmiLinkVerificationTimer=mscFrAtmLmiLinkVerificationTimer, mscFrAtmDlciNiwfEquivalentBitRate=mscFrAtmDlciNiwfEquivalentBitRate, mscFrAtmCaProvEntry=mscFrAtmCaProvEntry, frameRelayAtmCapabilitiesCA02A=frameRelayAtmCapabilitiesCA02A, mscFrAtmDlciAdminState=mscFrAtmDlciAdminState, mscFrAtmDlciDiscCongestedFromIfBytes=mscFrAtmDlciDiscCongestedFromIfBytes, mscFrAtmDlciSiwfSiwfSpvcOpTable=mscFrAtmDlciSiwfSiwfSpvcOpTable, mscFrAtmVFramerFrmFromOtherVFramer=mscFrAtmVFramerFrmFromOtherVFramer, mscFrAtmCaComponentName=mscFrAtmCaComponentName, mscFrAtmDlciSiwfSdProvTable=mscFrAtmDlciSiwfSdProvTable, mscFrAtmCaNdDeToClpMapping=mscFrAtmCaNdDeToClpMapping, mscFrAtmCidDataTable=mscFrAtmCidDataTable, mscFrAtmDlciCommittedBurstSize=mscFrAtmDlciCommittedBurstSize, mscFrAtmFramerLinkTable=mscFrAtmFramerLinkTable, mscFrAtmFramerStatsTable=mscFrAtmFramerStatsTable, mscFrAtmDlciSpCommittedInformationRate=mscFrAtmDlciSpCommittedInformationRate, mscFrAtmDlciEirEgressBytes=mscFrAtmDlciEirEgressBytes)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", mscFrAtmCaTpmRowStatusEntry=mscFrAtmCaTpmRowStatusEntry, mscFrAtmRowStatusTable=mscFrAtmRowStatusTable, mscFrAtmLmiStateTable=mscFrAtmLmiStateTable, mscFrAtmDlciComponentName=mscFrAtmDlciComponentName, mscFrAtmDlciSiwfNPvcStorageType=mscFrAtmDlciSiwfNPvcStorageType, mscFrAtmDlciNiwfSpvc=mscFrAtmDlciNiwfSpvc, mscFrAtmCaTpmAverageFrameSize=mscFrAtmCaTpmAverageFrameSize, mscFrAtmVFramerRowStatusEntry=mscFrAtmVFramerRowStatusEntry, mscFrAtmCaTpmProvTable=mscFrAtmCaTpmProvTable, mscFrAtmLmiKeepAliveStatusEnqFromIf=mscFrAtmLmiKeepAliveStatusEnqFromIf, mscFrAtmOctetToIfByQueueTable=mscFrAtmOctetToIfByQueueTable, mscFrAtmDlciNiwfNdClpToDeMapping=mscFrAtmDlciNiwfNdClpToDeMapping, mscFrAtmAddrAddress=mscFrAtmAddrAddress, mscFrAtmFramerLargeFrmErrors=mscFrAtmFramerLargeFrmErrors, mscFrAtmDlciMaximumFrameSize=mscFrAtmDlciMaximumFrameSize, mscFrAtmDlciSiwfRemoteAddress=mscFrAtmDlciSiwfRemoteAddress, mscFrAtmDlciOperationalState=mscFrAtmDlciOperationalState, mscFrAtmDlciNiwfQoSProvEntry=mscFrAtmDlciNiwfQoSProvEntry, frameRelayAtmCapabilitiesCA=frameRelayAtmCapabilitiesCA, mscFrAtmIfEntryEntry=mscFrAtmIfEntryEntry, mscFrAtmDlciABitReasonFromIf=mscFrAtmDlciABitReasonFromIf, mscFrAtmDlciSiwfQoSRowStatus=mscFrAtmDlciSiwfQoSRowStatus, mscFrAtmDlciSiwfDiscardPriority=mscFrAtmDlciSiwfDiscardPriority, mscFrAtmDlciEirEgressFrames=mscFrAtmDlciEirEgressFrames, mscFrAtmDlciSp=mscFrAtmDlciSp, mscFrAtmVFramerFrmToOtherVFramer=mscFrAtmVFramerFrmToOtherVFramer, mscFrAtmCaCallAdmissionControl=mscFrAtmCaCallAdmissionControl, mscFrAtmRowStatusEntry=mscFrAtmRowStatusEntry, mscFrAtmDlciABitStatusFromIf=mscFrAtmDlciABitStatusFromIf, mscFrAtmDlciSpProvTable=mscFrAtmDlciSpProvTable, mscFrAtmDlciSiwfSdOpTable=mscFrAtmDlciSiwfSdOpTable, mscFrAtmDlciSiwfEquivalentBitRate=mscFrAtmDlciSiwfEquivalentBitRate, mscFrAtmDlciNiwfSpvcProvEntry=mscFrAtmDlciNiwfSpvcProvEntry, mscFrAtmCaSdTable=mscFrAtmCaSdTable, mscFrAtmDlciABitEntry=mscFrAtmDlciABitEntry, mscFrAtmDlciSiwfSPvcRowStatusTable=mscFrAtmDlciSiwfSPvcRowStatusTable, mscFrAtmDlciNiwfQoSTransferPriority=mscFrAtmDlciNiwfQoSTransferPriority, mscFrAtmDlciNiwfNdRowStatus=mscFrAtmDlciNiwfNdRowStatus, mscFrAtmLmiUspParmsTable=mscFrAtmLmiUspParmsTable, mscFrAtmDlciCalldEntry=mscFrAtmDlciCalldEntry, mscFrAtmAddrRowStatusEntry=mscFrAtmAddrRowStatusEntry, mscFrAtmLmiPollingVerifTimeouts=mscFrAtmLmiPollingVerifTimeouts, mscFrAtmDlciSiwfSdFecnToEfciMapping=mscFrAtmDlciSiwfSdFecnToEfciMapping, mscFrAtmVFramerComponentName=mscFrAtmVFramerComponentName, mscFrAtmDlciSiwfSPvcComponentName=mscFrAtmDlciSiwfSPvcComponentName, mscFrAtmCaPoolAdmitBwIndex=mscFrAtmCaPoolAdmitBwIndex, mscFrAtmDlciSiwfQoSIndex=mscFrAtmDlciSiwfQoSIndex, mscFrAtmDlciSiwf=mscFrAtmDlciSiwf, mscFrAtmCaNdClpToDeMapping=mscFrAtmCaNdClpToDeMapping, mscFrAtmDlciSiwfQoS=mscFrAtmDlciSiwfQoS, mscFrAtmFramerFrmToIf=mscFrAtmFramerFrmToIf, mscFrAtmFramerLinkEntry=mscFrAtmFramerLinkEntry, mscFrAtmDlciNiwfAvgFrameSize=mscFrAtmDlciNiwfAvgFrameSize, mscFrAtmCaNiwfEmissionPriorityToIf=mscFrAtmCaNiwfEmissionPriorityToIf, mscFrAtmDlciSiwfAtmConIndex=mscFrAtmDlciSiwfAtmConIndex, mscFrAtmDlciNiwfClpToDeMapping=mscFrAtmDlciNiwfClpToDeMapping, mscFrAtmDlciEgSpStorageType=mscFrAtmDlciEgSpStorageType, mscFrAtmAdminState=mscFrAtmAdminState, mscFrAtmDlciDiscCongestedToIfBytes=mscFrAtmDlciDiscCongestedToIfBytes, mscFrAtmRowStatus=mscFrAtmRowStatus, mscFrAtmEmissionPriorityQsEntry=mscFrAtmEmissionPriorityQsEntry, mscFrAtmCaSiwfTransferPriority=mscFrAtmCaSiwfTransferPriority, mscFrAtmDlciSpIndex=mscFrAtmDlciSpIndex, mscFrAtmDlciNiwfSpvcRowStatusTable=mscFrAtmDlciNiwfSpvcRowStatusTable, mscFrAtmDlciNiwfAssignedBandwidthPool=mscFrAtmDlciNiwfAssignedBandwidthPool, mscFrAtmUnknownDlciFramesFromIf=mscFrAtmUnknownDlciFramesFromIf, mscFrAtmDlciSiwfSdComponentName=mscFrAtmDlciSiwfSdComponentName, mscFrAtmDlciNiwfStorageType=mscFrAtmDlciNiwfStorageType, mscFrAtmCaPoolProvBwValue=mscFrAtmCaPoolProvBwValue, mscFrAtmCaTpmComponentName=mscFrAtmCaTpmComponentName, mscFrAtmDlciSpExcessBurstSize=mscFrAtmDlciSpExcessBurstSize, mscFrAtmLmiRowStatusEntry=mscFrAtmLmiRowStatusEntry, mscFrAtmFramerOverruns=mscFrAtmFramerOverruns, mscFrAtmDlciNiwf=mscFrAtmDlciNiwf, mscFrAtmDlciSiwfSPvcIndex=mscFrAtmDlciSiwfSPvcIndex, mscFrAtmDlciSiwfQoSEmissionPriorityToIf=mscFrAtmDlciSiwfQoSEmissionPriorityToIf, mscFrAtmCaTroubledDlcis=mscFrAtmCaTroubledDlcis, mscFrAtmDlciABitTable=mscFrAtmDlciABitTable, mscFrAtmFramerStorageType=mscFrAtmFramerStorageType, mscFrAtmLmiFullStatusToIf=mscFrAtmLmiFullStatusToIf, mscFrAtmDlciSpAccounting=mscFrAtmDlciSpAccounting, mscFrAtmCaNdTable=mscFrAtmCaNdTable, mscFrAtmDlciSiwfSPvcRowStatusEntry=mscFrAtmDlciSiwfSPvcRowStatusEntry, mscFrAtmCaSdDeToClpMapping=mscFrAtmCaSdDeToClpMapping, mscFrAtmDlciSpMeasurementInterval=mscFrAtmDlciSpMeasurementInterval, mscFrAtmFrmToIfByQueueIndex=mscFrAtmFrmToIfByQueueIndex, mscFrAtmDlciEgSpProvEntry=mscFrAtmDlciEgSpProvEntry, mscFrAtmIfEntryTable=mscFrAtmIfEntryTable, mscFrAtmDlciEirIngressFrames=mscFrAtmDlciEirIngressFrames, mscFrAtmDlciSpMaximumFrameSize=mscFrAtmDlciSpMaximumFrameSize, mscFrAtmDlciSiwfPeakCellRate01=mscFrAtmDlciSiwfPeakCellRate01, mscFrAtmDlciSiwfSPvcStorageType=mscFrAtmDlciSiwfSPvcStorageType, mscFrAtmLmiStorageType=mscFrAtmLmiStorageType, mscFrAtmLmiUspParmsEntry=mscFrAtmLmiUspParmsEntry, mscFrAtmDlciSiwfFecnToEfciMapping=mscFrAtmDlciSiwfFecnToEfciMapping, mscFrAtmDlciNiwfNdProvTable=mscFrAtmDlciNiwfNdProvTable, mscFrAtmStateTable=mscFrAtmStateTable, mscFrAtmIfIndex=mscFrAtmIfIndex, mscFrAtmComponentName=mscFrAtmComponentName, mscFrAtmDlciBecnFrmFromIf=mscFrAtmDlciBecnFrmFromIf, mscFrAtmDlciSiwfAtmConComponentName=mscFrAtmDlciSiwfAtmConComponentName, mscFrAtmStorageType=mscFrAtmStorageType, mscFrAtmVFramerAdminState=mscFrAtmVFramerAdminState, mscFrAtmDlciDiscExcessFromIf=mscFrAtmDlciDiscExcessFromIf, mscFrAtmDlciEgSpRowStatusTable=mscFrAtmDlciEgSpRowStatusTable, mscFrAtmDlciNiwfNdRowStatusEntry=mscFrAtmDlciNiwfNdRowStatusEntry, mscFrAtmDlciSiwfQoSComponentName=mscFrAtmDlciSiwfQoSComponentName, mscFrAtmDlciSiwfInvalid1490Frames=mscFrAtmDlciSiwfInvalid1490Frames, mscFrAtmFramerIndex=mscFrAtmFramerIndex, mscFrAtmDlciTroubled=mscFrAtmDlciTroubled, mscFrAtmCaBwPoolEntry=mscFrAtmCaBwPoolEntry, mscFrAtmDlciEgSpMeasurementInterval=mscFrAtmDlciEgSpMeasurementInterval, mscFrAtmFramerFlagsBetweenFrames=mscFrAtmFramerFlagsBetweenFrames, mscFrAtmDlciNiwfQoSProvTable=mscFrAtmDlciNiwfQoSProvTable, mscFrAtmDlciSiwfIndex=mscFrAtmDlciSiwfIndex, mscFrAtmAlarmStatus=mscFrAtmAlarmStatus, mscFrAtmCaPoolAvailBwTable=mscFrAtmCaPoolAvailBwTable, mscFrAtmDlciSiwfSPvcRowStatus=mscFrAtmDlciSiwfSPvcRowStatus, mscFrAtmCaTpmTrafficParmConvPolicy=mscFrAtmCaTpmTrafficParmConvPolicy, mscFrAtmAddrProvEntry=mscFrAtmAddrProvEntry, mscFrAtmCaNdEntry=mscFrAtmCaNdEntry, mscFrAtmAddrIndex=mscFrAtmAddrIndex, mscFrAtmLmiUserSideEventHistory=mscFrAtmLmiUserSideEventHistory, mscFrAtmCaPoolProvBwTable=mscFrAtmCaPoolProvBwTable, mscFrAtmDlciSiwfNPvcSiwfNpvcOpEntry=mscFrAtmDlciSiwfNPvcSiwfNpvcOpEntry, mscFrAtmLmiKeepAliveStatusToIf=mscFrAtmLmiKeepAliveStatusToIf, mscFrAtmDlciSiwfDeToClpMapping=mscFrAtmDlciSiwfDeToClpMapping, mscFrAtmDlciEgSpRowStatus=mscFrAtmDlciEgSpRowStatus, mscFrAtmDlciNiwfSpvcRemoteAddress=mscFrAtmDlciNiwfSpvcRemoteAddress, mscFrAtmCaPoolAdmitBwTable=mscFrAtmCaPoolAdmitBwTable, mscFrAtmDlciNiwfSpvcRowStatus=mscFrAtmDlciNiwfSpvcRowStatus, mscFrAtmDlciExcessBytesFromIf=mscFrAtmDlciExcessBytesFromIf, mscFrAtmVFramerStatsTable=mscFrAtmVFramerStatsTable, mscFrAtmDlciSiwfTransferPriority=mscFrAtmDlciSiwfTransferPriority, mscFrAtmDlciSiwfAtmConRowStatus=mscFrAtmDlciSiwfAtmConRowStatus, mscFrAtmDlciRowStatus=mscFrAtmDlciRowStatus, mscFrAtmCaAccountingOptionsTable=mscFrAtmCaAccountingOptionsTable, mscFrAtmDlciDiscDeCongestedToIf=mscFrAtmDlciDiscDeCongestedToIf, mscFrAtmDlciNiwfRowStatus=mscFrAtmDlciNiwfRowStatus, mscFrAtmDlciIndex=mscFrAtmDlciIndex, mscFrAtmDlciRowStatusEntry=mscFrAtmDlciRowStatusEntry, mscFrAtmVFramerStatsEntry=mscFrAtmVFramerStatsEntry, mscFrAtmCaSdFecnToEfciMapping=mscFrAtmCaSdFecnToEfciMapping, mscFrAtmAddrAddrOpTable=mscFrAtmAddrAddrOpTable, mscFrAtmDlciSiwfSdDeToClpMapping=mscFrAtmDlciSiwfSdDeToClpMapping, mscFrAtmCustomerIdentifier=mscFrAtmCustomerIdentifier, mscFrAtmDlciNiwfTransferPriority=mscFrAtmDlciNiwfTransferPriority, mscFrAtmFramerComponentName=mscFrAtmFramerComponentName, mscFrAtmFramerFrmModeErrors=mscFrAtmFramerFrmModeErrors, mscFrAtmCaIndex=mscFrAtmCaIndex, mscFrAtmLmiRowStatus=mscFrAtmLmiRowStatus, mscFrAtmFramerUsageState=mscFrAtmFramerUsageState, mscFrAtmAddr=mscFrAtmAddr, mscFrAtmDlciEirIngressBytes=mscFrAtmDlciEirIngressBytes, mscFrAtmLmiComponentName=mscFrAtmLmiComponentName, mscFrAtmLmiUsageState=mscFrAtmLmiUsageState, mscFrAtmAddrComponentName=mscFrAtmAddrComponentName, mscFrAtmVFramerOctetFromOtherVFramer=mscFrAtmVFramerOctetFromOtherVFramer, mscFrAtmDlciEgSpIndex=mscFrAtmDlciEgSpIndex, mscFrAtmDlciSiwfUnknown1490Frames=mscFrAtmDlciSiwfUnknown1490Frames, mscFrAtmDlciNiwfQoSStorageType=mscFrAtmDlciNiwfQoSStorageType, mscFrAtmDlciSiwfSdOpEntry=mscFrAtmDlciSiwfSdOpEntry, mscFrAtmCaIfQoSEntry=mscFrAtmCaIfQoSEntry, mscFrAtmDlciNiwfSpvcRemoteDlci=mscFrAtmDlciNiwfSpvcRemoteDlci, mscFrAtmDlciSiwfSd=mscFrAtmDlciSiwfSd, mscFrAtmDlciSiwfNPvcRowStatusTable=mscFrAtmDlciSiwfNPvcRowStatusTable, mscFrAtmStateEntry=mscFrAtmStateEntry, mscFrAtmFramerFrameCrcType=mscFrAtmFramerFrameCrcType, mscFrAtmFramerOperationalState=mscFrAtmFramerOperationalState, mscFrAtmCaTpmStorageType=mscFrAtmCaTpmStorageType, mscFrAtmCaAccountClass=mscFrAtmCaAccountClass, mscFrAtmDlciNiwfNdIndex=mscFrAtmDlciNiwfNdIndex, mscFrAtmFramerAborts=mscFrAtmFramerAborts, mscFrAtmDlciSiwfNPvcProvTable=mscFrAtmDlciSiwfNPvcProvTable, mscFrAtmDlciSiwfQoSRowStatusTable=mscFrAtmDlciSiwfQoSRowStatusTable, mscFrAtmDlciExcessBurstSize=mscFrAtmDlciExcessBurstSize, mscFrAtmCaOpEntry=mscFrAtmCaOpEntry, mscFrAtmDlciSpOpEntry=mscFrAtmDlciSpOpEntry, mscFrAtmDlciNiwfSpvcCorrelationTag=mscFrAtmDlciNiwfSpvcCorrelationTag, mscFrAtmFramerStateTable=mscFrAtmFramerStateTable, frameRelayAtmCapabilities=frameRelayAtmCapabilities, mscFrAtmFrmToIfByQueueValue=mscFrAtmFrmToIfByQueueValue, mscFrAtmFramerLrcErrors=mscFrAtmFramerLrcErrors, mscFrAtmDlciStatsTable=mscFrAtmDlciStatsTable, mscFrAtmDlciIntTable=mscFrAtmDlciIntTable, mscFrAtmDlciFrmFromIf=mscFrAtmDlciFrmFromIf, mscFrAtmVFramerStorageType=mscFrAtmVFramerStorageType, mscFrAtmControlStatus=mscFrAtmControlStatus, mscFrAtmDlciSiwfQoSProvEntry=mscFrAtmDlciSiwfQoSProvEntry, mscFrAtmCaRowStatusEntry=mscFrAtmCaRowStatusEntry, frameRelayAtmGroupCA02=frameRelayAtmGroupCA02, mscFrAtmDlciStatsEntry=mscFrAtmDlciStatsEntry, mscFrAtmCaAccountCollection=mscFrAtmCaAccountCollection, mscFrAtmLmiFullStatusEnqToIf=mscFrAtmLmiFullStatusEnqToIf, mscFrAtmFramerStateEntry=mscFrAtmFramerStateEntry, mscFrAtmDlciRateEnforcement=mscFrAtmDlciRateEnforcement, mscFrAtmDlciDlciType=mscFrAtmDlciDlciType, mscFrAtmFramerStatsEntry=mscFrAtmFramerStatsEntry, mscFrAtmFramerNonOctetErrors=mscFrAtmFramerNonOctetErrors, mscFrAtmDlciErrorShortBytesFromIf=mscFrAtmDlciErrorShortBytesFromIf, mscFrAtmDlciEmissionPriorityToIf=mscFrAtmDlciEmissionPriorityToIf, mscFrAtmCaTpmAssignedBandwidthPool=mscFrAtmCaTpmAssignedBandwidthPool, mscFrAtmLmiCheckPointTimer=mscFrAtmLmiCheckPointTimer, mscFrAtmLmiFullStatusPollingCycles=mscFrAtmLmiFullStatusPollingCycles, mscFrAtmDlciSiwfRowStatusEntry=mscFrAtmDlciSiwfRowStatusEntry, frameRelayAtmMIB=frameRelayAtmMIB, mscFrAtmDlciSiwfNPvcProvEntry=mscFrAtmDlciSiwfNPvcProvEntry, mscFrAtmDlciNiwfQoS=mscFrAtmDlciNiwfQoS, mscFrAtmDlciSiwfAtmConOperTable=mscFrAtmDlciSiwfAtmConOperTable, mscFrAtmDlciSiwfSPvc=mscFrAtmDlciSiwfSPvc, mscFrAtmProceduralStatus=mscFrAtmProceduralStatus, mscFrAtmDlciSpRowStatusTable=mscFrAtmDlciSpRowStatusTable, mscFrAtmDlciSiwfNPvcCorrelationTag=mscFrAtmDlciSiwfNPvcCorrelationTag, mscFrAtmDlciSiwfSPvcProvTable=mscFrAtmDlciSiwfSPvcProvTable, mscFrAtmDlciNiwfNd=mscFrAtmDlciNiwfNd, frameRelayAtmGroup=frameRelayAtmGroup, mscFrAtmAddrMyAddress=mscFrAtmAddrMyAddress, mscFrAtmDlciDiscCongestedFromIf=mscFrAtmDlciDiscCongestedFromIf, mscFrAtmCaTpmIndex=mscFrAtmCaTpmIndex, mscFrAtmCaBwPoolTable=mscFrAtmCaBwPoolTable, mscFrAtmAddrRowStatus=mscFrAtmAddrRowStatus, mscFrAtmLmiAsyncStatusReport=mscFrAtmLmiAsyncStatusReport, mscFrAtmCaNiwfTransferPriority=mscFrAtmCaNiwfTransferPriority, mscFrAtmDlciNiwfSpvcIndex=mscFrAtmDlciNiwfSpvcIndex, mscFrAtmDlciCorrelationTag=mscFrAtmDlciCorrelationTag, mscFrAtm=mscFrAtm, mscFrAtmDlciBytesToIf=mscFrAtmDlciBytesToIf, mscFrAtmDlciNiwfOperEntry=mscFrAtmDlciNiwfOperEntry, mscFrAtmDlciSiwfSPvcCorrelationTag=mscFrAtmDlciSiwfSPvcCorrelationTag, mscFrAtmVFramerProvTable=mscFrAtmVFramerProvTable, mscFrAtmCaSiwfEmissionPriorityToIf=mscFrAtmCaSiwfEmissionPriorityToIf, mscFrAtmDlciSpEmissionPriorityToIf=mscFrAtmDlciSpEmissionPriorityToIf, mscFrAtmFramer=mscFrAtmFramer, mscFrAtmCidDataEntry=mscFrAtmCidDataEntry, mscFrAtmAddrStorageType=mscFrAtmAddrStorageType, mscFrAtmCaSoftPvcs=mscFrAtmCaSoftPvcs, mscFrAtmDlciSiwfComponentName=mscFrAtmDlciSiwfComponentName, mscFrAtmDlciDiscFrameAbit=mscFrAtmDlciDiscFrameAbit, mscFrAtmFramerOctetFromIf=mscFrAtmFramerOctetFromIf, mscFrAtmVFramerStateEntry=mscFrAtmVFramerStateEntry, mscFrAtmLmiSide=mscFrAtmLmiSide, mscFrAtmVFramerStateTable=mscFrAtmVFramerStateTable, mscFrAtmDlciErrorShortFrmFromIf=mscFrAtmDlciErrorShortFrmFromIf, mscFrAtmDlciSiwfConnOpEntry=mscFrAtmDlciSiwfConnOpEntry, mscFrAtmDlciNiwfRowStatusEntry=mscFrAtmDlciNiwfRowStatusEntry, mscFrAtmCaPoolAdmitBwValue=mscFrAtmCaPoolAdmitBwValue, mscFrAtmFramerRowStatus=mscFrAtmFramerRowStatus, mscFrAtmDlciNiwfQoSRowStatusEntry=mscFrAtmDlciNiwfQoSRowStatusEntry, mscFrAtmDlciNiwfSpvcComponentName=mscFrAtmDlciNiwfSpvcComponentName, mscFrAtmDlciSiwfSdRowStatusTable=mscFrAtmDlciSiwfSdRowStatusTable, frameRelayAtmGroupCA02A=frameRelayAtmGroupCA02A, mscFrAtmOperStatusEntry=mscFrAtmOperStatusEntry, mscFrAtmDlciTotalEgressBytes=mscFrAtmDlciTotalEgressBytes, mscFrAtmCaOpTable=mscFrAtmCaOpTable)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayAtmMIB", mscFrAtmCaLinkRate=mscFrAtmCaLinkRate, mscFrAtmFramerInterfaceName=mscFrAtmFramerInterfaceName, mscFrAtmFramerDataInversion=mscFrAtmFramerDataInversion, mscFrAtmCaAccountingOptionsEntry=mscFrAtmCaAccountingOptionsEntry, mscFrAtmUnknownStatus=mscFrAtmUnknownStatus, mscFrAtmDlciSpOpTable=mscFrAtmDlciSpOpTable)
