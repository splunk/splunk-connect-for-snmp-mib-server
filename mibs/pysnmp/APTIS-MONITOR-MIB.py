#
# PySNMP MIB module APTIS-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APTIS-MONITOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:08:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Boolean, aptis_monitoring = mibBuilder.importSymbols("APTIS-MIB", "Boolean", "aptis-monitoring")
aptis_modules, = mibBuilder.importSymbols("APTIS-REG-MIB", "aptis-modules")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, iso, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, ObjectIdentity, Gauge32, Counter64, IpAddress, TimeTicks, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "Gauge32", "Counter64", "IpAddress", "TimeTicks", "Integer32", "Unsigned32")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
aptisMonitorModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 1, 4))
if mibBuilder.loadTexts: aptisMonitorModule.setLastUpdated('0004140000Z')
if mibBuilder.loadTexts: aptisMonitorModule.setOrganization('Nortel Networks')
clockStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2901), )
if mibBuilder.loadTexts: clockStatusTable.setStatus('current')
clockStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2901, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "clockStatusCurrentSource"))
if mibBuilder.loadTexts: clockStatusEntry.setStatus('current')
clockStatusCurrentSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2901, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("internal", 0), ("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clockStatusCurrentSource.setStatus('current')
ds0StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112), )
if mibBuilder.loadTexts: ds0StatsTable.setStatus('current')
ds0StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ds0StatsSlotIndex"), (0, "APTIS-MONITOR-MIB", "ds0StatsLineNumber"), (0, "APTIS-MONITOR-MIB", "ds0StatsDs0Index"))
if mibBuilder.loadTexts: ds0StatsEntry.setStatus('current')
ds0StatsInCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsInCalls.setStatus('current')
ds0StatsInConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsInConnected.setStatus('current')
ds0StatsOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsOutCalls.setStatus('current')
ds0StatsOutConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsOutConnected.setStatus('current')
ds0StatsInCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsInCleared.setStatus('current')
ds0StatsOutCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsOutCleared.setStatus('current')
ds0StatsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsSlotIndex.setStatus('current')
ds0StatsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 56))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsLineNumber.setStatus('current')
ds0StatsDs0Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2112, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0StatsDs0Index.setStatus('current')
e1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2502), )
if mibBuilder.loadTexts: e1StatsTable.setStatus('current')
e1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2502, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "e1StatsSlotIndex"), (0, "APTIS-MONITOR-MIB", "e1StatsLineNumber"))
if mibBuilder.loadTexts: e1StatsEntry.setStatus('current')
e1StatsAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2502, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("f1", 0), ("f2", 1), ("f3", 2), ("f4", 3), ("f5", 4), ("f6", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1StatsAlarmStatus.setStatus('current')
e1StatsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2502, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1StatsSlotIndex.setStatus('current')
e1StatsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2502, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1StatsLineNumber.setStatus('current')
e1CountsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503), )
if mibBuilder.loadTexts: e1CountsTable.setStatus('current')
e1CountsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "e1CountsSlotIndex"), (0, "APTIS-MONITOR-MIB", "e1CountsLineNumber"))
if mibBuilder.loadTexts: e1CountsEntry.setStatus('current')
e1CountsChannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsChannelCount.setStatus('current')
e1CountsChannelsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsChannelsInUse.setStatus('current')
e1CountsIncomingCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsIncomingCallAttempts.setStatus('current')
e1CountsIncomingConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsIncomingConnects.setStatus('current')
e1CountsIncomingDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsIncomingDisconnects.setStatus('current')
e1CountsOutgoingCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsOutgoingCallAttempts.setStatus('current')
e1CountsOutgoingConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsOutgoingConnects.setStatus('current')
e1CountsOutgoingDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsOutgoingDisconnects.setStatus('current')
e1CountsSessionAbortMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsSessionAbortMessages.setStatus('current')
e1CountsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsSlotIndex.setStatus('current')
e1CountsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2503, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1CountsLineNumber.setStatus('current')
e1SummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504), )
if mibBuilder.loadTexts: e1SummaryStatsTable.setStatus('current')
e1SummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "e1SummaryStatsSlotIndex"), (0, "APTIS-MONITOR-MIB", "e1SummaryStatsLineNumber"))
if mibBuilder.loadTexts: e1SummaryStatsEntry.setStatus('current')
e1SummaryStatsRingingChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1SummaryStatsRingingChannels.setStatus('current')
e1SummaryStatsConnectedChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1SummaryStatsConnectedChannels.setStatus('current')
e1SummaryStatsClearingChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1SummaryStatsClearingChannels.setStatus('current')
e1SummaryStatsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1SummaryStatsSlotIndex.setStatus('current')
e1SummaryStatsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1SummaryStatsLineNumber.setStatus('current')
e1SummaryStatsFunctionalChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1SummaryStatsFunctionalChannels.setStatus('current')
e1SummaryStatsIdleChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2504, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1SummaryStatsIdleChannels.setStatus('current')
cHdlcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211), )
if mibBuilder.loadTexts: cHdlcStatsTable.setStatus('current')
cHdlcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "cHdlcStatsNohdrspaceOut"))
if mibBuilder.loadTexts: cHdlcStatsEntry.setStatus('current')
cHdlcStatsNohdrspaceOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsNohdrspaceOut.setStatus('current')
cHdlcStatsNomemoryOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsNomemoryOut.setStatus('current')
cHdlcStatsCiscoFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsCiscoFramesOut.setStatus('current')
cHdlcStatsKeepalivesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsKeepalivesIn.setStatus('current')
cHdlcStatsUnknownProtocolIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsUnknownProtocolIn.setStatus('current')
cHdlcStatsShortFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsShortFramesIn.setStatus('current')
cHdlcStatsPppFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsPppFramesIn.setStatus('current')
cHdlcStatsUnknownFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsUnknownFramesIn.setStatus('current')
cHdlcStatsUnknownCiscoTypeIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsUnknownCiscoTypeIn.setStatus('current')
cHdlcStatsCiscoFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1211, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cHdlcStatsCiscoFramesIn.setStatus('current')
ipCleartcpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231), )
if mibBuilder.loadTexts: ipCleartcpStatsTable.setStatus('current')
ipCleartcpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ipCleartcpStatsInputQfull"))
if mibBuilder.loadTexts: ipCleartcpStatsEntry.setStatus('current')
ipCleartcpStatsInputQfull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipCleartcpStatsInputQfull.setStatus('current')
ipCleartcpStatsInputTcpfull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipCleartcpStatsInputTcpfull.setStatus('current')
ipCleartcpStatsInputDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipCleartcpStatsInputDroppedBytes.setStatus('current')
ipCleartcpStatsInputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipCleartcpStatsInputBytes.setStatus('current')
ipCleartcpStatsOutputQfull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipCleartcpStatsOutputQfull.setStatus('current')
ipCleartcpStatsOutputDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipCleartcpStatsOutputDroppedBytes.setStatus('current')
ipCleartcpStatsOutputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1231, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipCleartcpStatsOutputBytes.setStatus('current')
ipSvcMonitoringTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102), )
if mibBuilder.loadTexts: ipSvcMonitoringTable.setStatus('current')
ipSvcMonitoringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ipSvcMonitoringServiceName"))
if mibBuilder.loadTexts: ipSvcMonitoringEntry.setStatus('current')
ipSvcMonitoringServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringServiceName.setStatus('current')
ipSvcMonitoringState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("stopped", 1), ("stopping", 2), ("starting", 3), ("running", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringState.setStatus('current')
ipSvcMonitoringUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringUptime.setStatus('current')
ipSvcMonitoringRequestsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringRequestsIn.setStatus('current')
ipSvcMonitoringResponsesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringResponsesOut.setStatus('current')
ipSvcMonitoringRequestsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringRequestsOut.setStatus('current')
ipSvcMonitoringResponsesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringResponsesIn.setStatus('current')
ipSvcMonitoringRequestsInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringRequestsInProgress.setStatus('current')
ipSvcMonitoringRequestsInError = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringRequestsInError.setStatus('current')
ipSvcMonitoringResponsesInError = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1102, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSvcMonitoringResponsesInError.setStatus('current')
ipAlarmEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196), )
if mibBuilder.loadTexts: ipAlarmEntryTable.setStatus('current')
ipAlarmEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ipAlarmEntryTrapGenNum"))
if mibBuilder.loadTexts: ipAlarmEntryEntry.setStatus('current')
ipAlarmEntryAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("other", 1), ("flashAlarm", 2), ("ds1Alarm", 3), ("ds3Alarm", 4), ("linkAlarm", 5), ("isdnLinkAlarm", 6), ("hssiPortAlarm", 7), ("enetPortAlarm", 8), ("tunnelAlarm", 9), ("ss7Alarm", 10), ("macModemsAlarm", 11), ("totalModemsAlarm", 12), ("slotAlarm", 13), ("fanAlarm", 14), ("powerAlarm", 15), ("dhcpAlarm", 16), ("slotTempAlarm", 17), ("slaveSccFlashAlarm", 18), ("slaveSccAlarm", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryAlarmType.setStatus('current')
ipAlarmEntryTrapGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapGenNum.setStatus('current')
ipAlarmEntryTrapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapType.setStatus('current')
ipAlarmEntryTrapOID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapOID.setStatus('current')
ipAlarmEntryTrapOIDLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapOIDLen.setStatus('current')
ipAlarmEntryTrapSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 6, 5, 4, 3, 2, 1, 0))).clone(namedValues=NamedValues(("fatal", 7), ("emerg", 6), ("alert", 5), ("crit", 4), ("err", 3), ("warning", 2), ("notice", 1), ("info", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapSeverity.setStatus('current')
ipAlarmEntryTrapTimeticks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapTimeticks.setStatus('current')
ipAlarmEntryTrapPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapPath.setStatus('current')
ipAlarmEntryTrapArg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapArg1.setStatus('current')
ipAlarmEntryTrapArg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapArg2.setStatus('current')
ipAlarmEntryTrapArg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapArg3.setStatus('current')
ipAlarmEntryTrapGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1196, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cvx", 1), ("mib2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAlarmEntryTrapGroup.setStatus('current')
ipsecCountersTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1612), )
if mibBuilder.loadTexts: ipsecCountersTable.setStatus('current')
ipsecCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1612, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ipsecCountersOutboundCounter"))
if mibBuilder.loadTexts: ipsecCountersEntry.setStatus('current')
ipsecCountersOutboundCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1612, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecCountersOutboundCounter.setStatus('current')
ipsecCountersInboundCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1612, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecCountersInboundCounter.setStatus('current')
ipsecCountersOutboundDropCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1612, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecCountersOutboundDropCounter.setStatus('current')
ipsecCountersInboundDropCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1612, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecCountersInboundDropCounter.setStatus('current')
ipStubStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221), )
if mibBuilder.loadTexts: ipStubStatsTable.setStatus('current')
ipStubStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ipStubStatsIgmpInMsgs"))
if mibBuilder.loadTexts: ipStubStatsEntry.setStatus('current')
ipStubStatsIgmpInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStubStatsIgmpInMsgs.setStatus('current')
ipStubStatsIgmpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStubStatsIgmpInErrors.setStatus('current')
ipStubStatsIgmpInReports = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStubStatsIgmpInReports.setStatus('current')
ipStubStatsIgmpInQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStubStatsIgmpInQueries.setStatus('current')
ipStubStatsIgmpUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStubStatsIgmpUnknownType.setStatus('current')
ipStubStatsIgmpOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStubStatsIgmpOutMsgs.setStatus('current')
ipStubStatsNomemoryOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1221, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStubStatsNomemoryOut.setStatus('current')
iSDNStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2208), )
if mibBuilder.loadTexts: iSDNStatsTable.setStatus('current')
iSDNStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2208, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "iSDNStatsInCalls"))
if mibBuilder.loadTexts: iSDNStatsEntry.setStatus('current')
iSDNStatsInCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2208, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNStatsInCalls.setStatus('current')
iSDNStatsInConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2208, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNStatsInConnected.setStatus('current')
iSDNStatsOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2208, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNStatsOutCalls.setStatus('current')
iSDNStatsOutConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2208, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNStatsOutConnected.setStatus('current')
iSDNStatsChargedUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2208, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNStatsChargedUnits.setStatus('current')
iSDNLayer2StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2209), )
if mibBuilder.loadTexts: iSDNLayer2StatsTable.setStatus('current')
iSDNLayer2StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2209, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "iSDNLayer2StatsLapdPeerSabme"))
if mibBuilder.loadTexts: iSDNLayer2StatsEntry.setStatus('current')
iSDNLayer2StatsLapdPeerSabme = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2209, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNLayer2StatsLapdPeerSabme.setStatus('current')
iSDNLayer2StatsLapdRcvdFrmr = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2209, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNLayer2StatsLapdRcvdFrmr.setStatus('current')
iSDNLayer2StatsLapdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2209, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNLayer2StatsLapdState.setStatus('current')
iSDNHDLCFrameTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210), )
if mibBuilder.loadTexts: iSDNHDLCFrameTable.setStatus('current')
iSDNHDLCFrameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "iSDNHDLCFrameIndex"))
if mibBuilder.loadTexts: iSDNHDLCFrameEntry.setStatus('current')
iSDNHDLCFrameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNHDLCFrameIndex.setStatus('current')
iSDNHDLCFrameNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNHDLCFrameNextIndex.setStatus('current')
iSDNHDLCFrameMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNHDLCFrameMaxIndex.setStatus('current')
iSDNHDLCFrameTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNHDLCFrameTimestamp.setStatus('current')
iSDNHDLCFrameDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transmit", 1), ("receive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNHDLCFrameDirection.setStatus('current')
iSDNHDLCFrameLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNHDLCFrameLength.setStatus('current')
iSDNHDLCFrameMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2210, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 260))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSDNHDLCFrameMessage.setStatus('current')
l2FTunnelStatusActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351), )
if mibBuilder.loadTexts: l2FTunnelStatusActiveTable.setStatus('current')
l2FTunnelStatusActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "l2FTunnelStatusActiveLocalCLID"))
if mibBuilder.loadTexts: l2FTunnelStatusActiveEntry.setStatus('current')
l2FTunnelStatusActiveLocalCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveLocalCLID.setStatus('current')
l2FTunnelStatusActiveRemoteCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveRemoteCLID.setStatus('current')
l2FTunnelStatusActiveLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveLocalAddress.setStatus('current')
l2FTunnelStatusActiveRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveRemoteAddress.setStatus('current')
l2FTunnelStatusActiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 0), ("start1", 1), ("start2", 2), ("opened", 3), ("close1", 4), ("close2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveState.setStatus('current')
l2FTunnelStatusActiveUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveUpTime.setStatus('current')
l2FTunnelStatusActiveActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveActiveLinks.setStatus('current')
l2FTunnelStatusActiveMaxActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveMaxActiveLinks.setStatus('current')
l2FTunnelStatusActivePendingLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActivePendingLinks.setStatus('current')
l2FTunnelStatusActiveLinksAdded = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveLinksAdded.setStatus('current')
l2FTunnelStatusActiveLinksAddedSuccessfully = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveLinksAddedSuccessfully.setStatus('current')
l2FTunnelStatusActiveLinksAddedUnsuccessfully = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveLinksAddedUnsuccessfully.setStatus('current')
l2FTunnelStatusActiveLinksRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveLinksRemoved.setStatus('current')
l2FTunnelStatusActiveGotOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 14), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveGotOpened.setStatus('current')
l2FTunnelStatusActiveVPOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveVPOP.setStatus('current')
l2FTunnelStatusActiveL2FTermationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1351, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusActiveL2FTermationCause.setStatus('current')
l2FTunnelStatusInactiveTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352), )
if mibBuilder.loadTexts: l2FTunnelStatusInactiveTable.setStatus('current')
l2FTunnelStatusInactiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "l2FTunnelStatusInactiveLocalCLID"))
if mibBuilder.loadTexts: l2FTunnelStatusInactiveEntry.setStatus('current')
l2FTunnelStatusInactiveLocalCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveLocalCLID.setStatus('current')
l2FTunnelStatusInactiveRemoteCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveRemoteCLID.setStatus('current')
l2FTunnelStatusInactiveLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveLocalAddress.setStatus('current')
l2FTunnelStatusInactiveRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveRemoteAddress.setStatus('current')
l2FTunnelStatusInactiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 0), ("start1", 1), ("start2", 2), ("opened", 3), ("close1", 4), ("close2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveState.setStatus('current')
l2FTunnelStatusInactiveUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveUpTime.setStatus('current')
l2FTunnelStatusInactiveActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveActiveLinks.setStatus('current')
l2FTunnelStatusInactiveMaxActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveMaxActiveLinks.setStatus('current')
l2FTunnelStatusInactivePendingLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactivePendingLinks.setStatus('current')
l2FTunnelStatusInactiveLinksAdded = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveLinksAdded.setStatus('current')
l2FTunnelStatusInactiveLinksAddedSuccessfully = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveLinksAddedSuccessfully.setStatus('current')
l2FTunnelStatusInactiveLinksAddedUnsuccessfully = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveLinksAddedUnsuccessfully.setStatus('current')
l2FTunnelStatusInactiveLinksRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveLinksRemoved.setStatus('current')
l2FTunnelStatusInactiveGotOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 14), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveGotOpened.setStatus('current')
l2FTunnelStatusInactiveVPOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveVPOP.setStatus('current')
l2FTunnelStatusInactiveL2FTermationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1352, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FTunnelStatusInactiveL2FTermationCause.setStatus('current')
l2FLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353), )
if mibBuilder.loadTexts: l2FLinkStatusTable.setStatus('current')
l2FLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "l2FLinkStatusLocalCLID"), (0, "APTIS-MONITOR-MIB", "l2FLinkStatusIndex"))
if mibBuilder.loadTexts: l2FLinkStatusEntry.setStatus('current')
l2FLinkStatusLocalCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusLocalCLID.setStatus('current')
l2FLinkStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusIndex.setStatus('current')
l2FLinkStatusSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusSessionID.setStatus('current')
l2FLinkStatusVPOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusVPOP.setStatus('current')
l2FLinkStatusMIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusMIDValue.setStatus('current')
l2FLinkStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 0), ("pending", 1), ("start1", 2), ("opened", 3), ("close1", 4), ("close2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusState.setStatus('current')
l2FLinkStatusUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusUpTime.setStatus('current')
l2FLinkStatusUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusUserName.setStatus('current')
l2FLinkStatusTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusTxPackets.setStatus('current')
l2FLinkStatusTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusTxBytes.setStatus('current')
l2FLinkStatusRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusRxPackets.setStatus('current')
l2FLinkStatusRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusRxBytes.setStatus('current')
l2FLinkStatusL2FTermationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1353, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLinkStatusL2FTermationCause.setStatus('current')
l2FLogEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1354), )
if mibBuilder.loadTexts: l2FLogEntryTable.setStatus('current')
l2FLogEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1354, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "l2FLogEntryLocalCLID"), (0, "APTIS-MONITOR-MIB", "l2FLogEntryIndex"))
if mibBuilder.loadTexts: l2FLogEntryEntry.setStatus('current')
l2FLogEntryLocalCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1354, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLogEntryLocalCLID.setStatus('current')
l2FLogEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1354, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLogEntryIndex.setStatus('current')
l2FLogEntryMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1354, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLogEntryMinIndex.setStatus('current')
l2FLogEntryMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1354, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLogEntryMaxIndex.setStatus('current')
l2FLogEntryUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1354, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLogEntryUpTime.setStatus('current')
l2FLogEntryEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1354, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2FLogEntryEntryText.setStatus('current')
l2TPTunnelStatusActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507), )
if mibBuilder.loadTexts: l2TPTunnelStatusActiveTable.setStatus('current')
l2TPTunnelStatusActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "l2TPTunnelStatusActiveLocalID"))
if mibBuilder.loadTexts: l2TPTunnelStatusActiveEntry.setStatus('current')
l2TPTunnelStatusActiveSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveSlot.setStatus('current')
l2TPTunnelStatusActiveLocalID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveLocalID.setStatus('current')
l2TPTunnelStatusActiveRemoteID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveRemoteID.setStatus('current')
l2TPTunnelStatusActiveLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveLocalAddress.setStatus('current')
l2TPTunnelStatusActiveRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveRemoteAddress.setStatus('current')
l2TPTunnelStatusActiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("waitCtrlReply", 1), ("waitCtrlConn", 2), ("established", 3), ("closed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveState.setStatus('current')
l2TPTunnelStatusActiveUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveUpTime.setStatus('current')
l2TPTunnelStatusActiveActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveActiveLinks.setStatus('current')
l2TPTunnelStatusActiveMaxActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveMaxActiveLinks.setStatus('current')
l2TPTunnelStatusActivePendingLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActivePendingLinks.setStatus('current')
l2TPTunnelStatusActiveLinksAdded = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveLinksAdded.setStatus('current')
l2TPTunnelStatusActiveLinksAddedSuccessfully = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveLinksAddedSuccessfully.setStatus('current')
l2TPTunnelStatusActiveLinksAddedUnsuccessfully = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveLinksAddedUnsuccessfully.setStatus('current')
l2TPTunnelStatusActiveLinksRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveLinksRemoved.setStatus('current')
l2TPTunnelStatusActiveGotOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 15), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveGotOpened.setStatus('current')
l2TPTunnelStatusActiveVPOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveVPOP.setStatus('current')
l2TPTunnelStatusActiveL2TPTermationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1507, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusActiveL2TPTermationCause.setStatus('current')
l2TPTunnelStatusInactiveTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508), )
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveTable.setStatus('current')
l2TPTunnelStatusInactiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "l2TPTunnelStatusInactiveLocalID"))
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveEntry.setStatus('current')
l2TPTunnelStatusInactiveSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveSlot.setStatus('current')
l2TPTunnelStatusInactiveLocalID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveLocalID.setStatus('current')
l2TPTunnelStatusInactiveRemoteID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveRemoteID.setStatus('current')
l2TPTunnelStatusInactiveLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveLocalAddress.setStatus('current')
l2TPTunnelStatusInactiveRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveRemoteAddress.setStatus('current')
l2TPTunnelStatusInactiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("waitCtrlReply", 1), ("waitCtrlConn", 2), ("established", 3), ("closed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveState.setStatus('current')
l2TPTunnelStatusInactiveUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveUpTime.setStatus('current')
l2TPTunnelStatusInactiveActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveActiveLinks.setStatus('current')
l2TPTunnelStatusInactiveMaxActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveMaxActiveLinks.setStatus('current')
l2TPTunnelStatusInactivePendingLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactivePendingLinks.setStatus('current')
l2TPTunnelStatusInactiveLinksAdded = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveLinksAdded.setStatus('current')
l2TPTunnelStatusInactiveLinksAddedSuccessfully = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveLinksAddedSuccessfully.setStatus('current')
l2TPTunnelStatusInactiveLinksAddedUnsuccessfully = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveLinksAddedUnsuccessfully.setStatus('current')
l2TPTunnelStatusInactiveLinksRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveLinksRemoved.setStatus('current')
l2TPTunnelStatusInactiveGotOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 15), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveGotOpened.setStatus('current')
l2TPTunnelStatusInactiveVPOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveVPOP.setStatus('current')
l2TPTunnelStatusInactiveL2TPTermationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1508, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPTunnelStatusInactiveL2TPTermationCause.setStatus('current')
l2TPLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509), )
if mibBuilder.loadTexts: l2TPLinkStatusTable.setStatus('current')
l2TPLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "l2TPLinkStatusLocalID"), (0, "APTIS-MONITOR-MIB", "l2TPLinkStatusIndex"))
if mibBuilder.loadTexts: l2TPLinkStatusEntry.setStatus('current')
l2TPLinkStatusLocalID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusLocalID.setStatus('current')
l2TPLinkStatusRemoteID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusRemoteID.setStatus('current')
l2TPLinkStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusIndex.setStatus('current')
l2TPLinkStatusSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusSessionID.setStatus('current')
l2TPLinkStatusVPOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusVPOP.setStatus('current')
l2TPLinkStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("idle", 0), ("waitReply", 1), ("connected", 2), ("closed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusState.setStatus('current')
l2TPLinkStatusUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusUpTime.setStatus('current')
l2TPLinkStatusUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusUserName.setStatus('current')
l2TPLinkStatusTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusTxPackets.setStatus('current')
l2TPLinkStatusTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusTxBytes.setStatus('current')
l2TPLinkStatusRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusRxPackets.setStatus('current')
l2TPLinkStatusRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusRxBytes.setStatus('current')
l2TPLinkStatusL2TPTermationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1509, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLinkStatusL2TPTermationCause.setStatus('current')
l2TPLogEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1510), )
if mibBuilder.loadTexts: l2TPLogEntryTable.setStatus('current')
l2TPLogEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1510, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "l2TPLogEntryLocalID"), (0, "APTIS-MONITOR-MIB", "l2TPLogEntryIndex"))
if mibBuilder.loadTexts: l2TPLogEntryEntry.setStatus('current')
l2TPLogEntryLocalID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1510, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLogEntryLocalID.setStatus('current')
l2TPLogEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1510, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLogEntryIndex.setStatus('current')
l2TPLogEntryMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1510, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLogEntryMinIndex.setStatus('current')
l2TPLogEntryMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1510, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLogEntryMaxIndex.setStatus('current')
l2TPLogEntryUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1510, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLogEntryUpTime.setStatus('current')
l2TPLogEntryEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1510, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TPLogEntryEntryText.setStatus('current')
mamLogEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1402), )
if mibBuilder.loadTexts: mamLogEntryTable.setStatus('current')
mamLogEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1402, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "mamLogEntryIndex"))
if mibBuilder.loadTexts: mamLogEntryEntry.setStatus('current')
mamLogEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1402, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mamLogEntryIndex.setStatus('current')
mamLogEntryMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1402, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mamLogEntryMinIndex.setStatus('current')
mamLogEntryMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1402, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mamLogEntryMaxIndex.setStatus('current')
mamLogEntryEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1402, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mamLogEntryEntryText.setStatus('current')
modemStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422), )
if mibBuilder.loadTexts: modemStatsTable.setStatus('current')
modemStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "modemStatsSlot"), (0, "APTIS-MONITOR-MIB", "modemStatsModemIndex"))
if mibBuilder.loadTexts: modemStatsEntry.setStatus('current')
modemStatsState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disabled", 1), ("noDownload", 2), ("dead", 3), ("takenOut", 4), ("idle", 5), ("active", 6), ("downloading", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsState.setStatus('current')
modemStatsSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsSlot.setStatus('current')
modemStatsIOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsIOP.setStatus('current')
modemStatsDMM = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsDMM.setStatus('current')
modemStatsPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsPack.setStatus('current')
modemStatsModem = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsModem.setStatus('current')
modemStatsCurrentSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsCurrentSessionID.setStatus('current')
modemStatsModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsModemIndex.setStatus('current')
modemStatsRPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 101), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsRPI.setStatus('current')
modemStatsTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsTotalCalls.setStatus('current')
modemStatsConnectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsConnectedCalls.setStatus('current')
modemStatsLast32Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsLast32Calls.setStatus('current')
modemStatsConnectedWin = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsConnectedWin.setStatus('current')
modemStatsConnectedLose = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsConnectedLose.setStatus('current')
modemStatsAuthCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsAuthCalls.setStatus('current')
modemStatsLast32Auth = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 302), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsLast32Auth.setStatus('current')
modemStatsAuthWin = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 303), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsAuthWin.setStatus('current')
modemStatsAuthLose = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 304), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsAuthLose.setStatus('current')
modemStatsECCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 401), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsECCalls.setStatus('current')
modemStatsDCCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 402), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsDCCalls.setStatus('current')
modemStatsK56Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 403), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsK56Calls.setStatus('current')
modemStatsV90Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 404), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsV90Calls.setStatus('current')
modemStatsV34Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 405), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsV34Calls.setStatus('current')
modemStatsV32Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 406), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsV32Calls.setStatus('current')
modemStatsStatsSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 501), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsStatsSamples.setStatus('current')
modemStatsInitialTxSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 502), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsInitialTxSum.setStatus('current')
modemStatsMinTxSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 503), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsMinTxSum.setStatus('current')
modemStatsMaxTxSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 504), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsMaxTxSum.setStatus('current')
modemStatsFinalTxSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 505), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsFinalTxSum.setStatus('current')
modemStatsMinTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 506), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsMinTxSpeed.setStatus('current')
modemStatsMaxTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 507), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsMaxTxSpeed.setStatus('current')
modemStatsInitialRxSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 508), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsInitialRxSum.setStatus('current')
modemStatsMinRxSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 509), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsMinRxSum.setStatus('current')
modemStatsMaxRxSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 510), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsMaxRxSum.setStatus('current')
modemStatsFinalRxSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 511), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsFinalRxSum.setStatus('current')
modemStatsMinRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 512), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsMinRxSpeed.setStatus('current')
modemStatsMaxRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 513), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsMaxRxSpeed.setStatus('current')
modemStatsDownloadAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 1001), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsDownloadAttempts.setStatus('current')
modemStatsDownloadSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 1002), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsDownloadSuccesses.setStatus('current')
modemStatsResetFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 1003), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsResetFailures.setStatus('current')
modemStatsResetRevivals = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 1004), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsResetRevivals.setStatus('current')
modemStatsPackCrashes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 1005), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsPackCrashes.setStatus('current')
modemStatsPackRevivals = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1422, 1, 1006), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatsPackRevivals.setStatus('current')
modemCallStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423), )
if mibBuilder.loadTexts: modemCallStatsTable.setStatus('current')
modemCallStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "modemCallStatsSlotIndex"), (0, "APTIS-MONITOR-MIB", "modemCallStatsModemIndex"))
if mibBuilder.loadTexts: modemCallStatsEntry.setStatus('current')
modemCallStatsTxInitialSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxInitialSpeed.setStatus('current')
modemCallStatsTxFinalSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxFinalSpeed.setStatus('current')
modemCallStatsTxMinSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxMinSpeed.setStatus('current')
modemCallStatsTxMaxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxMaxSpeed.setStatus('current')
modemCallStatsRxInitialSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxInitialSpeed.setStatus('current')
modemCallStatsRxFinalSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxFinalSpeed.setStatus('current')
modemCallStatsRxMinSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxMinSpeed.setStatus('current')
modemCallStatsRxMaxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxMaxSpeed.setStatus('current')
modemCallStatsECProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsECProtocol.setStatus('current')
modemCallStatsDCProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsDCProtocol.setStatus('current')
modemCallStatsModulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsModulationType.setStatus('current')
modemCallStatsInitialModulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsInitialModulationType.setStatus('current')
modemCallStatsSymbolRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsSymbolRate.setStatus('current')
modemCallStatsTxCarrierFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxCarrierFrequency.setStatus('current')
modemCallStatsRxCarrierFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxCarrierFrequency.setStatus('current')
modemCallStatsLastAGCGainValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsLastAGCGainValue.setStatus('current')
modemCallStatsMinAGCGainValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsMinAGCGainValue.setStatus('current')
modemCallStatsMaxAGCGainValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsMaxAGCGainValue.setStatus('current')
modemCallStatsTxLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxLevel.setStatus('current')
modemCallStatsTxLevelReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxLevelReduction.setStatus('current')
modemCallStatsLastEQMValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsLastEQMValue.setStatus('current')
modemCallStatsMinEQMValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsMinEQMValue.setStatus('current')
modemCallStatsMaxEQMValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsMaxEQMValue.setStatus('current')
modemCallStatsEQMHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQMHits.setStatus('current')
modemCallStatsEQMSumLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQMSumLow.setStatus('current')
modemCallStatsEQMSumMiddle = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQMSumMiddle.setStatus('current')
modemCallStatsEQMSumHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQMSumHigh.setStatus('current')
modemCallStatsEQM1Second = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM1Second.setStatus('current')
modemCallStatsEQM2Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM2Seconds.setStatus('current')
modemCallStatsEQM3Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM3Seconds.setStatus('current')
modemCallStatsEQM4Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM4Seconds.setStatus('current')
modemCallStatsEQM5Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM5Seconds.setStatus('current')
modemCallStatsEQM6Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM6Seconds.setStatus('current')
modemCallStatsEQM7Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM7Seconds.setStatus('current')
modemCallStatsEQM8Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM8Seconds.setStatus('current')
modemCallStatsEQM9Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM9Seconds.setStatus('current')
modemCallStatsEQM10Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsEQM10Seconds.setStatus('current')
modemCallStatsSNRRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsSNRRatio.setStatus('current')
modemCallStatsMinSNRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsMinSNRValue.setStatus('current')
modemCallStatsMaxSNRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsMaxSNRValue.setStatus('current')
modemCallStatsLocalRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsLocalRetrains.setStatus('current')
modemCallStatsRemoteRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRemoteRetrains.setStatus('current')
modemCallStatsLocalRateRenegs = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsLocalRateRenegs.setStatus('current')
modemCallStatsRemoteRateRenegs = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRemoteRateRenegs.setStatus('current')
modemCallStatsTxNonlinearEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxNonlinearEncoding.setStatus('current')
modemCallStatsRxNonlinearEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxNonlinearEncoding.setStatus('current')
modemCallStatsTxPrecoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxPrecoding.setStatus('current')
modemCallStatsRxPrecoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxPrecoding.setStatus('current')
modemCallStatsTxShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTxShaping.setStatus('current')
modemCallStatsRxShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxShaping.setStatus('current')
modemCallStatsTrellisMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTrellisMapping.setStatus('current')
modemCallStatsPreEmphasis = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsPreEmphasis.setStatus('current')
modemCallStatsUpperBandEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsUpperBandEdge.setStatus('current')
modemCallStatsLowerBandEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsLowerBandEdge.setStatus('current')
modemCallStatsRTTHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRTTHigh.setStatus('current')
modemCallStatsRTTLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRTTLow.setStatus('current')
modemCallStatsInfo0SequenceHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsInfo0SequenceHigh.setStatus('current')
modemCallStatsInfo0SequenceLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsInfo0SequenceLow.setStatus('current')
modemCallStatsRxMPSequenceByte1Low = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxMPSequenceByte1Low.setStatus('current')
modemCallStatsRxMPSequenceByte1High = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxMPSequenceByte1High.setStatus('current')
modemCallStatsRxMPSequenceByte2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxMPSequenceByte2Low.setStatus('current')
modemCallStatsRxMPSequenceByte2High = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRxMPSequenceByte2High.setStatus('current')
modemCallStatsHighestTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsHighestTxState.setStatus('current')
modemCallStatsHighestRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsHighestRxState.setStatus('current')
modemCallStatsLastTransmitState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsLastTransmitState.setStatus('current')
modemCallStatsLastReceiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsLastReceiveState.setStatus('current')
modemCallStatsConnectTimeHours = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsConnectTimeHours.setStatus('current')
modemCallStatsConnectTimeMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsConnectTimeMinutes.setStatus('current')
modemCallStatsConnectTimeSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsConnectTimeSeconds.setStatus('current')
modemCallStatsAutoGainAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsAutoGainAmplitude.setStatus('current')
modemCallStatsAutoGainAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 71), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsAutoGainAttenuation.setStatus('current')
modemCallStatsDigitalPadDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 72), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsDigitalPadDetected.setStatus('current')
modemCallStatsRBSPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRBSPattern.setStatus('current')
modemCallStatsRBSRateDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRBSRateDrop.setStatus('current')
modemCallStatsMaxTxRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsMaxTxRetransmissions.setStatus('current')
modemCallStatsTotalTxRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsTotalTxRetransmissions.setStatus('current')
modemCallStatsNumberOfLAPMREJSReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfLAPMREJSReceived.setStatus('current')
modemCallStatsNumberOfLAPMREJSTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfLAPMREJSTransmitted.setStatus('current')
modemCallStatsNumberOfTXBlocksHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfTXBlocksHigh.setStatus('current')
modemCallStatsNumberOfTXBlocksLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfTXBlocksLow.setStatus('current')
modemCallStatsNumberOfRXBlocksHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfRXBlocksHigh.setStatus('current')
modemCallStatsNumberOfRXBlocksLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfRXBlocksLow.setStatus('current')
modemCallStatsNumberOfTXCharsMSB = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfTXCharsMSB.setStatus('current')
modemCallStatsNumberOfTXChars2ndByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfTXChars2ndByte.setStatus('current')
modemCallStatsNumberOfTXChars3rdByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfTXChars3rdByte.setStatus('current')
modemCallStatsNumberOfTXCharsLSB = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfTXCharsLSB.setStatus('current')
modemCallStatsNumberOfRXCharsMSB = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfRXCharsMSB.setStatus('current')
modemCallStatsNumberOfRXChars2ndByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfRXChars2ndByte.setStatus('current')
modemCallStatsNumberOfRXChars3rdByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfRXChars3rdByte.setStatus('current')
modemCallStatsNumberOfRXCharsLSB = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfRXCharsLSB.setStatus('current')
modemCallStatsDisconnectReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 91), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsDisconnectReason.setStatus('current')
modemCallStatsRetrainReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 92), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRetrainReason.setStatus('current')
modemCallStatsAbortCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 93), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsAbortCode.setStatus('current')
modemCallStatsK56Status = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 94), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsK56Status.setStatus('current')
modemCallStatsV8ManufacturerID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 95), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV8ManufacturerID.setStatus('current')
modemCallStatsV8LicenseeCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 96), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV8LicenseeCode.setStatus('current')
modemCallStatsV8Capabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 97), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV8Capabilities.setStatus('current')
modemCallStatsV8FlexVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 98), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV8FlexVersion.setStatus('current')
modemCallStatsV8DataPumpRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV8DataPumpRev.setStatus('current')
modemCallStatsV8ControllerRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 100), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV8ControllerRev.setStatus('current')
modemCallStatsV8Progress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 101), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV8Progress.setStatus('current')
modemCallStatsV90DigitalPadHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV90DigitalPadHigh.setStatus('current')
modemCallStatsV90DigitalPadLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV90DigitalPadLow.setStatus('current')
modemCallStatsV90IMDRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsV90IMDRatio.setStatus('current')
modemCallStatsHandshakeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsHandshakeTime.setStatus('current')
modemCallStatsNumberOfHandshakeRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsNumberOfHandshakeRetries.setStatus('current')
modemCallStatsECState1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsECState1.setStatus('current')
modemCallStatsECState2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsECState2.setStatus('current')
modemCallStatsFirmwareState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsFirmwareState.setStatus('current')
modemCallStatsHighAddrOfMEMACCFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsHighAddrOfMEMACCFailure.setStatus('current')
modemCallStatsLowAddrOfMEMACCFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 111), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsLowAddrOfMEMACCFailure.setStatus('current')
modemCallStatsMinutesSinceRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 112), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsMinutesSinceRetrain.setStatus('current')
modemCallStatsWAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 113), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsWAStatus.setStatus('current')
modemCallStatsRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 114), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsRoundTripTime.setStatus('current')
modemCallStatsDataIsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsDataIsValid.setStatus('current')
modemCallStatsSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsSessionID.setStatus('current')
modemCallStatsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsSlotIndex.setStatus('current')
modemCallStatsModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1423, 1, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCallStatsModemIndex.setStatus('current')
modemSummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424), )
if mibBuilder.loadTexts: modemSummaryStatsTable.setStatus('current')
modemSummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "modemSummaryStatsSlotNumber"))
if mibBuilder.loadTexts: modemSummaryStatsEntry.setStatus('current')
modemSummaryStatsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsSlotNumber.setStatus('current')
modemSummaryStatsModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsModemCount.setStatus('current')
modemSummaryStatsDisabledCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsDisabledCount.setStatus('current')
modemSummaryStatsNoDownloadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsNoDownloadCount.setStatus('current')
modemSummaryStatsDeadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsDeadCount.setStatus('current')
modemSummaryStatsRemovedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsRemovedCount.setStatus('current')
modemSummaryStatsIdleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsIdleCount.setStatus('current')
modemSummaryStatsActiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsActiveCount.setStatus('current')
modemSummaryStatsDownloadingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsDownloadingCount.setStatus('current')
modemSummaryStatsTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsTotalCalls.setStatus('current')
modemSummaryStatsConnectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsConnectedCalls.setStatus('current')
modemSummaryStatsAuthCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsAuthCalls.setStatus('current')
modemSummaryStatsECCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsECCalls.setStatus('current')
modemSummaryStatsDCCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsDCCalls.setStatus('current')
modemSummaryStatsK56Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsK56Calls.setStatus('current')
modemSummaryStatsV90Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsV90Calls.setStatus('current')
modemSummaryStatsV34Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsV34Calls.setStatus('current')
modemSummaryStatsV32Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsV32Calls.setStatus('current')
modemSummaryStatsReuseSuspectModems = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 201), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsReuseSuspectModems.setStatus('current')
modemSummaryStatsUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsUpTime.setStatus('current')
modemSummaryStatsMaximumCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1424, 1, 401), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSummaryStatsMaximumCalls.setStatus('current')
modemIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425), )
if mibBuilder.loadTexts: modemIntervalStatsTable.setStatus('current')
modemIntervalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "modemIntervalStatsIndex"))
if mibBuilder.loadTexts: modemIntervalStatsEntry.setStatus('current')
modemIntervalStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsIndex.setStatus('current')
modemIntervalStatsStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsStartTime.setStatus('current')
modemIntervalStatsStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsStopTime.setStatus('current')
modemIntervalStatsModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsModemCount.setStatus('current')
modemIntervalStatsDisabledCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsDisabledCount.setStatus('current')
modemIntervalStatsNoDownloadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsNoDownloadCount.setStatus('current')
modemIntervalStatsDeadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsDeadCount.setStatus('current')
modemIntervalStatsRemovedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsRemovedCount.setStatus('current')
modemIntervalStatsIdleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsIdleCount.setStatus('current')
modemIntervalStatsActiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsActiveCount.setStatus('current')
modemIntervalStatsDownloadingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsDownloadingCount.setStatus('current')
modemIntervalStatsTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsTotalCalls.setStatus('current')
modemIntervalStatsConnectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsConnectedCalls.setStatus('current')
modemIntervalStatsAuthCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsAuthCalls.setStatus('current')
modemIntervalStatsECCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsECCalls.setStatus('current')
modemIntervalStatsDCCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsDCCalls.setStatus('current')
modemIntervalStatsK56Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsK56Calls.setStatus('current')
modemIntervalStatsV90Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsV90Calls.setStatus('current')
modemIntervalStatsV34Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsV34Calls.setStatus('current')
modemIntervalStatsV32Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsV32Calls.setStatus('current')
modemIntervalStatsOverallTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsOverallTotalCalls.setStatus('current')
modemIntervalStatsOverallConnectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsOverallConnectedCalls.setStatus('current')
modemIntervalStatsOverallAuthCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1425, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemIntervalStatsOverallAuthCalls.setStatus('current')
modemSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426), )
if mibBuilder.loadTexts: modemSessionStatsTable.setStatus('current')
modemSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "modemSessionStatsSlotNumber"), (0, "APTIS-MONITOR-MIB", "modemSessionStatsModemIndex"))
if mibBuilder.loadTexts: modemSessionStatsEntry.setStatus('current')
modemSessionStatsDataValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("valid", 0), ("notCaptured", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsDataValidity.setStatus('current')
modemSessionStatsSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsSessionID.setStatus('current')
modemSessionStatsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsSlotNumber.setStatus('current')
modemSessionStatsIOPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsIOPNumber.setStatus('current')
modemSessionStatsDMMNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsDMMNumber.setStatus('current')
modemSessionStatsPackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsPackNumber.setStatus('current')
modemSessionStatsModemNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsModemNumber.setStatus('current')
modemSessionStatsModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsModemIndex.setStatus('current')
modemSessionStatsTDMStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsTDMStream.setStatus('current')
modemSessionStatsTDMSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsTDMSlot.setStatus('current')
modemSessionStatsInitialTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsInitialTxSpeed.setStatus('current')
modemSessionStatsInitialRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsInitialRxSpeed.setStatus('current')
modemSessionStatsConnectString = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 301), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsConnectString.setStatus('current')
modemSessionStatsAmpV2String = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1426, 1, 401), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStatsAmpV2String.setStatus('current')
modemSessionStats2Table = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427), )
if mibBuilder.loadTexts: modemSessionStats2Table.setStatus('current')
modemSessionStats2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "modemSessionStats2SessionID"))
if mibBuilder.loadTexts: modemSessionStats2Entry.setStatus('current')
modemSessionStats2DataValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("valid", 0), ("notCaptured", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2DataValidity.setStatus('current')
modemSessionStats2SessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2SessionID.setStatus('current')
modemSessionStats2SlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2SlotNumber.setStatus('current')
modemSessionStats2IOPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2IOPNumber.setStatus('current')
modemSessionStats2DMMNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2DMMNumber.setStatus('current')
modemSessionStats2PackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2PackNumber.setStatus('current')
modemSessionStats2ModemNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2ModemNumber.setStatus('current')
modemSessionStats2ModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2ModemIndex.setStatus('current')
modemSessionStats2TDMStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2TDMStream.setStatus('current')
modemSessionStats2TDMSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2TDMSlot.setStatus('current')
modemSessionStats2InitialTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2InitialTxSpeed.setStatus('current')
modemSessionStats2InitialRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2InitialRxSpeed.setStatus('current')
modemSessionStats2ConnectString = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 301), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2ConnectString.setStatus('current')
modemSessionStats2AmpV2String = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1427, 1, 401), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemSessionStats2AmpV2String.setStatus('current')
pppLogEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1316), )
if mibBuilder.loadTexts: pppLogEntryTable.setStatus('current')
pppLogEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1316, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "pppLogEntrySessionId"), (0, "APTIS-MONITOR-MIB", "pppLogEntryIndex"))
if mibBuilder.loadTexts: pppLogEntryEntry.setStatus('current')
pppLogEntrySessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1316, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLogEntrySessionId.setStatus('current')
pppLogEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1316, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLogEntryIndex.setStatus('current')
pppLogEntryMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1316, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLogEntryMinIndex.setStatus('current')
pppLogEntryMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1316, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLogEntryMaxIndex.setStatus('current')
pppLogEntryEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1316, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLogEntryEntryText.setStatus('current')
pppLogEntryRawEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1316, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLogEntryRawEntryText.setStatus('current')
pppDeadLogEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1317), )
if mibBuilder.loadTexts: pppDeadLogEntryTable.setStatus('current')
pppDeadLogEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1317, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "pppDeadLogEntryIndex"))
if mibBuilder.loadTexts: pppDeadLogEntryEntry.setStatus('current')
pppDeadLogEntrySessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1317, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadLogEntrySessionId.setStatus('current')
pppDeadLogEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1317, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadLogEntryIndex.setStatus('current')
pppDeadLogEntryMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1317, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadLogEntryMinIndex.setStatus('current')
pppDeadLogEntryMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1317, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadLogEntryMaxIndex.setStatus('current')
pppDeadLogEntryEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1317, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadLogEntryEntryText.setStatus('current')
pppDeadLogEntryRawEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1317, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadLogEntryRawEntryText.setStatus('current')
pppSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318), )
if mibBuilder.loadTexts: pppSessionStatsTable.setStatus('current')
pppSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "pppSessionStatsSessionID"))
if mibBuilder.loadTexts: pppSessionStatsEntry.setStatus('current')
pppSessionStatsSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsSessionID.setStatus('current')
pppSessionStatsPhase = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("establish", 1), ("auth", 2), ("network", 3), ("terminate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsPhase.setStatus('current')
pppSessionStatsUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsUserName.setStatus('current')
pppSessionStatsUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsUpTime.setStatus('current')
pppSessionStatsConnectLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsConnectLimit.setStatus('current')
pppSessionStatsRemainingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemainingTime.setStatus('current')
pppSessionStatsInactivityLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsInactivityLimit.setStatus('current')
pppSessionStatsInactivityRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsInactivityRemaining.setStatus('current')
pppSessionStatsDeadSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 9), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsDeadSession.setStatus('current')
pppSessionStatsInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 101), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("modem", 1), ("isdn", 2), ("leased", 3), ("hssi", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsInterfaceType.setStatus('current')
pppSessionStatsTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxSpeed.setStatus('current')
pppSessionStatsRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxSpeed.setStatus('current')
pppSessionStatsLCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqSent", 6), ("ackRcvd", 7), ("ackSent", 8), ("opened", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLCPState.setStatus('current')
pppSessionStatsLocalMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalMRU.setStatus('current')
pppSessionStatsRemoteMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteMRU.setStatus('current')
pppSessionStatsLocalAuthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 204), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 49699, 49187))).clone(namedValues=NamedValues(("none", 0), ("chap", 49699), ("pap", 49187)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalAuthProtocol.setStatus('current')
pppSessionStatsRemoteAuthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 205), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 49699, 49187))).clone(namedValues=NamedValues(("none", 0), ("chap", 49699), ("pap", 49187)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteAuthProtocol.setStatus('current')
pppSessionStatsLocalPFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 206), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalPFC.setStatus('current')
pppSessionStatsRemotePFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 207), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemotePFC.setStatus('current')
pppSessionStatsLocalACFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 208), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalACFC.setStatus('current')
pppSessionStatsRemoteACFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 209), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteACFC.setStatus('current')
pppSessionStatsLocalACCM = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 210), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalACCM.setStatus('current')
pppSessionStatsRemoteACCM = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 211), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteACCM.setStatus('current')
pppSessionStatsLocalMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 212), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalMRRU.setStatus('current')
pppSessionStatsRemoteMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 213), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteMRRU.setStatus('current')
pppSessionStatsLocalShortSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 214), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalShortSeq.setStatus('current')
pppSessionStatsRemoteShortSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 215), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteShortSeq.setStatus('current')
pppSessionStatsRemoteAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 301), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteAuthenticated.setStatus('current')
pppSessionStatsIPCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 401), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqSent", 6), ("ackRcvd", 7), ("ackSent", 8), ("opened", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsIPCPState.setStatus('current')
pppSessionStatsLocalIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 402), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalIPAddress.setStatus('current')
pppSessionStatsRemoteIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 403), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteIPAddress.setStatus('current')
pppSessionStatsDNSAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 404), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsDNSAddress1.setStatus('current')
pppSessionStatsDNSAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 405), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsDNSAddress2.setStatus('current')
pppSessionStatsNBNSAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 406), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsNBNSAddress1.setStatus('current')
pppSessionStatsNBNSAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 407), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsNBNSAddress2.setStatus('current')
pppSessionStatsLocalVJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 408), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalVJ.setStatus('current')
pppSessionStatsLocalVJSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 409), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalVJSlots.setStatus('current')
pppSessionStatsRemoteVJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 410), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteVJ.setStatus('current')
pppSessionStatsRemoteVJSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 411), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteVJSlots.setStatus('current')
pppSessionStatsIPXCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 451), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqSent", 6), ("ackRcvd", 7), ("ackSent", 8), ("opened", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsIPXCPState.setStatus('current')
pppSessionStatsRemoteIPXNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 452), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteIPXNetwork.setStatus('current')
pppSessionStatsRemoteIPXNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 453), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteIPXNode.setStatus('current')
pppSessionStatsCCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 501), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqSent", 6), ("ackRcvd", 7), ("ackSent", 8), ("opened", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsCCPState.setStatus('current')
pppSessionStatsLocalCompressAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 502), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("stac4", 1), ("mppc", 2), ("stac3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalCompressAlgorithm.setStatus('current')
pppSessionStatsLocalCompressHistories = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 503), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsLocalCompressHistories.setStatus('current')
pppSessionStatsRemoteCompressAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 504), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("stac4", 1), ("mppc", 2), ("stac3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteCompressAlgorithm.setStatus('current')
pppSessionStatsRemoteCompressHistories = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 505), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRemoteCompressHistories.setStatus('current')
pppSessionStatsMultilinkActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 601), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMultilinkActive.setStatus('current')
pppSessionStatsMultilinkLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 602), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMultilinkLinks.setStatus('current')
pppSessionStatsTotalTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 603), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTotalTxSpeed.setStatus('current')
pppSessionStatsTotalRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 604), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTotalRxSpeed.setStatus('current')
pppSessionStatsMLPFragmentsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 605), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMLPFragmentsReceived.setStatus('current')
pppSessionStatsMLPFragmentsMissing = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 606), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMLPFragmentsMissing.setStatus('current')
pppSessionStatsMLPFragmentsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 607), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMLPFragmentsDropped.setStatus('current')
pppSessionStatsMLPPacketsReassembled = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 608), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMLPPacketsReassembled.setStatus('current')
pppSessionStatsMLPPacketsNull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 609), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMLPPacketsNull.setStatus('current')
pppSessionStatsMultilinkLinksAdded = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 610), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMultilinkLinksAdded.setStatus('current')
pppSessionStatsMultilinkLinksRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 611), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMultilinkLinksRemoved.setStatus('current')
pppSessionStatsMultilinkLinksMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 612), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMultilinkLinksMax.setStatus('current')
pppSessionStatsMultilinkLinksMaxConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 613), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsMultilinkLinksMaxConfig.setStatus('current')
pppSessionStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1001), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxPackets.setStatus('current')
pppSessionStatsTxPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1002), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxPacketsDropped.setStatus('current')
pppSessionStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1003), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxBytes.setStatus('current')
pppSessionStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1004), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxPackets.setStatus('current')
pppSessionStatsRxPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1005), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxPacketsDropped.setStatus('current')
pppSessionStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1006), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxBytes.setStatus('current')
pppSessionStatsTxCompressing = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1101), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxCompressing.setStatus('current')
pppSessionStatsTxBytesBeforeCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxBytesBeforeCompress.setStatus('current')
pppSessionStatsTxBytesAfterCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxBytesAfterCompress.setStatus('current')
pppSessionStatsTxBytesUncompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxBytesUncompressed.setStatus('current')
pppSessionStatsRxBytesBeforeCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxBytesBeforeCompress.setStatus('current')
pppSessionStatsRxBytesAfterCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxBytesAfterCompress.setStatus('current')
pppSessionStatsRxBytesUncompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxBytesUncompressed.setStatus('current')
pppSessionStatsRxCompPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxCompPacketsDropped.setStatus('current')
pppSessionStatsCCPResetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsCCPResetsSent.setStatus('current')
pppSessionStatsCCPResetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsCCPResetsReceived.setStatus('current')
pppSessionStatsRxResourceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxResourceErrors.setStatus('current')
pppSessionStatsRxQueueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxQueueErrors.setStatus('current')
pppSessionStatsRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxCRCErrors.setStatus('current')
pppSessionStatsRxAbortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxAbortErrors.setStatus('current')
pppSessionStatsRxOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1205), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxOverrunErrors.setStatus('current')
pppSessionStatsRxBigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1206), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxBigErrors.setStatus('current')
pppSessionStatsRxSmallErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1207), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxSmallErrors.setStatus('current')
pppSessionStatsRxAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1208), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsRxAlignErrors.setStatus('current')
pppSessionStatsTxResourceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1209), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxResourceErrors.setStatus('current')
pppSessionStatsTxQueueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1210), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxQueueErrors.setStatus('current')
pppSessionStatsTxBigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1211), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxBigErrors.setStatus('current')
pppSessionStatsTxUnderrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1318, 1, 1212), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSessionStatsTxUnderrunErrors.setStatus('current')
pppDeadSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320), )
if mibBuilder.loadTexts: pppDeadSessionStatsTable.setStatus('current')
pppDeadSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "pppDeadSessionStatsSessionID"))
if mibBuilder.loadTexts: pppDeadSessionStatsEntry.setStatus('current')
pppDeadSessionStatsSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsSessionID.setStatus('current')
pppDeadSessionStatsPhase = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("establish", 1), ("auth", 2), ("network", 3), ("terminate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsPhase.setStatus('current')
pppDeadSessionStatsUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsUserName.setStatus('current')
pppDeadSessionStatsUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsUpTime.setStatus('current')
pppDeadSessionStatsConnectLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsConnectLimit.setStatus('current')
pppDeadSessionStatsRemainingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemainingTime.setStatus('current')
pppDeadSessionStatsInactivityLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsInactivityLimit.setStatus('current')
pppDeadSessionStatsInactivityRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsInactivityRemaining.setStatus('current')
pppDeadSessionStatsDeadSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 9), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsDeadSession.setStatus('current')
pppDeadSessionStatsInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 101), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("modem", 1), ("isdn", 2), ("leased", 3), ("hssi", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsInterfaceType.setStatus('current')
pppDeadSessionStatsTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxSpeed.setStatus('current')
pppDeadSessionStatsRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxSpeed.setStatus('current')
pppDeadSessionStatsLCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqSent", 6), ("ackRcvd", 7), ("ackSent", 8), ("opened", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLCPState.setStatus('current')
pppDeadSessionStatsLocalMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalMRU.setStatus('current')
pppDeadSessionStatsRemoteMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteMRU.setStatus('current')
pppDeadSessionStatsLocalAuthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 204), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 49699, 49187))).clone(namedValues=NamedValues(("none", 0), ("chap", 49699), ("pap", 49187)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalAuthProtocol.setStatus('current')
pppDeadSessionStatsRemoteAuthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 205), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 49699, 49187))).clone(namedValues=NamedValues(("none", 0), ("chap", 49699), ("pap", 49187)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteAuthProtocol.setStatus('current')
pppDeadSessionStatsLocalPFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 206), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalPFC.setStatus('current')
pppDeadSessionStatsRemotePFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 207), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemotePFC.setStatus('current')
pppDeadSessionStatsLocalACFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 208), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalACFC.setStatus('current')
pppDeadSessionStatsRemoteACFC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 209), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteACFC.setStatus('current')
pppDeadSessionStatsLocalACCM = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 210), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalACCM.setStatus('current')
pppDeadSessionStatsRemoteACCM = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 211), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteACCM.setStatus('current')
pppDeadSessionStatsLocalMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 212), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalMRRU.setStatus('current')
pppDeadSessionStatsRemoteMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 213), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteMRRU.setStatus('current')
pppDeadSessionStatsLocalShortSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 214), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalShortSeq.setStatus('current')
pppDeadSessionStatsRemoteShortSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 215), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteShortSeq.setStatus('current')
pppDeadSessionStatsRemoteAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 301), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteAuthenticated.setStatus('current')
pppDeadSessionStatsIPCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 401), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqSent", 6), ("ackRcvd", 7), ("ackSent", 8), ("opened", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsIPCPState.setStatus('current')
pppDeadSessionStatsLocalIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 402), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalIPAddress.setStatus('current')
pppDeadSessionStatsRemoteIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 403), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteIPAddress.setStatus('current')
pppDeadSessionStatsDNSAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 404), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsDNSAddress1.setStatus('current')
pppDeadSessionStatsDNSAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 405), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsDNSAddress2.setStatus('current')
pppDeadSessionStatsNBNSAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 406), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsNBNSAddress1.setStatus('current')
pppDeadSessionStatsNBNSAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 407), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsNBNSAddress2.setStatus('current')
pppDeadSessionStatsLocalVJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 408), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalVJ.setStatus('current')
pppDeadSessionStatsLocalVJSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 409), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalVJSlots.setStatus('current')
pppDeadSessionStatsRemoteVJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 410), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteVJ.setStatus('current')
pppDeadSessionStatsRemoteVJSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 411), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteVJSlots.setStatus('current')
pppDeadSessionStatsIPXCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 451), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqSent", 6), ("ackRcvd", 7), ("ackSent", 8), ("opened", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsIPXCPState.setStatus('current')
pppDeadSessionStatsRemoteIPXNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 452), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteIPXNetwork.setStatus('current')
pppDeadSessionStatsRemoteIPXNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 453), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteIPXNode.setStatus('current')
pppDeadSessionStatsCCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 501), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqSent", 6), ("ackRcvd", 7), ("ackSent", 8), ("opened", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsCCPState.setStatus('current')
pppDeadSessionStatsLocalCompressAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 502), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("stac4", 1), ("mppc", 2), ("stac3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalCompressAlgorithm.setStatus('current')
pppDeadSessionStatsLocalCompressHistories = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 503), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsLocalCompressHistories.setStatus('current')
pppDeadSessionStatsRemoteCompressAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 504), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("stac4", 1), ("mppc", 2), ("stac3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteCompressAlgorithm.setStatus('current')
pppDeadSessionStatsRemoteCompressHistories = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 505), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRemoteCompressHistories.setStatus('current')
pppDeadSessionStatsMultilinkActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 601), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMultilinkActive.setStatus('current')
pppDeadSessionStatsMultilinkLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 602), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMultilinkLinks.setStatus('current')
pppDeadSessionStatsTotalTxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 603), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTotalTxSpeed.setStatus('current')
pppDeadSessionStatsTotalRxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 604), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTotalRxSpeed.setStatus('current')
pppDeadSessionStatsMLPFragmentsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 605), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMLPFragmentsReceived.setStatus('current')
pppDeadSessionStatsMLPFragmentsMissing = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 606), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMLPFragmentsMissing.setStatus('current')
pppDeadSessionStatsMLPFragmentsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 607), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMLPFragmentsDropped.setStatus('current')
pppDeadSessionStatsMLPPacketsReassembled = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 608), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMLPPacketsReassembled.setStatus('current')
pppDeadSessionStatsMLPPacketsNull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 609), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMLPPacketsNull.setStatus('current')
pppDeadSessionStatsMultilinkLinksAdded = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 610), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMultilinkLinksAdded.setStatus('current')
pppDeadSessionStatsMultilinkLinksRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 611), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMultilinkLinksRemoved.setStatus('current')
pppDeadSessionStatsMultilinkLinksMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 612), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMultilinkLinksMax.setStatus('current')
pppDeadSessionStatsMultilinkLinksMaxConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 613), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsMultilinkLinksMaxConfig.setStatus('current')
pppDeadSessionStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1001), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxPackets.setStatus('current')
pppDeadSessionStatsTxPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1002), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxPacketsDropped.setStatus('current')
pppDeadSessionStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1003), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxBytes.setStatus('current')
pppDeadSessionStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1004), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxPackets.setStatus('current')
pppDeadSessionStatsRxPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1005), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxPacketsDropped.setStatus('current')
pppDeadSessionStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1006), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxBytes.setStatus('current')
pppDeadSessionStatsTxCompressing = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1101), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxCompressing.setStatus('current')
pppDeadSessionStatsTxBytesBeforeCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxBytesBeforeCompress.setStatus('current')
pppDeadSessionStatsTxBytesAfterCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxBytesAfterCompress.setStatus('current')
pppDeadSessionStatsTxBytesUncompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxBytesUncompressed.setStatus('current')
pppDeadSessionStatsRxBytesBeforeCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxBytesBeforeCompress.setStatus('current')
pppDeadSessionStatsRxBytesAfterCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxBytesAfterCompress.setStatus('current')
pppDeadSessionStatsRxBytesUncompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxBytesUncompressed.setStatus('current')
pppDeadSessionStatsRxCompPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxCompPacketsDropped.setStatus('current')
pppDeadSessionStatsCCPResetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsCCPResetsSent.setStatus('current')
pppDeadSessionStatsCCPResetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsCCPResetsReceived.setStatus('current')
pppDeadSessionStatsRxResourceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxResourceErrors.setStatus('current')
pppDeadSessionStatsRxQueueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxQueueErrors.setStatus('current')
pppDeadSessionStatsRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxCRCErrors.setStatus('current')
pppDeadSessionStatsRxAbortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxAbortErrors.setStatus('current')
pppDeadSessionStatsRxOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1205), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxOverrunErrors.setStatus('current')
pppDeadSessionStatsRxBigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1206), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxBigErrors.setStatus('current')
pppDeadSessionStatsRxSmallErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1207), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxSmallErrors.setStatus('current')
pppDeadSessionStatsRxAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1208), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsRxAlignErrors.setStatus('current')
pppDeadSessionStatsTxResourceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1209), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxResourceErrors.setStatus('current')
pppDeadSessionStatsTxQueueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1210), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxQueueErrors.setStatus('current')
pppDeadSessionStatsTxBigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1211), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxBigErrors.setStatus('current')
pppDeadSessionStatsTxUnderrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1320, 1, 1212), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppDeadSessionStatsTxUnderrunErrors.setStatus('current')
pppSummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319), )
if mibBuilder.loadTexts: pppSummaryStatsTable.setStatus('current')
pppSummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "pppSummaryStatsSlotNumber"))
if mibBuilder.loadTexts: pppSummaryStatsEntry.setStatus('current')
pppSummaryStatsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsSlotNumber.setStatus('current')
pppSummaryStatsMaxLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsMaxLinks.setStatus('current')
pppSummaryStatsActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsActiveLinks.setStatus('current')
pppSummaryStatsMaxActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsMaxActiveLinks.setStatus('current')
pppSummaryStatsFreeLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsFreeLinks.setStatus('current')
pppSummaryStatsLinksStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksStarted.setStatus('current')
pppSummaryStatsLinksStopped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksStopped.setStatus('current')
pppSummaryStatsLinksModem = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksModem.setStatus('current')
pppSummaryStatsLinksHDLC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksHDLC.setStatus('current')
pppSummaryStatsLinksLeased = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksLeased.setStatus('current')
pppSummaryStatsLinksNegotiatedLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksNegotiatedLCP.setStatus('current')
pppSummaryStatsLinksAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksAuthenticated.setStatus('current')
pppSummaryStatsLinksNegotiatedIPCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksNegotiatedIPCP.setStatus('current')
pppSummaryStatsLinksNegotiatedMLP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksNegotiatedMLP.setStatus('current')
pppSummaryStatsLinksNegotiatedCCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 205), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksNegotiatedCCP.setStatus('current')
pppSummaryStatsLinksNegotiatedIPXCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1319, 1, 206), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSummaryStatsLinksNegotiatedIPXCP.setStatus('current')
systemSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 10), )
if mibBuilder.loadTexts: systemSummaryTable.setStatus('current')
systemSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 10, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "systemSummaryData"))
if mibBuilder.loadTexts: systemSummaryEntry.setStatus('current')
systemSummaryData = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSummaryData.setStatus('current')
powerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11), )
if mibBuilder.loadTexts: powerStatusTable.setStatus('current')
powerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "powerStatusShelf"))
if mibBuilder.loadTexts: powerStatusEntry.setStatus('current')
powerStatusShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusShelf.setStatus('current')
powerStatusFanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 2), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusFanStatus.setStatus('current')
powerStatusExternalDC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 3), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusExternalDC1.setStatus('current')
powerStatusExternalDC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 4), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusExternalDC2.setStatus('current')
powerStatusInternalAC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 5), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusInternalAC1.setStatus('current')
powerStatusInternalAC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 6), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusInternalAC2.setStatus('current')
powerStatusInternalACDC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 7), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusInternalACDC1.setStatus('current')
powerStatusInternalACDC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 8), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusInternalACDC2.setStatus('current')
powerStatusInternalACDC3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 9), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusInternalACDC3.setStatus('current')
powerStatusCsr1Register = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 11, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatusCsr1Register.setStatus('current')
softwareVersionTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 12), )
if mibBuilder.loadTexts: softwareVersionTable.setStatus('current')
softwareVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 12, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "softwareVersionMibVersion"))
if mibBuilder.loadTexts: softwareVersionEntry.setStatus('current')
softwareVersionMibVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersionMibVersion.setStatus('current')
softwareVersionSoftwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersionSoftwareRevision.setStatus('current')
softwareVersionProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cvx1800", 1), ("cvx600", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersionProductId.setStatus('current')
softwareVersionMibRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersionMibRevision.setStatus('current')
sessionCountersTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100), )
if mibBuilder.loadTexts: sessionCountersTable.setStatus('current')
sessionCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionCountersActiveLowest"))
if mibBuilder.loadTexts: sessionCountersEntry.setStatus('current')
sessionCountersActiveLowest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersActiveLowest.setStatus('current')
sessionCountersActiveHighest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersActiveHighest.setStatus('current')
sessionCountersActiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersActiveCount.setStatus('current')
sessionCountersInactiveLowest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersInactiveLowest.setStatus('current')
sessionCountersInactiveHighest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersInactiveHighest.setStatus('current')
sessionCountersInactiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersInactiveCount.setStatus('current')
sessionCountersSessionTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersSessionTableSize.setStatus('current')
sessionCountersHistoryLowest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersHistoryLowest.setStatus('current')
sessionCountersHistoryHighest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersHistoryHighest.setStatus('current')
sessionCountersHistoryTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersHistoryTableSize.setStatus('current')
sessionCountersBootEra = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 100, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionCountersBootEra.setStatus('current')
sessionStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101), )
if mibBuilder.loadTexts: sessionStatusTable.setStatus('current')
sessionStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionStatusSessionID"))
if mibBuilder.loadTexts: sessionStatusEntry.setStatus('current')
sessionStatusSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusSessionID.setStatus('current')
sessionStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusState.setStatus('current')
sessionStatusPermanentFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("switched", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusPermanentFlag.setStatus('current')
sessionStatusVpopId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusVpopId.setStatus('current')
sessionStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 68))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusName.setStatus('current')
sessionStatusRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusRemoteIP.setStatus('current')
sessionStatusRemoteIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusRemoteIPMask.setStatus('current')
sessionStatusLocalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusLocalIP.setStatus('current')
sessionStatusLocalIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusLocalIPMask.setStatus('current')
sessionStatusLinkService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("isdn56K", 3), ("isdn64K", 4), ("isdnV120", 5), ("isdnV110", 6), ("modemV32", 7), ("modemV34", 8), ("modemK56", 9), ("modemV90", 10), ("ethernet", 11), ("t1Trunk", 12), ("loopback", 13), ("hssi", 14), ("hub", 15), ("voice", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusLinkService.setStatus('current')
sessionStatusServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ppp", 3), ("slip", 4), ("frameRelay", 5), ("ciscoHDLC", 6), ("terminalServer", 7), ("telnet", 8), ("rawTCP", 9), ("rlogin", 10), ("l2tp", 11), ("l2f", 12), ("trunk", 13), ("voice", 14), ("tandem", 15), ("hub", 16), ("ftp", 17), ("dvs", 18), ("fax", 19), ("atmp", 20), ("iptest", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusServiceMode.setStatus('current')
sessionStatusStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusStartTime.setStatus('current')
sessionStatusStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusStopTime.setStatus('current')
sessionStatusTimeOfModemSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTimeOfModemSync.setStatus('current')
sessionStatusTimeOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTimeOfService.setStatus('current')
sessionStatusTerminatingComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTerminatingComponent.setStatus('current')
sessionStatusTerminationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTerminationCause.setStatus('current')
sessionStatusLastComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusLastComponent.setStatus('current')
sessionStatusLayer1Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusLayer1Slot.setStatus('current')
sessionStatusLayer2Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusLayer2Slot.setStatus('current')
sessionStatusCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusCalledNumber.setStatus('current')
sessionStatusCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusCallingNumber.setStatus('current')
sessionStatusOriginateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("answer", 0), ("originate", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusOriginateMode.setStatus('current')
sessionStatusOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusOctetsIn.setStatus('current')
sessionStatusOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusOctetsOut.setStatus('current')
sessionStatusPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusPacketsIn.setStatus('current')
sessionStatusPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusPacketsOut.setStatus('current')
sessionStatusMultiLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusMultiLinkId.setStatus('current')
sessionStatusPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusPort.setStatus('current')
sessionStatusTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTimeslot.setStatus('current')
sessionStatusLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusLinkCount.setStatus('current')
sessionStatusTxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTxStartDataRate.setStatus('current')
sessionStatusRxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusRxStartDataRate.setStatus('current')
sessionStatusTxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTxEndDataRate.setStatus('current')
sessionStatusRxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusRxEndDataRate.setStatus('current')
sessionStatusTxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTxMinDataRate.setStatus('current')
sessionStatusRxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusRxMinDataRate.setStatus('current')
sessionStatusTxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTxMaxDataRate.setStatus('current')
sessionStatusRxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusRxMaxDataRate.setStatus('current')
sessionStatusIop = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusIop.setStatus('current')
sessionStatusDmm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusDmm.setStatus('current')
sessionStatusPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusPack.setStatus('current')
sessionStatusDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusDevice.setStatus('current')
sessionStatusTdmStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTdmStream.setStatus('current')
sessionStatusTdmTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTdmTimeSlot.setStatus('current')
sessionStatusTerminationReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTerminationReason.setStatus('current')
sessionStatusDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusDuration.setStatus('current')
sessionStatusDurationHMS = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusDurationHMS.setStatus('current')
sessionStatusSs7SessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusSs7SessionId.setStatus('current')
sessionStatusModemNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemNumber.setStatus('current')
sessionStatusTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("l2f", 3), ("l2tp", 4), ("dvs", 5), ("atmp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTunnelType.setStatus('current')
sessionStatusTunnelMediumType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTunnelMediumType.setStatus('current')
sessionStatusTunnelServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 60), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTunnelServerAddress.setStatus('current')
sessionStatusCallClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusCallClass.setStatus('current')
sessionStatusTandemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTandemPort.setStatus('current')
sessionStatusTandemTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTandemTimeslot.setStatus('current')
sessionStatusCallClassArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 64), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusCallClassArray.setStatus('current')
sessionStatusCallClassLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusCallClassLen.setStatus('current')
sessionStatusActualAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("radius", 1), ("local", 2), ("remote", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActualAuthMethod.setStatus('current')
sessionStatusModemModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("bell103", 2), ("bell208", 3), ("bell212", 4), ("v17", 5), ("v21", 6), ("v22", 7), ("v22bis", 8), ("v23", 9), ("v27", 10), ("v29", 11), ("v32", 12), ("v32bis", 13), ("v33", 14), ("v34", 15), ("vFC", 16), ("k56", 17), ("v90", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemModulation.setStatus('current')
sessionStatusModemErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP", 2), ("v42", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemErrorCorrection.setStatus('current')
sessionStatusModemDataCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP5", 2), ("v42bis", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemDataCompression.setStatus('current')
sessionStatusModemTxBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemTxBlocks.setStatus('current')
sessionStatusModemRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemRetransmits.setStatus('current')
sessionStatusModemSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemSNR.setStatus('current')
sessionStatusModemLocalRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemLocalRetrains.setStatus('current')
sessionStatusModemRemoteRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemRemoteRetrains.setStatus('current')
sessionStatusModemLocalRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemLocalRenegotiations.setStatus('current')
sessionStatusModemRemoteRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemRemoteRenegotiations.setStatus('current')
sessionStatusModemReceiveLineLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusModemReceiveLineLevel.setStatus('current')
sessionStatusRemoteIPXNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusRemoteIPXNetwork.setStatus('current')
sessionStatusRemoteIPXNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusRemoteIPXNode.setStatus('current')
sessionStatusCleartcpRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 80), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusCleartcpRemoteIP.setStatus('current')
sessionStatusCleartcpRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusCleartcpRemotePort.setStatus('current')
sessionStatusTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusTunnelId.setStatus('current')
sessionStatusLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 101, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusLinkId.setStatus('current')
sessionStatusActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102), )
if mibBuilder.loadTexts: sessionStatusActiveTable.setStatus('current')
sessionStatusActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionStatusActiveSessionID"))
if mibBuilder.loadTexts: sessionStatusActiveEntry.setStatus('current')
sessionStatusActiveSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveSessionID.setStatus('current')
sessionStatusActiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveState.setStatus('current')
sessionStatusActivePermanentFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("switched", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActivePermanentFlag.setStatus('current')
sessionStatusActiveVpopId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveVpopId.setStatus('current')
sessionStatusActiveName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 68))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveName.setStatus('current')
sessionStatusActiveRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveRemoteIP.setStatus('current')
sessionStatusActiveRemoteIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveRemoteIPMask.setStatus('current')
sessionStatusActiveLocalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveLocalIP.setStatus('current')
sessionStatusActiveLocalIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveLocalIPMask.setStatus('current')
sessionStatusActiveLinkService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("isdn56K", 3), ("isdn64K", 4), ("isdnV120", 5), ("isdnV110", 6), ("modemV32", 7), ("modemV34", 8), ("modemK56", 9), ("modemV90", 10), ("ethernet", 11), ("t1Trunk", 12), ("loopback", 13), ("hssi", 14), ("hub", 15), ("voice", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveLinkService.setStatus('current')
sessionStatusActiveServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ppp", 3), ("slip", 4), ("frameRelay", 5), ("ciscoHDLC", 6), ("terminalServer", 7), ("telnet", 8), ("rawTCP", 9), ("rlogin", 10), ("l2tp", 11), ("l2f", 12), ("trunk", 13), ("voice", 14), ("tandem", 15), ("hub", 16), ("ftp", 17), ("dvs", 18), ("fax", 19), ("atmp", 20), ("iptest", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveServiceMode.setStatus('current')
sessionStatusActiveStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveStartTime.setStatus('current')
sessionStatusActiveStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveStopTime.setStatus('current')
sessionStatusActiveTimeOfModemSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTimeOfModemSync.setStatus('current')
sessionStatusActiveTimeOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTimeOfService.setStatus('current')
sessionStatusActiveTerminatingComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTerminatingComponent.setStatus('current')
sessionStatusActiveTerminationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTerminationCause.setStatus('current')
sessionStatusActiveLastComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveLastComponent.setStatus('current')
sessionStatusActiveLayer1Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveLayer1Slot.setStatus('current')
sessionStatusActiveLayer2Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveLayer2Slot.setStatus('current')
sessionStatusActiveCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveCalledNumber.setStatus('current')
sessionStatusActiveCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveCallingNumber.setStatus('current')
sessionStatusActiveOriginateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("answer", 0), ("originate", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveOriginateMode.setStatus('current')
sessionStatusActiveOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveOctetsIn.setStatus('current')
sessionStatusActiveOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveOctetsOut.setStatus('current')
sessionStatusActivePacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActivePacketsIn.setStatus('current')
sessionStatusActivePacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActivePacketsOut.setStatus('current')
sessionStatusActiveMultiLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveMultiLinkId.setStatus('current')
sessionStatusActivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActivePort.setStatus('current')
sessionStatusActiveTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTimeslot.setStatus('current')
sessionStatusActiveLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveLinkCount.setStatus('current')
sessionStatusActiveTxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTxStartDataRate.setStatus('current')
sessionStatusActiveRxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveRxStartDataRate.setStatus('current')
sessionStatusActiveTxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTxEndDataRate.setStatus('current')
sessionStatusActiveRxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveRxEndDataRate.setStatus('current')
sessionStatusActiveTxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTxMinDataRate.setStatus('current')
sessionStatusActiveRxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveRxMinDataRate.setStatus('current')
sessionStatusActiveTxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTxMaxDataRate.setStatus('current')
sessionStatusActiveRxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveRxMaxDataRate.setStatus('current')
sessionStatusActiveIop = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveIop.setStatus('current')
sessionStatusActiveDmm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveDmm.setStatus('current')
sessionStatusActivePack = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActivePack.setStatus('current')
sessionStatusActiveDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveDevice.setStatus('current')
sessionStatusActiveTdmStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTdmStream.setStatus('current')
sessionStatusActiveTdmTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTdmTimeSlot.setStatus('current')
sessionStatusActiveTerminationReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTerminationReason.setStatus('current')
sessionStatusActiveDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveDuration.setStatus('current')
sessionStatusActiveDurationHMS = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveDurationHMS.setStatus('current')
sessionStatusActiveSs7SessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 41))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveSs7SessionId.setStatus('current')
sessionStatusActiveModemNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemNumber.setStatus('current')
sessionStatusActiveTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("l2f", 3), ("l2tp", 4), ("dvs", 5), ("atmp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTunnelType.setStatus('current')
sessionStatusActiveTunnelMediumType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTunnelMediumType.setStatus('current')
sessionStatusActiveTunnelServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 60), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTunnelServerAddress.setStatus('current')
sessionStatusActiveCallClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveCallClass.setStatus('current')
sessionStatusActiveTandemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTandemPort.setStatus('current')
sessionStatusActiveTandemTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTandemTimeslot.setStatus('current')
sessionStatusActiveCallClassArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 64), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveCallClassArray.setStatus('current')
sessionStatusActiveCallClassLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveCallClassLen.setStatus('current')
sessionStatusActiveActualAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("radius", 1), ("local", 2), ("remote", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveActualAuthMethod.setStatus('current')
sessionStatusActiveModemModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("bell103", 2), ("bell208", 3), ("bell212", 4), ("v17", 5), ("v21", 6), ("v22", 7), ("v22bis", 8), ("v23", 9), ("v27", 10), ("v29", 11), ("v32", 12), ("v32bis", 13), ("v33", 14), ("v34", 15), ("vFC", 16), ("k56", 17), ("v90", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemModulation.setStatus('current')
sessionStatusActiveModemErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP", 2), ("v42", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemErrorCorrection.setStatus('current')
sessionStatusActiveModemDataCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP5", 2), ("v42bis", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemDataCompression.setStatus('current')
sessionStatusActiveModemTxBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemTxBlocks.setStatus('current')
sessionStatusActiveModemRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemRetransmits.setStatus('current')
sessionStatusActiveModemSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemSNR.setStatus('current')
sessionStatusActiveModemLocalRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemLocalRetrains.setStatus('current')
sessionStatusActiveModemRemoteRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemRemoteRetrains.setStatus('current')
sessionStatusActiveModemLocalRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemLocalRenegotiations.setStatus('current')
sessionStatusActiveModemRemoteRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemRemoteRenegotiations.setStatus('current')
sessionStatusActiveModemReceiveLineLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveModemReceiveLineLevel.setStatus('current')
sessionStatusActiveRemoteIPXNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveRemoteIPXNetwork.setStatus('current')
sessionStatusActiveRemoteIPXNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveRemoteIPXNode.setStatus('current')
sessionStatusActiveCleartcpRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 80), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveCleartcpRemoteIP.setStatus('current')
sessionStatusActiveCleartcpRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveCleartcpRemotePort.setStatus('current')
sessionStatusActiveTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveTunnelId.setStatus('current')
sessionStatusActiveLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 102, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusActiveLinkId.setStatus('current')
sessionStatusInactiveTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103), )
if mibBuilder.loadTexts: sessionStatusInactiveTable.setStatus('current')
sessionStatusInactiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionStatusInactiveSessionID"))
if mibBuilder.loadTexts: sessionStatusInactiveEntry.setStatus('current')
sessionStatusInactiveSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveSessionID.setStatus('current')
sessionStatusInactiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveState.setStatus('current')
sessionStatusInactivePermanentFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("switched", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactivePermanentFlag.setStatus('current')
sessionStatusInactiveVpopId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveVpopId.setStatus('current')
sessionStatusInactiveName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 68))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveName.setStatus('current')
sessionStatusInactiveRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveRemoteIP.setStatus('current')
sessionStatusInactiveRemoteIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveRemoteIPMask.setStatus('current')
sessionStatusInactiveLocalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveLocalIP.setStatus('current')
sessionStatusInactiveLocalIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveLocalIPMask.setStatus('current')
sessionStatusInactiveLinkService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("isdn56K", 3), ("isdn64K", 4), ("isdnV120", 5), ("isdnV110", 6), ("modemV32", 7), ("modemV34", 8), ("modemK56", 9), ("modemV90", 10), ("ethernet", 11), ("t1Trunk", 12), ("loopback", 13), ("hssi", 14), ("hub", 15), ("voice", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveLinkService.setStatus('current')
sessionStatusInactiveServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ppp", 3), ("slip", 4), ("frameRelay", 5), ("ciscoHDLC", 6), ("terminalServer", 7), ("telnet", 8), ("rawTCP", 9), ("rlogin", 10), ("l2tp", 11), ("l2f", 12), ("trunk", 13), ("voice", 14), ("tandem", 15), ("hub", 16), ("ftp", 17), ("dvs", 18), ("fax", 19), ("atmp", 20), ("iptest", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveServiceMode.setStatus('current')
sessionStatusInactiveStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveStartTime.setStatus('current')
sessionStatusInactiveStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveStopTime.setStatus('current')
sessionStatusInactiveTimeOfModemSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTimeOfModemSync.setStatus('current')
sessionStatusInactiveTimeOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTimeOfService.setStatus('current')
sessionStatusInactiveTerminatingComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTerminatingComponent.setStatus('current')
sessionStatusInactiveTerminationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTerminationCause.setStatus('current')
sessionStatusInactiveLastComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveLastComponent.setStatus('current')
sessionStatusInactiveLayer1Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveLayer1Slot.setStatus('current')
sessionStatusInactiveLayer2Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveLayer2Slot.setStatus('current')
sessionStatusInactiveCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveCalledNumber.setStatus('current')
sessionStatusInactiveCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveCallingNumber.setStatus('current')
sessionStatusInactiveOriginateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("answer", 0), ("originate", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveOriginateMode.setStatus('current')
sessionStatusInactiveOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveOctetsIn.setStatus('current')
sessionStatusInactiveOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveOctetsOut.setStatus('current')
sessionStatusInactivePacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactivePacketsIn.setStatus('current')
sessionStatusInactivePacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactivePacketsOut.setStatus('current')
sessionStatusInactiveMultiLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveMultiLinkId.setStatus('current')
sessionStatusInactivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactivePort.setStatus('current')
sessionStatusInactiveTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTimeslot.setStatus('current')
sessionStatusInactiveLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveLinkCount.setStatus('current')
sessionStatusInactiveTxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTxStartDataRate.setStatus('current')
sessionStatusInactiveRxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveRxStartDataRate.setStatus('current')
sessionStatusInactiveTxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTxEndDataRate.setStatus('current')
sessionStatusInactiveRxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveRxEndDataRate.setStatus('current')
sessionStatusInactiveTxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTxMinDataRate.setStatus('current')
sessionStatusInactiveRxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveRxMinDataRate.setStatus('current')
sessionStatusInactiveTxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTxMaxDataRate.setStatus('current')
sessionStatusInactiveRxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveRxMaxDataRate.setStatus('current')
sessionStatusInactiveIop = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveIop.setStatus('current')
sessionStatusInactiveDmm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveDmm.setStatus('current')
sessionStatusInactivePack = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactivePack.setStatus('current')
sessionStatusInactiveDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveDevice.setStatus('current')
sessionStatusInactiveTdmStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTdmStream.setStatus('current')
sessionStatusInactiveTdmTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTdmTimeSlot.setStatus('current')
sessionStatusInactiveTerminationReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTerminationReason.setStatus('current')
sessionStatusInactiveDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveDuration.setStatus('current')
sessionStatusInactiveDurationHMS = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveDurationHMS.setStatus('current')
sessionStatusInactiveSs7SessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 41))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveSs7SessionId.setStatus('current')
sessionStatusInactiveModemNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemNumber.setStatus('current')
sessionStatusInactiveTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("l2f", 3), ("l2tp", 4), ("dvs", 5), ("atmp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTunnelType.setStatus('current')
sessionStatusInactiveTunnelMediumType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTunnelMediumType.setStatus('current')
sessionStatusInactiveTunnelServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 60), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTunnelServerAddress.setStatus('current')
sessionStatusInactiveCallClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveCallClass.setStatus('current')
sessionStatusInactiveTandemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTandemPort.setStatus('current')
sessionStatusInactiveTandemTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTandemTimeslot.setStatus('current')
sessionStatusInactiveCallClassArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 64), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveCallClassArray.setStatus('current')
sessionStatusInactiveCallClassLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveCallClassLen.setStatus('current')
sessionStatusInactiveActualAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("radius", 1), ("local", 2), ("remote", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveActualAuthMethod.setStatus('current')
sessionStatusInactiveModemModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("bell103", 2), ("bell208", 3), ("bell212", 4), ("v17", 5), ("v21", 6), ("v22", 7), ("v22bis", 8), ("v23", 9), ("v27", 10), ("v29", 11), ("v32", 12), ("v32bis", 13), ("v33", 14), ("v34", 15), ("vFC", 16), ("k56", 17), ("v90", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemModulation.setStatus('current')
sessionStatusInactiveModemErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP", 2), ("v42", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemErrorCorrection.setStatus('current')
sessionStatusInactiveModemDataCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP5", 2), ("v42bis", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemDataCompression.setStatus('current')
sessionStatusInactiveModemTxBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemTxBlocks.setStatus('current')
sessionStatusInactiveModemRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemRetransmits.setStatus('current')
sessionStatusInactiveModemSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemSNR.setStatus('current')
sessionStatusInactiveModemLocalRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemLocalRetrains.setStatus('current')
sessionStatusInactiveModemRemoteRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemRemoteRetrains.setStatus('current')
sessionStatusInactiveModemLocalRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemLocalRenegotiations.setStatus('current')
sessionStatusInactiveModemRemoteRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemRemoteRenegotiations.setStatus('current')
sessionStatusInactiveModemReceiveLineLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveModemReceiveLineLevel.setStatus('current')
sessionStatusInactiveRemoteIPXNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveRemoteIPXNetwork.setStatus('current')
sessionStatusInactiveRemoteIPXNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveRemoteIPXNode.setStatus('current')
sessionStatusInactiveCleartcpRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 80), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveCleartcpRemoteIP.setStatus('current')
sessionStatusInactiveCleartcpRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveCleartcpRemotePort.setStatus('current')
sessionStatusInactiveTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveTunnelId.setStatus('current')
sessionStatusInactiveLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 103, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusInactiveLinkId.setStatus('current')
sessionStatusReverseTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106), )
if mibBuilder.loadTexts: sessionStatusReverseTable.setStatus('current')
sessionStatusReverseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionStatusReverseSessionID"))
if mibBuilder.loadTexts: sessionStatusReverseEntry.setStatus('current')
sessionStatusReverseSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseSessionID.setStatus('current')
sessionStatusReverseState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseState.setStatus('current')
sessionStatusReversePermanentFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("switched", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReversePermanentFlag.setStatus('current')
sessionStatusReverseVpopId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseVpopId.setStatus('current')
sessionStatusReverseName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 68))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseName.setStatus('current')
sessionStatusReverseRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseRemoteIP.setStatus('current')
sessionStatusReverseRemoteIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseRemoteIPMask.setStatus('current')
sessionStatusReverseLocalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseLocalIP.setStatus('current')
sessionStatusReverseLocalIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseLocalIPMask.setStatus('current')
sessionStatusReverseLinkService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("isdn56K", 3), ("isdn64K", 4), ("isdnV120", 5), ("isdnV110", 6), ("modemV32", 7), ("modemV34", 8), ("modemK56", 9), ("modemV90", 10), ("ethernet", 11), ("t1Trunk", 12), ("loopback", 13), ("hssi", 14), ("hub", 15), ("voice", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseLinkService.setStatus('current')
sessionStatusReverseServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ppp", 3), ("slip", 4), ("frameRelay", 5), ("ciscoHDLC", 6), ("terminalServer", 7), ("telnet", 8), ("rawTCP", 9), ("rlogin", 10), ("l2tp", 11), ("l2f", 12), ("trunk", 13), ("voice", 14), ("tandem", 15), ("hub", 16), ("ftp", 17), ("dvs", 18), ("fax", 19), ("atmp", 20), ("iptest", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseServiceMode.setStatus('current')
sessionStatusReverseStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseStartTime.setStatus('current')
sessionStatusReverseStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseStopTime.setStatus('current')
sessionStatusReverseTimeOfModemSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTimeOfModemSync.setStatus('current')
sessionStatusReverseTimeOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTimeOfService.setStatus('current')
sessionStatusReverseTerminatingComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTerminatingComponent.setStatus('current')
sessionStatusReverseTerminationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTerminationCause.setStatus('current')
sessionStatusReverseLastComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseLastComponent.setStatus('current')
sessionStatusReverseLayer1Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseLayer1Slot.setStatus('current')
sessionStatusReverseLayer2Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseLayer2Slot.setStatus('current')
sessionStatusReverseCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseCalledNumber.setStatus('current')
sessionStatusReverseCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseCallingNumber.setStatus('current')
sessionStatusReverseOriginateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("answer", 0), ("originate", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseOriginateMode.setStatus('current')
sessionStatusReverseOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseOctetsIn.setStatus('current')
sessionStatusReverseOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseOctetsOut.setStatus('current')
sessionStatusReversePacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReversePacketsIn.setStatus('current')
sessionStatusReversePacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReversePacketsOut.setStatus('current')
sessionStatusReverseMultiLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseMultiLinkId.setStatus('current')
sessionStatusReversePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReversePort.setStatus('current')
sessionStatusReverseTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTimeslot.setStatus('current')
sessionStatusReverseLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseLinkCount.setStatus('current')
sessionStatusReverseTxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTxStartDataRate.setStatus('current')
sessionStatusReverseRxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseRxStartDataRate.setStatus('current')
sessionStatusReverseTxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTxEndDataRate.setStatus('current')
sessionStatusReverseRxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseRxEndDataRate.setStatus('current')
sessionStatusReverseTxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTxMinDataRate.setStatus('current')
sessionStatusReverseRxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseRxMinDataRate.setStatus('current')
sessionStatusReverseTxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTxMaxDataRate.setStatus('current')
sessionStatusReverseRxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseRxMaxDataRate.setStatus('current')
sessionStatusReverseIop = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseIop.setStatus('current')
sessionStatusReverseDmm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseDmm.setStatus('current')
sessionStatusReversePack = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReversePack.setStatus('current')
sessionStatusReverseDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseDevice.setStatus('current')
sessionStatusReverseTdmStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTdmStream.setStatus('current')
sessionStatusReverseTdmTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTdmTimeSlot.setStatus('current')
sessionStatusReverseTerminationReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTerminationReason.setStatus('current')
sessionStatusReverseDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseDuration.setStatus('current')
sessionStatusReverseDurationHMS = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseDurationHMS.setStatus('current')
sessionStatusReverseSs7SessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 41))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseSs7SessionId.setStatus('current')
sessionStatusReverseModemNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemNumber.setStatus('current')
sessionStatusReverseTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("l2f", 3), ("l2tp", 4), ("dvs", 5), ("atmp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTunnelType.setStatus('current')
sessionStatusReverseTunnelMediumType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTunnelMediumType.setStatus('current')
sessionStatusReverseTunnelServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 60), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTunnelServerAddress.setStatus('current')
sessionStatusReverseCallClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseCallClass.setStatus('current')
sessionStatusReverseTandemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTandemPort.setStatus('current')
sessionStatusReverseTandemTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTandemTimeslot.setStatus('current')
sessionStatusReverseCallClassArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 64), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseCallClassArray.setStatus('current')
sessionStatusReverseCallClassLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseCallClassLen.setStatus('current')
sessionStatusReverseActualAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("radius", 1), ("local", 2), ("remote", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseActualAuthMethod.setStatus('current')
sessionStatusReverseModemModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("bell103", 2), ("bell208", 3), ("bell212", 4), ("v17", 5), ("v21", 6), ("v22", 7), ("v22bis", 8), ("v23", 9), ("v27", 10), ("v29", 11), ("v32", 12), ("v32bis", 13), ("v33", 14), ("v34", 15), ("vFC", 16), ("k56", 17), ("v90", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemModulation.setStatus('current')
sessionStatusReverseModemErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP", 2), ("v42", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemErrorCorrection.setStatus('current')
sessionStatusReverseModemDataCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP5", 2), ("v42bis", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemDataCompression.setStatus('current')
sessionStatusReverseModemTxBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemTxBlocks.setStatus('current')
sessionStatusReverseModemRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemRetransmits.setStatus('current')
sessionStatusReverseModemSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemSNR.setStatus('current')
sessionStatusReverseModemLocalRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemLocalRetrains.setStatus('current')
sessionStatusReverseModemRemoteRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemRemoteRetrains.setStatus('current')
sessionStatusReverseModemLocalRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemLocalRenegotiations.setStatus('current')
sessionStatusReverseModemRemoteRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemRemoteRenegotiations.setStatus('current')
sessionStatusReverseModemReceiveLineLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseModemReceiveLineLevel.setStatus('current')
sessionStatusReverseRemoteIPXNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseRemoteIPXNetwork.setStatus('current')
sessionStatusReverseRemoteIPXNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseRemoteIPXNode.setStatus('current')
sessionStatusReverseCleartcpRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 80), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseCleartcpRemoteIP.setStatus('current')
sessionStatusReverseCleartcpRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseCleartcpRemotePort.setStatus('current')
sessionStatusReverseTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseTunnelId.setStatus('current')
sessionStatusReverseLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 106, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusReverseLinkId.setStatus('current')
sessionComponentsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 213), )
if mibBuilder.loadTexts: sessionComponentsTable.setStatus('current')
sessionComponentsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 213, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionComponentsSessionIndex"), (0, "APTIS-MONITOR-MIB", "sessionComponentsIndex"))
if mibBuilder.loadTexts: sessionComponentsEntry.setStatus('current')
sessionComponentsSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 213, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionComponentsSessionIndex.setStatus('current')
sessionComponentsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 213, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionComponentsIndex.setStatus('current')
sessionComponentsComponentType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 213, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionComponentsComponentType.setStatus('current')
sessionComponentsComponentState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 213, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionComponentsComponentState.setStatus('current')
sessionComponentsStatHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 213, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionComponentsStatHandle.setStatus('current')
sessionTraceTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 214), )
if mibBuilder.loadTexts: sessionTraceTable.setStatus('current')
sessionTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 214, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionTraceSessionIndex"), (0, "APTIS-MONITOR-MIB", "sessionTraceIndex"))
if mibBuilder.loadTexts: sessionTraceEntry.setStatus('current')
sessionTraceSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 214, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionTraceSessionIndex.setStatus('current')
sessionTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 214, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionTraceIndex.setStatus('current')
sessionTraceAbsoluteTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 214, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionTraceAbsoluteTimeStamp.setStatus('current')
sessionTraceRelativeTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 214, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionTraceRelativeTimeStamp.setStatus('current')
sessionTraceLogEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 214, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionTraceLogEntry.setStatus('current')
sessionSlotsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215), )
if mibBuilder.loadTexts: sessionSlotsTable.setStatus('current')
sessionSlotsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionSlotsTrunkCount"))
if mibBuilder.loadTexts: sessionSlotsEntry.setStatus('current')
sessionSlotsTrunkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsTrunkCount.setStatus('current')
sessionSlotsSlot1Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot1Count.setStatus('current')
sessionSlotsSlot2Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot2Count.setStatus('current')
sessionSlotsSlot3Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot3Count.setStatus('current')
sessionSlotsSlot4Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot4Count.setStatus('current')
sessionSlotsSlot5Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot5Count.setStatus('current')
sessionSlotsSlot6Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot6Count.setStatus('current')
sessionSlotsSlot7Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot7Count.setStatus('current')
sessionSlotsSlot8Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot8Count.setStatus('current')
sessionSlotsSlot9Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot9Count.setStatus('current')
sessionSlotsSlot10Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot10Count.setStatus('current')
sessionSlotsSlot11Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot11Count.setStatus('current')
sessionSlotsSlot12Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot12Count.setStatus('current')
sessionSlotsSlot13Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot13Count.setStatus('current')
sessionSlotsSlot14Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot14Count.setStatus('current')
sessionSlotsSlot15Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot15Count.setStatus('current')
sessionSlotsSlot16Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot16Count.setStatus('current')
sessionSlotsSlot17Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot17Count.setStatus('current')
sessionSlotsSlot18Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 215, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSlotsSlot18Count.setStatus('current')
sessionSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216), )
if mibBuilder.loadTexts: sessionSummaryTable.setStatus('current')
sessionSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionSummaryActiveUnknown"))
if mibBuilder.loadTexts: sessionSummaryEntry.setStatus('current')
sessionSummaryActiveUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveUnknown.setStatus('current')
sessionSummaryMaximumUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumUnknown.setStatus('current')
sessionSummaryInactiveUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveUnknown.setStatus('current')
sessionSummaryActiveNone = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveNone.setStatus('current')
sessionSummaryMaximumNone = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumNone.setStatus('current')
sessionSummaryInactiveNone = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveNone.setStatus('current')
sessionSummaryActiveOther = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveOther.setStatus('current')
sessionSummaryMaximumOther = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumOther.setStatus('current')
sessionSummaryInactiveOther = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveOther.setStatus('current')
sessionSummaryActivePpp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActivePpp.setStatus('current')
sessionSummaryMaximumPpp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumPpp.setStatus('current')
sessionSummaryInactivePpp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactivePpp.setStatus('current')
sessionSummaryActiveSlip = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveSlip.setStatus('current')
sessionSummaryMaximumSlip = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumSlip.setStatus('current')
sessionSummaryInactiveSlip = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveSlip.setStatus('current')
sessionSummaryActiveFrameRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveFrameRelay.setStatus('current')
sessionSummaryMaximumFrameRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumFrameRelay.setStatus('current')
sessionSummaryInactiveFrameRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveFrameRelay.setStatus('current')
sessionSummaryActiveCiscoHDLC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveCiscoHDLC.setStatus('current')
sessionSummaryMaximumCiscoHDLC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumCiscoHDLC.setStatus('current')
sessionSummaryInactiveCiscoHDLC = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveCiscoHDLC.setStatus('current')
sessionSummaryActiveTerminalServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveTerminalServer.setStatus('current')
sessionSummaryMaximumTerminalServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumTerminalServer.setStatus('current')
sessionSummaryInactiveTerminalServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveTerminalServer.setStatus('current')
sessionSummaryActiveTelnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveTelnet.setStatus('current')
sessionSummaryMaximumTelnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumTelnet.setStatus('current')
sessionSummaryInactiveTelnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveTelnet.setStatus('current')
sessionSummaryActiveRawTCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveRawTCP.setStatus('current')
sessionSummaryMaximumRawTCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumRawTCP.setStatus('current')
sessionSummaryInactiveRawTCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveRawTCP.setStatus('current')
sessionSummaryActiveRlogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveRlogin.setStatus('current')
sessionSummaryMaximumRlogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumRlogin.setStatus('current')
sessionSummaryInactiveRlogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveRlogin.setStatus('current')
sessionSummaryActiveL2tp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveL2tp.setStatus('current')
sessionSummaryMaximumL2tp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumL2tp.setStatus('current')
sessionSummaryInactiveL2tp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveL2tp.setStatus('current')
sessionSummaryActiveL2f = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveL2f.setStatus('current')
sessionSummaryMaximumL2f = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumL2f.setStatus('current')
sessionSummaryInactiveL2f = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveL2f.setStatus('current')
sessionSummaryActiveTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveTrunk.setStatus('current')
sessionSummaryMaximumTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumTrunk.setStatus('current')
sessionSummaryInactiveTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveTrunk.setStatus('current')
sessionSummaryActiveVoice = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveVoice.setStatus('current')
sessionSummaryMaximumVoice = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumVoice.setStatus('current')
sessionSummaryInactiveVoice = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveVoice.setStatus('current')
sessionSummaryActiveTandem = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveTandem.setStatus('current')
sessionSummaryMaximumTandem = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumTandem.setStatus('current')
sessionSummaryInactiveTandem = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveTandem.setStatus('current')
sessionSummaryActiveFtp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveFtp.setStatus('current')
sessionSummaryMaximumFtp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumFtp.setStatus('current')
sessionSummaryInactiveFtp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveFtp.setStatus('current')
sessionSummaryActiveDvs = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveDvs.setStatus('current')
sessionSummaryMaximumDvs = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumDvs.setStatus('current')
sessionSummaryInactiveDvs = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveDvs.setStatus('current')
sessionSummaryActiveAtmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveAtmp.setStatus('current')
sessionSummaryMaximumAtmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumAtmp.setStatus('current')
sessionSummaryInactiveAtmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveAtmp.setStatus('current')
sessionSummaryActiveFax = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveFax.setStatus('current')
sessionSummaryMaximumFax = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumFax.setStatus('current')
sessionSummaryInactiveFax = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveFax.setStatus('current')
sessionSummaryActiveHub = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveHub.setStatus('current')
sessionSummaryMaximumHub = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumHub.setStatus('current')
sessionSummaryInactiveHub = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveHub.setStatus('current')
sessionSummaryActiveTest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryActiveTest.setStatus('current')
sessionSummaryMaximumTest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumTest.setStatus('current')
sessionSummaryInactiveTest = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryInactiveTest.setStatus('current')
sessionSummaryMaximumTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 216, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionSummaryMaximumTotal.setStatus('current')
sessionDiscCauseTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 104), )
if mibBuilder.loadTexts: sessionDiscCauseTable.setStatus('current')
sessionDiscCauseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 104, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionDiscCauseIndex"))
if mibBuilder.loadTexts: sessionDiscCauseEntry.setStatus('current')
sessionDiscCauseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 104, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionDiscCauseIndex.setStatus('current')
sessionDiscCauseComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 104, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionDiscCauseComponent.setStatus('current')
sessionDiscCauseCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 104, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionDiscCauseCause.setStatus('current')
sessionDiscCauseReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 104, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionDiscCauseReason.setStatus('current')
sessionDiscCauseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 104, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionDiscCauseCount.setStatus('current')
sessionStatusHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107), )
if mibBuilder.loadTexts: sessionStatusHistoryTable.setStatus('current')
sessionStatusHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionStatusHistoryIndex"))
if mibBuilder.loadTexts: sessionStatusHistoryEntry.setStatus('current')
sessionStatusHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryIndex.setStatus('current')
sessionStatusHistorySessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistorySessionID.setStatus('current')
sessionStatusHistoryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryState.setStatus('current')
sessionStatusHistoryPermanentFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("switched", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryPermanentFlag.setStatus('current')
sessionStatusHistoryVpopId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryVpopId.setStatus('current')
sessionStatusHistoryName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 68))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryName.setStatus('current')
sessionStatusHistoryRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryRemoteIP.setStatus('current')
sessionStatusHistoryRemoteIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryRemoteIPMask.setStatus('current')
sessionStatusHistoryLocalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryLocalIP.setStatus('current')
sessionStatusHistoryLocalIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryLocalIPMask.setStatus('current')
sessionStatusHistoryLinkService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("isdn56K", 3), ("isdn64K", 4), ("isdnV120", 5), ("isdnV110", 6), ("modemV32", 7), ("modemV34", 8), ("modemK56", 9), ("modemV90", 10), ("ethernet", 11), ("t1Trunk", 12), ("loopback", 13), ("hssi", 14), ("hub", 15), ("voice", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryLinkService.setStatus('current')
sessionStatusHistoryServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ppp", 3), ("slip", 4), ("frameRelay", 5), ("ciscoHDLC", 6), ("terminalServer", 7), ("telnet", 8), ("rawTCP", 9), ("rlogin", 10), ("l2tp", 11), ("l2f", 12), ("trunk", 13), ("voice", 14), ("tandem", 15), ("hub", 16), ("ftp", 17), ("dvs", 18), ("fax", 19), ("atmp", 20), ("iptest", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryServiceMode.setStatus('current')
sessionStatusHistoryStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryStartTime.setStatus('current')
sessionStatusHistoryStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryStopTime.setStatus('current')
sessionStatusHistoryTimeOfModemSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTimeOfModemSync.setStatus('current')
sessionStatusHistoryTimeOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTimeOfService.setStatus('current')
sessionStatusHistoryTerminatingComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTerminatingComponent.setStatus('current')
sessionStatusHistoryTerminationCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTerminationCause.setStatus('current')
sessionStatusHistoryLastComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("df", 3), ("ds0", 4), ("modem", 5), ("hdlc", 6), ("ppp", 7), ("slip", 8), ("chdlc", 9), ("fr", 10), ("ip", 11), ("telnet", 12), ("cleartcp", 13), ("l2tp", 14), ("ether", 15), ("trunkip", 16), ("fepdf", 17), ("lineip", 18), ("loopback", 19), ("shell", 20), ("rlogin", 21), ("hssi", 22), ("sm", 23), ("vl", 24), ("voip", 25), ("l2f", 26), ("l2ftunnel", 27), ("dvs", 28), ("dvstunnel", 29), ("fax", 30), ("l2tproute", 31), ("atmp", 32), ("atmptunnel", 33), ("iptest", 34)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryLastComponent.setStatus('current')
sessionStatusHistoryLayer1Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryLayer1Slot.setStatus('current')
sessionStatusHistoryLayer2Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryLayer2Slot.setStatus('current')
sessionStatusHistoryCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryCalledNumber.setStatus('current')
sessionStatusHistoryCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryCallingNumber.setStatus('current')
sessionStatusHistoryOriginateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("answer", 0), ("originate", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryOriginateMode.setStatus('current')
sessionStatusHistoryOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryOctetsIn.setStatus('current')
sessionStatusHistoryOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryOctetsOut.setStatus('current')
sessionStatusHistoryPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryPacketsIn.setStatus('current')
sessionStatusHistoryPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryPacketsOut.setStatus('current')
sessionStatusHistoryMultiLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryMultiLinkId.setStatus('current')
sessionStatusHistoryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryPort.setStatus('current')
sessionStatusHistoryTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTimeslot.setStatus('current')
sessionStatusHistoryLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryLinkCount.setStatus('current')
sessionStatusHistoryTxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTxStartDataRate.setStatus('current')
sessionStatusHistoryRxStartDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryRxStartDataRate.setStatus('current')
sessionStatusHistoryTxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTxEndDataRate.setStatus('current')
sessionStatusHistoryRxEndDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryRxEndDataRate.setStatus('current')
sessionStatusHistoryTxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTxMinDataRate.setStatus('current')
sessionStatusHistoryRxMinDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryRxMinDataRate.setStatus('current')
sessionStatusHistoryTxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTxMaxDataRate.setStatus('current')
sessionStatusHistoryRxMaxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryRxMaxDataRate.setStatus('current')
sessionStatusHistoryIop = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryIop.setStatus('current')
sessionStatusHistoryDmm = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryDmm.setStatus('current')
sessionStatusHistoryPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryPack.setStatus('current')
sessionStatusHistoryDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryDevice.setStatus('current')
sessionStatusHistoryTdmStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTdmStream.setStatus('current')
sessionStatusHistoryTdmTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTdmTimeSlot.setStatus('current')
sessionStatusHistoryTerminationReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTerminationReason.setStatus('current')
sessionStatusHistoryDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryDuration.setStatus('current')
sessionStatusHistoryDurationHMS = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryDurationHMS.setStatus('current')
sessionStatusHistorySs7SessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 41))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistorySs7SessionId.setStatus('current')
sessionStatusHistoryModemNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemNumber.setStatus('current')
sessionStatusHistoryTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("l2f", 3), ("l2tp", 4), ("dvs", 5), ("atmp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTunnelType.setStatus('current')
sessionStatusHistoryTunnelMediumType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("other", 2), ("ip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTunnelMediumType.setStatus('current')
sessionStatusHistoryTunnelServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 60), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTunnelServerAddress.setStatus('current')
sessionStatusHistoryCallClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryCallClass.setStatus('current')
sessionStatusHistoryTandemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTandemPort.setStatus('current')
sessionStatusHistoryTandemTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTandemTimeslot.setStatus('current')
sessionStatusHistoryCallClassArray = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 64), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryCallClassArray.setStatus('current')
sessionStatusHistoryCallClassLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryCallClassLen.setStatus('current')
sessionStatusHistoryActualAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("radius", 1), ("local", 2), ("remote", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryActualAuthMethod.setStatus('current')
sessionStatusHistoryModemModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("bell103", 2), ("bell208", 3), ("bell212", 4), ("v17", 5), ("v21", 6), ("v22", 7), ("v22bis", 8), ("v23", 9), ("v27", 10), ("v29", 11), ("v32", 12), ("v32bis", 13), ("v33", 14), ("v34", 15), ("vFC", 16), ("k56", 17), ("v90", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemModulation.setStatus('current')
sessionStatusHistoryModemErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP", 2), ("v42", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemErrorCorrection.setStatus('current')
sessionStatusHistoryModemDataCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("mNP5", 2), ("v42bis", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemDataCompression.setStatus('current')
sessionStatusHistoryModemTxBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemTxBlocks.setStatus('current')
sessionStatusHistoryModemRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemRetransmits.setStatus('current')
sessionStatusHistoryModemSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemSNR.setStatus('current')
sessionStatusHistoryModemLocalRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemLocalRetrains.setStatus('current')
sessionStatusHistoryModemRemoteRetrains = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemRemoteRetrains.setStatus('current')
sessionStatusHistoryModemLocalRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemLocalRenegotiations.setStatus('current')
sessionStatusHistoryModemRemoteRenegotiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemRemoteRenegotiations.setStatus('current')
sessionStatusHistoryModemReceiveLineLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryModemReceiveLineLevel.setStatus('current')
sessionStatusHistoryRemoteIPXNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryRemoteIPXNetwork.setStatus('current')
sessionStatusHistoryRemoteIPXNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryRemoteIPXNode.setStatus('current')
sessionStatusHistoryCleartcpRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 80), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryCleartcpRemoteIP.setStatus('current')
sessionStatusHistoryCleartcpRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryCleartcpRemotePort.setStatus('current')
sessionStatusHistoryTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryTunnelId.setStatus('current')
sessionStatusHistoryLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 107, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionStatusHistoryLinkId.setStatus('current')
sessionMultilinkTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217), )
if mibBuilder.loadTexts: sessionMultilinkTable.setStatus('current')
sessionMultilinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionMultilinkSessionId"))
if mibBuilder.loadTexts: sessionMultilinkEntry.setStatus('current')
sessionMultilinkNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkNegotiated.setStatus('current')
sessionMultilinkSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkSessionId.setStatus('current')
sessionMultilinkNameLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkNameLength.setStatus('current')
sessionMultilinkUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkUserName.setStatus('current')
sessionMultilinkMyMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkMyMRRU.setStatus('current')
sessionMultilinkPeerMRRU = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkPeerMRRU.setStatus('current')
sessionMultilinkMyShortSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkMyShortSequence.setStatus('current')
sessionMultilinkPeerShortSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkPeerShortSequence.setStatus('current')
sessionMultilinkMyEIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkMyEIDType.setStatus('current')
sessionMultilinkPeerEIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkPeerEIDType.setStatus('current')
sessionMultilinkMyEIDLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkMyEIDLength.setStatus('current')
sessionMultilinkPeerEIDLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkPeerEIDLength.setStatus('current')
sessionMultilinkMyEIDData = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkMyEIDData.setStatus('current')
sessionMultilinkPeerEIDData = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 217, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionMultilinkPeerEIDData.setStatus('current')
sessionVpopTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218), )
if mibBuilder.loadTexts: sessionVpopTable.setStatus('current')
sessionVpopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "sessionVpopVpopIndex"), (0, "APTIS-MONITOR-MIB", "sessionVpopCallType"), (0, "APTIS-MONITOR-MIB", "sessionVpopProtocol"))
if mibBuilder.loadTexts: sessionVpopEntry.setStatus('current')
sessionVpopVpopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionVpopVpopIndex.setStatus('current')
sessionVpopVpopId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionVpopVpopId.setStatus('current')
sessionVpopCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("trunk", 2), ("modem", 3), ("isdn", 4), ("v110", 5), ("v120", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionVpopCallType.setStatus('current')
sessionVpopProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("setup", 1), ("other", 2), ("trunk", 3), ("ppp", 4), ("cleartcp", 5), ("tunnelled", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionVpopProtocol.setStatus('current')
sessionVpopCurrentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionVpopCurrentCount.setStatus('current')
sessionVpopCurrentDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionVpopCurrentDuration.setStatus('current')
sessionVpopCumulativeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionVpopCumulativeCount.setStatus('current')
sessionVpopCumulativeDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 218, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionVpopCumulativeDuration.setStatus('current')
slotStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201), )
if mibBuilder.loadTexts: slotStatusTable.setStatus('obsolete')
slotStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "slotStatusShelfNumber"), (0, "APTIS-MONITOR-MIB", "slotStatusSlotIndex"))
if mibBuilder.loadTexts: slotStatusEntry.setStatus('current')
slotStatusShelfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusShelfNumber.setStatus('current')
slotStatusSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusSlotIndex.setStatus('current')
slotStatusSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("slotStatusEmpty", 0), ("slotStatusNoPower", 1), ("slotStatusPresent", 2), ("slotStatusReady", 3), ("slotStatusLoading", 4), ("slotStatusStarted", 5), ("slotStatusIniting", 6), ("slotStatusUp", 7), ("slotStatusDown", 8), ("slotStatusUnknown", 9), ("slotStatusPulled", 10), ("slotStatusFailed", 11), ("slotStatusBadCard", 12), ("slotStatusStandby", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusSlotStatus.setStatus('current')
slotStatusPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusPartNumber.setStatus('current')
slotStatusSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusSerialNumber.setStatus('current')
slotStatusHardwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusHardwareRev.setStatus('current')
slotStatusStiffwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusStiffwareRev.setStatus('current')
slotStatusFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusFirmwareRev.setStatus('current')
slotStatusSystemMem = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusSystemMem.setStatus('current')
slotStatusOtherMem = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusOtherMem.setStatus('current')
slotStatusTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusTemperature.setStatus('current')
slotStatusSlotType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("slotEmpty", 0), ("slotScc", 1), ("slotMac", 2), ("slotDac", 3), ("slotUnknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusSlotType.setStatus('current')
slotStatusSlotOos = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusSlotOos.setStatus('current')
slotStatusServiceModule = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusServiceModule.setStatus('current')
slotStatusLineTerminationModule = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 201, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 820121, 820131, 820141, 820151, 820322, 820323))).clone(namedValues=NamedValues(("ltmEmpty", 0), ("dS3", 820121), ("dS3R", 820131), ("dS3P", 820141), ("dS3PR", 820151), ("t1", 820322), ("e1", 820323)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusLineTerminationModule.setStatus('current')
slotStatusNewTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205), )
if mibBuilder.loadTexts: slotStatusNewTable.setStatus('current')
slotStatusNewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "slotStatusNewShelfNumber"), (0, "APTIS-MONITOR-MIB", "slotStatusNewSlotIndex"))
if mibBuilder.loadTexts: slotStatusNewEntry.setStatus('current')
slotStatusNewShelfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewShelfNumber.setStatus('current')
slotStatusNewSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewSlotIndex.setStatus('current')
slotStatusNewSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("slotStatusEmpty", 0), ("slotStatusNoPower", 1), ("slotStatusPresent", 2), ("slotStatusReady", 3), ("slotStatusLoading", 4), ("slotStatusStarted", 5), ("slotStatusIniting", 6), ("slotStatusUp", 7), ("slotStatusDown", 8), ("slotStatusUnknown", 9), ("slotStatusPulled", 10), ("slotStatusFailed", 11), ("slotStatusBadCard", 12), ("slotStatusStandby", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewSlotStatus.setStatus('current')
slotStatusNewSlotType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("slotEmpty", 0), ("slotScc", 1), ("slotMac", 2), ("slotDac", 3), ("slotUnknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewSlotType.setStatus('current')
slotStatusNewProductCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewProductCode.setStatus('current')
slotStatusNewSlotSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewSlotSerialNumber.setStatus('current')
slotStatusNewFabricationRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewFabricationRev.setStatus('current')
slotStatusNewPalRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewPalRev.setStatus('current')
slotStatusNewReworkRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewReworkRev.setStatus('current')
slotStatusNewFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewFirmwareRev.setStatus('current')
slotStatusNewTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewTemperature.setStatus('current')
slotStatusNewSlotOos = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewSlotOos.setStatus('current')
slotStatusNewLineTerminationModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 205, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 820121, 820131, 820141, 820151, 820322, 820323, 820324, 820325, 820326, 820327, 820328, 820329))).clone(namedValues=NamedValues(("ltmEmpty", 0), ("dS3", 820121), ("dS3R", 820131), ("dS3P", 820141), ("dS3PR", 820151), ("t1", 820322), ("e1", 820323), ("t1x24", 820324), ("e1x24", 820325), ("dS3x2", 820326), ("dS3x2R", 820327), ("dS3x2P", 820328), ("dS3x2PR", 820329)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotStatusNewLineTerminationModuleType.setStatus('current')
timerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601), )
if mibBuilder.loadTexts: timerStatsTable.setStatus('current')
timerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "timerStatsSlotNumber"))
if mibBuilder.loadTexts: timerStatsEntry.setStatus('current')
timerStatsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsSlotNumber.setStatus('current')
timerStatsCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("sCC", 1), ("dAC", 2), ("mAC", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsCardType.setStatus('current')
timerStatsCPUNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsCPUNumber.setStatus('current')
timerStatsTimerEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsTimerEntrySize.setStatus('current')
timerStatsTimerMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsTimerMemorySize.setStatus('current')
timerStatsTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsTotalCount.setStatus('current')
timerStatsFreeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsFreeCount.setStatus('current')
timerStatsFreeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsFreeMin.setStatus('current')
timerStatsActiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsActiveCount.setStatus('current')
timerStatsActiveMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 205), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsActiveMax.setStatus('current')
timerStatsAllocSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsAllocSuccesses.setStatus('current')
timerStatsAllocFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 302), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsAllocFails.setStatus('current')
timerStatsFreeSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 303), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsFreeSuccesses.setStatus('current')
timerStatsFreeFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3601, 1, 304), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timerStatsFreeFails.setStatus('current')
memoryStatsTableTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605), )
if mibBuilder.loadTexts: memoryStatsTableTable.setStatus('current')
memoryStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "memoryStatsTableSlotNumber"))
if mibBuilder.loadTexts: memoryStatsTableEntry.setStatus('current')
memoryStatsTableSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("bep", 1), ("fep", 2), ("slot1", 3), ("slot2", 4), ("slot3", 5), ("slot4", 6), ("slot5", 7), ("slot6", 8), ("slot7", 9), ("slot8", 10), ("slot11", 11), ("slot12", 12), ("slot13", 13), ("slot14", 14), ("slot15", 15), ("slot16", 16), ("slot17", 17), ("slot18", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableSlotNumber.setStatus('current')
memoryStatsTableCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unk", 0), ("sCC", 1), ("dAC", 2), ("mAC", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableCardType.setStatus('current')
memoryStatsTableCPUNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableCPUNumber.setStatus('current')
memoryStatsTableTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableTotalSize.setStatus('current')
memoryStatsTableManagedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableManagedSize.setStatus('current')
memoryStatsTableFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableFreeSize.setStatus('current')
memoryStatsTableFreeBlockCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableFreeBlockCount.setStatus('current')
memoryStatsTableFreeLargestBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableFreeLargestBlock.setStatus('current')
memoryStatsTableFreeSmallestBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableFreeSmallestBlock.setStatus('current')
memoryStatsTableUsedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableUsedSize.setStatus('current')
memoryStatsTableUsedBlockCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 302), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableUsedBlockCount.setStatus('current')
memoryStatsTableUsedLargestBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 303), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableUsedLargestBlock.setStatus('current')
memoryStatsTableUsedSmallestBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 304), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableUsedSmallestBlock.setStatus('current')
memoryStatsTableAllocSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 401), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableAllocSuccesses.setStatus('current')
memoryStatsTableAllocFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 402), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableAllocFails.setStatus('current')
memoryStatsTableFreeSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 403), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableFreeSuccesses.setStatus('current')
memoryStatsTableFreeFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3605, 1, 404), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStatsTableFreeFails.setStatus('current')
pbufStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603), )
if mibBuilder.loadTexts: pbufStatsTable.setStatus('current')
pbufStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "pbufStatsSlotNumber"))
if mibBuilder.loadTexts: pbufStatsEntry.setStatus('current')
pbufStatsSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsSlotNumber.setStatus('current')
pbufStatsCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("sCC", 1), ("tSC", 2), ("mAC", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsCardType.setStatus('current')
pbufStatsCPUNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsCPUNumber.setStatus('current')
pbufStatsDataSize0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsDataSize0.setStatus('current')
pbufStatsTotalCount0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsTotalCount0.setStatus('current')
pbufStatsAllocatedCount0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedCount0.setStatus('current')
pbufStatsPermAllocatedCount0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsPermAllocatedCount0.setStatus('current')
pbufStatsAllocatedMax0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedMax0.setStatus('current')
pbufStatsFreeCount0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeCount0.setStatus('current')
pbufStatsFreeMin0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeMin0.setStatus('current')
pbufStatsAllocSuccesses0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocSuccesses0.setStatus('current')
pbufStatsAllocFails0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocFails0.setStatus('current')
pbufStatsFreeSuccesses0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeSuccesses0.setStatus('current')
pbufStatsFreeFails0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 111), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeFails0.setStatus('current')
pbufStatsDataSize1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsDataSize1.setStatus('current')
pbufStatsTotalCount1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsTotalCount1.setStatus('current')
pbufStatsAllocatedCount1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedCount1.setStatus('current')
pbufStatsPermAllocatedCount1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsPermAllocatedCount1.setStatus('current')
pbufStatsAllocatedMax1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 205), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedMax1.setStatus('current')
pbufStatsFreeCount1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 206), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeCount1.setStatus('current')
pbufStatsFreeMin1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 207), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeMin1.setStatus('current')
pbufStatsAllocSuccesses1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 208), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocSuccesses1.setStatus('current')
pbufStatsAllocFails1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 209), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocFails1.setStatus('current')
pbufStatsFreeSuccesses1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 210), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeSuccesses1.setStatus('current')
pbufStatsFreeFails1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 211), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeFails1.setStatus('current')
pbufStatsDataSize2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsDataSize2.setStatus('current')
pbufStatsTotalCount2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 302), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsTotalCount2.setStatus('current')
pbufStatsAllocatedCount2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 303), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedCount2.setStatus('current')
pbufStatsPermAllocatedCount2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 304), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsPermAllocatedCount2.setStatus('current')
pbufStatsAllocatedMax2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 305), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedMax2.setStatus('current')
pbufStatsFreeCount2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 306), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeCount2.setStatus('current')
pbufStatsFreeMin2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 307), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeMin2.setStatus('current')
pbufStatsAllocSuccesses2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 308), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocSuccesses2.setStatus('current')
pbufStatsAllocFails2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 309), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocFails2.setStatus('current')
pbufStatsFreeSuccesses2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 310), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeSuccesses2.setStatus('current')
pbufStatsFreeFails2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 311), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeFails2.setStatus('current')
pbufStatsDataSize3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 401), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsDataSize3.setStatus('current')
pbufStatsTotalCount3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 402), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsTotalCount3.setStatus('current')
pbufStatsAllocatedCount3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 403), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedCount3.setStatus('current')
pbufStatsPermAllocatedCount3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 404), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsPermAllocatedCount3.setStatus('current')
pbufStatsAllocatedMax3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 405), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedMax3.setStatus('current')
pbufStatsFreeCount3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 406), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeCount3.setStatus('current')
pbufStatsFreeMin3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 407), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeMin3.setStatus('current')
pbufStatsAllocSuccesses3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 408), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocSuccesses3.setStatus('current')
pbufStatsAllocFails3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 409), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocFails3.setStatus('current')
pbufStatsFreeSuccesses3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 410), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeSuccesses3.setStatus('current')
pbufStatsFreeFails3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 411), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeFails3.setStatus('current')
pbufStatsDataSize4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 501), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsDataSize4.setStatus('current')
pbufStatsTotalCount4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 502), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsTotalCount4.setStatus('current')
pbufStatsAllocatedCount4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 503), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedCount4.setStatus('current')
pbufStatsPermAllocatedCount4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 504), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsPermAllocatedCount4.setStatus('current')
pbufStatsAllocatedMax4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 505), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedMax4.setStatus('current')
pbufStatsFreeCount4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 506), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeCount4.setStatus('current')
pbufStatsFreeMin4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 507), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeMin4.setStatus('current')
pbufStatsAllocSuccesses4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 508), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocSuccesses4.setStatus('current')
pbufStatsAllocFails4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 509), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocFails4.setStatus('current')
pbufStatsFreeSuccesses4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 510), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeSuccesses4.setStatus('current')
pbufStatsFreeFails4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 511), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeFails4.setStatus('current')
pbufStatsDataSize5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 601), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsDataSize5.setStatus('current')
pbufStatsTotalCount5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 602), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsTotalCount5.setStatus('current')
pbufStatsAllocatedCount5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 603), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedCount5.setStatus('current')
pbufStatsPermAllocatedCount5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 604), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsPermAllocatedCount5.setStatus('current')
pbufStatsAllocatedMax5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 605), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocatedMax5.setStatus('current')
pbufStatsFreeCount5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 606), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeCount5.setStatus('current')
pbufStatsFreeMin5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 607), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeMin5.setStatus('current')
pbufStatsAllocSuccesses5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 608), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocSuccesses5.setStatus('current')
pbufStatsAllocFails5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 609), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsAllocFails5.setStatus('current')
pbufStatsFreeSuccesses5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 610), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeSuccesses5.setStatus('current')
pbufStatsFreeFails5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3603, 1, 611), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbufStatsFreeFails5.setStatus('current')
taskStatsTableTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606), )
if mibBuilder.loadTexts: taskStatsTableTable.setStatus('current')
taskStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "taskStatsTableSlotNumber"), (0, "APTIS-MONITOR-MIB", "taskStatsTableTaskIndex"))
if mibBuilder.loadTexts: taskStatsTableEntry.setStatus('current')
taskStatsTableSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("bep", 1), ("fep", 2), ("slot1", 3), ("slot2", 4), ("slot3", 5), ("slot4", 6), ("slot5", 7), ("slot6", 8), ("slot7", 9), ("slot8", 10), ("slot11", 11), ("slot12", 12), ("slot13", 13), ("slot14", 14), ("slot15", 15), ("slot16", 16), ("slot17", 17), ("slot18", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableSlotNumber.setStatus('current')
taskStatsTableTaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTaskIndex.setStatus('current')
taskStatsTableTaskID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTaskID.setStatus('current')
taskStatsTableTaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTaskName.setStatus('current')
taskStatsTableTCBSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTCBSize.setStatus('current')
taskStatsTableTCB = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTCB.setStatus('current')
taskStatsTableWaitObjectName = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableWaitObjectName.setStatus('current')
taskStatsTableTicksPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTicksPerSecond.setStatus('current')
taskStatsTableTicksElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTicksElapsed.setStatus('current')
taskStatsTableStackAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress1.setStatus('current')
taskStatsTableStackAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress2.setStatus('current')
taskStatsTableStackAddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress3.setStatus('current')
taskStatsTableStackAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress4.setStatus('current')
taskStatsTableStackAddress5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress5.setStatus('current')
taskStatsTableStackAddress6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress6.setStatus('current')
taskStatsTableStackAddress7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress7.setStatus('current')
taskStatsTableStackAddress8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress8.setStatus('current')
taskStatsTableStackAddress9 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress9.setStatus('current')
taskStatsTableStackAddress10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableStackAddress10.setStatus('current')
taskStatsTableRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableRunTime.setStatus('current')
taskStatsTableContextSwitches = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableContextSwitches.setStatus('current')
taskStatsTableGlobalPool = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableGlobalPool.setStatus('current')
taskStatsTableIntervalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableIntervalTime.setStatus('current')
taskStatsTableTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTotalTime.setStatus('current')
taskStatsTableIntervalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableIntervalSize.setStatus('current')
taskStatsTableKernelPool = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableKernelPool.setStatus('current')
taskStatsTableTaskPool = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableTaskPool.setStatus('current')
taskStatsTableIsrTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableIsrTimes.setStatus('current')
taskStatsTableIdle5Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableIdle5Seconds.setStatus('current')
taskStatsTableIdleMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableIdleMinute.setStatus('current')
taskStatsTableIdle5Minute = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableIdle5Minute.setStatus('current')
taskStatsTableIdleHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableIdleHour.setStatus('current')
taskStatsTableIdleDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3606, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: taskStatsTableIdleDay.setStatus('current')
t1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2102), )
if mibBuilder.loadTexts: t1StatsTable.setStatus('current')
t1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2102, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "t1StatsSlotIndex"), (0, "APTIS-MONITOR-MIB", "t1StatsLineNumber"))
if mibBuilder.loadTexts: t1StatsEntry.setStatus('current')
t1StatsAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noalarm", 0), ("yellowalarm", 1), ("redalarm", 2), ("bluealarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1StatsAlarmStatus.setStatus('current')
t1StatsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2102, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1StatsSlotIndex.setStatus('current')
t1StatsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2102, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 56))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1StatsLineNumber.setStatus('current')
t1CountsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103), )
if mibBuilder.loadTexts: t1CountsTable.setStatus('current')
t1CountsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "t1CountsSlotIndex"), (0, "APTIS-MONITOR-MIB", "t1CountsLineNumber"))
if mibBuilder.loadTexts: t1CountsEntry.setStatus('current')
t1CountsChannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsChannelCount.setStatus('current')
t1CountsChannelsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsChannelsInUse.setStatus('current')
t1CountsIncomingCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsIncomingCallAttempts.setStatus('current')
t1CountsIncomingConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsIncomingConnects.setStatus('current')
t1CountsIncomingDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsIncomingDisconnects.setStatus('current')
t1CountsOutgoingCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsOutgoingCallAttempts.setStatus('current')
t1CountsOutgoingConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsOutgoingConnects.setStatus('current')
t1CountsOutgoingDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsOutgoingDisconnects.setStatus('current')
t1CountsSessionAbortMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsSessionAbortMessages.setStatus('current')
t1CountsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsSlotIndex.setStatus('current')
t1CountsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2103, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 56))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1CountsLineNumber.setStatus('current')
t1SummaryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104), )
if mibBuilder.loadTexts: t1SummaryStatsTable.setStatus('current')
t1SummaryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "t1SummaryStatsSlotIndex"), (0, "APTIS-MONITOR-MIB", "t1SummaryStatsLineNumber"))
if mibBuilder.loadTexts: t1SummaryStatsEntry.setStatus('current')
t1SummaryStatsRingingChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1SummaryStatsRingingChannels.setStatus('current')
t1SummaryStatsConnectedChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1SummaryStatsConnectedChannels.setStatus('current')
t1SummaryStatsClearingChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1SummaryStatsClearingChannels.setStatus('current')
t1SummaryStatsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1SummaryStatsSlotIndex.setStatus('current')
t1SummaryStatsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 56))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1SummaryStatsLineNumber.setStatus('current')
t1SummaryStatsFunctionalChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1SummaryStatsFunctionalChannels.setStatus('current')
t1SummaryStatsIdleChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2104, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1SummaryStatsIdleChannels.setStatus('current')
t3StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008), )
if mibBuilder.loadTexts: t3StatsTable.setStatus('current')
t3StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "t3StatsSlotIndex"), (0, "APTIS-MONITOR-MIB", "t3StatsLineNumber"))
if mibBuilder.loadTexts: t3StatsEntry.setStatus('current')
t3StatsLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noalarm", 0), ("yellowalarm", 1), ("redalarm", 2), ("bluealarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t3StatsLineState.setStatus('current')
t3StatsSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t3StatsSlotIndex.setStatus('current')
t3StatsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t3StatsLineNumber.setStatus('current')
t3StatsRedundant = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008, 1, 4), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t3StatsRedundant.setStatus('current')
t3StatsDs1Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 56))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t3StatsDs1Count.setStatus('current')
t3StatsActiveDs1Count = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 56))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t3StatsActiveDs1Count.setStatus('current')
t3StatsExternalClockPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2008, 1, 7), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t3StatsExternalClockPort.setStatus('current')
ss7StatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500), )
if mibBuilder.loadTexts: ss7StatusTable.setStatus('current')
ss7StatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ss7StatusIndex"))
if mibBuilder.loadTexts: ss7StatusEntry.setStatus('current')
ss7StatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusIndex.setStatus('current')
ss7StatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusState.setStatus('current')
ss7StatusNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusNetworkId.setStatus('current')
ss7StatusCalledId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusCalledId.setStatus('current')
ss7StatusCallingId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusCallingId.setStatus('current')
ss7StatusCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("analog", 0), ("isdn", 1), ("loopback", 2), ("cotegress", 3), ("cotingress", 4), ("tandem", 5), ("t102generate", 6), ("t102detect", 7), ("t108egress", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusCallType.setStatus('current')
ss7StatusSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusSlot.setStatus('current')
ss7StatusPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusPort.setStatus('current')
ss7StatusTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusTimeSlot.setStatus('current')
ss7StatusSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusSessionId.setStatus('current')
ss7StatusServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 41))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusServerId.setStatus('current')
ss7StatusStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 500, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusStartTime.setStatus('current')
ss7TraceTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 501), )
if mibBuilder.loadTexts: ss7TraceTable.setStatus('current')
ss7TraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 501, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ss7TraceSs7Index"), (0, "APTIS-MONITOR-MIB", "ss7TraceIndex"))
if mibBuilder.loadTexts: ss7TraceEntry.setStatus('current')
ss7TraceSs7Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 501, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7TraceSs7Index.setStatus('current')
ss7TraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 501, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7TraceIndex.setStatus('current')
ss7TraceAbsoluteTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 501, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7TraceAbsoluteTimeStamp.setStatus('current')
ss7TraceRelativeTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 501, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7TraceRelativeTimeStamp.setStatus('current')
ss7TraceLogEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 501, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7TraceLogEntry.setStatus('current')
ss7StatusReverseTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502), )
if mibBuilder.loadTexts: ss7StatusReverseTable.setStatus('current')
ss7StatusReverseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ss7StatusReverseIndex"))
if mibBuilder.loadTexts: ss7StatusReverseEntry.setStatus('current')
ss7StatusReverseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseIndex.setStatus('current')
ss7StatusReverseState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseState.setStatus('current')
ss7StatusReverseNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseNetworkId.setStatus('current')
ss7StatusReverseCalledId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseCalledId.setStatus('current')
ss7StatusReverseCallingId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseCallingId.setStatus('current')
ss7StatusReverseCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("analog", 0), ("isdn", 1), ("loopback", 2), ("cotegress", 3), ("cotingress", 4), ("tandem", 5), ("t102generate", 6), ("t102detect", 7), ("t108egress", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseCallType.setStatus('current')
ss7StatusReverseSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseSlot.setStatus('current')
ss7StatusReversePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReversePort.setStatus('current')
ss7StatusReverseTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseTimeSlot.setStatus('current')
ss7StatusReverseSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseSessionId.setStatus('current')
ss7StatusReverseServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 41))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseServerId.setStatus('current')
ss7StatusReverseStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 502, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7StatusReverseStartTime.setStatus('current')
ss7CountersTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503), )
if mibBuilder.loadTexts: ss7CountersTable.setStatus('current')
ss7CountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ss7CountersNumActive"))
if mibBuilder.loadTexts: ss7CountersEntry.setStatus('current')
ss7CountersNumActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7CountersNumActive.setStatus('current')
ss7CountersNumInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7CountersNumInactive.setStatus('current')
ss7CountersRetainedFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7CountersRetainedFree.setStatus('current')
ss7CountersRetainedFull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7CountersRetainedFull.setStatus('current')
ss7CountersOneshotFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7CountersOneshotFree.setStatus('current')
ss7CountersOneshotFull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7CountersOneshotFull.setStatus('current')
ss7CountersDsmccFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7CountersDsmccFree.setStatus('current')
ss7CountersDsmccFull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 503, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7CountersDsmccFull.setStatus('current')
ipdcTraceTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 504), )
if mibBuilder.loadTexts: ipdcTraceTable.setStatus('current')
ipdcTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 504, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ipdcTraceIndex"))
if mibBuilder.loadTexts: ipdcTraceEntry.setStatus('current')
ipdcTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 504, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipdcTraceIndex.setStatus('current')
ipdcTraceTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 504, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipdcTraceTimeStamp.setStatus('current')
ipdcTraceDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 504, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transmit", 0), ("receive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipdcTraceDirection.setStatus('current')
ipdcTraceMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 504, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipdcTraceMsgSize.setStatus('current')
ipdcTraceIpdcMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 504, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipdcTraceIpdcMsg.setStatus('current')
systemTimeTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 15), )
if mibBuilder.loadTexts: systemTimeTable.setStatus('current')
systemTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 15, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "systemTimeFixedBootTime"))
if mibBuilder.loadTexts: systemTimeEntry.setStatus('current')
systemTimeFixedBootTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTimeFixedBootTime.setStatus('current')
systemTimeUTCOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTimeUTCOffset.setStatus('current')
systemTimeUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTimeUpTime.setStatus('current')
dacStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2002), )
if mibBuilder.loadTexts: dacStatusTable.setStatus('current')
dacStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2002, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "dacStatusClockSourcePrimary"))
if mibBuilder.loadTexts: dacStatusEntry.setStatus('current')
dacStatusClockSourcePrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2002, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacStatusClockSourcePrimary.setStatus('current')
dacStatusClockSourceSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2002, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacStatusClockSourceSecondary.setStatus('current')
dacStatusLTMType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2002, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 17))).clone(namedValues=NamedValues(("t1by12", 1), ("e1by12", 2), ("t3by1", 3), ("t3by2", 4), ("t1by24", 5), ("e1by24", 6), ("t3by4", 7), ("redundant", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacStatusLTMType.setStatus('current')
dacTraceTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003), )
if mibBuilder.loadTexts: dacTraceTable.setStatus('current')
dacTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "dacTraceIndex"))
if mibBuilder.loadTexts: dacTraceEntry.setStatus('current')
dacTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacTraceIndex.setStatus('current')
dacTraceLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sM", 1), ("tN", 2), ("hDLC", 3), ("uSFSM", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacTraceLocation.setStatus('current')
dacTraceDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transmit", 1), ("receive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacTraceDirection.setStatus('current')
dacTraceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("smCreate", 1), ("smResource", 2), ("smSetup", 3), ("smConnect", 4), ("smMove", 5), ("smDisconnect", 6), ("smAbort", 7), ("smActivated", 8), ("smConnected", 9), ("smReady", 10), ("smMoved", 11), ("smLinkFailed", 12), ("smDisconnected", 13), ("smResourceSet", 14), ("ccSetup", 15), ("ccConnect", 16), ("ccDisconnect", 17), ("ccAlloc", 18), ("ccClear", 19), ("ccRestart", 20), ("tnSetupInd", 21), ("tnSetupReq", 22), ("tnSetupConf", 23), ("tnAlertingReq", 24), ("tnAlertingInd", 25), ("tnCallProcReq", 26), ("tnCallProcInd", 27), ("tnConnectReq", 28), ("tnConnectInd", 29), ("tnConnectConf", 30), ("tnDiscReq", 31), ("tnDiscInd", 32), ("tnClearReq", 33), ("tnClearInd", 34), ("tnClearConf", 35), ("tnClearResp", 36), ("tnSetupResp", 37)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacTraceType.setStatus('current')
dacTraceTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacTraceTimestamp.setStatus('current')
dacTraceLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacTraceLen.setStatus('current')
dacTraceData = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2003, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacTraceData.setStatus('current')
dacClockingTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2050), )
if mibBuilder.loadTexts: dacClockingTable.setStatus('current')
dacClockingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2050, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "dacClockingIndex"))
if mibBuilder.loadTexts: dacClockingEntry.setStatus('current')
dacClockingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2050, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacClockingIndex.setStatus('current')
dacClockingClockSourcePrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2050, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 200, 201, 202, 255))).clone(namedValues=NamedValues(("if0", 0), ("if1", 1), ("if2", 2), ("if3", 3), ("if4", 4), ("if5", 5), ("if6", 6), ("if7", 7), ("if8", 8), ("if9", 9), ("if10", 10), ("if11", 11), ("if12", 12), ("if13", 13), ("if14", 14), ("if15", 15), ("if16", 16), ("if17", 17), ("if18", 18), ("if19", 19), ("if20", 20), ("if21", 21), ("if22", 22), ("if23", 23), ("if24", 24), ("if25", 25), ("if26", 26), ("if27", 27), ("if28", 28), ("if29", 29), ("if30", 30), ("if31", 31), ("if32", 32), ("if33", 33), ("if34", 34), ("if35", 35), ("if36", 36), ("if37", 37), ("if38", 38), ("if39", 39), ("if40", 40), ("if41", 41), ("if42", 42), ("if43", 43), ("if44", 44), ("if45", 45), ("if46", 46), ("if47", 47), ("if48", 48), ("if49", 49), ("if50", 50), ("if51", 51), ("if52", 52), ("if53", 53), ("if54", 54), ("if55", 55), ("external", 200), ("auto1", 201), ("auto2", 202), ("disabled", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacClockingClockSourcePrimary.setStatus('current')
dacClockingClockSourceSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2050, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 200, 201, 202, 255))).clone(namedValues=NamedValues(("if0", 0), ("if1", 1), ("if2", 2), ("if3", 3), ("if4", 4), ("if5", 5), ("if6", 6), ("if7", 7), ("if8", 8), ("if9", 9), ("if10", 10), ("if11", 11), ("if12", 12), ("if13", 13), ("if14", 14), ("if15", 15), ("if16", 16), ("if17", 17), ("if18", 18), ("if19", 19), ("if20", 20), ("if21", 21), ("if22", 22), ("if23", 23), ("if24", 24), ("if25", 25), ("if26", 26), ("if27", 27), ("if28", 28), ("if29", 29), ("if30", 30), ("if31", 31), ("if32", 32), ("if33", 33), ("if34", 34), ("if35", 35), ("if36", 36), ("if37", 37), ("if38", 38), ("if39", 39), ("if40", 40), ("if41", 41), ("if42", 42), ("if43", 43), ("if44", 44), ("if45", 45), ("if46", 46), ("if47", 47), ("if48", 48), ("if49", 49), ("if50", 50), ("if51", 51), ("if52", 52), ("if53", 53), ("if54", 54), ("if55", 55), ("external", 200), ("auto1", 201), ("auto2", 202), ("disabled", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacClockingClockSourceSecondary.setStatus('current')
dacClockingForce = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 2050, 1, 4), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dacClockingForce.setStatus('current')
ipstatRouteEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701), )
if mibBuilder.loadTexts: ipstatRouteEntryTable.setStatus('current')
ipstatRouteEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ipstatRouteEntryPrevXxrt"))
if mibBuilder.loadTexts: ipstatRouteEntryEntry.setStatus('current')
ipstatRouteEntryPrevXxrt = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryPrevXxrt.setStatus('current')
ipstatRouteEntryNextIprt = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryNextIprt.setStatus('current')
ipstatRouteEntryPrevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryPrevIndex.setStatus('current')
ipstatRouteEntryGenNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryGenNumber.setStatus('current')
ipstatRouteEntryNextIprtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryNextIprtIndex.setStatus('current')
ipstatRouteEntryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryIpAddress.setStatus('current')
ipstatRouteEntryIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryIpMask.setStatus('current')
ipstatRouteEntryCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryCircuitId.setStatus('current')
ipstatRouteEntryTYPE = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryTYPE.setStatus('current')
ipstatRouteEntryOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryOwner.setStatus('current')
ipstatRouteEntryPathAndCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryPathAndCost.setStatus('current')
ipstatRouteEntryTrig = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryTrig.setStatus('current')
ipstatRouteEntryTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryTag.setStatus('current')
ipstatRouteEntryPrivate = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryPrivate.setStatus('current')
ipstatRouteEntryPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mpath", 1), ("simple", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryPathType.setStatus('current')
ipstatRouteEntryCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3701, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatRouteEntryCost.setStatus('current')
dvsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505), )
if mibBuilder.loadTexts: dvsStatusTable.setStatus('current')
dvsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "dvsStatusLocalCLID"))
if mibBuilder.loadTexts: dvsStatusEntry.setStatus('current')
dvsStatusLocalCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusLocalCLID.setStatus('current')
dvsStatusRemoteCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusRemoteCLID.setStatus('current')
dvsStatusLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusLocalAddress.setStatus('current')
dvsStatusRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusRemoteAddress.setStatus('current')
dvsStatusTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("iDLE", 0), ("aWGWCFG", 1), ("aUTHREPLY", 2), ("pRIMGWTO", 3), ("mODPPPCFG", 4), ("dHCP", 5), ("mIP", 6), ("oPEN", 7), ("dISC", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusTunnelState.setStatus('current')
dvsStatusUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusUpTime.setStatus('current')
dvsStatusMacSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusMacSlotNumber.setStatus('current')
dvsStatusVPOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusVPOP.setStatus('current')
dvsStatusGreInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusGreInPackets.setStatus('current')
dvsStatusGreOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusGreOutPackets.setStatus('current')
dvsStatusGreChecksumError = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusGreChecksumError.setStatus('current')
dvsStatusGreInDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusGreInDropped.setStatus('current')
dvsStatusGreOutDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusGreOutDropped.setStatus('current')
dvsStatusDeadSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 14), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadSession.setStatus('current')
dvsStatusRemoteIPXNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusRemoteIPXNetwork.setStatus('current')
dvsStatusRemoteIPXNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusRemoteIPXNode.setStatus('current')
dvsStatusIPInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusIPInPackets.setStatus('current')
dvsStatusIPOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusIPOutPackets.setStatus('current')
dvsStatusIPXInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusIPXInPackets.setStatus('current')
dvsStatusIPXOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1505, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusIPXOutPackets.setStatus('current')
dvsLogEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1506), )
if mibBuilder.loadTexts: dvsLogEntryTable.setStatus('current')
dvsLogEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1506, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "dvsLogEntryIndex"))
if mibBuilder.loadTexts: dvsLogEntryEntry.setStatus('current')
dvsLogEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1506, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsLogEntryIndex.setStatus('current')
dvsLogEntryMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1506, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsLogEntryMinIndex.setStatus('current')
dvsLogEntryMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1506, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsLogEntryMaxIndex.setStatus('current')
dvsLogEntryEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1506, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsLogEntryEntryText.setStatus('current')
dvsLogEntryTunnelCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1506, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsLogEntryTunnelCLID.setStatus('current')
dvsLogEntryUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1506, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsLogEntryUpTime.setStatus('current')
dvsDeadLogEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1520), )
if mibBuilder.loadTexts: dvsDeadLogEntryTable.setStatus('current')
dvsDeadLogEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1520, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "dvsDeadLogEntryIndex"))
if mibBuilder.loadTexts: dvsDeadLogEntryEntry.setStatus('current')
dvsDeadLogEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1520, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsDeadLogEntryIndex.setStatus('current')
dvsDeadLogEntryMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1520, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsDeadLogEntryMinIndex.setStatus('current')
dvsDeadLogEntryMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1520, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsDeadLogEntryMaxIndex.setStatus('current')
dvsDeadLogEntryEntryText = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1520, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsDeadLogEntryEntryText.setStatus('current')
dvsDeadLogEntryTunnelCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1520, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsDeadLogEntryTunnelCLID.setStatus('current')
dvsDeadLogEntryUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1520, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsDeadLogEntryUpTime.setStatus('current')
dvsStatusDeadTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521), )
if mibBuilder.loadTexts: dvsStatusDeadTable.setStatus('current')
dvsStatusDeadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "dvsStatusDeadTunnelCLID"))
if mibBuilder.loadTexts: dvsStatusDeadEntry.setStatus('current')
dvsStatusDeadTunnelCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadTunnelCLID.setStatus('current')
dvsStatusDeadRemoteCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadRemoteCLID.setStatus('current')
dvsStatusDeadRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadRemoteAddress.setStatus('current')
dvsStatusDeadTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("iDLE", 0), ("aWGWCFG", 1), ("aUTHREPLY", 2), ("pRIMGWTO", 3), ("mODPPPCFG", 4), ("dHCP", 5), ("mIP", 6), ("oPEN", 7), ("dISC", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadTunnelState.setStatus('current')
dvsStatusDeadUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadUpTime.setStatus('current')
dvsStatusDeadMacSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadMacSlotNumber.setStatus('current')
dvsStatusDeadVPOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadVPOP.setStatus('current')
dvsStatusDeadGreInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadGreInPackets.setStatus('current')
dvsStatusDeadGreOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadGreOutPackets.setStatus('current')
dvsStatusDeadGreChecksumError = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadGreChecksumError.setStatus('current')
dvsStatusDeadGreInDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadGreInDropped.setStatus('current')
dvsStatusDeadGreOutDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadGreOutDropped.setStatus('current')
dvsStatusDeadDeadSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 1521, 1, 13), Boolean()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvsStatusDeadDeadSession.setStatus('current')
ipstatIgmpEntryTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3801), )
if mibBuilder.loadTexts: ipstatIgmpEntryTable.setStatus('current')
ipstatIgmpEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3801, 1), ).setIndexNames((0, "APTIS-MONITOR-MIB", "ipstatIgmpEntryIPAddress"))
if mibBuilder.loadTexts: ipstatIgmpEntryEntry.setStatus('current')
ipstatIgmpEntryIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3801, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatIgmpEntryIPAddress.setStatus('current')
ipstatIgmpEntryIPAddrfrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3801, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatIgmpEntryIPAddrfrom.setStatus('current')
ipstatIgmpEntryCliId = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3801, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatIgmpEntryCliId.setStatus('current')
ipstatIgmpEntryTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3801, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatIgmpEntryTimeout.setStatus('current')
ipstatIgmpEntryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3801, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatIgmpEntryCount.setStatus('current')
ipstatIgmpEntryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 2, 3801, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nomem", 1), ("v1mem", 2), ("check", 3), ("mem", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipstatIgmpEntryState.setStatus('current')
mibBuilder.exportSymbols("APTIS-MONITOR-MIB", sessionStatusActiveLinkId=sessionStatusActiveLinkId, l2TPTunnelStatusActiveMaxActiveLinks=l2TPTunnelStatusActiveMaxActiveLinks, sessionSummaryInactiveUnknown=sessionSummaryInactiveUnknown, modemCallStatsMaxTxRetransmissions=modemCallStatsMaxTxRetransmissions, modemCallStatsAutoGainAttenuation=modemCallStatsAutoGainAttenuation, sessionSummaryMaximumSlip=sessionSummaryMaximumSlip, pppSessionStatsRemotePFC=pppSessionStatsRemotePFC, ds0StatsEntry=ds0StatsEntry, pppLogEntryMaxIndex=pppLogEntryMaxIndex, dvsStatusDeadGreChecksumError=dvsStatusDeadGreChecksumError, e1StatsLineNumber=e1StatsLineNumber, sessionStatusInactivePack=sessionStatusInactivePack, l2TPLogEntryMaxIndex=l2TPLogEntryMaxIndex, sessionStatusRxMinDataRate=sessionStatusRxMinDataRate, modemStatsStatsSamples=modemStatsStatsSamples, modemCallStatsEQM3Seconds=modemCallStatsEQM3Seconds, sessionStatusHistoryTunnelId=sessionStatusHistoryTunnelId, l2FTunnelStatusActiveLocalAddress=l2FTunnelStatusActiveLocalAddress, pppDeadSessionStatsTxBytes=pppDeadSessionStatsTxBytes, sessionStatusActiveModemDataCompression=sessionStatusActiveModemDataCompression, t1SummaryStatsConnectedChannels=t1SummaryStatsConnectedChannels, timerStatsFreeMin=timerStatsFreeMin, modemSessionStats2Table=modemSessionStats2Table, modemCallStatsV90IMDRatio=modemCallStatsV90IMDRatio, sessionStatusReverseServiceMode=sessionStatusReverseServiceMode, memoryStatsTableUsedLargestBlock=memoryStatsTableUsedLargestBlock, sessionStatusReverseTxMaxDataRate=sessionStatusReverseTxMaxDataRate, modemCallStatsMaxEQMValue=modemCallStatsMaxEQMValue, pppDeadSessionStatsLocalVJSlots=pppDeadSessionStatsLocalVJSlots, sessionStatusReverseLayer2Slot=sessionStatusReverseLayer2Slot, modemStatsModemIndex=modemStatsModemIndex, modemSessionStatsModemNumber=modemSessionStatsModemNumber, sessionStatusHistoryName=sessionStatusHistoryName, pppSessionStatsMLPPacketsReassembled=pppSessionStatsMLPPacketsReassembled, dvsStatusEntry=dvsStatusEntry, pppSessionStatsRxAlignErrors=pppSessionStatsRxAlignErrors, l2FTunnelStatusActiveTable=l2FTunnelStatusActiveTable, l2TPTunnelStatusActiveGotOpened=l2TPTunnelStatusActiveGotOpened, sessionSummaryTable=sessionSummaryTable, pbufStatsAllocatedCount5=pbufStatsAllocatedCount5, modemCallStatsTxInitialSpeed=modemCallStatsTxInitialSpeed, modemCallStatsV90DigitalPadLow=modemCallStatsV90DigitalPadLow, sessionSummaryInactivePpp=sessionSummaryInactivePpp, sessionStatusReverseName=sessionStatusReverseName, timerStatsTimerMemorySize=timerStatsTimerMemorySize, pbufStatsTotalCount0=pbufStatsTotalCount0, l2TPTunnelStatusInactiveUpTime=l2TPTunnelStatusInactiveUpTime, pbufStatsTotalCount2=pbufStatsTotalCount2, l2FLogEntryLocalCLID=l2FLogEntryLocalCLID, l2TPTunnelStatusActivePendingLinks=l2TPTunnelStatusActivePendingLinks, ipAlarmEntryTrapTimeticks=ipAlarmEntryTrapTimeticks, modemSessionStats2DataValidity=modemSessionStats2DataValidity, slotStatusSlotStatus=slotStatusSlotStatus, iSDNHDLCFrameMessage=iSDNHDLCFrameMessage, sessionStatusReverseCalledNumber=sessionStatusReverseCalledNumber, l2TPTunnelStatusActiveLinksAddedUnsuccessfully=l2TPTunnelStatusActiveLinksAddedUnsuccessfully, powerStatusExternalDC2=powerStatusExternalDC2, e1StatsTable=e1StatsTable, pbufStatsAllocatedCount3=pbufStatsAllocatedCount3, softwareVersionSoftwareRevision=softwareVersionSoftwareRevision, sessionSummaryActiveTest=sessionSummaryActiveTest, modemCallStatsPreEmphasis=modemCallStatsPreEmphasis, t1SummaryStatsEntry=t1SummaryStatsEntry, modemCallStatsRxFinalSpeed=modemCallStatsRxFinalSpeed, ipstatIgmpEntryTimeout=ipstatIgmpEntryTimeout, iSDNStatsInConnected=iSDNStatsInConnected, pppDeadSessionStatsRemotePFC=pppDeadSessionStatsRemotePFC, sessionStatusInactiveCleartcpRemoteIP=sessionStatusInactiveCleartcpRemoteIP, sessionStatusInactiveModemRemoteRenegotiations=sessionStatusInactiveModemRemoteRenegotiations, sessionStatusHistoryTerminationReason=sessionStatusHistoryTerminationReason, dvsStatusDeadGreOutPackets=dvsStatusDeadGreOutPackets, sessionDiscCauseCount=sessionDiscCauseCount, l2TPLinkStatusL2TPTermationCause=l2TPLinkStatusL2TPTermationCause, ss7StatusSessionId=ss7StatusSessionId, pbufStatsFreeCount4=pbufStatsFreeCount4, sessionSummaryMaximumTelnet=sessionSummaryMaximumTelnet, pppDeadSessionStatsRemoteMRU=pppDeadSessionStatsRemoteMRU, ipstatRouteEntryCost=ipstatRouteEntryCost, dvsStatusDeadEntry=dvsStatusDeadEntry, sessionStatusReverseState=sessionStatusReverseState, pbufStatsAllocatedMax2=pbufStatsAllocatedMax2, l2FLinkStatusRxPackets=l2FLinkStatusRxPackets, pppDeadSessionStatsLocalPFC=pppDeadSessionStatsLocalPFC, sessionStatusHistoryTandemPort=sessionStatusHistoryTandemPort, modemStatsECCalls=modemStatsECCalls, sessionMultilinkMyEIDLength=sessionMultilinkMyEIDLength, sessionStatusHistoryCallClassArray=sessionStatusHistoryCallClassArray, modemStatsPack=modemStatsPack, t1CountsOutgoingConnects=t1CountsOutgoingConnects, ss7StatusSlot=ss7StatusSlot, modemStatsTotalCalls=modemStatsTotalCalls, sessionStatusReverseRxMinDataRate=sessionStatusReverseRxMinDataRate, sessionStatusHistoryModemRemoteRenegotiations=sessionStatusHistoryModemRemoteRenegotiations, modemSummaryStatsNoDownloadCount=modemSummaryStatsNoDownloadCount, l2FLogEntryMaxIndex=l2FLogEntryMaxIndex, pbufStatsPermAllocatedCount0=pbufStatsPermAllocatedCount0, sessionStatusInactiveModemModulation=sessionStatusInactiveModemModulation, cHdlcStatsTable=cHdlcStatsTable, modemCallStatsWAStatus=modemCallStatsWAStatus, sessionStatusHistoryRxStartDataRate=sessionStatusHistoryRxStartDataRate, timerStatsActiveCount=timerStatsActiveCount, sessionStatusInactiveTerminationReason=sessionStatusInactiveTerminationReason, ipsecCountersEntry=ipsecCountersEntry, dvsStatusDeadSession=dvsStatusDeadSession, sessionSlotsSlot1Count=sessionSlotsSlot1Count, pbufStatsAllocSuccesses0=pbufStatsAllocSuccesses0, sessionStatusLinkService=sessionStatusLinkService, sessionStatusRemoteIP=sessionStatusRemoteIP, pppDeadSessionStatsRxBytesAfterCompress=pppDeadSessionStatsRxBytesAfterCompress, sessionStatusInactiveLayer2Slot=sessionStatusInactiveLayer2Slot, sessionStatusReversePacketsIn=sessionStatusReversePacketsIn, modemCallStatsConnectTimeSeconds=modemCallStatsConnectTimeSeconds, sessionStatusActiveStopTime=sessionStatusActiveStopTime, slotStatusNewSlotOos=slotStatusNewSlotOos, ipAlarmEntryTable=ipAlarmEntryTable, ipAlarmEntryTrapPath=ipAlarmEntryTrapPath, sessionStatusInactiveRxEndDataRate=sessionStatusInactiveRxEndDataRate, sessionSlotsSlot14Count=sessionSlotsSlot14Count, sessionStatusReverseRemoteIPXNode=sessionStatusReverseRemoteIPXNode, modemCallStatsNumberOfRXCharsMSB=modemCallStatsNumberOfRXCharsMSB, sessionStatusReverseOctetsIn=sessionStatusReverseOctetsIn, sessionStatusHistoryTimeslot=sessionStatusHistoryTimeslot, taskStatsTableIdle5Minute=taskStatsTableIdle5Minute, sessionComponentsStatHandle=sessionComponentsStatHandle, sessionStatusReverseModemErrorCorrection=sessionStatusReverseModemErrorCorrection, modemSessionStats2InitialRxSpeed=modemSessionStats2InitialRxSpeed, timerStatsFreeCount=timerStatsFreeCount, sessionStatusInactiveModemDataCompression=sessionStatusInactiveModemDataCompression, pppSessionStatsDNSAddress1=pppSessionStatsDNSAddress1, modemStatsEntry=modemStatsEntry, taskStatsTableIsrTimes=taskStatsTableIsrTimes, ipCleartcpStatsEntry=ipCleartcpStatsEntry, l2FTunnelStatusActiveLinksAddedSuccessfully=l2FTunnelStatusActiveLinksAddedSuccessfully, pppSessionStatsRxResourceErrors=pppSessionStatsRxResourceErrors, dvsDeadLogEntryTable=dvsDeadLogEntryTable, sessionSummaryMaximumDvs=sessionSummaryMaximumDvs, pppSummaryStatsFreeLinks=pppSummaryStatsFreeLinks, modemIntervalStatsK56Calls=modemIntervalStatsK56Calls, powerStatusInternalACDC2=powerStatusInternalACDC2, ds0StatsInCleared=ds0StatsInCleared, modemCallStatsEQM7Seconds=modemCallStatsEQM7Seconds, sessionStatusReverseTunnelType=sessionStatusReverseTunnelType, sessionStatusActivePack=sessionStatusActivePack, sessionSummaryMaximumUnknown=sessionSummaryMaximumUnknown, dvsDeadLogEntryMaxIndex=dvsDeadLogEntryMaxIndex, sessionStatusActiveTunnelMediumType=sessionStatusActiveTunnelMediumType, memoryStatsTableFreeSuccesses=memoryStatsTableFreeSuccesses, pppSessionStatsTxCompressing=pppSessionStatsTxCompressing, pppDeadSessionStatsEntry=pppDeadSessionStatsEntry, ss7TraceSs7Index=ss7TraceSs7Index, modemSessionStatsIOPNumber=modemSessionStatsIOPNumber, sessionStatusHistoryModemLocalRenegotiations=sessionStatusHistoryModemLocalRenegotiations, timerStatsSlotNumber=timerStatsSlotNumber, pppDeadSessionStatsUserName=pppDeadSessionStatsUserName, pbufStatsFreeFails3=pbufStatsFreeFails3, modemCallStatsTxMaxSpeed=modemCallStatsTxMaxSpeed, sessionSummaryInactiveRlogin=sessionSummaryInactiveRlogin, sessionStatusReverseTunnelServerAddress=sessionStatusReverseTunnelServerAddress, sessionStatusHistoryTimeOfModemSync=sessionStatusHistoryTimeOfModemSync, taskStatsTableGlobalPool=taskStatsTableGlobalPool, slotStatusSlotType=slotStatusSlotType, sessionStatusActiveModemRemoteRenegotiations=sessionStatusActiveModemRemoteRenegotiations, l2FLinkStatusUpTime=l2FLinkStatusUpTime, taskStatsTableTable=taskStatsTableTable, modemCallStatsRBSRateDrop=modemCallStatsRBSRateDrop, l2FTunnelStatusActiveGotOpened=l2FTunnelStatusActiveGotOpened, taskStatsTableStackAddress4=taskStatsTableStackAddress4, dvsStatusLocalAddress=dvsStatusLocalAddress, sessionStatusReverseTimeOfService=sessionStatusReverseTimeOfService, sessionStatusActiveDuration=sessionStatusActiveDuration, t1SummaryStatsLineNumber=t1SummaryStatsLineNumber, sessionStatusActiveModemLocalRenegotiations=sessionStatusActiveModemLocalRenegotiations, sessionStatusInactiveTdmStream=sessionStatusInactiveTdmStream, pppSummaryStatsLinksNegotiatedMLP=pppSummaryStatsLinksNegotiatedMLP, taskStatsTableTaskID=taskStatsTableTaskID, powerStatusFanStatus=powerStatusFanStatus, sessionStatusTunnelId=sessionStatusTunnelId, sessionStatusInactiveCallingNumber=sessionStatusInactiveCallingNumber, pbufStatsPermAllocatedCount3=pbufStatsPermAllocatedCount3, slotStatusTable=slotStatusTable, pppDeadLogEntryEntryText=pppDeadLogEntryEntryText, cHdlcStatsCiscoFramesIn=cHdlcStatsCiscoFramesIn, powerStatusInternalACDC1=powerStatusInternalACDC1, pppSummaryStatsLinksLeased=pppSummaryStatsLinksLeased, sessionStatusActiveModemTxBlocks=sessionStatusActiveModemTxBlocks, ss7StatusReverseNetworkId=ss7StatusReverseNetworkId, pppSessionStatsDeadSession=pppSessionStatsDeadSession, sessionVpopCurrentCount=sessionVpopCurrentCount, modemCallStatsNumberOfLAPMREJSReceived=modemCallStatsNumberOfLAPMREJSReceived, modemCallStatsDataIsValid=modemCallStatsDataIsValid, sessionStatusReverseModemLocalRenegotiations=sessionStatusReverseModemLocalRenegotiations, iSDNStatsOutCalls=iSDNStatsOutCalls, sessionStatusInactivePermanentFlag=sessionStatusInactivePermanentFlag, sessionStatusInactiveTandemTimeslot=sessionStatusInactiveTandemTimeslot, slotStatusSerialNumber=slotStatusSerialNumber, ipStubStatsIgmpUnknownType=ipStubStatsIgmpUnknownType, sessionStatusActiveCleartcpRemotePort=sessionStatusActiveCleartcpRemotePort, sessionStatusActiveTxMaxDataRate=sessionStatusActiveTxMaxDataRate, modemCallStatsRxPrecoding=modemCallStatsRxPrecoding, sessionSummaryMaximumCiscoHDLC=sessionSummaryMaximumCiscoHDLC, pppLogEntryEntry=pppLogEntryEntry, pppDeadSessionStatsLocalCompressAlgorithm=pppDeadSessionStatsLocalCompressAlgorithm, sessionSummaryActivePpp=sessionSummaryActivePpp, pbufStatsPermAllocatedCount1=pbufStatsPermAllocatedCount1, sessionCountersInactiveHighest=sessionCountersInactiveHighest, sessionStatusInactiveOctetsOut=sessionStatusInactiveOctetsOut, modemStatsAuthCalls=modemStatsAuthCalls, modemCallStatsMinutesSinceRetrain=modemCallStatsMinutesSinceRetrain, dacTraceDirection=dacTraceDirection, sessionVpopProtocol=sessionVpopProtocol, modemCallStatsSessionID=modemCallStatsSessionID, pbufStatsDataSize3=pbufStatsDataSize3, l2FTunnelStatusActiveState=l2FTunnelStatusActiveState, sessionStatusCallClass=sessionStatusCallClass, modemCallStatsDisconnectReason=modemCallStatsDisconnectReason, iSDNHDLCFrameEntry=iSDNHDLCFrameEntry, sessionStatusActiveCallClassArray=sessionStatusActiveCallClassArray, modemCallStatsEQM1Second=modemCallStatsEQM1Second, sessionStatusReverseCallingNumber=sessionStatusReverseCallingNumber, modemStatsMinTxSum=modemStatsMinTxSum, l2TPTunnelStatusInactiveGotOpened=l2TPTunnelStatusInactiveGotOpened, sessionSummaryInactiveNone=sessionSummaryInactiveNone, sessionStatusHistoryTxEndDataRate=sessionStatusHistoryTxEndDataRate, sessionStatusHistoryCleartcpRemoteIP=sessionStatusHistoryCleartcpRemoteIP, dacTraceLen=dacTraceLen, pppDeadSessionStatsTxBytesBeforeCompress=pppDeadSessionStatsTxBytesBeforeCompress, sessionStatusHistoryLinkCount=sessionStatusHistoryLinkCount, sessionStatusHistoryPack=sessionStatusHistoryPack, sessionStatusReverseStopTime=sessionStatusReverseStopTime, sessionMultilinkPeerEIDLength=sessionMultilinkPeerEIDLength, sessionMultilinkMyEIDData=sessionMultilinkMyEIDData, ipstatRouteEntryIpMask=ipstatRouteEntryIpMask, sessionStatusRxStartDataRate=sessionStatusRxStartDataRate, sessionStatusReverseDuration=sessionStatusReverseDuration, ds0StatsTable=ds0StatsTable, sessionStatusReverseCallClassArray=sessionStatusReverseCallClassArray, l2FTunnelStatusInactiveLinksAdded=l2FTunnelStatusInactiveLinksAdded, modemIntervalStatsEntry=modemIntervalStatsEntry, pbufStatsPermAllocatedCount4=pbufStatsPermAllocatedCount4, sessionStatusActiveModemModulation=sessionStatusActiveModemModulation, sessionVpopCurrentDuration=sessionVpopCurrentDuration, sessionStatusPort=sessionStatusPort, sessionSummaryMaximumL2f=sessionSummaryMaximumL2f, pppSessionStatsRxAbortErrors=pppSessionStatsRxAbortErrors, modemSessionStatsConnectString=modemSessionStatsConnectString, modemSummaryStatsK56Calls=modemSummaryStatsK56Calls, sessionStatusInactiveVpopId=sessionStatusInactiveVpopId, sessionStatusHistoryModemSNR=sessionStatusHistoryModemSNR, pppDeadSessionStatsRxBytesUncompressed=pppDeadSessionStatsRxBytesUncompressed, sessionStatusHistoryModemDataCompression=sessionStatusHistoryModemDataCompression, ipdcTraceIpdcMsg=ipdcTraceIpdcMsg, modemCallStatsRxInitialSpeed=modemCallStatsRxInitialSpeed, pppSessionStatsRxSpeed=pppSessionStatsRxSpeed, sessionStatusReverseCleartcpRemoteIP=sessionStatusReverseCleartcpRemoteIP)
mibBuilder.exportSymbols("APTIS-MONITOR-MIB", dacClockingForce=dacClockingForce, sessionStatusCallClassLen=sessionStatusCallClassLen, e1CountsSessionAbortMessages=e1CountsSessionAbortMessages, clockStatusCurrentSource=clockStatusCurrentSource, modemStatsState=modemStatsState, modemIntervalStatsV32Calls=modemIntervalStatsV32Calls, slotStatusNewFabricationRev=slotStatusNewFabricationRev, sessionStatusReverseLinkService=sessionStatusReverseLinkService, ipCleartcpStatsInputDroppedBytes=ipCleartcpStatsInputDroppedBytes, taskStatsTableStackAddress9=taskStatsTableStackAddress9, l2TPLogEntryEntry=l2TPLogEntryEntry, sessionStatusReverseModemModulation=sessionStatusReverseModemModulation, pppDeadSessionStatsMultilinkLinksAdded=pppDeadSessionStatsMultilinkLinksAdded, l2FLogEntryEntryText=l2FLogEntryEntryText, pppSessionStatsLocalACFC=pppSessionStatsLocalACFC, pppSessionStatsMultilinkActive=pppSessionStatsMultilinkActive, modemCallStatsSlotIndex=modemCallStatsSlotIndex, sessionStatusModemTxBlocks=sessionStatusModemTxBlocks, sessionStatusReverseModemDataCompression=sessionStatusReverseModemDataCompression, pppDeadSessionStatsRxResourceErrors=pppDeadSessionStatsRxResourceErrors, pppDeadSessionStatsRxCompPacketsDropped=pppDeadSessionStatsRxCompPacketsDropped, pppDeadSessionStatsPhase=pppDeadSessionStatsPhase, sessionSummaryMaximumVoice=sessionSummaryMaximumVoice, sessionStatusActiveStartTime=sessionStatusActiveStartTime, iSDNStatsInCalls=iSDNStatsInCalls, dacClockingClockSourceSecondary=dacClockingClockSourceSecondary, dvsLogEntryTable=dvsLogEntryTable, sessionStatusTerminationReason=sessionStatusTerminationReason, modemStatsLast32Calls=modemStatsLast32Calls, ss7StatusIndex=ss7StatusIndex, e1CountsChannelsInUse=e1CountsChannelsInUse, aptisMonitorModule=aptisMonitorModule, pppDeadSessionStatsInterfaceType=pppDeadSessionStatsInterfaceType, modemStatsV34Calls=modemStatsV34Calls, modemCallStatsHighestRxState=modemCallStatsHighestRxState, sessionStatusTdmStream=sessionStatusTdmStream, pppDeadSessionStatsMultilinkLinksRemoved=pppDeadSessionStatsMultilinkLinksRemoved, dvsDeadLogEntryTunnelCLID=dvsDeadLogEntryTunnelCLID, ss7StatusReverseCalledId=ss7StatusReverseCalledId, t1StatsTable=t1StatsTable, taskStatsTableRunTime=taskStatsTableRunTime, iSDNLayer2StatsEntry=iSDNLayer2StatsEntry, t3StatsSlotIndex=t3StatsSlotIndex, modemCallStatsTxLevelReduction=modemCallStatsTxLevelReduction, sessionStatusModemSNR=sessionStatusModemSNR, sessionStatusReverseRemoteIPMask=sessionStatusReverseRemoteIPMask, sessionStatusInactiveEntry=sessionStatusInactiveEntry, sessionStatusReverseTimeslot=sessionStatusReverseTimeslot, ipstatRouteEntryOwner=ipstatRouteEntryOwner, pbufStatsAllocatedMax5=pbufStatsAllocatedMax5, slotStatusNewProductCode=slotStatusNewProductCode, sessionStatusHistoryLayer2Slot=sessionStatusHistoryLayer2Slot, l2TPTunnelStatusActiveVPOP=l2TPTunnelStatusActiveVPOP, pbufStatsEntry=pbufStatsEntry, powerStatusInternalAC1=powerStatusInternalAC1, pppDeadSessionStatsRxAbortErrors=pppDeadSessionStatsRxAbortErrors, mamLogEntryIndex=mamLogEntryIndex, l2TPTunnelStatusActiveUpTime=l2TPTunnelStatusActiveUpTime, sessionMultilinkPeerEIDType=sessionMultilinkPeerEIDType, ss7CountersDsmccFull=ss7CountersDsmccFull, sessionStatusInactiveCallClassArray=sessionStatusInactiveCallClassArray, ipSvcMonitoringRequestsInProgress=ipSvcMonitoringRequestsInProgress, pppDeadLogEntrySessionId=pppDeadLogEntrySessionId, sessionDiscCauseTable=sessionDiscCauseTable, sessionSummaryMaximumHub=sessionSummaryMaximumHub, dvsLogEntryMinIndex=dvsLogEntryMinIndex, sessionMultilinkMyShortSequence=sessionMultilinkMyShortSequence, pppDeadSessionStatsTotalRxSpeed=pppDeadSessionStatsTotalRxSpeed, sessionStatusActiveModemNumber=sessionStatusActiveModemNumber, e1CountsOutgoingCallAttempts=e1CountsOutgoingCallAttempts, sessionVpopCumulativeCount=sessionVpopCumulativeCount, sessionStatusReverseTerminationReason=sessionStatusReverseTerminationReason, modemSummaryStatsDisabledCount=modemSummaryStatsDisabledCount, modemCallStatsEQM2Seconds=modemCallStatsEQM2Seconds, pbufStatsFreeSuccesses3=pbufStatsFreeSuccesses3, slotStatusNewReworkRev=slotStatusNewReworkRev, dvsStatusGreOutPackets=dvsStatusGreOutPackets, systemSummaryData=systemSummaryData, sessionSummaryActiveUnknown=sessionSummaryActiveUnknown, ipSvcMonitoringResponsesInError=ipSvcMonitoringResponsesInError, l2FTunnelStatusInactiveLocalCLID=l2FTunnelStatusInactiveLocalCLID, sessionSlotsSlot7Count=sessionSlotsSlot7Count, sessionStatusHistoryRxMinDataRate=sessionStatusHistoryRxMinDataRate, pbufStatsFreeFails2=pbufStatsFreeFails2, pppSessionStatsNBNSAddress2=pppSessionStatsNBNSAddress2, sessionStatusTandemPort=sessionStatusTandemPort, ipSvcMonitoringEntry=ipSvcMonitoringEntry, sessionSummaryActiveSlip=sessionSummaryActiveSlip, sessionStatusInactiveTxStartDataRate=sessionStatusInactiveTxStartDataRate, ipstatIgmpEntryIPAddress=ipstatIgmpEntryIPAddress, modemIntervalStatsOverallAuthCalls=modemIntervalStatsOverallAuthCalls, sessionSummaryActiveRlogin=sessionSummaryActiveRlogin, ipAlarmEntryTrapGroup=ipAlarmEntryTrapGroup, modemIntervalStatsModemCount=modemIntervalStatsModemCount, sessionStatusActiveRxEndDataRate=sessionStatusActiveRxEndDataRate, sessionStatusReverseIop=sessionStatusReverseIop, sessionStatusReverseCleartcpRemotePort=sessionStatusReverseCleartcpRemotePort, sessionStatusInactiveActualAuthMethod=sessionStatusInactiveActualAuthMethod, pppDeadSessionStatsRxCRCErrors=pppDeadSessionStatsRxCRCErrors, pppDeadSessionStatsLocalVJ=pppDeadSessionStatsLocalVJ, taskStatsTableTaskIndex=taskStatsTableTaskIndex, modemCallStatsHandshakeTime=modemCallStatsHandshakeTime, pppSummaryStatsLinksStopped=pppSummaryStatsLinksStopped, memoryStatsTableEntry=memoryStatsTableEntry, sessionStatusHistoryModemModulation=sessionStatusHistoryModemModulation, e1CountsIncomingCallAttempts=e1CountsIncomingCallAttempts, ss7StatusReverseServerId=ss7StatusReverseServerId, ipStubStatsIgmpInMsgs=ipStubStatsIgmpInMsgs, modemStatsMaxTxSpeed=modemStatsMaxTxSpeed, modemSessionStatsAmpV2String=modemSessionStatsAmpV2String, sessionStatusModemNumber=sessionStatusModemNumber, ipCleartcpStatsTable=ipCleartcpStatsTable, sessionStatusCallingNumber=sessionStatusCallingNumber, sessionStatusInactiveModemSNR=sessionStatusInactiveModemSNR, pppSessionStatsRemoteMRRU=pppSessionStatsRemoteMRRU, sessionStatusInactiveModemNumber=sessionStatusInactiveModemNumber, ipStubStatsIgmpOutMsgs=ipStubStatsIgmpOutMsgs, sessionStatusInactiveLayer1Slot=sessionStatusInactiveLayer1Slot, modemSessionStatsDataValidity=modemSessionStatsDataValidity, sessionSummaryInactiveL2f=sessionSummaryInactiveL2f, modemIntervalStatsTotalCalls=modemIntervalStatsTotalCalls, modemCallStatsEQM9Seconds=modemCallStatsEQM9Seconds, sessionMultilinkSessionId=sessionMultilinkSessionId, slotStatusNewEntry=slotStatusNewEntry, taskStatsTableTaskPool=taskStatsTableTaskPool, sessionStatusActiveTimeslot=sessionStatusActiveTimeslot, cHdlcStatsUnknownProtocolIn=cHdlcStatsUnknownProtocolIn, modemCallStatsSNRRatio=modemCallStatsSNRRatio, l2FTunnelStatusInactiveL2FTermationCause=l2FTunnelStatusInactiveL2FTermationCause, powerStatusInternalACDC3=powerStatusInternalACDC3, ds0StatsInCalls=ds0StatsInCalls, pppDeadSessionStatsLocalIPAddress=pppDeadSessionStatsLocalIPAddress, modemCallStatsInfo0SequenceHigh=modemCallStatsInfo0SequenceHigh, ipdcTraceMsgSize=ipdcTraceMsgSize, modemCallStatsRxCarrierFrequency=modemCallStatsRxCarrierFrequency, sessionSummaryMaximumRawTCP=sessionSummaryMaximumRawTCP, sessionStatusTdmTimeSlot=sessionStatusTdmTimeSlot, iSDNHDLCFrameMaxIndex=iSDNHDLCFrameMaxIndex, modemIntervalStatsIndex=modemIntervalStatsIndex, modemCallStatsMinAGCGainValue=modemCallStatsMinAGCGainValue, sessionVpopCallType=sessionVpopCallType, dvsStatusIPInPackets=dvsStatusIPInPackets, ds0StatsOutCleared=ds0StatsOutCleared, sessionTraceSessionIndex=sessionTraceSessionIndex, ipsecCountersOutboundDropCounter=ipsecCountersOutboundDropCounter, modemCallStatsRxMPSequenceByte1High=modemCallStatsRxMPSequenceByte1High, sessionSummaryMaximumTest=sessionSummaryMaximumTest, dvsStatusDeadMacSlotNumber=dvsStatusDeadMacSlotNumber, sessionStatusRemoteIPMask=sessionStatusRemoteIPMask, pppLogEntryEntryText=pppLogEntryEntryText, ss7StatusReverseEntry=ss7StatusReverseEntry, sessionSummaryActiveAtmp=sessionSummaryActiveAtmp, sessionStatusHistoryLastComponent=sessionStatusHistoryLastComponent, pppDeadSessionStatsRemoteShortSeq=pppDeadSessionStatsRemoteShortSeq, modemIntervalStatsDeadCount=modemIntervalStatsDeadCount, ss7TraceIndex=ss7TraceIndex, cHdlcStatsUnknownFramesIn=cHdlcStatsUnknownFramesIn, sessionCountersInactiveLowest=sessionCountersInactiveLowest, sessionVpopEntry=sessionVpopEntry, sessionComponentsIndex=sessionComponentsIndex, pppSessionStatsRemoteACFC=pppSessionStatsRemoteACFC, sessionStatusInactiveRxMinDataRate=sessionStatusInactiveRxMinDataRate, sessionSummaryActiveOther=sessionSummaryActiveOther, sessionSummaryInactiveVoice=sessionSummaryInactiveVoice, sessionSummaryInactiveFrameRelay=sessionSummaryInactiveFrameRelay, sessionStatusReverseTandemTimeslot=sessionStatusReverseTandemTimeslot, pppDeadSessionStatsNBNSAddress1=pppDeadSessionStatsNBNSAddress1, sessionStatusInactiveTerminationCause=sessionStatusInactiveTerminationCause, modemSummaryStatsDownloadingCount=modemSummaryStatsDownloadingCount, sessionStatusHistoryCalledNumber=sessionStatusHistoryCalledNumber, ipAlarmEntryTrapArg1=ipAlarmEntryTrapArg1, l2TPLinkStatusRxPackets=l2TPLinkStatusRxPackets, l2TPLinkStatusIndex=l2TPLinkStatusIndex, taskStatsTableWaitObjectName=taskStatsTableWaitObjectName, ipAlarmEntryTrapArg2=ipAlarmEntryTrapArg2, sessionStatusHistoryRemoteIPMask=sessionStatusHistoryRemoteIPMask, ss7CountersOneshotFull=ss7CountersOneshotFull, sessionStatusInactivePacketsIn=sessionStatusInactivePacketsIn, sessionStatusInactiveDevice=sessionStatusInactiveDevice, sessionMultilinkUserName=sessionMultilinkUserName, iSDNHDLCFrameIndex=iSDNHDLCFrameIndex, slotStatusHardwareRev=slotStatusHardwareRev, slotStatusNewTemperature=slotStatusNewTemperature, modemSessionStats2AmpV2String=modemSessionStats2AmpV2String, modemCallStatsSymbolRate=modemCallStatsSymbolRate, pppDeadSessionStatsRemoteIPXNode=pppDeadSessionStatsRemoteIPXNode, modemCallStatsTotalTxRetransmissions=modemCallStatsTotalTxRetransmissions, sessionStatusHistoryLinkService=sessionStatusHistoryLinkService, pppDeadLogEntryEntry=pppDeadLogEntryEntry, modemIntervalStatsTable=modemIntervalStatsTable, pppSessionStatsRemoteIPAddress=pppSessionStatsRemoteIPAddress, pppDeadSessionStatsRxPacketsDropped=pppDeadSessionStatsRxPacketsDropped, pppDeadSessionStatsMultilinkLinksMax=pppDeadSessionStatsMultilinkLinksMax, sessionStatusSessionID=sessionStatusSessionID, sessionStatusActiveCleartcpRemoteIP=sessionStatusActiveCleartcpRemoteIP, ss7StatusReverseTimeSlot=ss7StatusReverseTimeSlot, ipstatRouteEntryIpAddress=ipstatRouteEntryIpAddress, sessionSummaryActiveDvs=sessionSummaryActiveDvs, pbufStatsAllocatedMax1=pbufStatsAllocatedMax1, sessionStatusHistoryModemTxBlocks=sessionStatusHistoryModemTxBlocks, l2TPTunnelStatusInactivePendingLinks=l2TPTunnelStatusInactivePendingLinks, t1SummaryStatsClearingChannels=t1SummaryStatsClearingChannels, ss7StatusNetworkId=ss7StatusNetworkId, sessionStatusHistoryDurationHMS=sessionStatusHistoryDurationHMS, slotStatusNewTable=slotStatusNewTable, l2FLinkStatusMIDValue=l2FLinkStatusMIDValue, modemStatsModem=modemStatsModem, pppSessionStatsRemoteVJ=pppSessionStatsRemoteVJ, timerStatsFreeFails=timerStatsFreeFails, cHdlcStatsKeepalivesIn=cHdlcStatsKeepalivesIn, l2FTunnelStatusActiveL2FTermationCause=l2FTunnelStatusActiveL2FTermationCause, modemCallStatsMaxSNRValue=modemCallStatsMaxSNRValue, sessionStatusReverseRxStartDataRate=sessionStatusReverseRxStartDataRate, l2FTunnelStatusInactiveRemoteCLID=l2FTunnelStatusInactiveRemoteCLID, dvsStatusGreOutDropped=dvsStatusGreOutDropped, sessionStatusEntry=sessionStatusEntry, sessionStatusInactiveLinkId=sessionStatusInactiveLinkId, t1SummaryStatsRingingChannels=t1SummaryStatsRingingChannels, sessionDiscCauseCause=sessionDiscCauseCause, sessionStatusInactiveName=sessionStatusInactiveName, ipstatRouteEntryTag=ipstatRouteEntryTag, dvsDeadLogEntryUpTime=dvsDeadLogEntryUpTime, l2TPLogEntryEntryText=l2TPLogEntryEntryText, pppDeadSessionStatsTxUnderrunErrors=pppDeadSessionStatsTxUnderrunErrors, e1SummaryStatsSlotIndex=e1SummaryStatsSlotIndex, sessionStatusReverseTandemPort=sessionStatusReverseTandemPort, pppSessionStatsLocalShortSeq=pppSessionStatsLocalShortSeq, pbufStatsAllocatedCount1=pbufStatsAllocatedCount1, sessionStatusReverseCallClassLen=sessionStatusReverseCallClassLen, modemCallStatsNumberOfRXChars3rdByte=modemCallStatsNumberOfRXChars3rdByte, sessionSummaryInactiveFax=sessionSummaryInactiveFax, l2TPTunnelStatusInactiveLinksRemoved=l2TPTunnelStatusInactiveLinksRemoved, pbufStatsFreeMin3=pbufStatsFreeMin3, pbufStatsAllocFails3=pbufStatsAllocFails3, cHdlcStatsCiscoFramesOut=cHdlcStatsCiscoFramesOut, pppDeadSessionStatsRxOverrunErrors=pppDeadSessionStatsRxOverrunErrors, l2FTunnelStatusInactiveEntry=l2FTunnelStatusInactiveEntry, memoryStatsTableTable=memoryStatsTableTable, sessionSummaryMaximumNone=sessionSummaryMaximumNone, pppSessionStatsRemoteACCM=pppSessionStatsRemoteACCM, sessionStatusVpopId=sessionStatusVpopId, sessionStatusCalledNumber=sessionStatusCalledNumber, sessionStatusHistoryServiceMode=sessionStatusHistoryServiceMode, l2TPTunnelStatusActiveLocalID=l2TPTunnelStatusActiveLocalID, sessionMultilinkNameLength=sessionMultilinkNameLength, t1CountsOutgoingCallAttempts=t1CountsOutgoingCallAttempts, sessionStatusActiveRemoteIPMask=sessionStatusActiveRemoteIPMask, sessionStatusHistoryRxMaxDataRate=sessionStatusHistoryRxMaxDataRate, sessionStatusDevice=sessionStatusDevice, sessionStatusCleartcpRemoteIP=sessionStatusCleartcpRemoteIP, timerStatsEntry=timerStatsEntry, sessionSlotsSlot11Count=sessionSlotsSlot11Count, l2FTunnelStatusActiveEntry=l2FTunnelStatusActiveEntry, sessionSummaryActiveFax=sessionSummaryActiveFax)
mibBuilder.exportSymbols("APTIS-MONITOR-MIB", pppSessionStatsUserName=pppSessionStatsUserName, dvsDeadLogEntryMinIndex=dvsDeadLogEntryMinIndex, l2FLinkStatusVPOP=l2FLinkStatusVPOP, pbufStatsPermAllocatedCount2=pbufStatsPermAllocatedCount2, pbufStatsFreeFails0=pbufStatsFreeFails0, modemCallStatsMaxAGCGainValue=modemCallStatsMaxAGCGainValue, modemStatsIOP=modemStatsIOP, modemCallStatsRemoteRateRenegs=modemCallStatsRemoteRateRenegs, pppDeadLogEntryMinIndex=pppDeadLogEntryMinIndex, pppDeadLogEntryRawEntryText=pppDeadLogEntryRawEntryText, sessionTraceAbsoluteTimeStamp=sessionTraceAbsoluteTimeStamp, sessionStatusReverseCallClass=sessionStatusReverseCallClass, pppDeadSessionStatsMultilinkActive=pppDeadSessionStatsMultilinkActive, iSDNStatsChargedUnits=iSDNStatsChargedUnits, modemSessionStats2ModemNumber=modemSessionStats2ModemNumber, ds0StatsSlotIndex=ds0StatsSlotIndex, sessionSummaryInactiveAtmp=sessionSummaryInactiveAtmp, pbufStatsAllocFails2=pbufStatsAllocFails2, l2FTunnelStatusInactivePendingLinks=l2FTunnelStatusInactivePendingLinks, systemTimeEntry=systemTimeEntry, dvsStatusDeadTunnelState=dvsStatusDeadTunnelState, sessionStatusHistoryRemoteIPXNetwork=sessionStatusHistoryRemoteIPXNetwork, modemSessionStats2IOPNumber=modemSessionStats2IOPNumber, ss7StatusReverseCallingId=ss7StatusReverseCallingId, l2FLinkStatusState=l2FLinkStatusState, sessionStatusHistoryIndex=sessionStatusHistoryIndex, sessionStatusInactiveTunnelId=sessionStatusInactiveTunnelId, sessionStatusReverseOriginateMode=sessionStatusReverseOriginateMode, ss7CountersTable=ss7CountersTable, sessionSummaryMaximumL2tp=sessionSummaryMaximumL2tp, cHdlcStatsNomemoryOut=cHdlcStatsNomemoryOut, pppSummaryStatsLinksNegotiatedIPCP=pppSummaryStatsLinksNegotiatedIPCP, sessionSlotsSlot15Count=sessionSlotsSlot15Count, ipstatIgmpEntryEntry=ipstatIgmpEntryEntry, pppSummaryStatsMaxLinks=pppSummaryStatsMaxLinks, sessionStatusActiveEntry=sessionStatusActiveEntry, modemSessionStats2PackNumber=modemSessionStats2PackNumber, modemCallStatsNumberOfTXBlocksLow=modemCallStatsNumberOfTXBlocksLow, pppDeadSessionStatsMultilinkLinks=pppDeadSessionStatsMultilinkLinks, timerStatsFreeSuccesses=timerStatsFreeSuccesses, l2FTunnelStatusActiveRemoteCLID=l2FTunnelStatusActiveRemoteCLID, sessionSummaryMaximumTerminalServer=sessionSummaryMaximumTerminalServer, sessionStatusActiveRemoteIPXNetwork=sessionStatusActiveRemoteIPXNetwork, pppDeadSessionStatsLocalACCM=pppDeadSessionStatsLocalACCM, l2FTunnelStatusActiveMaxActiveLinks=l2FTunnelStatusActiveMaxActiveLinks, l2TPTunnelStatusInactiveLinksAddedUnsuccessfully=l2TPTunnelStatusInactiveLinksAddedUnsuccessfully, sessionStatusActiveDevice=sessionStatusActiveDevice, sessionStatusActiveDmm=sessionStatusActiveDmm, pppDeadSessionStatsRemoteCompressAlgorithm=pppDeadSessionStatsRemoteCompressAlgorithm, modemCallStatsTable=modemCallStatsTable, sessionVpopCumulativeDuration=sessionVpopCumulativeDuration, ipAlarmEntryTrapSeverity=ipAlarmEntryTrapSeverity, dvsStatusGreChecksumError=dvsStatusGreChecksumError, ipstatRouteEntryPathType=ipstatRouteEntryPathType, modemCallStatsV90DigitalPadHigh=modemCallStatsV90DigitalPadHigh, sessionSummaryInactiveTelnet=sessionSummaryInactiveTelnet, t1CountsIncomingDisconnects=t1CountsIncomingDisconnects, sessionStatusActiveSessionID=sessionStatusActiveSessionID, pppSessionStatsInterfaceType=pppSessionStatsInterfaceType, sessionStatusActivePort=sessionStatusActivePort, pppSessionStatsRxCRCErrors=pppSessionStatsRxCRCErrors, ipstatRouteEntryCircuitId=ipstatRouteEntryCircuitId, sessionStatusActiveTxMinDataRate=sessionStatusActiveTxMinDataRate, sessionStatusHistoryTerminationCause=sessionStatusHistoryTerminationCause, l2FTunnelStatusActiveActiveLinks=l2FTunnelStatusActiveActiveLinks, sessionStatusActiveTunnelId=sessionStatusActiveTunnelId, pbufStatsTotalCount5=pbufStatsTotalCount5, sessionStatusCleartcpRemotePort=sessionStatusCleartcpRemotePort, slotStatusSlotIndex=slotStatusSlotIndex, sessionSummaryInactiveFtp=sessionSummaryInactiveFtp, modemCallStatsAutoGainAmplitude=modemCallStatsAutoGainAmplitude, dvsLogEntryIndex=dvsLogEntryIndex, t1CountsSessionAbortMessages=t1CountsSessionAbortMessages, pppDeadSessionStatsCCPResetsSent=pppDeadSessionStatsCCPResetsSent, ipSvcMonitoringTable=ipSvcMonitoringTable, sessionSlotsTrunkCount=sessionSlotsTrunkCount, modemStatsCurrentSessionID=modemStatsCurrentSessionID, pppDeadSessionStatsIPCPState=pppDeadSessionStatsIPCPState, sessionStatusTerminationCause=sessionStatusTerminationCause, l2TPTunnelStatusInactiveEntry=l2TPTunnelStatusInactiveEntry, l2TPLinkStatusLocalID=l2TPLinkStatusLocalID, sessionSummaryActiveTerminalServer=sessionSummaryActiveTerminalServer, sessionStatusActiveLocalIP=sessionStatusActiveLocalIP, sessionStatusInactiveTable=sessionStatusInactiveTable, sessionComponentsTable=sessionComponentsTable, modemStatsTable=modemStatsTable, pbufStatsAllocatedCount4=pbufStatsAllocatedCount4, sessionStatusInactiveCallClass=sessionStatusInactiveCallClass, l2TPTunnelStatusInactiveTable=l2TPTunnelStatusInactiveTable, pbufStatsTotalCount4=pbufStatsTotalCount4, sessionStatusPermanentFlag=sessionStatusPermanentFlag, pppDeadSessionStatsLCPState=pppDeadSessionStatsLCPState, sessionStatusInactiveTunnelMediumType=sessionStatusInactiveTunnelMediumType, pbufStatsFreeCount3=pbufStatsFreeCount3, pppDeadSessionStatsLocalShortSeq=pppDeadSessionStatsLocalShortSeq, pbufStatsDataSize1=pbufStatsDataSize1, ipStubStatsIgmpInReports=ipStubStatsIgmpInReports, dvsStatusLocalCLID=dvsStatusLocalCLID, ipStubStatsEntry=ipStubStatsEntry, dvsDeadLogEntryIndex=dvsDeadLogEntryIndex, sessionTraceTable=sessionTraceTable, l2TPTunnelStatusInactiveL2TPTermationCause=l2TPTunnelStatusInactiveL2TPTermationCause, ipStubStatsTable=ipStubStatsTable, sessionStatusActiveModemRetransmits=sessionStatusActiveModemRetransmits, pppSessionStatsMultilinkLinksRemoved=pppSessionStatsMultilinkLinksRemoved, pbufStatsAllocSuccesses5=pbufStatsAllocSuccesses5, e1CountsIncomingConnects=e1CountsIncomingConnects, systemSummaryTable=systemSummaryTable, modemIntervalStatsIdleCount=modemIntervalStatsIdleCount, pbufStatsFreeSuccesses2=pbufStatsFreeSuccesses2, pppSessionStatsInactivityRemaining=pppSessionStatsInactivityRemaining, sessionDiscCauseReason=sessionDiscCauseReason, ipCleartcpStatsInputTcpfull=ipCleartcpStatsInputTcpfull, dvsLogEntryUpTime=dvsLogEntryUpTime, taskStatsTableTicksPerSecond=taskStatsTableTicksPerSecond, modemCallStatsRemoteRetrains=modemCallStatsRemoteRetrains, sessionStatusActiveServiceMode=sessionStatusActiveServiceMode, mamLogEntryMinIndex=mamLogEntryMinIndex, ss7StatusReverseStartTime=ss7StatusReverseStartTime, sessionStatusActiveTimeOfModemSync=sessionStatusActiveTimeOfModemSync, t1CountsLineNumber=t1CountsLineNumber, pppDeadSessionStatsTotalTxSpeed=pppDeadSessionStatsTotalTxSpeed, modemIntervalStatsActiveCount=modemIntervalStatsActiveCount, sessionStatusServiceMode=sessionStatusServiceMode, sessionStatusHistoryModemRemoteRetrains=sessionStatusHistoryModemRemoteRetrains, sessionStatusHistoryPort=sessionStatusHistoryPort, e1SummaryStatsRingingChannels=e1SummaryStatsRingingChannels, sessionStatusInactiveModemLocalRetrains=sessionStatusInactiveModemLocalRetrains, powerStatusEntry=powerStatusEntry, pppDeadSessionStatsTxResourceErrors=pppDeadSessionStatsTxResourceErrors, sessionMultilinkPeerEIDData=sessionMultilinkPeerEIDData, sessionStatusInactiveModemErrorCorrection=sessionStatusInactiveModemErrorCorrection, softwareVersionTable=softwareVersionTable, ss7StatusReverseState=ss7StatusReverseState, sessionTraceLogEntry=sessionTraceLogEntry, pppSessionStatsLocalPFC=pppSessionStatsLocalPFC, slotStatusNewLineTerminationModuleType=slotStatusNewLineTerminationModuleType, ss7StatusServerId=ss7StatusServerId, pppSummaryStatsLinksNegotiatedCCP=pppSummaryStatsLinksNegotiatedCCP, sessionStatusDmm=sessionStatusDmm, sessionSummaryInactiveDvs=sessionSummaryInactiveDvs, ipstatRouteEntryTYPE=ipstatRouteEntryTYPE, sessionStatusActiveTdmStream=sessionStatusActiveTdmStream, l2FTunnelStatusActivePendingLinks=l2FTunnelStatusActivePendingLinks, l2FLinkStatusUserName=l2FLinkStatusUserName, sessionStatusReverseLocalIP=sessionStatusReverseLocalIP, modemCallStatsRetrainReason=modemCallStatsRetrainReason, memoryStatsTableUsedSize=memoryStatsTableUsedSize, l2FLogEntryEntry=l2FLogEntryEntry, l2TPTunnelStatusActiveLinksRemoved=l2TPTunnelStatusActiveLinksRemoved, pppLogEntrySessionId=pppLogEntrySessionId, sessionComponentsEntry=sessionComponentsEntry, modemSummaryStatsModemCount=modemSummaryStatsModemCount, sessionSummaryActiveVoice=sessionSummaryActiveVoice, sessionSlotsSlot16Count=sessionSlotsSlot16Count, modemSessionStatsTDMSlot=modemSessionStatsTDMSlot, sessionStatusHistoryTdmStream=sessionStatusHistoryTdmStream, modemCallStatsLocalRateRenegs=modemCallStatsLocalRateRenegs, sessionSummaryActiveNone=sessionSummaryActiveNone, modemSessionStatsInitialTxSpeed=modemSessionStatsInitialTxSpeed, pppDeadSessionStatsMLPFragmentsReceived=pppDeadSessionStatsMLPFragmentsReceived, sessionStatusReverseTunnelMediumType=sessionStatusReverseTunnelMediumType, l2FTunnelStatusInactiveMaxActiveLinks=l2FTunnelStatusInactiveMaxActiveLinks, taskStatsTableIdleDay=taskStatsTableIdleDay, sessionStatusInactiveTimeOfModemSync=sessionStatusInactiveTimeOfModemSync, modemStatsDownloadAttempts=modemStatsDownloadAttempts, powerStatusTable=powerStatusTable, ipAlarmEntryAlarmType=ipAlarmEntryAlarmType, sessionMultilinkPeerMRRU=sessionMultilinkPeerMRRU, sessionStatusHistoryPacketsIn=sessionStatusHistoryPacketsIn, ss7StatusReverseCallType=ss7StatusReverseCallType, modemCallStatsEQM5Seconds=modemCallStatsEQM5Seconds, sessionStatusReversePack=sessionStatusReversePack, modemCallStatsInfo0SequenceLow=modemCallStatsInfo0SequenceLow, sessionStatusActivePermanentFlag=sessionStatusActivePermanentFlag, ipAlarmEntryTrapOID=ipAlarmEntryTrapOID, e1SummaryStatsIdleChannels=e1SummaryStatsIdleChannels, modemSummaryStatsV90Calls=modemSummaryStatsV90Calls, iSDNStatsTable=iSDNStatsTable, cHdlcStatsEntry=cHdlcStatsEntry, pppDeadSessionStatsCCPState=pppDeadSessionStatsCCPState, sessionSummaryMaximumOther=sessionSummaryMaximumOther, pppSessionStatsLocalIPAddress=pppSessionStatsLocalIPAddress, sessionStatusModemRemoteRenegotiations=sessionStatusModemRemoteRenegotiations, ipdcTraceDirection=ipdcTraceDirection, e1CountsOutgoingDisconnects=e1CountsOutgoingDisconnects, sessionStatusActiveTandemPort=sessionStatusActiveTandemPort, pppSessionStatsIPCPState=pppSessionStatsIPCPState, sessionStatusInactiveState=sessionStatusInactiveState, sessionStatusInactiveTerminatingComponent=sessionStatusInactiveTerminatingComponent, sessionStatusInactiveTdmTimeSlot=sessionStatusInactiveTdmTimeSlot, sessionStatusOriginateMode=sessionStatusOriginateMode, slotStatusStiffwareRev=slotStatusStiffwareRev, dacTraceData=dacTraceData, pppDeadSessionStatsTxPackets=pppDeadSessionStatsTxPackets, modemCallStatsEQMSumMiddle=modemCallStatsEQMSumMiddle, ipSvcMonitoringRequestsInError=ipSvcMonitoringRequestsInError, sessionStatusActiveSs7SessionId=sessionStatusActiveSs7SessionId, l2TPLinkStatusUserName=l2TPLinkStatusUserName, modemCallStatsNumberOfTXCharsMSB=modemCallStatsNumberOfTXCharsMSB, e1CountsEntry=e1CountsEntry, pppSessionStatsRxOverrunErrors=pppSessionStatsRxOverrunErrors, t1CountsIncomingConnects=t1CountsIncomingConnects, sessionStatusHistoryStopTime=sessionStatusHistoryStopTime, ipdcTraceEntry=ipdcTraceEntry, sessionStatusPack=sessionStatusPack, pbufStatsFreeFails5=pbufStatsFreeFails5, ss7TraceAbsoluteTimeStamp=ss7TraceAbsoluteTimeStamp, sessionStatusInactiveDuration=sessionStatusInactiveDuration, modemCallStatsLastAGCGainValue=modemCallStatsLastAGCGainValue, sessionStatusIop=sessionStatusIop, modemSummaryStatsIdleCount=modemSummaryStatsIdleCount, modemCallStatsInitialModulationType=modemCallStatsInitialModulationType, sessionStatusReverseTable=sessionStatusReverseTable, timerStatsTable=timerStatsTable, dacStatusEntry=dacStatusEntry, pppDeadSessionStatsLocalMRU=pppDeadSessionStatsLocalMRU, ss7StatusEntry=ss7StatusEntry, modemCallStatsEQM10Seconds=modemCallStatsEQM10Seconds, modemSessionStatsSessionID=modemSessionStatsSessionID, pbufStatsPermAllocatedCount5=pbufStatsPermAllocatedCount5, sessionStatusReverseDmm=sessionStatusReverseDmm, sessionStatusHistoryOctetsOut=sessionStatusHistoryOctetsOut, ipstatIgmpEntryTable=ipstatIgmpEntryTable, sessionStatusModemLocalRetrains=sessionStatusModemLocalRetrains, sessionStatusInactiveLastComponent=sessionStatusInactiveLastComponent, l2FTunnelStatusActiveLinksRemoved=l2FTunnelStatusActiveLinksRemoved, sessionStatusHistoryOctetsIn=sessionStatusHistoryOctetsIn, t1CountsChannelsInUse=t1CountsChannelsInUse, sessionStatusHistoryTimeOfService=sessionStatusHistoryTimeOfService, pppSessionStatsTxUnderrunErrors=pppSessionStatsTxUnderrunErrors, taskStatsTableKernelPool=taskStatsTableKernelPool, modemCallStatsAbortCode=modemCallStatsAbortCode, dvsStatusRemoteIPXNetwork=dvsStatusRemoteIPXNetwork, pppDeadSessionStatsRemoteMRRU=pppDeadSessionStatsRemoteMRRU, pppDeadSessionStatsRxPackets=pppDeadSessionStatsRxPackets, sessionStatusHistoryLocalIP=sessionStatusHistoryLocalIP, sessionMultilinkPeerShortSequence=sessionMultilinkPeerShortSequence, modemSummaryStatsEntry=modemSummaryStatsEntry, sessionStatusActiveName=sessionStatusActiveName, systemTimeTable=systemTimeTable, sessionStatusTimeOfService=sessionStatusTimeOfService, sessionStatusLastComponent=sessionStatusLastComponent, slotStatusPartNumber=slotStatusPartNumber, l2TPLinkStatusState=l2TPLinkStatusState, modemCallStatsLowerBandEdge=modemCallStatsLowerBandEdge, e1CountsChannelCount=e1CountsChannelCount, sessionStatusHistoryIop=sessionStatusHistoryIop, sessionStatusInactiveModemTxBlocks=sessionStatusInactiveModemTxBlocks, ipCleartcpStatsOutputQfull=ipCleartcpStatsOutputQfull, dvsStatusUpTime=dvsStatusUpTime, sessionStatusReverseSs7SessionId=sessionStatusReverseSs7SessionId, ipstatRouteEntryPrevIndex=ipstatRouteEntryPrevIndex, sessionStatusHistoryModemLocalRetrains=sessionStatusHistoryModemLocalRetrains)
mibBuilder.exportSymbols("APTIS-MONITOR-MIB", t3StatsRedundant=t3StatsRedundant, modemSummaryStatsRemovedCount=modemSummaryStatsRemovedCount, sessionStatusHistoryTunnelMediumType=sessionStatusHistoryTunnelMediumType, sessionStatusHistoryTunnelType=sessionStatusHistoryTunnelType, l2FTunnelStatusActiveLocalCLID=l2FTunnelStatusActiveLocalCLID, modemCallStatsECState2=modemCallStatsECState2, ipCleartcpStatsInputBytes=ipCleartcpStatsInputBytes, sessionDiscCauseEntry=sessionDiscCauseEntry, sessionSummaryInactiveTest=sessionSummaryInactiveTest, e1SummaryStatsEntry=e1SummaryStatsEntry, l2FLinkStatusTxBytes=l2FLinkStatusTxBytes, sessionSummaryInactiveL2tp=sessionSummaryInactiveL2tp, modemStatsK56Calls=modemStatsK56Calls, sessionStatusActiveDurationHMS=sessionStatusActiveDurationHMS, sessionStatusMultiLinkId=sessionStatusMultiLinkId, sessionStatusLayer2Slot=sessionStatusLayer2Slot, pppDeadSessionStatsRemoteACFC=pppDeadSessionStatsRemoteACFC, softwareVersionMibRevision=softwareVersionMibRevision, modemStatsAuthLose=modemStatsAuthLose, modemCallStatsLastEQMValue=modemCallStatsLastEQMValue, sessionStatusActiveLinkCount=sessionStatusActiveLinkCount, sessionStatusHistorySs7SessionId=sessionStatusHistorySs7SessionId, pppDeadSessionStatsTxQueueErrors=pppDeadSessionStatsTxQueueErrors, pppSessionStatsLocalAuthProtocol=pppSessionStatsLocalAuthProtocol, sessionStatusRxMaxDataRate=sessionStatusRxMaxDataRate, sessionStatusHistoryCallClassLen=sessionStatusHistoryCallClassLen, sessionSummaryMaximumFtp=sessionSummaryMaximumFtp, modemSessionStats2TDMStream=modemSessionStats2TDMStream, sessionSummaryMaximumFax=sessionSummaryMaximumFax, pppDeadSessionStatsRxBytesBeforeCompress=pppDeadSessionStatsRxBytesBeforeCompress, sessionCountersActiveCount=sessionCountersActiveCount, modemSummaryStatsECCalls=modemSummaryStatsECCalls, sessionCountersTable=sessionCountersTable, ss7StatusTimeSlot=ss7StatusTimeSlot, pppDeadSessionStatsMLPPacketsNull=pppDeadSessionStatsMLPPacketsNull, sessionStatusActiveMultiLinkId=sessionStatusActiveMultiLinkId, pppDeadSessionStatsLocalACFC=pppDeadSessionStatsLocalACFC, modemStatsFinalRxSum=modemStatsFinalRxSum, dvsStatusDeadDeadSession=dvsStatusDeadDeadSession, modemCallStatsV8LicenseeCode=modemCallStatsV8LicenseeCode, sessionStatusInactiveRemoteIP=sessionStatusInactiveRemoteIP, pppDeadSessionStatsUpTime=pppDeadSessionStatsUpTime, l2TPTunnelStatusInactiveState=l2TPTunnelStatusInactiveState, modemStatsConnectedLose=modemStatsConnectedLose, sessionStatusModemRetransmits=sessionStatusModemRetransmits, sessionStatusModemRemoteRetrains=sessionStatusModemRemoteRetrains, sessionStatusRxEndDataRate=sessionStatusRxEndDataRate, taskStatsTableStackAddress6=taskStatsTableStackAddress6, iSDNLayer2StatsLapdPeerSabme=iSDNLayer2StatsLapdPeerSabme, pppSummaryStatsEntry=pppSummaryStatsEntry, pppDeadSessionStatsLocalCompressHistories=pppDeadSessionStatsLocalCompressHistories, ipAlarmEntryTrapType=ipAlarmEntryTrapType, modemCallStatsNumberOfRXBlocksHigh=modemCallStatsNumberOfRXBlocksHigh, sessionStatusReverseTerminatingComponent=sessionStatusReverseTerminatingComponent, sessionMultilinkEntry=sessionMultilinkEntry, iSDNLayer2StatsTable=iSDNLayer2StatsTable, sessionSummaryActiveFtp=sessionSummaryActiveFtp, e1SummaryStatsClearingChannels=e1SummaryStatsClearingChannels, sessionStatusReverseLinkCount=sessionStatusReverseLinkCount, ss7TraceRelativeTimeStamp=ss7TraceRelativeTimeStamp, modemStatsMinTxSpeed=modemStatsMinTxSpeed, l2FTunnelStatusInactiveRemoteAddress=l2FTunnelStatusInactiveRemoteAddress, modemStatsResetFailures=modemStatsResetFailures, modemCallStatsRxMaxSpeed=modemCallStatsRxMaxSpeed, slotStatusNewSlotStatus=slotStatusNewSlotStatus, pbufStatsTotalCount3=pbufStatsTotalCount3, modemSessionStatsSlotNumber=modemSessionStatsSlotNumber, pbufStatsDataSize0=pbufStatsDataSize0, modemSummaryStatsTotalCalls=modemSummaryStatsTotalCalls, modemCallStatsNumberOfHandshakeRetries=modemCallStatsNumberOfHandshakeRetries, pppSessionStatsMLPPacketsNull=pppSessionStatsMLPPacketsNull, l2FTunnelStatusInactiveLinksRemoved=l2FTunnelStatusInactiveLinksRemoved, dacTraceLocation=dacTraceLocation, t1CountsOutgoingDisconnects=t1CountsOutgoingDisconnects, sessionStatusHistoryDmm=sessionStatusHistoryDmm, pppLogEntryMinIndex=pppLogEntryMinIndex, modemCallStatsV8FlexVersion=modemCallStatsV8FlexVersion, pppSessionStatsRemoteShortSeq=pppSessionStatsRemoteShortSeq, sessionStatusActiveTerminationReason=sessionStatusActiveTerminationReason, ipSvcMonitoringResponsesOut=ipSvcMonitoringResponsesOut, pbufStatsTotalCount1=pbufStatsTotalCount1, pbufStatsAllocatedMax3=pbufStatsAllocatedMax3, modemStatsV90Calls=modemStatsV90Calls, pbufStatsFreeMin2=pbufStatsFreeMin2, pppSessionStatsTxSpeed=pppSessionStatsTxSpeed, sessionStatusReverseModemRetransmits=sessionStatusReverseModemRetransmits, sessionStatusInactiveLocalIPMask=sessionStatusInactiveLocalIPMask, ss7CountersEntry=ss7CountersEntry, sessionStatusHistoryRemoteIPXNode=sessionStatusHistoryRemoteIPXNode, ipCleartcpStatsOutputBytes=ipCleartcpStatsOutputBytes, l2FLinkStatusTable=l2FLinkStatusTable, sessionStatusInactiveModemLocalRenegotiations=sessionStatusInactiveModemLocalRenegotiations, sessionSummaryActiveHub=sessionSummaryActiveHub, memoryStatsTableFreeSize=memoryStatsTableFreeSize, dvsStatusRemoteCLID=dvsStatusRemoteCLID, sessionStatusHistoryModemErrorCorrection=sessionStatusHistoryModemErrorCorrection, l2TPLinkStatusRemoteID=l2TPLinkStatusRemoteID, dacStatusTable=dacStatusTable, pppSessionStatsMultilinkLinksMax=pppSessionStatsMultilinkLinksMax, memoryStatsTableUsedBlockCount=memoryStatsTableUsedBlockCount, ss7TraceTable=ss7TraceTable, taskStatsTableIdleMinute=taskStatsTableIdleMinute, pppSessionStatsLocalCompressAlgorithm=pppSessionStatsLocalCompressAlgorithm, pbufStatsDataSize5=pbufStatsDataSize5, sessionStatusInactiveLinkCount=sessionStatusInactiveLinkCount, dacClockingTable=dacClockingTable, sessionStatusInactiveRemoteIPXNode=sessionStatusInactiveRemoteIPXNode, sessionTraceRelativeTimeStamp=sessionTraceRelativeTimeStamp, sessionMultilinkMyMRRU=sessionMultilinkMyMRRU, l2TPLogEntryUpTime=l2TPLogEntryUpTime, sessionSlotsSlot4Count=sessionSlotsSlot4Count, sessionStatusStopTime=sessionStatusStopTime, sessionStatusModemModulation=sessionStatusModemModulation, dvsLogEntryMaxIndex=dvsLogEntryMaxIndex, sessionStatusHistoryState=sessionStatusHistoryState, pppSessionStatsTxBytesUncompressed=pppSessionStatsTxBytesUncompressed, l2TPLogEntryLocalID=l2TPLogEntryLocalID, ds0StatsLineNumber=ds0StatsLineNumber, sessionStatusInactiveTxMaxDataRate=sessionStatusInactiveTxMaxDataRate, modemStatsV32Calls=modemStatsV32Calls, modemSummaryStatsSlotNumber=modemSummaryStatsSlotNumber, sessionSummaryInactiveTandem=sessionSummaryInactiveTandem, sessionSummaryInactiveCiscoHDLC=sessionSummaryInactiveCiscoHDLC, sessionStatusLayer1Slot=sessionStatusLayer1Slot, modemCallStatsLastTransmitState=modemCallStatsLastTransmitState, sessionStatusInactiveTimeOfService=sessionStatusInactiveTimeOfService, pppDeadSessionStatsMLPFragmentsMissing=pppDeadSessionStatsMLPFragmentsMissing, memoryStatsTableFreeSmallestBlock=memoryStatsTableFreeSmallestBlock, modemIntervalStatsConnectedCalls=modemIntervalStatsConnectedCalls, sessionStatusActiveRemoteIPXNode=sessionStatusActiveRemoteIPXNode, modemCallStatsECState1=modemCallStatsECState1, modemCallStatsV8Progress=modemCallStatsV8Progress, pppSessionStatsMLPFragmentsMissing=pppSessionStatsMLPFragmentsMissing, timerStatsAllocSuccesses=timerStatsAllocSuccesses, taskStatsTableStackAddress3=taskStatsTableStackAddress3, pbufStatsAllocFails1=pbufStatsAllocFails1, sessionVpopVpopId=sessionVpopVpopId, pppDeadSessionStatsInactivityRemaining=pppDeadSessionStatsInactivityRemaining, iSDNLayer2StatsLapdState=iSDNLayer2StatsLapdState, slotStatusServiceModule=slotStatusServiceModule, pbufStatsAllocSuccesses4=pbufStatsAllocSuccesses4, sessionSummaryInactiveRawTCP=sessionSummaryInactiveRawTCP, sessionStatusReverseModemTxBlocks=sessionStatusReverseModemTxBlocks, timerStatsCardType=timerStatsCardType, sessionStatusInactiveTunnelServerAddress=sessionStatusInactiveTunnelServerAddress, dvsStatusDeadGreInDropped=dvsStatusDeadGreInDropped, sessionStatusActiveModemReceiveLineLevel=sessionStatusActiveModemReceiveLineLevel, timerStatsTotalCount=timerStatsTotalCount, cHdlcStatsNohdrspaceOut=cHdlcStatsNohdrspaceOut, sessionStatusReverseModemReceiveLineLevel=sessionStatusReverseModemReceiveLineLevel, dacClockingEntry=dacClockingEntry, l2TPLogEntryMinIndex=l2TPLogEntryMinIndex, modemStatsInitialRxSum=modemStatsInitialRxSum, ipsecCountersOutboundCounter=ipsecCountersOutboundCounter, l2TPTunnelStatusActiveLinksAdded=l2TPTunnelStatusActiveLinksAdded, dacTraceTable=dacTraceTable, ss7StatusReverseIndex=ss7StatusReverseIndex, sessionSummaryInactiveOther=sessionSummaryInactiveOther, l2TPTunnelStatusActiveSlot=l2TPTunnelStatusActiveSlot, pppDeadSessionStatsRemoteAuthenticated=pppDeadSessionStatsRemoteAuthenticated, sessionStatusLinkCount=sessionStatusLinkCount, pppSessionStatsRxPacketsDropped=pppSessionStatsRxPacketsDropped, l2TPTunnelStatusInactiveLinksAdded=l2TPTunnelStatusInactiveLinksAdded, pppSessionStatsLocalMRU=pppSessionStatsLocalMRU, modemSessionStats2SlotNumber=modemSessionStats2SlotNumber, iSDNHDLCFrameDirection=iSDNHDLCFrameDirection, sessionStatusTunnelServerAddress=sessionStatusTunnelServerAddress, l2FLinkStatusL2FTermationCause=l2FLinkStatusL2FTermationCause, sessionStatusActiveVpopId=sessionStatusActiveVpopId, sessionSlotsSlot5Count=sessionSlotsSlot5Count, modemStatsDownloadSuccesses=modemStatsDownloadSuccesses, ss7CountersRetainedFree=ss7CountersRetainedFree, slotStatusShelfNumber=slotStatusShelfNumber, sessionStatusHistoryActualAuthMethod=sessionStatusHistoryActualAuthMethod, pppDeadSessionStatsMLPPacketsReassembled=pppDeadSessionStatsMLPPacketsReassembled, sessionStatusActiveModemErrorCorrection=sessionStatusActiveModemErrorCorrection, sessionSummaryActiveCiscoHDLC=sessionSummaryActiveCiscoHDLC, pppSessionStatsTxPacketsDropped=pppSessionStatsTxPacketsDropped, l2FTunnelStatusActiveLinksAdded=l2FTunnelStatusActiveLinksAdded, pppDeadSessionStatsRxQueueErrors=pppDeadSessionStatsRxQueueErrors, l2FTunnelStatusInactiveTable=l2FTunnelStatusInactiveTable, pppDeadSessionStatsSessionID=pppDeadSessionStatsSessionID, sessionStatusInactiveMultiLinkId=sessionStatusInactiveMultiLinkId, pppDeadSessionStatsIPXCPState=pppDeadSessionStatsIPXCPState, modemCallStatsMinSNRValue=modemCallStatsMinSNRValue, sessionStatusHistoryModemNumber=sessionStatusHistoryModemNumber, sessionStatusHistoryTxMaxDataRate=sessionStatusHistoryTxMaxDataRate, slotStatusNewSlotType=slotStatusNewSlotType, sessionStatusHistoryRxEndDataRate=sessionStatusHistoryRxEndDataRate, ss7StatusReverseSessionId=ss7StatusReverseSessionId, sessionSummaryActiveTelnet=sessionSummaryActiveTelnet, sessionSlotsSlot9Count=sessionSlotsSlot9Count, e1StatsAlarmStatus=e1StatsAlarmStatus, t3StatsLineState=t3StatsLineState, pppDeadSessionStatsRxAlignErrors=pppDeadSessionStatsRxAlignErrors, l2TPTunnelStatusInactiveVPOP=l2TPTunnelStatusInactiveVPOP, sessionStatusReverseLinkId=sessionStatusReverseLinkId, sessionDiscCauseIndex=sessionDiscCauseIndex, t1SummaryStatsFunctionalChannels=t1SummaryStatsFunctionalChannels, sessionStatusReverseRxMaxDataRate=sessionStatusReverseRxMaxDataRate, sessionSummaryActiveTandem=sessionSummaryActiveTandem, modemCallStatsRxMPSequenceByte2Low=modemCallStatsRxMPSequenceByte2Low, pppLogEntryRawEntryText=pppLogEntryRawEntryText, ipsecCountersTable=ipsecCountersTable, sessionStatusReverseLayer1Slot=sessionStatusReverseLayer1Slot, memoryStatsTableFreeLargestBlock=memoryStatsTableFreeLargestBlock, memoryStatsTableAllocSuccesses=memoryStatsTableAllocSuccesses, sessionStatusActiveTunnelServerAddress=sessionStatusActiveTunnelServerAddress, sessionStatusActiveIop=sessionStatusActiveIop, pppSessionStatsMLPFragmentsDropped=pppSessionStatsMLPFragmentsDropped, sessionStatusInactiveCallClassLen=sessionStatusInactiveCallClassLen, sessionVpopTable=sessionVpopTable, sessionStatusActiveOriginateMode=sessionStatusActiveOriginateMode, t1CountsSlotIndex=t1CountsSlotIndex, modemIntervalStatsStartTime=modemIntervalStatsStartTime, modemCallStatsK56Status=modemCallStatsK56Status, pppSessionStatsIPXCPState=pppSessionStatsIPXCPState, modemCallStatsMinEQMValue=modemCallStatsMinEQMValue, slotStatusSlotOos=slotStatusSlotOos, sessionStatusHistoryStartTime=sessionStatusHistoryStartTime, t1SummaryStatsTable=t1SummaryStatsTable, clockStatusEntry=clockStatusEntry, t1CountsTable=t1CountsTable, sessionCountersHistoryLowest=sessionCountersHistoryLowest, modemIntervalStatsStopTime=modemIntervalStatsStopTime, e1CountsSlotIndex=e1CountsSlotIndex, pppSessionStatsTxBytesAfterCompress=pppSessionStatsTxBytesAfterCompress, ipdcTraceIndex=ipdcTraceIndex, sessionSummaryInactiveTerminalServer=sessionSummaryInactiveTerminalServer, softwareVersionProductId=softwareVersionProductId, pbufStatsAllocatedMax0=pbufStatsAllocatedMax0, pppSessionStatsTotalRxSpeed=pppSessionStatsTotalRxSpeed, sessionStatusHistoryCallingNumber=sessionStatusHistoryCallingNumber, sessionStatusHistoryCallClass=sessionStatusHistoryCallClass, ipSvcMonitoringRequestsOut=ipSvcMonitoringRequestsOut, modemSummaryStatsMaximumCalls=modemSummaryStatsMaximumCalls, ss7StatusTable=ss7StatusTable, sessionSummaryMaximumRlogin=sessionSummaryMaximumRlogin, slotStatusNewSlotIndex=slotStatusNewSlotIndex, l2FLinkStatusEntry=l2FLinkStatusEntry, sessionMultilinkTable=sessionMultilinkTable, pppSessionStatsInactivityLimit=pppSessionStatsInactivityLimit, ipsecCountersInboundCounter=ipsecCountersInboundCounter, sessionSummaryMaximumTrunk=sessionSummaryMaximumTrunk, modemCallStatsECProtocol=modemCallStatsECProtocol, ipAlarmEntryEntry=ipAlarmEntryEntry, sessionComponentsSessionIndex=sessionComponentsSessionIndex, taskStatsTableEntry=taskStatsTableEntry, sessionMultilinkNegotiated=sessionMultilinkNegotiated, pppDeadSessionStatsRxBigErrors=pppDeadSessionStatsRxBigErrors, modemCallStatsTxCarrierFrequency=modemCallStatsTxCarrierFrequency, modemCallStatsEQMHits=modemCallStatsEQMHits, pppSessionStatsRemoteVJSlots=pppSessionStatsRemoteVJSlots, systemTimeUpTime=systemTimeUpTime)
mibBuilder.exportSymbols("APTIS-MONITOR-MIB", memoryStatsTableUsedSmallestBlock=memoryStatsTableUsedSmallestBlock, dvsStatusDeadRemoteAddress=dvsStatusDeadRemoteAddress, slotStatusSystemMem=slotStatusSystemMem, pppSessionStatsNBNSAddress1=pppSessionStatsNBNSAddress1, e1SummaryStatsLineNumber=e1SummaryStatsLineNumber, sessionSlotsSlot17Count=sessionSlotsSlot17Count, sessionStatusInactiveModemRemoteRetrains=sessionStatusInactiveModemRemoteRetrains, sessionStatusModemErrorCorrection=sessionStatusModemErrorCorrection, ipAlarmEntryTrapGenNum=ipAlarmEntryTrapGenNum, pppSessionStatsTxQueueErrors=pppSessionStatsTxQueueErrors, sessionStatusCallClassArray=sessionStatusCallClassArray, modemCallStatsNumberOfRXCharsLSB=modemCallStatsNumberOfRXCharsLSB, modemSessionStatsEntry=modemSessionStatsEntry, sessionStatusActiveTxEndDataRate=sessionStatusActiveTxEndDataRate, t1StatsEntry=t1StatsEntry, ss7CountersDsmccFree=ss7CountersDsmccFree, pppDeadSessionStatsMultilinkLinksMaxConfig=pppDeadSessionStatsMultilinkLinksMaxConfig, modemCallStatsHighestTxState=modemCallStatsHighestTxState, cHdlcStatsPppFramesIn=cHdlcStatsPppFramesIn, l2TPTunnelStatusInactiveRemoteID=l2TPTunnelStatusInactiveRemoteID, sessionStatusInactiveStopTime=sessionStatusInactiveStopTime, systemSummaryEntry=systemSummaryEntry, sessionStatusHistoryModemReceiveLineLevel=sessionStatusHistoryModemReceiveLineLevel, sessionStatusInactiveDmm=sessionStatusInactiveDmm, ipAlarmEntryTrapArg3=ipAlarmEntryTrapArg3, sessionStatusTandemTimeslot=sessionStatusTandemTimeslot, pppDeadSessionStatsTxBytesAfterCompress=pppDeadSessionStatsTxBytesAfterCompress, ipstatIgmpEntryCount=ipstatIgmpEntryCount, sessionSummaryMaximumFrameRelay=sessionSummaryMaximumFrameRelay, modemCallStatsLastReceiveState=modemCallStatsLastReceiveState, memoryStatsTableCardType=memoryStatsTableCardType, pppSessionStatsRemainingTime=pppSessionStatsRemainingTime, sessionStatusTxStartDataRate=sessionStatusTxStartDataRate, dvsStatusDeadVPOP=dvsStatusDeadVPOP, softwareVersionMibVersion=softwareVersionMibVersion, slotStatusNewFirmwareRev=slotStatusNewFirmwareRev, taskStatsTableStackAddress1=taskStatsTableStackAddress1, dvsDeadLogEntryEntryText=dvsDeadLogEntryEntryText, ss7StatusReverseSlot=ss7StatusReverseSlot, pppDeadSessionStatsRemoteCompressHistories=pppDeadSessionStatsRemoteCompressHistories, sessionStatusInactiveTimeslot=sessionStatusInactiveTimeslot, taskStatsTableIntervalSize=taskStatsTableIntervalSize, ds0StatsOutConnected=ds0StatsOutConnected, sessionStatusReversePacketsOut=sessionStatusReversePacketsOut, slotStatusNewShelfNumber=slotStatusNewShelfNumber, ipstatRouteEntryPrivate=ipstatRouteEntryPrivate, modemCallStatsNumberOfLAPMREJSTransmitted=modemCallStatsNumberOfLAPMREJSTransmitted, pppSessionStatsTotalTxSpeed=pppSessionStatsTotalTxSpeed, mamLogEntryTable=mamLogEntryTable, sessionStatusInactiveServiceMode=sessionStatusInactiveServiceMode, ipAlarmEntryTrapOIDLen=ipAlarmEntryTrapOIDLen, sessionSlotsSlot13Count=sessionSlotsSlot13Count, sessionStatusHistoryTdmTimeSlot=sessionStatusHistoryTdmTimeSlot, modemSessionStats2TDMSlot=modemSessionStats2TDMSlot, modemCallStatsTrellisMapping=modemCallStatsTrellisMapping, taskStatsTableTCBSize=taskStatsTableTCBSize, sessionCountersInactiveCount=sessionCountersInactiveCount, systemTimeUTCOffset=systemTimeUTCOffset, pppSessionStatsCCPResetsReceived=pppSessionStatsCCPResetsReceived, l2FTunnelStatusActiveRemoteAddress=l2FTunnelStatusActiveRemoteAddress, sessionStatusHistorySessionID=sessionStatusHistorySessionID, pppSessionStatsLocalVJ=pppSessionStatsLocalVJ, sessionDiscCauseComponent=sessionDiscCauseComponent, sessionSummaryActiveTrunk=sessionSummaryActiveTrunk, l2TPTunnelStatusInactiveLinksAddedSuccessfully=l2TPTunnelStatusInactiveLinksAddedSuccessfully, l2FTunnelStatusActiveLinksAddedUnsuccessfully=l2FTunnelStatusActiveLinksAddedUnsuccessfully, pppSessionStatsTxBytesBeforeCompress=pppSessionStatsTxBytesBeforeCompress, sessionStatusHistoryLayer1Slot=sessionStatusHistoryLayer1Slot, modemStatsSlot=modemStatsSlot, modemCallStatsNumberOfRXBlocksLow=modemCallStatsNumberOfRXBlocksLow, pppDeadSessionStatsMLPFragmentsDropped=pppDeadSessionStatsMLPFragmentsDropped, sessionStatusName=sessionStatusName, modemIntervalStatsDownloadingCount=modemIntervalStatsDownloadingCount, dacClockingIndex=dacClockingIndex, sessionStatusHistoryDevice=sessionStatusHistoryDevice, sessionStatusInactiveDurationHMS=sessionStatusInactiveDurationHMS, ss7StatusReversePort=ss7StatusReversePort, mamLogEntryMaxIndex=mamLogEntryMaxIndex, sessionStatusActiveCallingNumber=sessionStatusActiveCallingNumber, pppDeadSessionStatsLocalMRRU=pppDeadSessionStatsLocalMRRU, modemCallStatsEQM6Seconds=modemCallStatsEQM6Seconds, sessionStatusInactiveLocalIP=sessionStatusInactiveLocalIP, sessionStatusInactiveRemoteIPMask=sessionStatusInactiveRemoteIPMask, pbufStatsFreeSuccesses4=pbufStatsFreeSuccesses4, sessionCountersActiveHighest=sessionCountersActiveHighest, modemIntervalStatsDisabledCount=modemIntervalStatsDisabledCount, sessionStatusInactiveTandemPort=sessionStatusInactiveTandemPort, sessionStatusTimeslot=sessionStatusTimeslot, ipCleartcpStatsInputQfull=ipCleartcpStatsInputQfull, e1CountsOutgoingConnects=e1CountsOutgoingConnects, l2FTunnelStatusInactiveActiveLinks=l2FTunnelStatusInactiveActiveLinks, taskStatsTableTicksElapsed=taskStatsTableTicksElapsed, ipdcTraceTable=ipdcTraceTable, sessionStatusInactiveCalledNumber=sessionStatusInactiveCalledNumber, sessionStatusTxMaxDataRate=sessionStatusTxMaxDataRate, modemCallStatsV8DataPumpRev=modemCallStatsV8DataPumpRev, powerStatusCsr1Register=powerStatusCsr1Register, ss7StatusReverseTable=ss7StatusReverseTable, sessionStatusInactiveCleartcpRemotePort=sessionStatusInactiveCleartcpRemotePort, l2FLinkStatusRxBytes=l2FLinkStatusRxBytes, l2TPTunnelStatusActiveRemoteAddress=l2TPTunnelStatusActiveRemoteAddress, pppDeadLogEntryMaxIndex=pppDeadLogEntryMaxIndex, modemStatsMinRxSum=modemStatsMinRxSum, e1StatsEntry=e1StatsEntry, pppDeadSessionStatsTxCompressing=pppDeadSessionStatsTxCompressing, modemCallStatsDCProtocol=modemCallStatsDCProtocol, pbufStatsFreeMin4=pbufStatsFreeMin4, memoryStatsTableTotalSize=memoryStatsTableTotalSize, l2TPLinkStatusUpTime=l2TPLinkStatusUpTime, modemSummaryStatsAuthCalls=modemSummaryStatsAuthCalls, l2FTunnelStatusInactiveLinksAddedSuccessfully=l2FTunnelStatusInactiveLinksAddedSuccessfully, l2FLogEntryIndex=l2FLogEntryIndex, modemSessionStatsTable=modemSessionStatsTable, modemCallStatsEQM8Seconds=modemCallStatsEQM8Seconds, modemCallStatsNumberOfRXChars2ndByte=modemCallStatsNumberOfRXChars2ndByte, pppSessionStatsTxBigErrors=pppSessionStatsTxBigErrors, slotStatusLineTerminationModule=slotStatusLineTerminationModule, timerStatsAllocFails=timerStatsAllocFails, sessionStatusReverseModemLocalRetrains=sessionStatusReverseModemLocalRetrains, sessionStatusHistoryOriginateMode=sessionStatusHistoryOriginateMode, sessionStatusRemoteIPXNode=sessionStatusRemoteIPXNode, e1CountsLineNumber=e1CountsLineNumber, pppSessionStatsDNSAddress2=pppSessionStatsDNSAddress2, pppSummaryStatsLinksStarted=pppSummaryStatsLinksStarted, pppSummaryStatsLinksModem=pppSummaryStatsLinksModem, pppDeadSessionStatsInactivityLimit=pppDeadSessionStatsInactivityLimit, modemSummaryStatsV34Calls=modemSummaryStatsV34Calls, pppSummaryStatsLinksAuthenticated=pppSummaryStatsLinksAuthenticated, sessionTraceIndex=sessionTraceIndex, memoryStatsTableFreeBlockCount=memoryStatsTableFreeBlockCount, dvsStatusDeadUpTime=dvsStatusDeadUpTime, ipstatRouteEntryNextIprt=ipstatRouteEntryNextIprt, modemSummaryStatsDCCalls=modemSummaryStatsDCCalls, sessionStatusLocalIPMask=sessionStatusLocalIPMask, ds0StatsOutCalls=ds0StatsOutCalls, modemSessionStats2Entry=modemSessionStats2Entry, sessionStatusReverseTxMinDataRate=sessionStatusReverseTxMinDataRate, l2FTunnelStatusActiveUpTime=l2FTunnelStatusActiveUpTime, t1SummaryStatsSlotIndex=t1SummaryStatsSlotIndex, pppDeadLogEntryTable=pppDeadLogEntryTable, powerStatusShelf=powerStatusShelf, l2TPTunnelStatusInactiveRemoteAddress=l2TPTunnelStatusInactiveRemoteAddress, dvsStatusMacSlotNumber=dvsStatusMacSlotNumber, ipstatIgmpEntryState=ipstatIgmpEntryState, ipStubStatsNomemoryOut=ipStubStatsNomemoryOut, pppSessionStatsMultilinkLinksAdded=pppSessionStatsMultilinkLinksAdded, sessionStatusPacketsOut=sessionStatusPacketsOut, sessionStatusActiveLayer1Slot=sessionStatusActiveLayer1Slot, pppSessionStatsRxBytes=pppSessionStatsRxBytes, sessionStatusActiveRxMaxDataRate=sessionStatusActiveRxMaxDataRate, sessionSummaryInactiveHub=sessionSummaryInactiveHub, pppDeadSessionStatsNBNSAddress2=pppDeadSessionStatsNBNSAddress2, ss7StatusState=ss7StatusState, taskStatsTableTaskName=taskStatsTableTaskName, taskStatsTableStackAddress8=taskStatsTableStackAddress8, pppDeadSessionStatsTxBytesUncompressed=pppDeadSessionStatsTxBytesUncompressed, sessionStatusInactivePort=sessionStatusInactivePort, sessionCountersHistoryHighest=sessionCountersHistoryHighest, modemStatsPackRevivals=modemStatsPackRevivals, ss7CountersNumInactive=ss7CountersNumInactive, l2TPTunnelStatusActiveLocalAddress=l2TPTunnelStatusActiveLocalAddress, modemCallStatsRxMPSequenceByte2High=modemCallStatsRxMPSequenceByte2High, sessionSummaryMaximumAtmp=sessionSummaryMaximumAtmp, sessionStatusActiveTdmTimeSlot=sessionStatusActiveTdmTimeSlot, pppDeadSessionStatsRxSmallErrors=pppDeadSessionStatsRxSmallErrors, pppDeadSessionStatsRemoteAuthProtocol=pppDeadSessionStatsRemoteAuthProtocol, modemCallStatsConnectTimeMinutes=modemCallStatsConnectTimeMinutes, slotStatusFirmwareRev=slotStatusFirmwareRev, sessionCountersHistoryTableSize=sessionCountersHistoryTableSize, pbufStatsFreeCount5=pbufStatsFreeCount5, dvsStatusIPXOutPackets=dvsStatusIPXOutPackets, pppDeadSessionStatsDNSAddress1=pppDeadSessionStatsDNSAddress1, sessionStatusReverseRxEndDataRate=sessionStatusReverseRxEndDataRate, sessionStatusTable=sessionStatusTable, modemStatsFinalTxSum=modemStatsFinalTxSum, modemCallStatsModemIndex=modemCallStatsModemIndex, sessionSummaryInactiveSlip=sessionSummaryInactiveSlip, sessionStatusActiveRxMinDataRate=sessionStatusActiveRxMinDataRate, pbufStatsAllocFails5=pbufStatsAllocFails5, modemSessionStatsPackNumber=modemSessionStatsPackNumber, sessionStatusActiveLinkService=sessionStatusActiveLinkService, sessionCountersEntry=sessionCountersEntry, modemSessionStats2InitialTxSpeed=modemSessionStats2InitialTxSpeed, t1StatsLineNumber=t1StatsLineNumber, l2TPTunnelStatusActiveRemoteID=l2TPTunnelStatusActiveRemoteID, t3StatsLineNumber=t3StatsLineNumber, sessionSummaryEntry=sessionSummaryEntry, modemCallStatsNumberOfTXCharsLSB=modemCallStatsNumberOfTXCharsLSB, pbufStatsFreeFails1=pbufStatsFreeFails1, l2FTunnelStatusInactiveUpTime=l2FTunnelStatusInactiveUpTime, sessionSlotsSlot10Count=sessionSlotsSlot10Count, dvsStatusDeadTunnelCLID=dvsStatusDeadTunnelCLID, sessionStatusReverseActualAuthMethod=sessionStatusReverseActualAuthMethod, sessionStatusInactiveSessionID=sessionStatusInactiveSessionID, pppSessionStatsRemoteCompressHistories=pppSessionStatsRemoteCompressHistories, pppSessionStatsRxPackets=pppSessionStatsRxPackets, modemSummaryStatsReuseSuspectModems=modemSummaryStatsReuseSuspectModems, modemCallStatsTxMinSpeed=modemCallStatsTxMinSpeed, ipstatRouteEntryEntry=ipstatRouteEntryEntry, ds0StatsInConnected=ds0StatsInConnected, sessionStatusInactiveLinkService=sessionStatusInactiveLinkService, sessionStatusHistoryTxMinDataRate=sessionStatusHistoryTxMinDataRate, ss7StatusCallingId=ss7StatusCallingId, sessionStatusActiveCallClass=sessionStatusActiveCallClass, pppSessionStatsConnectLimit=pppSessionStatsConnectLimit, modemStatsRPI=modemStatsRPI, modemIntervalStatsRemovedCount=modemIntervalStatsRemovedCount, sessionStatusInactiveModemRetransmits=sessionStatusInactiveModemRetransmits, sessionStatusActiveTxStartDataRate=sessionStatusActiveTxStartDataRate, mamLogEntryEntryText=mamLogEntryEntryText, sessionSummaryMaximumTandem=sessionSummaryMaximumTandem, modemSessionStatsDMMNumber=modemSessionStatsDMMNumber, modemSummaryStatsActiveCount=modemSummaryStatsActiveCount, pppSessionStatsLocalACCM=pppSessionStatsLocalACCM, t3StatsExternalClockPort=t3StatsExternalClockPort, pppSessionStatsRemoteMRU=pppSessionStatsRemoteMRU, sessionStatusReversePort=sessionStatusReversePort, l2FLinkStatusSessionID=l2FLinkStatusSessionID, dvsLogEntryTunnelCLID=dvsLogEntryTunnelCLID, ipSvcMonitoringServiceName=ipSvcMonitoringServiceName, modemSessionStatsTDMStream=modemSessionStatsTDMStream, modemCallStatsLowAddrOfMEMACCFailure=modemCallStatsLowAddrOfMEMACCFailure, pppSessionStatsTxPackets=pppSessionStatsTxPackets, pppSessionStatsRxBytesAfterCompress=pppSessionStatsRxBytesAfterCompress, ss7CountersRetainedFull=ss7CountersRetainedFull, pppDeadSessionStatsDeadSession=pppDeadSessionStatsDeadSession, sessionSlotsSlot8Count=sessionSlotsSlot8Count, slotStatusTemperature=slotStatusTemperature, modemSessionStats2SessionID=modemSessionStats2SessionID, modemCallStatsModulationType=modemCallStatsModulationType, sessionStatusHistoryModemRetransmits=sessionStatusHistoryModemRetransmits, pppDeadSessionStatsRemoteIPAddress=pppDeadSessionStatsRemoteIPAddress, sessionSummaryActiveRawTCP=sessionSummaryActiveRawTCP, sessionSlotsSlot2Count=sessionSlotsSlot2Count, modemSummaryStatsUpTime=modemSummaryStatsUpTime, pppSessionStatsMultilinkLinks=pppSessionStatsMultilinkLinks, sessionStatusTxMinDataRate=sessionStatusTxMinDataRate, sessionCountersSessionTableSize=sessionCountersSessionTableSize, iSDNHDLCFrameTable=iSDNHDLCFrameTable, pppSummaryStatsTable=pppSummaryStatsTable, pppDeadSessionStatsRemoteVJ=pppDeadSessionStatsRemoteVJ, pppSessionStatsRxQueueErrors=pppSessionStatsRxQueueErrors, dvsStatusDeadGreInPackets=dvsStatusDeadGreInPackets, modemStatsInitialTxSum=modemStatsInitialTxSum, sessionSlotsSlot18Count=sessionSlotsSlot18Count, pbufStatsAllocSuccesses1=pbufStatsAllocSuccesses1, sessionStatusReverseDurationHMS=sessionStatusReverseDurationHMS, sessionStatusRemoteIPXNetwork=sessionStatusRemoteIPXNetwork, modemCallStatsV8ManufacturerID=modemCallStatsV8ManufacturerID, pppSessionStatsCCPState=pppSessionStatsCCPState, pbufStatsDataSize2=pbufStatsDataSize2, dvsStatusGreInPackets=dvsStatusGreInPackets, pbufStatsFreeMin0=pbufStatsFreeMin0, modemCallStatsRoundTripTime=modemCallStatsRoundTripTime)
mibBuilder.exportSymbols("APTIS-MONITOR-MIB", pppSessionStatsRemoteIPXNode=pppSessionStatsRemoteIPXNode, sessionStatusTunnelMediumType=sessionStatusTunnelMediumType, pbufStatsFreeCount0=pbufStatsFreeCount0, pppDeadSessionStatsLocalAuthProtocol=pppDeadSessionStatsLocalAuthProtocol, sessionStatusOctetsIn=sessionStatusOctetsIn, modemCallStatsEQM4Seconds=modemCallStatsEQM4Seconds, modemCallStatsRBSPattern=modemCallStatsRBSPattern, clockStatusTable=clockStatusTable, sessionStatusLinkId=sessionStatusLinkId, sessionStatusReverseModemSNR=sessionStatusReverseModemSNR, sessionStatusReverseVpopId=sessionStatusReverseVpopId, pppSessionStatsLocalCompressHistories=pppSessionStatsLocalCompressHistories, pppSessionStatsRemoteIPXNetwork=pppSessionStatsRemoteIPXNetwork, modemSummaryStatsDeadCount=modemSummaryStatsDeadCount, t3StatsTable=t3StatsTable, modemStatsConnectedWin=modemStatsConnectedWin, ipSvcMonitoringUptime=ipSvcMonitoringUptime, modemCallStatsRxNonlinearEncoding=modemCallStatsRxNonlinearEncoding, sessionStatusHistoryTandemTimeslot=sessionStatusHistoryTandemTimeslot, sessionStatusInactiveTxMinDataRate=sessionStatusInactiveTxMinDataRate, iSDNLayer2StatsLapdRcvdFrmr=iSDNLayer2StatsLapdRcvdFrmr, modemSummaryStatsV32Calls=modemSummaryStatsV32Calls, t1StatsAlarmStatus=t1StatsAlarmStatus, pbufStatsTable=pbufStatsTable, pbufStatsAllocFails0=pbufStatsAllocFails0, ipstatRouteEntryTable=ipstatRouteEntryTable, l2TPTunnelStatusInactiveMaxActiveLinks=l2TPTunnelStatusInactiveMaxActiveLinks, pppSessionStatsRxCompPacketsDropped=pppSessionStatsRxCompPacketsDropped, pppSessionStatsTxBytes=pppSessionStatsTxBytes, slotStatusEntry=slotStatusEntry, modemCallStatsV8Capabilities=modemCallStatsV8Capabilities, sessionStatusReverseTerminationCause=sessionStatusReverseTerminationCause, modemSummaryStatsTable=modemSummaryStatsTable, sessionStatusHistoryRemoteIP=sessionStatusHistoryRemoteIP, sessionStatusInactiveRxMaxDataRate=sessionStatusInactiveRxMaxDataRate, dvsLogEntryEntry=dvsLogEntryEntry, sessionStatusActiveLocalIPMask=sessionStatusActiveLocalIPMask, sessionStatusReverseEntry=sessionStatusReverseEntry, modemSessionStats2ConnectString=modemSessionStats2ConnectString, sessionStatusActiveCallClassLen=sessionStatusActiveCallClassLen, sessionVpopVpopIndex=sessionVpopVpopIndex, ss7StatusStartTime=ss7StatusStartTime, l2FLinkStatusLocalCLID=l2FLinkStatusLocalCLID, l2TPTunnelStatusActiveTable=l2TPTunnelStatusActiveTable, sessionStatusDuration=sessionStatusDuration, sessionStatusHistoryTable=sessionStatusHistoryTable, modemCallStatsTxPrecoding=modemCallStatsTxPrecoding, pbufStatsAllocatedCount2=pbufStatsAllocatedCount2, sessionStatusModemLocalRenegotiations=sessionStatusModemLocalRenegotiations, modemSessionStats2ModemIndex=modemSessionStats2ModemIndex, pppSessionStatsRemoteAuthProtocol=pppSessionStatsRemoteAuthProtocol, ss7CountersOneshotFree=ss7CountersOneshotFree, dvsStatusTable=dvsStatusTable, iSDNStatsEntry=iSDNStatsEntry, sessionStatusHistoryVpopId=sessionStatusHistoryVpopId, pppSessionStatsRxBytesBeforeCompress=pppSessionStatsRxBytesBeforeCompress, ipstatRouteEntryTrig=ipstatRouteEntryTrig, l2TPTunnelStatusInactiveLocalID=l2TPTunnelStatusInactiveLocalID, sessionStatusHistoryCleartcpRemotePort=sessionStatusHistoryCleartcpRemotePort, slotStatusOtherMem=slotStatusOtherMem, sessionStatusPacketsIn=sessionStatusPacketsIn, powerStatusInternalAC2=powerStatusInternalAC2, modemCallStatsDigitalPadDetected=modemCallStatsDigitalPadDetected, pbufStatsSlotNumber=pbufStatsSlotNumber, taskStatsTableStackAddress10=taskStatsTableStackAddress10, l2TPLinkStatusTxBytes=l2TPLinkStatusTxBytes, pbufStatsAllocFails4=pbufStatsAllocFails4, sessionStatusActiveModemLocalRetrains=sessionStatusActiveModemLocalRetrains, sessionStatusActiveTunnelType=sessionStatusActiveTunnelType, sessionStatusHistoryPacketsOut=sessionStatusHistoryPacketsOut, ipstatRouteEntryGenNumber=ipstatRouteEntryGenNumber, modemStatsDMM=modemStatsDMM, sessionStatusReversePermanentFlag=sessionStatusReversePermanentFlag, t1StatsSlotIndex=t1StatsSlotIndex, ipCleartcpStatsOutputDroppedBytes=ipCleartcpStatsOutputDroppedBytes, pppDeadSessionStatsTxBigErrors=pppDeadSessionStatsTxBigErrors, sessionTraceEntry=sessionTraceEntry, t3StatsEntry=t3StatsEntry, sessionStatusModemReceiveLineLevel=sessionStatusModemReceiveLineLevel, modemStatsMaxRxSum=modemStatsMaxRxSum, pppSessionStatsMultilinkLinksMaxConfig=pppSessionStatsMultilinkLinksMaxConfig, l2FLogEntryMinIndex=l2FLogEntryMinIndex, pppSessionStatsLocalMRRU=pppSessionStatsLocalMRRU, modemStatsAuthWin=modemStatsAuthWin, modemCallStatsTxLevel=modemCallStatsTxLevel, sessionStatusReverseRemoteIP=sessionStatusReverseRemoteIP, sessionStatusInactiveRemoteIPXNetwork=sessionStatusInactiveRemoteIPXNetwork, taskStatsTableIdleHour=taskStatsTableIdleHour, ipsecCountersInboundDropCounter=ipsecCountersInboundDropCounter, pppSessionStatsMLPFragmentsReceived=pppSessionStatsMLPFragmentsReceived, timerStatsCPUNumber=timerStatsCPUNumber, modemCallStatsNumberOfTXBlocksHigh=modemCallStatsNumberOfTXBlocksHigh, taskStatsTableSlotNumber=taskStatsTableSlotNumber, dacTraceType=dacTraceType, pppSessionStatsRxBigErrors=pppSessionStatsRxBigErrors, pppDeadSessionStatsRemoteVJSlots=pppDeadSessionStatsRemoteVJSlots, sessionSummaryMaximumTotal=sessionSummaryMaximumTotal, pbufStatsFreeSuccesses0=pbufStatsFreeSuccesses0, pbufStatsAllocatedCount0=pbufStatsAllocatedCount0, pbufStatsFreeFails4=pbufStatsFreeFails4, modemCallStatsRxMinSpeed=modemCallStatsRxMinSpeed, sessionStatusHistoryDuration=sessionStatusHistoryDuration, sessionStatusReverseLastComponent=sessionStatusReverseLastComponent, e1SummaryStatsFunctionalChannels=e1SummaryStatsFunctionalChannels, l2TPLinkStatusVPOP=l2TPLinkStatusVPOP, modemCallStatsConnectTimeHours=modemCallStatsConnectTimeHours, modemCallStatsV8ControllerRev=modemCallStatsV8ControllerRev, sessionStatusReverseTimeOfModemSync=sessionStatusReverseTimeOfModemSync, sessionSlotsTable=sessionSlotsTable, l2FTunnelStatusInactiveState=l2FTunnelStatusInactiveState, l2TPLogEntryTable=l2TPLogEntryTable, timerStatsTimerEntrySize=timerStatsTimerEntrySize, modemSummaryStatsConnectedCalls=modemSummaryStatsConnectedCalls, l2TPTunnelStatusInactiveLocalAddress=l2TPTunnelStatusInactiveLocalAddress, modemStatsDCCalls=modemStatsDCCalls, modemIntervalStatsNoDownloadCount=modemIntervalStatsNoDownloadCount, memoryStatsTableFreeFails=memoryStatsTableFreeFails, pppDeadSessionStatsConnectLimit=pppDeadSessionStatsConnectLimit, taskStatsTableContextSwitches=taskStatsTableContextSwitches, sessionStatusReverseTdmStream=sessionStatusReverseTdmStream, l2FTunnelStatusInactiveGotOpened=l2FTunnelStatusInactiveGotOpened, ipSvcMonitoringResponsesIn=ipSvcMonitoringResponsesIn, sessionStatusReverseTxEndDataRate=sessionStatusReverseTxEndDataRate, l2FTunnelStatusActiveVPOP=l2FTunnelStatusActiveVPOP, sessionStatusActiveActualAuthMethod=sessionStatusActiveActualAuthMethod, ss7StatusPort=ss7StatusPort, pppSessionStatsUpTime=pppSessionStatsUpTime, ipStubStatsIgmpInErrors=ipStubStatsIgmpInErrors, iSDNHDLCFrameLength=iSDNHDLCFrameLength, dvsStatusGreInDropped=dvsStatusGreInDropped, sessionStatusStartTime=sessionStatusStartTime, l2FLinkStatusTxPackets=l2FLinkStatusTxPackets, modemStatsResetRevivals=modemStatsResetRevivals, cHdlcStatsShortFramesIn=cHdlcStatsShortFramesIn, memoryStatsTableManagedSize=memoryStatsTableManagedSize, sessionStatusReverseDevice=sessionStatusReverseDevice, sessionStatusInactiveTxEndDataRate=sessionStatusInactiveTxEndDataRate, pppDeadSessionStatsCCPResetsReceived=pppDeadSessionStatsCCPResetsReceived, dvsStatusIPXInPackets=dvsStatusIPXInPackets, sessionStatusInactiveOctetsIn=sessionStatusInactiveOctetsIn, pbufStatsFreeMin1=pbufStatsFreeMin1, l2TPTunnelStatusInactiveActiveLinks=l2TPTunnelStatusInactiveActiveLinks, ss7StatusCalledId=ss7StatusCalledId, pppDeadLogEntryIndex=pppDeadLogEntryIndex, l2FLogEntryUpTime=l2FLogEntryUpTime, sessionStatusActiveLayer2Slot=sessionStatusActiveLayer2Slot, pbufStatsFreeSuccesses5=pbufStatsFreeSuccesses5, sessionStatusReverseTxStartDataRate=sessionStatusReverseTxStartDataRate, pbufStatsFreeCount1=pbufStatsFreeCount1, pppSessionStatsCCPResetsSent=pppSessionStatsCCPResetsSent, modemStatsMaxRxSpeed=modemStatsMaxRxSpeed, sessionComponentsComponentType=sessionComponentsComponentType, sessionStatusInactiveSs7SessionId=sessionStatusInactiveSs7SessionId, sessionSlotsSlot12Count=sessionSlotsSlot12Count, mamLogEntryEntry=mamLogEntryEntry, sessionStatusActualAuthMethod=sessionStatusActualAuthMethod, l2TPLinkStatusRxBytes=l2TPLinkStatusRxBytes, sessionCountersActiveLowest=sessionCountersActiveLowest, modemIntervalStatsECCalls=modemIntervalStatsECCalls, ss7CountersNumActive=ss7CountersNumActive, t3StatsActiveDs1Count=t3StatsActiveDs1Count, sessionStatusHistoryTxStartDataRate=sessionStatusHistoryTxStartDataRate, dvsStatusVPOP=dvsStatusVPOP, sessionStatusActiveTimeOfService=sessionStatusActiveTimeOfService, l2TPTunnelStatusActiveLinksAddedSuccessfully=l2TPTunnelStatusActiveLinksAddedSuccessfully, memoryStatsTableAllocFails=memoryStatsTableAllocFails, t1SummaryStatsIdleChannels=t1SummaryStatsIdleChannels, modemCallStatsLocalRetrains=modemCallStatsLocalRetrains, dvsStatusIPOutPackets=dvsStatusIPOutPackets, t1CountsChannelCount=t1CountsChannelCount, modemIntervalStatsOverallTotalCalls=modemIntervalStatsOverallTotalCalls, dvsStatusDeadGreOutDropped=dvsStatusDeadGreOutDropped, modemCallStatsNumberOfTXChars2ndByte=modemCallStatsNumberOfTXChars2ndByte, taskStatsTableIdle5Seconds=taskStatsTableIdle5Seconds, modemCallStatsEQMSumLow=modemCallStatsEQMSumLow, modemIntervalStatsV34Calls=modemIntervalStatsV34Calls, ipSvcMonitoringState=ipSvcMonitoringState, sessionStatusActiveTerminatingComponent=sessionStatusActiveTerminatingComponent, pppSummaryStatsLinksNegotiatedLCP=pppSummaryStatsLinksNegotiatedLCP, sessionStatusActiveTandemTimeslot=sessionStatusActiveTandemTimeslot, ipstatIgmpEntryIPAddrfrom=ipstatIgmpEntryIPAddrfrom, t1CountsIncomingCallAttempts=t1CountsIncomingCallAttempts, e1CountsIncomingDisconnects=e1CountsIncomingDisconnects, modemStatsConnectedCalls=modemStatsConnectedCalls, sessionStatusHistoryTerminatingComponent=sessionStatusHistoryTerminatingComponent, sessionStatusHistoryMultiLinkId=sessionStatusHistoryMultiLinkId, ipstatRouteEntryPrevXxrt=ipstatRouteEntryPrevXxrt, sessionStatusActiveState=sessionStatusActiveState, ds0StatsDs0Index=ds0StatsDs0Index, pbufStatsDataSize4=pbufStatsDataSize4, modemCallStatsFirmwareState=modemCallStatsFirmwareState, modemCallStatsRxShaping=modemCallStatsRxShaping, sessionStatusLocalIP=sessionStatusLocalIP, sessionStatusInactiveOriginateMode=sessionStatusInactiveOriginateMode, sessionStatusHistoryEntry=sessionStatusHistoryEntry, pbufStatsAllocSuccesses2=pbufStatsAllocSuccesses2, pppDeadSessionStatsTable=pppDeadSessionStatsTable, modemCallStatsRTTHigh=modemCallStatsRTTHigh, iSDNHDLCFrameNextIndex=iSDNHDLCFrameNextIndex, taskStatsTableStackAddress7=taskStatsTableStackAddress7, modemStatsPackCrashes=modemStatsPackCrashes, sessionStatusReverseModemNumber=sessionStatusReverseModemNumber, sessionStatusActiveModemSNR=sessionStatusActiveModemSNR, taskStatsTableIntervalTime=taskStatsTableIntervalTime, modemStatsLast32Auth=modemStatsLast32Auth, sessionStatusTunnelType=sessionStatusTunnelType, sessionStatusReverseOctetsOut=sessionStatusReverseOctetsOut, dvsStatusDeadRemoteCLID=dvsStatusDeadRemoteCLID, sessionStatusActiveOctetsIn=sessionStatusActiveOctetsIn, modemSessionStats2DMMNumber=modemSessionStats2DMMNumber, sessionStatusReverseModemRemoteRetrains=sessionStatusReverseModemRemoteRetrains, memoryStatsTableCPUNumber=memoryStatsTableCPUNumber, sessionStatusTxEndDataRate=sessionStatusTxEndDataRate, sessionStatusInactiveIop=sessionStatusInactiveIop, pppLogEntryIndex=pppLogEntryIndex, e1SummaryStatsConnectedChannels=e1SummaryStatsConnectedChannels, sessionStatusSs7SessionId=sessionStatusSs7SessionId, timerStatsActiveMax=timerStatsActiveMax, sessionStatusHistoryTunnelServerAddress=sessionStatusHistoryTunnelServerAddress, sessionStatusInactiveTunnelType=sessionStatusInactiveTunnelType, modemIntervalStatsOverallConnectedCalls=modemIntervalStatsOverallConnectedCalls, pppSessionStatsRemoteCompressAlgorithm=pppSessionStatsRemoteCompressAlgorithm, dvsStatusTunnelState=dvsStatusTunnelState, pppDeadSessionStatsRemoteIPXNetwork=pppDeadSessionStatsRemoteIPXNetwork, pppSessionStatsSessionID=pppSessionStatsSessionID, pppLogEntryTable=pppLogEntryTable, sessionStatusDurationHMS=sessionStatusDurationHMS, dacStatusLTMType=dacStatusLTMType, sessionStatusTimeOfModemSync=sessionStatusTimeOfModemSync, taskStatsTableStackAddress5=taskStatsTableStackAddress5, sessionStatusActiveTerminationCause=sessionStatusActiveTerminationCause, sessionStatusActiveCalledNumber=sessionStatusActiveCalledNumber, sessionStatusActivePacketsIn=sessionStatusActivePacketsIn, dvsDeadLogEntryEntry=dvsDeadLogEntryEntry, sessionStatusHistoryLinkId=sessionStatusHistoryLinkId, pppDeadSessionStatsTxPacketsDropped=pppDeadSessionStatsTxPacketsDropped, pppDeadSessionStatsRxBytes=pppDeadSessionStatsRxBytes, sessionStatusInactivePacketsOut=sessionStatusInactivePacketsOut, sessionStatusTerminatingComponent=sessionStatusTerminatingComponent, ipdcTraceTimeStamp=ipdcTraceTimeStamp, sessionStatusReverseTdmTimeSlot=sessionStatusReverseTdmTimeSlot, sessionSummaryActiveFrameRelay=sessionSummaryActiveFrameRelay, dacTraceTimestamp=dacTraceTimestamp, t3StatsDs1Count=t3StatsDs1Count, pppSummaryStatsMaxActiveLinks=pppSummaryStatsMaxActiveLinks, l2TPLinkStatusSessionID=l2TPLinkStatusSessionID, pppSummaryStatsLinksNegotiatedIPXCP=pppSummaryStatsLinksNegotiatedIPXCP, l2TPTunnelStatusActiveActiveLinks=l2TPTunnelStatusActiveActiveLinks, modemIntervalStatsAuthCalls=modemIntervalStatsAuthCalls, pppDeadSessionStatsRemoteACCM=pppDeadSessionStatsRemoteACCM, sessionStatusReverseTunnelId=sessionStatusReverseTunnelId, dvsLogEntryEntryText=dvsLogEntryEntryText, e1CountsTable=e1CountsTable, modemCallStatsTxNonlinearEncoding=modemCallStatsTxNonlinearEncoding)
mibBuilder.exportSymbols("APTIS-MONITOR-MIB", sessionStatusInactiveModemReceiveLineLevel=sessionStatusInactiveModemReceiveLineLevel, sessionStatusReverseStartTime=sessionStatusReverseStartTime, powerStatusExternalDC1=powerStatusExternalDC1, pppSummaryStatsActiveLinks=pppSummaryStatsActiveLinks, pppSessionStatsEntry=pppSessionStatsEntry, pppSummaryStatsLinksHDLC=pppSummaryStatsLinksHDLC, l2TPTunnelStatusInactiveSlot=l2TPTunnelStatusInactiveSlot, sessionSummaryActiveL2tp=sessionSummaryActiveL2tp, slotStatusNewPalRev=slotStatusNewPalRev, modemIntervalStatsV90Calls=modemIntervalStatsV90Calls, sessionStatusActiveOctetsOut=sessionStatusActiveOctetsOut, taskStatsTableTCB=taskStatsTableTCB, taskStatsTableStackAddress2=taskStatsTableStackAddress2, modemSessionStatsModemIndex=modemSessionStatsModemIndex, sessionStatusActiveLastComponent=sessionStatusActiveLastComponent, pbufStatsFreeSuccesses1=pbufStatsFreeSuccesses1, sessionStatusModemDataCompression=sessionStatusModemDataCompression, sessionStatusReverseModemRemoteRenegotiations=sessionStatusReverseModemRemoteRenegotiations, dacStatusClockSourceSecondary=dacStatusClockSourceSecondary, pbufStatsFreeMin5=pbufStatsFreeMin5, l2FTunnelStatusInactiveLocalAddress=l2FTunnelStatusInactiveLocalAddress, sessionSlotsSlot3Count=sessionSlotsSlot3Count, dvsStatusRemoteAddress=dvsStatusRemoteAddress, sessionStatusInactiveRxStartDataRate=sessionStatusInactiveRxStartDataRate, modemIntervalStatsDCCalls=modemIntervalStatsDCCalls, sessionSlotsEntry=sessionSlotsEntry, e1SummaryStatsTable=e1SummaryStatsTable, sessionStatusHistoryPermanentFlag=sessionStatusHistoryPermanentFlag, pppDeadSessionStatsDNSAddress2=pppDeadSessionStatsDNSAddress2, pppSessionStatsTable=pppSessionStatsTable, iSDNStatsOutConnected=iSDNStatsOutConnected, modemCallStatsEntry=modemCallStatsEntry, dvsStatusRemoteIPXNode=dvsStatusRemoteIPXNode, l2FLogEntryTable=l2FLogEntryTable, cHdlcStatsUnknownCiscoTypeIn=cHdlcStatsUnknownCiscoTypeIn, pppDeadSessionStatsRemainingTime=pppDeadSessionStatsRemainingTime, ipstatRouteEntryPathAndCost=ipstatRouteEntryPathAndCost, sessionSlotsSlot6Count=sessionSlotsSlot6Count, dacTraceEntry=dacTraceEntry, ipStubStatsIgmpInQueries=ipStubStatsIgmpInQueries, pppSessionStatsLocalVJSlots=pppSessionStatsLocalVJSlots, sessionStatusOctetsOut=sessionStatusOctetsOut, sessionStatusReverseRemoteIPXNetwork=sessionStatusReverseRemoteIPXNetwork, ipstatIgmpEntryCliId=ipstatIgmpEntryCliId, ss7TraceLogEntry=ss7TraceLogEntry, sessionStatusReverseLocalIPMask=sessionStatusReverseLocalIPMask, modemStatsMaxTxSum=modemStatsMaxTxSum, l2TPTunnelStatusActiveL2TPTermationCause=l2TPTunnelStatusActiveL2TPTermationCause, ipSvcMonitoringRequestsIn=ipSvcMonitoringRequestsIn, l2FTunnelStatusInactiveVPOP=l2FTunnelStatusInactiveVPOP, modemCallStatsRTTLow=modemCallStatsRTTLow, ipstatRouteEntryNextIprtIndex=ipstatRouteEntryNextIprtIndex, pppSessionStatsRxBytesUncompressed=pppSessionStatsRxBytesUncompressed, PYSNMP_MODULE_ID=aptisMonitorModule, pppSessionStatsRxSmallErrors=pppSessionStatsRxSmallErrors, systemTimeFixedBootTime=systemTimeFixedBootTime, sessionStatusState=sessionStatusState, dacClockingClockSourcePrimary=dacClockingClockSourcePrimary, sessionStatusActiveTable=sessionStatusActiveTable, pppSessionStatsLCPState=pppSessionStatsLCPState, sessionSummaryActiveL2f=sessionSummaryActiveL2f, modemCallStatsEQMSumHigh=modemCallStatsEQMSumHigh, pppSessionStatsRemoteAuthenticated=pppSessionStatsRemoteAuthenticated, ss7TraceEntry=ss7TraceEntry, dacTraceIndex=dacTraceIndex, pppSummaryStatsSlotNumber=pppSummaryStatsSlotNumber, modemCallStatsRxMPSequenceByte1Low=modemCallStatsRxMPSequenceByte1Low, pppDeadSessionStatsTxSpeed=pppDeadSessionStatsTxSpeed, modemSessionStatsInitialRxSpeed=modemSessionStatsInitialRxSpeed, pppDeadSessionStatsRxSpeed=pppDeadSessionStatsRxSpeed, t1CountsEntry=t1CountsEntry, e1StatsSlotIndex=e1StatsSlotIndex, l2TPLogEntryIndex=l2TPLogEntryIndex, ss7StatusCallType=ss7StatusCallType, dvsStatusDeadTable=dvsStatusDeadTable, iSDNHDLCFrameTimestamp=iSDNHDLCFrameTimestamp, pbufStatsAllocSuccesses3=pbufStatsAllocSuccesses3, slotStatusNewSlotSerialNumber=slotStatusNewSlotSerialNumber, pbufStatsFreeCount2=pbufStatsFreeCount2, l2FLinkStatusIndex=l2FLinkStatusIndex, sessionStatusReverseSessionID=sessionStatusReverseSessionID, sessionStatusActiveModemRemoteRetrains=sessionStatusActiveModemRemoteRetrains, l2TPLinkStatusTable=l2TPLinkStatusTable, l2TPLinkStatusTxPackets=l2TPLinkStatusTxPackets, modemCallStatsNumberOfTXChars3rdByte=modemCallStatsNumberOfTXChars3rdByte, softwareVersionEntry=softwareVersionEntry, sessionStatusHistoryLocalIPMask=sessionStatusHistoryLocalIPMask, pppSessionStatsPhase=pppSessionStatsPhase, sessionMultilinkMyEIDType=sessionMultilinkMyEIDType, taskStatsTableTotalTime=taskStatsTableTotalTime, modemStatsMinRxSpeed=modemStatsMinRxSpeed, modemCallStatsHighAddrOfMEMACCFailure=modemCallStatsHighAddrOfMEMACCFailure, sessionStatusActivePacketsOut=sessionStatusActivePacketsOut, sessionStatusActiveRxStartDataRate=sessionStatusActiveRxStartDataRate, pppSessionStatsTxResourceErrors=pppSessionStatsTxResourceErrors, sessionSummaryMaximumPpp=sessionSummaryMaximumPpp, pbufStatsCardType=pbufStatsCardType, sessionSummaryInactiveTrunk=sessionSummaryInactiveTrunk, sessionComponentsComponentState=sessionComponentsComponentState, l2TPLinkStatusEntry=l2TPLinkStatusEntry, sessionCountersBootEra=sessionCountersBootEra, sessionStatusInactiveStartTime=sessionStatusInactiveStartTime, modemCallStatsTxFinalSpeed=modemCallStatsTxFinalSpeed, modemCallStatsUpperBandEdge=modemCallStatsUpperBandEdge, pbufStatsAllocatedMax4=pbufStatsAllocatedMax4, memoryStatsTableSlotNumber=memoryStatsTableSlotNumber, pbufStatsCPUNumber=pbufStatsCPUNumber, l2TPTunnelStatusActiveEntry=l2TPTunnelStatusActiveEntry, sessionStatusActiveRemoteIP=sessionStatusActiveRemoteIP, modemCallStatsTxShaping=modemCallStatsTxShaping, sessionStatusReverseMultiLinkId=sessionStatusReverseMultiLinkId, l2FTunnelStatusInactiveLinksAddedUnsuccessfully=l2FTunnelStatusInactiveLinksAddedUnsuccessfully, l2TPTunnelStatusActiveState=l2TPTunnelStatusActiveState, dacStatusClockSourcePrimary=dacStatusClockSourcePrimary)
