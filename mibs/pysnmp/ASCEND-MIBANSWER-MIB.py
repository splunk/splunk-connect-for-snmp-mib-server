#
# PySNMP MIB module ASCEND-MIBANSWER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBANSWER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:10:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Counter64, Unsigned32, Bits, ModuleIdentity, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, MibIdentifier, ObjectIdentity, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "Unsigned32", "Bits", "ModuleIdentity", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "MibIdentifier", "ObjectIdentity", "iso", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibanswerProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 3))
mibanswerProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 3, 1), )
if mibBuilder.loadTexts: mibanswerProfileTable.setStatus('mandatory')
mibanswerProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1), ).setIndexNames((0, "ASCEND-MIBANSWER-MIB", "answerProfile-Index-o"))
if mibBuilder.loadTexts: mibanswerProfileEntry.setStatus('mandatory')
answerProfile_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 1), Integer32()).setLabel("answerProfile-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: answerProfile_Index_o.setStatus('mandatory')
answerProfile_UseAnswerForAllDefaults = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-UseAnswerForAllDefaults").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_UseAnswerForAllDefaults.setStatus('mandatory')
answerProfile_Force56kbps = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-Force56kbps").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_Force56kbps.setStatus('mandatory')
answerProfile_ProfilesRequired = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-ProfilesRequired").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_ProfilesRequired.setStatus('mandatory')
answerProfile_ClidAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 2, 7, 4, 5, 6, 8, 9))).clone(namedValues=NamedValues(("ignore", 1), ("clidRequire", 3), ("clidPrefer", 2), ("clidFirst", 7), ("clidFallback", 4), ("dnisRequire", 5), ("dnisPref", 6), ("dnisFirst", 8), ("dnisFallback", 9)))).setLabel("answerProfile-ClidAuthMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_ClidAuthMode.setStatus('mandatory')
answerProfile_ClidSelection = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("first", 1), ("securePrefer", 2), ("secureRequire", 3), ("userPrefer", 4), ("userRequire", 5)))).setLabel("answerProfile-ClidSelection").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_ClidSelection.setStatus('mandatory')
answerProfile_CallbackClidPrefix = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 85), DisplayString()).setLabel("answerProfile-CallbackClidPrefix").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_CallbackClidPrefix.setStatus('mandatory')
answerProfile_PppAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-PppAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_Enabled.setStatus('mandatory')
answerProfile_PppAnswer_ReceiveAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("noPppAuth", 1), ("papPppAuth", 2), ("chapPppAuth", 3), ("anyPppAuth", 4), ("desPapPppAuth", 5), ("tokenPapPppAuth", 6), ("tokenChapPppAuth", 7), ("cacheTokenPppAuth", 8), ("msChapPppAuth", 9), ("papPreferred", 10)))).setLabel("answerProfile-PppAnswer-ReceiveAuthMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_ReceiveAuthMode.setStatus('mandatory')
answerProfile_PppAnswer_BiDirectionalAuth = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("allowed", 2), ("required", 3)))).setLabel("answerProfile-PppAnswer-BiDirectionalAuth").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_BiDirectionalAuth.setStatus('mandatory')
answerProfile_PppAnswer_SubstituteSendName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 80), DisplayString()).setLabel("answerProfile-PppAnswer-SubstituteSendName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_SubstituteSendName.setStatus('mandatory')
answerProfile_PppAnswer_DisconnectOnAuthTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-PppAnswer-DisconnectOnAuthTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_DisconnectOnAuthTimeout.setStatus('mandatory')
answerProfile_PppAnswer_BridgingGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 9), Integer32()).setLabel("answerProfile-PppAnswer-BridgingGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_BridgingGroup.setStatus('mandatory')
answerProfile_PppAnswer_LinkCompression = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("stac", 2), ("stac9", 3), ("msStac", 4), ("mppc", 5)))).setLabel("answerProfile-PppAnswer-LinkCompression").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_LinkCompression.setStatus('mandatory')
answerProfile_PppAnswer_Mru = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 11), Integer32()).setLabel("answerProfile-PppAnswer-Mru").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_Mru.setStatus('mandatory')
answerProfile_PppAnswer_Lqm = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-PppAnswer-Lqm").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_Lqm.setStatus('mandatory')
answerProfile_PppAnswer_LqmMinimumPeriod = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 13), Integer32()).setLabel("answerProfile-PppAnswer-LqmMinimumPeriod").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_LqmMinimumPeriod.setStatus('mandatory')
answerProfile_PppAnswer_LqmMaximumPeriod = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 14), Integer32()).setLabel("answerProfile-PppAnswer-LqmMaximumPeriod").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_LqmMaximumPeriod.setStatus('mandatory')
answerProfile_PppAnswer_CbcpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-PppAnswer-CbcpEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_CbcpEnabled.setStatus('mandatory')
answerProfile_PppAnswer_IpxHeaderCompression = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-PppAnswer-IpxHeaderCompression").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_IpxHeaderCompression.setStatus('mandatory')
answerProfile_PppAnswer_Mtu = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 75), Integer32()).setLabel("answerProfile-PppAnswer-Mtu").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_Mtu.setStatus('mandatory')
answerProfile_PppAnswer_AuthForAsyncFramedUsers = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notRequired", 1), ("required", 2)))).setLabel("answerProfile-PppAnswer-AuthForAsyncFramedUsers").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_AuthForAsyncFramedUsers.setStatus('mandatory')
answerProfile_PppAnswer_MaxPapAuthRetry = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 82), Integer32()).setLabel("answerProfile-PppAnswer-MaxPapAuthRetry").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_MaxPapAuthRetry.setStatus('mandatory')
answerProfile_PppAnswer_MaxPppConfigureRetry = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 92), Integer32()).setLabel("answerProfile-PppAnswer-MaxPppConfigureRetry").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_MaxPppConfigureRetry.setStatus('mandatory')
answerProfile_PppAnswer_PppRestartTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 93), Integer32()).setLabel("answerProfile-PppAnswer-PppRestartTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_PppRestartTimer.setStatus('mandatory')
answerProfile_PppAnswer_MaxPppRestartTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 94), Integer32()).setLabel("answerProfile-PppAnswer-MaxPppRestartTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PppAnswer_MaxPppRestartTimer.setStatus('mandatory')
answerProfile_MpAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-MpAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MpAnswer_Enabled.setStatus('mandatory')
answerProfile_MpAnswer_MinimumChannels = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 16), Integer32()).setLabel("answerProfile-MpAnswer-MinimumChannels").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MpAnswer_MinimumChannels.setStatus('mandatory')
answerProfile_MpAnswer_MaximumChannels = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 17), Integer32()).setLabel("answerProfile-MpAnswer-MaximumChannels").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MpAnswer_MaximumChannels.setStatus('mandatory')
answerProfile_MpAnswer_BacpEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-MpAnswer-BacpEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MpAnswer_BacpEnable.setStatus('mandatory')
answerProfile_MppAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-MppAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_Enabled.setStatus('mandatory')
answerProfile_MppAnswer_DynamicAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("constant", 1), ("linear", 2), ("quadratic", 3)))).setLabel("answerProfile-MppAnswer-DynamicAlgorithm").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_DynamicAlgorithm.setStatus('mandatory')
answerProfile_MppAnswer_BandwidthMonitorDirection = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("transmit", 1), ("transmitRecv", 2), ("none", 3)))).setLabel("answerProfile-MppAnswer-BandwidthMonitorDirection").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_BandwidthMonitorDirection.setStatus('mandatory')
answerProfile_MppAnswer_IncrementChannelCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 22), Integer32()).setLabel("answerProfile-MppAnswer-IncrementChannelCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_IncrementChannelCount.setStatus('mandatory')
answerProfile_MppAnswer_DecrementChannelCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 23), Integer32()).setLabel("answerProfile-MppAnswer-DecrementChannelCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_DecrementChannelCount.setStatus('mandatory')
answerProfile_MppAnswer_SecondsHistory = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 24), Integer32()).setLabel("answerProfile-MppAnswer-SecondsHistory").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_SecondsHistory.setStatus('mandatory')
answerProfile_MppAnswer_AddPersistence = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 25), Integer32()).setLabel("answerProfile-MppAnswer-AddPersistence").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_AddPersistence.setStatus('mandatory')
answerProfile_MppAnswer_SubPersistence = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 26), Integer32()).setLabel("answerProfile-MppAnswer-SubPersistence").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_SubPersistence.setStatus('mandatory')
answerProfile_MppAnswer_TargetUtilization = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 27), Integer32()).setLabel("answerProfile-MppAnswer-TargetUtilization").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_MppAnswer_TargetUtilization.setStatus('mandatory')
answerProfile_FrAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-FrAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_FrAnswer_Enabled.setStatus('mandatory')
answerProfile_TcpClearAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-TcpClearAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_TcpClearAnswer_Enabled.setStatus('mandatory')
answerProfile_AraAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-AraAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_AraAnswer_Enabled.setStatus('mandatory')
answerProfile_V120Answer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-V120Answer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_V120Answer_Enabled.setStatus('mandatory')
answerProfile_V120Answer_FrameLength = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 32), Integer32()).setLabel("answerProfile-V120Answer-FrameLength").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_V120Answer_FrameLength.setStatus('mandatory')
answerProfile_X25Answer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-X25Answer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X25Answer_Enabled.setStatus('mandatory')
answerProfile_X25Answer_X25Profile = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 34), DisplayString()).setLabel("answerProfile-X25Answer-X25Profile").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X25Answer_X25Profile.setStatus('mandatory')
answerProfile_X25Answer_X3Profile = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11))).clone(namedValues=NamedValues(("crtProfile", 1), ("infonetProfile", 2), ("defaultProfile", 3), ("scenProfile", 4), ("ccSspProfile", 5), ("ccTspProfile", 6), ("hardcopyProfile", 7), ("hdxProfile", 8), ("sharkProfile", 9), ("posProfile", 12), ("nullProfile", 10), ("customProfile", 11)))).setLabel("answerProfile-X25Answer-X3Profile").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X25Answer_X3Profile.setStatus('mandatory')
answerProfile_X25Answer_MaxCalls = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 36), Integer32()).setLabel("answerProfile-X25Answer-MaxCalls").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X25Answer_MaxCalls.setStatus('mandatory')
answerProfile_X25Answer_VcTimerEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-X25Answer-VcTimerEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X25Answer_VcTimerEnable.setStatus('mandatory')
answerProfile_X25Answer_AutoCallX121Address = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 38), DisplayString()).setLabel("answerProfile-X25Answer-AutoCallX121Address").setMaxAccess("readonly")
if mibBuilder.loadTexts: answerProfile_X25Answer_AutoCallX121Address.setStatus('mandatory')
answerProfile_X25Answer_ReverseCharge = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-X25Answer-ReverseCharge").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X25Answer_ReverseCharge.setStatus('mandatory')
answerProfile_X25Answer_X3CustomProf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 40), DisplayString()).setLabel("answerProfile-X25Answer-X3CustomProf").setMaxAccess("readonly")
if mibBuilder.loadTexts: answerProfile_X25Answer_X3CustomProf.setStatus('mandatory')
answerProfile_EuAnswer_EurawEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-EuAnswer-EurawEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_EuAnswer_EurawEnabled.setStatus('mandatory')
answerProfile_EuAnswer_EuuiEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-EuAnswer-EuuiEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_EuAnswer_EuuiEnabled.setStatus('mandatory')
answerProfile_EuAnswer_DceAddr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 47), Integer32()).setLabel("answerProfile-EuAnswer-DceAddr").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_EuAnswer_DceAddr.setStatus('mandatory')
answerProfile_EuAnswer_DteAddr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 48), Integer32()).setLabel("answerProfile-EuAnswer-DteAddr").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_EuAnswer_DteAddr.setStatus('mandatory')
answerProfile_EuAnswer_Mru = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 49), Integer32()).setLabel("answerProfile-EuAnswer-Mru").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_EuAnswer_Mru.setStatus('mandatory')
answerProfile_IpAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-IpAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_IpAnswer_Enabled.setStatus('mandatory')
answerProfile_IpAnswer_VjHeaderPrediction = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-IpAnswer-VjHeaderPrediction").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_IpAnswer_VjHeaderPrediction.setStatus('mandatory')
answerProfile_IpAnswer_AssignAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-IpAnswer-AssignAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_IpAnswer_AssignAddress.setStatus('mandatory')
answerProfile_IpAnswer_RoutingMetric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 53), Integer32()).setLabel("answerProfile-IpAnswer-RoutingMetric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_IpAnswer_RoutingMetric.setStatus('mandatory')
answerProfile_IpAnswer_PrivateRouteProfileRequired = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-IpAnswer-PrivateRouteProfileRequired").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_IpAnswer_PrivateRouteProfileRequired.setStatus('mandatory')
answerProfile_IpAnswer_PoolForAsyncFramedUser = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 83), Integer32()).setLabel("answerProfile-IpAnswer-PoolForAsyncFramedUser").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_IpAnswer_PoolForAsyncFramedUser.setStatus('mandatory')
answerProfile_IpxAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-IpxAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_IpxAnswer_Enabled.setStatus('mandatory')
answerProfile_IpxAnswer_PeerMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("routerPeer", 1), ("dialinPeer", 2)))).setLabel("answerProfile-IpxAnswer-PeerMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_IpxAnswer_PeerMode.setStatus('mandatory')
answerProfile_SessionInfo_CallFilter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 56), DisplayString()).setLabel("answerProfile-SessionInfo-CallFilter").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_SessionInfo_CallFilter.setStatus('mandatory')
answerProfile_SessionInfo_DataFilter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 57), DisplayString()).setLabel("answerProfile-SessionInfo-DataFilter").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_SessionInfo_DataFilter.setStatus('mandatory')
answerProfile_SessionInfo_FilterPersistence = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-SessionInfo-FilterPersistence").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_SessionInfo_FilterPersistence.setStatus('mandatory')
answerProfile_SessionInfo_FilterRequired = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-SessionInfo-FilterRequired").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_SessionInfo_FilterRequired.setStatus('mandatory')
answerProfile_SessionInfo_IdleTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 59), Integer32()).setLabel("answerProfile-SessionInfo-IdleTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_SessionInfo_IdleTimer.setStatus('mandatory')
answerProfile_SessionInfo_TsIdleMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noIdle", 1), ("inputOnlyIdle", 2), ("inputOutputIdle", 3)))).setLabel("answerProfile-SessionInfo-TsIdleMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_SessionInfo_TsIdleMode.setStatus('mandatory')
answerProfile_SessionInfo_TsIdleTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 61), Integer32()).setLabel("answerProfile-SessionInfo-TsIdleTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_SessionInfo_TsIdleTimer.setStatus('mandatory')
answerProfile_SessionInfo_MaxCallDuration = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 62), Integer32()).setLabel("answerProfile-SessionInfo-MaxCallDuration").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_SessionInfo_MaxCallDuration.setStatus('mandatory')
answerProfile_X75Answer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-X75Answer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X75Answer_Enabled.setStatus('mandatory')
answerProfile_X75Answer_KFramesOutstanding = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 64), Integer32()).setLabel("answerProfile-X75Answer-KFramesOutstanding").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X75Answer_KFramesOutstanding.setStatus('mandatory')
answerProfile_X75Answer_N2Retransmissions = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 65), Integer32()).setLabel("answerProfile-X75Answer-N2Retransmissions").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X75Answer_N2Retransmissions.setStatus('mandatory')
answerProfile_X75Answer_T1RetranTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 66), Integer32()).setLabel("answerProfile-X75Answer-T1RetranTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X75Answer_T1RetranTimer.setStatus('mandatory')
answerProfile_X75Answer_FrameLength = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 67), Integer32()).setLabel("answerProfile-X75Answer-FrameLength").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_X75Answer_FrameLength.setStatus('mandatory')
answerProfile_FramedOnly = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-FramedOnly").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_FramedOnly.setStatus('mandatory')
answerProfile_HdlcNrmAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-HdlcNrmAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_HdlcNrmAnswer_Enabled.setStatus('mandatory')
answerProfile_Visa2Answer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-Visa2Answer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_Visa2Answer_Enabled.setStatus('mandatory')
answerProfile_AtmAnswer_SvcEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-AtmAnswer-SvcEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_AtmAnswer_SvcEnabled.setStatus('mandatory')
answerProfile_PriorityAnswer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 95), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("answerProfile-PriorityAnswer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PriorityAnswer_Enabled.setStatus('mandatory')
answerProfile_PriorityAnswer_PacketClassification = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 87), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("qosTag", 2), ("udpPortRange", 3)))).setLabel("answerProfile-PriorityAnswer-PacketClassification").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PriorityAnswer_PacketClassification.setStatus('mandatory')
answerProfile_PriorityAnswer_MaxRtpPacketDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 88), Integer32()).setLabel("answerProfile-PriorityAnswer-MaxRtpPacketDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PriorityAnswer_MaxRtpPacketDelay.setStatus('mandatory')
answerProfile_PriorityAnswer_MinimumRtpPort = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 89), Integer32()).setLabel("answerProfile-PriorityAnswer-MinimumRtpPort").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PriorityAnswer_MinimumRtpPort.setStatus('mandatory')
answerProfile_PriorityAnswer_MaximumRtpPort = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 90), Integer32()).setLabel("answerProfile-PriorityAnswer-MaximumRtpPort").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PriorityAnswer_MaximumRtpPort.setStatus('mandatory')
answerProfile_PriorityAnswer_NoHighPrioPktDuration = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 91), Integer32()).setLabel("answerProfile-PriorityAnswer-NoHighPrioPktDuration").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_PriorityAnswer_NoHighPrioPktDuration.setStatus('mandatory')
answerProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 3, 1, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("answerProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerProfile_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBANSWER-MIB", answerProfile_PppAnswer_Lqm=answerProfile_PppAnswer_Lqm, answerProfile_MppAnswer_DynamicAlgorithm=answerProfile_MppAnswer_DynamicAlgorithm, answerProfile_MpAnswer_MinimumChannels=answerProfile_MpAnswer_MinimumChannels, answerProfile_V120Answer_Enabled=answerProfile_V120Answer_Enabled, answerProfile_X25Answer_Enabled=answerProfile_X25Answer_Enabled, answerProfile_X25Answer_MaxCalls=answerProfile_X25Answer_MaxCalls, answerProfile_SessionInfo_IdleTimer=answerProfile_SessionInfo_IdleTimer, answerProfile_MppAnswer_Enabled=answerProfile_MppAnswer_Enabled, answerProfile_PppAnswer_MaxPapAuthRetry=answerProfile_PppAnswer_MaxPapAuthRetry, answerProfile_ClidAuthMode=answerProfile_ClidAuthMode, answerProfile_ClidSelection=answerProfile_ClidSelection, answerProfile_X25Answer_VcTimerEnable=answerProfile_X25Answer_VcTimerEnable, answerProfile_PriorityAnswer_Enabled=answerProfile_PriorityAnswer_Enabled, mibanswerProfileTable=mibanswerProfileTable, answerProfile_PppAnswer_Mtu=answerProfile_PppAnswer_Mtu, answerProfile_PppAnswer_BridgingGroup=answerProfile_PppAnswer_BridgingGroup, answerProfile_SessionInfo_DataFilter=answerProfile_SessionInfo_DataFilter, answerProfile_PppAnswer_CbcpEnabled=answerProfile_PppAnswer_CbcpEnabled, answerProfile_SessionInfo_TsIdleTimer=answerProfile_SessionInfo_TsIdleTimer, answerProfile_SessionInfo_CallFilter=answerProfile_SessionInfo_CallFilter, answerProfile_X75Answer_FrameLength=answerProfile_X75Answer_FrameLength, answerProfile_PppAnswer_BiDirectionalAuth=answerProfile_PppAnswer_BiDirectionalAuth, answerProfile_PriorityAnswer_MaximumRtpPort=answerProfile_PriorityAnswer_MaximumRtpPort, answerProfile_TcpClearAnswer_Enabled=answerProfile_TcpClearAnswer_Enabled, answerProfile_AraAnswer_Enabled=answerProfile_AraAnswer_Enabled, answerProfile_IpxAnswer_Enabled=answerProfile_IpxAnswer_Enabled, answerProfile_MppAnswer_SecondsHistory=answerProfile_MppAnswer_SecondsHistory, answerProfile_FrAnswer_Enabled=answerProfile_FrAnswer_Enabled, answerProfile_V120Answer_FrameLength=answerProfile_V120Answer_FrameLength, answerProfile_MppAnswer_TargetUtilization=answerProfile_MppAnswer_TargetUtilization, mibanswerProfileEntry=mibanswerProfileEntry, answerProfile_MppAnswer_DecrementChannelCount=answerProfile_MppAnswer_DecrementChannelCount, answerProfile_X25Answer_X25Profile=answerProfile_X25Answer_X25Profile, answerProfile_SessionInfo_FilterRequired=answerProfile_SessionInfo_FilterRequired, answerProfile_X25Answer_X3CustomProf=answerProfile_X25Answer_X3CustomProf, answerProfile_Visa2Answer_Enabled=answerProfile_Visa2Answer_Enabled, answerProfile_MpAnswer_Enabled=answerProfile_MpAnswer_Enabled, answerProfile_MpAnswer_MaximumChannels=answerProfile_MpAnswer_MaximumChannels, answerProfile_X25Answer_AutoCallX121Address=answerProfile_X25Answer_AutoCallX121Address, answerProfile_PppAnswer_Enabled=answerProfile_PppAnswer_Enabled, answerProfile_AtmAnswer_SvcEnabled=answerProfile_AtmAnswer_SvcEnabled, answerProfile_SessionInfo_MaxCallDuration=answerProfile_SessionInfo_MaxCallDuration, answerProfile_X25Answer_ReverseCharge=answerProfile_X25Answer_ReverseCharge, answerProfile_X75Answer_N2Retransmissions=answerProfile_X75Answer_N2Retransmissions, answerProfile_FramedOnly=answerProfile_FramedOnly, answerProfile_IpAnswer_Enabled=answerProfile_IpAnswer_Enabled, answerProfile_PriorityAnswer_NoHighPrioPktDuration=answerProfile_PriorityAnswer_NoHighPrioPktDuration, answerProfile_IpAnswer_RoutingMetric=answerProfile_IpAnswer_RoutingMetric, answerProfile_PriorityAnswer_MaxRtpPacketDelay=answerProfile_PriorityAnswer_MaxRtpPacketDelay, answerProfile_PppAnswer_MaxPppConfigureRetry=answerProfile_PppAnswer_MaxPppConfigureRetry, answerProfile_UseAnswerForAllDefaults=answerProfile_UseAnswerForAllDefaults, answerProfile_Force56kbps=answerProfile_Force56kbps, answerProfile_EuAnswer_EurawEnabled=answerProfile_EuAnswer_EurawEnabled, DisplayString=DisplayString, answerProfile_PppAnswer_LqmMaximumPeriod=answerProfile_PppAnswer_LqmMaximumPeriod, answerProfile_Action_o=answerProfile_Action_o, answerProfile_EuAnswer_Mru=answerProfile_EuAnswer_Mru, answerProfile_PppAnswer_LinkCompression=answerProfile_PppAnswer_LinkCompression, answerProfile_PppAnswer_MaxPppRestartTimer=answerProfile_PppAnswer_MaxPppRestartTimer, answerProfile_EuAnswer_EuuiEnabled=answerProfile_EuAnswer_EuuiEnabled, answerProfile_IpAnswer_AssignAddress=answerProfile_IpAnswer_AssignAddress, answerProfile_PppAnswer_ReceiveAuthMode=answerProfile_PppAnswer_ReceiveAuthMode, answerProfile_EuAnswer_DteAddr=answerProfile_EuAnswer_DteAddr, answerProfile_HdlcNrmAnswer_Enabled=answerProfile_HdlcNrmAnswer_Enabled, answerProfile_IpxAnswer_PeerMode=answerProfile_IpxAnswer_PeerMode, answerProfile_CallbackClidPrefix=answerProfile_CallbackClidPrefix, answerProfile_X25Answer_X3Profile=answerProfile_X25Answer_X3Profile, answerProfile_MppAnswer_IncrementChannelCount=answerProfile_MppAnswer_IncrementChannelCount, answerProfile_Index_o=answerProfile_Index_o, answerProfile_ProfilesRequired=answerProfile_ProfilesRequired, answerProfile_PriorityAnswer_MinimumRtpPort=answerProfile_PriorityAnswer_MinimumRtpPort, answerProfile_PppAnswer_SubstituteSendName=answerProfile_PppAnswer_SubstituteSendName, answerProfile_MppAnswer_SubPersistence=answerProfile_MppAnswer_SubPersistence, answerProfile_IpAnswer_PoolForAsyncFramedUser=answerProfile_IpAnswer_PoolForAsyncFramedUser, answerProfile_EuAnswer_DceAddr=answerProfile_EuAnswer_DceAddr, answerProfile_X75Answer_T1RetranTimer=answerProfile_X75Answer_T1RetranTimer, answerProfile_MppAnswer_BandwidthMonitorDirection=answerProfile_MppAnswer_BandwidthMonitorDirection, answerProfile_PppAnswer_LqmMinimumPeriod=answerProfile_PppAnswer_LqmMinimumPeriod, answerProfile_PppAnswer_IpxHeaderCompression=answerProfile_PppAnswer_IpxHeaderCompression, answerProfile_PppAnswer_Mru=answerProfile_PppAnswer_Mru, answerProfile_MpAnswer_BacpEnable=answerProfile_MpAnswer_BacpEnable, answerProfile_PppAnswer_DisconnectOnAuthTimeout=answerProfile_PppAnswer_DisconnectOnAuthTimeout, mibanswerProfile=mibanswerProfile, answerProfile_X75Answer_Enabled=answerProfile_X75Answer_Enabled, answerProfile_PppAnswer_PppRestartTimer=answerProfile_PppAnswer_PppRestartTimer, answerProfile_PriorityAnswer_PacketClassification=answerProfile_PriorityAnswer_PacketClassification, answerProfile_IpAnswer_PrivateRouteProfileRequired=answerProfile_IpAnswer_PrivateRouteProfileRequired, answerProfile_PppAnswer_AuthForAsyncFramedUsers=answerProfile_PppAnswer_AuthForAsyncFramedUsers, answerProfile_IpAnswer_VjHeaderPrediction=answerProfile_IpAnswer_VjHeaderPrediction, answerProfile_SessionInfo_TsIdleMode=answerProfile_SessionInfo_TsIdleMode, answerProfile_MppAnswer_AddPersistence=answerProfile_MppAnswer_AddPersistence, answerProfile_X75Answer_KFramesOutstanding=answerProfile_X75Answer_KFramesOutstanding, answerProfile_SessionInfo_FilterPersistence=answerProfile_SessionInfo_FilterPersistence)
