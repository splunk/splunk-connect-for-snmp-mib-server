#
# PySNMP MIB module ALCATEL-IND1-UDLD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-UDLD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:04:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Udld, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Udld")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, iso, Gauge32, Bits, MibIdentifier, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Counter32, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "iso", "Gauge32", "Bits", "MibIdentifier", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Counter32", "Integer32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
alcatelIND1UDLDMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1))
alcatelIND1UDLDMIB.setRevisions(('2007-02-14 00:00',))
if mibBuilder.loadTexts: alcatelIND1UDLDMIB.setLastUpdated('200702140000Z')
if mibBuilder.loadTexts: alcatelIND1UDLDMIB.setOrganization('Alcatel - Architects Of An Internet World')
alcatelIND1UDLDMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1))
if mibBuilder.loadTexts: alcatelIND1UDLDMIBObjects.setStatus('current')
alcatelIND1UDLDMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2))
if mibBuilder.loadTexts: alcatelIND1UDLDMIBConformance.setStatus('current')
alcatelIND1UDLDMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1UDLDMIBGroups.setStatus('current')
alcatelIND1UDLDMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1UDLDMIBCompliances.setStatus('current')
alaUdldGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldGlobalStatus.setStatus('current')
alaUdldGlobalClearStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldGlobalClearStats.setStatus('current')
alaUdldGlobalConfigUdldMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("aggressive", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldGlobalConfigUdldMode.setStatus('current')
alaUdldGlobalConfigUdldProbeIntervalTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(7, 90)).clone(15)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldGlobalConfigUdldProbeIntervalTimer.setStatus('current')
alaUdldGlobalConfigUdldDetectionPeriodTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(8)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldGlobalConfigUdldDetectionPeriodTimer.setStatus('current')
udldPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6))
alaUdldPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6, 1), )
if mibBuilder.loadTexts: alaUdldPortConfigTable.setStatus('current')
alaUdldPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-UDLD-MIB", "alaUdldPortConfigIfIndex"))
if mibBuilder.loadTexts: alaUdldPortConfigEntry.setStatus('current')
alaUdldPortConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaUdldPortConfigIfIndex.setStatus('current')
alaUdldPortConfigUdldStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldPortConfigUdldStatus.setStatus('current')
alaUdldPortConfigUdldMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("aggressive", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldPortConfigUdldMode.setStatus('current')
alaUdldPortConfigUdldProbeIntervalTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(7, 90)).clone(15)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldPortConfigUdldProbeIntervalTimer.setStatus('current')
alaUdldPortConfigUdldDetectionPeriodTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(8)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldPortConfigUdldDetectionPeriodTimer.setStatus('current')
alaUdldPortConfigUdldOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notapplicable", 0), ("shutdown", 1), ("undetermined", 2), ("bidirectional", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldPortConfigUdldOperationalStatus.setStatus('current')
udldPortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7))
alaUdldPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1), )
if mibBuilder.loadTexts: alaUdldPortStatsTable.setStatus('current')
alaUdldPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-UDLD-MIB", "alaUdldPortStatsIfIndex"))
if mibBuilder.loadTexts: alaUdldPortStatsEntry.setStatus('current')
alaUdldPortStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaUdldPortStatsIfIndex.setStatus('current')
alaUdldNumUDLDNeighbors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldNumUDLDNeighbors.setStatus('current')
alaUdldPortStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaUdldPortStatsClear.setStatus('current')
alaUdldPortNumProbeSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldPortNumProbeSent.setStatus('current')
alaUdldPortNumEchoSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldPortNumEchoSent.setStatus('current')
alaUdldPortNumInvalidRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldPortNumInvalidRcvd.setStatus('current')
alaUdldPortNumFlushRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldPortNumFlushRcvd.setStatus('current')
udldPortNeighborStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 8))
alaUdldPortNeighborStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 8, 1), )
if mibBuilder.loadTexts: alaUdldPortNeighborStatsTable.setStatus('current')
alaUdldPortNeighborStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 8, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-UDLD-MIB", "alaUdldPortNeighborStatsIfIndex"), (0, "ALCATEL-IND1-UDLD-MIB", "alaUdldNeighborIfIndex"))
if mibBuilder.loadTexts: alaUdldPortNeighborStatsEntry.setStatus('current')
alaUdldPortNeighborStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 8, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaUdldPortNeighborStatsIfIndex.setStatus('current')
alaUdldNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 8, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: alaUdldNeighborIfIndex.setStatus('current')
alaUdldNeighborName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 8, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldNeighborName.setStatus('current')
alaUdldNumHelloRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldNumHelloRcvd.setStatus('current')
alaUdldNumEchoRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 8, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaUdldNumEchoRcvd.setStatus('current')
alaUdldPrevState = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notapplicable", 0), ("shutdown", 1), ("undetermined", 2), ("bidirectional", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaUdldPrevState.setStatus('current')
alaUdldCurrentState = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notapplicable", 0), ("shutdown", 1), ("undetermined", 2), ("bidirectional", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaUdldCurrentState.setStatus('current')
alaUdldPortIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 1, 11), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaUdldPortIfIndex.setStatus('current')
alaUdldEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 3))
udldStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 3, 0, 1)).setObjects(("ALCATEL-IND1-UDLD-MIB", "alaUdldPortIfIndex"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPrevState"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldCurrentState"))
if mibBuilder.loadTexts: udldStateChange.setStatus('current')
alcatelIND1UDLDMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-UDLD-MIB", "udldPortBaseGroup"), ("ALCATEL-IND1-UDLD-MIB", "udldPortConfigGroup"), ("ALCATEL-IND1-UDLD-MIB", "udldPortStatsGroup"), ("ALCATEL-IND1-UDLD-MIB", "udldPortNeighborStatsGroup"), ("ALCATEL-IND1-UDLD-MIB", "udldPortTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1UDLDMIBCompliance = alcatelIND1UDLDMIBCompliance.setStatus('current')
udldPortBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-UDLD-MIB", "alaUdldGlobalStatus"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldGlobalClearStats"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldGlobalConfigUdldMode"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldGlobalConfigUdldProbeIntervalTimer"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldGlobalConfigUdldDetectionPeriodTimer"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPrevState"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldCurrentState"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udldPortBaseGroup = udldPortBaseGroup.setStatus('current')
udldPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-UDLD-MIB", "alaUdldPortConfigUdldStatus"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortConfigUdldMode"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortConfigUdldProbeIntervalTimer"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortConfigUdldDetectionPeriodTimer"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortConfigUdldOperationalStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udldPortConfigGroup = udldPortConfigGroup.setStatus('current')
udldPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-UDLD-MIB", "alaUdldNumUDLDNeighbors"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortStatsClear"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortNumProbeSent"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortNumEchoSent"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortNumInvalidRcvd"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldPortNumFlushRcvd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udldPortStatsGroup = udldPortStatsGroup.setStatus('current')
udldPortNeighborStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-UDLD-MIB", "alaUdldNeighborName"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldNumHelloRcvd"), ("ALCATEL-IND1-UDLD-MIB", "alaUdldNumEchoRcvd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udldPortNeighborStatsGroup = udldPortNeighborStatsGroup.setStatus('current')
udldPortTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 44, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-UDLD-MIB", "udldStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    udldPortTrapGroup = udldPortTrapGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-UDLD-MIB", udldPortConfig=udldPortConfig, alcatelIND1UDLDMIBCompliances=alcatelIND1UDLDMIBCompliances, PYSNMP_MODULE_ID=alcatelIND1UDLDMIB, alaUdldPortConfigTable=alaUdldPortConfigTable, alaUdldPortConfigUdldDetectionPeriodTimer=alaUdldPortConfigUdldDetectionPeriodTimer, alcatelIND1UDLDMIBCompliance=alcatelIND1UDLDMIBCompliance, udldStateChange=udldStateChange, alaUdldPortStatsEntry=alaUdldPortStatsEntry, alaUdldPortConfigUdldProbeIntervalTimer=alaUdldPortConfigUdldProbeIntervalTimer, alaUdldPortConfigUdldMode=alaUdldPortConfigUdldMode, alaUdldPortConfigIfIndex=alaUdldPortConfigIfIndex, alaUdldGlobalConfigUdldDetectionPeriodTimer=alaUdldGlobalConfigUdldDetectionPeriodTimer, alaUdldPortStatsTable=alaUdldPortStatsTable, alaUdldNumUDLDNeighbors=alaUdldNumUDLDNeighbors, alcatelIND1UDLDMIBObjects=alcatelIND1UDLDMIBObjects, alcatelIND1UDLDMIB=alcatelIND1UDLDMIB, alaUdldPortStatsClear=alaUdldPortStatsClear, alaUdldGlobalConfigUdldProbeIntervalTimer=alaUdldGlobalConfigUdldProbeIntervalTimer, alaUdldNeighborIfIndex=alaUdldNeighborIfIndex, alaUdldEvents=alaUdldEvents, alaUdldNeighborName=alaUdldNeighborName, alaUdldPrevState=alaUdldPrevState, udldPortStatsGroup=udldPortStatsGroup, alcatelIND1UDLDMIBConformance=alcatelIND1UDLDMIBConformance, alaUdldGlobalStatus=alaUdldGlobalStatus, alaUdldPortNeighborStatsTable=alaUdldPortNeighborStatsTable, alaUdldPortNeighborStatsEntry=alaUdldPortNeighborStatsEntry, alaUdldPortConfigEntry=alaUdldPortConfigEntry, alaUdldPortConfigUdldOperationalStatus=alaUdldPortConfigUdldOperationalStatus, alaUdldPortNumInvalidRcvd=alaUdldPortNumInvalidRcvd, alaUdldPortNeighborStatsIfIndex=alaUdldPortNeighborStatsIfIndex, alaUdldPortIfIndex=alaUdldPortIfIndex, alcatelIND1UDLDMIBGroups=alcatelIND1UDLDMIBGroups, udldPortStats=udldPortStats, alaUdldPortNumEchoSent=alaUdldPortNumEchoSent, udldPortConfigGroup=udldPortConfigGroup, alaUdldPortNumProbeSent=alaUdldPortNumProbeSent, alaUdldGlobalConfigUdldMode=alaUdldGlobalConfigUdldMode, alaUdldPortConfigUdldStatus=alaUdldPortConfigUdldStatus, alaUdldPortStatsIfIndex=alaUdldPortStatsIfIndex, udldPortTrapGroup=udldPortTrapGroup, udldPortNeighborStats=udldPortNeighborStats, alaUdldCurrentState=alaUdldCurrentState, alaUdldNumHelloRcvd=alaUdldNumHelloRcvd, udldPortNeighborStatsGroup=udldPortNeighborStatsGroup, alaUdldPortNumFlushRcvd=alaUdldPortNumFlushRcvd, alaUdldGlobalClearStats=alaUdldGlobalClearStats, udldPortBaseGroup=udldPortBaseGroup, alaUdldNumEchoRcvd=alaUdldNumEchoRcvd)
