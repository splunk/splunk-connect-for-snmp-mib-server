#
# PySNMP MIB module HH3C-LLDP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-LLDP-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
LldpPortNumber, = mibBuilder.importSymbols("LLDP-MIB", "LldpPortNumber")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, Unsigned32, iso, ModuleIdentity, Integer32, Counter32, Bits, ObjectIdentity, MibIdentifier, IpAddress, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "Unsigned32", "iso", "ModuleIdentity", "Integer32", "Counter32", "Bits", "ObjectIdentity", "MibIdentifier", "IpAddress", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
hh3clldp = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 100))
hh3clldp.setRevisions(('2009-03-21 00:00',))
if mibBuilder.loadTexts: hh3clldp.setLastUpdated('200903210000Z')
if mibBuilder.loadTexts: hh3clldp.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3clldpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 100, 1))
hh3clldpConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 100, 1, 1))
hh3clldpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 100, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3clldpAdminStatus.setStatus('current')
hh3clldpComplianceCDPStatus = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 100, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3clldpComplianceCDPStatus.setStatus('current')
hh3clldpPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 100, 1, 1, 3), )
if mibBuilder.loadTexts: hh3clldpPortConfigTable.setStatus('current')
hh3clldpPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 100, 1, 1, 3, 1), ).setIndexNames((0, "HH3C-LLDP-EXT-MIB", "hh3clldpPortConfigPortNum"))
if mibBuilder.loadTexts: hh3clldpPortConfigEntry.setStatus('current')
hh3clldpPortConfigPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 100, 1, 1, 3, 1, 1), LldpPortNumber())
if mibBuilder.loadTexts: hh3clldpPortConfigPortNum.setStatus('current')
hh3clldpPortConfigCDPComplianceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 100, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("txAndRx", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3clldpPortConfigCDPComplianceStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-LLDP-EXT-MIB", hh3clldpConfiguration=hh3clldpConfiguration, hh3clldpPortConfigCDPComplianceStatus=hh3clldpPortConfigCDPComplianceStatus, hh3clldpAdminStatus=hh3clldpAdminStatus, hh3clldpObjects=hh3clldpObjects, hh3clldpComplianceCDPStatus=hh3clldpComplianceCDPStatus, hh3clldpPortConfigTable=hh3clldpPortConfigTable, PYSNMP_MODULE_ID=hh3clldp, hh3clldpPortConfigEntry=hh3clldpPortConfigEntry, hh3clldp=hh3clldp, hh3clldpPortConfigPortNum=hh3clldpPortConfigPortNum)
