#
# PySNMP MIB module STN-LOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-LOG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, NotificationType, Counter64, Unsigned32, ModuleIdentity, Bits, Gauge32, TimeTicks, IpAddress, iso, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "NotificationType", "Counter64", "Unsigned32", "ModuleIdentity", "Bits", "Gauge32", "TimeTicks", "IpAddress", "iso", "MibIdentifier", "ObjectIdentity")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
stnSystems, stnNotification = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnSystems", "stnNotification")
stnEngineSlot, stnEngineIndex, stnEngineCpu = mibBuilder.importSymbols("STN-CHASSIS-MIB", "stnEngineSlot", "stnEngineIndex", "stnEngineCpu")
stnLog = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 13))
if mibBuilder.loadTexts: stnLog.setLastUpdated('0002160000Z')
if mibBuilder.loadTexts: stnLog.setOrganization('Spring Tide Networks, Inc.')
stnLogObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1))
stnLogMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 13, 2))
stnLogState = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogState.setStatus('current')
stnLogFlushTimer = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFlushTimer.setStatus('current')
stnLogMaxDisplay = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogMaxDisplay.setStatus('current')
stnLogServerTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 4), )
if mibBuilder.loadTexts: stnLogServerTable.setStatus('current')
stnLogServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 4, 1), ).setIndexNames((0, "STN-LOG-MIB", "stnLogServerIndex"))
if mibBuilder.loadTexts: stnLogServerEntry.setStatus('current')
stnLogServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogServerIndex.setStatus('current')
stnLogServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("flash", 1), ("syslog", 2), ("nma", 3), ("serial", 4), ("debug-serial", 5))).clone('flash')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogServerType.setStatus('current')
stnLogServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogServerIpAddress.setStatus('current')
stnLogServerFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogServerFacility.setStatus('current')
stnLogServerFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogServerFileSize.setStatus('current')
stnLogFilterTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5), )
if mibBuilder.loadTexts: stnLogFilterTable.setStatus('current')
stnLogFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1), ).setIndexNames((0, "STN-LOG-MIB", "stnLogFilterEngineId"), (0, "STN-LOG-MIB", "stnLogFilterMcId"))
if mibBuilder.loadTexts: stnLogFilterEntry.setStatus('current')
stnLogFilterEngineId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterEngineId.setStatus('current')
stnLogFilterMcId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterMcId.setStatus('current')
stnLogFilterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterPriority.setStatus('current')
stnLogFilterSeverityFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterSeverityFatal.setStatus('current')
stnLogFilterSeverityError = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterSeverityError.setStatus('current')
stnLogFilterSeverityWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterSeverityWarning.setStatus('current')
stnLogFilterSeverityInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterSeverityInfo.setStatus('current')
stnLogFilterSeverityTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterSeverityTrace.setStatus('current')
stnLogFilterSeverityDebug = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 5, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogFilterSeverityDebug.setStatus('current')
stnLogEventTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 6), )
if mibBuilder.loadTexts: stnLogEventTable.setStatus('current')
stnLogEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 6, 1), ).setIndexNames((0, "STN-LOG-MIB", "stnLogEventIndex"))
if mibBuilder.loadTexts: stnLogEventEntry.setStatus('current')
stnLogEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogEventIndex.setStatus('current')
stnLogEventEngineId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogEventEngineId.setStatus('current')
stnLogEventMcName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogEventMcName.setStatus('current')
stnLogEventPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogEventPriority.setStatus('current')
stnLogEventTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogEventTimeStamp.setStatus('current')
stnLogEventMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 13, 1, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnLogEventMessage.setStatus('current')
stnEventLogServerFailure = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 24)).setObjects(("STN-LOG-MIB", "stnLogServerIndex"), ("STN-LOG-MIB", "stnLogServerType"), ("STN-LOG-MIB", "stnLogServerIpAddress"))
if mibBuilder.loadTexts: stnEventLogServerFailure.setStatus('current')
stnEventLogInternalFailure = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 100, 0, 25)).setObjects(("STN-CHASSIS-MIB", "stnEngineIndex"), ("STN-CHASSIS-MIB", "stnEngineSlot"), ("STN-CHASSIS-MIB", "stnEngineCpu"))
if mibBuilder.loadTexts: stnEventLogInternalFailure.setStatus('current')
mibBuilder.exportSymbols("STN-LOG-MIB", stnLog=stnLog, stnLogFilterMcId=stnLogFilterMcId, stnLogFilterTable=stnLogFilterTable, stnLogServerIpAddress=stnLogServerIpAddress, stnEventLogInternalFailure=stnEventLogInternalFailure, stnLogEventEngineId=stnLogEventEngineId, PYSNMP_MODULE_ID=stnLog, stnLogFlushTimer=stnLogFlushTimer, stnLogEventEntry=stnLogEventEntry, stnLogEventTimeStamp=stnLogEventTimeStamp, stnLogFilterSeverityDebug=stnLogFilterSeverityDebug, stnLogServerFacility=stnLogServerFacility, stnLogFilterEngineId=stnLogFilterEngineId, stnLogServerTable=stnLogServerTable, stnLogServerType=stnLogServerType, stnLogFilterEntry=stnLogFilterEntry, stnLogEventTable=stnLogEventTable, stnLogEventPriority=stnLogEventPriority, stnLogFilterSeverityFatal=stnLogFilterSeverityFatal, stnLogFilterSeverityWarning=stnLogFilterSeverityWarning, stnLogFilterSeverityInfo=stnLogFilterSeverityInfo, stnEventLogServerFailure=stnEventLogServerFailure, stnLogEventMessage=stnLogEventMessage, stnLogMaxDisplay=stnLogMaxDisplay, stnLogFilterSeverityTrace=stnLogFilterSeverityTrace, stnLogEventMcName=stnLogEventMcName, stnLogFilterPriority=stnLogFilterPriority, stnLogServerEntry=stnLogServerEntry, stnLogFilterSeverityError=stnLogFilterSeverityError, stnLogServerFileSize=stnLogServerFileSize, stnLogMibConformance=stnLogMibConformance, stnLogObjects=stnLogObjects, stnLogState=stnLogState, stnLogEventIndex=stnLogEventIndex, stnLogServerIndex=stnLogServerIndex)
