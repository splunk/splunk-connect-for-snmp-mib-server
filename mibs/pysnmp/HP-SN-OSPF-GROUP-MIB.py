#
# PySNMP MIB module HP-SN-OSPF-GROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-SN-MIBS
# Produced by pysmi-0.3.4 at Mon Apr 29 19:23:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
snOspf, = mibBuilder.importSymbols("HP-SN-ROOT-MIB", "snOspf")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, Counter32, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Gauge32, NotificationType, Unsigned32, ObjectIdentity, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Counter32", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Gauge32", "NotificationType", "Unsigned32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class AreaID(IpAddress):
    pass

class RouterID(IpAddress):
    pass

class Metric(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class BigMetric(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 16777215)

class TruthVal(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("false", 0), ("true", 1))

class RtrStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disabled", 0), ("enabled", 1))

class PositiveInteger(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class HelloRange(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 65535)

class UpToMaxAge(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 3600)

class DesignatedRouterPriority(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class TOSType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 30)

snOspfGen = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1))
snOspfArea = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2))
snOspfAddrRange = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3))
snOspfIntf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4))
snOspfVirtIf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5))
snOspfRedis = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6))
snOspfNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7))
snOspfVirtNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8))
snOspfLsdb = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9))
snOspfExtLsdb = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10))
snOspfAreaStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11))
snOspfIfStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12))
snOspfVirtIfStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13))
snOspfRoutingInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14))
snOspfTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15))
snOspfRouterId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 1), RouterID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRouterId.setStatus('mandatory')
snOspfAdminStat = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 2), RtrStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfAdminStat.setStatus('mandatory')
snOspfASBdrRtrStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 3), TruthVal()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfASBdrRtrStatus.setStatus('mandatory')
snOspfRedisMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 4), RtrStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisMode.setStatus('mandatory')
snOspfDefaultOspfMetricValue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfDefaultOspfMetricValue.setStatus('mandatory')
snOspfExternLSACount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExternLSACount.setStatus('mandatory')
snOspfExternLSACksumSum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExternLSACksumSum.setStatus('mandatory')
snOspfOriginateNewLSAs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfOriginateNewLSAs.setStatus('mandatory')
snOspfRxNewLSAs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfRxNewLSAs.setStatus('mandatory')
snOspfOspfRedisMetricType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfOspfRedisMetricType.setStatus('mandatory')
snOspfExtLsdbLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfExtLsdbLimit.setStatus('mandatory')
snOspfExitOverflowInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfExitOverflowInterval.setStatus('mandatory')
snOspfRfc1583Compatibility = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRfc1583Compatibility.setStatus('mandatory')
snOspfRouterIdFormat = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRouterIdFormat.setStatus('mandatory')
snOspfDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfDistance.setStatus('obsolete')
snOspfDistanceIntra = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfDistanceIntra.setStatus('mandatory')
snOspfDistanceInter = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfDistanceInter.setStatus('mandatory')
snOspfDistanceExternal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfDistanceExternal.setStatus('mandatory')
snOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1), )
if mibBuilder.loadTexts: snOspfAreaTable.setStatus('mandatory')
snOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfAreaId"))
if mibBuilder.loadTexts: snOspfAreaEntry.setStatus('mandatory')
snOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaId.setStatus('mandatory')
snOspfImportASExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 2), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfImportASExtern.setStatus('mandatory')
snOspfStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 3), BigMetric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfStubMetric.setStatus('mandatory')
snOspfAreaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfAreaRowStatus.setStatus('mandatory')
snOspfAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfAreaIdFormat.setStatus('mandatory')
snOspfAreaRangeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1), )
if mibBuilder.loadTexts: snOspfAreaRangeTable.setStatus('mandatory')
snOspfAreaRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfAreaRangeAreaID"), (0, "HP-SN-OSPF-GROUP-MIB", "snOspfAreaRangeNet"))
if mibBuilder.loadTexts: snOspfAreaRangeEntry.setStatus('mandatory')
snOspfAreaRangeAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaRangeAreaID.setStatus('mandatory')
snOspfAreaRangeNet = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaRangeNet.setStatus('mandatory')
snOspfAreaRangeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfAreaRangeMask.setStatus('mandatory')
snOspfAreaRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfAreaRangeRowStatus.setStatus('mandatory')
snOspfAreaRangeAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaRangeAreaIdFormat.setStatus('mandatory')
snOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1), )
if mibBuilder.loadTexts: snOspfIfTable.setStatus('deprecated')
snOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfIfPort"))
if mibBuilder.loadTexts: snOspfIfEntry.setStatus('deprecated')
snOspfIfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfPort.setStatus('deprecated')
snOspfIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 2), AreaID().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfAreaId.setStatus('deprecated')
snOspfIfAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 3), RtrStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfAdminStat.setStatus('deprecated')
snOspfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 4), DesignatedRouterPriority().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfRtrPriority.setStatus('deprecated')
snOspfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 5), UpToMaxAge().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfTransitDelay.setStatus('deprecated')
snOspfIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 6), UpToMaxAge().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfRetransInterval.setStatus('deprecated')
snOspfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 7), HelloRange().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfHelloInterval.setStatus('deprecated')
snOspfIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 8), PositiveInteger().clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfRtrDeadInterval.setStatus('deprecated')
snOspfIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfAuthType.setStatus('deprecated')
snOspfIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)).clone(hexValue="0000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfAuthKey.setStatus('deprecated')
snOspfIfMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfMetricValue.setStatus('deprecated')
snOspfIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfRowStatus.setStatus('deprecated')
snOspfIfMd5AuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfMd5AuthKeyId.setStatus('deprecated')
snOspfIfMd5AuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfMd5AuthKey.setStatus('deprecated')
snOspfIfMd5ActivationWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfMd5ActivationWaitTime.setStatus('deprecated')
snOspfIfAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfAreaIdFormat.setStatus('deprecated')
snOspfIfPassiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfPassiveMode.setStatus('deprecated')
snOspfIfDatabaseFilterAllOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfDatabaseFilterAllOut.setStatus('deprecated')
snOspfIfMtuIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfMtuIgnore.setStatus('deprecated')
snOspfIfNetworkP2mp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIfNetworkP2mp.setStatus('deprecated')
snOspfIf2Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2), )
if mibBuilder.loadTexts: snOspfIf2Table.setStatus('mandatory')
snOspfIf2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfIf2Port"))
if mibBuilder.loadTexts: snOspfIf2Entry.setStatus('mandatory')
snOspfIf2Port = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIf2Port.setStatus('mandatory')
snOspfIf2AreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 2), AreaID().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2AreaId.setStatus('mandatory')
snOspfIf2AdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 3), RtrStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2AdminStat.setStatus('mandatory')
snOspfIf2RtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 4), DesignatedRouterPriority().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2RtrPriority.setStatus('mandatory')
snOspfIf2TransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 5), UpToMaxAge().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2TransitDelay.setStatus('mandatory')
snOspfIf2RetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 6), UpToMaxAge().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2RetransInterval.setStatus('mandatory')
snOspfIf2HelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 7), HelloRange().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2HelloInterval.setStatus('mandatory')
snOspfIf2RtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 8), PositiveInteger().clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2RtrDeadInterval.setStatus('mandatory')
snOspfIf2AuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2AuthType.setStatus('mandatory')
snOspfIf2AuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)).clone(hexValue="0000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2AuthKey.setStatus('mandatory')
snOspfIf2MetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2MetricValue.setStatus('mandatory')
snOspfIf2RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2RowStatus.setStatus('mandatory')
snOspfIf2Md5AuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2Md5AuthKeyId.setStatus('mandatory')
snOspfIf2Md5AuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2Md5AuthKey.setStatus('mandatory')
snOspfIf2Md5ActivationWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2Md5ActivationWaitTime.setStatus('mandatory')
snOspfIf2AreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIf2AreaIdFormat.setStatus('mandatory')
snOspfIf2PassiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2PassiveMode.setStatus('mandatory')
snOspfIf2DatabaseFilterAllOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2DatabaseFilterAllOut.setStatus('mandatory')
snOspfIf2MtuIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2MtuIgnore.setStatus('mandatory')
snOspfIf2NetworkP2mp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfIf2NetworkP2mp.setStatus('mandatory')
snOspfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1), )
if mibBuilder.loadTexts: snOspfVirtIfTable.setStatus('mandatory')
snOspfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfVirtIfAreaID"), (0, "HP-SN-OSPF-GROUP-MIB", "snOspfVirtIfNeighbor"))
if mibBuilder.loadTexts: snOspfVirtIfEntry.setStatus('mandatory')
snOspfVirtIfAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfAreaID.setStatus('mandatory')
snOspfVirtIfNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfNeighbor.setStatus('mandatory')
snOspfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 3), UpToMaxAge().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfTransitDelay.setStatus('mandatory')
snOspfVirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 4), UpToMaxAge().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfRetransInterval.setStatus('mandatory')
snOspfVirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 5), HelloRange().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfHelloInterval.setStatus('mandatory')
snOspfVirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 6), PositiveInteger().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfRtrDeadInterval.setStatus('mandatory')
snOspfVirtIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfAuthType.setStatus('mandatory')
snOspfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)).clone(hexValue="0000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfAuthKey.setStatus('mandatory')
snOspfVirtIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfRowStatus.setStatus('mandatory')
snOspfVirtIfMd5AuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfMd5AuthKeyId.setStatus('mandatory')
snOspfVirtIfMd5AuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone(hexValue="0000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfMd5AuthKey.setStatus('mandatory')
snOspfVirtIfMd5ActivationWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfVirtIfMd5ActivationWaitTime.setStatus('mandatory')
snOspfVirtIfAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfAreaIdFormat.setStatus('mandatory')
snOspfRedisTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1), )
if mibBuilder.loadTexts: snOspfRedisTable.setStatus('mandatory')
snOspfRedisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfRedisIndex"))
if mibBuilder.loadTexts: snOspfRedisEntry.setStatus('mandatory')
snOspfRedisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfRedisIndex.setStatus('mandatory')
snOspfRedisIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisIpAddress.setStatus('mandatory')
snOspfRedisMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisMask.setStatus('mandatory')
snOspfRedisAction = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noImport", 0), ("import", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisAction.setStatus('mandatory')
snOspfRedisProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("rip", 1), ("all", 2), ("static", 3), ("bgp", 4), ("connected", 5), ("isis", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisProtocol.setStatus('mandatory')
snOspfRedisSetOspfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisSetOspfMetric.setStatus('mandatory')
snOspfRedisOspfMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 7), Metric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisOspfMetricValue.setStatus('mandatory')
snOspfRedisMatchRipMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisMatchRipMetric.setStatus('mandatory')
snOspfRedisRipMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisRipMetricValue.setStatus('mandatory')
snOspfRedisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfRedisRowStatus.setStatus('mandatory')
snOspfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1), )
if mibBuilder.loadTexts: snOspfNbrTable.setStatus('mandatory')
snOspfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfNbrEntryIndex"))
if mibBuilder.loadTexts: snOspfNbrEntry.setStatus('mandatory')
snOspfNbrEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrEntryIndex.setStatus('mandatory')
snOspfNbrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrPort.setStatus('mandatory')
snOspfNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrIpAddr.setStatus('mandatory')
snOspfNbrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrIndex.setStatus('mandatory')
snOspfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 5), RouterID().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrRtrId.setStatus('mandatory')
snOspfNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrOptions.setStatus('mandatory')
snOspfNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 7), DesignatedRouterPriority().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrPriority.setStatus('mandatory')
snOspfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrState.setStatus('mandatory')
snOspfNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrEvents.setStatus('mandatory')
snOspfNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 7, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfNbrLsRetransQLen.setStatus('mandatory')
snOspfVirtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1), )
if mibBuilder.loadTexts: snOspfVirtNbrTable.setStatus('mandatory')
snOspfVirtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfVirtNbrEntryIndex"))
if mibBuilder.loadTexts: snOspfVirtNbrEntry.setStatus('mandatory')
snOspfVirtNbrEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrEntryIndex.setStatus('mandatory')
snOspfVirtNbrArea = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrArea.setStatus('mandatory')
snOspfVirtNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrRtrId.setStatus('mandatory')
snOspfVirtNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrIpAddr.setStatus('mandatory')
snOspfVirtNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrOptions.setStatus('mandatory')
snOspfVirtNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrState.setStatus('mandatory')
snOspfVirtNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrEvents.setStatus('mandatory')
snOspfVirtNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrLSRetransQLen.setStatus('mandatory')
snOspfVirtNbrAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtNbrAreaIdFormat.setStatus('mandatory')
snOspfLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1), )
if mibBuilder.loadTexts: snOspfLsdbTable.setStatus('mandatory')
snOspfLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfLsdbEntryIndex"))
if mibBuilder.loadTexts: snOspfLsdbEntry.setStatus('mandatory')
snOspfLsdbEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbEntryIndex.setStatus('mandatory')
snOspfLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbAreaId.setStatus('mandatory')
snOspfLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 9, 10, 11))).clone(namedValues=NamedValues(("routerLink", 1), ("networkLink", 2), ("summaryLink", 3), ("asSummaryLink", 4), ("asExternalLink", 5), ("multicastLink", 6), ("nssaExternalLink", 7), ("opaqueLink", 9), ("opaqueAreaLink", 10), ("opaqueAsLink", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbType.setStatus('mandatory')
snOspfLsdbLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbLsId.setStatus('mandatory')
snOspfLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 5), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbRouterId.setStatus('mandatory')
snOspfLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbSequence.setStatus('mandatory')
snOspfLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbAge.setStatus('mandatory')
snOspfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbChecksum.setStatus('mandatory')
snOspfLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbAdvertisement.setStatus('mandatory')
snOspfLsdbAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfLsdbAreaIdFormat.setStatus('mandatory')
snOspfExtLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1), )
if mibBuilder.loadTexts: snOspfExtLsdbTable.setStatus('mandatory')
snOspfExtLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfExtLsdbEntryIndex"))
if mibBuilder.loadTexts: snOspfExtLsdbEntry.setStatus('mandatory')
snOspfExtLsdbEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExtLsdbEntryIndex.setStatus('mandatory')
snOspfExtLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5))).clone(namedValues=NamedValues(("asExternalLink", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExtLsdbType.setStatus('mandatory')
snOspfExtLsdbLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExtLsdbLsId.setStatus('mandatory')
snOspfExtLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 4), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExtLsdbRouterId.setStatus('mandatory')
snOspfExtLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExtLsdbSequence.setStatus('mandatory')
snOspfExtLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExtLsdbAge.setStatus('mandatory')
snOspfExtLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExtLsdbChecksum.setStatus('mandatory')
snOspfExtLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 10, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(36, 36)).setFixedLength(36)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfExtLsdbAdvertisement.setStatus('mandatory')
snOspfAreaStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1), )
if mibBuilder.loadTexts: snOspfAreaStatusTable.setStatus('mandatory')
snOspfAreaStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfAreaStatusEntryIndex"))
if mibBuilder.loadTexts: snOspfAreaStatusEntry.setStatus('mandatory')
snOspfAreaStatusEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusEntryIndex.setStatus('mandatory')
snOspfAreaStatusAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusAreaId.setStatus('mandatory')
snOspfAreaStatusImportASExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 3), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusImportASExtern.setStatus('mandatory')
snOspfAreaStatusStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 4), BigMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusStubMetric.setStatus('mandatory')
snOspfAreaStatusSpfRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusSpfRuns.setStatus('mandatory')
snOspfAreaStatusAreaBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusAreaBdrRtrCount.setStatus('mandatory')
snOspfAreaStatusASBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusASBdrRtrCount.setStatus('mandatory')
snOspfAreaStatusLSACount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusLSACount.setStatus('mandatory')
snOspfAreaStatusLSACksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusLSACksumSum.setStatus('mandatory')
snOspfAreaStatusAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 11, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfAreaStatusAreaIdFormat.setStatus('mandatory')
snOspfIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1), )
if mibBuilder.loadTexts: snOspfIfStatusTable.setStatus('mandatory')
snOspfIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfIfStatusEntryIndex"))
if mibBuilder.loadTexts: snOspfIfStatusEntry.setStatus('mandatory')
snOspfIfStatusEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusEntryIndex.setStatus('mandatory')
snOspfIfStatusPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusPort.setStatus('mandatory')
snOspfIfStatusIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusIpAddress.setStatus('mandatory')
snOspfIfStatusAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 4), AreaID().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusAreaId.setStatus('mandatory')
snOspfIfStatusType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointToPoint", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusType.setStatus('mandatory')
snOspfIfStatusAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 6), RtrStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusAdminStat.setStatus('mandatory')
snOspfIfStatusRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 7), DesignatedRouterPriority().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusRtrPriority.setStatus('mandatory')
snOspfIfStatusTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 8), UpToMaxAge().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusTransitDelay.setStatus('mandatory')
snOspfIfStatusRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 9), UpToMaxAge().clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusRetransInterval.setStatus('mandatory')
snOspfIfStatusHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 10), HelloRange().clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusHelloInterval.setStatus('mandatory')
snOspfIfStatusRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 11), PositiveInteger().clone(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusRtrDeadInterval.setStatus('mandatory')
snOspfIfStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointToPoint", 4), ("designatedRouter", 5), ("backupDesignatedRouter", 6), ("otherDesignatedRouter", 7))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusState.setStatus('mandatory')
snOspfIfStatusDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 13), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusDesignatedRouter.setStatus('mandatory')
snOspfIfStatusBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 14), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusBackupDesignatedRouter.setStatus('mandatory')
snOspfIfStatusEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusEvents.setStatus('mandatory')
snOspfIfStatusAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusAuthType.setStatus('mandatory')
snOspfIfStatusAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)).clone(hexValue="0000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusAuthKey.setStatus('mandatory')
snOspfIfStatusMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 18), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusMetricValue.setStatus('mandatory')
snOspfIfStatusMd5AuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusMd5AuthKeyId.setStatus('mandatory')
snOspfIfStatusMd5AuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusMd5AuthKey.setStatus('mandatory')
snOspfIfStatusMd5ActivationWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusMd5ActivationWaitTime.setStatus('mandatory')
snOspfIfStatusAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 12, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfIfStatusAreaIdFormat.setStatus('mandatory')
snOspfVirtIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1), )
if mibBuilder.loadTexts: snOspfVirtIfStatusTable.setStatus('mandatory')
snOspfVirtIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusEntryIndex"))
if mibBuilder.loadTexts: snOspfVirtIfStatusEntry.setStatus('mandatory')
snOspfVirtIfStatusEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusEntryIndex.setStatus('mandatory')
snOspfVirtIfStatusAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 2), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusAreaID.setStatus('mandatory')
snOspfVirtIfStatusNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusNeighbor.setStatus('mandatory')
snOspfVirtIfStatusTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 4), UpToMaxAge().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusTransitDelay.setStatus('mandatory')
snOspfVirtIfStatusRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 5), UpToMaxAge().clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusRetransInterval.setStatus('mandatory')
snOspfVirtIfStatusHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 6), HelloRange().clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusHelloInterval.setStatus('mandatory')
snOspfVirtIfStatusRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 7), PositiveInteger().clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusRtrDeadInterval.setStatus('mandatory')
snOspfVirtIfStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusState.setStatus('mandatory')
snOspfVirtIfStatusEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusEvents.setStatus('mandatory')
snOspfVirtIfStatusAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusAuthType.setStatus('mandatory')
snOspfVirtIfStatusAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)).clone(hexValue="0000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusAuthKey.setStatus('mandatory')
snOspfVirtIfStatusMd5AuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusMd5AuthKeyId.setStatus('mandatory')
snOspfVirtIfStatusMd5AuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone(hexValue="0000000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusMd5AuthKey.setStatus('mandatory')
snOspfVirtIfStatusMd5ActivationWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusMd5ActivationWaitTime.setStatus('mandatory')
snOspfVirtIfStatusAreaIdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 13, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("integer", 0), ("ipAddress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfVirtIfStatusAreaIdFormat.setStatus('mandatory')
snOspfRoutingInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1), )
if mibBuilder.loadTexts: snOspfRoutingInfoTable.setStatus('mandatory')
snOspfRoutingInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1), ).setIndexNames((0, "HP-SN-OSPF-GROUP-MIB", "snOspfRoutingInfoIndex"))
if mibBuilder.loadTexts: snOspfRoutingInfoEntry.setStatus('mandatory')
snOspfRoutingInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfRoutingInfoIndex.setStatus('mandatory')
snOspfRoutingInfoRouterID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfRoutingInfoRouterID.setStatus('mandatory')
snOspfRoutingInfoRouterType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("abr", 1), ("asbr", 2), ("abrANDasbr", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfRoutingInfoRouterType.setStatus('mandatory')
snOspfRoutingInfoNextHopRouterID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 4), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfRoutingInfoNextHopRouterID.setStatus('mandatory')
snOspfRoutingInfoOutgoingInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 14, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfRoutingInfoOutgoingInterface.setStatus('mandatory')
snOspfSetTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfSetTrap.setStatus('mandatory')
snOspfConfigErrorType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("badVersion", 1), ("areaMismatch", 2), ("unknownNbmaNbr", 3), ("unknownVirtualNbr", 4), ("authTypeMismatch", 5), ("authFailure", 6), ("netMaskMismatch", 7), ("helloIntervalMismatch", 8), ("deadIntervalMismatch", 9), ("optionMismatch", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfConfigErrorType.setStatus('mandatory')
snOspfPacketType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("hello", 1), ("dbDescript", 2), ("lsReq", 3), ("lsUpdate", 4), ("lsAck", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfPacketType.setStatus('mandatory')
snOspfPacketSrc = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snOspfPacketSrc.setStatus('mandatory')
snOspfTrapsGenerationMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 2, 4, 15, 5), RtrStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snOspfTrapsGenerationMode.setStatus('mandatory')
mibBuilder.exportSymbols("HP-SN-OSPF-GROUP-MIB", snOspfExternLSACksumSum=snOspfExternLSACksumSum, snOspfVirtIfMd5AuthKeyId=snOspfVirtIfMd5AuthKeyId, snOspfAreaStatusTable=snOspfAreaStatusTable, snOspfVirtIfStatusHelloInterval=snOspfVirtIfStatusHelloInterval, HelloRange=HelloRange, snOspfNbrOptions=snOspfNbrOptions, snOspfArea=snOspfArea, snOspfIf2RtrPriority=snOspfIf2RtrPriority, snOspfVirtNbrAreaIdFormat=snOspfVirtNbrAreaIdFormat, snOspfAddrRange=snOspfAddrRange, snOspfIfRowStatus=snOspfIfRowStatus, Metric=Metric, DesignatedRouterPriority=DesignatedRouterPriority, snOspfAreaStatusAreaIdFormat=snOspfAreaStatusAreaIdFormat, snOspfConfigErrorType=snOspfConfigErrorType, snOspfRedisRipMetricValue=snOspfRedisRipMetricValue, snOspfNbrState=snOspfNbrState, snOspfIfStatusMd5AuthKey=snOspfIfStatusMd5AuthKey, snOspfVirtIfStatusState=snOspfVirtIfStatusState, snOspfAreaRangeRowStatus=snOspfAreaRangeRowStatus, snOspfIfStatusMd5AuthKeyId=snOspfIfStatusMd5AuthKeyId, snOspfIf2NetworkP2mp=snOspfIf2NetworkP2mp, snOspfLsdbSequence=snOspfLsdbSequence, snOspfIf2AuthKey=snOspfIf2AuthKey, snOspfNbrPriority=snOspfNbrPriority, snOspfRedisProtocol=snOspfRedisProtocol, snOspfDistanceInter=snOspfDistanceInter, snOspfIfStatusAreaId=snOspfIfStatusAreaId, snOspfVirtIfMd5AuthKey=snOspfVirtIfMd5AuthKey, snOspfVirtIfStatusAreaIdFormat=snOspfVirtIfStatusAreaIdFormat, snOspfExternLSACount=snOspfExternLSACount, RouterID=RouterID, snOspfVirtIfStatusEvents=snOspfVirtIfStatusEvents, snOspfVirtNbr=snOspfVirtNbr, snOspfIfAuthType=snOspfIfAuthType, snOspfExtLsdbChecksum=snOspfExtLsdbChecksum, snOspfIfAreaIdFormat=snOspfIfAreaIdFormat, snOspfIfStatusDesignatedRouter=snOspfIfStatusDesignatedRouter, snOspfLsdbAdvertisement=snOspfLsdbAdvertisement, snOspfIf2Entry=snOspfIf2Entry, snOspfVirtIfAuthType=snOspfVirtIfAuthType, snOspfAreaId=snOspfAreaId, snOspfIfHelloInterval=snOspfIfHelloInterval, snOspfIf2RetransInterval=snOspfIf2RetransInterval, snOspfIfStatusAuthType=snOspfIfStatusAuthType, snOspfIf2RowStatus=snOspfIf2RowStatus, AreaID=AreaID, snOspfSetTrap=snOspfSetTrap, snOspfIfStatusAuthKey=snOspfIfStatusAuthKey, snOspfVirtIfStatus=snOspfVirtIfStatus, snOspfVirtIfEntry=snOspfVirtIfEntry, snOspfIf2HelloInterval=snOspfIf2HelloInterval, snOspfRedisMatchRipMetric=snOspfRedisMatchRipMetric, snOspfIfStatusEntryIndex=snOspfIfStatusEntryIndex, snOspfVirtIfHelloInterval=snOspfVirtIfHelloInterval, snOspfAreaRangeAreaIdFormat=snOspfAreaRangeAreaIdFormat, snOspfRedisSetOspfMetric=snOspfRedisSetOspfMetric, snOspfLsdbChecksum=snOspfLsdbChecksum, snOspfVirtIfStatusMd5AuthKey=snOspfVirtIfStatusMd5AuthKey, snOspfAreaRangeAreaID=snOspfAreaRangeAreaID, snOspfLsdbTable=snOspfLsdbTable, snOspfRedisIpAddress=snOspfRedisIpAddress, snOspfOriginateNewLSAs=snOspfOriginateNewLSAs, snOspfDistanceIntra=snOspfDistanceIntra, snOspfIfPassiveMode=snOspfIfPassiveMode, snOspfAreaEntry=snOspfAreaEntry, TruthVal=TruthVal, snOspfAreaRangeMask=snOspfAreaRangeMask, snOspfIfRtrPriority=snOspfIfRtrPriority, snOspfIfTransitDelay=snOspfIfTransitDelay, snOspfNbrTable=snOspfNbrTable, snOspfExtLsdbEntry=snOspfExtLsdbEntry, snOspfIfAuthKey=snOspfIfAuthKey, snOspfLsdbEntryIndex=snOspfLsdbEntryIndex, snOspfRoutingInfoNextHopRouterID=snOspfRoutingInfoNextHopRouterID, snOspfExtLsdbLimit=snOspfExtLsdbLimit, snOspfVirtNbrState=snOspfVirtNbrState, snOspfNbrEvents=snOspfNbrEvents, snOspfIfMtuIgnore=snOspfIfMtuIgnore, snOspfOspfRedisMetricType=snOspfOspfRedisMetricType, snOspfIf2MetricValue=snOspfIf2MetricValue, snOspfIf2AuthType=snOspfIf2AuthType, snOspfRedisAction=snOspfRedisAction, snOspfVirtIfTransitDelay=snOspfVirtIfTransitDelay, snOspfIfStatusRetransInterval=snOspfIfStatusRetransInterval, snOspfTrapsGenerationMode=snOspfTrapsGenerationMode, snOspfIfRtrDeadInterval=snOspfIfRtrDeadInterval, snOspfRedisOspfMetricValue=snOspfRedisOspfMetricValue, snOspfNbrEntry=snOspfNbrEntry, snOspfLsdbType=snOspfLsdbType, snOspfVirtNbrRtrId=snOspfVirtNbrRtrId, snOspfVirtIfStatusAuthKey=snOspfVirtIfStatusAuthKey, snOspfVirtIfAreaIdFormat=snOspfVirtIfAreaIdFormat, snOspfRedis=snOspfRedis, snOspfVirtIfAreaID=snOspfVirtIfAreaID, snOspfRoutingInfoIndex=snOspfRoutingInfoIndex, snOspfVirtIfStatusRetransInterval=snOspfVirtIfStatusRetransInterval, snOspfRxNewLSAs=snOspfRxNewLSAs, snOspfAreaStatusStubMetric=snOspfAreaStatusStubMetric, TOSType=TOSType, snOspfVirtIfTable=snOspfVirtIfTable, snOspfRoutingInfoRouterType=snOspfRoutingInfoRouterType, snOspfVirtNbrIpAddr=snOspfVirtNbrIpAddr, snOspfIf2AdminStat=snOspfIf2AdminStat, snOspfAreaStatusLSACount=snOspfAreaStatusLSACount, snOspfVirtIfStatusNeighbor=snOspfVirtIfStatusNeighbor, snOspfExitOverflowInterval=snOspfExitOverflowInterval, snOspfRfc1583Compatibility=snOspfRfc1583Compatibility, snOspfVirtIfRowStatus=snOspfVirtIfRowStatus, snOspfAreaStatusLSACksumSum=snOspfAreaStatusLSACksumSum, snOspfIfMd5AuthKey=snOspfIfMd5AuthKey, snOspfRedisRowStatus=snOspfRedisRowStatus, snOspfIfRetransInterval=snOspfIfRetransInterval, snOspfLsdbLsId=snOspfLsdbLsId, snOspfAreaRangeEntry=snOspfAreaRangeEntry, snOspfIf2Table=snOspfIf2Table, snOspfRouterIdFormat=snOspfRouterIdFormat, snOspfVirtNbrLSRetransQLen=snOspfVirtNbrLSRetransQLen, snOspfAreaStatusEntry=snOspfAreaStatusEntry, RtrStatus=RtrStatus, snOspfVirtIfStatusMd5ActivationWaitTime=snOspfVirtIfStatusMd5ActivationWaitTime, snOspfRoutingInfoRouterID=snOspfRoutingInfoRouterID, snOspfRedisEntry=snOspfRedisEntry, snOspfIfMd5ActivationWaitTime=snOspfIfMd5ActivationWaitTime, snOspfExtLsdbRouterId=snOspfExtLsdbRouterId, snOspfVirtIfAuthKey=snOspfVirtIfAuthKey, snOspfIfStatusTransitDelay=snOspfIfStatusTransitDelay, snOspfNbrIndex=snOspfNbrIndex, snOspfVirtIf=snOspfVirtIf, snOspfNbrRtrId=snOspfNbrRtrId, snOspfRedisMask=snOspfRedisMask, snOspfLsdbEntry=snOspfLsdbEntry, snOspfAdminStat=snOspfAdminStat, snOspfAreaTable=snOspfAreaTable, snOspfLsdbAreaIdFormat=snOspfLsdbAreaIdFormat, snOspfIfStatusType=snOspfIfStatusType, snOspfExtLsdbType=snOspfExtLsdbType, snOspfIfTable=snOspfIfTable, PositiveInteger=PositiveInteger, snOspfPacketSrc=snOspfPacketSrc, snOspfIf2Port=snOspfIf2Port, snOspfIfStatusIpAddress=snOspfIfStatusIpAddress, snOspfIfStatusRtrDeadInterval=snOspfIfStatusRtrDeadInterval, snOspfAreaStatusSpfRuns=snOspfAreaStatusSpfRuns, snOspfVirtNbrEntryIndex=snOspfVirtNbrEntryIndex, snOspfAreaRangeTable=snOspfAreaRangeTable, snOspfLsdbRouterId=snOspfLsdbRouterId, snOspfRedisIndex=snOspfRedisIndex, snOspfExtLsdbTable=snOspfExtLsdbTable, snOspfExtLsdbAdvertisement=snOspfExtLsdbAdvertisement, snOspfAreaStatusImportASExtern=snOspfAreaStatusImportASExtern, snOspfIf2MtuIgnore=snOspfIf2MtuIgnore, snOspfVirtNbrOptions=snOspfVirtNbrOptions, snOspfIf2TransitDelay=snOspfIf2TransitDelay, snOspfDefaultOspfMetricValue=snOspfDefaultOspfMetricValue, snOspfAreaStatus=snOspfAreaStatus, snOspfAreaRowStatus=snOspfAreaRowStatus, snOspfIfMetricValue=snOspfIfMetricValue, snOspfVirtNbrTable=snOspfVirtNbrTable, snOspfVirtNbrEntry=snOspfVirtNbrEntry, snOspfIfAreaId=snOspfIfAreaId, snOspfIf2AreaId=snOspfIf2AreaId, snOspfIfDatabaseFilterAllOut=snOspfIfDatabaseFilterAllOut, snOspfIfStatusEvents=snOspfIfStatusEvents, snOspfIf2AreaIdFormat=snOspfIf2AreaIdFormat, snOspfExtLsdbLsId=snOspfExtLsdbLsId, UpToMaxAge=UpToMaxAge, snOspfRouterId=snOspfRouterId, snOspfVirtNbrEvents=snOspfVirtNbrEvents, snOspfVirtIfMd5ActivationWaitTime=snOspfVirtIfMd5ActivationWaitTime, snOspfImportASExtern=snOspfImportASExtern, snOspfIfNetworkP2mp=snOspfIfNetworkP2mp, snOspfIf2Md5AuthKey=snOspfIf2Md5AuthKey, snOspfVirtIfRtrDeadInterval=snOspfVirtIfRtrDeadInterval, snOspfVirtIfStatusMd5AuthKeyId=snOspfVirtIfStatusMd5AuthKeyId, snOspfAreaRangeNet=snOspfAreaRangeNet, snOspfIfStatus=snOspfIfStatus, snOspfIfStatusBackupDesignatedRouter=snOspfIfStatusBackupDesignatedRouter, snOspfVirtIfStatusTransitDelay=snOspfVirtIfStatusTransitDelay, snOspfASBdrRtrStatus=snOspfASBdrRtrStatus, snOspfNbrIpAddr=snOspfNbrIpAddr, snOspfIf2Md5AuthKeyId=snOspfIf2Md5AuthKeyId, snOspfIfStatusHelloInterval=snOspfIfStatusHelloInterval, snOspfVirtIfStatusEntryIndex=snOspfVirtIfStatusEntryIndex, snOspfRedisTable=snOspfRedisTable, snOspfVirtIfStatusAreaID=snOspfVirtIfStatusAreaID, snOspfExtLsdbEntryIndex=snOspfExtLsdbEntryIndex, snOspfIntf=snOspfIntf, snOspfIfPort=snOspfIfPort, snOspfAreaStatusEntryIndex=snOspfAreaStatusEntryIndex, snOspfGen=snOspfGen, snOspfAreaStatusAreaBdrRtrCount=snOspfAreaStatusAreaBdrRtrCount, snOspfIfAdminStat=snOspfIfAdminStat, snOspfDistanceExternal=snOspfDistanceExternal, snOspfLsdb=snOspfLsdb, snOspfAreaStatusAreaId=snOspfAreaStatusAreaId, snOspfIf2Md5ActivationWaitTime=snOspfIf2Md5ActivationWaitTime, snOspfNbrEntryIndex=snOspfNbrEntryIndex, snOspfExtLsdbAge=snOspfExtLsdbAge, snOspfNbr=snOspfNbr, snOspfIfStatusTable=snOspfIfStatusTable, snOspfIfEntry=snOspfIfEntry, snOspfIf2DatabaseFilterAllOut=snOspfIf2DatabaseFilterAllOut, snOspfRedisMode=snOspfRedisMode, snOspfRoutingInfoOutgoingInterface=snOspfRoutingInfoOutgoingInterface, BigMetric=BigMetric, snOspfIf2PassiveMode=snOspfIf2PassiveMode, snOspfVirtIfNeighbor=snOspfVirtIfNeighbor, snOspfIf2RtrDeadInterval=snOspfIf2RtrDeadInterval, snOspfDistance=snOspfDistance, snOspfRoutingInfo=snOspfRoutingInfo, snOspfIfStatusEntry=snOspfIfStatusEntry, snOspfVirtIfStatusAuthType=snOspfVirtIfStatusAuthType, snOspfIfStatusAreaIdFormat=snOspfIfStatusAreaIdFormat, snOspfExtLsdbSequence=snOspfExtLsdbSequence, snOspfIfStatusPort=snOspfIfStatusPort, snOspfIfStatusMd5ActivationWaitTime=snOspfIfStatusMd5ActivationWaitTime, snOspfVirtIfStatusEntry=snOspfVirtIfStatusEntry, snOspfLsdbAreaId=snOspfLsdbAreaId, snOspfRoutingInfoTable=snOspfRoutingInfoTable, snOspfVirtIfStatusTable=snOspfVirtIfStatusTable, snOspfPacketType=snOspfPacketType, snOspfNbrPort=snOspfNbrPort, snOspfIfMd5AuthKeyId=snOspfIfMd5AuthKeyId, snOspfTrapControl=snOspfTrapControl, snOspfVirtNbrArea=snOspfVirtNbrArea, snOspfIfStatusRtrPriority=snOspfIfStatusRtrPriority, snOspfVirtIfRetransInterval=snOspfVirtIfRetransInterval, snOspfExtLsdb=snOspfExtLsdb, snOspfStubMetric=snOspfStubMetric, snOspfAreaIdFormat=snOspfAreaIdFormat, snOspfLsdbAge=snOspfLsdbAge, snOspfAreaStatusASBdrRtrCount=snOspfAreaStatusASBdrRtrCount, snOspfIfStatusAdminStat=snOspfIfStatusAdminStat, snOspfRoutingInfoEntry=snOspfRoutingInfoEntry, snOspfIfStatusMetricValue=snOspfIfStatusMetricValue, snOspfNbrLsRetransQLen=snOspfNbrLsRetransQLen, snOspfIfStatusState=snOspfIfStatusState, snOspfVirtIfStatusRtrDeadInterval=snOspfVirtIfStatusRtrDeadInterval)
