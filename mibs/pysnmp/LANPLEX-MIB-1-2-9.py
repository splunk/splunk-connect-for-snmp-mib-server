#
# PySNMP MIB module LANPLEX-MIB-1-2-9 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LANPLEX-MIB-1-2-9
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter32, enterprises, Unsigned32, Bits, ObjectIdentity, TimeTicks, NotificationType, NotificationType, iso, IpAddress, Counter64, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "enterprises", "Unsigned32", "Bits", "ObjectIdentity", "TimeTicks", "NotificationType", "NotificationType", "iso", "IpAddress", "Counter64", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
synernetics = MibIdentifier((1, 3, 6, 1, 4, 1, 114))
lanplex = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1))
lanplexMib = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1))
chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 1))
slot = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 2))
spm = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 3))
feam = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 4))
fcm = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 5))
port = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 6))
eem = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 7))
eemFddiMAC = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 8))
eemEthernetPort = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 9))
eemMACAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 10))
lpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 11))
lpSlot = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 12))
lpFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 13))
lpEthernetPort = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 14))
lpFddiPort = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 15))
lpExpress = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 16))
lpExpressFddiPort = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 17))
lpExpressEthernetPort = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 18))
lpExpressEthernetPortAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 19))
lpPowerSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 20))
lpBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 21))
lpTrapEnterprise = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 22))
lpTrapDest = MibIdentifier((1, 3, 6, 1, 4, 1, 114, 1, 1, 23))
chassisId = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisId.setStatus('deprecated')
chassisType = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("tweleveSlot", 2), ("fourSlot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisType.setStatus('deprecated')
chassisRevision = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisRevision.setStatus('deprecated')
chassisName = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisName.setStatus('deprecated')
chassisNameAbbrev = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisNameAbbrev.setStatus('deprecated')
chassisManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisManufacturer.setStatus('deprecated')
chassisSlotCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisSlotCount.setStatus('deprecated')
chassisBuildTime = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisBuildTime.setStatus('deprecated')
chassisSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisSoftwareRevision.setStatus('deprecated')
chassisControlPanelColumns = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisControlPanelColumns.setStatus('deprecated')
chassisControlPanelLines = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisControlPanelLines.setStatus('deprecated')
chassisControlPanelText = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisControlPanelText.setStatus('deprecated')
chassisAction = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chassisAction.setStatus('deprecated')
slotTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1), )
if mibBuilder.loadTexts: slotTable.setStatus('deprecated')
slotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "slotIndex"))
if mibBuilder.loadTexts: slotEntry.setStatus('deprecated')
slotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotIndex.setStatus('deprecated')
slotBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("emptySlot", 2), ("spm", 3), ("feam", 4), ("fcm", 5), ("eem", 6), ("esm", 7), ("fcm2", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardType.setStatus('deprecated')
slotBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardRevision.setStatus('deprecated')
slotBoardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notPresent", 1), ("testing", 2), ("offline", 3), ("online", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardStatus.setStatus('deprecated')
slotBoardName = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardName.setStatus('deprecated')
slotBoardNameAbbrev = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardNameAbbrev.setStatus('deprecated')
slotBoardAction = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("runDiagnostics", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slotBoardAction.setStatus('deprecated')
spmTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 3, 1), )
if mibBuilder.loadTexts: spmTable.setStatus('deprecated')
spmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 3, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "spmSlotIndex"))
if mibBuilder.loadTexts: spmEntry.setStatus('deprecated')
spmSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spmSlotIndex.setStatus('deprecated')
spmEthernetPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spmEthernetPortCount.setStatus('deprecated')
spmBaseEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spmBaseEthernetPortIndex.setStatus('deprecated')
feamTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 4, 1), )
if mibBuilder.loadTexts: feamTable.setStatus('deprecated')
feamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 4, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "feamSlotIndex"))
if mibBuilder.loadTexts: feamEntry.setStatus('deprecated')
feamSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: feamSlotIndex.setStatus('deprecated')
feamMACCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: feamMACCount.setStatus('deprecated')
feamBaseMACIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: feamBaseMACIndex.setStatus('deprecated')
feamPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: feamPortCount.setStatus('deprecated')
feamBasePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: feamBasePortIndex.setStatus('deprecated')
fcmTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 5, 1), )
if mibBuilder.loadTexts: fcmTable.setStatus('deprecated')
fcmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 5, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "fcmSlotIndex"))
if mibBuilder.loadTexts: fcmEntry.setStatus('deprecated')
fcmSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcmSlotIndex.setStatus('deprecated')
fcmPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcmPortCount.setStatus('deprecated')
fcmBasePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcmBasePortIndex.setStatus('deprecated')
portTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 6, 1), )
if mibBuilder.loadTexts: portTable.setStatus('deprecated')
portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 6, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "portSlotIndex"), (0, "LANPLEX-MIB-1-2-9", "portIndex"))
if mibBuilder.loadTexts: portEntry.setStatus('deprecated')
portSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSlotIndex.setStatus('deprecated')
portIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portIndex.setStatus('deprecated')
portLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 6, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portLabel.setStatus('deprecated')
eemTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 7, 1), )
if mibBuilder.loadTexts: eemTable.setStatus('deprecated')
eemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 7, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "eemSlotIndex"))
if mibBuilder.loadTexts: eemEntry.setStatus('deprecated')
eemSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemSlotIndex.setStatus('deprecated')
eemFddiMACCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemFddiMACCount.setStatus('deprecated')
eemBaseFddiMACIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemBaseFddiMACIndex.setStatus('deprecated')
eemEthernetPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemEthernetPortCount.setStatus('deprecated')
eemBaseEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemBaseEthernetPortIndex.setStatus('deprecated')
eemAddressThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 7, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemAddressThreshold.setStatus('deprecated')
eemFddiMACTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 8, 1), )
if mibBuilder.loadTexts: eemFddiMACTable.setStatus('deprecated')
eemFddiMACEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 8, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "eemFddiSlotIndex"), (0, "LANPLEX-MIB-1-2-9", "eemFddiMACIndex"))
if mibBuilder.loadTexts: eemFddiMACEntry.setStatus('deprecated')
eemFddiSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemFddiSlotIndex.setStatus('deprecated')
eemFddiMACIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemFddiMACIndex.setStatus('deprecated')
eemFddiMACForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 8, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemFddiMACForwardedCts.setStatus('deprecated')
eemFddiMACDroppedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemFddiMACDroppedCts.setStatus('deprecated')
eemEthernetPortTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1), )
if mibBuilder.loadTexts: eemEthernetPortTable.setStatus('deprecated')
eemEthernetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "eemEthernetPortSlotIndex"), (0, "LANPLEX-MIB-1-2-9", "eemEthernetPortIndex"))
if mibBuilder.loadTexts: eemEthernetPortEntry.setStatus('deprecated')
eemEthernetPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemEthernetPortSlotIndex.setStatus('deprecated')
eemEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemEthernetPortIndex.setStatus('deprecated')
eemEthernetPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetPortLabel.setStatus('deprecated')
eemEthernetPortForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemEthernetPortForwardedCts.setStatus('deprecated')
eemEthernetPortDroppedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemEthernetPortDroppedCts.setStatus('deprecated')
eemEthernetPortUTurnCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemEthernetPortUTurnCts.setStatus('deprecated')
eemEthernetPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onlineActive", 1), ("onlineInactive", 2), ("offline", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eemEthernetPortState.setStatus('deprecated')
eemEthernetPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("freezeAddress", 2), ("flushAddress", 3), ("flushDynamicAddress", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetPortAction.setStatus('deprecated')
eemEthernetMACAddressTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1), )
if mibBuilder.loadTexts: eemEthernetMACAddressTable.setStatus('deprecated')
eemEthernetMACAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "eemEthernetMACAddressSlotIndex"), (0, "LANPLEX-MIB-1-2-9", "eemEthernetMACAddressPortIndex"), (0, "LANPLEX-MIB-1-2-9", "eemEthernetMACAddressIndex"))
if mibBuilder.loadTexts: eemEthernetMACAddressEntry.setStatus('deprecated')
eemEthernetMACAddressSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetMACAddressSlotIndex.setStatus('deprecated')
eemEthernetMACAddressPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetMACAddressPortIndex.setStatus('deprecated')
eemEthernetMACAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetMACAddressIndex.setStatus('deprecated')
eemEthernetMACAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetMACAddressType.setStatus('deprecated')
eemEthernetMACAddressRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetMACAddressRemoteAddress.setStatus('deprecated')
eemEthernetMACAddressIsStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("isStatic", 1), ("isDynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetMACAddressIsStatic.setStatus('deprecated')
eemEthernetMACAddressStaticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetMACAddressStaticPort.setStatus('deprecated')
eemEthernetMACAddressAge = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 10, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eemEthernetMACAddressAge.setStatus('deprecated')
lpSystemId = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemId.setStatus('mandatory')
lpSystemType = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("tweleveSlot", 2), ("fourSlot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemType.setStatus('mandatory')
lpSystemName = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemName.setStatus('mandatory')
lpSystemManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemManufacturer.setStatus('mandatory')
lpSystemBackplaneRevision = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemBackplaneRevision.setStatus('mandatory')
lpSystemSlotCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemSlotCount.setStatus('mandatory')
lpSystemMemorySize = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemMemorySize.setStatus('mandatory')
lpSystemFlashMemorySize = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemFlashMemorySize.setStatus('mandatory')
lpSystemNvMemorySize = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemNvMemorySize.setStatus('mandatory')
lpSystemSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemSoftwareRevision.setStatus('mandatory')
lpSystemBuildTime = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemBuildTime.setStatus('mandatory')
lpSystemControlPanelHardwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemControlPanelHardwareRevision.setStatus('mandatory')
lpSystemControlPanelSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemControlPanelSoftwareRevision.setStatus('mandatory')
lpSystemControlPanelLines = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemControlPanelLines.setStatus('mandatory')
lpSystemControlPanelColumns = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemControlPanelColumns.setStatus('mandatory')
lpSystemControlPanelText = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemControlPanelText.setStatus('mandatory')
lpSystemFddiMacCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemFddiMacCount.setStatus('mandatory')
lpSystemFddiPortCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemFddiPortCount.setStatus('mandatory')
lpSystemEthernetPortCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemEthernetPortCount.setStatus('mandatory')
lpSystemExpressFunctionCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemExpressFunctionCount.setStatus('deprecated')
lpSystemExpressFddiPortCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemExpressFddiPortCount.setStatus('deprecated')
lpSystemExpressEthernetPortCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemExpressEthernetPortCount.setStatus('deprecated')
lpSystemPowerSupplyCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemPowerSupplyCount.setStatus('mandatory')
lpSystemAction = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpSystemAction.setStatus('mandatory')
lpSystemBridgeFunctionCount = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSystemBridgeFunctionCount.setStatus('mandatory')
lpSystemSmtProxyTimeoutBase = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpSystemSmtProxyTimeoutBase.setStatus('mandatory')
lpSystemSmtProxyEvents = MibScalar((1, 3, 6, 1, 4, 1, 114, 1, 1, 11, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpSystemSmtProxyEvents.setStatus('mandatory')
lpSlotTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1), )
if mibBuilder.loadTexts: lpSlotTable.setStatus('mandatory')
lpSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpSlotIndex"))
if mibBuilder.loadTexts: lpSlotEntry.setStatus('mandatory')
lpSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotIndex.setStatus('mandatory')
lpSlotBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("emptySlot", 2), ("spm", 3), ("feam", 4), ("fcm", 5), ("eem", 6), ("esm", 7), ("fcm2", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotBoardType.setStatus('mandatory')
lpSlotBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotBoardRevision.setStatus('mandatory')
lpSlotBoardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notPresent", 1), ("testing", 2), ("offline", 3), ("online", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotBoardStatus.setStatus('mandatory')
lpSlotBoardName = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotBoardName.setStatus('mandatory')
lpSlotBoardNameAbbrev = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotBoardNameAbbrev.setStatus('mandatory')
lpSlotFddiMacCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotFddiMacCount.setStatus('mandatory')
lpSlotFddiMacBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotFddiMacBaseIndex.setStatus('mandatory')
lpSlotFddiPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotFddiPortCount.setStatus('mandatory')
lpSlotFddiPortBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotFddiPortBaseIndex.setStatus('mandatory')
lpSlotEthernetPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotEthernetPortCount.setStatus('mandatory')
lpSlotEthernetPortBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotEthernetPortBaseIndex.setStatus('mandatory')
lpSlotExpressFunctionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotExpressFunctionCount.setStatus('deprecated')
lpSlotExpressFunctionBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotExpressFunctionBaseIndex.setStatus('deprecated')
lpSlotExpressFddiPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotExpressFddiPortCount.setStatus('deprecated')
lpSlotExpressFddiPortBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotExpressFddiPortBaseIndex.setStatus('deprecated')
lpSlotExpressEthernetPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotExpressEthernetPortCount.setStatus('deprecated')
lpSlotExpressEthernetPortBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotExpressEthernetPortBaseIndex.setStatus('deprecated')
lpSlotBoardAction = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("runDiagnostics", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpSlotBoardAction.setStatus('mandatory')
lpSlotBridgeFunctionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotBridgeFunctionCount.setStatus('mandatory')
lpSlotBridgeFunctionBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 12, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpSlotBridgeFunctionBaseIndex.setStatus('mandatory')
lpFddiMacTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1), )
if mibBuilder.loadTexts: lpFddiMacTable.setStatus('mandatory')
lpFddiMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpFddiMacIndex"))
if mibBuilder.loadTexts: lpFddiMacEntry.setStatus('mandatory')
lpFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacIndex.setStatus('mandatory')
lpFddiMacSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacSlotIndex.setStatus('mandatory')
lpFddiMacLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacLocalIndex.setStatus('mandatory')
lpFddiMacByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacByteReceiveRate.setStatus('mandatory')
lpFddiMacPeakByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacPeakByteReceiveRate.setStatus('mandatory')
lpFddiMacFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacFrameReceiveRate.setStatus('mandatory')
lpFddiMacPeakFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacPeakFrameReceiveRate.setStatus('mandatory')
lpFddiMacByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacByteTransmitRate.setStatus('mandatory')
lpFddiMacPeakByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacPeakByteTransmitRate.setStatus('mandatory')
lpFddiMacFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacFrameTransmitRate.setStatus('mandatory')
lpFddiMacPeakFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacPeakFrameTransmitRate.setStatus('mandatory')
lpFddiMacReceiveMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFddiMacReceiveMulticastThreshold.setStatus('deprecated')
lpFddiMacBeaconHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 13, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiMacBeaconHistory.setStatus('mandatory')
lpEthernetPortTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1), )
if mibBuilder.loadTexts: lpEthernetPortTable.setStatus('mandatory')
lpEthernetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpEthernetPortIndex"))
if mibBuilder.loadTexts: lpEthernetPortEntry.setStatus('mandatory')
lpEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortIndex.setStatus('mandatory')
lpEthernetPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortSlotIndex.setStatus('mandatory')
lpEthernetPortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortLocalIndex.setStatus('mandatory')
lpEthernetPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEthernetPortLabel.setStatus('mandatory')
lpEthernetPortChipsetType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("chipsetAMD79900", 2), ("chipsetIntel82586", 3), ("chipsetIntel82596", 4), ("chipsetSEEQ8003", 5), ("chipsetNational8390", 6), ("chipsetNationalSonic", 7), ("chipsetFujitsu86950", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortChipsetType.setStatus('mandatory')
lpEthernetPortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortLinkStatus.setStatus('mandatory')
lpEthernetPortByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortByteReceiveRate.setStatus('mandatory')
lpEthernetPortPeakByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortPeakByteReceiveRate.setStatus('mandatory')
lpEthernetPortFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortFrameReceiveRate.setStatus('mandatory')
lpEthernetPortPeakFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortPeakFrameReceiveRate.setStatus('mandatory')
lpEthernetPortByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortByteTransmitRate.setStatus('mandatory')
lpEthernetPortPeakByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortPeakByteTransmitRate.setStatus('mandatory')
lpEthernetPortFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortFrameTransmitRate.setStatus('mandatory')
lpEthernetPortPeakFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEthernetPortPeakFrameTransmitRate.setStatus('mandatory')
lpEthernetPortReceiveMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEthernetPortReceiveMulticastThreshold.setStatus('deprecated')
lpEthernetPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 14, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("telco10BaseT", 1), ("rj4510BaseT", 2), ("foirl", 3), ("aui", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEthernetPortType.setStatus('mandatory')
lpFddiPortTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 15, 1), )
if mibBuilder.loadTexts: lpFddiPortTable.setStatus('mandatory')
lpFddiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 15, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpFddiPortIndex"))
if mibBuilder.loadTexts: lpFddiPortEntry.setStatus('mandatory')
lpFddiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiPortIndex.setStatus('mandatory')
lpFddiPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 15, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiPortSlotIndex.setStatus('mandatory')
lpFddiPortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 15, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFddiPortLocalIndex.setStatus('mandatory')
lpFddiPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 15, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFddiPortLabel.setStatus('mandatory')
lpExpressTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 16, 1), )
if mibBuilder.loadTexts: lpExpressTable.setStatus('deprecated')
lpExpressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 16, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpExpressIndex"))
if mibBuilder.loadTexts: lpExpressEntry.setStatus('deprecated')
lpExpressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressIndex.setStatus('deprecated')
lpExpressSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 16, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressSlotIndex.setStatus('deprecated')
lpExpressLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 16, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressLocalIndex.setStatus('deprecated')
lpExpressAddressThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 16, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressAddressThreshold.setStatus('deprecated')
lpExpressFddiPortTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 17, 1), )
if mibBuilder.loadTexts: lpExpressFddiPortTable.setStatus('deprecated')
lpExpressFddiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 17, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpExpressFddiPortIndex"))
if mibBuilder.loadTexts: lpExpressFddiPortEntry.setStatus('deprecated')
lpExpressFddiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressFddiPortIndex.setStatus('deprecated')
lpExpressFddiPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 17, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressFddiPortSlotIndex.setStatus('deprecated')
lpExpressFddiPortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 17, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressFddiPortLocalIndex.setStatus('deprecated')
lpExpressFddiPortForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 17, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressFddiPortForwardedCts.setStatus('deprecated')
lpExpressFddiPortDroppedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 17, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressFddiPortDroppedCts.setStatus('deprecated')
lpExpressEthernetPortTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1), )
if mibBuilder.loadTexts: lpExpressEthernetPortTable.setStatus('deprecated')
lpExpressEthernetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpExpressEthernetPortIndex"))
if mibBuilder.loadTexts: lpExpressEthernetPortEntry.setStatus('deprecated')
lpExpressEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressEthernetPortIndex.setStatus('deprecated')
lpExpressEthernetPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressEthernetPortSlotIndex.setStatus('deprecated')
lpExpressEthernetPortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressEthernetPortLocalIndex.setStatus('deprecated')
lpExpressEthernetPortForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressEthernetPortForwardedCts.setStatus('deprecated')
lpExpressEthernetPortDroppedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressEthernetPortDroppedCts.setStatus('deprecated')
lpExpressEthernetPortUTurnCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpExpressEthernetPortUTurnCts.setStatus('deprecated')
lpExpressEthernetPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 18, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("freezeAddress", 2), ("flushAddress", 3), ("flushDynamicAddress", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAction.setStatus('deprecated')
lpExpressEthernetPortAddressTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1), )
if mibBuilder.loadTexts: lpExpressEthernetPortAddressTable.setStatus('deprecated')
lpExpressEthernetPortAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpExpressEthernetPortAddressPortIndex"), (0, "LANPLEX-MIB-1-2-9", "lpExpressEthernetPortAddressIndex"))
if mibBuilder.loadTexts: lpExpressEthernetPortAddressEntry.setStatus('deprecated')
lpExpressEthernetPortAddressPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAddressPortIndex.setStatus('deprecated')
lpExpressEthernetPortAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAddressIndex.setStatus('deprecated')
lpExpressEthernetPortAddressSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAddressSlotIndex.setStatus('deprecated')
lpExpressEthernetPortAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAddressType.setStatus('deprecated')
lpExpressEthernetPortAddressRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAddressRemoteAddress.setStatus('deprecated')
lpExpressEthernetPortAddressIsStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("isStatic", 1), ("isDynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAddressIsStatic.setStatus('deprecated')
lpExpressEthernetPortAddressStaticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAddressStaticPort.setStatus('deprecated')
lpExpressEthernetPortAddressAge = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 19, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpExpressEthernetPortAddressAge.setStatus('deprecated')
lpPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 20, 1), )
if mibBuilder.loadTexts: lpPowerSupplyTable.setStatus('mandatory')
lpPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 20, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpPowerSupplyIndex"))
if mibBuilder.loadTexts: lpPowerSupplyEntry.setStatus('mandatory')
lpPowerSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 20, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpPowerSupplyIndex.setStatus('mandatory')
lpPowerSupplyLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 20, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpPowerSupplyLocation.setStatus('mandatory')
lpPowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 20, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpPowerSupplyStatus.setStatus('mandatory')
lpPowerSupplyFailureType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("systemAcFailure", 1), ("systemPlus5Failure", 2), ("systemPlus12Failure", 3), ("systemOverTemperatureFailure", 4))))
if mibBuilder.loadTexts: lpPowerSupplyFailureType.setStatus('deprecated')
lpPowerSupplyLastFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("systemAcFailure", 1), ("systemPlus5Failure", 2), ("systemPlus12Failure", 3), ("systemOverTemperatureFailure", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpPowerSupplyLastFailure.setStatus('mandatory')
lpBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1), )
if mibBuilder.loadTexts: lpBridgeTable.setStatus('mandatory')
lpBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpBridgeIndex"))
if mibBuilder.loadTexts: lpBridgeEntry.setStatus('mandatory')
lpBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgeIndex.setStatus('mandatory')
lpBridgeBaseSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgeBaseSlotIndex.setStatus('mandatory')
lpBridgePortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortCount.setStatus('mandatory')
lpBridgeAddressTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgeAddressTableSize.setStatus('mandatory')
lpBridgeAddressThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpBridgeAddressThreshold.setStatus('mandatory')
lpBridgeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("expressMode", 1), ("ieee8021dBridgeMode", 2), ("notSupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpBridgeMode.setStatus('mandatory')
lpBridgeLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgeLocalIndex.setStatus('mandatory')
lpBridgePortTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2), )
if mibBuilder.loadTexts: lpBridgePortTable.setStatus('mandatory')
lpBridgePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpBridgePortBridgeIndex"), (0, "LANPLEX-MIB-1-2-9", "lpBridgePortIndex"))
if mibBuilder.loadTexts: lpBridgePortEntry.setStatus('mandatory')
lpBridgePortBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortBridgeIndex.setStatus('mandatory')
lpBridgePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortIndex.setStatus('mandatory')
lpBridgePortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortSlotIndex.setStatus('mandatory')
lpBridgePortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortLocalIndex.setStatus('mandatory')
lpBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ethernet", 1), ("fddi", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortType.setStatus('mandatory')
lpBridgePortIpFragmentationEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("notSupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpBridgePortIpFragmentationEnabled.setStatus('mandatory')
lpBridgePortReceiveMulticastLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpBridgePortReceiveMulticastLimit.setStatus('mandatory')
lpBridgePortAddressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("freezeAddress", 2), ("flushAddress", 3), ("flushDynamicAddress", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpBridgePortAddressAction.setStatus('mandatory')
lpBridgePortTotalForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortTotalForwardedCts.setStatus('mandatory')
lpBridgePortManagementFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortManagementFramesReceived.setStatus('mandatory')
lpBridgePortTotalDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortTotalDiscards.setStatus('mandatory')
lpBridgePortReceiveBlockedDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveBlockedDiscards.setStatus('mandatory')
lpBridgePortReceiveMulticastLimitExceededs = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveMulticastLimitExceededs.setStatus('mandatory')
lpBridgePortReceiveSecurityDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveSecurityDiscards.setStatus('mandatory')
lpBridgePortReceiveUnknownDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveUnknownDiscards.setStatus('mandatory')
lpBridgePortReceiveOtherDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveOtherDiscards.setStatus('mandatory')
lpBridgePortReceiveErrorDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveErrorDiscards.setStatus('mandatory')
lpBridgePortSameSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortSameSegmentDiscards.setStatus('mandatory')
lpBridgePortTransmitBlockedDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortTransmitBlockedDiscards.setStatus('mandatory')
lpBridgePortTotalFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortTotalFiltered.setStatus('mandatory')
lpBridgePortReceiveUnicastFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveUnicastFiltered.setStatus('mandatory')
lpBridgePortReceiveMulticastFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveMulticastFiltered.setStatus('mandatory')
lpBridgePortTransmitUnicastFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortTransmitUnicastFiltered.setStatus('mandatory')
lpBridgePortTransmitMulticastFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortTransmitMulticastFiltered.setStatus('mandatory')
lpBridgePortReceiveMulticastLimitExceededCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortReceiveMulticastLimitExceededCount.setStatus('mandatory')
lpBridgePortForwardedToTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 3), )
if mibBuilder.loadTexts: lpBridgePortForwardedToTable.setStatus('mandatory')
lpBridgePortForwardedToEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 3, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpBridgePortForwardedToBridgeIndex"), (0, "LANPLEX-MIB-1-2-9", "lpBridgePortForwardedToReceivePortIndex"), (0, "LANPLEX-MIB-1-2-9", "lpBridgePortForwardedToDstPortIndex"))
if mibBuilder.loadTexts: lpBridgePortForwardedToEntry.setStatus('mandatory')
lpBridgePortForwardedToBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortForwardedToBridgeIndex.setStatus('mandatory')
lpBridgePortForwardedToReceivePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortForwardedToReceivePortIndex.setStatus('mandatory')
lpBridgePortForwardedToDstPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortForwardedToDstPortIndex.setStatus('mandatory')
lpBridgePortForwardedToCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortForwardedToCount.setStatus('mandatory')
lpBridgePortFilteredToTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 4), )
if mibBuilder.loadTexts: lpBridgePortFilteredToTable.setStatus('mandatory')
lpBridgePortFilteredToEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 4, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpBridgePortFilteredToBridgeIndex"), (0, "LANPLEX-MIB-1-2-9", "lpBridgePortFilteredToReceivePortIndex"), (0, "LANPLEX-MIB-1-2-9", "lpBridgePortFilteredToDstPortIndex"))
if mibBuilder.loadTexts: lpBridgePortFilteredToEntry.setStatus('mandatory')
lpBridgePortFilteredToBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortFilteredToBridgeIndex.setStatus('mandatory')
lpBridgePortFilteredToReceivePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortFilteredToReceivePortIndex.setStatus('mandatory')
lpBridgePortFilteredToDstPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortFilteredToDstPortIndex.setStatus('mandatory')
lpBridgePortFilteredToCount = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortFilteredToCount.setStatus('mandatory')
lpBridgePortAddressTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5), )
if mibBuilder.loadTexts: lpBridgePortAddressTable.setStatus('mandatory')
lpBridgePortAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpBridgePortAddressBridgeIndex"), (0, "LANPLEX-MIB-1-2-9", "lpBridgePortAddressPortIndex"), (0, "LANPLEX-MIB-1-2-9", "lpBridgePortAddressIndex"))
if mibBuilder.loadTexts: lpBridgePortAddressEntry.setStatus('mandatory')
lpBridgePortAddressBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortAddressBridgeIndex.setStatus('mandatory')
lpBridgePortAddressPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortAddressPortIndex.setStatus('mandatory')
lpBridgePortAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortAddressIndex.setStatus('mandatory')
lpBridgePortAddressRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpBridgePortAddressRemoteAddress.setStatus('mandatory')
lpBridgePortAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpBridgePortAddressType.setStatus('mandatory')
lpBridgePortAddressIsStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("isStatic", 1), ("isDynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpBridgePortAddressIsStatic.setStatus('mandatory')
lpBridgePortAddressStaticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortAddressStaticPort.setStatus('mandatory')
lpBridgePortAddressAge = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 21, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpBridgePortAddressAge.setStatus('mandatory')
lpTrapEnterpriseTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 22, 1), )
if mibBuilder.loadTexts: lpTrapEnterpriseTable.setStatus('mandatory')
lpTrapEnterpriseTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 22, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpTrapEnterpriseIndex"))
if mibBuilder.loadTexts: lpTrapEnterpriseTableEntry.setStatus('mandatory')
lpTrapEnterpriseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 22, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrapEnterpriseIndex.setStatus('mandatory')
lpTrapEnterpriseOID = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 22, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrapEnterpriseOID.setStatus('mandatory')
lpTrapDestTable = MibTable((1, 3, 6, 1, 4, 1, 114, 1, 1, 23, 1), )
if mibBuilder.loadTexts: lpTrapDestTable.setStatus('mandatory')
lpTrapDestTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 114, 1, 1, 23, 1, 1), ).setIndexNames((0, "LANPLEX-MIB-1-2-9", "lpTrapDestAddr"), (0, "LANPLEX-MIB-1-2-9", "lpTrapDestEnterpriseIndex"), (0, "LANPLEX-MIB-1-2-9", "lpTrapNumber"))
if mibBuilder.loadTexts: lpTrapDestTableEntry.setStatus('mandatory')
lpTrapDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 23, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrapDestAddr.setStatus('mandatory')
lpTrapDestEnterpriseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 23, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrapDestEnterpriseIndex.setStatus('mandatory')
lpTrapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 23, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrapNumber.setStatus('mandatory')
lpTrapEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 114, 1, 1, 23, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrapEntryStatus.setStatus('mandatory')
lpSlotInsertEvent = NotificationType((1, 3, 6, 1, 4, 1, 114, 1, 1) + (0,1)).setObjects(("LANPLEX-MIB-1-2-9", "lpSlotIndex"), ("LANPLEX-MIB-1-2-9", "lpSlotBoardType"), ("LANPLEX-MIB-1-2-9", "lpSlotBoardRevision"))
lpSlotExtractEvent = NotificationType((1, 3, 6, 1, 4, 1, 114, 1, 1) + (0,2)).setObjects(("LANPLEX-MIB-1-2-9", "lpSlotIndex"))
lpBridgeAddressThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 114, 1, 1) + (0,3)).setObjects(("LANPLEX-MIB-1-2-9", "lpBridgeIndex"), ("LANPLEX-MIB-1-2-9", "lpBridgeBaseSlotIndex"))
lpSystemOverTemperatureEvent = NotificationType((1, 3, 6, 1, 4, 1, 114, 1, 1) + (0,6))
lpSlotOverTemperatureEvent = NotificationType((1, 3, 6, 1, 4, 1, 114, 1, 1) + (0,7)).setObjects(("LANPLEX-MIB-1-2-9", "lpSlotIndex"), ("LANPLEX-MIB-1-2-9", "lpSlotBoardType"), ("LANPLEX-MIB-1-2-9", "lpSlotBoardRevision"), ("LANPLEX-MIB-1-2-9", "lpSlotBoardStatus"))
lpPowerSupplyFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 114, 1, 1) + (0,8)).setObjects(("LANPLEX-MIB-1-2-9", "lpPowerSupplyIndex"), ("LANPLEX-MIB-1-2-9", "lpPowerSupplyLocation"), ("LANPLEX-MIB-1-2-9", "lpPowerSupplyLastFailure"), ("LANPLEX-MIB-1-2-9", "lpSystemPowerSupplyCount"))
mibBuilder.exportSymbols("LANPLEX-MIB-1-2-9", lpBridgePortForwardedToBridgeIndex=lpBridgePortForwardedToBridgeIndex, eemEthernetPortForwardedCts=eemEthernetPortForwardedCts, lpBridgePortReceiveBlockedDiscards=lpBridgePortReceiveBlockedDiscards, lpFddiMacBeaconHistory=lpFddiMacBeaconHistory, lpTrapDestAddr=lpTrapDestAddr, lpTrapNumber=lpTrapNumber, lpExpressEthernetPortAction=lpExpressEthernetPortAction, eemTable=eemTable, lpExpressEthernetPortAddressType=lpExpressEthernetPortAddressType, lpBridgePortEntry=lpBridgePortEntry, lpFddiMac=lpFddiMac, eemEthernetMACAddressTable=eemEthernetMACAddressTable, lpBridgePortAddressAction=lpBridgePortAddressAction, fcmEntry=fcmEntry, lpBridgePortForwardedToTable=lpBridgePortForwardedToTable, eemEthernetMACAddressType=eemEthernetMACAddressType, lpBridgePortAddressStaticPort=lpBridgePortAddressStaticPort, slotBoardStatus=slotBoardStatus, lpFddiMacIndex=lpFddiMacIndex, lpPowerSupplyFailureType=lpPowerSupplyFailureType, chassisSlotCount=chassisSlotCount, eemBaseEthernetPortIndex=eemBaseEthernetPortIndex, lpSlotExtractEvent=lpSlotExtractEvent, eemEthernetPortIndex=eemEthernetPortIndex, chassisAction=chassisAction, lpBridgePortForwardedToEntry=lpBridgePortForwardedToEntry, lpSystemControlPanelColumns=lpSystemControlPanelColumns, lpSystemExpressFddiPortCount=lpSystemExpressFddiPortCount, lpEthernetPortFrameTransmitRate=lpEthernetPortFrameTransmitRate, lpExpressEthernetPortSlotIndex=lpExpressEthernetPortSlotIndex, lpBridgePortReceiveUnicastFiltered=lpBridgePortReceiveUnicastFiltered, chassisControlPanelColumns=chassisControlPanelColumns, lpExpressEthernetPortForwardedCts=lpExpressEthernetPortForwardedCts, lpSystemEthernetPortCount=lpSystemEthernetPortCount, lpSlotExpressFunctionCount=lpSlotExpressFunctionCount, lpFddiMacPeakFrameTransmitRate=lpFddiMacPeakFrameTransmitRate, feamTable=feamTable, lpEthernetPortLinkStatus=lpEthernetPortLinkStatus, lpBridgePortFilteredToReceivePortIndex=lpBridgePortFilteredToReceivePortIndex, chassisControlPanelLines=chassisControlPanelLines, lpBridgePortSameSegmentDiscards=lpBridgePortSameSegmentDiscards, port=port, lpPowerSupply=lpPowerSupply, lpSystemSmtProxyTimeoutBase=lpSystemSmtProxyTimeoutBase, eem=eem, fcmTable=fcmTable, lpFddiMacFrameReceiveRate=lpFddiMacFrameReceiveRate, lpFddiMacByteReceiveRate=lpFddiMacByteReceiveRate, lpEthernetPortSlotIndex=lpEthernetPortSlotIndex, lpExpressFddiPortLocalIndex=lpExpressFddiPortLocalIndex, lpPowerSupplyFailureEvent=lpPowerSupplyFailureEvent, lpSystemType=lpSystemType, lpExpressEntry=lpExpressEntry, eemEthernetPortCount=eemEthernetPortCount, lpFddiMacTable=lpFddiMacTable, lpTrapEnterpriseTableEntry=lpTrapEnterpriseTableEntry, lpSystemNvMemorySize=lpSystemNvMemorySize, lpFddiMacPeakByteReceiveRate=lpFddiMacPeakByteReceiveRate, lpFddiMacPeakFrameReceiveRate=lpFddiMacPeakFrameReceiveRate, lpSlotInsertEvent=lpSlotInsertEvent, portEntry=portEntry, eemEthernetPortTable=eemEthernetPortTable, lpSlotIndex=lpSlotIndex, lpSystemName=lpSystemName, lpSystemSoftwareRevision=lpSystemSoftwareRevision, lpSlotFddiMacBaseIndex=lpSlotFddiMacBaseIndex, lpFddiMacSlotIndex=lpFddiMacSlotIndex, lpTrapEnterpriseOID=lpTrapEnterpriseOID, lpExpressEthernetPortEntry=lpExpressEthernetPortEntry, lpBridgeAddressThreshold=lpBridgeAddressThreshold, lpBridgePortReceiveMulticastLimitExceededs=lpBridgePortReceiveMulticastLimitExceededs, chassisSoftwareRevision=chassisSoftwareRevision, lpBridgeMode=lpBridgeMode, slotTable=slotTable, lpSlotFddiPortBaseIndex=lpSlotFddiPortBaseIndex, eemEthernetMACAddressStaticPort=eemEthernetMACAddressStaticPort, lpBridgePortManagementFramesReceived=lpBridgePortManagementFramesReceived, lpExpressEthernetPort=lpExpressEthernetPort, portIndex=portIndex, eemEntry=eemEntry, eemFddiMACEntry=eemFddiMACEntry, lpBridgePortFilteredToCount=lpBridgePortFilteredToCount, lpSlotEthernetPortBaseIndex=lpSlotEthernetPortBaseIndex, chassisNameAbbrev=chassisNameAbbrev, eemEthernetMACAddressSlotIndex=eemEthernetMACAddressSlotIndex, fcm=fcm, lpBridgePortReceiveSecurityDiscards=lpBridgePortReceiveSecurityDiscards, lpSystemOverTemperatureEvent=lpSystemOverTemperatureEvent, lpBridgePortReceiveErrorDiscards=lpBridgePortReceiveErrorDiscards, lpEthernetPortEntry=lpEthernetPortEntry, lpBridgePortFilteredToBridgeIndex=lpBridgePortFilteredToBridgeIndex, lpExpressEthernetPortAddressIndex=lpExpressEthernetPortAddressIndex, lpBridgePortIpFragmentationEnabled=lpBridgePortIpFragmentationEnabled, lpBridgePortAddressRemoteAddress=lpBridgePortAddressRemoteAddress, lpSlotBoardAction=lpSlotBoardAction, lpBridgePortAddressBridgeIndex=lpBridgePortAddressBridgeIndex, eemFddiMAC=eemFddiMAC, fcmBasePortIndex=fcmBasePortIndex, lpBridgeAddressTableSize=lpBridgeAddressTableSize, slotBoardType=slotBoardType, lpFddiMacLocalIndex=lpFddiMacLocalIndex, lpBridgePortForwardedToReceivePortIndex=lpBridgePortForwardedToReceivePortIndex, lpBridgePortReceiveMulticastFiltered=lpBridgePortReceiveMulticastFiltered, lpSystemSmtProxyEvents=lpSystemSmtProxyEvents, lpSystemControlPanelHardwareRevision=lpSystemControlPanelHardwareRevision, lpBridgePortAddressAge=lpBridgePortAddressAge, eemEthernetPortState=eemEthernetPortState, lpBridgePortAddressTable=lpBridgePortAddressTable, eemEthernetPort=eemEthernetPort, lpExpressFddiPortTable=lpExpressFddiPortTable, lpExpressEthernetPortDroppedCts=lpExpressEthernetPortDroppedCts, lpBridgePortBridgeIndex=lpBridgePortBridgeIndex, lpEthernetPortFrameReceiveRate=lpEthernetPortFrameReceiveRate, lpSlotFddiMacCount=lpSlotFddiMacCount, lpSlotEntry=lpSlotEntry, lpExpressFddiPortDroppedCts=lpExpressFddiPortDroppedCts, slotBoardRevision=slotBoardRevision, eemEthernetPortEntry=eemEthernetPortEntry, lpEthernetPortPeakByteTransmitRate=lpEthernetPortPeakByteTransmitRate, lpExpressFddiPortIndex=lpExpressFddiPortIndex, lpExpressEthernetPortIndex=lpExpressEthernetPortIndex, lpEthernetPortType=lpEthernetPortType, lpBridgePortLocalIndex=lpBridgePortLocalIndex, lpBridgePortAddressIndex=lpBridgePortAddressIndex, lpEthernetPortPeakFrameReceiveRate=lpEthernetPortPeakFrameReceiveRate, lpExpress=lpExpress, chassisManufacturer=chassisManufacturer, lpPowerSupplyLocation=lpPowerSupplyLocation, eemFddiMACCount=eemFddiMACCount, slotBoardAction=slotBoardAction, lpExpressAddressThreshold=lpExpressAddressThreshold, lpExpressEthernetPortAddressPortIndex=lpExpressEthernetPortAddressPortIndex, feamEntry=feamEntry, lpSlotFddiPortCount=lpSlotFddiPortCount, lpBridgePortAddressIsStatic=lpBridgePortAddressIsStatic, lpTrapEnterpriseIndex=lpTrapEnterpriseIndex, lpSlotExpressFunctionBaseIndex=lpSlotExpressFunctionBaseIndex, spm=spm, lpSystemControlPanelSoftwareRevision=lpSystemControlPanelSoftwareRevision, lpBridgePortReceiveUnknownDiscards=lpBridgePortReceiveUnknownDiscards, lpEthernetPortPeakByteReceiveRate=lpEthernetPortPeakByteReceiveRate, lpSystemBuildTime=lpSystemBuildTime, lpSystemFlashMemorySize=lpSystemFlashMemorySize, lpSystemFddiPortCount=lpSystemFddiPortCount, lpTrapEnterprise=lpTrapEnterprise, slot=slot, chassisId=chassisId, spmEthernetPortCount=spmEthernetPortCount, lpExpressEthernetPortAddress=lpExpressEthernetPortAddress, chassisRevision=chassisRevision, chassisControlPanelText=chassisControlPanelText, feamBasePortIndex=feamBasePortIndex, lpSystemId=lpSystemId, lpSystemExpressEthernetPortCount=lpSystemExpressEthernetPortCount, lpSlotTable=lpSlotTable, lpSystemBridgeFunctionCount=lpSystemBridgeFunctionCount, lpEthernetPortChipsetType=lpEthernetPortChipsetType, lpBridgeTable=lpBridgeTable, lpBridgePortForwardedToDstPortIndex=lpBridgePortForwardedToDstPortIndex, portSlotIndex=portSlotIndex, lpExpressFddiPort=lpExpressFddiPort, eemEthernetMACAddressIsStatic=eemEthernetMACAddressIsStatic, slotBoardNameAbbrev=slotBoardNameAbbrev, lpSystemExpressFunctionCount=lpSystemExpressFunctionCount, lpExpressEthernetPortAddressAge=lpExpressEthernetPortAddressAge, lpExpressEthernetPortAddressRemoteAddress=lpExpressEthernetPortAddressRemoteAddress, lpSlotExpressEthernetPortCount=lpSlotExpressEthernetPortCount, chassisType=chassisType, feamPortCount=feamPortCount, lpSystemSlotCount=lpSystemSlotCount, lpSystemAction=lpSystemAction, lpSlot=lpSlot, eemEthernetMACAddressEntry=eemEthernetMACAddressEntry, lpSlotBridgeFunctionBaseIndex=lpSlotBridgeFunctionBaseIndex, portTable=portTable, eemEthernetMACAddressPortIndex=eemEthernetMACAddressPortIndex, lpSystemMemorySize=lpSystemMemorySize, eemFddiSlotIndex=eemFddiSlotIndex, lpSlotBoardRevision=lpSlotBoardRevision, lpExpressSlotIndex=lpExpressSlotIndex, lpFddiMacByteTransmitRate=lpFddiMacByteTransmitRate, lpExpressEthernetPortLocalIndex=lpExpressEthernetPortLocalIndex, lpFddiMacEntry=lpFddiMacEntry, eemEthernetMACAddressAge=eemEthernetMACAddressAge, lpSlotEthernetPortCount=lpSlotEthernetPortCount, lpEthernetPortIndex=lpEthernetPortIndex, chassis=chassis, lpBridgeLocalIndex=lpBridgeLocalIndex, lpExpressEthernetPortTable=lpExpressEthernetPortTable, lpBridgePortCount=lpBridgePortCount, lpBridgePortTotalForwardedCts=lpBridgePortTotalForwardedCts, lanplex=lanplex, lpBridgePortReceiveMulticastLimitExceededCount=lpBridgePortReceiveMulticastLimitExceededCount, lpFddiPortTable=lpFddiPortTable, lpBridgePortAddressPortIndex=lpBridgePortAddressPortIndex, lpSlotOverTemperatureEvent=lpSlotOverTemperatureEvent, fcmSlotIndex=fcmSlotIndex, eemEthernetPortAction=eemEthernetPortAction, lpEthernetPortReceiveMulticastThreshold=lpEthernetPortReceiveMulticastThreshold, lpFddiPortEntry=lpFddiPortEntry, lpExpressTable=lpExpressTable, eemEthernetPortLabel=eemEthernetPortLabel, lpBridgePortAddressType=lpBridgePortAddressType, lpSlotExpressEthernetPortBaseIndex=lpSlotExpressEthernetPortBaseIndex, lpBridgePortSlotIndex=lpBridgePortSlotIndex, spmEntry=spmEntry, lpFddiPortLabel=lpFddiPortLabel, eemFddiMACDroppedCts=eemFddiMACDroppedCts, lpBridgeEntry=lpBridgeEntry, lpBridgePortTransmitMulticastFiltered=lpBridgePortTransmitMulticastFiltered, lpBridgePortAddressEntry=lpBridgePortAddressEntry, feamSlotIndex=feamSlotIndex, lpSlotExpressFddiPortBaseIndex=lpSlotExpressFddiPortBaseIndex, lpExpressFddiPortForwardedCts=lpExpressFddiPortForwardedCts, lpExpressEthernetPortAddressTable=lpExpressEthernetPortAddressTable, eemEthernetPortUTurnCts=eemEthernetPortUTurnCts, lpSystemControlPanelText=lpSystemControlPanelText, eemSlotIndex=eemSlotIndex, slotIndex=slotIndex, lpPowerSupplyTable=lpPowerSupplyTable, lpPowerSupplyLastFailure=lpPowerSupplyLastFailure, slotBoardName=slotBoardName, lpTrapDestTableEntry=lpTrapDestTableEntry, spmBaseEthernetPortIndex=spmBaseEthernetPortIndex, spmSlotIndex=spmSlotIndex, lanplexMib=lanplexMib, lpTrapDestEnterpriseIndex=lpTrapDestEnterpriseIndex, lpExpressEthernetPortUTurnCts=lpExpressEthernetPortUTurnCts, lpExpressEthernetPortAddressStaticPort=lpExpressEthernetPortAddressStaticPort, lpFddiPort=lpFddiPort, lpEthernetPortLabel=lpEthernetPortLabel, lpBridgePortTransmitUnicastFiltered=lpBridgePortTransmitUnicastFiltered, eemFddiMACTable=eemFddiMACTable, chassisBuildTime=chassisBuildTime, lpBridgePortTotalFiltered=lpBridgePortTotalFiltered, lpSlotBoardNameAbbrev=lpSlotBoardNameAbbrev, chassisName=chassisName, lpBridgePortTransmitBlockedDiscards=lpBridgePortTransmitBlockedDiscards, fcmPortCount=fcmPortCount, lpSlotBoardType=lpSlotBoardType, slotEntry=slotEntry, lpBridgeIndex=lpBridgeIndex, lpEthernetPort=lpEthernetPort, feamMACCount=feamMACCount, lpSystemManufacturer=lpSystemManufacturer, lpFddiMacPeakByteTransmitRate=lpFddiMacPeakByteTransmitRate, lpBridgePortFilteredToEntry=lpBridgePortFilteredToEntry, lpExpressLocalIndex=lpExpressLocalIndex, lpBridgePortFilteredToTable=lpBridgePortFilteredToTable, synernetics=synernetics, feam=feam, eemBaseFddiMACIndex=eemBaseFddiMACIndex, eemFddiMACForwardedCts=eemFddiMACForwardedCts, lpSystemFddiMacCount=lpSystemFddiMacCount)
mibBuilder.exportSymbols("LANPLEX-MIB-1-2-9", portLabel=portLabel, lpFddiMacFrameTransmitRate=lpFddiMacFrameTransmitRate, lpSlotBoardName=lpSlotBoardName, lpBridgePortForwardedToCount=lpBridgePortForwardedToCount, lpSystemPowerSupplyCount=lpSystemPowerSupplyCount, lpSystemControlPanelLines=lpSystemControlPanelLines, lpFddiPortLocalIndex=lpFddiPortLocalIndex, lpBridgePortTable=lpBridgePortTable, eemEthernetPortSlotIndex=eemEthernetPortSlotIndex, lpBridgePortType=lpBridgePortType, lpExpressFddiPortEntry=lpExpressFddiPortEntry, lpSystemBackplaneRevision=lpSystemBackplaneRevision, lpEthernetPortByteTransmitRate=lpEthernetPortByteTransmitRate, lpPowerSupplyEntry=lpPowerSupplyEntry, lpBridgePortReceiveMulticastLimit=lpBridgePortReceiveMulticastLimit, lpSystem=lpSystem, lpTrapDest=lpTrapDest, eemEthernetMACAddressIndex=eemEthernetMACAddressIndex, lpFddiPortSlotIndex=lpFddiPortSlotIndex, lpPowerSupplyIndex=lpPowerSupplyIndex, lpBridgePortTotalDiscards=lpBridgePortTotalDiscards, eemAddressThreshold=eemAddressThreshold, eemEthernetMACAddressRemoteAddress=eemEthernetMACAddressRemoteAddress, lpExpressIndex=lpExpressIndex, lpExpressEthernetPortAddressEntry=lpExpressEthernetPortAddressEntry, lpPowerSupplyStatus=lpPowerSupplyStatus, lpBridgeBaseSlotIndex=lpBridgeBaseSlotIndex, lpBridgePortFilteredToDstPortIndex=lpBridgePortFilteredToDstPortIndex, eemEthernetPortDroppedCts=eemEthernetPortDroppedCts, lpBridgeAddressThresholdEvent=lpBridgeAddressThresholdEvent, lpEthernetPortPeakFrameTransmitRate=lpEthernetPortPeakFrameTransmitRate, lpSlotExpressFddiPortCount=lpSlotExpressFddiPortCount, lpEthernetPortLocalIndex=lpEthernetPortLocalIndex, lpBridgePortIndex=lpBridgePortIndex, spmTable=spmTable, lpEthernetPortTable=lpEthernetPortTable, lpSlotBridgeFunctionCount=lpSlotBridgeFunctionCount, lpTrapDestTable=lpTrapDestTable, feamBaseMACIndex=feamBaseMACIndex, lpBridge=lpBridge, lpSlotBoardStatus=lpSlotBoardStatus, lpExpressEthernetPortAddressIsStatic=lpExpressEthernetPortAddressIsStatic, lpFddiMacReceiveMulticastThreshold=lpFddiMacReceiveMulticastThreshold, lpTrapEnterpriseTable=lpTrapEnterpriseTable, lpExpressEthernetPortAddressSlotIndex=lpExpressEthernetPortAddressSlotIndex, eemMACAddress=eemMACAddress, lpBridgePortReceiveOtherDiscards=lpBridgePortReceiveOtherDiscards, lpEthernetPortByteReceiveRate=lpEthernetPortByteReceiveRate, lpExpressFddiPortSlotIndex=lpExpressFddiPortSlotIndex, lpFddiPortIndex=lpFddiPortIndex, eemFddiMACIndex=eemFddiMACIndex, lpTrapEntryStatus=lpTrapEntryStatus)
