#
# PySNMP MIB module CTRON-IP-ROUTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CTRON-IP-ROUTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:26:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
nwRtrProtoSuites, = mibBuilder.importSymbols("ROUTER-OIDS", "nwRtrProtoSuites")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, TimeTicks, MibIdentifier, ObjectIdentity, ModuleIdentity, Gauge32, Integer32, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "TimeTicks", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Gauge32", "Integer32", "Counter32", "Counter64")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
nwIpRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1))
nwIpMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 1))
nwIpComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2))
nwIpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1))
nwIpForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2))
nwIpTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4))
nwIpFib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5))
nwIpEndSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6))
nwIpAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7))
nwIpFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 8))
nwIpRedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9))
nwIpEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10))
nwIpWorkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11))
nwIpClientServices = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 12))
nwIpSysConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1, 1))
nwIpSysAdministration = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1, 2))
nwIpFwdSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1))
nwIpFwdInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2))
nwIpFwdCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1))
nwIpFwdIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1))
nwIpFwdIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2))
nwIpDistanceVector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1))
nwIpLinkState = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2))
nwIpRip = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1))
nwIpRipSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1))
nwIpRipInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2))
nwIpRipDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3))
nwIpRipFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 4))
nwIpRipConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1))
nwIpRipCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2))
nwIpRipIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1))
nwIpRipIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2))
nwIpOspf = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1))
nwIpOspfSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1))
nwIpOspfInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2))
nwIpOspfDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 3))
nwIpOspfFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 4))
nwIpOspfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 1))
nwIpOspfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2))
nwIpOspfIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1))
nwIpOspfIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2))
nwIpFibSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 1))
nwIpOspfFib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2))
nwIpOspfFibControl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 1))
nwIpOspfFibEntries = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2))
nwIpHostsSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 1))
nwIpHostsInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2))
nwIpHostsToMedia = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3))
nwIpRedirectorSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9, 1))
nwIpRedirectorInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9, 2))
nwIpEventLogConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 1))
nwIpEventLogFilterTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2))
nwIpEventLogTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3))
nwIpMibRevText = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpMibRevText.setStatus('mandatory')
nwIpSysRouterId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpSysRouterId.setStatus('mandatory')
nwIpSysAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpSysAdminStatus.setStatus('mandatory')
nwIpSysOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpSysOperStatus.setStatus('mandatory')
nwIpSysAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpSysAdminReset.setStatus('mandatory')
nwIpSysOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpSysOperationalTime.setStatus('mandatory')
nwIpSysVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 1, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpSysVersion.setStatus('mandatory')
nwIpFwdCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdCtrAdminStatus.setStatus('mandatory')
nwIpFwdCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdCtrReset.setStatus('mandatory')
nwIpFwdCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrOperationalTime.setStatus('mandatory')
nwIpFwdCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrInPkts.setStatus('mandatory')
nwIpFwdCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrOutPkts.setStatus('mandatory')
nwIpFwdCtrFwdPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrFwdPkts.setStatus('mandatory')
nwIpFwdCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrFilteredPkts.setStatus('mandatory')
nwIpFwdCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrDiscardPkts.setStatus('mandatory')
nwIpFwdCtrAddrErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrAddrErrPkts.setStatus('mandatory')
nwIpFwdCtrLenErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrLenErrPkts.setStatus('mandatory')
nwIpFwdCtrHdrErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrHdrErrPkts.setStatus('mandatory')
nwIpFwdCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrInBytes.setStatus('mandatory')
nwIpFwdCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrOutBytes.setStatus('mandatory')
nwIpFwdCtrFwdBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrFwdBytes.setStatus('mandatory')
nwIpFwdCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrFilteredBytes.setStatus('mandatory')
nwIpFwdCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrDiscardBytes.setStatus('mandatory')
nwIpFwdCtrHostInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrHostInPkts.setStatus('mandatory')
nwIpFwdCtrHostOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrHostOutPkts.setStatus('mandatory')
nwIpFwdCtrHostDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrHostDiscardPkts.setStatus('mandatory')
nwIpFwdCtrHostInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrHostInBytes.setStatus('mandatory')
nwIpFwdCtrHostOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrHostOutBytes.setStatus('mandatory')
nwIpFwdCtrHostDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdCtrHostDiscardBytes.setStatus('mandatory')
nwIpFwdIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpFwdIfTable.setStatus('mandatory')
nwIpFwdIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpFwdIfIndex"))
if mibBuilder.loadTexts: nwIpFwdIfEntry.setStatus('mandatory')
nwIpFwdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfIndex.setStatus('mandatory')
nwIpFwdIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfAdminStatus.setStatus('mandatory')
nwIpFwdIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfOperStatus.setStatus('mandatory')
nwIpFwdIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfOperationalTime.setStatus('mandatory')
nwIpFwdIfControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("add", 2), ("delete", 3))).clone('add')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfControl.setStatus('mandatory')
nwIpFwdIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 6), Integer32().clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfMtu.setStatus('mandatory')
nwIpFwdIfForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfForwarding.setStatus('mandatory')
nwIpFwdIfFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 7, 8, 9, 11, 14, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("snap", 3), ("slip", 5), ("localtalk", 7), ("nativewan", 8), ("encapenet", 9), ("encapenetsnap", 11), ("encaptrsnap", 14), ("encapfddisnap", 16), ("canonical", 17))).clone('ethernet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfFrameType.setStatus('mandatory')
nwIpFwdIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfAclIdentifier.setStatus('mandatory')
nwIpFwdIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfAclStatus.setStatus('mandatory')
nwIpFwdIfCacheControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfCacheControl.setStatus('mandatory')
nwIpFwdIfCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCacheEntries.setStatus('mandatory')
nwIpFwdIfCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCacheHits.setStatus('mandatory')
nwIpFwdIfCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCacheMisses.setStatus('mandatory')
nwIpAddressTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 2), )
if mibBuilder.loadTexts: nwIpAddressTable.setStatus('mandatory')
nwIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 2, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpAddrIfIndex"), (0, "CTRON-IP-ROUTER-MIB", "nwIpAddrIfAddress"))
if mibBuilder.loadTexts: nwIpAddrEntry.setStatus('mandatory')
nwIpAddrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAddrIfIndex.setStatus('mandatory')
nwIpAddrIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAddrIfAddress.setStatus('mandatory')
nwIpAddrIfControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("add", 2), ("delete", 3))).clone('add')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAddrIfControl.setStatus('mandatory')
nwIpAddrIfAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("primary", 2), ("secondary", 3), ("workgroup", 4))).clone('primary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAddrIfAddrType.setStatus('mandatory')
nwIpAddrIfMask = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAddrIfMask.setStatus('mandatory')
nwIpAddrIfBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("zeros", 2), ("ones", 3))).clone('ones')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAddrIfBcastAddr.setStatus('mandatory')
nwIpFwdIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpFwdIfCtrTable.setStatus('mandatory')
nwIpFwdIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpFwdIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpFwdIfCtrEntry.setStatus('mandatory')
nwIpFwdIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrIfIndex.setStatus('mandatory')
nwIpFwdIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfCtrAdminStatus.setStatus('mandatory')
nwIpFwdIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpFwdIfCtrReset.setStatus('mandatory')
nwIpFwdIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrOperationalTime.setStatus('mandatory')
nwIpFwdIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrInPkts.setStatus('mandatory')
nwIpFwdIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrOutPkts.setStatus('mandatory')
nwIpFwdIfCtrFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrFwdPkts.setStatus('mandatory')
nwIpFwdIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrFilteredPkts.setStatus('mandatory')
nwIpFwdIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrDiscardPkts.setStatus('mandatory')
nwIpFwdIfCtrAddrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrAddrErrPkts.setStatus('mandatory')
nwIpFwdIfCtrLenErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrLenErrPkts.setStatus('mandatory')
nwIpFwdIfCtrHdrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrHdrErrPkts.setStatus('mandatory')
nwIpFwdIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrInBytes.setStatus('mandatory')
nwIpFwdIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrOutBytes.setStatus('mandatory')
nwIpFwdIfCtrFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrFwdBytes.setStatus('mandatory')
nwIpFwdIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrFilteredBytes.setStatus('mandatory')
nwIpFwdIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrDiscardBytes.setStatus('mandatory')
nwIpFwdIfCtrHostInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrHostInPkts.setStatus('mandatory')
nwIpFwdIfCtrHostOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrHostOutPkts.setStatus('mandatory')
nwIpFwdIfCtrHostDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrHostDiscardPkts.setStatus('mandatory')
nwIpFwdIfCtrHostInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrHostInBytes.setStatus('mandatory')
nwIpFwdIfCtrHostOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrHostOutBytes.setStatus('mandatory')
nwIpFwdIfCtrHostDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpFwdIfCtrHostDiscardBytes.setStatus('mandatory')
nwIpRipAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipAdminStatus.setStatus('mandatory')
nwIpRipOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipOperStatus.setStatus('mandatory')
nwIpRipAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipAdminReset.setStatus('mandatory')
nwIpRipOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipOperationalTime.setStatus('mandatory')
nwIpRipVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipVersion.setStatus('mandatory')
nwIpRipStackSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 6), Integer32().clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipStackSize.setStatus('mandatory')
nwIpRipThreadPriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 7), Integer32().clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipThreadPriority.setStatus('mandatory')
nwIpRipDatabaseThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 8), Integer32().clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipDatabaseThreshold.setStatus('mandatory')
nwIpRipAgeOut = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 9), Integer32().clone(210)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipAgeOut.setStatus('mandatory')
nwIpRipHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 1, 10), Integer32().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipHoldDown.setStatus('mandatory')
nwIpRipCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipCtrAdminStatus.setStatus('mandatory')
nwIpRipCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipCtrReset.setStatus('mandatory')
nwIpRipCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrOperationalTime.setStatus('mandatory')
nwIpRipCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrInPkts.setStatus('mandatory')
nwIpRipCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrOutPkts.setStatus('mandatory')
nwIpRipCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrFilteredPkts.setStatus('mandatory')
nwIpRipCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrDiscardPkts.setStatus('mandatory')
nwIpRipCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrInBytes.setStatus('mandatory')
nwIpRipCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrOutBytes.setStatus('mandatory')
nwIpRipCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrFilteredBytes.setStatus('mandatory')
nwIpRipCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipCtrDiscardBytes.setStatus('mandatory')
nwIpRipIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpRipIfTable.setStatus('mandatory')
nwIpRipIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpRipIfIndex"))
if mibBuilder.loadTexts: nwIpRipIfEntry.setStatus('mandatory')
nwIpRipIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfIndex.setStatus('mandatory')
nwIpRipIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfAdminStatus.setStatus('mandatory')
nwIpRipIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfOperStatus.setStatus('mandatory')
nwIpRipIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfOperationalTime.setStatus('mandatory')
nwIpRipIfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 5), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfVersion.setStatus('mandatory')
nwIpRipIfAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 6), Integer32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfAdvertisement.setStatus('mandatory')
nwIpRipIfFloodDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 7), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfFloodDelay.setStatus('mandatory')
nwIpRipIfRequestDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfRequestDelay.setStatus('mandatory')
nwIpRipIfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 9), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfPriority.setStatus('mandatory')
nwIpRipIfHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 10), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfHelloTimer.setStatus('mandatory')
nwIpRipIfSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfSplitHorizon.setStatus('mandatory')
nwIpRipIfPoisonReverse = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfPoisonReverse.setStatus('mandatory')
nwIpRipIfSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfSnooping.setStatus('mandatory')
nwIpRipIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bma", 2), ("nbma", 3))).clone('bma')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfType.setStatus('mandatory')
nwIpRipIfXmitCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfXmitCost.setStatus('mandatory')
nwIpRipIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfAclIdentifier.setStatus('mandatory')
nwIpRipIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfAclStatus.setStatus('mandatory')
nwIpRipIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpRipIfCtrTable.setStatus('mandatory')
nwIpRipIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpRipIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpRipIfCtrEntry.setStatus('mandatory')
nwIpRipIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrIfIndex.setStatus('mandatory')
nwIpRipIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfCtrAdminStatus.setStatus('mandatory')
nwIpRipIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipIfCtrReset.setStatus('mandatory')
nwIpRipIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrOperationalTime.setStatus('mandatory')
nwIpRipIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrInPkts.setStatus('mandatory')
nwIpRipIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrOutPkts.setStatus('mandatory')
nwIpRipIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrFilteredPkts.setStatus('mandatory')
nwIpRipIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrDiscardPkts.setStatus('mandatory')
nwIpRipIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrInBytes.setStatus('mandatory')
nwIpRipIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrOutBytes.setStatus('mandatory')
nwIpRipIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrFilteredBytes.setStatus('mandatory')
nwIpRipIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipIfCtrDiscardBytes.setStatus('mandatory')
nwIpRipRouteTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1), )
if mibBuilder.loadTexts: nwIpRipRouteTable.setStatus('mandatory')
nwIpRipRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpRipRtNetId"), (0, "CTRON-IP-ROUTER-MIB", "nwIpRipRtIfIndex"), (0, "CTRON-IP-ROUTER-MIB", "nwIpRipRtSrcNode"))
if mibBuilder.loadTexts: nwIpRipRouteEntry.setStatus('mandatory')
nwIpRipRtNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipRtNetId.setStatus('mandatory')
nwIpRipRtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipRtIfIndex.setStatus('mandatory')
nwIpRipRtSrcNode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipRtSrcNode.setStatus('mandatory')
nwIpRipRtMask = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipRtMask.setStatus('mandatory')
nwIpRipRtHops = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipRtHops.setStatus('mandatory')
nwIpRipRtAge = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipRtAge.setStatus('mandatory')
nwIpRipRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("remote", 4), ("static", 5), ("ospf", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipRtType.setStatus('mandatory')
nwIpRipRtFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 1, 1, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRipRtFlags.setStatus('mandatory')
nwIpOspfAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfAdminStatus.setStatus('mandatory')
nwIpOspfOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfOperStatus.setStatus('mandatory')
nwIpOspfAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfAdminReset.setStatus('mandatory')
nwIpOspfOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfOperationalTime.setStatus('mandatory')
nwIpOspfVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfVersion.setStatus('mandatory')
nwIpOspfStackSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 1, 6), Integer32().clone(50000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfStackSize.setStatus('mandatory')
nwIpOspfThreadPriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 1, 7), Integer32().clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfThreadPriority.setStatus('mandatory')
nwIpOspfCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfCtrAdminStatus.setStatus('mandatory')
nwIpOspfCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfCtrReset.setStatus('mandatory')
nwIpOspfCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrOperationalTime.setStatus('mandatory')
nwIpOspfCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrInPkts.setStatus('mandatory')
nwIpOspfCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrOutPkts.setStatus('mandatory')
nwIpOspfCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrFilteredPkts.setStatus('mandatory')
nwIpOspfCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrDiscardPkts.setStatus('mandatory')
nwIpOspfCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrInBytes.setStatus('mandatory')
nwIpOspfCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrOutBytes.setStatus('mandatory')
nwIpOspfCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrFilteredBytes.setStatus('mandatory')
nwIpOspfCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfCtrDiscardBytes.setStatus('mandatory')
nwIpOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpOspfIfTable.setStatus('mandatory')
nwIpOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpOspfIfIndex"))
if mibBuilder.loadTexts: nwIpOspfIfEntry.setStatus('mandatory')
nwIpOspfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfIndex.setStatus('mandatory')
nwIpOspfIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfIfAdminStatus.setStatus('mandatory')
nwIpOspfIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfOperStatus.setStatus('mandatory')
nwIpOspfIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfOperationalTime.setStatus('mandatory')
nwIpOspfIfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 5), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfIfVersion.setStatus('mandatory')
nwIpOspfIfSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfIfSnooping.setStatus('mandatory')
nwIpOspfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bma", 2), ("nbma", 3))).clone('bma')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfType.setStatus('mandatory')
nwIpOspfIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfIfAclIdentifier.setStatus('mandatory')
nwIpOspfIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfIfAclStatus.setStatus('mandatory')
nwIpOspfIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpOspfIfCtrTable.setStatus('mandatory')
nwIpOspfIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpOspfIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpOspfIfCtrEntry.setStatus('mandatory')
nwIpOspfIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrIfIndex.setStatus('mandatory')
nwIpOspfIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfIfCtrAdminStatus.setStatus('mandatory')
nwIpOspfIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfIfCtrReset.setStatus('mandatory')
nwIpOspfIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrOperationalTime.setStatus('mandatory')
nwIpOspfIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrInPkts.setStatus('mandatory')
nwIpOspfIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrOutPkts.setStatus('mandatory')
nwIpOspfIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrFilteredPkts.setStatus('mandatory')
nwIpOspfIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrDiscardPkts.setStatus('mandatory')
nwIpOspfIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrInBytes.setStatus('mandatory')
nwIpOspfIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrOutBytes.setStatus('mandatory')
nwIpOspfIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrFilteredBytes.setStatus('mandatory')
nwIpOspfIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 4, 2, 1, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfIfCtrDiscardBytes.setStatus('mandatory')
nwIpRipRoutePriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 1, 1), Integer32().clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRipRoutePriority.setStatus('mandatory')
nwIpOSPFRoutePriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 1, 2), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOSPFRoutePriority.setStatus('mandatory')
nwIpStaticRoutePriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 1, 3), Integer32().clone(48)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpStaticRoutePriority.setStatus('mandatory')
nwIpOspfForward = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfForward.setStatus('mandatory')
nwIpOspfLeakAllStaticRoutes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1))).clone(namedValues=NamedValues(("disabled", 2), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfLeakAllStaticRoutes.setStatus('mandatory')
nwIpOspfLeakAllRipRoutes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfLeakAllRipRoutes.setStatus('mandatory')
nwIpOspfLeakAllBgp4Routes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfLeakAllBgp4Routes.setStatus('mandatory')
nwIpOspfStaticTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpOspfStaticTable.setStatus('mandatory')
nwIpOspfStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpOspfStaticDest"), (0, "CTRON-IP-ROUTER-MIB", "nwIpOspfStaticForwardMask"), (0, "CTRON-IP-ROUTER-MIB", "nwIpOspfStaticNextHop"))
if mibBuilder.loadTexts: nwIpOspfStaticEntry.setStatus('mandatory')
nwIpOspfStaticDest = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfStaticDest.setStatus('mandatory')
nwIpOspfStaticForwardMask = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfStaticForwardMask.setStatus('mandatory')
nwIpOspfStaticNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpOspfStaticNextHop.setStatus('mandatory')
nwIpOspfStaticMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfStaticMetric.setStatus('mandatory')
nwIpOspfStaticMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfStaticMetricType.setStatus('mandatory')
nwIpOspfStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpOspfStaticStatus.setStatus('mandatory')
nwIpOspfDynamicTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 2))
nwIpOspfRipTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 3))
nwIpOspfBgp4Table = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 5, 2, 2, 4))
nwIpHostsTimeToLive = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostsTimeToLive.setStatus('mandatory')
nwIpHostsRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostsRetryCount.setStatus('mandatory')
nwIpHostCtlTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1), )
if mibBuilder.loadTexts: nwIpHostCtlTable.setStatus('mandatory')
nwIpHostCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpHostCtlIfIndex"))
if mibBuilder.loadTexts: nwIpHostCtlEntry.setStatus('mandatory')
nwIpHostCtlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostCtlIfIndex.setStatus('mandatory')
nwIpHostCtlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostCtlAdminStatus.setStatus('mandatory')
nwIpHostCtlOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostCtlOperStatus.setStatus('mandatory')
nwIpHostCtlOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostCtlOperationalTime.setStatus('mandatory')
nwIpHostCtlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostCtlProtocol.setStatus('mandatory')
nwIpHostCtlSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostCtlSnooping.setStatus('mandatory')
nwIpHostCtlProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostCtlProxy.setStatus('mandatory')
nwIpHostCtlCacheMax = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 8), Integer32().clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostCtlCacheMax.setStatus('mandatory')
nwIpHostCtlCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostCtlCacheSize.setStatus('mandatory')
nwIpHostCtlNumStatics = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostCtlNumStatics.setStatus('mandatory')
nwIpHostCtlNumDynamics = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostCtlNumDynamics.setStatus('mandatory')
nwIpHostCtlCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostCtlCacheHits.setStatus('mandatory')
nwIpHostCtlCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostCtlCacheMisses.setStatus('mandatory')
nwIpHostMapTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1), )
if mibBuilder.loadTexts: nwIpHostMapTable.setStatus('mandatory')
nwIpHostMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpHostMapIfIndex"), (0, "CTRON-IP-ROUTER-MIB", "nwIpHostMapIpAddr"))
if mibBuilder.loadTexts: nwIpHostMapEntry.setStatus('mandatory')
nwIpHostMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostMapIfIndex.setStatus('mandatory')
nwIpHostMapIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostMapIpAddr.setStatus('mandatory')
nwIpHostMapPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1, 1, 3), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostMapPhysAddr.setStatus('mandatory')
nwIpHostMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4), ("inactive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostMapType.setStatus('mandatory')
nwIpHostMapCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostMapCircuitID.setStatus('mandatory')
nwIpHostMapFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 7, 8, 9, 11, 14, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("snap", 3), ("slip", 5), ("localtalk", 7), ("nativewan", 8), ("encapenet", 9), ("encapenetsnap", 11), ("encaptrsnap", 14), ("encapfddisnap", 16), ("canonical", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpHostMapFraming.setStatus('mandatory')
nwIpHostMapPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 6, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpHostMapPortNumber.setStatus('mandatory')
nwIpAclValidEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpAclValidEntries.setStatus('mandatory')
nwIpAclTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2), )
if mibBuilder.loadTexts: nwIpAclTable.setStatus('mandatory')
nwIpAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpAclIdentifier"), (0, "CTRON-IP-ROUTER-MIB", "nwIpAclSequence"))
if mibBuilder.loadTexts: nwIpAclEntry.setStatus('mandatory')
nwIpAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpAclIdentifier.setStatus('mandatory')
nwIpAclSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpAclSequence.setStatus('mandatory')
nwIpAclPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permit", 3), ("deny", 4), ("permit-bidirectional", 5), ("deny-bidirectional", 6))).clone('permit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAclPermission.setStatus('mandatory')
nwIpAclMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpAclMatches.setStatus('mandatory')
nwIpAclDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAclDestAddress.setStatus('mandatory')
nwIpAclDestMask = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAclDestMask.setStatus('mandatory')
nwIpAclSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAclSrcAddress.setStatus('mandatory')
nwIpAclSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAclSrcMask.setStatus('mandatory')
nwIpAclProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("all", 2), ("icmp", 3), ("udp", 4), ("tcp", 5))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAclProtocol.setStatus('mandatory')
nwIpAclPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 7, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpAclPortNumber.setStatus('mandatory')
nwIpRedirectTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9, 1, 1), )
if mibBuilder.loadTexts: nwIpRedirectTable.setStatus('mandatory')
nwIpRedirectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9, 1, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpRedirectPort"))
if mibBuilder.loadTexts: nwIpRedirectEntry.setStatus('mandatory')
nwIpRedirectPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRedirectPort.setStatus('mandatory')
nwIpRedirectAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRedirectAddress.setStatus('mandatory')
nwIpRedirectType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("delete", 2))).clone('forward')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpRedirectType.setStatus('mandatory')
nwIpRedirectCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 9, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpRedirectCount.setStatus('mandatory')
nwIpEventAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpEventAdminStatus.setStatus('mandatory')
nwIpEventMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 1, 2), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpEventMaxEntries.setStatus('mandatory')
nwIpEventTraceAll = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpEventTraceAll.setStatus('mandatory')
nwIpEventFilterTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2, 1), )
if mibBuilder.loadTexts: nwIpEventFilterTable.setStatus('mandatory')
nwIpEventFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpEventFltrProtocol"), (0, "CTRON-IP-ROUTER-MIB", "nwIpEventFltrIfNum"))
if mibBuilder.loadTexts: nwIpEventFilterEntry.setStatus('mandatory')
nwIpEventFltrProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventFltrProtocol.setStatus('mandatory')
nwIpEventFltrIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventFltrIfNum.setStatus('mandatory')
nwIpEventFltrControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("delete", 2), ("add", 3))).clone('add')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpEventFltrControl.setStatus('mandatory')
nwIpEventFltrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("diags", 32), ("error", 64))).clone('error')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpEventFltrType.setStatus('mandatory')
nwIpEventFltrSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3))).clone('highest')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpEventFltrSeverity.setStatus('mandatory')
nwIpEventFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("log", 1), ("trap", 2), ("log-trap", 3))).clone('log')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpEventFltrAction.setStatus('mandatory')
nwIpEventTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1), )
if mibBuilder.loadTexts: nwIpEventTable.setStatus('mandatory')
nwIpEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpEventNumber"))
if mibBuilder.loadTexts: nwIpEventEntry.setStatus('mandatory')
nwIpEventNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventNumber.setStatus('mandatory')
nwIpEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventTime.setStatus('mandatory')
nwIpEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("diags", 32), ("error", 64)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventType.setStatus('mandatory')
nwIpEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventSeverity.setStatus('mandatory')
nwIpEventProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventProtocol.setStatus('mandatory')
nwIpEventIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventIfNum.setStatus('mandatory')
nwIpEventTextString = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 10, 3, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpEventTextString.setStatus('mandatory')
nwIpWgDefTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1), )
if mibBuilder.loadTexts: nwIpWgDefTable.setStatus('mandatory')
nwIpWgDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpWgDefIdentifier"))
if mibBuilder.loadTexts: nwIpWgDefEntry.setStatus('mandatory')
nwIpWgDefIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgDefIdentifier.setStatus('mandatory')
nwIpWgDefHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpWgDefHostAddress.setStatus('mandatory')
nwIpWgDefSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpWgDefSubnetMask.setStatus('mandatory')
nwIpWgDefSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("low", 2), ("medium", 3), ("high", 4))).clone('low')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpWgDefSecurity.setStatus('mandatory')
nwIpWgDefFastPath = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpWgDefFastPath.setStatus('mandatory')
nwIpWgDefRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))).clone('notReady')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpWgDefRowStatus.setStatus('mandatory')
nwIpWgDefOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("disabled", 2), ("subnetConflict", 3), ("internalError", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgDefOperStatus.setStatus('mandatory')
nwIpWgDefNumActiveIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgDefNumActiveIntf.setStatus('mandatory')
nwIpWgDefNumTotalIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgDefNumTotalIntf.setStatus('mandatory')
nwIpWgIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 2), )
if mibBuilder.loadTexts: nwIpWgIfTable.setStatus('mandatory')
nwIpWgIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 2, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpWgIfDefIdent"), (0, "CTRON-IP-ROUTER-MIB", "nwIpWgIfIfIndex"))
if mibBuilder.loadTexts: nwIpWgIfEntry.setStatus('mandatory')
nwIpWgIfDefIdent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgIfDefIdent.setStatus('mandatory')
nwIpWgIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgIfIfIndex.setStatus('mandatory')
nwIpWgIfNumActiveHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgIfNumActiveHosts.setStatus('mandatory')
nwIpWgIfNumKnownHosts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgIfNumKnownHosts.setStatus('mandatory')
nwIpWgIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))).clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpWgIfRowStatus.setStatus('mandatory')
nwIpWgIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("disabled", 2), ("workgroupInvalid", 3), ("addressConflict", 4), ("resetRequired", 5), ("linkDown", 6), ("routingDown", 7), ("internalError", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgIfOperStatus.setStatus('mandatory')
nwIpWgRngTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 3), )
if mibBuilder.loadTexts: nwIpWgRngTable.setStatus('mandatory')
nwIpWgRngEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 3, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpWgRngBegHostAddr"), (0, "CTRON-IP-ROUTER-MIB", "nwIpWgRngEndHostAddr"), (0, "CTRON-IP-ROUTER-MIB", "nwIpWgRngIfIndex"))
if mibBuilder.loadTexts: nwIpWgRngEntry.setStatus('mandatory')
nwIpWgRngBegHostAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgRngBegHostAddr.setStatus('mandatory')
nwIpWgRngEndHostAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgRngEndHostAddr.setStatus('mandatory')
nwIpWgRngIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgRngIfIndex.setStatus('mandatory')
nwIpWgRngPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 3, 1, 4), OctetString().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpWgRngPhysAddr.setStatus('mandatory')
nwIpWgRngRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))).clone('notInService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpWgRngRowStatus.setStatus('mandatory')
nwIpWgRngOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("disabled", 2), ("workgroupInvalid", 3), ("interfaceInvalid", 4), ("physAddrRequired", 5), ("internalError", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgRngOperStatus.setStatus('mandatory')
nwIpWgHostTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 4), )
if mibBuilder.loadTexts: nwIpWgHostTable.setStatus('mandatory')
nwIpWgHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 4, 1), ).setIndexNames((0, "CTRON-IP-ROUTER-MIB", "nwIpWgHostHostAddr"), (0, "CTRON-IP-ROUTER-MIB", "nwIpWgHostIfIndex"))
if mibBuilder.loadTexts: nwIpWgHostEntry.setStatus('mandatory')
nwIpWgHostHostAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgHostHostAddr.setStatus('mandatory')
nwIpWgHostIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgHostIfIndex.setStatus('mandatory')
nwIpWgHostDefIdent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgHostDefIdent.setStatus('mandatory')
nwIpWgHostPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 4, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgHostPhysAddr.setStatus('mandatory')
nwIpWgHostStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 1, 2, 11, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("valid", 3), ("invalid-multiple", 4), ("invalid-physaddr", 5), ("invalid-range", 6), ("invalid-interface", 7), ("invalid-workgroup", 8), ("invalid-expired", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpWgHostStatus.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-IP-ROUTER-MIB", nwIpRipIfCtrDiscardBytes=nwIpRipIfCtrDiscardBytes, nwIpOspfCounters=nwIpOspfCounters, nwIpRipIfFloodDelay=nwIpRipIfFloodDelay, nwIpOspfCtrInBytes=nwIpOspfCtrInBytes, nwIpFwdIfCtrInPkts=nwIpFwdIfCtrInPkts, nwIpEventAdminStatus=nwIpEventAdminStatus, nwIpRipRtFlags=nwIpRipRtFlags, nwIpWorkGroup=nwIpWorkGroup, nwIpHostCtlAdminStatus=nwIpHostCtlAdminStatus, nwIpOspfCtrOutPkts=nwIpOspfCtrOutPkts, nwIpRipIfOperStatus=nwIpRipIfOperStatus, nwIpFwdIfCtrTable=nwIpFwdIfCtrTable, nwIpEventProtocol=nwIpEventProtocol, nwIpRipRouteTable=nwIpRipRouteTable, nwIpComponents=nwIpComponents, nwIpRipIfAclStatus=nwIpRipIfAclStatus, nwIpAclProtocol=nwIpAclProtocol, nwIpWgRngIfIndex=nwIpWgRngIfIndex, nwIpWgIfRowStatus=nwIpWgIfRowStatus, nwIpAddrIfAddress=nwIpAddrIfAddress, nwIpEventLogTable=nwIpEventLogTable, nwIpHostsToMedia=nwIpHostsToMedia, nwIpAclEntry=nwIpAclEntry, nwIpFwdCtrHostOutBytes=nwIpFwdCtrHostOutBytes, nwIpFwdIfAclStatus=nwIpFwdIfAclStatus, nwIpOspfOperStatus=nwIpOspfOperStatus, nwIpOspfIfSnooping=nwIpOspfIfSnooping, nwIpHostCtlCacheSize=nwIpHostCtlCacheSize, nwIpEventTime=nwIpEventTime, nwIpAclDestMask=nwIpAclDestMask, nwIpRipAgeOut=nwIpRipAgeOut, nwIpWgHostEntry=nwIpWgHostEntry, nwIpFwdCounters=nwIpFwdCounters, nwIpRipIfRequestDelay=nwIpRipIfRequestDelay, nwIpRipIfCounters=nwIpRipIfCounters, nwIpWgDefNumTotalIntf=nwIpWgDefNumTotalIntf, nwIpWgRngTable=nwIpWgRngTable, nwIpFwdIfCtrEntry=nwIpFwdIfCtrEntry, nwIpFwdIfCtrOutPkts=nwIpFwdIfCtrOutPkts, nwIpWgDefSubnetMask=nwIpWgDefSubnetMask, nwIpOspfOperationalTime=nwIpOspfOperationalTime, nwIpEventFilterTable=nwIpEventFilterTable, nwIpRipIfCtrInBytes=nwIpRipIfCtrInBytes, nwIpRipOperationalTime=nwIpRipOperationalTime, nwIpSysConfig=nwIpSysConfig, nwIpOspfIfAdminStatus=nwIpOspfIfAdminStatus, nwIpFwdCtrFwdPkts=nwIpFwdCtrFwdPkts, nwIpFwdCtrFwdBytes=nwIpFwdCtrFwdBytes, nwIpRipRoutePriority=nwIpRipRoutePriority, nwIpOspfIfAclIdentifier=nwIpOspfIfAclIdentifier, nwIpSystem=nwIpSystem, nwIpFwdCtrDiscardBytes=nwIpFwdCtrDiscardBytes, nwIpFwdCtrFilteredPkts=nwIpFwdCtrFilteredPkts, nwIpRipDatabase=nwIpRipDatabase, nwIpStaticRoutePriority=nwIpStaticRoutePriority, nwIpOspfFibControl=nwIpOspfFibControl, nwIpOSPFRoutePriority=nwIpOSPFRoutePriority, nwIpHostMapPhysAddr=nwIpHostMapPhysAddr, nwIpRedirectorInterface=nwIpRedirectorInterface, nwIpOspfFilters=nwIpOspfFilters, nwIpEventEntry=nwIpEventEntry, nwIpRipCtrOperationalTime=nwIpRipCtrOperationalTime, nwIpRipCtrOutBytes=nwIpRipCtrOutBytes, nwIpOspfCtrAdminStatus=nwIpOspfCtrAdminStatus, nwIpRipRtType=nwIpRipRtType, nwIpRipCtrOutPkts=nwIpRipCtrOutPkts, nwIpEventType=nwIpEventType, nwIpRipIfCtrOutPkts=nwIpRipIfCtrOutPkts, nwIpAclDestAddress=nwIpAclDestAddress, nwIpRipStackSize=nwIpRipStackSize, nwIpRipIfHelloTimer=nwIpRipIfHelloTimer, nwIpRouter=nwIpRouter, nwIpSysAdminStatus=nwIpSysAdminStatus, nwIpRedirectPort=nwIpRedirectPort, nwIpWgDefSecurity=nwIpWgDefSecurity, nwIpRipRtHops=nwIpRipRtHops, nwIpFwdIfCtrAddrErrPkts=nwIpFwdIfCtrAddrErrPkts, nwIpFwdIfCacheHits=nwIpFwdIfCacheHits, nwIpAclPortNumber=nwIpAclPortNumber, nwIpWgHostStatus=nwIpWgHostStatus, nwIpHostMapCircuitID=nwIpHostMapCircuitID, nwIpRipCtrInBytes=nwIpRipCtrInBytes, nwIpWgRngEndHostAddr=nwIpWgRngEndHostAddr, nwIpEventTraceAll=nwIpEventTraceAll, nwIpWgDefNumActiveIntf=nwIpWgDefNumActiveIntf, nwIpRedirectorSystem=nwIpRedirectorSystem, nwIpForwarding=nwIpForwarding, nwIpOspfAdminStatus=nwIpOspfAdminStatus, nwIpWgHostIfIndex=nwIpWgHostIfIndex, nwIpWgIfIfIndex=nwIpWgIfIfIndex, nwIpRipInterfaces=nwIpRipInterfaces, nwIpFwdIfCtrHostInBytes=nwIpFwdIfCtrHostInBytes, nwIpLinkState=nwIpLinkState, nwIpFwdIfCtrOperationalTime=nwIpFwdIfCtrOperationalTime, nwIpFwdCtrHostInBytes=nwIpFwdCtrHostInBytes, nwIpWgDefOperStatus=nwIpWgDefOperStatus, nwIpFwdIfConfig=nwIpFwdIfConfig, nwIpFwdCtrReset=nwIpFwdCtrReset, nwIpRipIfType=nwIpRipIfType, nwIpFwdCtrHostInPkts=nwIpFwdCtrHostInPkts, nwIpFwdIfCtrHostOutBytes=nwIpFwdIfCtrHostOutBytes, nwIpOspfIfCtrOperationalTime=nwIpOspfIfCtrOperationalTime, nwIpEventFltrIfNum=nwIpEventFltrIfNum, nwIpFwdIfAdminStatus=nwIpFwdIfAdminStatus, nwIpMibRevText=nwIpMibRevText, nwIpWgIfNumKnownHosts=nwIpWgIfNumKnownHosts, nwIpHostCtlIfIndex=nwIpHostCtlIfIndex, nwIpWgRngEntry=nwIpWgRngEntry, nwIpWgRngBegHostAddr=nwIpWgRngBegHostAddr, nwIpRipIfAdvertisement=nwIpRipIfAdvertisement, nwIpOspfSystem=nwIpOspfSystem, nwIpOspfBgp4Table=nwIpOspfBgp4Table, nwIpRedirectType=nwIpRedirectType, nwIpHostCtlEntry=nwIpHostCtlEntry, nwIpHostCtlNumStatics=nwIpHostCtlNumStatics, nwIpOspfCtrInPkts=nwIpOspfCtrInPkts, nwIpHostCtlOperStatus=nwIpHostCtlOperStatus, nwIpAclTable=nwIpAclTable, nwIpAddrIfBcastAddr=nwIpAddrIfBcastAddr, nwIpFwdIfMtu=nwIpFwdIfMtu, nwIpOspfIfCtrReset=nwIpOspfIfCtrReset, nwIpFwdIfIndex=nwIpFwdIfIndex, nwIpEventFltrProtocol=nwIpEventFltrProtocol, nwIpFwdIfCtrFwdBytes=nwIpFwdIfCtrFwdBytes, nwIpRipIfOperationalTime=nwIpRipIfOperationalTime, nwIpOspfIfCtrFilteredBytes=nwIpOspfIfCtrFilteredBytes, nwIpRedirectEntry=nwIpRedirectEntry, nwIpAccessControl=nwIpAccessControl, nwIpOspfAdminReset=nwIpOspfAdminReset, nwIpOspfCtrReset=nwIpOspfCtrReset, nwIpHostCtlProtocol=nwIpHostCtlProtocol, nwIpOspfIfOperStatus=nwIpOspfIfOperStatus, nwIpWgDefEntry=nwIpWgDefEntry, nwIpWgIfEntry=nwIpWgIfEntry, nwIpHostsTimeToLive=nwIpHostsTimeToLive, nwIpOspfIfEntry=nwIpOspfIfEntry, nwIpOspfIfCtrInBytes=nwIpOspfIfCtrInBytes, nwIpRipCtrFilteredPkts=nwIpRipCtrFilteredPkts, nwIpOspfCtrOutBytes=nwIpOspfCtrOutBytes, nwIpRipCtrDiscardPkts=nwIpRipCtrDiscardPkts, nwIpEndSystems=nwIpEndSystems, nwIpFwdIfCounters=nwIpFwdIfCounters, nwIpEventFltrAction=nwIpEventFltrAction, nwIpEvent=nwIpEvent, nwIpOspfIfCounters=nwIpOspfIfCounters, nwIpHostMapTable=nwIpHostMapTable, nwIpRipIfCtrOutBytes=nwIpRipIfCtrOutBytes, nwIpEventLogConfig=nwIpEventLogConfig, nwIpFwdIfCtrReset=nwIpFwdIfCtrReset, nwIpWgHostHostAddr=nwIpWgHostHostAddr, nwIpHostMapPortNumber=nwIpHostMapPortNumber, nwIpFwdCtrAddrErrPkts=nwIpFwdCtrAddrErrPkts, nwIpOspfIfCtrOutPkts=nwIpOspfIfCtrOutPkts, nwIpFwdIfCtrHdrErrPkts=nwIpFwdIfCtrHdrErrPkts, nwIpHostCtlProxy=nwIpHostCtlProxy, nwIpRipCtrDiscardBytes=nwIpRipCtrDiscardBytes, nwIpRipIfCtrReset=nwIpRipIfCtrReset, nwIpFwdIfCtrHostOutPkts=nwIpFwdIfCtrHostOutPkts, nwIpFwdIfOperationalTime=nwIpFwdIfOperationalTime, nwIpFwdCtrOperationalTime=nwIpFwdCtrOperationalTime, nwIpFibSystem=nwIpFibSystem, nwIpRipCtrFilteredBytes=nwIpRipCtrFilteredBytes, nwIpOspfIfIndex=nwIpOspfIfIndex, nwIpOspfStaticMetric=nwIpOspfStaticMetric, nwIpClientServices=nwIpClientServices, nwIpMibs=nwIpMibs, nwIpRipCtrAdminStatus=nwIpRipCtrAdminStatus, nwIpRipIfPriority=nwIpRipIfPriority, nwIpHostCtlTable=nwIpHostCtlTable, nwIpHostCtlCacheMax=nwIpHostCtlCacheMax, nwIpFwdCtrAdminStatus=nwIpFwdCtrAdminStatus, nwIpFwdIfFrameType=nwIpFwdIfFrameType, nwIpOspfCtrFilteredBytes=nwIpOspfCtrFilteredBytes, nwIpOspfStaticStatus=nwIpOspfStaticStatus, nwIpRedirectAddress=nwIpRedirectAddress, nwIpAclMatches=nwIpAclMatches, nwIpOspfIfCtrFilteredPkts=nwIpOspfIfCtrFilteredPkts, nwIpOspfDatabase=nwIpOspfDatabase, nwIpRipIfPoisonReverse=nwIpRipIfPoisonReverse, nwIpRipIfAdminStatus=nwIpRipIfAdminStatus, nwIpFwdIfCtrFilteredBytes=nwIpFwdIfCtrFilteredBytes, nwIpRipIfAclIdentifier=nwIpRipIfAclIdentifier, nwIpAddressTable=nwIpAddressTable, nwIpTopology=nwIpTopology, nwIpRipAdminReset=nwIpRipAdminReset, nwIpRipIfCtrFilteredPkts=nwIpRipIfCtrFilteredPkts, nwIpSysOperStatus=nwIpSysOperStatus, nwIpFwdIfTable=nwIpFwdIfTable, nwIpWgDefHostAddress=nwIpWgDefHostAddress, nwIpFwdIfForwarding=nwIpFwdIfForwarding, nwIpOspfIfCtrIfIndex=nwIpOspfIfCtrIfIndex, nwIpOspfIfCtrDiscardPkts=nwIpOspfIfCtrDiscardPkts, nwIpOspfIfOperationalTime=nwIpOspfIfOperationalTime, nwIpHostMapEntry=nwIpHostMapEntry, nwIpRipIfCtrIfIndex=nwIpRipIfCtrIfIndex, nwIpEventTable=nwIpEventTable, nwIpAclSequence=nwIpAclSequence, nwIpFwdIfCacheEntries=nwIpFwdIfCacheEntries, nwIpRipIfTable=nwIpRipIfTable, nwIpOspfStackSize=nwIpOspfStackSize, nwIpAclSrcMask=nwIpAclSrcMask, nwIpRipIfSnooping=nwIpRipIfSnooping, nwIpRipCounters=nwIpRipCounters, nwIpOspfIfCtrEntry=nwIpOspfIfCtrEntry, nwIpRipIfCtrEntry=nwIpRipIfCtrEntry, nwIpFwdCtrDiscardPkts=nwIpFwdCtrDiscardPkts, nwIpFwdIfCtrIfIndex=nwIpFwdIfCtrIfIndex, nwIpWgIfNumActiveHosts=nwIpWgIfNumActiveHosts, nwIpFwdInterfaces=nwIpFwdInterfaces, nwIpFwdIfControl=nwIpFwdIfControl, nwIpEventLogFilterTable=nwIpEventLogFilterTable, nwIpRipIfSplitHorizon=nwIpRipIfSplitHorizon, nwIpEventFltrType=nwIpEventFltrType, nwIpRipRtSrcNode=nwIpRipRtSrcNode, nwIpWgIfTable=nwIpWgIfTable, nwIpHostMapIpAddr=nwIpHostMapIpAddr, nwIpRipOperStatus=nwIpRipOperStatus, nwIpFwdCtrInBytes=nwIpFwdCtrInBytes, nwIpAclIdentifier=nwIpAclIdentifier, nwIpFwdIfAclIdentifier=nwIpFwdIfAclIdentifier, nwIpHostsRetryCount=nwIpHostsRetryCount, nwIpHostsSystem=nwIpHostsSystem, nwIpOspfInterfaces=nwIpOspfInterfaces, nwIpOspfIfCtrOutBytes=nwIpOspfIfCtrOutBytes, nwIpOspfLeakAllStaticRoutes=nwIpOspfLeakAllStaticRoutes, nwIpFwdIfCacheControl=nwIpFwdIfCacheControl, nwIpRipRouteEntry=nwIpRipRouteEntry, nwIpOspfIfCtrInPkts=nwIpOspfIfCtrInPkts, nwIpRipIfCtrInPkts=nwIpRipIfCtrInPkts, nwIpWgIfDefIdent=nwIpWgIfDefIdent, nwIpWgRngRowStatus=nwIpWgRngRowStatus, nwIpFwdCtrInPkts=nwIpFwdCtrInPkts, nwIpRedirectTable=nwIpRedirectTable, nwIpOspfForward=nwIpOspfForward, nwIpOspfIfCtrAdminStatus=nwIpOspfIfCtrAdminStatus, nwIpSysAdminReset=nwIpSysAdminReset, nwIpRipRtIfIndex=nwIpRipRtIfIndex, nwIpFib=nwIpFib, nwIpSysVersion=nwIpSysVersion, nwIpOspfCtrDiscardPkts=nwIpOspfCtrDiscardPkts, nwIpRipDatabaseThreshold=nwIpRipDatabaseThreshold, nwIpHostMapType=nwIpHostMapType, nwIpEventIfNum=nwIpEventIfNum, nwIpRedirectCount=nwIpRedirectCount, nwIpOspfStaticForwardMask=nwIpOspfStaticForwardMask, nwIpHostCtlCacheHits=nwIpHostCtlCacheHits, nwIpEventSeverity=nwIpEventSeverity, nwIpRipIfCtrFilteredBytes=nwIpRipIfCtrFilteredBytes, nwIpRipIfCtrTable=nwIpRipIfCtrTable, nwIpAclSrcAddress=nwIpAclSrcAddress, nwIpOspfIfTable=nwIpOspfIfTable, nwIpHostMapIfIndex=nwIpHostMapIfIndex, nwIpOspfIfVersion=nwIpOspfIfVersion, nwIpHostCtlOperationalTime=nwIpHostCtlOperationalTime)
mibBuilder.exportSymbols("CTRON-IP-ROUTER-MIB", nwIpOspfStaticTable=nwIpOspfStaticTable, nwIpWgHostDefIdent=nwIpWgHostDefIdent, nwIpAddrIfControl=nwIpAddrIfControl, nwIpRipIfConfig=nwIpRipIfConfig, nwIpFwdIfCtrLenErrPkts=nwIpFwdIfCtrLenErrPkts, nwIpHostMapFraming=nwIpHostMapFraming, nwIpRipVersion=nwIpRipVersion, nwIpOspfFib=nwIpOspfFib, nwIpRipIfCtrDiscardPkts=nwIpRipIfCtrDiscardPkts, nwIpRipSystem=nwIpRipSystem, nwIpWgHostPhysAddr=nwIpWgHostPhysAddr, nwIpWgDefRowStatus=nwIpWgDefRowStatus, nwIpOspfLeakAllRipRoutes=nwIpOspfLeakAllRipRoutes, nwIpOspfCtrOperationalTime=nwIpOspfCtrOperationalTime, nwIpWgHostTable=nwIpWgHostTable, nwIpRipRtMask=nwIpRipRtMask, nwIpEventFltrSeverity=nwIpEventFltrSeverity, nwIpOspfIfConfig=nwIpOspfIfConfig, nwIpFwdIfCtrHostDiscardPkts=nwIpFwdIfCtrHostDiscardPkts, nwIpRipRtAge=nwIpRipRtAge, nwIpHostCtlCacheMisses=nwIpHostCtlCacheMisses, nwIpEventTextString=nwIpEventTextString, nwIpOspfVersion=nwIpOspfVersion, nwIpOspfStaticNextHop=nwIpOspfStaticNextHop, nwIpRipIfIndex=nwIpRipIfIndex, nwIpAclPermission=nwIpAclPermission, nwIpHostsInterfaces=nwIpHostsInterfaces, nwIpRipRtNetId=nwIpRipRtNetId, nwIpFwdIfCtrHostDiscardBytes=nwIpFwdIfCtrHostDiscardBytes, nwIpWgDefTable=nwIpWgDefTable, nwIpRipCtrInPkts=nwIpRipCtrInPkts, nwIpRipAdminStatus=nwIpRipAdminStatus, nwIpFwdIfCtrInBytes=nwIpFwdIfCtrInBytes, nwIpOspfThreadPriority=nwIpOspfThreadPriority, nwIpEventFltrControl=nwIpEventFltrControl, nwIpWgRngPhysAddr=nwIpWgRngPhysAddr, nwIpOspfIfCtrTable=nwIpOspfIfCtrTable, nwIpSysRouterId=nwIpSysRouterId, nwIpOspfRipTable=nwIpOspfRipTable, nwIpFilters=nwIpFilters, nwIpRedirector=nwIpRedirector, nwIpFwdIfEntry=nwIpFwdIfEntry, nwIpFwdIfCtrFilteredPkts=nwIpFwdIfCtrFilteredPkts, nwIpHostCtlSnooping=nwIpHostCtlSnooping, nwIpRipIfVersion=nwIpRipIfVersion, nwIpEventMaxEntries=nwIpEventMaxEntries, nwIpAddrIfAddrType=nwIpAddrIfAddrType, nwIpSysAdministration=nwIpSysAdministration, nwIpRipThreadPriority=nwIpRipThreadPriority, nwIpOspfIfType=nwIpOspfIfType, nwIpOspfIfCtrDiscardBytes=nwIpOspfIfCtrDiscardBytes, nwIpFwdSystem=nwIpFwdSystem, nwIpFwdCtrHostOutPkts=nwIpFwdCtrHostOutPkts, nwIpWgDefIdentifier=nwIpWgDefIdentifier, nwIpFwdCtrLenErrPkts=nwIpFwdCtrLenErrPkts, nwIpRipHoldDown=nwIpRipHoldDown, nwIpRipIfEntry=nwIpRipIfEntry, nwIpFwdIfOperStatus=nwIpFwdIfOperStatus, nwIpRip=nwIpRip, nwIpFwdIfCacheMisses=nwIpFwdIfCacheMisses, nwIpFwdIfCtrDiscardBytes=nwIpFwdIfCtrDiscardBytes, nwIpOspfCtrDiscardBytes=nwIpOspfCtrDiscardBytes, nwIpFwdCtrFilteredBytes=nwIpFwdCtrFilteredBytes, nwIpOspfIfAclStatus=nwIpOspfIfAclStatus, nwIpEventFilterEntry=nwIpEventFilterEntry, nwIpWgIfOperStatus=nwIpWgIfOperStatus, nwIpOspfStaticEntry=nwIpOspfStaticEntry, nwIpFwdCtrHostDiscardPkts=nwIpFwdCtrHostDiscardPkts, nwIpFwdCtrHostDiscardBytes=nwIpFwdCtrHostDiscardBytes, nwIpFwdCtrOutPkts=nwIpFwdCtrOutPkts, nwIpDistanceVector=nwIpDistanceVector, nwIpAclValidEntries=nwIpAclValidEntries, nwIpSysOperationalTime=nwIpSysOperationalTime, nwIpOspfFibEntries=nwIpOspfFibEntries, nwIpOspfConfig=nwIpOspfConfig, nwIpFwdIfCtrAdminStatus=nwIpFwdIfCtrAdminStatus, nwIpWgRngOperStatus=nwIpWgRngOperStatus, nwIpFwdIfCtrFwdPkts=nwIpFwdIfCtrFwdPkts, nwIpOspfLeakAllBgp4Routes=nwIpOspfLeakAllBgp4Routes, nwIpFwdCtrHdrErrPkts=nwIpFwdCtrHdrErrPkts, nwIpAddrIfIndex=nwIpAddrIfIndex, nwIpOspfStaticDest=nwIpOspfStaticDest, nwIpOspfDynamicTable=nwIpOspfDynamicTable, nwIpRipIfXmitCost=nwIpRipIfXmitCost, nwIpOspfCtrFilteredPkts=nwIpOspfCtrFilteredPkts, nwIpFwdIfCtrHostInPkts=nwIpFwdIfCtrHostInPkts, nwIpFwdIfCtrDiscardPkts=nwIpFwdIfCtrDiscardPkts, nwIpFwdIfCtrOutBytes=nwIpFwdIfCtrOutBytes, nwIpRipFilters=nwIpRipFilters, nwIpOspf=nwIpOspf, nwIpRipIfCtrAdminStatus=nwIpRipIfCtrAdminStatus, nwIpRipIfCtrOperationalTime=nwIpRipIfCtrOperationalTime, nwIpHostCtlNumDynamics=nwIpHostCtlNumDynamics, nwIpEventNumber=nwIpEventNumber, nwIpWgDefFastPath=nwIpWgDefFastPath, nwIpRipConfig=nwIpRipConfig, nwIpFwdCtrOutBytes=nwIpFwdCtrOutBytes, nwIpRipCtrReset=nwIpRipCtrReset, nwIpOspfStaticMetricType=nwIpOspfStaticMetricType, nwIpAddrEntry=nwIpAddrEntry, nwIpAddrIfMask=nwIpAddrIfMask)
