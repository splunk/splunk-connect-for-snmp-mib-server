#
# PySNMP MIB module XYLAN-MGMTSTN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-MGMTSTN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, TimeTicks, Bits, ModuleIdentity, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, NotificationType, MibIdentifier, Gauge32, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "Bits", "ModuleIdentity", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "NotificationType", "MibIdentifier", "Gauge32", "iso", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xylanTrapArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanTrapArch")
mgmtControl = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 5, 1))
trapBindings = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 5, 2))
trapTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1), )
if mibBuilder.loadTexts: trapTable.setStatus('mandatory')
trapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1, 1), ).setIndexNames((0, "XYLAN-MGMTSTN-MIB", "stationIndex"))
if mibBuilder.loadTexts: trapEntry.setStatus('mandatory')
stationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 11))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationIndex.setStatus('mandatory')
stationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationIP.setStatus('mandatory')
stationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationPort.setStatus('mandatory')
stationCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationCommunity.setStatus('mandatory')
stationTrapFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationTrapFlags.setStatus('mandatory')
stationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationEnable.setStatus('mandatory')
stationSAPrivs = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 5, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationSAPrivs.setStatus('mandatory')
systemEventTrapNumber = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 5, 2, 1), Integer32())
if mibBuilder.loadTexts: systemEventTrapNumber.setStatus('mandatory')
systemEventTrapString = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 5, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63)))
if mibBuilder.loadTexts: systemEventTrapString.setStatus('mandatory')
mibBuilder.exportSymbols("XYLAN-MGMTSTN-MIB", trapTable=trapTable, trapEntry=trapEntry, trapBindings=trapBindings, stationPort=stationPort, stationTrapFlags=stationTrapFlags, systemEventTrapNumber=systemEventTrapNumber, stationEnable=stationEnable, stationSAPrivs=stationSAPrivs, mgmtControl=mgmtControl, stationIndex=stationIndex, systemEventTrapString=systemEventTrapString, stationCommunity=stationCommunity, stationIP=stationIP)
