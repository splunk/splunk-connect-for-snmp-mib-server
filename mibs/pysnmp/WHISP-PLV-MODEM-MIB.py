#
# PySNMP MIB module WHISP-PLV-MODEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WHISP-PLV-MODEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, NotificationType, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Counter64, ModuleIdentity, Unsigned32, MibIdentifier, Counter32, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Counter64", "ModuleIdentity", "Unsigned32", "MibIdentifier", "Counter32", "ObjectIdentity", "IpAddress")
MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention")
whispPlvModem, = mibBuilder.importSymbols("WHISP-GLOBAL-REG-MIB", "whispPlvModem")
whispPlvModemMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1))
whispPlvModemMIB.setRevisions(('2006-04-04 10:30',))
if mibBuilder.loadTexts: whispPlvModemMIB.setLastUpdated('200604041030Z')
if mibBuilder.loadTexts: whispPlvModemMIB.setOrganization('Motorola')
whispPlvModemObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1))
whispPlvModemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1))
modemInfoModel = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoModel.setStatus('current')
modemInfoSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoSerialNumber.setStatus('current')
modemInfoDeviceMac = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoDeviceMac.setStatus('current')
modemInfoPlcMac = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoPlcMac.setStatus('current')
modemInfoHardwareVer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoHardwareVer.setStatus('current')
modemInfoDeviceFirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoDeviceFirmwareVer.setStatus('current')
modemInfoBootLoaderVer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoBootLoaderVer.setStatus('current')
modemInfoSimFirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoSimFirmwareVer.setStatus('current')
modemInfoDeviceUpgradeStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notStarted", 1), ("inProgress", 2), ("failed", 3), ("successful", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoDeviceUpgradeStatus.setStatus('current')
modemInfoSimUpgradeStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notStarted", 1), ("inProgress", 2), ("failed", 3), ("successful", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoSimUpgradeStatus.setStatus('current')
modemInfoCurrentMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridge", 1), ("nat", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoCurrentMode.setStatus('current')
modemInfoActiveBandwidthConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("configured", 1), ("provisioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoActiveBandwidthConfig.setStatus('current')
modemInfoActiveUpLinkBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("fullSpeed", 1), ("u64Kbps", 2), ("u128Kbps", 3), ("u256Kbps", 4), ("u512Kbps", 5), ("u1Mbps", 6), ("u4Mbps", 7), ("u10Mbps", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoActiveUpLinkBandwidth.setStatus('current')
modemInfoActiveDownLinkBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("fullSpeed", 1), ("d64Kbps", 2), ("d128Kbps", 3), ("d256Kbps", 4), ("d512Kbps", 5), ("d1Mbps", 6), ("d4Mbps", 7), ("d10Mbps", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemInfoActiveDownLinkBandwidth.setStatus('current')
whispPlvModemConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 2))
modemConfPacketPriorityConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixedQoS", 1), ("tos", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfPacketPriorityConfig.setStatus('current')
modemConfFixedQoSConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("default", 1), ("background", 2), ("bestEffort", 3), ("excellentEffort", 4), ("controlLoad", 5), ("videoOrAudio", 6), ("voice", 7), ("networkControl", 8))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfFixedQoSConfig.setStatus('current')
modemConfUpLinkDataRate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("fullSpeed", 1), ("u64Kbps", 2), ("u128Kbps", 3), ("u256Kbps", 4), ("u512Kbps", 5), ("u1Mbps", 6), ("u4Mbps", 7), ("u10Mbps", 8))).clone('fullSpeed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfUpLinkDataRate.setStatus('current')
modemConfDownLinkDataRate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("fullSpeed", 1), ("d64Kbps", 2), ("d128Kbps", 3), ("d256Kbps", 4), ("d512Kbps", 5), ("d1Mbps", 6), ("d4Mbps", 7), ("d10Mbps", 8))).clone('fullSpeed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfDownLinkDataRate.setStatus('current')
modemConfPSD = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(84, 84)).setFixedLength(84)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfPSD.setStatus('current')
modemConfUpLinkMir = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 2, 6), Integer32()).setUnits('Kilobits/sec').setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfUpLinkMir.setStatus('current')
modemConfDownLinkMir = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 2, 7), Integer32()).setUnits('Kilobits/sec').setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfDownLinkMir.setStatus('current')
whispPlvModemTrapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3))
modemConfTrapIp1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp1.setStatus('current')
modemConfTrapCommStr1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr1.setStatus('current')
modemConfTrapIp2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp2.setStatus('current')
modemConfTrapCommStr2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr2.setStatus('current')
modemConfTrapIp3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp3.setStatus('current')
modemConfTrapCommStr3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr3.setStatus('current')
modemConfTrapIp4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp4.setStatus('current')
modemConfTrapCommStr4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr4.setStatus('current')
modemConfTrapIp5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp5.setStatus('current')
modemConfTrapCommStr5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr5.setStatus('current')
modemConfTrapIp6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp6.setStatus('current')
modemConfTrapCommStr6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr6.setStatus('current')
modemConfTrapIp7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp7.setStatus('current')
modemConfTrapCommStr7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr7.setStatus('current')
modemConfTrapIp8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp8.setStatus('current')
modemConfTrapCommStr8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr8.setStatus('current')
modemConfTrapIp9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp9.setStatus('current')
modemConfTrapCommStr9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr9.setStatus('current')
modemConfTrapIp10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapIp10.setStatus('current')
modemConfTrapCommStr10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 3, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemConfTrapCommStr10.setStatus('current')
whispPlvModemAdmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4))
modemAdmConfIpConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfIpConfig.setStatus('current')
modemAdmConfIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfIp.setStatus('current')
modemAdmConfIpSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfIpSubnetMask.setStatus('current')
modemAdmConfNEK = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfNEK.setStatus('current')
modemAdmConfSnmpGetCommStr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfSnmpGetCommStr.setStatus('current')
modemAdmConfSnmpSetCommStr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfSnmpSetCommStr.setStatus('current')
modemAdmConfSnmpAdminCommStr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfSnmpAdminCommStr.setStatus('current')
modemAdmConfLoginUsername = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfLoginUsername.setStatus('current')
modemAdmConfLoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfLoginPassword.setStatus('current')
modemAdmConfFtpServerIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfFtpServerIp.setStatus('current')
modemAdmConfFtpUsername = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfFtpUsername.setStatus('current')
modemAdmConfFtpPassword = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfFtpPassword.setStatus('current')
modemAdmConfFtpFile = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfFtpFile.setStatus('current')
modemAdmConfDeviceUpgradeStart = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upgrade", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfDeviceUpgradeStart.setStatus('current')
modemAdmConfSimUpgradeStart = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upgrade", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfSimUpgradeStart.setStatus('current')
modemAdmConfSystemReboot = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reboot", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfSystemReboot.setStatus('current')
modemAdmConfReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmConfReset.setStatus('current')
whispPlvModemAdmWConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5))
modemAdmWConfNatConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfNatConfig.setStatus('current')
modemAdmWConfWanConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfWanConfig.setStatus('current')
modemAdmWConfWanIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfWanIp.setStatus('current')
modemAdmWConfSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfSubnetMask.setStatus('current')
modemAdmWConfGateway = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfGateway.setStatus('current')
modemAdmWConfDNS1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfDNS1.setStatus('current')
modemAdmWConfDNS2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfDNS2.setStatus('current')
modemAdmWConfDhcpConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfDhcpConfig.setStatus('current')
modemAdmWConfDhcpStartIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfDhcpStartIp.setStatus('current')
modemAdmWConfDhcpEndIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfDhcpEndIp.setStatus('current')
modemAdmWConfDhcpLeaseTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("thirtyMins", 1), ("oneHour", 2), ("twoHours", 3), ("twelveHours", 4), ("oneDay", 5), ("twoDays", 6), ("oneWeek", 7), ("twoWeeks", 8))).clone('oneDay')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfDhcpLeaseTime.setStatus('current')
modemAdmWConfDmzConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfDmzConfig.setStatus('current')
modemAdmWConfDmzIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 5, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmWConfDmzIp.setStatus('current')
whispPlvModemAdmSnmpAcessConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6))
modemAdmSnmpAccessIpNetwork1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork1.setStatus('current')
modemAdmSnmpAccessIpNetworkMask1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask1.setStatus('current')
modemAdmSnmpAccessIpNetwork2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork2.setStatus('current')
modemAdmSnmpAccessIpNetworkMask2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask2.setStatus('current')
modemAdmSnmpAccessIpNetwork3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork3.setStatus('current')
modemAdmSnmpAccessIpNetworkMask3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask3.setStatus('current')
modemAdmSnmpAccessIpNetwork4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork4.setStatus('current')
modemAdmSnmpAccessIpNetworkMask4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask4.setStatus('current')
modemAdmSnmpAccessIpNetwork5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork5.setStatus('current')
modemAdmSnmpAccessIpNetworkMask5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask5.setStatus('current')
modemAdmSnmpAccessIpNetwork6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork6.setStatus('current')
modemAdmSnmpAccessIpNetworkMask6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask6.setStatus('current')
modemAdmSnmpAccessIpNetwork7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork7.setStatus('current')
modemAdmSnmpAccessIpNetworkMask7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask7.setStatus('current')
modemAdmSnmpAccessIpNetwork8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork8.setStatus('current')
modemAdmSnmpAccessIpNetworkMask8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask8.setStatus('current')
modemAdmSnmpAccessIpNetwork9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork9.setStatus('current')
modemAdmSnmpAccessIpNetworkMask9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask9.setStatus('current')
modemAdmSnmpAccessIpNetwork10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetwork10.setStatus('current')
modemAdmSnmpAccessIpNetworkMask10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 6, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmSnmpAccessIpNetworkMask10.setStatus('current')
whispPlvModemAdmRepeaterConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 7))
modemAdmRepeaterConfOperatingMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("repeater", 2), ("useWithRepeater", 3))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmRepeaterConfOperatingMode.setStatus('current')
modemAdmRepeaterConfModemMAC1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 7, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmRepeaterConfModemMAC1.setStatus('current')
modemAdmRepeaterConfModemMAC2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 7, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmRepeaterConfModemMAC2.setStatus('current')
modemAdmRepeaterConfModemMAC3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 7, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmRepeaterConfModemMAC3.setStatus('current')
modemAdmRepeaterConfModemMAC4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 7, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmRepeaterConfModemMAC4.setStatus('current')
whispPlvModemAdmVLANTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 8), )
if mibBuilder.loadTexts: whispPlvModemAdmVLANTable.setStatus('current')
whispPlvModemAdmVLANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 8, 1), ).setIndexNames((0, "WHISP-PLV-MODEM-MIB", "modemAdmVLANIndex"))
if mibBuilder.loadTexts: whispPlvModemAdmVLANEntry.setStatus('current')
modemAdmVLANIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: modemAdmVLANIndex.setStatus('current')
modemAdmVLANPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 8, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemAdmVLANPhysAddress.setStatus('current')
modemAdmVLANId = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemAdmVLANId.setStatus('current')
whispPlvModemEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 2))
modemTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 2, 0))
modemTrapDeviceUpgradeStarted = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 2, 0, 1)).setObjects(("WHISP-PLV-MODEM-MIB", "modemInfoDeviceUpgradeStatus"), ("WHISP-PLV-MODEM-MIB", "modemInfoDeviceFirmwareVer"))
if mibBuilder.loadTexts: modemTrapDeviceUpgradeStarted.setStatus('current')
modemTrapDeviceUpgradeCompleted = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 2, 0, 2)).setObjects(("WHISP-PLV-MODEM-MIB", "modemInfoDeviceUpgradeStatus"), ("WHISP-PLV-MODEM-MIB", "modemInfoDeviceFirmwareVer"))
if mibBuilder.loadTexts: modemTrapDeviceUpgradeCompleted.setStatus('current')
modemTrapSimUpgradeStarted = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 2, 0, 3)).setObjects(("WHISP-PLV-MODEM-MIB", "modemInfoSimUpgradeStatus"), ("WHISP-PLV-MODEM-MIB", "modemInfoSimFirmwareVer"))
if mibBuilder.loadTexts: modemTrapSimUpgradeStarted.setStatus('current')
modemTrapSimUpgradeCompleted = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 2, 0, 4)).setObjects(("WHISP-PLV-MODEM-MIB", "modemInfoSimUpgradeStatus"), ("WHISP-PLV-MODEM-MIB", "modemInfoSimFirmwareVer"))
if mibBuilder.loadTexts: modemTrapSimUpgradeCompleted.setStatus('current')
whispPlvModemConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3))
whispPlvModemGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1))
whispPlvModemCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 2))
whispPlvModemInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 1)).setObjects(("WHISP-PLV-MODEM-MIB", "modemInfoModel"), ("WHISP-PLV-MODEM-MIB", "modemInfoSerialNumber"), ("WHISP-PLV-MODEM-MIB", "modemInfoDeviceMac"), ("WHISP-PLV-MODEM-MIB", "modemInfoPlcMac"), ("WHISP-PLV-MODEM-MIB", "modemInfoHardwareVer"), ("WHISP-PLV-MODEM-MIB", "modemInfoDeviceFirmwareVer"), ("WHISP-PLV-MODEM-MIB", "modemInfoBootLoaderVer"), ("WHISP-PLV-MODEM-MIB", "modemInfoSimFirmwareVer"), ("WHISP-PLV-MODEM-MIB", "modemInfoDeviceUpgradeStatus"), ("WHISP-PLV-MODEM-MIB", "modemInfoSimUpgradeStatus"), ("WHISP-PLV-MODEM-MIB", "modemInfoCurrentMode"), ("WHISP-PLV-MODEM-MIB", "modemInfoActiveBandwidthConfig"), ("WHISP-PLV-MODEM-MIB", "modemInfoActiveUpLinkBandwidth"), ("WHISP-PLV-MODEM-MIB", "modemInfoActiveDownLinkBandwidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemInfoGroup = whispPlvModemInfoGroup.setStatus('current')
whispPlvModemConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 2)).setObjects(("WHISP-PLV-MODEM-MIB", "modemConfPacketPriorityConfig"), ("WHISP-PLV-MODEM-MIB", "modemConfFixedQoSConfig"), ("WHISP-PLV-MODEM-MIB", "modemConfUpLinkDataRate"), ("WHISP-PLV-MODEM-MIB", "modemConfDownLinkDataRate"), ("WHISP-PLV-MODEM-MIB", "modemConfPSD"), ("WHISP-PLV-MODEM-MIB", "modemConfUpLinkMir"), ("WHISP-PLV-MODEM-MIB", "modemConfDownLinkMir"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemConfigGroup = whispPlvModemConfigGroup.setStatus('current')
whispPlvModemTrapConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 3)).setObjects(("WHISP-PLV-MODEM-MIB", "modemConfTrapIp1"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr1"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp2"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr2"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp3"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr3"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp4"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr4"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp5"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr5"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp6"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr6"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp7"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr7"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp8"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr8"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp9"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr9"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapIp10"), ("WHISP-PLV-MODEM-MIB", "modemConfTrapCommStr10"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemTrapConfigGroup = whispPlvModemTrapConfigGroup.setStatus('current')
whispPlvModemAdmConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 4)).setObjects(("WHISP-PLV-MODEM-MIB", "modemAdmConfIpConfig"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfIp"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfIpSubnetMask"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfNEK"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfSnmpGetCommStr"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfSnmpSetCommStr"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfSnmpAdminCommStr"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfLoginUsername"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfLoginPassword"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfFtpServerIp"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfFtpUsername"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfFtpPassword"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfFtpFile"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfDeviceUpgradeStart"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfSimUpgradeStart"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfSystemReboot"), ("WHISP-PLV-MODEM-MIB", "modemAdmConfReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemAdmConfigGroup = whispPlvModemAdmConfigGroup.setStatus('current')
whispPlvModemAdmWConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 5)).setObjects(("WHISP-PLV-MODEM-MIB", "modemAdmWConfNatConfig"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfWanConfig"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfWanIp"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfSubnetMask"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfGateway"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfDNS1"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfDNS2"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfDhcpConfig"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfDhcpStartIp"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfDhcpEndIp"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfDhcpLeaseTime"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfDmzConfig"), ("WHISP-PLV-MODEM-MIB", "modemAdmWConfDmzIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemAdmWConfigGroup = whispPlvModemAdmWConfigGroup.setStatus('current')
whispPlvModemAdmSnmpAcessConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 6)).setObjects(("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork1"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask1"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork2"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask2"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork3"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask3"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork4"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask4"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork5"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask5"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork6"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask6"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork7"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask7"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork8"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask8"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork9"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask9"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetwork10"), ("WHISP-PLV-MODEM-MIB", "modemAdmSnmpAccessIpNetworkMask10"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemAdmSnmpAcessConfigGroup = whispPlvModemAdmSnmpAcessConfigGroup.setStatus('current')
whispPlvModemNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 7)).setObjects(("WHISP-PLV-MODEM-MIB", "modemTrapDeviceUpgradeStarted"), ("WHISP-PLV-MODEM-MIB", "modemTrapDeviceUpgradeCompleted"), ("WHISP-PLV-MODEM-MIB", "modemTrapSimUpgradeStarted"), ("WHISP-PLV-MODEM-MIB", "modemTrapSimUpgradeCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemNotificationsGroup = whispPlvModemNotificationsGroup.setStatus('current')
whispPlvModemAdmRepeaterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 8)).setObjects(("WHISP-PLV-MODEM-MIB", "modemAdmRepeaterConfOperatingMode"), ("WHISP-PLV-MODEM-MIB", "modemAdmRepeaterConfModemMAC1"), ("WHISP-PLV-MODEM-MIB", "modemAdmRepeaterConfModemMAC2"), ("WHISP-PLV-MODEM-MIB", "modemAdmRepeaterConfModemMAC3"), ("WHISP-PLV-MODEM-MIB", "modemAdmRepeaterConfModemMAC4"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemAdmRepeaterConfigGroup = whispPlvModemAdmRepeaterConfigGroup.setStatus('current')
whispPlvModemAdmVLANConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 1, 9)).setObjects(("WHISP-PLV-MODEM-MIB", "modemAdmVLANPhysAddress"), ("WHISP-PLV-MODEM-MIB", "modemAdmVLANId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemAdmVLANConfigGroup = whispPlvModemAdmVLANConfigGroup.setStatus('current')
whispPlvModemCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 161, 19, 3, 7, 1, 3, 2, 1)).setObjects(("WHISP-PLV-MODEM-MIB", "whispPlvModemInfoGroup"), ("WHISP-PLV-MODEM-MIB", "whispPlvModemConfigGroup"), ("WHISP-PLV-MODEM-MIB", "whispPlvModemTrapConfigGroup"), ("WHISP-PLV-MODEM-MIB", "whispPlvModemAdmConfigGroup"), ("WHISP-PLV-MODEM-MIB", "whispPlvModemAdmWConfigGroup"), ("WHISP-PLV-MODEM-MIB", "whispPlvModemAdmSnmpAcessConfigGroup"), ("WHISP-PLV-MODEM-MIB", "whispPlvModemNotificationsGroup"), ("WHISP-PLV-MODEM-MIB", "whispPlvModemAdmRepeaterConfigGroup"), ("WHISP-PLV-MODEM-MIB", "whispPlvModemAdmVLANConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvModemCompliance = whispPlvModemCompliance.setStatus('current')
mibBuilder.exportSymbols("WHISP-PLV-MODEM-MIB", modemInfoCurrentMode=modemInfoCurrentMode, modemAdmWConfNatConfig=modemAdmWConfNatConfig, modemAdmConfSystemReboot=modemAdmConfSystemReboot, modemInfoActiveUpLinkBandwidth=modemInfoActiveUpLinkBandwidth, whispPlvModemAdmRepeaterConfigGroup=whispPlvModemAdmRepeaterConfigGroup, modemAdmConfReset=modemAdmConfReset, modemAdmWConfDhcpStartIp=modemAdmWConfDhcpStartIp, modemAdmConfLoginUsername=modemAdmConfLoginUsername, PYSNMP_MODULE_ID=whispPlvModemMIB, whispPlvModemAdmWConfigGroup=whispPlvModemAdmWConfigGroup, whispPlvModemNotificationsGroup=whispPlvModemNotificationsGroup, whispPlvModemAdmSnmpAcessConfig=whispPlvModemAdmSnmpAcessConfig, modemTrapDeviceUpgradeStarted=modemTrapDeviceUpgradeStarted, modemConfTrapCommStr3=modemConfTrapCommStr3, modemConfDownLinkDataRate=modemConfDownLinkDataRate, whispPlvModemAdmVLANConfigGroup=whispPlvModemAdmVLANConfigGroup, modemAdmSnmpAccessIpNetworkMask4=modemAdmSnmpAccessIpNetworkMask4, modemAdmConfFtpFile=modemAdmConfFtpFile, modemConfTrapCommStr8=modemConfTrapCommStr8, modemConfTrapIp1=modemConfTrapIp1, modemTrapDeviceUpgradeCompleted=modemTrapDeviceUpgradeCompleted, modemInfoActiveDownLinkBandwidth=modemInfoActiveDownLinkBandwidth, modemAdmConfIp=modemAdmConfIp, modemConfPSD=modemConfPSD, modemAdmRepeaterConfModemMAC1=modemAdmRepeaterConfModemMAC1, modemAdmVLANPhysAddress=modemAdmVLANPhysAddress, modemInfoDeviceMac=modemInfoDeviceMac, modemAdmWConfWanConfig=modemAdmWConfWanConfig, modemAdmSnmpAccessIpNetworkMask1=modemAdmSnmpAccessIpNetworkMask1, whispPlvModemEvents=whispPlvModemEvents, modemAdmConfFtpUsername=modemAdmConfFtpUsername, whispPlvModemAdmWConfig=whispPlvModemAdmWConfig, modemConfFixedQoSConfig=modemConfFixedQoSConfig, modemInfoSerialNumber=modemInfoSerialNumber, modemConfTrapCommStr4=modemConfTrapCommStr4, whispPlvModemAdmVLANTable=whispPlvModemAdmVLANTable, modemAdmWConfDNS2=modemAdmWConfDNS2, modemConfTrapCommStr1=modemConfTrapCommStr1, whispPlvModemCompliances=whispPlvModemCompliances, modemAdmWConfWanIp=modemAdmWConfWanIp, modemAdmSnmpAccessIpNetworkMask7=modemAdmSnmpAccessIpNetworkMask7, modemAdmSnmpAccessIpNetwork10=modemAdmSnmpAccessIpNetwork10, modemAdmConfIpSubnetMask=modemAdmConfIpSubnetMask, whispPlvModemTrapConfigGroup=whispPlvModemTrapConfigGroup, modemConfTrapIp8=modemConfTrapIp8, whispPlvModemConformance=whispPlvModemConformance, modemAdmVLANId=modemAdmVLANId, modemAdmConfFtpPassword=modemAdmConfFtpPassword, whispPlvModemAdmRepeaterConfig=whispPlvModemAdmRepeaterConfig, whispPlvModemAdmSnmpAcessConfigGroup=whispPlvModemAdmSnmpAcessConfigGroup, modemInfoHardwareVer=modemInfoHardwareVer, modemConfDownLinkMir=modemConfDownLinkMir, modemAdmConfSimUpgradeStart=modemAdmConfSimUpgradeStart, modemAdmConfSnmpGetCommStr=modemAdmConfSnmpGetCommStr, modemAdmSnmpAccessIpNetworkMask9=modemAdmSnmpAccessIpNetworkMask9, modemAdmWConfDhcpLeaseTime=modemAdmWConfDhcpLeaseTime, whispPlvModemConfigGroup=whispPlvModemConfigGroup, modemInfoSimFirmwareVer=modemInfoSimFirmwareVer, whispPlvModemTrapConfig=whispPlvModemTrapConfig, modemTrapSimUpgradeCompleted=modemTrapSimUpgradeCompleted, modemConfTrapIp2=modemConfTrapIp2, whispPlvModemAdmConfig=whispPlvModemAdmConfig, modemAdmSnmpAccessIpNetworkMask2=modemAdmSnmpAccessIpNetworkMask2, modemInfoBootLoaderVer=modemInfoBootLoaderVer, modemAdmSnmpAccessIpNetwork2=modemAdmSnmpAccessIpNetwork2, modemAdmSnmpAccessIpNetwork8=modemAdmSnmpAccessIpNetwork8, modemAdmSnmpAccessIpNetwork6=modemAdmSnmpAccessIpNetwork6, modemAdmWConfDmzConfig=modemAdmWConfDmzConfig, modemConfTrapIp4=modemConfTrapIp4, modemAdmSnmpAccessIpNetwork7=modemAdmSnmpAccessIpNetwork7, modemAdmWConfDNS1=modemAdmWConfDNS1, modemAdmConfDeviceUpgradeStart=modemAdmConfDeviceUpgradeStart, whispPlvModemObjects=whispPlvModemObjects, modemInfoModel=modemInfoModel, modemAdmSnmpAccessIpNetworkMask6=modemAdmSnmpAccessIpNetworkMask6, modemAdmWConfGateway=modemAdmWConfGateway, modemAdmSnmpAccessIpNetworkMask8=modemAdmSnmpAccessIpNetworkMask8, modemInfoSimUpgradeStatus=modemInfoSimUpgradeStatus, whispPlvModemMIB=whispPlvModemMIB, modemAdmConfFtpServerIp=modemAdmConfFtpServerIp, modemConfUpLinkMir=modemConfUpLinkMir, modemAdmConfSnmpSetCommStr=modemAdmConfSnmpSetCommStr, modemConfTrapCommStr10=modemConfTrapCommStr10, whispPlvModemGroups=whispPlvModemGroups, modemInfoActiveBandwidthConfig=modemInfoActiveBandwidthConfig, modemAdmSnmpAccessIpNetwork3=modemAdmSnmpAccessIpNetwork3, modemConfTrapIp7=modemConfTrapIp7, modemAdmWConfDmzIp=modemAdmWConfDmzIp, modemAdmRepeaterConfOperatingMode=modemAdmRepeaterConfOperatingMode, modemInfoDeviceUpgradeStatus=modemInfoDeviceUpgradeStatus, modemConfTrapCommStr9=modemConfTrapCommStr9, modemConfPacketPriorityConfig=modemConfPacketPriorityConfig, modemConfTrapCommStr7=modemConfTrapCommStr7, modemAdmWConfSubnetMask=modemAdmWConfSubnetMask, whispPlvModemInfo=whispPlvModemInfo, modemAdmConfNEK=modemAdmConfNEK, modemTrapPrefix=modemTrapPrefix, modemAdmConfSnmpAdminCommStr=modemAdmConfSnmpAdminCommStr, modemInfoPlcMac=modemInfoPlcMac, modemConfTrapCommStr6=modemConfTrapCommStr6, modemAdmRepeaterConfModemMAC3=modemAdmRepeaterConfModemMAC3, modemAdmSnmpAccessIpNetwork9=modemAdmSnmpAccessIpNetwork9, modemConfTrapIp9=modemConfTrapIp9, whispPlvModemInfoGroup=whispPlvModemInfoGroup, modemConfTrapCommStr5=modemConfTrapCommStr5, modemAdmSnmpAccessIpNetworkMask3=modemAdmSnmpAccessIpNetworkMask3, modemInfoDeviceFirmwareVer=modemInfoDeviceFirmwareVer, modemAdmSnmpAccessIpNetworkMask10=modemAdmSnmpAccessIpNetworkMask10, modemAdmRepeaterConfModemMAC2=modemAdmRepeaterConfModemMAC2, modemAdmSnmpAccessIpNetwork5=modemAdmSnmpAccessIpNetwork5, modemAdmSnmpAccessIpNetworkMask5=modemAdmSnmpAccessIpNetworkMask5, modemAdmConfIpConfig=modemAdmConfIpConfig, modemAdmSnmpAccessIpNetwork1=modemAdmSnmpAccessIpNetwork1, modemAdmSnmpAccessIpNetwork4=modemAdmSnmpAccessIpNetwork4, whispPlvModemCompliance=whispPlvModemCompliance, modemConfUpLinkDataRate=modemConfUpLinkDataRate, modemAdmWConfDhcpEndIp=modemAdmWConfDhcpEndIp, modemConfTrapIp3=modemConfTrapIp3, whispPlvModemAdmConfigGroup=whispPlvModemAdmConfigGroup, modemConfTrapIp10=modemConfTrapIp10, whispPlvModemAdmVLANEntry=whispPlvModemAdmVLANEntry, modemConfTrapIp6=modemConfTrapIp6, modemAdmWConfDhcpConfig=modemAdmWConfDhcpConfig, modemAdmConfLoginPassword=modemAdmConfLoginPassword, modemAdmRepeaterConfModemMAC4=modemAdmRepeaterConfModemMAC4, modemConfTrapCommStr2=modemConfTrapCommStr2, modemAdmVLANIndex=modemAdmVLANIndex, modemTrapSimUpgradeStarted=modemTrapSimUpgradeStarted, whispPlvModemConfig=whispPlvModemConfig, modemConfTrapIp5=modemConfTrapIp5)
