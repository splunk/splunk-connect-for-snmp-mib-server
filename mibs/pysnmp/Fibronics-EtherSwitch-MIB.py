#
# PySNMP MIB module Fibronics-EtherSwitch-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fibronics-EtherSwitch-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:03:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Integer32, IpAddress, Bits, TimeTicks, Unsigned32, ObjectIdentity, Gauge32, MibIdentifier, iso, ModuleIdentity, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Integer32", "IpAddress", "Bits", "TimeTicks", "Unsigned32", "ObjectIdentity", "Gauge32", "MibIdentifier", "iso", "ModuleIdentity", "Counter64", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class MacAddr(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

fibronics = MibIdentifier((1, 3, 6, 1, 4, 1, 22))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100))
eth_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9)).setLabel("eth-switch")
xm516_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 3)).setLabel("xm516-card")
xm517_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 4)).setLabel("xm517-card")
xm518_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 5)).setLabel("xm518-card")
xm519_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 6)).setLabel("xm519-card")
xm5110_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 7)).setLabel("xm5110-card")
xm5111_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 8)).setLabel("xm5111-card")
xm5112_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 9)).setLabel("xm5112-card")
xm5113_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 10)).setLabel("xm5113-card")
xm5114_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 11)).setLabel("xm5114-card")
xm5115_card = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 100, 9, 12)).setLabel("xm5115-card")
mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101))
mibsbridges = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9))
mibbridges_specific = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9, 1)).setLabel("mibbridges-specific")
mibeth2eth = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2))
mib_eps = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1)).setLabel("mib-eps")
fibEsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1))
fibEsMain = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1))
fibEsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1))
fibEsSys = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2))
fibEsPort = MibIdentifier((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2))
fibEsFwVer = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsFwVer.setStatus('mandatory')
fibEsHwVer = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsHwVer.setStatus('mandatory')
fibEsIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsIpAddr.setStatus('mandatory')
fibEsNetMask = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsNetMask.setStatus('mandatory')
fibEsDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsDefaultGateway.setStatus('mandatory')
fibEsTrapRcvrMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsTrapRcvrMaxEnt.setStatus('mandatory')
fibEsTrapRcvrCurEnt = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsTrapRcvrCurEnt.setStatus('mandatory')
fibEsTrapRcvrNext = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 655535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsTrapRcvrNext.setStatus('mandatory')
fibEsTrapRcvrTable = MibTable((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 9), )
if mibBuilder.loadTexts: fibEsTrapRcvrTable.setStatus('mandatory')
fibEsTrapRcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 9, 1), ).setIndexNames((0, "Fibronics-EtherSwitch-MIB", "fibEsTrapRcvrIndex"))
if mibBuilder.loadTexts: fibEsTrapRcvrEntry.setStatus('mandatory')
fibEsTrapRcvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsTrapRcvrIndex.setStatus('mandatory')
fibEsTrapRcvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("invalid", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsTrapRcvrStatus.setStatus('mandatory')
fibEsTrapRcvrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 9, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsTrapRcvrIpAddress.setStatus('mandatory')
fibEsTrapRcvrComm = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 1, 9, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsTrapRcvrComm.setStatus('mandatory')
fibEsNumPorts = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsNumPorts.setStatus('mandatory')
fibEsNumStations = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsNumStations.setStatus('mandatory')
fibEsMostStations = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsMostStations.setStatus('mandatory')
fibEsMaxStations = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsMaxStations.setStatus('mandatory')
fibEsReset = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("running", 2), ("softReset", 3), ("hardReset", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsReset.setStatus('mandatory')
fibEsNumResets = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsNumResets.setStatus('mandatory')
fibEsAddrAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsAddrAgingTime.setStatus('mandatory')
fibEsSysStaTable = MibTable((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 9), )
if mibBuilder.loadTexts: fibEsSysStaTable.setStatus('mandatory')
fibEsSysStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 9, 1), ).setIndexNames((0, "Fibronics-EtherSwitch-MIB", "fibEsSysStaMacAddr"))
if mibBuilder.loadTexts: fibEsSysStaEntry.setStatus('mandatory')
fibEsSysStaMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 9, 1, 1), MacAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsSysStaMacAddr.setStatus('mandatory')
fibEsSysStaPort = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsSysStaPort.setStatus('mandatory')
fibEsSysStaTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 1, 2, 9, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsSysStaTraffic.setStatus('mandatory')
fibEsPortTable = MibTable((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1), )
if mibBuilder.loadTexts: fibEsPortTable.setStatus('mandatory')
fibEsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1), ).setIndexNames((0, "Fibronics-EtherSwitch-MIB", "fibEsPortIndex"))
if mibBuilder.loadTexts: fibEsPortEntry.setStatus('mandatory')
fibEsPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortIndex.setStatus('mandatory')
fibEsPortOprStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsPortOprStatus.setStatus('mandatory')
fibEsPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fullDuplex", 1), ("halfDuplex", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortDuplex.setStatus('mandatory')
fibEsPortRcvLocalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortRcvLocalFrames.setStatus('mandatory')
fibEsPortForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortForwardedFrames.setStatus('mandatory')
fibEsPortMostStations = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortMostStations.setStatus('mandatory')
fibEsPortMaxStations = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortMaxStations.setStatus('mandatory')
fibEsPortSWHandledFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortSWHandledFrames.setStatus('mandatory')
fibEsPortLocalStations = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortLocalStations.setStatus('mandatory')
fibEsPortRemoteStations = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortRemoteStations.setStatus('mandatory')
fibEsPortUnknownStaFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortUnknownStaFrames.setStatus('mandatory')
fibEsPortResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("running", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsPortResetStats.setStatus('mandatory')
fibEsPortResetTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortResetTimer.setStatus('mandatory')
fibEsPortResetAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("running", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibEsPortResetAddrs.setStatus('mandatory')
fibEsPortRcvBcasts = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortRcvBcasts.setStatus('mandatory')
fibEsPortSwitchedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 22, 101, 9, 1, 2, 1, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibEsPortSwitchedFrames.setStatus('mandatory')
mibBuilder.exportSymbols("Fibronics-EtherSwitch-MIB", products=products, fibEsDefaultGateway=fibEsDefaultGateway, fibEsPortUnknownStaFrames=fibEsPortUnknownStaFrames, fibEsSysStaEntry=fibEsSysStaEntry, xm518_card=xm518_card, mibbridges_specific=mibbridges_specific, fibEsMaxStations=fibEsMaxStations, fibEsSysStaPort=fibEsSysStaPort, fibEsPortResetTimer=fibEsPortResetTimer, mibsbridges=mibsbridges, fibEsTrapRcvrMaxEnt=fibEsTrapRcvrMaxEnt, fibEsPortMostStations=fibEsPortMostStations, fibEsPortRemoteStations=fibEsPortRemoteStations, MacAddr=MacAddr, fibEsHwVer=fibEsHwVer, fibEsMain=fibEsMain, fibEsNumStations=fibEsNumStations, xm517_card=xm517_card, xm5112_card=xm5112_card, fibEsTrapRcvrNext=fibEsTrapRcvrNext, fibEsFwVer=fibEsFwVer, fibEsPortSwitchedFrames=fibEsPortSwitchedFrames, fibEsPortTable=fibEsPortTable, fibEsNetMask=fibEsNetMask, fibEsSysStaMacAddr=fibEsSysStaMacAddr, fibEsTrapRcvrIndex=fibEsTrapRcvrIndex, fibEsMostStations=fibEsMostStations, fibEsPortForwardedFrames=fibEsPortForwardedFrames, fibEsPortOprStatus=fibEsPortOprStatus, fibEsPortMaxStations=fibEsPortMaxStations, fibEsIpAddr=fibEsIpAddr, fibEsPortEntry=fibEsPortEntry, fibEsPortResetStats=fibEsPortResetStats, fibEsTrapRcvrEntry=fibEsTrapRcvrEntry, fibEsPortSWHandledFrames=fibEsPortSWHandledFrames, xm5110_card=xm5110_card, fibEsTrapRcvrComm=fibEsTrapRcvrComm, fibEsNumResets=fibEsNumResets, fibEsPortRcvLocalFrames=fibEsPortRcvLocalFrames, fibEsPortResetAddrs=fibEsPortResetAddrs, fibEsSysStaTraffic=fibEsSysStaTraffic, xm5113_card=xm5113_card, fibEsReset=fibEsReset, eth_switch=eth_switch, fibEsPortIndex=fibEsPortIndex, xm5111_card=xm5111_card, fibEsConfig=fibEsConfig, fibEsPortDuplex=fibEsPortDuplex, fibEsPortRcvBcasts=fibEsPortRcvBcasts, xm516_card=xm516_card, fibEsSysStaTable=fibEsSysStaTable, fibEsSys=fibEsSys, fibronics=fibronics, mibs=mibs, fibEsTrapRcvrStatus=fibEsTrapRcvrStatus, mibeth2eth=mibeth2eth, fibEsObjects=fibEsObjects, fibEsAddrAgingTime=fibEsAddrAgingTime, fibEsTrapRcvrIpAddress=fibEsTrapRcvrIpAddress, xm5115_card=xm5115_card, xm519_card=xm519_card, mib_eps=mib_eps, fibEsPort=fibEsPort, fibEsNumPorts=fibEsNumPorts, fibEsTrapRcvrCurEnt=fibEsTrapRcvrCurEnt, xm5114_card=xm5114_card, fibEsPortLocalStations=fibEsPortLocalStations, fibEsTrapRcvrTable=fibEsTrapRcvrTable)
