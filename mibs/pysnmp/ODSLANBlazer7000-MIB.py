#
# PySNMP MIB module ODSLANBlazer7000-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ODSLANBlazer7000-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:23:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
enterprises, ObjectIdentity, iso, ModuleIdentity, Gauge32, Bits, IpAddress, Counter64, MibIdentifier, NotificationType, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "ObjectIdentity", "iso", "ModuleIdentity", "Gauge32", "Bits", "IpAddress", "Counter64", "MibIdentifier", "NotificationType", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class EventValueType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("none", 1), ("integer", 2), ("longInteger", 3), ("string", 4), ("octets", 5), ("ipAddress", 6), ("macAddress", 7), ("timeTicks", 8))

class ResourceType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("system", 1), ("module", 2), ("fan", 3), ("temperatureSensor", 4), ("interface", 5), ("powerSupply", 6), ("display", 7), ("switchPort", 8), ("bridge", 9), ("vlan", 10), ("aft", 11), ("inboundGroupTable", 12), ("outboundGroupTable", 13), ("threeComMappingTable", 14), ("event", 15), ("alarm", 16))

class ResourceId(ObjectIdentifier):
    pass

class DisplayString(OctetString):
    pass

class RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))

class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class BridgeId(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class Timeout(Integer32):
    pass

class EventCategory(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))
    namedValues = NamedValues(("userDefined", 1), ("coldstart", 2), ("warmstart", 3), ("linkUp", 4), ("linkDown", 5), ("newResource", 6), ("deletedResource", 7), ("tempStatus", 8), ("configuration", 9), ("scheduled", 10), ("authentication", 11), ("system", 12), ("risingThreshold", 13), ("fallingThreshold", 14), ("fanStatus", 15), ("powerStatus", 16), ("status", 17), ("bridgeNewRoot", 18), ("bridgeTopChange", 19), ("switchFabricStatus", 20))

ods = MibIdentifier((1, 3, 6, 1, 4, 1, 50))
odsTPS = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8))
odsLANBlazer = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1))
odsLANBlazerMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2))
odsLANBlazer7000Mib = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1))
lanBlazer7000Agent = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1))
lanBlazer7000AgentGen = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 1))
lanBlazer7000AgentMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000AgentMIBVersion.setStatus('mandatory')
lanBlazer7000AgentMgrIndex = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000AgentMgrIndex.setStatus('mandatory')
lanBlazer7000AgentCommunity = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2))
lanBlazer7000CommunityTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1), )
if mibBuilder.loadTexts: lanBlazer7000CommunityTable.setStatus('mandatory')
lanBlazer7000CommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000CommunityIndex"))
if mibBuilder.loadTexts: lanBlazer7000CommunityEntry.setStatus('mandatory')
lanBlazer7000CommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000CommunityIndex.setStatus('mandatory')
lanBlazer7000CommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000CommunityString.setStatus('mandatory')
lanBlazer7000CommunityAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("any", 1), ("ipv4", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000CommunityAddressType.setStatus('mandatory')
lanBlazer7000CommunityAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000CommunityAddress.setStatus('mandatory')
lanBlazer7000CommunityAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("readOnly", 2), ("readWrite", 3), ("moreSpecific", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000CommunityAccess.setStatus('mandatory')
lanBlazer7000CommunityTrapReceiver = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000CommunityTrapReceiver.setStatus('mandatory')
lanBlazer7000CommunitySecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("administrator", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000CommunitySecurityLevel.setStatus('mandatory')
lanBlazer7000CommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 2, 1, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000CommunityStatus.setStatus('mandatory')
lanBlazer7000AgentWeb = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 3))
lanBlazer7000AgentWebServerURL = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000AgentWebServerURL.setStatus('mandatory')
lanBlazer7000AgentWebServerHelpDirectory = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000AgentWebServerHelpDirectory.setStatus('mandatory')
lanBlazer7000Chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3))
lanBlazer7000ChassisGen = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 1))
lanBlazer7000ChassisType = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("p550", 1), ("p220", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ChassisType.setStatus('mandatory')
lanBlazer7000ChassisSlots = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ChassisSlots.setStatus('mandatory')
lanBlazer7000Inventory = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2))
lanBlazer7000InventoryTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1), )
if mibBuilder.loadTexts: lanBlazer7000InventoryTable.setStatus('mandatory')
lanBlazer7000InventoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000InventoryResourceType"), (0, "ODSLANBlazer7000-MIB", "lanBlazer7000InventoryResourceIndex"))
if mibBuilder.loadTexts: lanBlazer7000InventoryEntry.setStatus('mandatory')
lanBlazer7000InventoryResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1, 1, 1), ResourceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000InventoryResourceType.setStatus('mandatory')
lanBlazer7000InventoryResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1, 1, 2), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000InventoryResourceIndex.setStatus('mandatory')
lanBlazer7000InventoryModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000InventoryModelNumber.setStatus('mandatory')
lanBlazer7000InventorySerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000InventorySerialNumber.setStatus('mandatory')
lanBlazer7000InventoryVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000InventoryVersion.setStatus('mandatory')
lanBlazer7000InventoryManufactureInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000InventoryManufactureInfo.setStatus('mandatory')
lanBlazer7000InventoryScratchPad = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000InventoryScratchPad.setStatus('mandatory')
lanBlazer7000PowerSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3))
lanBlazer7000PowerSupplies = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1))
lanBlazer7000PowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1, 1), )
if mibBuilder.loadTexts: lanBlazer7000PowerSupplyTable.setStatus('mandatory')
lanBlazer7000PowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PowerSupplyIndex"))
if mibBuilder.loadTexts: lanBlazer7000PowerSupplyEntry.setStatus('mandatory')
lanBlazer7000PowerSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerSupplyIndex.setStatus('mandatory')
lanBlazer7000PowerSupplyType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("psA", 2), ("psB", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerSupplyType.setStatus('mandatory')
lanBlazer7000PowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("okay", 1), ("faulty", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerSupplyStatus.setStatus('mandatory')
lanBlazer7000PowerSupplyInputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("okay", 1), ("faulty", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerSupplyInputStatus.setStatus('mandatory')
lanBlazer7000PowerSupplyOutputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("okay", 1), ("faulty", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerSupplyOutputStatus.setStatus('mandatory')
lanBlazer7000PowerSupplyOutputCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerSupplyOutputCapacity.setStatus('mandatory')
lanBlazer7000PowerMgmtGen = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 2))
lanBlazer7000PowerCapacity = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerCapacity.setStatus('mandatory')
lanBlazer7000PowerUsed = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerUsed.setStatus('mandatory')
lanBlazer7000PowerMgmtCtl = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 3))
lanBlazer7000PowerControlTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 3, 1), )
if mibBuilder.loadTexts: lanBlazer7000PowerControlTable.setStatus('mandatory')
lanBlazer7000PowerControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 3, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000ModuleIndex"))
if mibBuilder.loadTexts: lanBlazer7000PowerControlEntry.setStatus('mandatory')
lanBlazer7000PowerControlUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PowerControlUsed.setStatus('mandatory')
lanBlazer7000PowerControlPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("high", 1), ("normal", 2), ("low", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PowerControlPriority.setStatus('mandatory')
lanBlazer7000PowerControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("poweredDown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PowerControlMode.setStatus('mandatory')
lanBlazer7000Temperature = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4))
lanBlazer7000TempTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4, 1), )
if mibBuilder.loadTexts: lanBlazer7000TempTable.setStatus('mandatory')
lanBlazer7000TempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000TempIndex"))
if mibBuilder.loadTexts: lanBlazer7000TempEntry.setStatus('mandatory')
lanBlazer7000TempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000TempIndex.setStatus('mandatory')
lanBlazer7000TempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000TempValue.setStatus('mandatory')
lanBlazer7000TempUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000TempUpperLimit.setStatus('mandatory')
lanBlazer7000TempUpperWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000TempUpperWarning.setStatus('mandatory')
lanBlazer7000TempLowerWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000TempLowerWarning.setStatus('mandatory')
lanBlazer7000TempLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 4, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000TempLowerLimit.setStatus('mandatory')
lanBlazer7000Modules = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5))
lanBlazer7000ModuleTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1), )
if mibBuilder.loadTexts: lanBlazer7000ModuleTable.setStatus('mandatory')
lanBlazer7000ModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000ModuleIndex"))
if mibBuilder.loadTexts: lanBlazer7000ModuleEntry.setStatus('mandatory')
lanBlazer7000ModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ModuleIndex.setStatus('mandatory')
lanBlazer7000ModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000ModuleName.setStatus('mandatory')
lanBlazer7000ModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("unknown", 1), ("m5502-1000", 2), ("m2206-1000", 3), ("m5520-100TX-QS", 4), ("m5510-100FX", 5), ("m5500-SUP", 6), ("m5504-1000", 7), ("m2201-1000", 8), ("m5520-100TX-I", 9), ("m2202-100FX", 10), ("m5510R-100FX", 11), ("m5512R-100TX", 12), ("m5500R-SUP", 13), ("m5502R-1000", 14), ("m2200-SUP", 15), ("m2204-100TX", 16), ("m2224-100TX", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ModuleType.setStatus('mandatory')
lanBlazer7000ModuleBaseType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("gigabit", 1), ("fastEthernet", 2), ("supervisor", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ModuleBaseType.setStatus('mandatory')
lanBlazer7000ModuleSlotWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ModuleSlotWidth.setStatus('mandatory')
lanBlazer7000ModuleSlotOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ModuleSlotOffset.setStatus('mandatory')
lanBlazer7000ModulePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ModulePorts.setStatus('mandatory')
lanBlazer7000Ports = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6))
lanBlazer7000PortMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1))
lanBlazer7000PortTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortTable.setStatus('mandatory')
lanBlazer7000PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortEntry.setStatus('mandatory')
lanBlazer7000PortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortIndex.setStatus('mandatory')
lanBlazer7000PortName = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortName.setStatus('mandatory')
lanBlazer7000PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("internal", 1), ("ether-ten-oneHundred", 2), ("ether-oneHundred", 3), ("ether-gigabit", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortType.setStatus('mandatory')
lanBlazer7000PortBaseType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("internal", 1), ("ether-ten-oneHundred", 2), ("ether-oneHundred", 3), ("ether-gigabit", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortBaseType.setStatus('mandatory')
lanBlazer7000PortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortMode.setStatus('mandatory')
lanBlazer7000PortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("okay", 2), ("warning", 3), ("disabledButOkay", 4), ("linkFailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortStatus.setStatus('mandatory')
lanBlazer7000PortConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("internal", 1), ("rj45", 2), ("fiber-ST", 3), ("fiber-SC", 4), ("rs-232", 5), ("aui", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortConnector.setStatus('mandatory')
lanBlazer7000PortSpeedState = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ten-megabits-per-second", 1), ("one-hundred-megabits-per-second", 2), ("one-gigabit-per-second", 3), ("under-negotiation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortSpeedState.setStatus('mandatory')
lanBlazer7000PortDuplexState = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("half-duplex", 1), ("full-duplex", 2), ("under-negotiation", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortDuplexState.setStatus('mandatory')
lanBlazer7000PortGroupBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 1, 1, 1, 10), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortGroupBinding.setStatus('mandatory')
lanBlazer7000PortFlowControlMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 2))
lanBlazer7000PortFlowControlTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 2, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortFlowControlTable.setStatus('mandatory')
lanBlazer7000PortFlowControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 2, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortFlowControlEntry.setStatus('mandatory')
lanBlazer7000PortFlowControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("enable-with-aggressive-backoff", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortFlowControlMode.setStatus('mandatory')
lanBlazer7000PortDuplexMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 3))
lanBlazer7000PortDuplexTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 3, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortDuplexTable.setStatus('mandatory')
lanBlazer7000PortDuplexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 3, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortDuplexEntry.setStatus('mandatory')
lanBlazer7000PortDuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 3, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half-duplex", 1), ("full-duplex", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortDuplexMode.setStatus('mandatory')
lanBlazer7000PortSpeedMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 4))
lanBlazer7000PortSpeedTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 4, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortSpeedTable.setStatus('mandatory')
lanBlazer7000PortSpeedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 4, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortSpeedEntry.setStatus('mandatory')
lanBlazer7000PortSpeedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 4, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ten-megabits-per-second", 1), ("one-hundred-megabits-per-second", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortSpeedMode.setStatus('mandatory')
lanBlazer7000PortAutoNegotiationMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 5))
lanBlazer7000PortAutoNegotiationTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 5, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortAutoNegotiationTable.setStatus('mandatory')
lanBlazer7000PortAutoNegotiationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 5, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortAutoNegotiationEntry.setStatus('mandatory')
lanBlazer7000PortAutoNegotiationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 5, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("autoNegotiate", 1), ("manualConfiguration", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortAutoNegotiationMode.setStatus('mandatory')
lanBlazer7000PortAutoNegotiationSpeedAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 5, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ten-and-one-hundred-megabits-per-second", 1), ("one-hundred-megabits-per-second", 2), ("ten-megabits-per-second", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortAutoNegotiationSpeedAdvertisement.setStatus('mandatory')
lanBlazer7000PortAutoNegotiationDuplexAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 5, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full-and-half-duplex", 1), ("half-duplex", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortAutoNegotiationDuplexAdvertisement.setStatus('mandatory')
lanBlazer7000PortRateLimitMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 6))
lanBlazer7000PortRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 6, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortRateLimitTable.setStatus('mandatory')
lanBlazer7000PortRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 6, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortRateLimitEntry.setStatus('mandatory')
lanBlazer7000PortRateLimitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 6, 1, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("enableIncludeKnownMulticast", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortRateLimitMode.setStatus('mandatory')
lanBlazer7000PortRateLimitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 6, 1, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("one-percent", 1), ("two-percent", 2), ("five-percent", 3), ("ten-percent", 4), ("twenty-percent", 5), ("forty-percent", 6), ("eighty-percent", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortRateLimitRate.setStatus('mandatory')
lanBlazer7000PortRateLimitBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 6, 1, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("rateLimit1", 1), ("rateLimit2", 2), ("rateLimit4", 3), ("rateLimit8", 4), ("rateLimit16", 5), ("rateLimit32", 6), ("rateLimit64", 7), ("rateLimit128", 8), ("rateLimit256", 9), ("rateLimit1024", 10), ("rateLimit2048", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortRateLimitBurstSize.setStatus('mandatory')
lanBlazer7000PortPacePriorityMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 7))
lanBlazer7000PortPacePriorityTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 7, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortPacePriorityTable.setStatus('mandatory')
lanBlazer7000PortPacePriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 7, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortPacePriorityEntry.setStatus('mandatory')
lanBlazer7000PortPacePriorityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 7, 1, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortPacePriorityMode.setStatus('mandatory')
lanBlazer7000PortCategoryMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 8))
lanBlazer7000PortCategoryTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 8, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortCategoryTable.setStatus('mandatory')
lanBlazer7000PortCategoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 8, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortCategoryEntry.setStatus('mandatory')
lanBlazer7000PortCategoryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 6, 8, 1, 1, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userPort", 1), ("servicePort", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortCategoryMode.setStatus('mandatory')
lanBlazer7000BufferMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7))
lanBlazer7000BufferTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1), )
if mibBuilder.loadTexts: lanBlazer7000BufferTable.setStatus('mandatory')
lanBlazer7000BufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000BufferIndex"))
if mibBuilder.loadTexts: lanBlazer7000BufferEntry.setStatus('mandatory')
lanBlazer7000BufferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferIndex.setStatus('mandatory')
lanBlazer7000BufferFabricPort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 2), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferFabricPort.setStatus('mandatory')
lanBlazer7000BufferFabricPortDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferFabricPortDirection.setStatus('mandatory')
lanBlazer7000BufferSwitchPort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 4), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferSwitchPort.setStatus('mandatory')
lanBlazer7000BufferMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferMemory.setStatus('mandatory')
lanBlazer7000BufferAgeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("quarter-second", 2), ("one-second", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BufferAgeTimer.setStatus('mandatory')
lanBlazer7000BufferPriorityServicing = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("strictPriority", 1), ("everyTenThousand", 2), ("everyThousand", 3), ("everyHundred", 4), ("everyFour", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BufferPriorityServicing.setStatus('mandatory')
lanBlazer7000BufferPriorityAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("tenPercent", 2), ("twentyPercent", 3), ("thirtyPercent", 4), ("fortyPercent", 5), ("fiftyPercent", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BufferPriorityAllocation.setStatus('mandatory')
lanBlazer7000BufferPriorityThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("one", 2), ("two", 3), ("three", 4), ("four", 5), ("five", 6), ("six", 7), ("seven", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BufferPriorityThreshold.setStatus('mandatory')
lanBlazer7000BufferCongestion = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("informationNotAvailable", 1), ("notCongested", 2), ("congested", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferCongestion.setStatus('mandatory')
lanBlazer7000BufferHighOverflowDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferHighOverflowDrops.setStatus('mandatory')
lanBlazer7000BufferLowOverflowDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferLowOverflowDrops.setStatus('mandatory')
lanBlazer7000BufferHighStaleDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferHighStaleDrops.setStatus('mandatory')
lanBlazer7000BufferLowStaleDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferLowStaleDrops.setStatus('mandatory')
lanBlazer7000BufferCongestionDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 3, 7, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BufferCongestionDrops.setStatus('mandatory')
lanBlazer7000Switching = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5))
lanBlazer7000SwitchingLayerII = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1))
lanBlazer7000SwitchGen = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 1))
lanBlazer7000SwitchSTPConfig = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ieee8021dStp", 1), ("stpPerVlan", 2), ("twoLayerStp", 3), ("disable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchSTPConfig.setStatus('mandatory')
lanBlazer7000SwitchAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchAgingTime.setStatus('mandatory')
lanBlazer7000SwitchSuperAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchSuperAgingTime.setStatus('mandatory')
lanBlazer7000BridgeMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2))
lanBlazer7000BridgeTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1), )
if mibBuilder.loadTexts: lanBlazer7000BridgeTable.setStatus('mandatory')
lanBlazer7000BridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000BridgeIndex"))
if mibBuilder.loadTexts: lanBlazer7000BridgeEntry.setStatus('mandatory')
lanBlazer7000BridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeIndex.setStatus('mandatory')
lanBlazer7000BridgeType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dot1d", 1), ("virtual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeType.setStatus('mandatory')
lanBlazer7000BridgeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgeMode.setStatus('mandatory')
lanBlazer7000BridgeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStatus.setStatus('mandatory')
lanBlazer7000BridgeStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpPriority.setStatus('mandatory')
lanBlazer7000BridgeStpTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpTimeSinceTopologyChange.setStatus('mandatory')
lanBlazer7000BridgeStpTopChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpTopChanges.setStatus('mandatory')
lanBlazer7000BridgeStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 8), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpDesignatedRoot.setStatus('mandatory')
lanBlazer7000BridgeStpRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpRootCost.setStatus('mandatory')
lanBlazer7000BridgeStpRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpRootPort.setStatus('mandatory')
lanBlazer7000BridgeStpMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 11), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpMaxAge.setStatus('mandatory')
lanBlazer7000BridgeStpHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 12), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpHelloTime.setStatus('mandatory')
lanBlazer7000BridgeStpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpHoldTime.setStatus('mandatory')
lanBlazer7000BridgeStpForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 14), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpForwardDelay.setStatus('mandatory')
lanBlazer7000BridgeStpBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 15), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpBridgeMaxAge.setStatus('mandatory')
lanBlazer7000BridgeStpBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 16), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpBridgeHelloTime.setStatus('mandatory')
lanBlazer7000BridgeStpBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 2, 1, 1, 17), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgeStpBridgeForwardDelay.setStatus('mandatory')
lanBlazer7000BridgePortMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3))
lanBlazer7000BridgePortTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1), )
if mibBuilder.loadTexts: lanBlazer7000BridgePortTable.setStatus('mandatory')
lanBlazer7000BridgePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000BridgePortIndex"))
if mibBuilder.loadTexts: lanBlazer7000BridgePortEntry.setStatus('mandatory')
lanBlazer7000BridgePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgePortIndex.setStatus('mandatory')
lanBlazer7000BridgePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgePortPriority.setStatus('mandatory')
lanBlazer7000BridgePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgePortState.setStatus('mandatory')
lanBlazer7000BridgePortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgePortEnable.setStatus('mandatory')
lanBlazer7000BridgePortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgePortPathCost.setStatus('mandatory')
lanBlazer7000BridgePortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgePortDesignatedRoot.setStatus('mandatory')
lanBlazer7000BridgePortDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgePortDesignatedCost.setStatus('mandatory')
lanBlazer7000BridgePortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 8), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgePortDesignatedBridge.setStatus('mandatory')
lanBlazer7000BridgePortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgePortDesignatedPort.setStatus('mandatory')
lanBlazer7000BridgePortForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000BridgePortForwardTransitions.setStatus('mandatory')
lanBlazer7000BridgePortFastStart = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgePortFastStart.setStatus('deprecated')
lanBlazer7000BridgePortSetDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("useCurrentValues", 1), ("setDefault", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgePortSetDefault.setStatus('mandatory')
lanBlazer7000BridgePortEnableChangeDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000BridgePortEnableChangeDetection.setStatus('mandatory')
lanBlazer7000L2AddrMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4))
lanBlazer7000L2AddrDatabaseMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1))
lanBlazer7000L2AddressTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1), )
if mibBuilder.loadTexts: lanBlazer7000L2AddressTable.setStatus('mandatory')
lanBlazer7000L2AddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000L2AddressIndex"))
if mibBuilder.loadTexts: lanBlazer7000L2AddressEntry.setStatus('mandatory')
lanBlazer7000L2AddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressIndex.setStatus('mandatory')
lanBlazer7000L2AddressTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressTableIndex.setStatus('mandatory')
lanBlazer7000L2AddressMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressMacAddress.setStatus('mandatory')
lanBlazer7000L2AddressPortBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 4), ResourceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressPortBinding.setStatus('mandatory')
lanBlazer7000L2AddressBindingValid = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressBindingValid.setStatus('mandatory')
lanBlazer7000L2AddressVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressVlanID.setStatus('mandatory')
lanBlazer7000L2AddressPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("priorityZero", 1), ("priorityFour", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressPriority.setStatus('mandatory')
lanBlazer7000L2AddressForward = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalForward", 1), ("specialDelivery", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressForward.setStatus('mandatory')
lanBlazer7000L2AddressCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalForward", 1), ("copyCPU", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressCopy.setStatus('mandatory')
lanBlazer7000L2AddressPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressPersistence.setStatus('mandatory')
lanBlazer7000L2AddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("learned", 2), ("self", 3), ("mgmt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressStatus.setStatus('mandatory')
lanBlazer7000L2AddrSummaryMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 2))
lanBlazer7000L2AddrSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 2, 1), )
if mibBuilder.loadTexts: lanBlazer7000L2AddrSummaryTable.setStatus('mandatory')
lanBlazer7000L2AddrSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 2, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000L2AddressIndex"))
if mibBuilder.loadTexts: lanBlazer7000L2AddrSummaryEntry.setStatus('mandatory')
lanBlazer7000L2AddrSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddrSummary.setStatus('mandatory')
lanBlazer7000L2AddrControlMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3))
lanBlazer7000L2AddressControlTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1), )
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlTable.setStatus('mandatory')
lanBlazer7000L2AddressControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000AgentMgrIndex"))
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlEntry.setStatus('mandatory')
lanBlazer7000L2AddressControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlIndex.setStatus('mandatory')
lanBlazer7000L2AddressControlMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlMacAddress.setStatus('mandatory')
lanBlazer7000L2AddressControlPortBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1, 1, 3), ResourceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlPortBinding.setStatus('mandatory')
lanBlazer7000L2AddressControlVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlVlanID.setStatus('mandatory')
lanBlazer7000L2AddressControlPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("priorityZero", 1), ("priorityFour", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlPriority.setStatus('mandatory')
lanBlazer7000L2AddressControlPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("permanent", 1), ("deleteOnReset", 2), ("deleteOnTimeout", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlPersistence.setStatus('mandatory')
lanBlazer7000L2AddressControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("createRequest", 1), ("underCreation", 2), ("success", 3), ("otherError", 4), ("entryExistsError", 5), ("invalidMacAddress", 6), ("invalidPortBinding", 7), ("invalidVlanID", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressControlStatus.setStatus('mandatory')
lanBlazer7000L2AddrChangeMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4))
lanBlazer7000L2AddressChangeLast = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeLast.setStatus('mandatory')
lanBlazer7000L2AddressChangeWraps = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeWraps.setStatus('mandatory')
lanBlazer7000L2AddressChangeMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeMaxEntries.setStatus('mandatory')
lanBlazer7000L2AddressChangeTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 4), )
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeTable.setStatus('mandatory')
lanBlazer7000L2AddressChangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 4, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000L2AddressChangeWrapCount"), (0, "ODSLANBlazer7000-MIB", "lanBlazer7000L2AddressChangeIndex"))
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeEntry.setStatus('mandatory')
lanBlazer7000L2AddressChangeWrapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeWrapCount.setStatus('mandatory')
lanBlazer7000L2AddressChangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeIndex.setStatus('mandatory')
lanBlazer7000L2AddressChangeIndexChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeIndexChanged.setStatus('mandatory')
lanBlazer7000L2AddressChangeSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 1, 4, 4, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000L2AddressChangeSummary.setStatus('mandatory')
lanBlazer7000SwitchPortMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2))
lanBlazer7000SwitchPortTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1), )
if mibBuilder.loadTexts: lanBlazer7000SwitchPortTable.setStatus('mandatory')
lanBlazer7000SwitchPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000SwitchPortIndex"))
if mibBuilder.loadTexts: lanBlazer7000SwitchPortEntry.setStatus('mandatory')
lanBlazer7000SwitchPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortIndex.setStatus('mandatory')
lanBlazer7000SwitchPortSTAPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortSTAPMode.setStatus('mandatory')
lanBlazer7000SwitchPortConvertToStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("learnAsDynamic", 1), ("convertToStatic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortConvertToStatic.setStatus('mandatory')
lanBlazer7000SwitchPortLearningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortLearningMode.setStatus('mandatory')
lanBlazer7000SwitchPortHuntGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortHuntGroup.setStatus('mandatory')
lanBlazer7000SwitchPortPhysicalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 6), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortPhysicalPort.setStatus('mandatory')
lanBlazer7000SwitchPortKnownMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortKnownMode.setStatus('mandatory')
lanBlazer7000SwitchPortMappingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("port-based", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortMappingMethod.setStatus('mandatory')
lanBlazer7000SwitchPortTrunkingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("clear", 1), ("ieee8021q", 2), ("multiLevel", 3), ("trunk3Com", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortTrunkingMode.setStatus('mandatory')
lanBlazer7000SwitchPortVlanBindingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("persistent", 2), ("dynamic", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortVlanBindingMethod.setStatus('mandatory')
lanBlazer7000SwitchPortIgnoreTag = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("useTag", 1), ("ignoreTag", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortIgnoreTag.setStatus('mandatory')
lanBlazer7000SwitchPortVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortVlanID.setStatus('mandatory')
lanBlazer7000SwitchPort3ComMappingTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPort3ComMappingTableIndex.setStatus('mandatory')
lanBlazer7000SwitchPortAutoVlanCreation = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortAutoVlanCreation.setStatus('mandatory')
lanBlazer7000SwitchPortMirrorMode = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortMirrorMode.setStatus('mandatory')
lanBlazer7000SwitchPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortIfIndex.setStatus('mandatory')
lanBlazer7000SwitchPortFastStart = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortFastStart.setStatus('mandatory')
lanBlazer7000SwitchPortVlanExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000SwitchPortVlanExchange.setStatus('mandatory')
lanBlazer7000HuntGroupMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4))
lanBlazer7000HuntGroupTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4, 1), )
if mibBuilder.loadTexts: lanBlazer7000HuntGroupTable.setStatus('mandatory')
lanBlazer7000HuntGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000HuntGroupIndex"))
if mibBuilder.loadTexts: lanBlazer7000HuntGroupEntry.setStatus('mandatory')
lanBlazer7000HuntGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000HuntGroupIndex.setStatus('mandatory')
lanBlazer7000HuntGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000HuntGroupName.setStatus('mandatory')
lanBlazer7000HuntGroupBasePort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4, 1, 1, 3), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000HuntGroupBasePort.setStatus('mandatory')
lanBlazer7000HuntGroupNumberOfPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000HuntGroupNumberOfPorts.setStatus('mandatory')
lanBlazer7000HuntGroupLoadSharing = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000HuntGroupLoadSharing.setStatus('mandatory')
lanBlazer7000HuntGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("createRequest", 1), ("underCreation", 2), ("deleteRequest", 3), ("active", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000HuntGroupStatus.setStatus('mandatory')
lanBlazer7000PortMirroringMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 5))
lanBlazer7000PortMirroringTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 5, 1), )
if mibBuilder.loadTexts: lanBlazer7000PortMirroringTable.setStatus('mandatory')
lanBlazer7000PortMirroringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 5, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000PortMirroringIndex"))
if mibBuilder.loadTexts: lanBlazer7000PortMirroringEntry.setStatus('mandatory')
lanBlazer7000PortMirroringIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 5, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000PortMirroringIndex.setStatus('mandatory')
lanBlazer7000PortMirroringSourceSubPort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 5, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortMirroringSourceSubPort.setStatus('mandatory')
lanBlazer7000PortMirroringSamplerType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("periodic", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortMirroringSamplerType.setStatus('mandatory')
lanBlazer7000PortMirroringRate = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 5, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortMirroringRate.setStatus('mandatory')
lanBlazer7000PortMirroringMirrorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 5, 5, 1, 1, 5), ResourceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000PortMirroringMirrorPort.setStatus('mandatory')
lanBlazer7000VlanMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7))
lanBlazer7000Vlans = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1))
lanBlazer7000VlanTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1), )
if mibBuilder.loadTexts: lanBlazer7000VlanTable.setStatus('mandatory')
lanBlazer7000VlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000VlanID"))
if mibBuilder.loadTexts: lanBlazer7000VlanEntry.setStatus('mandatory')
lanBlazer7000VlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000VlanID.setStatus('mandatory')
lanBlazer7000VlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VlanName.setStatus('mandatory')
lanBlazer7000VlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000VlanIfIndex.setStatus('mandatory')
lanBlazer7000VlanAFTIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VlanAFTIndex.setStatus('mandatory')
lanBlazer7000VlanBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 5), ResourceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VlanBridgeIndex.setStatus('mandatory')
lanBlazer7000VlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("createRequest", 1), ("underCreation", 2), ("destroyRequest", 3), ("underDestruction", 4), ("active", 5), ("otherError", 6), ("entryExistsError", 7), ("invalidVlanID", 8), ("invalidVlanName", 9), ("invalidVlanAFTIndex", 10), ("invalidVlanBridgeIndex", 11), ("invalidVlanInitialHashTableSize", 12), ("invalidVlanAutoIncrementHTSize", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VlanStatus.setStatus('mandatory')
lanBlazer7000VlanInitialHashTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VlanInitialHashTableSize.setStatus('mandatory')
lanBlazer7000VlanAutoIncrementHTSize = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VlanAutoIncrementHTSize.setStatus('mandatory')
lanBlazer7000VlanLearnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notLearned", 1), ("vlanExchange", 2), ("auto", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000VlanLearnStatus.setStatus('mandatory')
lanBlazer7000VlanMappings = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3))
lanBlazer70003ComMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 1))
lanBlazer70003ComMappingTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 1, 1), )
if mibBuilder.loadTexts: lanBlazer70003ComMappingTable.setStatus('mandatory')
lanBlazer70003ComMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 1, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer70003ComMappingTableIndex"))
if mibBuilder.loadTexts: lanBlazer70003ComMappingEntry.setStatus('mandatory')
lanBlazer70003ComMappingTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer70003ComMappingTableIndex.setStatus('mandatory')
lanBlazer70003ComMappingTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer70003ComMappingTableName.setStatus('mandatory')
lanBlazer70003ComMappingTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("createRequest", 1), ("destroyRequest", 2), ("active", 3), ("entryExistsError", 4), ("otherError", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer70003ComMappingTableStatus.setStatus('mandatory')
lanBlazer7000Vlan3ComMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 2))
lanBlazer7000Vlan3ComMappingTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 2, 1), )
if mibBuilder.loadTexts: lanBlazer7000Vlan3ComMappingTable.setStatus('mandatory')
lanBlazer7000Vlan3ComMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 2, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer70003ComMappingTableIndex"), (0, "ODSLANBlazer7000-MIB", "lanBlazer7000Vlan3ComMappingIndex"))
if mibBuilder.loadTexts: lanBlazer7000Vlan3ComMappingEntry.setStatus('mandatory')
lanBlazer7000Vlan3ComMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000Vlan3ComMappingIndex.setStatus('mandatory')
lanBlazer7000Vlan3ComMappingVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000Vlan3ComMappingVlanID.setStatus('mandatory')
lanBlazer7000Vlan3ComMappingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("createRequest", 1), ("destroyRequest", 2), ("active", 3), ("otherError", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000Vlan3ComMappingStatus.setStatus('mandatory')
lanBlazer7000VirtualPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 4))
lanBlazer7000VirtualSwitchPortTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 4, 1), )
if mibBuilder.loadTexts: lanBlazer7000VirtualSwitchPortTable.setStatus('mandatory')
lanBlazer7000VirtualSwitchPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 4, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000VirtualSwitchPortIndex"))
if mibBuilder.loadTexts: lanBlazer7000VirtualSwitchPortEntry.setStatus('mandatory')
lanBlazer7000VirtualSwitchPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 4, 1, 1, 1), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000VirtualSwitchPortIndex.setStatus('mandatory')
lanBlazer7000VirtualSwitchPortFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("trunkingFormat", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VirtualSwitchPortFormat.setStatus('mandatory')
lanBlazer7000VirtualSwitchPortBridgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 4, 1, 1, 3), ResourceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VirtualSwitchPortBridgePort.setStatus('mandatory')
lanBlazer7000VirtualSwitchPortBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("persistent", 2), ("dynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000VirtualSwitchPortBindingType.setStatus('mandatory')
lanBlazer7000VirtualSwitchPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 7, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("createRequest", 1), ("destroyRequest", 2), ("active", 3), ("otherError", 4), ("entryExistsError", 5), ("entryNoExistError", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VirtualSwitchPortStatus.setStatus('mandatory')
lanBlazer7000Events = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10))
lanBlazer7000EventMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 1))
lanBlazer7000EventTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 1, 1), )
if mibBuilder.loadTexts: lanBlazer7000EventTable.setStatus('mandatory')
lanBlazer7000EventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 1, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000EventIndex"))
if mibBuilder.loadTexts: lanBlazer7000EventEntry.setStatus('mandatory')
lanBlazer7000EventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventIndex.setStatus('mandatory')
lanBlazer7000EventMode = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000EventMode.setStatus('mandatory')
lanBlazer7000EventLogAction = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000EventLogAction.setStatus('mandatory')
lanBlazer7000EventTrapAction = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000EventTrapAction.setStatus('mandatory')
lanBlazer7000EventConsoleAction = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000EventConsoleAction.setStatus('mandatory')
lanBlazer7000EventLogMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 2))
lanBlazer7000LogTableMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000LogTableMaxSize.setStatus('mandatory')
lanBlazer7000LogLastEntry = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000LogLastEntry.setStatus('mandatory')
lanBlazer7000LogWraps = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000LogWraps.setStatus('mandatory')
lanBlazer7000EventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3))
lanBlazer7000EventLogTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1), )
if mibBuilder.loadTexts: lanBlazer7000EventLogTable.setStatus('mandatory')
lanBlazer7000EventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000EventLogIndex"))
if mibBuilder.loadTexts: lanBlazer7000EventLogEntry.setStatus('mandatory')
lanBlazer7000EventLogEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogEventIndex.setStatus('mandatory')
lanBlazer7000EventLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogIndex.setStatus('mandatory')
lanBlazer7000EventLogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogTime.setStatus('mandatory')
lanBlazer7000EventLogDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogDescr.setStatus('mandatory')
lanBlazer7000EventLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 5), EventCategory()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogType.setStatus('mandatory')
lanBlazer7000EventLogSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogSeverity.setStatus('mandatory')
lanBlazer7000EventLogDTM = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogDTM.setStatus('mandatory')
lanBlazer7000EventLogResType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 8), ResourceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogResType.setStatus('mandatory')
lanBlazer7000EventLogResID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 9), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogResID.setStatus('mandatory')
lanBlazer7000EventLogResLeaf = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogResLeaf.setStatus('mandatory')
lanBlazer7000EventLogValueType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 11), EventValueType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogValueType.setStatus('mandatory')
lanBlazer7000EventLogValue = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogValue.setStatus('mandatory')
lanBlazer7000EventLogEpochTime = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogEpochTime.setStatus('mandatory')
lanBlazer7000EventLogID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventLogID.setStatus('mandatory')
lanBlazer7000ShutdownLogMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 4))
lanBlazer7000ShutdownLogTableMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000ShutdownLogTableMaxSize.setStatus('mandatory')
lanBlazer7000ShutdownLogLastEntry = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ShutdownLogLastEntry.setStatus('mandatory')
lanBlazer7000ShutdownLogAcknowledged = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-acknowledged", 1), ("acknowledged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ShutdownLogAcknowledged.setStatus('mandatory')
lanBlazer7000EventShutdownLog = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5))
lanBlazer7000EventShutdownLogTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1), )
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogTable.setStatus('mandatory')
lanBlazer7000EventShutdownLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000EventShutdownLogIndex"))
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogEntry.setStatus('mandatory')
lanBlazer7000EventShutdownLogEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogEventIndex.setStatus('mandatory')
lanBlazer7000EventShutdownLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogIndex.setStatus('mandatory')
lanBlazer7000EventShutdownLogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogTime.setStatus('mandatory')
lanBlazer7000EventShutdownLogDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogDescr.setStatus('mandatory')
lanBlazer7000EventShutdownLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 5), EventCategory()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogType.setStatus('mandatory')
lanBlazer7000EventShutdownLogSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogSeverity.setStatus('mandatory')
lanBlazer7000EventShutdownLogDTM = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogDTM.setStatus('mandatory')
lanBlazer7000EventShutdownLogResType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 8), ResourceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogResType.setStatus('mandatory')
lanBlazer7000EventShutdownLogResID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 9), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogResID.setStatus('mandatory')
lanBlazer7000EventShutdownLogResLeaf = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogResLeaf.setStatus('mandatory')
lanBlazer7000EventShutdownLogValueType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 11), EventValueType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogValueType.setStatus('mandatory')
lanBlazer7000EventShutdownLogValue = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogValue.setStatus('mandatory')
lanBlazer7000EventShutdownLogEpochTime = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogEpochTime.setStatus('mandatory')
lanBlazer7000EventShutdownLogID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventShutdownLogID.setStatus('mandatory')
lanBlazer7000EventTrapMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6))
lanBlazer7000EventTrapEventIndex = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapEventIndex.setStatus('mandatory')
lanBlazer7000EventTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapTime.setStatus('mandatory')
lanBlazer7000EventTrapDescr = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapDescr.setStatus('mandatory')
lanBlazer7000EventTrapType = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 4), EventCategory()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapType.setStatus('mandatory')
lanBlazer7000EventTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapSeverity.setStatus('mandatory')
lanBlazer7000EventTrapDTM = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(18, 18)).setFixedLength(18)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapDTM.setStatus('mandatory')
lanBlazer7000EventTrapResType = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 7), ResourceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapResType.setStatus('mandatory')
lanBlazer7000EventTrapResID = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 8), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapResID.setStatus('mandatory')
lanBlazer7000EventTrapResLeaf = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapResLeaf.setStatus('mandatory')
lanBlazer7000EventTrapValueType = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 10), EventValueType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapValueType.setStatus('mandatory')
lanBlazer7000EventTrapValue = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapValue.setStatus('mandatory')
lanBlazer7000EventTrapEpochTime = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapEpochTime.setStatus('mandatory')
lanBlazer7000EventTrapID = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 10, 6, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000EventTrapID.setStatus('mandatory')
lanBlazer7000AlarmMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11))
lanBlazer7000AlarmGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 1))
lanBlazer7000AlarmGeneralActiveEntries = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000AlarmGeneralActiveEntries.setStatus('mandatory')
lanBlazer7000AlarmGeneralTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000AlarmGeneralTimeStamp.setStatus('mandatory')
lanBlazer7000Alarms = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2))
lanBlazer7000ActiveAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2), )
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmTable.setStatus('mandatory')
lanBlazer7000ActiveAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1), ).setIndexNames((0, "ODSLANBlazer7000-MIB", "lanBlazer7000ActiveAlarmIndex"))
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmEntry.setStatus('mandatory')
lanBlazer7000ActiveAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmIndex.setStatus('mandatory')
lanBlazer7000ActiveAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmName.setStatus('mandatory')
lanBlazer7000ActiveAlarmValueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmValueHigh.setStatus('mandatory')
lanBlazer7000ActiveAlarmValueLow = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmValueLow.setStatus('mandatory')
lanBlazer7000ActiveAlarmVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmVariable.setStatus('mandatory')
lanBlazer7000ActiveAlarmResType = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 6), ResourceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmResType.setStatus('mandatory')
lanBlazer7000ActiveAlarmResID = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 7), ResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmResID.setStatus('mandatory')
lanBlazer7000ActiveAlarmLeaf = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmLeaf.setStatus('mandatory')
lanBlazer7000ActiveAlarmOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 11, 2, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000ActiveAlarmOwner.setStatus('mandatory')
lanBlazer7000SnmpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 13))
lanBlazer7000SystemTrap = NotificationType((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 13) + (0,2)).setObjects(("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEventIndex"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDescr"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapSeverity"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDTM"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResID"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResLeaf"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValueType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValue"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEpochTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapID"))
lanBlazer7000ConfigurationTrap = NotificationType((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 13) + (0,3)).setObjects(("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEventIndex"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDescr"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapSeverity"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDTM"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResID"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResLeaf"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValueType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValue"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEpochTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapID"))
lanBlazer7000TemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 13) + (0,4)).setObjects(("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEventIndex"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDescr"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapSeverity"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDTM"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResID"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResLeaf"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValueType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValue"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEpochTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapID"))
lanBlazer7000ResourceTrap = NotificationType((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 13) + (0,5)).setObjects(("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEventIndex"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDescr"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapSeverity"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDTM"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResID"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResLeaf"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValueType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValue"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEpochTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapID"))
lanBlazer7000FanTrap = NotificationType((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 13) + (0,6)).setObjects(("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEventIndex"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDescr"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapSeverity"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDTM"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResID"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResLeaf"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValueType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValue"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEpochTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapID"))
lanBlazer7000PowerTrap = NotificationType((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 13) + (0,9)).setObjects(("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEventIndex"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDescr"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapSeverity"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapDTM"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResID"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapResLeaf"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValueType"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapValue"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapEpochTime"), ("ODSLANBlazer7000-MIB", "lanBlazer7000EventTrapID"))
lanBlazer7000VlanExchange = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 14))
lanBlazer7000VlanExchangeSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 14, 1))
lanBlazer7000VlanExchangeState = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VlanExchangeState.setStatus('mandatory')
lanBlazer7000VlanExchangeDomainName = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanBlazer7000VlanExchangeDomainName.setStatus('mandatory')
lanBlazer7000VlanExchangeUpdaterId = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 14, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000VlanExchangeUpdaterId.setStatus('mandatory')
lanBlazer7000VlanExchangeUpdateTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000VlanExchangeUpdateTimeStamp.setStatus('mandatory')
lanBlazer7000VlanExchangeConfigRevNum = MibScalar((1, 3, 6, 1, 4, 1, 50, 8, 1, 2, 1, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanBlazer7000VlanExchangeConfigRevNum.setStatus('mandatory')
mibBuilder.exportSymbols("ODSLANBlazer7000-MIB", lanBlazer7000PortCategoryTable=lanBlazer7000PortCategoryTable, lanBlazer7000PowerSupplyEntry=lanBlazer7000PowerSupplyEntry, lanBlazer7000BridgePortFastStart=lanBlazer7000BridgePortFastStart, lanBlazer70003ComMappingTableName=lanBlazer70003ComMappingTableName, lanBlazer7000BridgeStpPriority=lanBlazer7000BridgeStpPriority, lanBlazer7000ShutdownLogLastEntry=lanBlazer7000ShutdownLogLastEntry, lanBlazer7000L2AddressVlanID=lanBlazer7000L2AddressVlanID, lanBlazer7000BridgeType=lanBlazer7000BridgeType, lanBlazer7000BridgePortEnableChangeDetection=lanBlazer7000BridgePortEnableChangeDetection, lanBlazer7000HuntGroupEntry=lanBlazer7000HuntGroupEntry, lanBlazer7000VlanExchangeSwitch=lanBlazer7000VlanExchangeSwitch, lanBlazer7000PortSpeedMgt=lanBlazer7000PortSpeedMgt, lanBlazer7000EventTrapEventIndex=lanBlazer7000EventTrapEventIndex, lanBlazer7000SwitchPortIfIndex=lanBlazer7000SwitchPortIfIndex, lanBlazer7000BridgeIndex=lanBlazer7000BridgeIndex, lanBlazer7000BridgeMode=lanBlazer7000BridgeMode, lanBlazer7000PortPacePriorityTable=lanBlazer7000PortPacePriorityTable, lanBlazer7000PortSpeedTable=lanBlazer7000PortSpeedTable, lanBlazer7000PowerUsed=lanBlazer7000PowerUsed, lanBlazer7000SwitchPortMgt=lanBlazer7000SwitchPortMgt, lanBlazer7000SwitchPort3ComMappingTableIndex=lanBlazer7000SwitchPort3ComMappingTableIndex, lanBlazer7000PortAutoNegotiationSpeedAdvertisement=lanBlazer7000PortAutoNegotiationSpeedAdvertisement, lanBlazer70003ComMappingTableStatus=lanBlazer70003ComMappingTableStatus, lanBlazer7000SwitchPortPhysicalPort=lanBlazer7000SwitchPortPhysicalPort, lanBlazer7000CommunityStatus=lanBlazer7000CommunityStatus, lanBlazer7000Vlan3ComMappingEntry=lanBlazer7000Vlan3ComMappingEntry, lanBlazer7000VlanExchangeState=lanBlazer7000VlanExchangeState, lanBlazer7000PortStatus=lanBlazer7000PortStatus, lanBlazer7000ModuleName=lanBlazer7000ModuleName, lanBlazer7000BridgePortDesignatedCost=lanBlazer7000BridgePortDesignatedCost, lanBlazer7000HuntGroupTable=lanBlazer7000HuntGroupTable, lanBlazer7000PortDuplexTable=lanBlazer7000PortDuplexTable, lanBlazer7000EventShutdownLogSeverity=lanBlazer7000EventShutdownLogSeverity, Timeout=Timeout, lanBlazer7000ModuleType=lanBlazer7000ModuleType, lanBlazer7000InventoryResourceType=lanBlazer7000InventoryResourceType, lanBlazer7000EventIndex=lanBlazer7000EventIndex, lanBlazer7000EventLogEpochTime=lanBlazer7000EventLogEpochTime, lanBlazer7000PortPacePriorityMgt=lanBlazer7000PortPacePriorityMgt, lanBlazer7000PortSpeedEntry=lanBlazer7000PortSpeedEntry, lanBlazer7000Alarms=lanBlazer7000Alarms, lanBlazer7000PortAutoNegotiationMgt=lanBlazer7000PortAutoNegotiationMgt, lanBlazer7000EventTrapID=lanBlazer7000EventTrapID, lanBlazer7000BridgeStpBridgeHelloTime=lanBlazer7000BridgeStpBridgeHelloTime, lanBlazer7000BufferCongestion=lanBlazer7000BufferCongestion, lanBlazer7000BufferMemory=lanBlazer7000BufferMemory, lanBlazer7000BufferTable=lanBlazer7000BufferTable, lanBlazer7000VlanExchangeDomainName=lanBlazer7000VlanExchangeDomainName, lanBlazer7000Events=lanBlazer7000Events, lanBlazer7000PortConnector=lanBlazer7000PortConnector, lanBlazer7000SwitchPortKnownMode=lanBlazer7000SwitchPortKnownMode, lanBlazer7000L2AddressControlIndex=lanBlazer7000L2AddressControlIndex, lanBlazer7000EventLogIndex=lanBlazer7000EventLogIndex, lanBlazer7000EventShutdownLogValue=lanBlazer7000EventShutdownLogValue, lanBlazer7000EventShutdownLogResID=lanBlazer7000EventShutdownLogResID, lanBlazer7000PortMirroringSourceSubPort=lanBlazer7000PortMirroringSourceSubPort, lanBlazer7000L2AddressChangeLast=lanBlazer7000L2AddressChangeLast, lanBlazer7000PortName=lanBlazer7000PortName, lanBlazer7000PortEntry=lanBlazer7000PortEntry, lanBlazer7000SwitchingLayerII=lanBlazer7000SwitchingLayerII, lanBlazer7000ActiveAlarmValueLow=lanBlazer7000ActiveAlarmValueLow, lanBlazer7000SystemTrap=lanBlazer7000SystemTrap, lanBlazer7000ActiveAlarmEntry=lanBlazer7000ActiveAlarmEntry, lanBlazer7000BufferAgeTimer=lanBlazer7000BufferAgeTimer, lanBlazer7000PortMirroringSamplerType=lanBlazer7000PortMirroringSamplerType, lanBlazer7000PortDuplexEntry=lanBlazer7000PortDuplexEntry, lanBlazer7000HuntGroupMgt=lanBlazer7000HuntGroupMgt, lanBlazer7000SwitchPortIgnoreTag=lanBlazer7000SwitchPortIgnoreTag, lanBlazer7000InventoryResourceIndex=lanBlazer7000InventoryResourceIndex, lanBlazer7000EventTrapDTM=lanBlazer7000EventTrapDTM, lanBlazer7000Switching=lanBlazer7000Switching, lanBlazer7000TempUpperLimit=lanBlazer7000TempUpperLimit, lanBlazer7000BridgeStpTopChanges=lanBlazer7000BridgeStpTopChanges, lanBlazer7000TempValue=lanBlazer7000TempValue, lanBlazer7000Vlan3ComMappingIndex=lanBlazer7000Vlan3ComMappingIndex, lanBlazer7000ActiveAlarmOwner=lanBlazer7000ActiveAlarmOwner, lanBlazer7000ActiveAlarmResID=lanBlazer7000ActiveAlarmResID, lanBlazer7000PowerSupplyOutputStatus=lanBlazer7000PowerSupplyOutputStatus, lanBlazer7000VlanExchangeUpdaterId=lanBlazer7000VlanExchangeUpdaterId, lanBlazer7000PowerControlMode=lanBlazer7000PowerControlMode, lanBlazer7000AlarmMgt=lanBlazer7000AlarmMgt, lanBlazer7000EventMode=lanBlazer7000EventMode, lanBlazer7000L2AddressBindingValid=lanBlazer7000L2AddressBindingValid, lanBlazer7000L2AddressControlVlanID=lanBlazer7000L2AddressControlVlanID, lanBlazer7000CommunityTable=lanBlazer7000CommunityTable, lanBlazer7000BridgePortForwardTransitions=lanBlazer7000BridgePortForwardTransitions, lanBlazer70003ComMapping=lanBlazer70003ComMapping, lanBlazer7000InventorySerialNumber=lanBlazer7000InventorySerialNumber, lanBlazer7000BufferEntry=lanBlazer7000BufferEntry, lanBlazer7000PortMirroringRate=lanBlazer7000PortMirroringRate, lanBlazer7000TempLowerLimit=lanBlazer7000TempLowerLimit, lanBlazer7000PortRateLimitEntry=lanBlazer7000PortRateLimitEntry, lanBlazer7000BridgePortIndex=lanBlazer7000BridgePortIndex, lanBlazer7000PortMirroringIndex=lanBlazer7000PortMirroringIndex, lanBlazer7000PortAutoNegotiationMode=lanBlazer7000PortAutoNegotiationMode, lanBlazer7000PortFlowControlTable=lanBlazer7000PortFlowControlTable, lanBlazer7000BufferSwitchPort=lanBlazer7000BufferSwitchPort, lanBlazer7000L2AddressControlTable=lanBlazer7000L2AddressControlTable, lanBlazer7000SwitchPortAutoVlanCreation=lanBlazer7000SwitchPortAutoVlanCreation, lanBlazer70003ComMappingTableIndex=lanBlazer70003ComMappingTableIndex, lanBlazer7000BufferFabricPort=lanBlazer7000BufferFabricPort, lanBlazer7000PowerSupplyOutputCapacity=lanBlazer7000PowerSupplyOutputCapacity, lanBlazer7000EventMgt=lanBlazer7000EventMgt, lanBlazer7000EventLogResID=lanBlazer7000EventLogResID, lanBlazer7000ShutdownLogTableMaxSize=lanBlazer7000ShutdownLogTableMaxSize, lanBlazer7000EventConsoleAction=lanBlazer7000EventConsoleAction, lanBlazer7000VirtualSwitchPortEntry=lanBlazer7000VirtualSwitchPortEntry, lanBlazer7000L2AddressControlStatus=lanBlazer7000L2AddressControlStatus, lanBlazer7000PortFlowControlMgt=lanBlazer7000PortFlowControlMgt, lanBlazer7000CommunityAccess=lanBlazer7000CommunityAccess, lanBlazer7000VirtualSwitchPortBridgePort=lanBlazer7000VirtualSwitchPortBridgePort, lanBlazer7000EventLogTable=lanBlazer7000EventLogTable, lanBlazer7000AgentMgrIndex=lanBlazer7000AgentMgrIndex, lanBlazer7000VlanIfIndex=lanBlazer7000VlanIfIndex, lanBlazer7000SwitchPortConvertToStatic=lanBlazer7000SwitchPortConvertToStatic, lanBlazer7000PowerSupplyInputStatus=lanBlazer7000PowerSupplyInputStatus, lanBlazer7000ChassisGen=lanBlazer7000ChassisGen, lanBlazer7000PortSpeedMode=lanBlazer7000PortSpeedMode, lanBlazer7000SwitchPortHuntGroup=lanBlazer7000SwitchPortHuntGroup, odsLANBlazerMibs=odsLANBlazerMibs, lanBlazer7000EventLogMgt=lanBlazer7000EventLogMgt, lanBlazer7000PortMirroringEntry=lanBlazer7000PortMirroringEntry, lanBlazer7000PortDuplexState=lanBlazer7000PortDuplexState, lanBlazer7000L2AddrMgmt=lanBlazer7000L2AddrMgmt, lanBlazer7000EventShutdownLogEventIndex=lanBlazer7000EventShutdownLogEventIndex, lanBlazer7000SwitchPortVlanExchange=lanBlazer7000SwitchPortVlanExchange, lanBlazer7000BridgePortState=lanBlazer7000BridgePortState, lanBlazer7000PortDuplexMode=lanBlazer7000PortDuplexMode, lanBlazer7000EventShutdownLogTime=lanBlazer7000EventShutdownLogTime, lanBlazer7000EventLog=lanBlazer7000EventLog, lanBlazer7000BridgeStpBridgeMaxAge=lanBlazer7000BridgeStpBridgeMaxAge, lanBlazer7000InventoryEntry=lanBlazer7000InventoryEntry, lanBlazer7000AgentWebServerURL=lanBlazer7000AgentWebServerURL, lanBlazer7000SnmpTraps=lanBlazer7000SnmpTraps, lanBlazer7000Chassis=lanBlazer7000Chassis, lanBlazer7000BridgePortDesignatedPort=lanBlazer7000BridgePortDesignatedPort, lanBlazer7000VlanLearnStatus=lanBlazer7000VlanLearnStatus, lanBlazer7000ConfigurationTrap=lanBlazer7000ConfigurationTrap, lanBlazer7000VirtualSwitchPortTable=lanBlazer7000VirtualSwitchPortTable, lanBlazer7000BufferPriorityAllocation=lanBlazer7000BufferPriorityAllocation, lanBlazer7000SwitchGen=lanBlazer7000SwitchGen, lanBlazer7000L2AddressPersistence=lanBlazer7000L2AddressPersistence, lanBlazer7000BridgeEntry=lanBlazer7000BridgeEntry, lanBlazer7000EventLogID=lanBlazer7000EventLogID, lanBlazer7000BridgeStpMaxAge=lanBlazer7000BridgeStpMaxAge, lanBlazer7000InventoryModelNumber=lanBlazer7000InventoryModelNumber, lanBlazer7000CommunityTrapReceiver=lanBlazer7000CommunityTrapReceiver, lanBlazer7000Modules=lanBlazer7000Modules, lanBlazer7000Vlan3ComMappingVlanID=lanBlazer7000Vlan3ComMappingVlanID, lanBlazer7000EventTrapEpochTime=lanBlazer7000EventTrapEpochTime, lanBlazer7000InventoryTable=lanBlazer7000InventoryTable, lanBlazer7000EventTrapResType=lanBlazer7000EventTrapResType, lanBlazer7000EventLogResType=lanBlazer7000EventLogResType, lanBlazer7000L2AddrSummaryEntry=lanBlazer7000L2AddrSummaryEntry, lanBlazer7000L2AddressPriority=lanBlazer7000L2AddressPriority, lanBlazer7000SwitchPortIndex=lanBlazer7000SwitchPortIndex, odsLANBlazer=odsLANBlazer, lanBlazer7000CommunityAddressType=lanBlazer7000CommunityAddressType, lanBlazer7000SwitchPortMappingMethod=lanBlazer7000SwitchPortMappingMethod, lanBlazer7000EventTrapType=lanBlazer7000EventTrapType, lanBlazer7000PortMgt=lanBlazer7000PortMgt, lanBlazer7000ModuleEntry=lanBlazer7000ModuleEntry, lanBlazer7000EventShutdownLogType=lanBlazer7000EventShutdownLogType, lanBlazer7000ActiveAlarmLeaf=lanBlazer7000ActiveAlarmLeaf, lanBlazer7000SwitchPortSTAPMode=lanBlazer7000SwitchPortSTAPMode, lanBlazer7000VirtualSwitchPortIndex=lanBlazer7000VirtualSwitchPortIndex, lanBlazer7000ShutdownLogAcknowledged=lanBlazer7000ShutdownLogAcknowledged, lanBlazer7000BufferIndex=lanBlazer7000BufferIndex, lanBlazer7000L2AddressCopy=lanBlazer7000L2AddressCopy, lanBlazer7000EventTrapDescr=lanBlazer7000EventTrapDescr, lanBlazer7000BridgePortEnable=lanBlazer7000BridgePortEnable, lanBlazer7000TempEntry=lanBlazer7000TempEntry, lanBlazer7000PortFlowControlEntry=lanBlazer7000PortFlowControlEntry, lanBlazer7000BufferMgt=lanBlazer7000BufferMgt, ResourceType=ResourceType, lanBlazer7000EventTrapTime=lanBlazer7000EventTrapTime, lanBlazer7000L2AddressChangeWraps=lanBlazer7000L2AddressChangeWraps, lanBlazer7000VlanMappings=lanBlazer7000VlanMappings, lanBlazer7000VlanID=lanBlazer7000VlanID, lanBlazer7000PowerControlEntry=lanBlazer7000PowerControlEntry, lanBlazer7000BridgeMgmt=lanBlazer7000BridgeMgmt, lanBlazer7000ActiveAlarmName=lanBlazer7000ActiveAlarmName, lanBlazer7000VlanStatus=lanBlazer7000VlanStatus, lanBlazer7000VirtualSwitchPortStatus=lanBlazer7000VirtualSwitchPortStatus, lanBlazer7000PortPacePriorityEntry=lanBlazer7000PortPacePriorityEntry, lanBlazer7000PortBaseType=lanBlazer7000PortBaseType, lanBlazer7000ActiveAlarmResType=lanBlazer7000ActiveAlarmResType, lanBlazer7000VirtualPorts=lanBlazer7000VirtualPorts, EventCategory=EventCategory, EventValueType=EventValueType, lanBlazer7000ModuleIndex=lanBlazer7000ModuleIndex, lanBlazer7000InventoryManufactureInfo=lanBlazer7000InventoryManufactureInfo, lanBlazer7000EventShutdownLogTable=lanBlazer7000EventShutdownLogTable, lanBlazer7000EventTrapResLeaf=lanBlazer7000EventTrapResLeaf, lanBlazer7000PowerSupplyType=lanBlazer7000PowerSupplyType, lanBlazer7000ChassisType=lanBlazer7000ChassisType, lanBlazer7000HuntGroupNumberOfPorts=lanBlazer7000HuntGroupNumberOfPorts, lanBlazer7000EventLogEventIndex=lanBlazer7000EventLogEventIndex, lanBlazer7000PowerSupplyIndex=lanBlazer7000PowerSupplyIndex, lanBlazer7000BufferHighOverflowDrops=lanBlazer7000BufferHighOverflowDrops, lanBlazer7000PowerSupplyStatus=lanBlazer7000PowerSupplyStatus, lanBlazer7000BufferFabricPortDirection=lanBlazer7000BufferFabricPortDirection, lanBlazer7000SwitchPortLearningMode=lanBlazer7000SwitchPortLearningMode, lanBlazer7000EventLogSeverity=lanBlazer7000EventLogSeverity, lanBlazer7000EventTrapAction=lanBlazer7000EventTrapAction, lanBlazer7000SwitchAgingTime=lanBlazer7000SwitchAgingTime, lanBlazer7000TempUpperWarning=lanBlazer7000TempUpperWarning, lanBlazer7000L2AddressChangeMaxEntries=lanBlazer7000L2AddressChangeMaxEntries, lanBlazer7000LogWraps=lanBlazer7000LogWraps, lanBlazer7000BridgeStpHelloTime=lanBlazer7000BridgeStpHelloTime, lanBlazer7000EventLogDTM=lanBlazer7000EventLogDTM, lanBlazer7000PortIndex=lanBlazer7000PortIndex, lanBlazer7000PortRateLimitRate=lanBlazer7000PortRateLimitRate, lanBlazer7000PortType=lanBlazer7000PortType, lanBlazer7000VlanEntry=lanBlazer7000VlanEntry, lanBlazer7000BridgePortDesignatedRoot=lanBlazer7000BridgePortDesignatedRoot, lanBlazer7000EventShutdownLog=lanBlazer7000EventShutdownLog, lanBlazer7000PortMirroringMirrorPort=lanBlazer7000PortMirroringMirrorPort, lanBlazer7000VlanExchangeUpdateTimeStamp=lanBlazer7000VlanExchangeUpdateTimeStamp, lanBlazer7000PortSpeedState=lanBlazer7000PortSpeedState, lanBlazer7000BridgePortEntry=lanBlazer7000BridgePortEntry, lanBlazer7000PowerTrap=lanBlazer7000PowerTrap, lanBlazer7000Ports=lanBlazer7000Ports, lanBlazer7000AlarmGeneralActiveEntries=lanBlazer7000AlarmGeneralActiveEntries, lanBlazer7000AlarmGeneralTimeStamp=lanBlazer7000AlarmGeneralTimeStamp, ResourceId=ResourceId, lanBlazer7000Agent=lanBlazer7000Agent, lanBlazer7000EventTrapSeverity=lanBlazer7000EventTrapSeverity, lanBlazer7000EventTrapMgmt=lanBlazer7000EventTrapMgmt, lanBlazer7000L2AddressTable=lanBlazer7000L2AddressTable, lanBlazer7000HuntGroupStatus=lanBlazer7000HuntGroupStatus, lanBlazer7000EventLogAction=lanBlazer7000EventLogAction, lanBlazer7000VlanExchangeConfigRevNum=lanBlazer7000VlanExchangeConfigRevNum, lanBlazer7000BridgeStpDesignatedRoot=lanBlazer7000BridgeStpDesignatedRoot, lanBlazer7000AgentWeb=lanBlazer7000AgentWeb, lanBlazer7000SwitchPortTable=lanBlazer7000SwitchPortTable, RowStatus=RowStatus, lanBlazer7000BufferLowStaleDrops=lanBlazer7000BufferLowStaleDrops, lanBlazer7000PortCategoryEntry=lanBlazer7000PortCategoryEntry, lanBlazer7000ModuleBaseType=lanBlazer7000ModuleBaseType, lanBlazer7000SwitchPortVlanBindingMethod=lanBlazer7000SwitchPortVlanBindingMethod, lanBlazer7000HuntGroupIndex=lanBlazer7000HuntGroupIndex, lanBlazer7000PortAutoNegotiationDuplexAdvertisement=lanBlazer7000PortAutoNegotiationDuplexAdvertisement, lanBlazer7000L2AddressControlMacAddress=lanBlazer7000L2AddressControlMacAddress, lanBlazer7000SwitchPortMirrorMode=lanBlazer7000SwitchPortMirrorMode, lanBlazer7000L2AddressTableIndex=lanBlazer7000L2AddressTableIndex, MacAddress=MacAddress, lanBlazer7000EventShutdownLogID=lanBlazer7000EventShutdownLogID, lanBlazer7000PortRateLimitBurstSize=lanBlazer7000PortRateLimitBurstSize, lanBlazer7000PortDuplexMgt=lanBlazer7000PortDuplexMgt, lanBlazer7000PortRateLimitMgt=lanBlazer7000PortRateLimitMgt, lanBlazer7000ModuleSlotWidth=lanBlazer7000ModuleSlotWidth, lanBlazer7000PowerSupplies=lanBlazer7000PowerSupplies, lanBlazer7000VlanTable=lanBlazer7000VlanTable)
mibBuilder.exportSymbols("ODSLANBlazer7000-MIB", lanBlazer7000TempIndex=lanBlazer7000TempIndex, lanBlazer7000PortTable=lanBlazer7000PortTable, DisplayString=DisplayString, lanBlazer7000EventLogValue=lanBlazer7000EventLogValue, lanBlazer7000L2AddrControlMgt=lanBlazer7000L2AddrControlMgt, lanBlazer7000BufferPriorityServicing=lanBlazer7000BufferPriorityServicing, lanBlazer7000PortAutoNegotiationTable=lanBlazer7000PortAutoNegotiationTable, lanBlazer7000CommunityIndex=lanBlazer7000CommunityIndex, lanBlazer7000SwitchPortVlanID=lanBlazer7000SwitchPortVlanID, lanBlazer7000BridgeStpForwardDelay=lanBlazer7000BridgeStpForwardDelay, lanBlazer7000SwitchSTPConfig=lanBlazer7000SwitchSTPConfig, lanBlazer7000BridgePortPathCost=lanBlazer7000BridgePortPathCost, lanBlazer7000PowerSystems=lanBlazer7000PowerSystems, ods=ods, lanBlazer7000PowerMgmtCtl=lanBlazer7000PowerMgmtCtl, lanBlazer7000VlanAFTIndex=lanBlazer7000VlanAFTIndex, lanBlazer7000Temperature=lanBlazer7000Temperature, lanBlazer7000BridgePortDesignatedBridge=lanBlazer7000BridgePortDesignatedBridge, lanBlazer7000PowerControlPriority=lanBlazer7000PowerControlPriority, lanBlazer7000VlanAutoIncrementHTSize=lanBlazer7000VlanAutoIncrementHTSize, odsTPS=odsTPS, lanBlazer7000EventShutdownLogValueType=lanBlazer7000EventShutdownLogValueType, lanBlazer7000PowerCapacity=lanBlazer7000PowerCapacity, lanBlazer7000BufferLowOverflowDrops=lanBlazer7000BufferLowOverflowDrops, lanBlazer7000VlanName=lanBlazer7000VlanName, lanBlazer7000HuntGroupBasePort=lanBlazer7000HuntGroupBasePort, lanBlazer7000VirtualSwitchPortBindingType=lanBlazer7000VirtualSwitchPortBindingType, lanBlazer7000EventLogTime=lanBlazer7000EventLogTime, lanBlazer7000PortMirroringTable=lanBlazer7000PortMirroringTable, lanBlazer7000PowerMgmtGen=lanBlazer7000PowerMgmtGen, lanBlazer7000SwitchSuperAgingTime=lanBlazer7000SwitchSuperAgingTime, lanBlazer7000BridgePortTable=lanBlazer7000BridgePortTable, lanBlazer7000L2AddressChangeIndexChanged=lanBlazer7000L2AddressChangeIndexChanged, lanBlazer7000CommunityString=lanBlazer7000CommunityString, lanBlazer7000TemperatureTrap=lanBlazer7000TemperatureTrap, lanBlazer7000ModuleSlotOffset=lanBlazer7000ModuleSlotOffset, lanBlazer7000Inventory=lanBlazer7000Inventory, lanBlazer7000ModuleTable=lanBlazer7000ModuleTable, lanBlazer7000L2AddressControlPriority=lanBlazer7000L2AddressControlPriority, lanBlazer7000VlanInitialHashTableSize=lanBlazer7000VlanInitialHashTableSize, lanBlazer7000VlanMgt=lanBlazer7000VlanMgt, lanBlazer7000CommunityEntry=lanBlazer7000CommunityEntry, lanBlazer7000L2AddrDatabaseMgt=lanBlazer7000L2AddrDatabaseMgt, lanBlazer7000L2AddressPortBinding=lanBlazer7000L2AddressPortBinding, lanBlazer7000BridgePortMgmt=lanBlazer7000BridgePortMgmt, lanBlazer7000EventShutdownLogDTM=lanBlazer7000EventShutdownLogDTM, lanBlazer7000SwitchPortEntry=lanBlazer7000SwitchPortEntry, lanBlazer7000L2AddrSummary=lanBlazer7000L2AddrSummary, lanBlazer7000BufferCongestionDrops=lanBlazer7000BufferCongestionDrops, lanBlazer7000PortMirroringMgt=lanBlazer7000PortMirroringMgt, lanBlazer7000AgentGen=lanBlazer7000AgentGen, lanBlazer7000L2AddrSummaryMgt=lanBlazer7000L2AddrSummaryMgt, lanBlazer7000EventLogType=lanBlazer7000EventLogType, lanBlazer7000PortPacePriorityMode=lanBlazer7000PortPacePriorityMode, lanBlazer7000BridgeStpTimeSinceTopologyChange=lanBlazer7000BridgeStpTimeSinceTopologyChange, lanBlazer7000PortGroupBinding=lanBlazer7000PortGroupBinding, lanBlazer7000Vlan3ComMappingTable=lanBlazer7000Vlan3ComMappingTable, lanBlazer7000BridgeTable=lanBlazer7000BridgeTable, lanBlazer7000CommunitySecurityLevel=lanBlazer7000CommunitySecurityLevel, lanBlazer7000EventTrapResID=lanBlazer7000EventTrapResID, lanBlazer7000PowerControlUsed=lanBlazer7000PowerControlUsed, lanBlazer7000L2AddressStatus=lanBlazer7000L2AddressStatus, lanBlazer7000L2AddressForward=lanBlazer7000L2AddressForward, lanBlazer7000ShutdownLogMgt=lanBlazer7000ShutdownLogMgt, lanBlazer7000PortCategoryMgt=lanBlazer7000PortCategoryMgt, lanBlazer7000LogLastEntry=lanBlazer7000LogLastEntry, lanBlazer7000BridgeStpHoldTime=lanBlazer7000BridgeStpHoldTime, lanBlazer7000VirtualSwitchPortFormat=lanBlazer7000VirtualSwitchPortFormat, lanBlazer7000VlanBridgeIndex=lanBlazer7000VlanBridgeIndex, lanBlazer7000L2AddressChangeIndex=lanBlazer7000L2AddressChangeIndex, lanBlazer7000EventLogDescr=lanBlazer7000EventLogDescr, lanBlazer7000EventEntry=lanBlazer7000EventEntry, lanBlazer7000PortCategoryMode=lanBlazer7000PortCategoryMode, lanBlazer7000AgentMIBVersion=lanBlazer7000AgentMIBVersion, lanBlazer7000BridgeStpRootCost=lanBlazer7000BridgeStpRootCost, lanBlazer7000L2AddressMacAddress=lanBlazer7000L2AddressMacAddress, lanBlazer7000L2AddressChangeTable=lanBlazer7000L2AddressChangeTable, odsLANBlazer7000Mib=odsLANBlazer7000Mib, lanBlazer7000ResourceTrap=lanBlazer7000ResourceTrap, lanBlazer7000EventTable=lanBlazer7000EventTable, lanBlazer7000BridgePortSetDefault=lanBlazer7000BridgePortSetDefault, lanBlazer7000HuntGroupLoadSharing=lanBlazer7000HuntGroupLoadSharing, lanBlazer7000ActiveAlarmValueHigh=lanBlazer7000ActiveAlarmValueHigh, lanBlazer7000EventShutdownLogIndex=lanBlazer7000EventShutdownLogIndex, lanBlazer7000L2AddressControlPersistence=lanBlazer7000L2AddressControlPersistence, lanBlazer7000L2AddressChangeEntry=lanBlazer7000L2AddressChangeEntry, lanBlazer7000FanTrap=lanBlazer7000FanTrap, lanBlazer7000L2AddrSummaryTable=lanBlazer7000L2AddrSummaryTable, lanBlazer7000PortRateLimitTable=lanBlazer7000PortRateLimitTable, lanBlazer7000SwitchPortFastStart=lanBlazer7000SwitchPortFastStart, lanBlazer7000BridgeStpRootPort=lanBlazer7000BridgeStpRootPort, lanBlazer7000VlanExchange=lanBlazer7000VlanExchange, lanBlazer7000ModulePorts=lanBlazer7000ModulePorts, lanBlazer7000L2AddressIndex=lanBlazer7000L2AddressIndex, lanBlazer7000EventLogEntry=lanBlazer7000EventLogEntry, lanBlazer7000ActiveAlarmIndex=lanBlazer7000ActiveAlarmIndex, lanBlazer7000Vlans=lanBlazer7000Vlans, lanBlazer7000L2AddressChangeSummary=lanBlazer7000L2AddressChangeSummary, lanBlazer7000BridgeStatus=lanBlazer7000BridgeStatus, lanBlazer7000EventShutdownLogResLeaf=lanBlazer7000EventShutdownLogResLeaf, lanBlazer7000L2AddressControlPortBinding=lanBlazer7000L2AddressControlPortBinding, lanBlazer7000InventoryVersion=lanBlazer7000InventoryVersion, lanBlazer7000EventLogResLeaf=lanBlazer7000EventLogResLeaf, lanBlazer7000EventShutdownLogEpochTime=lanBlazer7000EventShutdownLogEpochTime, lanBlazer7000ActiveAlarmTable=lanBlazer7000ActiveAlarmTable, lanBlazer7000PortRateLimitMode=lanBlazer7000PortRateLimitMode, lanBlazer7000TempLowerWarning=lanBlazer7000TempLowerWarning, lanBlazer7000Vlan3ComMapping=lanBlazer7000Vlan3ComMapping, lanBlazer7000ActiveAlarmVariable=lanBlazer7000ActiveAlarmVariable, lanBlazer7000SwitchPortTrunkingMode=lanBlazer7000SwitchPortTrunkingMode, lanBlazer7000BridgePortPriority=lanBlazer7000BridgePortPriority, lanBlazer7000PowerSupplyTable=lanBlazer7000PowerSupplyTable, lanBlazer70003ComMappingTable=lanBlazer70003ComMappingTable, lanBlazer7000EventShutdownLogDescr=lanBlazer7000EventShutdownLogDescr, lanBlazer7000EventShutdownLogResType=lanBlazer7000EventShutdownLogResType, lanBlazer7000L2AddressControlEntry=lanBlazer7000L2AddressControlEntry, lanBlazer7000Vlan3ComMappingStatus=lanBlazer7000Vlan3ComMappingStatus, lanBlazer7000PortAutoNegotiationEntry=lanBlazer7000PortAutoNegotiationEntry, lanBlazer70003ComMappingEntry=lanBlazer70003ComMappingEntry, lanBlazer7000ChassisSlots=lanBlazer7000ChassisSlots, lanBlazer7000TempTable=lanBlazer7000TempTable, lanBlazer7000HuntGroupName=lanBlazer7000HuntGroupName, lanBlazer7000BridgeStpBridgeForwardDelay=lanBlazer7000BridgeStpBridgeForwardDelay, lanBlazer7000BufferHighStaleDrops=lanBlazer7000BufferHighStaleDrops, lanBlazer7000CommunityAddress=lanBlazer7000CommunityAddress, lanBlazer7000EventLogValueType=lanBlazer7000EventLogValueType, lanBlazer7000AgentCommunity=lanBlazer7000AgentCommunity, lanBlazer7000AlarmGeneral=lanBlazer7000AlarmGeneral, lanBlazer7000L2AddressEntry=lanBlazer7000L2AddressEntry, lanBlazer7000PortFlowControlMode=lanBlazer7000PortFlowControlMode, lanBlazer7000AgentWebServerHelpDirectory=lanBlazer7000AgentWebServerHelpDirectory, lanBlazer7000L2AddrChangeMgt=lanBlazer7000L2AddrChangeMgt, lanBlazer7000LogTableMaxSize=lanBlazer7000LogTableMaxSize, lanBlazer7000PowerControlTable=lanBlazer7000PowerControlTable, lanBlazer7000InventoryScratchPad=lanBlazer7000InventoryScratchPad, lanBlazer7000EventTrapValue=lanBlazer7000EventTrapValue, lanBlazer7000EventShutdownLogEntry=lanBlazer7000EventShutdownLogEntry, lanBlazer7000EventTrapValueType=lanBlazer7000EventTrapValueType, lanBlazer7000BufferPriorityThreshold=lanBlazer7000BufferPriorityThreshold, BridgeId=BridgeId, lanBlazer7000L2AddressChangeWrapCount=lanBlazer7000L2AddressChangeWrapCount, lanBlazer7000PortMode=lanBlazer7000PortMode)
