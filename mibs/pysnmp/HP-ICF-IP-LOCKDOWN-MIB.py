#
# PySNMP MIB module HP-ICF-IP-LOCKDOWN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-IP-LOCKDOWN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:21:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, Unsigned32, IpAddress, ObjectIdentity, MibIdentifier, Counter32, Integer32, Gauge32, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "Unsigned32", "IpAddress", "ObjectIdentity", "MibIdentifier", "Counter32", "Integer32", "Gauge32", "NotificationType", "iso")
DisplayString, TextualConvention, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "MacAddress")
hpicfIpLockdown = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39))
hpicfIpLockdown.setRevisions(('2008-03-16 05:24', '2006-06-08 23:47',))
if mibBuilder.loadTexts: hpicfIpLockdown.setLastUpdated('200803160524Z')
if mibBuilder.loadTexts: hpicfIpLockdown.setOrganization('HP Networking')
hpicfIpLockTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0))
hpicfIpLockTrapsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1))
hpicfIpLockOutOfResourceSource = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhcpsnooping", 1), ("iplockdown", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockOutOfResourceSource.setStatus('current')
hpicfIpLockOutOfResources = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 2)).setObjects(("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrPort"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrMacAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrIpAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrVlan"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockOutOfResourceSource"))
if mibBuilder.loadTexts: hpicfIpLockOutOfResources.setStatus('current')
hpicfIpLockErrantNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 3)).setObjects(("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyCount"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyPort"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifySrcIpType"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifySrcIpAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyDstIpType"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyDstIpAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyMacAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyPktCount"))
if mibBuilder.loadTexts: hpicfIpLockErrantNotify.setStatus('current')
hpicfIpLockErrantNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4))
hpicfIpLockNotifyCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4, 1), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockNotifyCount.setStatus('current')
hpicfIpLockNotifyPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4, 2), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockNotifyPort.setStatus('current')
hpicfIpLockNotifySrcIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockNotifySrcIpType.setStatus('current')
hpicfIpLockNotifySrcIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4, 4), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockNotifySrcIpAddress.setStatus('current')
hpicfIpLockNotifyDstIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4, 5), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockNotifyDstIpType.setStatus('current')
hpicfIpLockNotifyDstIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4, 6), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockNotifyDstIpAddress.setStatus('current')
hpicfIpLockNotifyMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4, 7), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockNotifyMacAddress.setStatus('current')
hpicfIpLockNotifyPktCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 0, 1, 4, 8), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfIpLockNotifyPktCount.setStatus('current')
hpicfIpLockObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1))
hpicfIpLockConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 1))
hpicfIpLockEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfIpLockEnable.setStatus('current')
hpicfIpLockPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 1, 2), )
if mibBuilder.loadTexts: hpicfIpLockPortTable.setStatus('current')
hpicfIpLockTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 1, 3), Bits().clone(namedValues=NamedValues(("outOfResource", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfIpLockTrapCntl.setStatus('obsolete')
hpicfIpLockTrapCtrl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfIpLockTrapCtrl.setStatus('current')
hpicfIpLockPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfIpLockPortEntry.setStatus('current')
hpicfIpLockPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfIpLockPortEnable.setStatus('current')
hpicfIpLockStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2))
hpicfIpLockPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 1), )
if mibBuilder.loadTexts: hpicfIpLockPortStatusTable.setStatus('current')
hpicfIpLockPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfIpLockPortStatusEntry.setStatus('current')
hpicfIpLockPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("active", 0), ("noDsnoop", 1), ("trustedPort", 2), ("noSnoopingVlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfIpLockPortOperStatus.setStatus('current')
hpicfIpLockAddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 2), )
if mibBuilder.loadTexts: hpicfIpLockAddrTable.setStatus('current')
hpicfIpLockAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 2, 1), ).setIndexNames((0, "HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrPort"), (0, "HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrType"), (0, "HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrIpAddress"))
if mibBuilder.loadTexts: hpicfIpLockAddrEntry.setStatus('current')
hpicfIpLockAddrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfIpLockAddrPort.setStatus('current')
hpicfIpLockAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfIpLockAddrType.setStatus('current')
hpicfIpLockAddrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfIpLockAddrIpAddress.setStatus('current')
hpicfIpLockAddrVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 2, 1, 4), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfIpLockAddrVlan.setStatus('current')
hpicfIpLockAddrMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 2, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfIpLockAddrMacAddress.setStatus('current')
hpicfIpLockResourceAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 1, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfIpLockResourceAvailable.setStatus('current')
hpicfIpLockConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2))
hpicfIpLockGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2, 1))
hpicfIpLockBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2, 1, 1)).setObjects(("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockEnable"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockPortEnable"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockPortOperStatus"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrPort"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrType"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrIpAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrVlan"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockAddrMacAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockResourceAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpLockBaseGroup = hpicfIpLockBaseGroup.setStatus('current')
hpicfIpLockTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2, 1, 2)).setObjects(("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockOutOfResources"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockErrantNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpLockTrapsGroup = hpicfIpLockTrapsGroup.setStatus('current')
hpicfIpLockTrapObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2, 1, 3)).setObjects(("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockOutOfResourceSource"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyCount"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyPort"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifySrcIpType"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifySrcIpAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyDstIpType"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyDstIpAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyMacAddress"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockNotifyPktCount"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockTrapCtrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpLockTrapObjectsGroup = hpicfIpLockTrapObjectsGroup.setStatus('current')
hpicfIpLockObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2, 1, 4)).setObjects(("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockTrapCntl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpLockObsoleteGroup = hpicfIpLockObsoleteGroup.setStatus('obsolete')
hpicfIpLockCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2, 2))
hpicfIpLockCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2, 2, 1)).setObjects(("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockBaseGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpLockCompliance = hpicfIpLockCompliance.setStatus('current')
hpicfIpLockTrapCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39, 2, 2, 2)).setObjects(("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockTrapObjectsGroup"), ("HP-ICF-IP-LOCKDOWN-MIB", "hpicfIpLockTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpLockTrapCompliance = hpicfIpLockTrapCompliance.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-IP-LOCKDOWN-MIB", hpicfIpLockdown=hpicfIpLockdown, hpicfIpLockStatus=hpicfIpLockStatus, hpicfIpLockNotifyMacAddress=hpicfIpLockNotifyMacAddress, hpicfIpLockNotifySrcIpType=hpicfIpLockNotifySrcIpType, hpicfIpLockObsoleteGroup=hpicfIpLockObsoleteGroup, hpicfIpLockNotifyDstIpAddress=hpicfIpLockNotifyDstIpAddress, hpicfIpLockTrapCntl=hpicfIpLockTrapCntl, hpicfIpLockGroups=hpicfIpLockGroups, hpicfIpLockObjects=hpicfIpLockObjects, hpicfIpLockErrantNotify=hpicfIpLockErrantNotify, hpicfIpLockConfig=hpicfIpLockConfig, hpicfIpLockOutOfResources=hpicfIpLockOutOfResources, hpicfIpLockErrantNotifyObjects=hpicfIpLockErrantNotifyObjects, hpicfIpLockNotifyCount=hpicfIpLockNotifyCount, hpicfIpLockAddrMacAddress=hpicfIpLockAddrMacAddress, hpicfIpLockTrapCompliance=hpicfIpLockTrapCompliance, hpicfIpLockTrapsObjects=hpicfIpLockTrapsObjects, hpicfIpLockCompliance=hpicfIpLockCompliance, hpicfIpLockResourceAvailable=hpicfIpLockResourceAvailable, hpicfIpLockAddrIpAddress=hpicfIpLockAddrIpAddress, hpicfIpLockAddrEntry=hpicfIpLockAddrEntry, hpicfIpLockNotifyPktCount=hpicfIpLockNotifyPktCount, hpicfIpLockEnable=hpicfIpLockEnable, hpicfIpLockTrapObjectsGroup=hpicfIpLockTrapObjectsGroup, hpicfIpLockAddrPort=hpicfIpLockAddrPort, hpicfIpLockBaseGroup=hpicfIpLockBaseGroup, hpicfIpLockTrapCtrl=hpicfIpLockTrapCtrl, PYSNMP_MODULE_ID=hpicfIpLockdown, hpicfIpLockNotifyDstIpType=hpicfIpLockNotifyDstIpType, hpicfIpLockPortStatusTable=hpicfIpLockPortStatusTable, hpicfIpLockPortOperStatus=hpicfIpLockPortOperStatus, hpicfIpLockOutOfResourceSource=hpicfIpLockOutOfResourceSource, hpicfIpLockNotifyPort=hpicfIpLockNotifyPort, hpicfIpLockAddrVlan=hpicfIpLockAddrVlan, hpicfIpLockAddrType=hpicfIpLockAddrType, hpicfIpLockNotifySrcIpAddress=hpicfIpLockNotifySrcIpAddress, hpicfIpLockCompliances=hpicfIpLockCompliances, hpicfIpLockPortTable=hpicfIpLockPortTable, hpicfIpLockTrapsGroup=hpicfIpLockTrapsGroup, hpicfIpLockAddrTable=hpicfIpLockAddrTable, hpicfIpLockConformance=hpicfIpLockConformance, hpicfIpLockPortEnable=hpicfIpLockPortEnable, hpicfIpLockPortStatusEntry=hpicfIpLockPortStatusEntry, hpicfIpLockTraps=hpicfIpLockTraps, hpicfIpLockPortEntry=hpicfIpLockPortEntry)
