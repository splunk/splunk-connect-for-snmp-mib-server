#
# PySNMP MIB module CISCO-TCPOFFLOAD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-TCPOFFLOAD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:57:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
cipCardEntryIndex, cipCardDtrBrdIndex, cipCardSubChannelIndex = mibBuilder.importSymbols("CISCO-CHANNEL-MIB", "cipCardEntryIndex", "cipCardDtrBrdIndex", "cipCardSubChannelIndex")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, ModuleIdentity, Gauge32, TimeTicks, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, NotificationType, IpAddress, Bits, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "Gauge32", "TimeTicks", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "NotificationType", "IpAddress", "Bits", "ObjectIdentity", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC-v1", "TruthValue", "DisplayString", "RowStatus")
ciscoTcpOffloadMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 31))
tcpOffloadObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 31, 1))
cipCardOffloadConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1))
ciscoTcpOffloadMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 31, 2))
ciscoTcpOffloadMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 31, 2, 1))
ciscoTcpOffloadMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 31, 2, 2))
cipCardOffloadConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1), )
if mibBuilder.loadTexts: cipCardOffloadConfigTable.setStatus('mandatory')
cipCardOffloadConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-CHANNEL-MIB", "cipCardEntryIndex"), (0, "CISCO-CHANNEL-MIB", "cipCardDtrBrdIndex"), (0, "CISCO-CHANNEL-MIB", "cipCardSubChannelIndex"))
if mibBuilder.loadTexts: cipCardOffloadConfigEntry.setStatus('mandatory')
cipCardOffloadConfigPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigPath.setStatus('mandatory')
cipCardOffloadConfigDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigDevice.setStatus('mandatory')
cipCardOffloadConfigIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigIpAddr.setStatus('mandatory')
cipCardOffloadConfigHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigHostName.setStatus('mandatory')
cipCardOffloadConfigRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigRouterName.setStatus('mandatory')
cipCardOffloadConfigLinkHostAppl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigLinkHostAppl.setStatus('mandatory')
cipCardOffloadConfigLinkRouterAppl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigLinkRouterAppl.setStatus('mandatory')
cipCardOffloadConfigAPIHostAppl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigAPIHostAppl.setStatus('mandatory')
cipCardOffloadConfigAPIRouterAppl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigAPIRouterAppl.setStatus('mandatory')
cipCardOffloadConfigBroadcastEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigBroadcastEnable.setStatus('mandatory')
cipCardOffloadConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 31, 1, 1, 1, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cipCardOffloadConfigRowStatus.setStatus('mandatory')
ciscoTcpOffloadGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 31, 2, 2, 1))
ciscoTcpOffloadMibCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 31, 2, 1, 1))
mibBuilder.exportSymbols("CISCO-TCPOFFLOAD-MIB", tcpOffloadObjects=tcpOffloadObjects, cipCardOffloadConfig=cipCardOffloadConfig, cipCardOffloadConfigLinkHostAppl=cipCardOffloadConfigLinkHostAppl, cipCardOffloadConfigDevice=cipCardOffloadConfigDevice, cipCardOffloadConfigEntry=cipCardOffloadConfigEntry, cipCardOffloadConfigRouterName=cipCardOffloadConfigRouterName, cipCardOffloadConfigHostName=cipCardOffloadConfigHostName, ciscoTcpOffloadMibCompliances=ciscoTcpOffloadMibCompliances, ciscoTcpOffloadMibCompliance=ciscoTcpOffloadMibCompliance, ciscoTcpOffloadGroup=ciscoTcpOffloadGroup, cipCardOffloadConfigIpAddr=cipCardOffloadConfigIpAddr, cipCardOffloadConfigLinkRouterAppl=cipCardOffloadConfigLinkRouterAppl, cipCardOffloadConfigRowStatus=cipCardOffloadConfigRowStatus, cipCardOffloadConfigAPIHostAppl=cipCardOffloadConfigAPIHostAppl, ciscoTcpOffloadMIB=ciscoTcpOffloadMIB, ciscoTcpOffloadMibConformance=ciscoTcpOffloadMibConformance, cipCardOffloadConfigTable=cipCardOffloadConfigTable, ciscoTcpOffloadMibGroups=ciscoTcpOffloadMibGroups, cipCardOffloadConfigPath=cipCardOffloadConfigPath, cipCardOffloadConfigBroadcastEnable=cipCardOffloadConfigBroadcastEnable, cipCardOffloadConfigAPIRouterAppl=cipCardOffloadConfigAPIRouterAppl)
