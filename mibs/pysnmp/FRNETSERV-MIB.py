#
# PySNMP MIB module FRNETSERV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FRNETSERV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:02:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Counter64, Gauge32, ObjectIdentity, IpAddress, NotificationType, transmission, iso, TimeTicks, ModuleIdentity, Counter32, Bits, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "Gauge32", "ObjectIdentity", "IpAddress", "NotificationType", "transmission", "iso", "TimeTicks", "ModuleIdentity", "Counter32", "Bits", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TimeStamp, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "DisplayString", "TextualConvention")
frnetservMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 44))
frnetservMIB.setRevisions(('2000-09-28 00:00', '1993-11-16 12:00',))
if mibBuilder.loadTexts: frnetservMIB.setLastUpdated('200009280000Z')
if mibBuilder.loadTexts: frnetservMIB.setOrganization('IETF Frame Relay Service MIB Working Group')
frnetservObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 44, 1))
frnetservTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 44, 2))
frnetservTrapsPrefix = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 44, 2, 0))
frLportTable = MibTable((1, 3, 6, 1, 2, 1, 10, 44, 1, 1), )
if mibBuilder.loadTexts: frLportTable.setStatus('current')
frLportEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: frLportEntry.setStatus('current')
frLportNumPlan = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("e164", 2), ("x121", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frLportNumPlan.setStatus('current')
frLportContact = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frLportContact.setStatus('current')
frLportLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frLportLocation.setStatus('current')
frLportType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uni", 1), ("nni", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frLportType.setStatus('current')
frLportAddrDLCILen = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("twoOctets10Bits", 1), ("threeOctets10Bits", 2), ("threeOctets16Bits", 3), ("fourOctets17Bits", 4), ("fourOctets23Bits", 5)))).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: frLportAddrDLCILen.setStatus('current')
frLportVCSigProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("lmi", 2), ("ansiT1617D", 3), ("ansiT1617B", 4), ("ccittQ933A", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frLportVCSigProtocol.setStatus('current')
frLportVCSigPointer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 7), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frLportVCSigPointer.setStatus('deprecated')
frLportDLCIIndexValue = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4194303))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frLportDLCIIndexValue.setStatus('current')
frLportTypeAdmin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uni", 1), ("nni", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLportTypeAdmin.setStatus('current')
frLportVCSigProtocolAdmin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("lmi", 2), ("ansiT1617D", 3), ("ansiT1617B", 4), ("ccittQ933A", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLportVCSigProtocolAdmin.setStatus('current')
frLportFragControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLportFragControl.setStatus('current')
frLportFragSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setUnits('Octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frLportFragSize.setStatus('current')
frMgtVCSigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 44, 1, 2), )
if mibBuilder.loadTexts: frMgtVCSigTable.setStatus('current')
frMgtVCSigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: frMgtVCSigEntry.setStatus('current')
frMgtVCSigProced = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("u2nnet", 1), ("bidirect", 2), ("u2nuser", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigProced.setStatus('current')
frMgtVCSigUserN391 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setUnits('Polls').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigUserN391.setStatus('current')
frMgtVCSigUserN392 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigUserN392.setStatus('current')
frMgtVCSigUserN393 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigUserN393.setStatus('current')
frMgtVCSigUserT391 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigUserT391.setStatus('current')
frMgtVCSigNetN392 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigNetN392.setStatus('current')
frMgtVCSigNetN393 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigNetN393.setStatus('current')
frMgtVCSigNetT392 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(15)).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigNetT392.setStatus('current')
frMgtVCSigNetnN4 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 5))).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigNetnN4.setStatus('current')
frMgtVCSigNetnT3 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(20)).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigNetnT3.setStatus('current')
frMgtVCSigUserLinkRelErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 11), Counter32()).setUnits('Errors').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigUserLinkRelErrors.setStatus('current')
frMgtVCSigUserProtErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 12), Counter32()).setUnits('Errors').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigUserProtErrors.setStatus('current')
frMgtVCSigUserChanInactive = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 13), Counter32()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigUserChanInactive.setStatus('current')
frMgtVCSigNetLinkRelErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 14), Counter32()).setUnits('Errors').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigNetLinkRelErrors.setStatus('current')
frMgtVCSigNetProtErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 15), Counter32()).setUnits('Errors').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigNetProtErrors.setStatus('current')
frMgtVCSigNetChanInactive = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 16), Counter32()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: frMgtVCSigNetChanInactive.setStatus('current')
frMgtVCSigProcedAdmin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("u2nnet", 1), ("bidirect", 2), ("u2nuser", 3))).clone('u2nnet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigProcedAdmin.setStatus('current')
frMgtVCSigUserN391Admin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setUnits('Polls').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigUserN391Admin.setStatus('current')
frMgtVCSigUserN392Admin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('Events').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigUserN392Admin.setStatus('current')
frMgtVCSigUserN393Admin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('Events').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigUserN393Admin.setStatus('current')
frMgtVCSigUserT391Admin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigUserT391Admin.setStatus('current')
frMgtVCSigNetN392Admin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('Events').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigNetN392Admin.setStatus('current')
frMgtVCSigNetN393Admin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('Events').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigNetN393Admin.setStatus('current')
frMgtVCSigNetT392Admin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigNetT392Admin.setStatus('current')
frMgtVCSigNetnT3Admin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), ))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMgtVCSigNetnT3Admin.setStatus('current')
frPVCEndptTable = MibTable((1, 3, 6, 1, 2, 1, 10, 44, 1, 3), )
if mibBuilder.loadTexts: frPVCEndptTable.setStatus('current')
frPVCEndptEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "FRNETSERV-MIB", "frPVCEndptDLCIIndex"))
if mibBuilder.loadTexts: frPVCEndptEntry.setStatus('current')
frPVCEndptDLCIIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4194303)))
if mibBuilder.loadTexts: frPVCEndptDLCIIndex.setStatus('current')
frPVCEndptInMaxFrameSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(1600)).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptInMaxFrameSize.setStatus('current')
frPVCEndptInBc = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptInBc.setStatus('current')
frPVCEndptInBe = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptInBe.setStatus('current')
frPVCEndptInCIR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bits per Second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptInCIR.setStatus('current')
frPVCEndptOutMaxFrameSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(1600)).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptOutMaxFrameSize.setStatus('current')
frPVCEndptOutBc = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptOutBc.setStatus('current')
frPVCEndptOutBe = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptOutBe.setStatus('current')
frPVCEndptOutCIR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bits per Second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptOutCIR.setStatus('current')
frPVCEndptConnectIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptConnectIdentifier.setStatus('current')
frPVCEndptRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCEndptRowStatus.setStatus('current')
frPVCEndptRcvdSigStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deleted", 1), ("active", 2), ("inactive", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptRcvdSigStatus.setStatus('current')
frPVCEndptInFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 13), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInFrames.setStatus('current')
frPVCEndptOutFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 14), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptOutFrames.setStatus('current')
frPVCEndptInDEFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 15), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInDEFrames.setStatus('current')
frPVCEndptInExcessFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 16), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInExcessFrames.setStatus('current')
frPVCEndptOutExcessFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 17), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptOutExcessFrames.setStatus('current')
frPVCEndptInDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 18), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInDiscards.setStatus('current')
frPVCEndptInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 19), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInOctets.setStatus('current')
frPVCEndptOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 20), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptOutOctets.setStatus('current')
frPVCEndptInDiscardsDESet = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 21), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInDiscardsDESet.setStatus('current')
frPVCEndptInFramesFECNSet = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 22), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInFramesFECNSet.setStatus('current')
frPVCEndptOutFramesFECNSet = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 23), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptOutFramesFECNSet.setStatus('current')
frPVCEndptInFramesBECNSet = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 24), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInFramesBECNSet.setStatus('current')
frPVCEndptOutFramesBECNSet = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 25), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptOutFramesBECNSet.setStatus('current')
frPVCEndptInCongDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 26), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInCongDiscards.setStatus('current')
frPVCEndptInDECongDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 27), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptInDECongDiscards.setStatus('current')
frPVCEndptOutCongDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 28), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptOutCongDiscards.setStatus('current')
frPVCEndptOutDECongDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 29), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptOutDECongDiscards.setStatus('current')
frPVCEndptOutDEFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 30), Counter32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptOutDEFrames.setStatus('current')
frPVCEndptAtmIwfConnIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 3, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCEndptAtmIwfConnIndex.setStatus('current')
frPVCConnectIndexValue = MibScalar((1, 3, 6, 1, 2, 1, 10, 44, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCConnectIndexValue.setStatus('current')
frPVCConnectTable = MibTable((1, 3, 6, 1, 2, 1, 10, 44, 1, 5), )
if mibBuilder.loadTexts: frPVCConnectTable.setStatus('current')
frPVCConnectEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1), ).setIndexNames((0, "FRNETSERV-MIB", "frPVCConnectIndex"), (0, "FRNETSERV-MIB", "frPVCConnectLowIfIndex"), (0, "FRNETSERV-MIB", "frPVCConnectLowDLCIIndex"), (0, "FRNETSERV-MIB", "frPVCConnectHighIfIndex"), (0, "FRNETSERV-MIB", "frPVCConnectHighDLCIIndex"))
if mibBuilder.loadTexts: frPVCConnectEntry.setStatus('current')
frPVCConnectIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: frPVCConnectIndex.setStatus('current')
frPVCConnectLowIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: frPVCConnectLowIfIndex.setStatus('current')
frPVCConnectLowDLCIIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4194303)))
if mibBuilder.loadTexts: frPVCConnectLowDLCIIndex.setStatus('current')
frPVCConnectHighIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 4), InterfaceIndex())
if mibBuilder.loadTexts: frPVCConnectHighIfIndex.setStatus('current')
frPVCConnectHighDLCIIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4194303)))
if mibBuilder.loadTexts: frPVCConnectHighDLCIIndex.setStatus('current')
frPVCConnectAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("testing", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCConnectAdminStatus.setStatus('current')
frPVCConnectL2hOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("testing", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCConnectL2hOperStatus.setStatus('current')
frPVCConnectH2lOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("testing", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCConnectH2lOperStatus.setStatus('current')
frPVCConnectL2hLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCConnectL2hLastChange.setStatus('current')
frPVCConnectH2lLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frPVCConnectH2lLastChange.setStatus('current')
frPVCConnectRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCConnectRowStatus.setStatus('current')
frPVCConnectUserName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 12), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCConnectUserName.setStatus('current')
frPVCConnectProviderName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 5, 1, 13), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frPVCConnectProviderName.setStatus('current')
frAccountPVCTable = MibTable((1, 3, 6, 1, 2, 1, 10, 44, 1, 6), )
if mibBuilder.loadTexts: frAccountPVCTable.setStatus('current')
frAccountPVCEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 44, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "FRNETSERV-MIB", "frAccountPVCDLCIIndex"))
if mibBuilder.loadTexts: frAccountPVCEntry.setStatus('current')
frAccountPVCDLCIIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4194303)))
if mibBuilder.loadTexts: frAccountPVCDLCIIndex.setStatus('current')
frAccountPVCSegmentSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 6, 1, 2), Integer32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: frAccountPVCSegmentSize.setStatus('current')
frAccountPVCInSegments = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 6, 1, 3), Counter32()).setUnits('Segments').setMaxAccess("readonly")
if mibBuilder.loadTexts: frAccountPVCInSegments.setStatus('current')
frAccountPVCOutSegments = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 6, 1, 4), Counter32()).setUnits('Segments').setMaxAccess("readonly")
if mibBuilder.loadTexts: frAccountPVCOutSegments.setStatus('current')
frAccountLportTable = MibTable((1, 3, 6, 1, 2, 1, 10, 44, 1, 7), )
if mibBuilder.loadTexts: frAccountLportTable.setStatus('current')
frAccountLportEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 44, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: frAccountLportEntry.setStatus('current')
frAccountLportSegmentSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 7, 1, 1), Integer32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: frAccountLportSegmentSize.setStatus('current')
frAccountLportInSegments = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 7, 1, 2), Counter32()).setUnits('Segments').setMaxAccess("readonly")
if mibBuilder.loadTexts: frAccountLportInSegments.setStatus('current')
frAccountLportOutSegments = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 44, 1, 7, 1, 3), Counter32()).setUnits('Segments').setMaxAccess("readonly")
if mibBuilder.loadTexts: frAccountLportOutSegments.setStatus('current')
frPVCConnectStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 10, 44, 2, 1)).setObjects(("FRNETSERV-MIB", "frPVCConnectIndex"), ("FRNETSERV-MIB", "frPVCConnectLowIfIndex"), ("FRNETSERV-MIB", "frPVCConnectLowDLCIIndex"), ("FRNETSERV-MIB", "frPVCConnectHighIfIndex"), ("FRNETSERV-MIB", "frPVCConnectHighDLCIIndex"), ("FRNETSERV-MIB", "frPVCConnectL2hOperStatus"), ("FRNETSERV-MIB", "frPVCConnectH2lOperStatus"), ("FRNETSERV-MIB", "frPVCEndptRcvdSigStatus"))
if mibBuilder.loadTexts: frPVCConnectStatusChange.setStatus('deprecated')
frPVCConnectStatusNotif = NotificationType((1, 3, 6, 1, 2, 1, 10, 44, 2, 0, 2)).setObjects(("FRNETSERV-MIB", "frPVCConnectL2hOperStatus"), ("FRNETSERV-MIB", "frPVCConnectH2lOperStatus"), ("FRNETSERV-MIB", "frPVCEndptRcvdSigStatus"))
if mibBuilder.loadTexts: frPVCConnectStatusNotif.setStatus('current')
frnetservConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 44, 3))
frnetservGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 44, 3, 1))
frnetservCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 44, 3, 2))
frnetservCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 44, 3, 2, 2)).setObjects(("FRNETSERV-MIB", "frnetservLportGroup2"), ("FRNETSERV-MIB", "frnetservMgtVCSigGroup"), ("FRNETSERV-MIB", "frnetservPVCEndptGroup"), ("FRNETSERV-MIB", "frnetservPVCEndptGroup2"), ("FRNETSERV-MIB", "frnetservPVCConnectGroup"), ("FRNETSERV-MIB", "frnetservPVCConnectNamesGroup"), ("FRNETSERV-MIB", "frnetservPVCNotifGroup2"), ("FRNETSERV-MIB", "frnetservAccountPVCGroup"), ("FRNETSERV-MIB", "frnetservAccountLportGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservCompliance2 = frnetservCompliance2.setStatus('current')
frnetSwitchCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 44, 3, 2, 3)).setObjects(("FRNETSERV-MIB", "frnetservLportGroup2"), ("FRNETSERV-MIB", "frnetservLportAdminGroup"), ("FRNETSERV-MIB", "frnetservMgtVCSigGroup"), ("FRNETSERV-MIB", "frnetservMgtVCSigAdminGroup"), ("FRNETSERV-MIB", "frnetservPVCEndptGroup"), ("FRNETSERV-MIB", "frnetservPVCEndptGroup2"), ("FRNETSERV-MIB", "frnetservPVCConnectGroup"), ("FRNETSERV-MIB", "frnetservPVCConnectNamesGroup"), ("FRNETSERV-MIB", "frnetservPVCNotifGroup2"), ("FRNETSERV-MIB", "frnetservAccountPVCGroup"), ("FRNETSERV-MIB", "frnetservAccountLportGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetSwitchCompliance = frnetSwitchCompliance.setStatus('current')
frnetservCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 44, 3, 2, 1)).setObjects(("FRNETSERV-MIB", "frnetservLportGroup"), ("FRNETSERV-MIB", "frnetservMgtVCSigGroup"), ("FRNETSERV-MIB", "frnetservPVCEndptGroup"), ("FRNETSERV-MIB", "frnetservPVCConnectGroup"), ("FRNETSERV-MIB", "frnetservAccountPVCGroup"), ("FRNETSERV-MIB", "frnetservAccountLportGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservCompliance = frnetservCompliance.setStatus('deprecated')
frnetservLportGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 1)).setObjects(("FRNETSERV-MIB", "frLportNumPlan"), ("FRNETSERV-MIB", "frLportContact"), ("FRNETSERV-MIB", "frLportLocation"), ("FRNETSERV-MIB", "frLportType"), ("FRNETSERV-MIB", "frLportAddrDLCILen"), ("FRNETSERV-MIB", "frLportVCSigProtocol"), ("FRNETSERV-MIB", "frLportVCSigPointer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservLportGroup = frnetservLportGroup.setStatus('deprecated')
frnetservMgtVCSigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 2)).setObjects(("FRNETSERV-MIB", "frMgtVCSigProced"), ("FRNETSERV-MIB", "frMgtVCSigUserN391"), ("FRNETSERV-MIB", "frMgtVCSigUserN392"), ("FRNETSERV-MIB", "frMgtVCSigUserN393"), ("FRNETSERV-MIB", "frMgtVCSigUserT391"), ("FRNETSERV-MIB", "frMgtVCSigNetN392"), ("FRNETSERV-MIB", "frMgtVCSigNetN393"), ("FRNETSERV-MIB", "frMgtVCSigNetT392"), ("FRNETSERV-MIB", "frMgtVCSigNetnN4"), ("FRNETSERV-MIB", "frMgtVCSigNetnT3"), ("FRNETSERV-MIB", "frMgtVCSigUserLinkRelErrors"), ("FRNETSERV-MIB", "frMgtVCSigUserProtErrors"), ("FRNETSERV-MIB", "frMgtVCSigUserChanInactive"), ("FRNETSERV-MIB", "frMgtVCSigNetLinkRelErrors"), ("FRNETSERV-MIB", "frMgtVCSigNetProtErrors"), ("FRNETSERV-MIB", "frMgtVCSigNetChanInactive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservMgtVCSigGroup = frnetservMgtVCSigGroup.setStatus('current')
frnetservPVCEndptGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 3)).setObjects(("FRNETSERV-MIB", "frPVCConnectIndexValue"), ("FRNETSERV-MIB", "frPVCEndptInMaxFrameSize"), ("FRNETSERV-MIB", "frPVCEndptInBc"), ("FRNETSERV-MIB", "frPVCEndptInBe"), ("FRNETSERV-MIB", "frPVCEndptInCIR"), ("FRNETSERV-MIB", "frPVCEndptOutMaxFrameSize"), ("FRNETSERV-MIB", "frPVCEndptOutBc"), ("FRNETSERV-MIB", "frPVCEndptOutBe"), ("FRNETSERV-MIB", "frPVCEndptOutCIR"), ("FRNETSERV-MIB", "frPVCEndptConnectIdentifier"), ("FRNETSERV-MIB", "frPVCEndptRowStatus"), ("FRNETSERV-MIB", "frPVCEndptRcvdSigStatus"), ("FRNETSERV-MIB", "frPVCEndptInFrames"), ("FRNETSERV-MIB", "frPVCEndptOutFrames"), ("FRNETSERV-MIB", "frPVCEndptInDEFrames"), ("FRNETSERV-MIB", "frPVCEndptInExcessFrames"), ("FRNETSERV-MIB", "frPVCEndptOutExcessFrames"), ("FRNETSERV-MIB", "frPVCEndptInDiscards"), ("FRNETSERV-MIB", "frPVCEndptInOctets"), ("FRNETSERV-MIB", "frPVCEndptOutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservPVCEndptGroup = frnetservPVCEndptGroup.setStatus('current')
frnetservPVCConnectGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 4)).setObjects(("FRNETSERV-MIB", "frPVCConnectAdminStatus"), ("FRNETSERV-MIB", "frPVCConnectL2hOperStatus"), ("FRNETSERV-MIB", "frPVCConnectH2lOperStatus"), ("FRNETSERV-MIB", "frPVCConnectL2hLastChange"), ("FRNETSERV-MIB", "frPVCConnectH2lLastChange"), ("FRNETSERV-MIB", "frPVCConnectRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservPVCConnectGroup = frnetservPVCConnectGroup.setStatus('current')
frnetservAccountPVCGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 5)).setObjects(("FRNETSERV-MIB", "frAccountPVCSegmentSize"), ("FRNETSERV-MIB", "frAccountPVCInSegments"), ("FRNETSERV-MIB", "frAccountPVCOutSegments"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservAccountPVCGroup = frnetservAccountPVCGroup.setStatus('current')
frnetservAccountLportGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 6)).setObjects(("FRNETSERV-MIB", "frAccountLportSegmentSize"), ("FRNETSERV-MIB", "frAccountLportInSegments"), ("FRNETSERV-MIB", "frAccountLportOutSegments"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservAccountLportGroup = frnetservAccountLportGroup.setStatus('current')
frnetservLportGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 7)).setObjects(("FRNETSERV-MIB", "frLportNumPlan"), ("FRNETSERV-MIB", "frLportContact"), ("FRNETSERV-MIB", "frLportLocation"), ("FRNETSERV-MIB", "frLportType"), ("FRNETSERV-MIB", "frLportAddrDLCILen"), ("FRNETSERV-MIB", "frLportVCSigProtocol"), ("FRNETSERV-MIB", "frLportFragControl"), ("FRNETSERV-MIB", "frLportFragSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservLportGroup2 = frnetservLportGroup2.setStatus('current')
frnetservPVCEndptGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 8)).setObjects(("FRNETSERV-MIB", "frPVCEndptInDiscardsDESet"), ("FRNETSERV-MIB", "frPVCEndptInFramesFECNSet"), ("FRNETSERV-MIB", "frPVCEndptOutFramesFECNSet"), ("FRNETSERV-MIB", "frPVCEndptInFramesBECNSet"), ("FRNETSERV-MIB", "frPVCEndptOutFramesBECNSet"), ("FRNETSERV-MIB", "frPVCEndptInCongDiscards"), ("FRNETSERV-MIB", "frPVCEndptInDECongDiscards"), ("FRNETSERV-MIB", "frPVCEndptOutCongDiscards"), ("FRNETSERV-MIB", "frPVCEndptOutDECongDiscards"), ("FRNETSERV-MIB", "frPVCEndptOutDEFrames"), ("FRNETSERV-MIB", "frPVCEndptAtmIwfConnIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservPVCEndptGroup2 = frnetservPVCEndptGroup2.setStatus('current')
frnetservPVCConnectNamesGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 9)).setObjects(("FRNETSERV-MIB", "frPVCConnectUserName"), ("FRNETSERV-MIB", "frPVCConnectProviderName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservPVCConnectNamesGroup = frnetservPVCConnectNamesGroup.setStatus('current')
frnetservLportAdminGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 10)).setObjects(("FRNETSERV-MIB", "frLportDLCIIndexValue"), ("FRNETSERV-MIB", "frLportTypeAdmin"), ("FRNETSERV-MIB", "frLportVCSigProtocolAdmin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservLportAdminGroup = frnetservLportAdminGroup.setStatus('current')
frnetservMgtVCSigAdminGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 11)).setObjects(("FRNETSERV-MIB", "frMgtVCSigProcedAdmin"), ("FRNETSERV-MIB", "frMgtVCSigUserN391Admin"), ("FRNETSERV-MIB", "frMgtVCSigUserN392Admin"), ("FRNETSERV-MIB", "frMgtVCSigUserN393Admin"), ("FRNETSERV-MIB", "frMgtVCSigUserT391Admin"), ("FRNETSERV-MIB", "frMgtVCSigNetN392Admin"), ("FRNETSERV-MIB", "frMgtVCSigNetN393Admin"), ("FRNETSERV-MIB", "frMgtVCSigNetT392Admin"), ("FRNETSERV-MIB", "frMgtVCSigNetnT3Admin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservMgtVCSigAdminGroup = frnetservMgtVCSigAdminGroup.setStatus('current')
frnetservPVCNotifGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 12)).setObjects(("FRNETSERV-MIB", "frPVCConnectStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservPVCNotifGroup = frnetservPVCNotifGroup.setStatus('deprecated')
frnetservPVCNotifGroup2 = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 44, 3, 1, 13)).setObjects(("FRNETSERV-MIB", "frPVCConnectStatusNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frnetservPVCNotifGroup2 = frnetservPVCNotifGroup2.setStatus('current')
mibBuilder.exportSymbols("FRNETSERV-MIB", frLportTable=frLportTable, frMgtVCSigUserN391Admin=frMgtVCSigUserN391Admin, frPVCConnectIndex=frPVCConnectIndex, frMgtVCSigNetN393=frMgtVCSigNetN393, frMgtVCSigUserLinkRelErrors=frMgtVCSigUserLinkRelErrors, frnetservMgtVCSigAdminGroup=frnetservMgtVCSigAdminGroup, frPVCEndptInCongDiscards=frPVCEndptInCongDiscards, frPVCConnectHighDLCIIndex=frPVCConnectHighDLCIIndex, frPVCEndptOutFramesFECNSet=frPVCEndptOutFramesFECNSet, frPVCEndptAtmIwfConnIndex=frPVCEndptAtmIwfConnIndex, frnetservPVCNotifGroup2=frnetservPVCNotifGroup2, frLportFragSize=frLportFragSize, frMgtVCSigNetProtErrors=frMgtVCSigNetProtErrors, frPVCConnectRowStatus=frPVCConnectRowStatus, frPVCConnectStatusNotif=frPVCConnectStatusNotif, frLportFragControl=frLportFragControl, frMgtVCSigNetLinkRelErrors=frMgtVCSigNetLinkRelErrors, frMgtVCSigNetT392=frMgtVCSigNetT392, frnetservMIB=frnetservMIB, frMgtVCSigUserN391=frMgtVCSigUserN391, frPVCEndptOutExcessFrames=frPVCEndptOutExcessFrames, frnetservMgtVCSigGroup=frnetservMgtVCSigGroup, frMgtVCSigUserT391Admin=frMgtVCSigUserT391Admin, frnetservGroups=frnetservGroups, frPVCEndptOutDEFrames=frPVCEndptOutDEFrames, frPVCConnectL2hOperStatus=frPVCConnectL2hOperStatus, frLportType=frLportType, frPVCConnectIndexValue=frPVCConnectIndexValue, frAccountLportInSegments=frAccountLportInSegments, frPVCEndptOutMaxFrameSize=frPVCEndptOutMaxFrameSize, frMgtVCSigUserChanInactive=frMgtVCSigUserChanInactive, frMgtVCSigProced=frMgtVCSigProced, frMgtVCSigUserN392=frMgtVCSigUserN392, frPVCEndptRcvdSigStatus=frPVCEndptRcvdSigStatus, frLportVCSigProtocol=frLportVCSigProtocol, frPVCEndptOutFrames=frPVCEndptOutFrames, frPVCConnectL2hLastChange=frPVCConnectL2hLastChange, frPVCEndptConnectIdentifier=frPVCEndptConnectIdentifier, frPVCEndptOutFramesBECNSet=frPVCEndptOutFramesBECNSet, frLportEntry=frLportEntry, frPVCEndptInOctets=frPVCEndptInOctets, frMgtVCSigProcedAdmin=frMgtVCSigProcedAdmin, frPVCConnectH2lLastChange=frPVCConnectH2lLastChange, frPVCConnectEntry=frPVCConnectEntry, frMgtVCSigUserN393Admin=frMgtVCSigUserN393Admin, frLportTypeAdmin=frLportTypeAdmin, frnetservPVCNotifGroup=frnetservPVCNotifGroup, frPVCEndptDLCIIndex=frPVCEndptDLCIIndex, frPVCEndptInBe=frPVCEndptInBe, frMgtVCSigNetT392Admin=frMgtVCSigNetT392Admin, frMgtVCSigNetN392Admin=frMgtVCSigNetN392Admin, frMgtVCSigNetN393Admin=frMgtVCSigNetN393Admin, frPVCConnectTable=frPVCConnectTable, frPVCEndptOutOctets=frPVCEndptOutOctets, PYSNMP_MODULE_ID=frnetservMIB, frLportVCSigPointer=frLportVCSigPointer, frAccountLportSegmentSize=frAccountLportSegmentSize, frPVCEndptTable=frPVCEndptTable, frnetservLportGroup=frnetservLportGroup, frLportLocation=frLportLocation, frnetservPVCEndptGroup2=frnetservPVCEndptGroup2, frMgtVCSigNetChanInactive=frMgtVCSigNetChanInactive, frnetservPVCConnectGroup=frnetservPVCConnectGroup, frAccountPVCTable=frAccountPVCTable, frnetservObjects=frnetservObjects, frLportNumPlan=frLportNumPlan, frnetservPVCConnectNamesGroup=frnetservPVCConnectNamesGroup, frAccountPVCDLCIIndex=frAccountPVCDLCIIndex, frPVCConnectUserName=frPVCConnectUserName, frPVCConnectHighIfIndex=frPVCConnectHighIfIndex, frPVCEndptInExcessFrames=frPVCEndptInExcessFrames, frnetservTrapsPrefix=frnetservTrapsPrefix, frLportVCSigProtocolAdmin=frLportVCSigProtocolAdmin, frnetservTraps=frnetservTraps, frPVCEndptInBc=frPVCEndptInBc, frLportAddrDLCILen=frLportAddrDLCILen, frPVCEndptInFrames=frPVCEndptInFrames, frPVCEndptOutCongDiscards=frPVCEndptOutCongDiscards, frPVCEndptRowStatus=frPVCEndptRowStatus, frAccountPVCEntry=frAccountPVCEntry, frMgtVCSigNetnN4=frMgtVCSigNetnN4, frnetservCompliances=frnetservCompliances, frnetservAccountPVCGroup=frnetservAccountPVCGroup, frPVCEndptInDECongDiscards=frPVCEndptInDECongDiscards, frPVCEndptOutDECongDiscards=frPVCEndptOutDECongDiscards, frMgtVCSigUserProtErrors=frMgtVCSigUserProtErrors, frPVCEndptInDiscardsDESet=frPVCEndptInDiscardsDESet, frnetservPVCEndptGroup=frnetservPVCEndptGroup, frPVCConnectLowIfIndex=frPVCConnectLowIfIndex, frAccountPVCOutSegments=frAccountPVCOutSegments, frAccountLportTable=frAccountLportTable, frPVCEndptOutCIR=frPVCEndptOutCIR, frLportDLCIIndexValue=frLportDLCIIndexValue, frPVCConnectProviderName=frPVCConnectProviderName, frMgtVCSigUserT391=frMgtVCSigUserT391, frPVCEndptInFramesBECNSet=frPVCEndptInFramesBECNSet, frnetservLportAdminGroup=frnetservLportAdminGroup, frPVCEndptInFramesFECNSet=frPVCEndptInFramesFECNSet, frPVCEndptInCIR=frPVCEndptInCIR, frMgtVCSigUserN392Admin=frMgtVCSigUserN392Admin, frAccountLportOutSegments=frAccountLportOutSegments, frnetservAccountLportGroup=frnetservAccountLportGroup, frAccountLportEntry=frAccountLportEntry, frnetservCompliance=frnetservCompliance, frMgtVCSigTable=frMgtVCSigTable, frMgtVCSigUserN393=frMgtVCSigUserN393, frPVCConnectLowDLCIIndex=frPVCConnectLowDLCIIndex, frnetservConformance=frnetservConformance, frPVCEndptInMaxFrameSize=frPVCEndptInMaxFrameSize, frPVCEndptInDEFrames=frPVCEndptInDEFrames, frPVCEndptInDiscards=frPVCEndptInDiscards, frnetservCompliance2=frnetservCompliance2, frPVCConnectAdminStatus=frPVCConnectAdminStatus, frMgtVCSigNetnT3=frMgtVCSigNetnT3, frMgtVCSigNetnT3Admin=frMgtVCSigNetnT3Admin, frAccountPVCInSegments=frAccountPVCInSegments, frLportContact=frLportContact, frMgtVCSigEntry=frMgtVCSigEntry, frPVCEndptOutBc=frPVCEndptOutBc, frAccountPVCSegmentSize=frAccountPVCSegmentSize, frPVCEndptEntry=frPVCEndptEntry, frPVCEndptOutBe=frPVCEndptOutBe, frPVCConnectStatusChange=frPVCConnectStatusChange, frMgtVCSigNetN392=frMgtVCSigNetN392, frPVCConnectH2lOperStatus=frPVCConnectH2lOperStatus, frnetSwitchCompliance=frnetSwitchCompliance, frnetservLportGroup2=frnetservLportGroup2)
