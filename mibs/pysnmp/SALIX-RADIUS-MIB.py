#
# PySNMP MIB module SALIX-RADIUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SALIX-RADIUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:52:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
atmfM4TrapAlarmSeverity, = mibBuilder.importSymbols("ATM-FORUM-M4-MIB", "atmfM4TrapAlarmSeverity")
salixGeneric, = mibBuilder.importSymbols("SALIX-MIB", "salixGeneric")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, ObjectIdentity, Counter64, Unsigned32, Integer32, iso, IpAddress, TimeTicks, ModuleIdentity, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "Counter64", "Unsigned32", "Integer32", "iso", "IpAddress", "TimeTicks", "ModuleIdentity", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
salixRadiusMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2158, 2, 8))
if mibBuilder.loadTexts: salixRadiusMIB.setLastUpdated('0004050000Z')
if mibBuilder.loadTexts: salixRadiusMIB.setOrganization('SALIX Technologies')
salixRadiusMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1))
salixRadiusMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 8, 2))
salixRadiusMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 8, 3))
salixRadiusMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 8, 2, 0))
salixRadiusServerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1, 1), )
if mibBuilder.loadTexts: salixRadiusServerConfigTable.setStatus('current')
salixRadiusServerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1, 1, 1), ).setIndexNames((0, "SALIX-RADIUS-MIB", "salixRadiusServerIndex"))
if mibBuilder.loadTexts: salixRadiusServerConfigEntry.setStatus('current')
salixRadiusServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRadiusServerIndex.setStatus('current')
salixRadiusServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixRadiusServerIpAddress.setStatus('current')
salixRadiusServerUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixRadiusServerUdpPort.setStatus('current')
salixRadiusServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixRadiusServerSharedSecret.setStatus('current')
salixRadiusServerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixRadiusServerEnabled.setStatus('current')
salixUserAuthenticationMethod = MibScalar((1, 3, 6, 1, 4, 1, 2158, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("internal", 0), ("radius", 1), ("tacacs", 2), ("xtacacs", 3), ("tacacsplus", 4))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixUserAuthenticationMethod.setStatus('current')
salixRadiusAccessRequestTimeout = NotificationType((1, 3, 6, 1, 4, 1, 2158, 2, 8, 2, 0, 1)).setObjects(("SALIX-RADIUS-MIB", "salixRadiusServerIndex"), ("ATM-FORUM-M4-MIB", "atmfM4TrapAlarmSeverity"))
if mibBuilder.loadTexts: salixRadiusAccessRequestTimeout.setStatus('current')
salixRadiusAccessDenied = NotificationType((1, 3, 6, 1, 4, 1, 2158, 2, 8, 2, 0, 2)).setObjects(("SALIX-RADIUS-MIB", "salixRadiusServerIndex"), ("ATM-FORUM-M4-MIB", "atmfM4TrapAlarmSeverity"))
if mibBuilder.loadTexts: salixRadiusAccessDenied.setStatus('current')
salixRadiusGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 8, 3, 1))
salixRadiusCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 2, 8, 3, 2))
salixRadiusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2158, 2, 8, 3, 1, 1)).setObjects(("SALIX-RADIUS-MIB", "salixRadiusServerIndex"), ("SALIX-RADIUS-MIB", "salixRadiusServerIpAddress"), ("SALIX-RADIUS-MIB", "salixRadiusServerUdpPort"), ("SALIX-RADIUS-MIB", "salixRadiusServerSharedSecret"), ("SALIX-RADIUS-MIB", "salixRadiusServerEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixRadiusGroup = salixRadiusGroup.setStatus('current')
salixRadiusCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2158, 2, 8, 3, 2, 1)).setObjects(("SALIX-RADIUS-MIB", "salixRadiusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixRadiusCompliance = salixRadiusCompliance.setStatus('current')
mibBuilder.exportSymbols("SALIX-RADIUS-MIB", salixRadiusAccessDenied=salixRadiusAccessDenied, salixRadiusMIBTrapPrefix=salixRadiusMIBTrapPrefix, salixRadiusServerConfigTable=salixRadiusServerConfigTable, salixRadiusServerConfigEntry=salixRadiusServerConfigEntry, salixRadiusGroup=salixRadiusGroup, salixRadiusGroups=salixRadiusGroups, salixRadiusServerSharedSecret=salixRadiusServerSharedSecret, salixUserAuthenticationMethod=salixUserAuthenticationMethod, salixRadiusMIBObjects=salixRadiusMIBObjects, salixRadiusServerIndex=salixRadiusServerIndex, salixRadiusMIBCompliance=salixRadiusMIBCompliance, PYSNMP_MODULE_ID=salixRadiusMIB, salixRadiusCompliances=salixRadiusCompliances, salixRadiusAccessRequestTimeout=salixRadiusAccessRequestTimeout, salixRadiusCompliance=salixRadiusCompliance, salixRadiusServerUdpPort=salixRadiusServerUdpPort, salixRadiusServerEnabled=salixRadiusServerEnabled, salixRadiusMIB=salixRadiusMIB, salixRadiusServerIpAddress=salixRadiusServerIpAddress, salixRadiusMIBTraps=salixRadiusMIBTraps)
