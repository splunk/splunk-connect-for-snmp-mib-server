#
# PySNMP MIB module CISCO-IPSLA-ECHO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IPSLA-ECHO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, Gauge32, ModuleIdentity, Bits, Counter32, Integer32, TimeTicks, iso, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "ModuleIdentity", "Bits", "Counter32", "Integer32", "TimeTicks", "iso", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "IpAddress")
StorageType, TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
ciscoIpSlaEchoMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 636))
ciscoIpSlaEchoMIB.setRevisions(('2007-08-16 00:00',))
if mibBuilder.loadTexts: ciscoIpSlaEchoMIB.setLastUpdated('200708160000Z')
if mibBuilder.loadTexts: ciscoIpSlaEchoMIB.setOrganization('Cisco Systems, Inc.')
ciscoIpSlaEchoMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 636, 0))
ciscoIpSlaEchoMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 636, 1))
cipslaIcmpEchoTmplTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1), )
if mibBuilder.loadTexts: cipslaIcmpEchoTmplTable.setStatus('current')
cipslaIcmpEchoTmplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1), ).setIndexNames((0, "CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplName"))
if mibBuilder.loadTexts: cipslaIcmpEchoTmplEntry.setStatus('current')
cipslaIcmpEchoTmplName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cipslaIcmpEchoTmplName.setStatus('current')
cipslaIcmpEchoTmplDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplDescription.setStatus('current')
cipslaIcmpEchoTmplSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplSrcAddrType.setStatus('current')
cipslaIcmpEchoTmplSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplSrcAddr.setStatus('current')
cipslaIcmpEchoTmplTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplTimeOut.setStatus('current')
cipslaIcmpEchoTmplVerifyData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplVerifyData.setStatus('current')
cipslaIcmpEchoTmplReqDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384)).clone(28)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplReqDataSize.setStatus('current')
cipslaIcmpEchoTmplTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplTOS.setStatus('current')
cipslaIcmpEchoTmplVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplVrfName.setStatus('current')
cipslaIcmpEchoTmplThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplThreshold.setStatus('current')
cipslaIcmpEchoTmplHistLives = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplHistLives.setStatus('current')
cipslaIcmpEchoTmplHistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplHistBuckets.setStatus('current')
cipslaIcmpEchoTmplHistFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("overThreshold", 3), ("failures", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplHistFilter.setStatus('current')
cipslaIcmpEchoTmplStatsHours = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25)).clone(2)).setUnits('hours').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplStatsHours.setStatus('current')
cipslaIcmpEchoTmplDistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplDistBuckets.setStatus('current')
cipslaIcmpEchoTmplDistInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplDistInterval.setStatus('current')
cipslaIcmpEchoTmplStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 17), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplStorageType.setStatus('current')
cipslaIcmpEchoTmplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 1, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpEchoTmplRowStatus.setStatus('current')
cipslaUdpEchoTmplTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2), )
if mibBuilder.loadTexts: cipslaUdpEchoTmplTable.setStatus('current')
cipslaUdpEchoTmplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1), ).setIndexNames((0, "CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplName"))
if mibBuilder.loadTexts: cipslaUdpEchoTmplEntry.setStatus('current')
cipslaUdpEchoTmplName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cipslaUdpEchoTmplName.setStatus('current')
cipslaUdpEchoTmplDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplDescription.setStatus('current')
cipslaUdpEchoTmplControlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 3), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplControlEnable.setStatus('current')
cipslaUdpEchoTmplSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 4), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplSrcAddrType.setStatus('current')
cipslaUdpEchoTmplSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplSrcAddr.setStatus('current')
cipslaUdpEchoTmplSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 6), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplSrcPort.setStatus('current')
cipslaUdpEchoTmplTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplTimeOut.setStatus('current')
cipslaUdpEchoTmplVerifyData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplVerifyData.setStatus('current')
cipslaUdpEchoTmplReqDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 1500)).clone(16)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplReqDataSize.setStatus('current')
cipslaUdpEchoTmplTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplTOS.setStatus('current')
cipslaUdpEchoTmplVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplVrfName.setStatus('current')
cipslaUdpEchoTmplThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplThreshold.setStatus('current')
cipslaUdpEchoTmplHistLives = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplHistLives.setStatus('current')
cipslaUdpEchoTmplHistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplHistBuckets.setStatus('current')
cipslaUdpEchoTmplHistFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("overThreshold", 3), ("failures", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplHistFilter.setStatus('current')
cipslaUdpEchoTmplStatsHours = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25)).clone(2)).setUnits('hours').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplStatsHours.setStatus('current')
cipslaUdpEchoTmplDistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplDistBuckets.setStatus('current')
cipslaUdpEchoTmplDistInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplDistInterval.setStatus('current')
cipslaUdpEchoTmplStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 19), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplStorageType.setStatus('current')
cipslaUdpEchoTmplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 2, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpEchoTmplRowStatus.setStatus('current')
cipslaTcpConnTmplTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3), )
if mibBuilder.loadTexts: cipslaTcpConnTmplTable.setStatus('current')
cipslaTcpConnTmplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1), ).setIndexNames((0, "CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplName"))
if mibBuilder.loadTexts: cipslaTcpConnTmplEntry.setStatus('current')
cipslaTcpConnTmplName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cipslaTcpConnTmplName.setStatus('current')
cipslaTcpConnTmplDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplDescription.setStatus('current')
cipslaTcpConnTmplControlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 3), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplControlEnable.setStatus('current')
cipslaTcpConnTmplSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 4), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplSrcAddrType.setStatus('current')
cipslaTcpConnTmplSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplSrcAddr.setStatus('current')
cipslaTcpConnTmplSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 6), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplSrcPort.setStatus('current')
cipslaTcpConnTmplTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplTimeOut.setStatus('current')
cipslaTcpConnTmplVerifyData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplVerifyData.setStatus('current')
cipslaTcpConnTmplTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplTOS.setStatus('current')
cipslaTcpConnTmplThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplThreshold.setStatus('current')
cipslaTcpConnTmplHistLives = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplHistLives.setStatus('current')
cipslaTcpConnTmplHistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplHistBuckets.setStatus('current')
cipslaTcpConnTmplHistFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("overThreshold", 3), ("failures", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplHistFilter.setStatus('current')
cipslaTcpConnTmplStatsHours = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25)).clone(2)).setUnits('hours').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplStatsHours.setStatus('current')
cipslaTcpConnTmplDistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplDistBuckets.setStatus('current')
cipslaTcpConnTmplDistInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplDistInterval.setStatus('current')
cipslaTcpConnTmplStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 17), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplStorageType.setStatus('current')
cipslaTcpConnTmplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 636, 1, 3, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaTcpConnTmplRowStatus.setStatus('current')
ciscoIpSlaEchoMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 636, 2))
ciscoIpSlaEchoMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 636, 2, 1))
ciscoIpSlaEchoMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 636, 2, 2))
ciscoIpSlaEchoMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 636, 2, 1, 1)).setObjects(("CISCO-IPSLA-ECHO-MIB", "ciscoIpSlaIcmpEchoTmplGroup"), ("CISCO-IPSLA-ECHO-MIB", "ciscoIpSlaUdpEchoTmplGroup"), ("CISCO-IPSLA-ECHO-MIB", "ciscoIpSlaTcpConnTmplGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpSlaEchoMIBCompliance = ciscoIpSlaEchoMIBCompliance.setStatus('current')
ciscoIpSlaIcmpEchoTmplGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 636, 2, 2, 1)).setObjects(("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplDescription"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplSrcAddrType"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplSrcAddr"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplTimeOut"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplVerifyData"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplReqDataSize"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplTOS"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplVrfName"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplThreshold"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplHistLives"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplHistBuckets"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplHistFilter"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplStatsHours"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplDistBuckets"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplDistInterval"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplStorageType"), ("CISCO-IPSLA-ECHO-MIB", "cipslaIcmpEchoTmplRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpSlaIcmpEchoTmplGroup = ciscoIpSlaIcmpEchoTmplGroup.setStatus('current')
ciscoIpSlaUdpEchoTmplGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 636, 2, 2, 2)).setObjects(("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplDescription"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplControlEnable"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplSrcAddrType"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplSrcAddr"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplSrcPort"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplTimeOut"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplVerifyData"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplReqDataSize"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplTOS"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplVrfName"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplThreshold"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplHistLives"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplHistBuckets"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplHistFilter"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplStatsHours"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplDistBuckets"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplDistInterval"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplStorageType"), ("CISCO-IPSLA-ECHO-MIB", "cipslaUdpEchoTmplRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpSlaUdpEchoTmplGroup = ciscoIpSlaUdpEchoTmplGroup.setStatus('current')
ciscoIpSlaTcpConnTmplGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 636, 2, 2, 3)).setObjects(("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplDescription"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplControlEnable"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplSrcAddrType"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplSrcAddr"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplSrcPort"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplTimeOut"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplVerifyData"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplTOS"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplThreshold"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplHistLives"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplHistBuckets"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplHistFilter"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplStatsHours"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplDistBuckets"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplDistInterval"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplStorageType"), ("CISCO-IPSLA-ECHO-MIB", "cipslaTcpConnTmplRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpSlaTcpConnTmplGroup = ciscoIpSlaTcpConnTmplGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IPSLA-ECHO-MIB", PYSNMP_MODULE_ID=ciscoIpSlaEchoMIB, cipslaTcpConnTmplDistBuckets=cipslaTcpConnTmplDistBuckets, cipslaIcmpEchoTmplReqDataSize=cipslaIcmpEchoTmplReqDataSize, cipslaIcmpEchoTmplDistInterval=cipslaIcmpEchoTmplDistInterval, ciscoIpSlaEchoMIBCompliance=ciscoIpSlaEchoMIBCompliance, cipslaIcmpEchoTmplTable=cipslaIcmpEchoTmplTable, cipslaTcpConnTmplSrcPort=cipslaTcpConnTmplSrcPort, cipslaUdpEchoTmplRowStatus=cipslaUdpEchoTmplRowStatus, cipslaUdpEchoTmplDescription=cipslaUdpEchoTmplDescription, ciscoIpSlaEchoMIBCompliances=ciscoIpSlaEchoMIBCompliances, cipslaIcmpEchoTmplSrcAddrType=cipslaIcmpEchoTmplSrcAddrType, cipslaUdpEchoTmplTable=cipslaUdpEchoTmplTable, cipslaIcmpEchoTmplTOS=cipslaIcmpEchoTmplTOS, cipslaUdpEchoTmplName=cipslaUdpEchoTmplName, cipslaUdpEchoTmplDistInterval=cipslaUdpEchoTmplDistInterval, cipslaUdpEchoTmplSrcAddr=cipslaUdpEchoTmplSrcAddr, cipslaIcmpEchoTmplRowStatus=cipslaIcmpEchoTmplRowStatus, cipslaTcpConnTmplTOS=cipslaTcpConnTmplTOS, cipslaTcpConnTmplDescription=cipslaTcpConnTmplDescription, cipslaUdpEchoTmplSrcPort=cipslaUdpEchoTmplSrcPort, cipslaTcpConnTmplRowStatus=cipslaTcpConnTmplRowStatus, cipslaTcpConnTmplEntry=cipslaTcpConnTmplEntry, cipslaIcmpEchoTmplSrcAddr=cipslaIcmpEchoTmplSrcAddr, cipslaIcmpEchoTmplTimeOut=cipslaIcmpEchoTmplTimeOut, cipslaUdpEchoTmplHistBuckets=cipslaUdpEchoTmplHistBuckets, cipslaIcmpEchoTmplStatsHours=cipslaIcmpEchoTmplStatsHours, cipslaIcmpEchoTmplThreshold=cipslaIcmpEchoTmplThreshold, ciscoIpSlaUdpEchoTmplGroup=ciscoIpSlaUdpEchoTmplGroup, cipslaUdpEchoTmplReqDataSize=cipslaUdpEchoTmplReqDataSize, cipslaTcpConnTmplName=cipslaTcpConnTmplName, cipslaIcmpEchoTmplVerifyData=cipslaIcmpEchoTmplVerifyData, cipslaIcmpEchoTmplVrfName=cipslaIcmpEchoTmplVrfName, cipslaTcpConnTmplTimeOut=cipslaTcpConnTmplTimeOut, cipslaTcpConnTmplThreshold=cipslaTcpConnTmplThreshold, cipslaTcpConnTmplStatsHours=cipslaTcpConnTmplStatsHours, cipslaTcpConnTmplStorageType=cipslaTcpConnTmplStorageType, cipslaIcmpEchoTmplEntry=cipslaIcmpEchoTmplEntry, ciscoIpSlaEchoMIBConform=ciscoIpSlaEchoMIBConform, cipslaUdpEchoTmplSrcAddrType=cipslaUdpEchoTmplSrcAddrType, ciscoIpSlaEchoMIBObjects=ciscoIpSlaEchoMIBObjects, cipslaUdpEchoTmplThreshold=cipslaUdpEchoTmplThreshold, cipslaTcpConnTmplHistBuckets=cipslaTcpConnTmplHistBuckets, cipslaUdpEchoTmplStorageType=cipslaUdpEchoTmplStorageType, cipslaUdpEchoTmplTimeOut=cipslaUdpEchoTmplTimeOut, cipslaUdpEchoTmplHistFilter=cipslaUdpEchoTmplHistFilter, cipslaIcmpEchoTmplHistLives=cipslaIcmpEchoTmplHistLives, cipslaUdpEchoTmplDistBuckets=cipslaUdpEchoTmplDistBuckets, cipslaTcpConnTmplSrcAddrType=cipslaTcpConnTmplSrcAddrType, ciscoIpSlaEchoMIBGroups=ciscoIpSlaEchoMIBGroups, cipslaUdpEchoTmplHistLives=cipslaUdpEchoTmplHistLives, cipslaTcpConnTmplControlEnable=cipslaTcpConnTmplControlEnable, cipslaIcmpEchoTmplName=cipslaIcmpEchoTmplName, cipslaIcmpEchoTmplStorageType=cipslaIcmpEchoTmplStorageType, cipslaTcpConnTmplTable=cipslaTcpConnTmplTable, ciscoIpSlaTcpConnTmplGroup=ciscoIpSlaTcpConnTmplGroup, cipslaIcmpEchoTmplHistBuckets=cipslaIcmpEchoTmplHistBuckets, cipslaTcpConnTmplHistLives=cipslaTcpConnTmplHistLives, cipslaTcpConnTmplHistFilter=cipslaTcpConnTmplHistFilter, cipslaUdpEchoTmplEntry=cipslaUdpEchoTmplEntry, cipslaUdpEchoTmplVerifyData=cipslaUdpEchoTmplVerifyData, cipslaUdpEchoTmplVrfName=cipslaUdpEchoTmplVrfName, cipslaUdpEchoTmplTOS=cipslaUdpEchoTmplTOS, ciscoIpSlaEchoMIB=ciscoIpSlaEchoMIB, cipslaTcpConnTmplSrcAddr=cipslaTcpConnTmplSrcAddr, cipslaTcpConnTmplVerifyData=cipslaTcpConnTmplVerifyData, ciscoIpSlaEchoMIBNotifs=ciscoIpSlaEchoMIBNotifs, cipslaUdpEchoTmplControlEnable=cipslaUdpEchoTmplControlEnable, cipslaUdpEchoTmplStatsHours=cipslaUdpEchoTmplStatsHours, cipslaTcpConnTmplDistInterval=cipslaTcpConnTmplDistInterval, cipslaIcmpEchoTmplHistFilter=cipslaIcmpEchoTmplHistFilter, ciscoIpSlaIcmpEchoTmplGroup=ciscoIpSlaIcmpEchoTmplGroup, cipslaIcmpEchoTmplDescription=cipslaIcmpEchoTmplDescription, cipslaIcmpEchoTmplDistBuckets=cipslaIcmpEchoTmplDistBuckets)
