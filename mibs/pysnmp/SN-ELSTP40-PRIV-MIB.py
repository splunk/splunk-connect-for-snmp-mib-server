#
# PySNMP MIB module SN-ELSTP40-PRIV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SN-ELSTP40-PRIV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:59:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, ModuleIdentity, Counter32, MibIdentifier, IpAddress, Integer32, ObjectIdentity, Unsigned32, enterprises, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, internet = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "ModuleIdentity", "Counter32", "MibIdentifier", "IpAddress", "Integer32", "ObjectIdentity", "Unsigned32", "enterprises", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "internet")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ad = MibIdentifier((1, 3, 6, 1, 4, 1, 4196))
adProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1))
simaticNet = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1))
iHub = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 1))
iSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 2))
iLeanSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3))
elsTP40M = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1))
elsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 1))
elsStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2))
elsMail = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 3))
elsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 4))
elsEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 5))
elsIPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 6))
version = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 62)).clone('V1.0.0.0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('mandatory')
hardware = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 62)).clone('01')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hardware.setStatus('mandatory')
ownIP = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 6, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ownIP.setStatus('mandatory')
netMask = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netMask.setStatus('mandatory')
gateway = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 6, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gateway.setStatus('mandatory')
fromDHCP = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fromDHCP.setStatus('mandatory')
emailFrom = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 62)).clone('owner@anywhere.com')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailFrom.setStatus('mandatory')
emailTo = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 62)).clone('test@els.com')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailTo.setStatus('mandatory')
emailSubject = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 62)).clone('test@els.com')).setMaxAccess("readonly")
if mibBuilder.loadTexts: emailSubject.setStatus('mandatory')
smtpdIP = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtpdIP.setStatus('mandatory')
trapIP1 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 4, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIP1.setStatus('mandatory')
trapIP2 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 4, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIP2.setStatus('mandatory')
emailMask = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailMask.setStatus('mandatory')
trapMask = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapMask.setStatus('mandatory')
otherMask = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: otherMask.setStatus('mandatory')
receiveError1 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveError1.setStatus('mandatory')
receiveError2 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveError2.setStatus('mandatory')
receiveError3 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveError3.setStatus('mandatory')
receiveError4 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: receiveError4.setStatus('mandatory')
collisionCount1 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: collisionCount1.setStatus('mandatory')
collisionCount2 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: collisionCount2.setStatus('mandatory')
collisionCount3 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: collisionCount3.setStatus('mandatory')
collisionCount4 = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: collisionCount4.setStatus('mandatory')
ledStatus = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ledStatus.setStatus('mandatory')
startBank = MibScalar((1, 3, 6, 1, 4, 1, 4196, 1, 1, 3, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: startBank.setStatus('mandatory')
mibBuilder.exportSymbols("SN-ELSTP40-PRIV-MIB", collisionCount3=collisionCount3, smtpdIP=smtpdIP, elsInfo=elsInfo, netMask=netMask, emailTo=emailTo, trapMask=trapMask, collisionCount1=collisionCount1, iSwitch=iSwitch, startBank=startBank, trapIP2=trapIP2, receiveError4=receiveError4, receiveError3=receiveError3, simaticNet=simaticNet, hardware=hardware, otherMask=otherMask, emailMask=emailMask, gateway=gateway, elsMail=elsMail, receiveError2=receiveError2, ledStatus=ledStatus, iHub=iHub, elsTP40M=elsTP40M, elsStatus=elsStatus, ad=ad, ownIP=ownIP, iLeanSwitch=iLeanSwitch, elsTrap=elsTrap, fromDHCP=fromDHCP, collisionCount2=collisionCount2, emailSubject=emailSubject, elsIPInfo=elsIPInfo, trapIP1=trapIP1, version=version, receiveError1=receiveError1, collisionCount4=collisionCount4, elsEvents=elsEvents, emailFrom=emailFrom, adProductMibs=adProductMibs)
