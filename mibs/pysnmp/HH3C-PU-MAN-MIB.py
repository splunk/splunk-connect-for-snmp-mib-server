#
# PySNMP MIB module HH3C-PU-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-PU-MAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:16:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
hh3cSurveillanceMIB, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cSurveillanceMIB")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, iso, NotificationType, ModuleIdentity, Counter32, IpAddress, Integer32, Gauge32, MibIdentifier, Unsigned32, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "iso", "NotificationType", "ModuleIdentity", "Counter32", "IpAddress", "Integer32", "Gauge32", "MibIdentifier", "Unsigned32", "ObjectIdentity", "Bits")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
hh3cPUMan = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 9, 2))
if mibBuilder.loadTexts: hh3cPUMan.setLastUpdated('200709050000Z')
if mibBuilder.loadTexts: hh3cPUMan.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cPUCommonMan = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1))
hh3cPUCommonManObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 1))
hh3cPUisOnline = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUisOnline.setStatus('current')
hh3cPUCMSAddr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUCMSAddr.setStatus('current')
hh3cPUVersionServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUVersionServerAddr.setStatus('current')
hh3cPUCommonManTables = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2))
hh3cPUExternalInputAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cPUExternalInputAlarmTable.setStatus('current')
hh3cPUExternalInputAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-PU-MAN-MIB", "hh3cPUExternalInputAlarmChannelID"))
if mibBuilder.loadTexts: hh3cPUExternalInputAlarmEntry.setStatus('current')
hh3cPUExternalInputAlarmChannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPUExternalInputAlarmChannelID.setStatus('current')
hh3cPUExternalInputAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUExternalInputAlarmStatus.setStatus('current')
hh3cPUExternalOutputAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cPUExternalOutputAlarmTable.setStatus('current')
hh3cPUExternalOutputAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-PU-MAN-MIB", "hh3cPUExternalOutputAlarmChannelID"))
if mibBuilder.loadTexts: hh3cPUExternalOutputAlarmEntry.setStatus('current')
hh3cPUExternalOutputAlarmChannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2, 2, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPUExternalOutputAlarmChannelID.setStatus('current')
hh3cPUExternalOutputAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 2, 1, 2, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUExternalOutputAlarmStatus.setStatus('current')
hh3cPUECMan = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2))
hh3cPUECManObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 1))
hh3cPUECCameraOnlines = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUECCameraOnlines.setStatus('current')
hh3cPUECCameraAvailRate = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUECCameraAvailRate.setStatus('current')
hh3cPUECManTables = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 2))
hh3cPUECVideoChannelTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 2, 1), )
if mibBuilder.loadTexts: hh3cPUECVideoChannelTable.setStatus('current')
hh3cPUECVideoChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 2, 1, 1), ).setIndexNames((0, "HH3C-PU-MAN-MIB", "hh3cPUECVideoChannelID"))
if mibBuilder.loadTexts: hh3cPUECVideoChannelEntry.setStatus('current')
hh3cPUECVideoChannelID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 2, 1, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPUECVideoChannelID.setStatus('current')
hh3cPUECVideoChannelName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUECVideoChannelName.setStatus('current')
hh3cPUECVideoChannelServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 2, 1, 1, 3), Bits().clone(namedValues=NamedValues(("unknown", 0), ("unused", 1), ("kinescope", 2), ("snapshot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUECVideoChannelServiceStatus.setStatus('current')
hh3cPUDCMan = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 3))
hh3cPUDCManObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 3, 1))
hh3cPUDCRcvVideoPackets = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUDCRcvVideoPackets.setStatus('current')
hh3cPUDCRcvVideoRefFrames = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUDCRcvVideoRefFrames.setStatus('current')
hh3cPUDCVideoPacketsLoss = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUDCVideoPacketsLoss.setStatus('current')
hh3cPUDCVideoRefFramesLoss = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPUDCVideoRefFramesLoss.setStatus('current')
hh3cPUECManMIBTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3))
hh3cPUECManTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0))
hh3cPUECManExternalSemaphoreTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 1)).setObjects(("HH3C-PU-MAN-MIB", "hh3cPUExternalInputAlarmChannelID"))
if mibBuilder.loadTexts: hh3cPUECManExternalSemaphoreTrap.setStatus('current')
hh3cPUECManVideoLossTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 2)).setObjects(("HH3C-PU-MAN-MIB", "hh3cPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cPUECManVideoLossTrap.setStatus('current')
hh3cPUECManVideoRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 3)).setObjects(("HH3C-PU-MAN-MIB", "hh3cPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cPUECManVideoRecoverTrap.setStatus('current')
hh3cPUECManMotionDetectTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 4)).setObjects(("HH3C-PU-MAN-MIB", "hh3cPUECVideoChannelName"), ("HH3C-PU-MAN-MIB", "hh3cPUECRegionCoordinateX1"), ("HH3C-PU-MAN-MIB", "hh3cPUECRegionCoordinateY1"), ("HH3C-PU-MAN-MIB", "hh3cPUECRegionCoordinateX2"), ("HH3C-PU-MAN-MIB", "hh3cPUECRegionCoordinateY2"))
if mibBuilder.loadTexts: hh3cPUECManMotionDetectTrap.setStatus('current')
hh3cPUECManOnLineFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 5)).setObjects(("HH3C-PU-MAN-MIB", "hh3cPUCMSAddr"))
if mibBuilder.loadTexts: hh3cPUECManOnLineFailureTrap.setStatus('current')
hh3cPUECManConnectionCMSFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 6)).setObjects(("HH3C-PU-MAN-MIB", "hh3cPUCMSAddr"))
if mibBuilder.loadTexts: hh3cPUECManConnectionCMSFailureTrap.setStatus('current')
hh3cPUECManConnectionVerSrvFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 7)).setObjects(("HH3C-PU-MAN-MIB", "hh3cPUVersionServerAddr"))
if mibBuilder.loadTexts: hh3cPUECManConnectionVerSrvFailureTrap.setStatus('current')
hh3cPUECManFlashFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 8))
if mibBuilder.loadTexts: hh3cPUECManFlashFailureTrap.setStatus('current')
hh3cPUECManCameraShelterTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 0, 9)).setObjects(("HH3C-PU-MAN-MIB", "hh3cPUECVideoChannelName"), ("HH3C-PU-MAN-MIB", "hh3cPUECRegionCoordinateX1"), ("HH3C-PU-MAN-MIB", "hh3cPUECRegionCoordinateY1"), ("HH3C-PU-MAN-MIB", "hh3cPUECRegionCoordinateX2"), ("HH3C-PU-MAN-MIB", "hh3cPUECRegionCoordinateY2"))
if mibBuilder.loadTexts: hh3cPUECManCameraShelterTrap.setStatus('current')
hh3cPUECManTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 1))
hh3cPUECRegionCoordinateX1 = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPUECRegionCoordinateX1.setStatus('current')
hh3cPUECRegionCoordinateY1 = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 1, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPUECRegionCoordinateY1.setStatus('current')
hh3cPUECRegionCoordinateX2 = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPUECRegionCoordinateX2.setStatus('current')
hh3cPUECRegionCoordinateY2 = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 2, 2, 3, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPUECRegionCoordinateY2.setStatus('current')
mibBuilder.exportSymbols("HH3C-PU-MAN-MIB", hh3cPUDCManObjects=hh3cPUDCManObjects, hh3cPUDCMan=hh3cPUDCMan, hh3cPUVersionServerAddr=hh3cPUVersionServerAddr, hh3cPUisOnline=hh3cPUisOnline, hh3cPUExternalOutputAlarmStatus=hh3cPUExternalOutputAlarmStatus, hh3cPUECManFlashFailureTrap=hh3cPUECManFlashFailureTrap, hh3cPUECManOnLineFailureTrap=hh3cPUECManOnLineFailureTrap, hh3cPUECManVideoRecoverTrap=hh3cPUECManVideoRecoverTrap, hh3cPUCommonManObjects=hh3cPUCommonManObjects, hh3cPUECManConnectionVerSrvFailureTrap=hh3cPUECManConnectionVerSrvFailureTrap, hh3cPUExternalInputAlarmStatus=hh3cPUExternalInputAlarmStatus, hh3cPUExternalOutputAlarmEntry=hh3cPUExternalOutputAlarmEntry, hh3cPUExternalInputAlarmEntry=hh3cPUExternalInputAlarmEntry, hh3cPUECVideoChannelID=hh3cPUECVideoChannelID, hh3cPUDCVideoRefFramesLoss=hh3cPUDCVideoRefFramesLoss, hh3cPUECManTrapPrex=hh3cPUECManTrapPrex, hh3cPUECManMotionDetectTrap=hh3cPUECManMotionDetectTrap, hh3cPUECManCameraShelterTrap=hh3cPUECManCameraShelterTrap, hh3cPUECVideoChannelTable=hh3cPUECVideoChannelTable, hh3cPUECRegionCoordinateX1=hh3cPUECRegionCoordinateX1, hh3cPUCMSAddr=hh3cPUCMSAddr, hh3cPUDCRcvVideoRefFrames=hh3cPUDCRcvVideoRefFrames, hh3cPUMan=hh3cPUMan, hh3cPUExternalOutputAlarmTable=hh3cPUExternalOutputAlarmTable, hh3cPUECManTables=hh3cPUECManTables, hh3cPUExternalOutputAlarmChannelID=hh3cPUExternalOutputAlarmChannelID, hh3cPUECManConnectionCMSFailureTrap=hh3cPUECManConnectionCMSFailureTrap, hh3cPUECManTrapObjects=hh3cPUECManTrapObjects, PYSNMP_MODULE_ID=hh3cPUMan, hh3cPUECCameraOnlines=hh3cPUECCameraOnlines, hh3cPUECMan=hh3cPUECMan, hh3cPUECVideoChannelServiceStatus=hh3cPUECVideoChannelServiceStatus, hh3cPUECManVideoLossTrap=hh3cPUECManVideoLossTrap, hh3cPUECRegionCoordinateY2=hh3cPUECRegionCoordinateY2, hh3cPUExternalInputAlarmChannelID=hh3cPUExternalInputAlarmChannelID, hh3cPUECManExternalSemaphoreTrap=hh3cPUECManExternalSemaphoreTrap, hh3cPUCommonManTables=hh3cPUCommonManTables, hh3cPUExternalInputAlarmTable=hh3cPUExternalInputAlarmTable, hh3cPUECVideoChannelName=hh3cPUECVideoChannelName, hh3cPUECManObjects=hh3cPUECManObjects, hh3cPUCommonMan=hh3cPUCommonMan, hh3cPUECVideoChannelEntry=hh3cPUECVideoChannelEntry, hh3cPUECRegionCoordinateY1=hh3cPUECRegionCoordinateY1, hh3cPUECRegionCoordinateX2=hh3cPUECRegionCoordinateX2, hh3cPUDCRcvVideoPackets=hh3cPUDCRcvVideoPackets, hh3cPUDCVideoPacketsLoss=hh3cPUDCVideoPacketsLoss, hh3cPUECManMIBTrap=hh3cPUECManMIBTrap, hh3cPUECCameraAvailRate=hh3cPUECCameraAvailRate)
