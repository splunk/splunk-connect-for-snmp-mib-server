#
# PySNMP MIB module COM21-HCXETH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COM21-HCXETH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:10:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
com21Hcx, com21, com21Traps = mibBuilder.importSymbols("COM21-HCX-MIB", "com21Hcx", "com21", "com21Traps")
hcxEventLogTime, hcxAlmSeverity = mibBuilder.importSymbols("COM21-HCXALM-MIB", "hcxEventLogTime", "hcxAlmSeverity")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, NotificationType, TimeTicks, Counter64, Unsigned32, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, ModuleIdentity, ObjectIdentity, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "TimeTicks", "Counter64", "Unsigned32", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "Bits", "Gauge32")
MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString")
com21HcxEth = ModuleIdentity((1, 3, 6, 1, 4, 1, 1141, 2, 40))
if mibBuilder.loadTexts: com21HcxEth.setLastUpdated('9701080000Z')
if mibBuilder.loadTexts: com21HcxEth.setOrganization('Com21, Inc.')
com21HcxEtherUnitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 41))
com21HcxEtherPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 42))
com21HcxEtherStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 43))
com21HcxEtherIpAddrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 44))
com21HcxEtherStuStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 45))
com21HcxServGrpAssocGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 46))
class PrimServiceState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("is", 1), ("oos", 2))

class Com21RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("active", 1), ("create", 2), ("destroy", 3), ("deactive", 4))

com21HcxEtherUnitTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1), )
if mibBuilder.loadTexts: com21HcxEtherUnitTable.setStatus('current')
com21HcxEtherUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1), ).setIndexNames((0, "COM21-HCXETH-MIB", "hcxEtherShelfId"), (0, "COM21-HCXETH-MIB", "hcxEtherSlotId"))
if mibBuilder.loadTexts: com21HcxEtherUnitEntry.setStatus('current')
hcxEtherShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherShelfId.setStatus('current')
hcxEtherSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherSlotId.setStatus('current')
hcxEtherCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tenBaseT", 1), ("onehundredBaseT", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherCardType.setStatus('current')
hcxEtherNoPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherNoPorts.setStatus('current')
hcxEtherHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherHardwareVersion.setStatus('current')
hcxEtherBootVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherBootVersion.setStatus('current')
hcxEtherUnitPrimServState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 7), PrimServiceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherUnitPrimServState.setStatus('current')
hcxEtherUnitPrimStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 20)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherShelfId"), ("COM21-HCXETH-MIB", "hcxEtherSlotId"), ("COM21-HCXETH-MIB", "hcxEtherUnitPrimServState"))
if mibBuilder.loadTexts: hcxEtherUnitPrimStateChange.setStatus('current')
hcxEtherUnitSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherUnitSecServState.setStatus('current')
hcxEtherUnitSecStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 21)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherShelfId"), ("COM21-HCXETH-MIB", "hcxEtherSlotId"), ("COM21-HCXETH-MIB", "hcxEtherUnitSecServState"))
if mibBuilder.loadTexts: hcxEtherUnitSecStateChange.setStatus('current')
hcxEtherRestartAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("restart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherRestartAction.setStatus('current')
hcxEtherTestStatusLed = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherTestStatusLed.setStatus('current')
hcxEtherTestStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 22)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherShelfId"), ("COM21-HCXETH-MIB", "hcxEtherSlotId"), ("COM21-HCXETH-MIB", "hcxEtherTestStatusLed"))
if mibBuilder.loadTexts: hcxEtherTestStatusLedChange.setStatus('current')
hcxEtherFaultStatusLed = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherFaultStatusLed.setStatus('current')
hcxEtherFaultStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 23)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherShelfId"), ("COM21-HCXETH-MIB", "hcxEtherSlotId"), ("COM21-HCXETH-MIB", "hcxEtherFaultStatusLed"))
if mibBuilder.loadTexts: hcxEtherFaultStatusLedChange.setStatus('current')
hcxEtherSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 41, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherSerialNumber.setStatus('current')
com21HcxEtherPortTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1), )
if mibBuilder.loadTexts: com21HcxEtherPortTable.setStatus('current')
com21HcxEtherPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1), ).setIndexNames((0, "COM21-HCXETH-MIB", "hcxEtherPortShelfId"), (0, "COM21-HCXETH-MIB", "hcxEtherPortSlotId"), (0, "COM21-HCXETH-MIB", "hcxEtherPortId"))
if mibBuilder.loadTexts: com21HcxEtherPortEntry.setStatus('current')
hcxEtherPortShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortShelfId.setStatus('current')
hcxEtherPortSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortSlotId.setStatus('current')
hcxEtherPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortId.setStatus('current')
hcxEtherPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tenBaseT", 1), ("onehundredBaseT", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortType.setStatus('current')
hcxEtherPortService = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortService.setStatus('current')
hcxEtherPortPrimServState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 6), PrimServiceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortPrimServState.setStatus('current')
hcxEtherPortPrimStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 24)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherPortShelfId"), ("COM21-HCXETH-MIB", "hcxEtherPortSlotId"), ("COM21-HCXETH-MIB", "hcxEtherPortId"), ("COM21-HCXETH-MIB", "hcxEtherPortPrimServState"))
if mibBuilder.loadTexts: hcxEtherPortPrimStateChange.setStatus('current')
hcxEtherPortSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortSecServState.setStatus('current')
hcxEtherPortSecStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 25)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherPortShelfId"), ("COM21-HCXETH-MIB", "hcxEtherPortSlotId"), ("COM21-HCXETH-MIB", "hcxEtherPortId"), ("COM21-HCXETH-MIB", "hcxEtherPortSecServState"))
if mibBuilder.loadTexts: hcxEtherPortSecStateChange.setStatus('current')
hcxEtherMaxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 22222))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherMaxBandwidth.setStatus('current')
hcxEtherAggrDnStrmCbrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrDnStrmCbrRate.setStatus('current')
hcxEtherAggrDnStrmPcrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrDnStrmPcrRate.setStatus('current')
hcxEtherAggrUpStrmCbrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrUpStrmCbrRate.setStatus('current')
hcxEtherAggrUpStrmMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrUpStrmMinRate.setStatus('current')
hcxEtherAggrUpStrmMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrUpStrmMaxRate.setStatus('current')
hcxEtherAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherAgeTime.setStatus('current')
hcxEtherPortConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2000, 2001, 2002))).clone(namedValues=NamedValues(("offline", 2000), ("online", 2001), ("test", 2002)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortConfigState.setStatus('current')
hcxEtherPortRestartAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("restart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortRestartAction.setStatus('current')
hcxEtherPortDiagTestAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortDiagTestAction.setStatus('current')
hcxEtherPortDiagTestComplete = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 26)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherPortShelfId"), ("COM21-HCXETH-MIB", "hcxEtherPortSlotId"), ("COM21-HCXETH-MIB", "hcxEtherPortId"), ("COM21-HCXETH-MIB", "hcxEtherPortDiagTestResult"))
if mibBuilder.loadTexts: hcxEtherPortDiagTestComplete.setStatus('current')
hcxEtherPortDiagTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inprogress", 1), ("success", 2), ("failure", 3), ("invalidState", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortDiagTestResult.setStatus('current')
hcxEtherOperationFailure = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 27)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherPortShelfId"), ("COM21-HCXETH-MIB", "hcxEtherPortSlotId"), ("COM21-HCXETH-MIB", "hcxEtherPortId"))
if mibBuilder.loadTexts: hcxEtherOperationFailure.setStatus('current')
hcxEtherPortLinkStatusLed = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortLinkStatusLed.setStatus('current')
hcxEtherPortLinkStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 28)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXETH-MIB", "hcxEtherPortShelfId"), ("COM21-HCXETH-MIB", "hcxEtherPortSlotId"), ("COM21-HCXETH-MIB", "hcxEtherPortId"), ("COM21-HCXETH-MIB", "hcxEtherPortLinkStatusLed"))
if mibBuilder.loadTexts: hcxEtherPortLinkStatusLedChange.setStatus('current')
hcxEtherPortArpFiltRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10000, 150000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortArpFiltRate.setStatus('deprecated')
hcxEtherAggrActDnStrmCbrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrActDnStrmCbrRate.setStatus('current')
hcxEtherAggrActDnStrmPcrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrActDnStrmPcrRate.setStatus('current')
hcxEtherAggrActUpStrmCbrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrActUpStrmCbrRate.setStatus('current')
hcxEtherAggrActUpStrmMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrActUpStrmMinRate.setStatus('current')
hcxEtherAggrActUpStrmMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherAggrActUpStrmMaxRate.setStatus('current')
hcxEtherPortIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 30), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortIpAddr.setStatus('current')
hcxEtherPortIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 31), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortIpMask.setStatus('current')
hcxEtherPortMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 32), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPortMacAddr.setStatus('current')
hcxEtherPortAutoNegEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortAutoNegEnable.setStatus('current')
hcxEtherPortSpeedSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tenMbpsHalfDuplex", 1), ("tenMbpsFullDuplex", 2), ("hundredMbpsHalfDulplex", 3), ("hundredMbpsFullDuplex", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherPortSpeedSelect.setStatus('current')
hcxEtherCurrPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 42, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("linkFail", 1), ("autoNegPending", 2), ("autoNegFailure", 3), ("tenMbpsHalfDuplex", 4), ("tenMbpsFullDuplex", 5), ("hundredMbpsHalfDulplex", 6), ("hundredMbpsFullDuplex", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherCurrPortState.setStatus('current')
com21HcxEtherStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1), )
if mibBuilder.loadTexts: com21HcxEtherStatsTable.setStatus('current')
com21HcxEtherStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1), ).setIndexNames((0, "COM21-HCXETH-MIB", "hcxEtherStatsShelfId"), (0, "COM21-HCXETH-MIB", "hcxEtherStatsSlotId"), (0, "COM21-HCXETH-MIB", "hcxEtherStatsPortId"))
if mibBuilder.loadTexts: com21HcxEtherStatsEntry.setStatus('current')
hcxEtherStatsShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStatsShelfId.setStatus('current')
hcxEtherStatsSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStatsSlotId.setStatus('current')
hcxEtherStatsPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStatsPortId.setStatus('current')
hcxEtherCurrCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherCurrCollisions.setStatus('current')
hcxEtherCurrRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherCurrRunts.setStatus('current')
hcxEtherCurrGrunts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherCurrGrunts.setStatus('current')
hcxEtherCurrCrcPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherCurrCrcPkts.setStatus('current')
hcxEtherCurrTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherCurrTxPkts.setStatus('current')
hcxEtherCurrRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherCurrRxPkts.setStatus('current')
hcxEtherPrevCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPrevCollisions.setStatus('current')
hcxEtherPrevRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPrevRunts.setStatus('current')
hcxEtherPrevGrunts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPrevGrunts.setStatus('current')
hcxEtherPrevCrcPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPrevCrcPkts.setStatus('current')
hcxEtherPrevTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPrevTxPkts.setStatus('current')
hcxEtherPrevRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherPrevRxPkts.setStatus('current')
hcxEtherClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 43, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherClearStats.setStatus('current')
com21HcxEtherStuStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1), )
if mibBuilder.loadTexts: com21HcxEtherStuStatsTable.setStatus('current')
com21HcxEtherStuStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1), ).setIndexNames((0, "COM21-HCXETH-MIB", "hcxEtherStuStatsMacAddr"))
if mibBuilder.loadTexts: com21HcxEtherStuStatsEntry.setStatus('current')
hcxEtherStuStatsMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuStatsMacAddr.setStatus('current')
hcxEtherStuCurrDnstrmBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuCurrDnstrmBytes.setStatus('current')
hcxEtherStuCurrUpstrmBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuCurrUpstrmBytes.setStatus('current')
hcxEtherStuCurrUpstrmAal5CrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuCurrUpstrmAal5CrcErrs.setStatus('current')
hcxEtherStuCurrDnstrmDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuCurrDnstrmDropPkts.setStatus('current')
hcxEtherStuPrevDnstrmBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuPrevDnstrmBytes.setStatus('current')
hcxEtherStuPrevUpstrmBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuPrevUpstrmBytes.setStatus('current')
hcxEtherStuPrevUpstrmAal5CrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuPrevUpstrmAal5CrcErrs.setStatus('current')
hcxEtherStuPrevDnstrmDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherStuPrevDnstrmDropPkts.setStatus('current')
hcxEtherStuClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 45, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherStuClearStats.setStatus('current')
com21HcxEtherIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 44, 1), )
if mibBuilder.loadTexts: com21HcxEtherIpAddrTable.setStatus('current')
com21HcxEtherIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 44, 1, 1), ).setIndexNames((0, "COM21-HCXETH-MIB", "hcxEtherIpAddrShelfId"), (0, "COM21-HCXETH-MIB", "hcxEtherIpAddrSlotId"), (0, "COM21-HCXETH-MIB", "hcxEtherIpAddrPortId"), (0, "COM21-HCXETH-MIB", "hcxEtherIpAddrIPAddr"))
if mibBuilder.loadTexts: com21HcxEtherIpAddrEntry.setStatus('current')
hcxEtherIpAddrShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 44, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherIpAddrShelfId.setStatus('current')
hcxEtherIpAddrSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 44, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherIpAddrSlotId.setStatus('current')
hcxEtherIpAddrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 44, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherIpAddrPortId.setStatus('current')
hcxEtherIpAddrIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 44, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxEtherIpAddrIPAddr.setStatus('current')
hcxEtherIpAddrIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 44, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxEtherIpAddrIPMask.setStatus('current')
hcxEtherIpAddrIPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 44, 1, 1, 6), Com21RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hcxEtherIpAddrIPStatus.setStatus('current')
com21HcxServGrpAssocTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1), )
if mibBuilder.loadTexts: com21HcxServGrpAssocTable.setStatus('current')
com21HcxServGrpAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1), ).setIndexNames((0, "COM21-HCXETH-MIB", "hcxServGrpAssocShelfId"), (0, "COM21-HCXETH-MIB", "hcxServGrpAssocSlotId"), (0, "COM21-HCXETH-MIB", "hcxServGrpAssocCardType"), (0, "COM21-HCXETH-MIB", "hcxServGrpAssocPortId"), (0, "COM21-HCXETH-MIB", "hcxServGrpAssocEntryId"))
if mibBuilder.loadTexts: com21HcxServGrpAssocEntry.setStatus('current')
hcxServGrpAssocShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocShelfId.setStatus('current')
hcxServGrpAssocSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocSlotId.setStatus('current')
hcxServGrpAssocCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tenBaseT", 1), ("onehundredBaseT", 2), ("oc3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocCardType.setStatus('current')
hcxServGrpAssocPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocPortId.setStatus('current')
hcxServGrpAssocEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocEntryId.setStatus('current')
hcxServGrpAssocRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocRate.setStatus('current')
hcxServGrpAssocType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cbr", 1), ("ondemand", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocType.setStatus('current')
hcxServGrpAssocNumOfVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocNumOfVlans.setStatus('current')
hcxServGrpAssocNumOfStus = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 46, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxServGrpAssocNumOfStus.setStatus('current')
mibBuilder.exportSymbols("COM21-HCXETH-MIB", hcxEtherPortDiagTestComplete=hcxEtherPortDiagTestComplete, hcxEtherRestartAction=hcxEtherRestartAction, hcxEtherPortSlotId=hcxEtherPortSlotId, hcxEtherNoPorts=hcxEtherNoPorts, hcxEtherPortAutoNegEnable=hcxEtherPortAutoNegEnable, hcxEtherStuPrevDnstrmBytes=hcxEtherStuPrevDnstrmBytes, hcxEtherPortService=hcxEtherPortService, hcxEtherPortPrimStateChange=hcxEtherPortPrimStateChange, hcxEtherPortPrimServState=hcxEtherPortPrimServState, hcxServGrpAssocShelfId=hcxServGrpAssocShelfId, hcxEtherCurrPortState=hcxEtherCurrPortState, hcxEtherAggrActUpStrmMinRate=hcxEtherAggrActUpStrmMinRate, hcxEtherPortSpeedSelect=hcxEtherPortSpeedSelect, hcxEtherPortDiagTestResult=hcxEtherPortDiagTestResult, hcxEtherAggrActDnStrmPcrRate=hcxEtherAggrActDnStrmPcrRate, hcxEtherIpAddrPortId=hcxEtherIpAddrPortId, hcxEtherOperationFailure=hcxEtherOperationFailure, hcxServGrpAssocPortId=hcxServGrpAssocPortId, com21HcxEtherPortTable=com21HcxEtherPortTable, hcxEtherAggrActUpStrmMaxRate=hcxEtherAggrActUpStrmMaxRate, hcxServGrpAssocSlotId=hcxServGrpAssocSlotId, hcxEtherAggrDnStrmCbrRate=hcxEtherAggrDnStrmCbrRate, com21HcxEtherStatsEntry=com21HcxEtherStatsEntry, hcxEtherPortConfigState=hcxEtherPortConfigState, hcxEtherUnitSecStateChange=hcxEtherUnitSecStateChange, com21HcxEtherStatsGroup=com21HcxEtherStatsGroup, hcxEtherStuCurrUpstrmBytes=hcxEtherStuCurrUpstrmBytes, hcxEtherIpAddrIPAddr=hcxEtherIpAddrIPAddr, hcxEtherStuCurrDnstrmDropPkts=hcxEtherStuCurrDnstrmDropPkts, hcxEtherStuStatsMacAddr=hcxEtherStuStatsMacAddr, hcxEtherCurrCrcPkts=hcxEtherCurrCrcPkts, hcxEtherPortSecServState=hcxEtherPortSecServState, hcxEtherStuPrevDnstrmDropPkts=hcxEtherStuPrevDnstrmDropPkts, hcxEtherIpAddrIPMask=hcxEtherIpAddrIPMask, com21HcxEtherIpAddrGroup=com21HcxEtherIpAddrGroup, com21HcxServGrpAssocTable=com21HcxServGrpAssocTable, hcxEtherAggrUpStrmMaxRate=hcxEtherAggrUpStrmMaxRate, Com21RowStatus=Com21RowStatus, hcxEtherIpAddrIPStatus=hcxEtherIpAddrIPStatus, com21HcxServGrpAssocGroup=com21HcxServGrpAssocGroup, hcxEtherStatsSlotId=hcxEtherStatsSlotId, hcxEtherPrevCollisions=hcxEtherPrevCollisions, hcxEtherAgeTime=hcxEtherAgeTime, hcxEtherCurrRunts=hcxEtherCurrRunts, hcxServGrpAssocRate=hcxServGrpAssocRate, com21HcxEtherStuStatsEntry=com21HcxEtherStuStatsEntry, hcxEtherPortLinkStatusLedChange=hcxEtherPortLinkStatusLedChange, hcxEtherPortArpFiltRate=hcxEtherPortArpFiltRate, com21HcxEtherPortGroup=com21HcxEtherPortGroup, com21HcxServGrpAssocEntry=com21HcxServGrpAssocEntry, hcxEtherTestStatusLed=hcxEtherTestStatusLed, hcxEtherUnitPrimServState=hcxEtherUnitPrimServState, hcxEtherPortRestartAction=hcxEtherPortRestartAction, com21HcxEtherIpAddrTable=com21HcxEtherIpAddrTable, com21HcxEtherPortEntry=com21HcxEtherPortEntry, hcxEtherPortSecStateChange=hcxEtherPortSecStateChange, hcxEtherStatsPortId=hcxEtherStatsPortId, hcxEtherAggrActUpStrmCbrRate=hcxEtherAggrActUpStrmCbrRate, com21HcxEtherStuStatsGroup=com21HcxEtherStuStatsGroup, hcxEtherUnitSecServState=hcxEtherUnitSecServState, hcxEtherHardwareVersion=hcxEtherHardwareVersion, hcxEtherCurrRxPkts=hcxEtherCurrRxPkts, com21HcxEtherUnitGroup=com21HcxEtherUnitGroup, hcxEtherSlotId=hcxEtherSlotId, hcxEtherPortId=hcxEtherPortId, hcxEtherPrevRunts=hcxEtherPrevRunts, hcxEtherPrevGrunts=hcxEtherPrevGrunts, hcxEtherSerialNumber=hcxEtherSerialNumber, com21HcxEtherUnitEntry=com21HcxEtherUnitEntry, hcxEtherStuCurrDnstrmBytes=hcxEtherStuCurrDnstrmBytes, hcxEtherAggrUpStrmCbrRate=hcxEtherAggrUpStrmCbrRate, hcxEtherPortShelfId=hcxEtherPortShelfId, hcxEtherFaultStatusLed=hcxEtherFaultStatusLed, hcxEtherCurrGrunts=hcxEtherCurrGrunts, hcxEtherPrevTxPkts=hcxEtherPrevTxPkts, hcxEtherPortLinkStatusLed=hcxEtherPortLinkStatusLed, PrimServiceState=PrimServiceState, hcxEtherBootVersion=hcxEtherBootVersion, hcxEtherStatsShelfId=hcxEtherStatsShelfId, hcxServGrpAssocNumOfVlans=hcxServGrpAssocNumOfVlans, hcxEtherCurrTxPkts=hcxEtherCurrTxPkts, hcxEtherCardType=hcxEtherCardType, hcxEtherStuClearStats=hcxEtherStuClearStats, hcxEtherFaultStatusLedChange=hcxEtherFaultStatusLedChange, hcxEtherPortIpMask=hcxEtherPortIpMask, hcxEtherShelfId=hcxEtherShelfId, hcxServGrpAssocEntryId=hcxServGrpAssocEntryId, hcxEtherAggrUpStrmMinRate=hcxEtherAggrUpStrmMinRate, hcxEtherMaxBandwidth=hcxEtherMaxBandwidth, com21HcxEtherIpAddrEntry=com21HcxEtherIpAddrEntry, hcxServGrpAssocType=hcxServGrpAssocType, hcxEtherClearStats=hcxEtherClearStats, hcxEtherPrevRxPkts=hcxEtherPrevRxPkts, com21HcxEtherUnitTable=com21HcxEtherUnitTable, com21HcxEtherStuStatsTable=com21HcxEtherStuStatsTable, hcxEtherPortMacAddr=hcxEtherPortMacAddr, hcxEtherIpAddrSlotId=hcxEtherIpAddrSlotId, hcxEtherTestStatusLedChange=hcxEtherTestStatusLedChange, hcxEtherIpAddrShelfId=hcxEtherIpAddrShelfId, hcxEtherPortType=hcxEtherPortType, hcxEtherStuCurrUpstrmAal5CrcErrs=hcxEtherStuCurrUpstrmAal5CrcErrs, PYSNMP_MODULE_ID=com21HcxEth, hcxEtherCurrCollisions=hcxEtherCurrCollisions, hcxServGrpAssocCardType=hcxServGrpAssocCardType, hcxEtherStuPrevUpstrmBytes=hcxEtherStuPrevUpstrmBytes, hcxEtherStuPrevUpstrmAal5CrcErrs=hcxEtherStuPrevUpstrmAal5CrcErrs, hcxEtherPrevCrcPkts=hcxEtherPrevCrcPkts, hcxEtherUnitPrimStateChange=hcxEtherUnitPrimStateChange, hcxEtherAggrActDnStrmCbrRate=hcxEtherAggrActDnStrmCbrRate, hcxEtherAggrDnStrmPcrRate=hcxEtherAggrDnStrmPcrRate, hcxServGrpAssocNumOfStus=hcxServGrpAssocNumOfStus, hcxEtherPortDiagTestAction=hcxEtherPortDiagTestAction, com21HcxEth=com21HcxEth, hcxEtherPortIpAddr=hcxEtherPortIpAddr, com21HcxEtherStatsTable=com21HcxEtherStatsTable)
