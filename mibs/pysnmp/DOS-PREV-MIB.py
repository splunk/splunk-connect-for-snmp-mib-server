#
# PySNMP MIB module DOS-PREV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOS-PREV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:39:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, TimeTicks, NotificationType, ModuleIdentity, Unsigned32, iso, Counter32, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "NotificationType", "ModuleIdentity", "Unsigned32", "iso", "Counter32", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "Integer32", "Counter64")
TruthValue, DisplayString, RowStatus, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention", "MacAddress")
swDoSMgmtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 59))
if mibBuilder.loadTexts: swDoSMgmtMIB.setLastUpdated('201101240000Z')
if mibBuilder.loadTexts: swDoSMgmtMIB.setOrganization('D-Link Corp.')
swDoSCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 59, 1))
swDoSTrapLog = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("other", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSTrapLog.setStatus('current')
swDoSClearCounters = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("land-attack", 1), ("blat-attack", 2), ("smurf-attack", 3), ("tcp-null-scan", 4), ("tcp-xmascan", 5), ("tcp-synfin", 6), ("tcp-syn-srcport-less-1024", 7), ("all", 8), ("other", 9), ("arp-mac-sa-mismatch", 10), ("fraggle-attack", 11), ("icmp-redirect-attack", 12), ("icmp-unreachable-attack", 13), ("ip-route-record-attac", 14), ("ip-source-route-attack", 15), ("ping-death-attack", 16), ("tcp-flag-synrst", 17), ("tcp-over-mac-mcbc", 18), ("tcp-syn-with-data", 19), ("tcp-tiny-frag-attack", 20), ("tcpudp-port-zero", 21), ("tracert-attack", 22), ("winnuke-attack", 23)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSClearCounters.setStatus('current')
swDoSCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3), )
if mibBuilder.loadTexts: swDoSCtrlTable.setStatus('current')
swDoSCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3, 1), ).setIndexNames((0, "DOS-PREV-MIB", "swDoSCtrlType"))
if mibBuilder.loadTexts: swDoSCtrlEntry.setStatus('current')
swDoSCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("land-attack", 1), ("blat-attack", 2), ("smurf-attack", 3), ("tcp-null-scan", 4), ("tcp-xmascan", 5), ("tcp-synfin", 6), ("tcp-syn-srcport-less-1024", 7), ("arp-mac-sa-mismatch", 10), ("fraggle-attack", 11), ("icmp-redirect-attack", 12), ("icmp-unreachable-attack", 13), ("ip-route-record-attac", 14), ("ip-source-route-attack", 15), ("ping-death-attack", 16), ("tcp-flag-synrst", 17), ("tcp-over-mac-mcbc", 18), ("tcp-syn-with-data", 19), ("tcp-tiny-frag-attack", 20), ("tcpudp-port-zero", 21), ("tracert-attack", 22), ("winnuke-attack", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDoSCtrlType.setStatus('current')
swDoSCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSCtrlState.setStatus('current')
swDoSCtrlActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("mirror", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSCtrlActionType.setStatus('current')
swDoSCtrlMirrorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSCtrlMirrorPort.setStatus('current')
swDoSCtrlMirrorPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSCtrlMirrorPriority.setStatus('current')
swDoSCtrlMirrorRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSCtrlMirrorRxRate.setStatus('current')
swDoSCtrlFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDoSCtrlFrameCount.setStatus('current')
swDoSTrapState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSTrapState.setStatus('current')
swDoSLogState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoSLogState.setStatus('current')
swDoSFunctionVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 59, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDoSFunctionVersion.setStatus('current')
swDoSNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 59, 4))
swDoSNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 59, 4, 0))
swDoSAttackDetected = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 59, 4, 0, 1)).setObjects(("DOS-PREV-MIB", "swDoSCtrlType"), ("DOS-PREV-MIB", "swDoSNotifyVarIpAddr"), ("DOS-PREV-MIB", "swDoSNotifyVarPortNumber"))
if mibBuilder.loadTexts: swDoSAttackDetected.setStatus('current')
swDoSNotifyVarBindings = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 59, 4, 1))
swDoSNotifyVarIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 59, 4, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: swDoSNotifyVarIpAddr.setStatus('current')
swDoSNotifyVarPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 59, 4, 1, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: swDoSNotifyVarPortNumber.setStatus('current')
mibBuilder.exportSymbols("DOS-PREV-MIB", swDoSCtrl=swDoSCtrl, swDoSNotifyPrefix=swDoSNotifyPrefix, swDoSCtrlMirrorPort=swDoSCtrlMirrorPort, swDoSNotifyVarBindings=swDoSNotifyVarBindings, swDoSCtrlEntry=swDoSCtrlEntry, swDoSCtrlState=swDoSCtrlState, swDoSClearCounters=swDoSClearCounters, swDoSAttackDetected=swDoSAttackDetected, swDoSCtrlMirrorPriority=swDoSCtrlMirrorPriority, swDoSMgmtMIB=swDoSMgmtMIB, swDoSCtrlActionType=swDoSCtrlActionType, swDoSNotifyVarPortNumber=swDoSNotifyVarPortNumber, swDoSCtrlMirrorRxRate=swDoSCtrlMirrorRxRate, swDoSNotifyVarIpAddr=swDoSNotifyVarIpAddr, swDoSFunctionVersion=swDoSFunctionVersion, swDoSLogState=swDoSLogState, swDoSNotify=swDoSNotify, PYSNMP_MODULE_ID=swDoSMgmtMIB, swDoSTrapLog=swDoSTrapLog, swDoSCtrlFrameCount=swDoSCtrlFrameCount, swDoSCtrlTable=swDoSCtrlTable, swDoSCtrlType=swDoSCtrlType, swDoSTrapState=swDoSTrapState)
