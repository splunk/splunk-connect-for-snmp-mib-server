#
# PySNMP MIB module HH3C-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
InterfaceIndex, ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex", "ifDescr")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Gauge32, Bits, Counter64, ModuleIdentity, Unsigned32, Integer32, TimeTicks, IpAddress, ObjectIdentity, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "Bits", "Counter64", "ModuleIdentity", "Unsigned32", "Integer32", "TimeTicks", "IpAddress", "ObjectIdentity", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
TextualConvention, TruthValue, RowStatus, TAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "TAddress", "DisplayString")
hh3cTrap = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 38))
hh3cTrap.setRevisions(('2010-06-05 10:50',))
if mibBuilder.loadTexts: hh3cTrap.setLastUpdated('201006051050Z')
if mibBuilder.loadTexts: hh3cTrap.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cTableGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1))
hh3cMacTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 1))
hh3cMacTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMacTabTrapEnable.setStatus('current')
hh3cMacTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMacTabTrapInterval.setStatus('current')
hh3cMacTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 1, 3))
hh3cMacTabLen = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 1, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cMacTabLen.setStatus('current')
hh3cMacTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 1, 4))
hh3cMacTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 1, 4, 1)).setObjects(("HH3C-TRAP-MIB", "hh3cMacTabLen"))
if mibBuilder.loadTexts: hh3cMacTabFullTrap.setStatus('current')
hh3cMacTabAlmostFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 1, 4, 2))
if mibBuilder.loadTexts: hh3cMacTabAlmostFullTrap.setStatus('current')
hh3cArpTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 2))
hh3cArpTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cArpTabTrapEnable.setStatus('current')
hh3cArpTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cArpTabTrapInterval.setStatus('current')
hh3cArpTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 2, 3))
hh3cArpTabLen = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 2, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cArpTabLen.setStatus('current')
hh3cArpTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 2, 4))
hh3cArpTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 2, 4, 1)).setObjects(("HH3C-TRAP-MIB", "hh3cArpTabLen"))
if mibBuilder.loadTexts: hh3cArpTabFullTrap.setStatus('current')
hh3cArpPortDynamicEntryFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 2, 4, 2)).setObjects(("HH3C-TRAP-MIB", "hh3cArpTabLen"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hh3cArpPortDynamicEntryFullTrap.setStatus('current')
hh3cRtTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3))
hh3cDetailRtTrapTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 1), )
if mibBuilder.loadTexts: hh3cDetailRtTrapTable.setStatus('current')
hh3cDetailRtTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 1, 1), ).setIndexNames((0, "HH3C-TRAP-MIB", "hh3cDetailRtProType"))
if mibBuilder.loadTexts: hh3cDetailRtTrapEntry.setStatus('current')
hh3cDetailRtProType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("rip", 3), ("isis", 4), ("ospf", 5), ("bgp", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDetailRtProType.setStatus('current')
hh3cDetailRtEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDetailRtEnable.setStatus('current')
hh3cRtTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cRtTabTrapEnable.setStatus('current')
hh3cRtTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cRtTabTrapInterval.setStatus('current')
hh3cRtTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 4))
hh3cRtTabLen = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 4, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cRtTabLen.setStatus('current')
hh3cDefaultRtNextHopType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 4, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDefaultRtNextHopType.setStatus('current')
hh3cDefaultRtNextHop = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 4, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDefaultRtNextHop.setStatus('current')
hh3cDefaultRtOutIf = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 4, 4), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDefaultRtOutIf.setStatus('current')
hh3cRtTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 5))
hh3cRtTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 5, 1)).setObjects(("HH3C-TRAP-MIB", "hh3cRtTabLen"))
if mibBuilder.loadTexts: hh3cRtTabFullTrap.setStatus('current')
hh3cDetailRtTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 5, 2)).setObjects(("HH3C-TRAP-MIB", "hh3cDetailRtProType"), ("HH3C-TRAP-MIB", "hh3cRtTabLen"))
if mibBuilder.loadTexts: hh3cDetailRtTabFullTrap.setStatus('current')
hh3cDefaultRtDelTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 5, 3)).setObjects(("HH3C-TRAP-MIB", "hh3cDetailRtProType"), ("HH3C-TRAP-MIB", "hh3cDefaultRtNextHopType"), ("HH3C-TRAP-MIB", "hh3cDefaultRtNextHop"), ("HH3C-TRAP-MIB", "hh3cDefaultRtOutIf"))
if mibBuilder.loadTexts: hh3cDefaultRtDelTrap.setStatus('current')
hh3cDefaultRtDelTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 3, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDefaultRtDelTrapEnable.setStatus('current')
hh3cMulticastTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 4))
hh3cMulticastTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMulticastTabTrapEnable.setStatus('current')
hh3cMulticastTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMulticastTabTrapInterval.setStatus('current')
hh3cMulticastTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 4, 3))
hh3cMulticastTabType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lay2", 1), ("lay3", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cMulticastTabType.setStatus('current')
hh3cMulticastTabLen = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 4, 3, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cMulticastTabLen.setStatus('current')
hh3cMulticastTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 4, 4))
hh3cMulticastTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 4, 4, 1)).setObjects(("HH3C-TRAP-MIB", "hh3cMulticastTabType"), ("HH3C-TRAP-MIB", "hh3cMulticastTabLen"))
if mibBuilder.loadTexts: hh3cMulticastTabFullTrap.setStatus('current')
hh3cNdTabStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 5))
hh3cNdTabTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNdTabTrapEnable.setStatus('current')
hh3cNdTabTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNdTabTrapInterval.setStatus('current')
hh3cNdTabTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 5, 3))
hh3cNdTabLen = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 5, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cNdTabLen.setStatus('current')
hh3cNdTabTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 5, 4))
hh3cNdTabFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 5, 4, 1)).setObjects(("HH3C-TRAP-MIB", "hh3cNdTabLen"))
if mibBuilder.loadTexts: hh3cNdTabFullTrap.setStatus('current')
hh3cPeriodicalTrapGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 6))
hh3cPeriodicalTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 6, 1))
hh3cPeriodicalTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 3600), )).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cPeriodicalTrapInterval.setStatus('current')
hh3cPeriodicalTrapSwitch = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cPeriodicalTrapSwitch.setStatus('current')
hh3cPeriodicalTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 6, 2))
hh3cPeriodicalNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 6, 3))
hh3cPeriodicalNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 6, 3, 0))
hh3cPeriodicalTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 6, 3, 0, 1))
if mibBuilder.loadTexts: hh3cPeriodicalTrap.setStatus('current')
hh3cTrapDesInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 7))
hh3cTrapDesInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 7, 1), )
if mibBuilder.loadTexts: hh3cTrapDesInfoTable.setStatus('current')
hh3cTrapDesInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 7, 1, 1), ).setIndexNames((0, "HH3C-TRAP-MIB", "hh3cTrapDesInfoIndex"))
if mibBuilder.loadTexts: hh3cTrapDesInfoEntry.setStatus('current')
hh3cTrapDesInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: hh3cTrapDesInfoIndex.setStatus('current')
hh3cTrapDesIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 7, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTrapDesIPAddress.setStatus('current')
hh3cTrapDesPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTrapDesPort.setStatus('current')
hh3cTrapDesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 7, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTrapDesRowStatus.setStatus('current')
hh3cTrapDesAddrTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 7, 1, 1, 5), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTrapDesAddrTAddress.setStatus('current')
hh3cTrapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 8))
hh3cTrapConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 8, 1), )
if mibBuilder.loadTexts: hh3cTrapConfigTable.setStatus('current')
hh3cTrapConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 8, 1, 1), ).setIndexNames((0, "HH3C-TRAP-MIB", "hh3cTrapConfigIndex"))
if mibBuilder.loadTexts: hh3cTrapConfigEntry.setStatus('current')
hh3cTrapConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cTrapConfigIndex.setStatus('current')
hh3cTrapConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 8, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTrapConfigName.setStatus('current')
hh3cTrapConfigDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 8, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTrapConfigDescr.setStatus('current')
hh3cTrapConfigSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 38, 1, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTrapConfigSwitch.setStatus('current')
mibBuilder.exportSymbols("HH3C-TRAP-MIB", hh3cDefaultRtDelTrap=hh3cDefaultRtDelTrap, hh3cPeriodicalTrapInfo=hh3cPeriodicalTrapInfo, hh3cTrapDesRowStatus=hh3cTrapDesRowStatus, hh3cDetailRtTabFullTrap=hh3cDetailRtTabFullTrap, hh3cArpTabTrapInfo=hh3cArpTabTrapInfo, hh3cMacTabTrapInfo=hh3cMacTabTrapInfo, hh3cRtTabTrap=hh3cRtTabTrap, hh3cTrapDesInfoIndex=hh3cTrapDesInfoIndex, hh3cNdTabTrapInterval=hh3cNdTabTrapInterval, hh3cPeriodicalNotificationPrefix=hh3cPeriodicalNotificationPrefix, hh3cMacTabTrapEnable=hh3cMacTabTrapEnable, hh3cMacTabStatGroup=hh3cMacTabStatGroup, hh3cMacTabAlmostFullTrap=hh3cMacTabAlmostFullTrap, hh3cDetailRtEnable=hh3cDetailRtEnable, hh3cDefaultRtNextHop=hh3cDefaultRtNextHop, hh3cNdTabFullTrap=hh3cNdTabFullTrap, hh3cMacTabTrap=hh3cMacTabTrap, hh3cMulticastTabTrapInterval=hh3cMulticastTabTrapInterval, hh3cTrapDesIPAddress=hh3cTrapDesIPAddress, hh3cTrapDesPort=hh3cTrapDesPort, hh3cTrapConfigName=hh3cTrapConfigName, hh3cPeriodicalTrap=hh3cPeriodicalTrap, hh3cNdTabTrap=hh3cNdTabTrap, hh3cArpTabFullTrap=hh3cArpTabFullTrap, hh3cMulticastTabTrap=hh3cMulticastTabTrap, hh3cMulticastTabStatGroup=hh3cMulticastTabStatGroup, hh3cPeriodicalTrapObjects=hh3cPeriodicalTrapObjects, hh3cMacTabLen=hh3cMacTabLen, hh3cArpTabTrapInterval=hh3cArpTabTrapInterval, hh3cRtTabStatGroup=hh3cRtTabStatGroup, hh3cDetailRtProType=hh3cDetailRtProType, hh3cDetailRtTrapTable=hh3cDetailRtTrapTable, hh3cRtTabTrapInterval=hh3cRtTabTrapInterval, hh3cRtTabTrapInfo=hh3cRtTabTrapInfo, hh3cRtTabFullTrap=hh3cRtTabFullTrap, hh3cMacTabFullTrap=hh3cMacTabFullTrap, hh3cDefaultRtDelTrapEnable=hh3cDefaultRtDelTrapEnable, hh3cMulticastTabTrapInfo=hh3cMulticastTabTrapInfo, hh3cArpTabTrapEnable=hh3cArpTabTrapEnable, hh3cDefaultRtNextHopType=hh3cDefaultRtNextHopType, hh3cDefaultRtOutIf=hh3cDefaultRtOutIf, hh3cRtTabLen=hh3cRtTabLen, hh3cMulticastTabTrapEnable=hh3cMulticastTabTrapEnable, hh3cDetailRtTrapEntry=hh3cDetailRtTrapEntry, hh3cTrapConfig=hh3cTrapConfig, hh3cTrapDesInfo=hh3cTrapDesInfo, hh3cTrapConfigTable=hh3cTrapConfigTable, hh3cTableGroup=hh3cTableGroup, hh3cRtTabTrapEnable=hh3cRtTabTrapEnable, hh3cNdTabLen=hh3cNdTabLen, hh3cTrap=hh3cTrap, hh3cNdTabTrapEnable=hh3cNdTabTrapEnable, hh3cPeriodicalTrapInterval=hh3cPeriodicalTrapInterval, hh3cTrapConfigIndex=hh3cTrapConfigIndex, hh3cMulticastTabFullTrap=hh3cMulticastTabFullTrap, hh3cTrapDesInfoTable=hh3cTrapDesInfoTable, hh3cMacTabTrapInterval=hh3cMacTabTrapInterval, hh3cMulticastTabLen=hh3cMulticastTabLen, hh3cNdTabStatGroup=hh3cNdTabStatGroup, hh3cNdTabTrapInfo=hh3cNdTabTrapInfo, hh3cArpTabLen=hh3cArpTabLen, hh3cPeriodicalTrapGroup=hh3cPeriodicalTrapGroup, hh3cArpPortDynamicEntryFullTrap=hh3cArpPortDynamicEntryFullTrap, hh3cArpTabStatGroup=hh3cArpTabStatGroup, hh3cPeriodicalNotification=hh3cPeriodicalNotification, hh3cArpTabTrap=hh3cArpTabTrap, hh3cTrapConfigEntry=hh3cTrapConfigEntry, hh3cPeriodicalTrapSwitch=hh3cPeriodicalTrapSwitch, hh3cTrapConfigSwitch=hh3cTrapConfigSwitch, hh3cTrapDesInfoEntry=hh3cTrapDesInfoEntry, hh3cTrapConfigDescr=hh3cTrapConfigDescr, hh3cMulticastTabType=hh3cMulticastTabType, PYSNMP_MODULE_ID=hh3cTrap, hh3cTrapDesAddrTAddress=hh3cTrapDesAddrTAddress)
