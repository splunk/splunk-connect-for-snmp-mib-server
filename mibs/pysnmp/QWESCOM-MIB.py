#
# PySNMP MIB module QWESCOM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/QWESCOM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:35:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Counter64, ModuleIdentity, Counter32, Bits, MibIdentifier, Gauge32, Integer32, NotificationType, Unsigned32, enterprises, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "ModuleIdentity", "Counter32", "Bits", "MibIdentifier", "Gauge32", "Integer32", "NotificationType", "Unsigned32", "enterprises", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
class DisplayString(OctetString):
    pass

class PhysAddress(OctetString):
    pass

class TimeDateString(Integer32):
    pass

class Boolean(Integer32):
    pass

qwescom = MibIdentifier((1, 3, 6, 1, 4, 1, 3662))
oemTree = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662))
oem = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662))
qproprietaryMib2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1))
qproducts = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 2))
qslots = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 3))
qFlowClass = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4))
qatm = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5))
qcraftPort = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 6))
qeventGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8))
qextmib = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9))
qmanufactRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10))
qethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11))
qds1_e1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12)).setLabel("qds1-e1")
qconfigManager = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13))
qportManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15))
qip = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16))
qmanagementGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17))
qOamGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18))
qmiscGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 19))
qsnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11))
qigmp = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7))
qsnmpCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 1), )
if mibBuilder.loadTexts: qsnmpCommunityTable.setStatus('mandatory')
qsnmpCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 1, 1), ).setIndexNames((0, "QWESCOM-MIB", "qsnmpCommunityIndex"))
if mibBuilder.loadTexts: qsnmpCommunityEntry.setStatus('mandatory')
qsnmpCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsnmpCommunityIndex.setStatus('mandatory')
qsnmpCommunityRights = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("readonly", 0), ("readwrite", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsnmpCommunityRights.setStatus('optional')
qsnmpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qsnmpCommunityName.setStatus('mandatory')
qsnmpNMSTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 2), )
if mibBuilder.loadTexts: qsnmpNMSTable.setStatus('mandatory')
qsnmpNMSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 2, 1), ).setIndexNames((0, "QWESCOM-MIB", "qsnmpNMSIndex"))
if mibBuilder.loadTexts: qsnmpNMSEntry.setStatus('mandatory')
qsnmpNMSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsnmpNMSIndex.setStatus('mandatory')
qsnmpNMSIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qsnmpNMSIpAddress.setStatus('mandatory')
qsnmpTrapTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 3), )
if mibBuilder.loadTexts: qsnmpTrapTable.setStatus('mandatory')
qsnmpTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 3, 1), ).setIndexNames((0, "QWESCOM-MIB", "qsnmpTrapIndex"))
if mibBuilder.loadTexts: qsnmpTrapEntry.setStatus('mandatory')
qsnmpTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsnmpTrapIndex.setStatus('mandatory')
qsnmpTrapIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qsnmpTrapIpAddress.setStatus('mandatory')
qsnmpForwardTrap = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 1, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qsnmpForwardTrap.setStatus('mandatory')
qClassDefinitionMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qClassDefinitionMaxEntries.setStatus('mandatory')
qClassDefinitionTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2), )
if mibBuilder.loadTexts: qClassDefinitionTable.setStatus('mandatory')
qClassDefinitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1), ).setIndexNames((0, "QWESCOM-MIB", "qClassDefinitionIndex"))
if mibBuilder.loadTexts: qClassDefinitionEntry.setStatus('mandatory')
qClassDefinitionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionIndex.setStatus('mandatory')
qClassDefinitionAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionAlias.setStatus('optional')
qClassDefinitionParentClassID = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionParentClassID.setStatus('optional')
qClassDefinitionFlowType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("dsingres", 2), ("dsegress", 3), ("dsnode", 4), ("invalid", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionFlowType.setStatus('mandatory')
qClassDefinitionSourceIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionSourceIPMask.setStatus('optional')
qClassDefinitionSourceIPLowerBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionSourceIPLowerBound.setStatus('optional')
qClassDefinitionSourceIPUpperBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionSourceIPUpperBound.setStatus('optional')
qClassDefinitionDestIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionDestIPMask.setStatus('optional')
qClassDefinitionDestIPLowerBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionDestIPLowerBound.setStatus('optional')
qClassDefinitionDestIPUpperBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionDestIPUpperBound.setStatus('optional')
qClassDefinitionDSMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionDSMask.setStatus('optional')
qClassDefinitionDSLowerBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionDSLowerBound.setStatus('optional')
qClassDefinitionDSUpperBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionDSUpperBound.setStatus('optional')
qClassDefinitionWellKnownApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61))).clone(namedValues=NamedValues(("unspecified", 0), ("realaudio", 1), ("netmeeting", 2), ("echo", 3), ("discard", 4), ("rip", 5), ("daytime", 5), ("quoteofday", 6), ("msp", 7), ("ftp", 8), ("telnet", 9), ("smtp", 10), ("msg", 11), ("time", 12), ("rap", 13), ("rlp", 14), ("whois", 15), ("login", 16), ("remotemail", 17), ("xns", 18), ("dns", 19), ("sql", 20), ("bootp", 21), ("tftp", 22), ("gopher", 23), ("finger", 24), ("http", 25), ("kerberos", 26), ("npp", 27), ("hostname", 28), ("isotsap", 29), ("remotetelnet", 30), ("sna", 31), ("pop3", 32), ("rpc", 33), ("authentication", 34), ("audionews", 35), ("sftp", 36), ("uucp", 37), ("networktime", 38), ("pwdgen", 39), ("ciscofna", 40), ("ciscotna", 41), ("ciscosys", 42), ("netbios", 43), ("news", 44), ("management", 45), ("send", 46), ("appletalk", 47), ("ipx", 48), ("performancedata", 49), ("ldap", 50), ("novell", 51), ("microsoft", 52), ("doom", 53), ("lotusnotes", 54), ("audiomail", 55), ("videomail", 56), ("autodesk", 57), ("ibm", 58), ("vlsi", 59), ("oracle", 60), ("xwindows", 61)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionWellKnownApplication.setStatus('mandatory')
qClassDefinitionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("all", 0), ("udptcp", 1), ("udp", 2), ("tcp", 3), ("icmp", 4), ("arp", 5), ("rsvp", 6), ("egp", 7), ("ipinip", 8), ("rdp", 9), ("isotp4", 10), ("idrp", 11), ("pvp", 12), ("isoip", 13), ("vines", 14), ("ttp", 15), ("nsfnetigp", 16), ("igrp", 17), ("ospfigp", 18)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionProtocol.setStatus('mandatory')
qClassDefinitionSourcePortLowerBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionSourcePortLowerBound.setStatus('optional')
qClassDefinitionSourcePortUpperBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionSourcePortUpperBound.setStatus('optional')
qClassDefinitionDestPortLowerBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionDestPortLowerBound.setStatus('optional')
qClassDefinitionDestPortUpperBound = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionDestPortUpperBound.setStatus('optional')
qClassDefinitionFlowAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qClassDefinitionFlowAgingTime.setStatus('mandatory')
qPolicyDefinitionMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionMaxEntries.setStatus('mandatory')
qPolicyDefinitionTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4), )
if mibBuilder.loadTexts: qPolicyDefinitionTable.setStatus('mandatory')
qPolicyDefinitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1), ).setIndexNames((0, "QWESCOM-MIB", "qPolicyDefinitionIndex"))
if mibBuilder.loadTexts: qPolicyDefinitionEntry.setStatus('mandatory')
qPolicyDefinitionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionIndex.setStatus('mandatory')
qPolicyDefinitionAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionAlias.setStatus('optional')
qPolicyDefinitionType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("normal", 1), ("dsingress", 2), ("dsnode", 3), ("dsegress", 4), ("discard", 5), ("delete", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionType.setStatus('optional')
qPolicyDefinitionLP = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionLP.setStatus('optional')
qPolicyDefinitionStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 5), TimeDateString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionStartTime.setStatus('optional')
qPolicyDefinitionEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 6), TimeDateString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionEndTime.setStatus('optional')
qPolicyDefinitionDayofWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionDayofWeek.setStatus('optional')
qPolicyDefinitionPipeID = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionPipeID.setStatus('mandatory')
qPolicyDefinitionClassID = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionClassID.setStatus('mandatory')
qPolicyDefinitionChannelized = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionChannelized.setStatus('optional')
qPolicyDefinitionOutboundDSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionOutboundDSValue.setStatus('optional')
qPolicyDefinitionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionPriority.setStatus('optional')
qPolicyDefinitionEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("time", 2), ("reducedbw", 3), ("increasedbw", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPolicyDefinitionEvent.setStatus('mandatory')
qPipeDefinitionMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qPipeDefinitionMaxEntries.setStatus('mandatory')
qPipeDefinitionTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6), )
if mibBuilder.loadTexts: qPipeDefinitionTable.setStatus('mandatory')
qPipeDefinitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1), ).setIndexNames((0, "QWESCOM-MIB", "qPipeDefinitionIndex"))
if mibBuilder.loadTexts: qPipeDefinitionEntry.setStatus('mandatory')
qPipeDefinitionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPipeDefinitionIndex.setStatus('mandatory')
qPipeDefinitionAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPipeDefinitionAlias.setStatus('optional')
qPipeDefinitionType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPipeDefinitionType.setStatus('optional')
qPipeDefinitionCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPipeDefinitionCircuitID.setStatus('optional')
qPipeDefinitionBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPipeDefinitionBandwidth.setStatus('optional')
qPipeDefinitionPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qPipeDefinitionPeak.setStatus('optional')
qPipeDefinitionMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qPipeDefinitionMBS.setStatus('mandatory')
qPipeDefinitionBufferAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPipeDefinitionBufferAllocation.setStatus('mandatory')
qPipeDefinitionDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPipeDefinitionDelay.setStatus('mandatory')
qPipeDefinitionPhyIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qPipeDefinitionPhyIdx.setStatus('mandatory')
qPipeDefinitionPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qPipeDefinitionPhyType.setStatus('mandatory')
qClassStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 7), )
if mibBuilder.loadTexts: qClassStatisticsTable.setStatus('mandatory')
qClassStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 7, 1), ).setIndexNames((0, "QWESCOM-MIB", "qClassStatisticsIndex"))
if mibBuilder.loadTexts: qClassStatisticsEntry.setStatus('mandatory')
qClassStatisticsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qClassStatisticsIndex.setStatus('mandatory')
qClassStatisticsAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qClassStatisticsAlias.setStatus('mandatory')
qClassStatisticsTransmittedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qClassStatisticsTransmittedCount.setStatus('mandatory')
qClassStatisticsDiscardCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qClassStatisticsDiscardCount.setStatus('mandatory')
qClassStatisticsFallbackCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 4, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qClassStatisticsFallbackCount.setStatus('mandatory')
qatmCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1), )
if mibBuilder.loadTexts: qatmCircuitTable.setStatus('mandatory')
qatmCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1), ).setIndexNames((0, "QWESCOM-MIB", "qatmCircuitId"))
if mibBuilder.loadTexts: qatmCircuitEntry.setStatus('mandatory')
qatmCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmCircuitId.setStatus('mandatory')
qatmCircuitAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 52))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmCircuitAlias.setStatus('mandatory')
qatmCircuitUNI = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmCircuitUNI.setStatus('mandatory')
qatmCircuitLogicalInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmCircuitLogicalInterface.setStatus('mandatory')
qatmCircuitVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmCircuitVpi.setStatus('mandatory')
qatmCircuitFirstVci = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmCircuitFirstVci.setStatus('mandatory')
qatmCircuitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cell", 1), ("packet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmCircuitMode.setStatus('mandatory')
qatmCircuitStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("deltete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmCircuitStatus.setStatus('mandatory')
qatmUniTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2), )
if mibBuilder.loadTexts: qatmUniTable.setStatus('mandatory')
qatmUniEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qatmUniEntry.setStatus('mandatory')
qatmSpanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmSpanPort.setStatus('mandatory')
qatmUniName = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniName.setStatus('mandatory')
qatmUniAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniAlias.setStatus('mandatory')
qatmUniTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniTrapStatus.setStatus('mandatory')
qatmUniMaxQueueDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniMaxQueueDelay.setStatus('mandatory')
qatmUniMinAllocBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniMinAllocBuffer.setStatus('mandatory')
qatmUniSharedBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniSharedBuffer.setStatus('mandatory')
qatmUniLinkBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniLinkBandwidth.setStatus('mandatory')
qatmUniLinkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniLinkDelay.setStatus('mandatory')
qatmUniBandwidthGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniBandwidthGranularity.setStatus('mandatory')
qatmUniIlmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniIlmiStatus.setStatus('mandatory')
qatmUniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 2, 1, 12), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmUniRowStatus.setStatus('mandatory')
qatmVplTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3), )
if mibBuilder.loadTexts: qatmVplTable.setStatus('mandatory')
qatmVplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"), (0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qatmVplEntry.setStatus('mandatory')
qatmVplMaxVcc = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVplMaxVcc.setStatus('mandatory')
qatmVplLowestVci = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVplLowestVci.setStatus('mandatory')
qatmVplMaxQueueDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVplMaxQueueDelay.setStatus('mandatory')
qatmVplReservedBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVplReservedBuffer.setStatus('mandatory')
qatmVplBwGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVplBwGranularity.setStatus('mandatory')
qatmVplMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVplMtu.setStatus('mandatory')
qatmVplSharedBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVplSharedBuffer.setStatus('mandatory')
qatmVclTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 4), )
if mibBuilder.loadTexts: qatmVclTable.setStatus('mandatory')
qatmVclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 4, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"), (0, "QWESCOM-MIB", "ifIndex"), (0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qatmVclEntry.setStatus('mandatory')
qatmVclBwGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVclBwGranularity.setStatus('mandatory')
qatmVclMaxSubChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVclMaxSubChannels.setStatus('mandatory')
qatmVclMaxQueueDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVclMaxQueueDelay.setStatus('mandatory')
qatmVclReservedBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVclReservedBuffer.setStatus('mandatory')
qatmVclSharedBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmVclSharedBuffer.setStatus('mandatory')
qatmAal5Table = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5), )
if mibBuilder.loadTexts: qatmAal5Table.setStatus('mandatory')
qatmAal5Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qatmAal5Entry.setStatus('mandatory')
qatmAal5Uni = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmAal5Uni.setStatus('mandatory')
qatmAal5Aal5Name = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmAal5Aal5Name.setStatus('mandatory')
qatmAal5Aal5Alias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmAal5Aal5Alias.setStatus('mandatory')
qatmAal5AdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmAal5AdminStatus.setStatus('mandatory')
qatmAal5TrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmAal5TrapStatus.setStatus('mandatory')
qatmAal5MtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmAal5MtuSize.setStatus('mandatory')
qatmAal5RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmAal5RowStatus.setStatus('mandatory')
qatmTrafficDescriptorTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 6), )
if mibBuilder.loadTexts: qatmTrafficDescriptorTable.setStatus('mandatory')
qatmTrafficDescriptorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 6, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qatmTrafficDescriptorEntry.setStatus('mandatory')
qatmTrafficDescriptorAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qatmTrafficDescriptorAlias.setStatus('mandatory')
qatmTcTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 7), )
if mibBuilder.loadTexts: qatmTcTable.setStatus('mandatory')
qatmTcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 7, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qatmTcEntry.setStatus('mandatory')
qatmTcCellSync = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmTcCellSync.setStatus('mandatory')
qatmTcPortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmTcPortErrors.setStatus('mandatory')
qatmTcDmaErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmTcDmaErrors.setStatus('mandatory')
qatmInvalidCells = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmInvalidCells.setStatus('mandatory')
qatmCellsForInactiveVcc = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmCellsForInactiveVcc.setStatus('mandatory')
qatmAal5VccStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8), )
if mibBuilder.loadTexts: qatmAal5VccStatsTable.setStatus('mandatory')
qatmAal5VccStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"), (0, "QWESCOM-MIB", "ifIndex"), (0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qatmAal5VccStatsEntry.setStatus('mandatory')
qatmAal5VccStatsInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmAal5VccStatsInBytes.setStatus('mandatory')
qatmAal5VccStatsOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmAal5VccStatsOutBytes.setStatus('mandatory')
qatmAal5VccStatsInSdus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmAal5VccStatsInSdus.setStatus('mandatory')
qatmAal5VccStatsOutSdus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmAal5VccStatsOutSdus.setStatus('mandatory')
qatmAal5VccStatsErrsAndDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmAal5VccStatsErrsAndDiscards.setStatus('mandatory')
qatmAal5VccStatsLengthMismatchs = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmAal5VccStatsLengthMismatchs.setStatus('mandatory')
qatmAal5VccStatsUserAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmAal5VccStatsUserAborts.setStatus('mandatory')
qatmAal5VccStatsPoolDepleteds = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 5, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qatmAal5VccStatsPoolDepleteds.setStatus('mandatory')
qcpStatus = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcpStatus.setStatus('mandatory')
qcpBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("br-1200", 0), ("br-2400", 1), ("br-4800", 2), ("br-9600", 3), ("br-14400", 4), ("br-19200", 5), ("br-28800", 6), ("br-38400", 7), ("br-57600", 8), ("br-115200", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcpBaudRate.setStatus('mandatory')
qcpStopBitLength = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sb-1", 0), ("sb-2", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcpStopBitLength.setStatus('mandatory')
qcpParity = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("even", 0), ("odd", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcpParity.setStatus('mandatory')
qcpDataBits = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("db-7", 0), ("db-8", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcpDataBits.setStatus('mandatory')
qcpCharsSent = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 6, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcpCharsSent.setStatus('mandatory')
qcpCharsReceived = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcpCharsReceived.setStatus('mandatory')
qEventConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 1), )
if mibBuilder.loadTexts: qEventConfigTable.setStatus('mandatory')
qEventConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 1, 1), ).setIndexNames((0, "QWESCOM-MIB", "qEventConfigIndex"))
if mibBuilder.loadTexts: qEventConfigEntry.setStatus('mandatory')
qEventConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventConfigIndex.setStatus('mandatory')
qEventSeverityType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fatal", 1), ("critical", 2), ("mild", 3), ("standard-snmp", 4), ("informational", 5), ("debug", 6))).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventSeverityType.setStatus('mandatory')
qLogFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("alarm", 1), ("system", 2), ("none", 3))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qLogFileType.setStatus('mandatory')
qLogOption = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qLogOption.setStatus('mandatory')
qDisplayOption = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qDisplayOption.setStatus('mandatory')
qTrapOption = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qTrapOption.setStatus('mandatory')
qEventSystemTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 2), )
if mibBuilder.loadTexts: qEventSystemTable.setStatus('mandatory')
qEventSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 2, 1), ).setIndexNames((0, "QWESCOM-MIB", "qEventSystemIndex"))
if mibBuilder.loadTexts: qEventSystemEntry.setStatus('mandatory')
qEventSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventSystemIndex.setStatus('mandatory')
qEventSystemDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventSystemDateTime.setStatus('mandatory')
qEventSystemType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fatal", 1), ("critical", 2), ("mild", 3), ("standard-snmp", 4), ("informational", 5), ("debug", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventSystemType.setStatus('mandatory')
qEventSystemSubSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("general-subsystem", 1), ("ip-subsystem", 2), ("atm-subsystem", 3), ("ethernet-subsystem", 4), ("tftp-subsystem", 5), ("telnet-subsystem", 6), ("clip-subsystem", 7), ("flash-subsystem", 8), ("flow-subsystem", 9), ("serial-subsystem", 10), ("port-manager-subsystem", 11), ("get-subsystem", 12), ("oam-subsystem", 13), ("reset-subsystem", 14), ("time-subsystem", 15), ("icmp-subsystem", 16), ("igmp-subsystem", 17), ("ping-subsystem", 18), ("snmp-subsystem", 19), ("tcp-subsystem", 20), ("upd-subsystem", 21), ("lp-subsystem", 22), ("lif-subsystem", 23), ("circuit-subsystem", 24), ("arp-subsystem", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventSystemSubSystem.setStatus('mandatory')
qEventSystemID_Number = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 2, 1, 5), Integer32()).setLabel("qEventSystemID-Number").setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventSystemID_Number.setStatus('mandatory')
qEventSystemDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventSystemDescription.setStatus('mandatory')
qEventAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 3), )
if mibBuilder.loadTexts: qEventAlarmTable.setStatus('mandatory')
qEventAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 3, 1), ).setIndexNames((0, "QWESCOM-MIB", "qEventAlarmIndex"))
if mibBuilder.loadTexts: qEventAlarmEntry.setStatus('mandatory')
qEventAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventAlarmIndex.setStatus('mandatory')
qEventAlarmDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventAlarmDateTime.setStatus('mandatory')
qEventAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fatal", 1), ("critical", 2), ("mild", 3), ("standard-snmp", 4), ("informational", 5), ("debug", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventAlarmType.setStatus('mandatory')
qEventAlarmSubSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("general-subsystem", 1), ("ip-subsystem", 2), ("atm-subsystem", 3), ("ethernet-subsystem", 4), ("tftp-subsystem", 5), ("telnet-subsystem", 6), ("clip-subsystem", 7), ("flash-subsystem", 8), ("flow-subsystem", 9), ("serial-subsystem", 10), ("port-manager-subsystem", 11), ("get-subsystem", 12), ("oam-subsystem", 13), ("reset-subsystem", 14), ("time-subsystem", 15), ("icmp-subsystem", 16), ("igmp-subsystem", 17), ("ping-subsystem", 18), ("snmp-subsystem", 19), ("tcp-subsystem", 20), ("upd-subsystem", 21), ("lp-subsystem", 22), ("lif-subsystem", 23), ("circuit-subsystem", 24), ("arp-subsystem", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventAlarmSubSystem.setStatus('mandatory')
qEventAlarmID_Number = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 3, 1, 5), Integer32()).setLabel("qEventAlarmID-Number").setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventAlarmID_Number.setStatus('mandatory')
qEventAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 8, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qEventAlarmDescription.setStatus('mandatory')
qipExt = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 1))
qarpExt = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 2))
qripExt = MibIdentifier((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3))
qipCircExtTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 1, 1), )
if mibBuilder.loadTexts: qipCircExtTable.setStatus('mandatory')
qipCircExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 1, 1, 1), ).setIndexNames((0, "QWESCOM-MIB", "qipCircExtIndex"))
if mibBuilder.loadTexts: qipCircExtEntry.setStatus('mandatory')
qipCircExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qipCircExtIndex.setStatus('mandatory')
qipCircExtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qipCircExtIfIndex.setStatus('mandatory')
qipCircExtAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qipCircExtAdminState.setStatus('mandatory')
qipCircExtOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qipCircExtOperState.setStatus('mandatory')
qarpExtTtl = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qarpExtTtl.setStatus('mandatory')
qarpCircExtTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 2, 2), )
if mibBuilder.loadTexts: qarpCircExtTable.setStatus('mandatory')
qarpCircExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 2, 2, 1), ).setIndexNames((0, "QWESCOM-MIB", "qarpCircExtIndex"))
if mibBuilder.loadTexts: qarpCircExtEntry.setStatus('mandatory')
qarpCircExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpCircExtIndex.setStatus('mandatory')
qarpCircExtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpCircExtIfIndex.setStatus('mandatory')
qarpCircExtDoProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qarpCircExtDoProxy.setStatus('mandatory')
qarpCircExtDoResp = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpCircExtDoResp.setStatus('mandatory')
qripExtAdminState = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qripExtAdminState.setStatus('mandatory')
qripExtUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qripExtUpdateTime.setStatus('mandatory')
qripCircExtTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 3), )
if mibBuilder.loadTexts: qripCircExtTable.setStatus('mandatory')
qripCircExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 3, 1), ).setIndexNames((0, "QWESCOM-MIB", "qripCircExtIndex"))
if mibBuilder.loadTexts: qripCircExtEntry.setStatus('mandatory')
qripCircExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qripCircExtIndex.setStatus('mandatory')
qripCircExtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qripCircExtIfIndex.setStatus('mandatory')
qripCircExtTalk = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qripCircExtTalk.setStatus('mandatory')
qripCircExtListen = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qripCircExtListen.setStatus('mandatory')
qripCircExtPoison = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 9, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qripCircExtPoison.setStatus('mandatory')
qmrCheckSum = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrCheckSum.setStatus('mandatory')
qmrBurnDate = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrBurnDate.setStatus('mandatory')
qmrBurnTime = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrBurnTime.setStatus('mandatory')
qmrOemName = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrOemName.setStatus('mandatory')
qmrOemID = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrOemID.setStatus('mandatory')
qmrSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrSerialNumber.setStatus('mandatory')
qmrProductID = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("qwes-span", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrProductID.setStatus('mandatory')
qmrModelID = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prototype", 1), ("rev3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrModelID.setStatus('mandatory')
qmrMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 9), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrMacAddress.setStatus('mandatory')
qmrRepairTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 10), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrRepairTable.setStatus('mandatory')
qmrRepairEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 10, 1), ).setMaxAccess("readonly").setIndexNames((0, "QWESCOM-MIB", "qmrRepType"), (0, "QWESCOM-MIB", "qmrRepCode"))
if mibBuilder.loadTexts: qmrRepairEntry.setStatus('mandatory')
qmrRepType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("repair", 1), ("eco", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrRepType.setStatus('mandatory')
qmrRepCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrRepCode.setStatus('mandatory')
qmrRepDate = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrRepDate.setStatus('mandatory')
qmrRepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 10, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qmrRepTime.setStatus('mandatory')
qethernetCfgTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11, 1), )
if mibBuilder.loadTexts: qethernetCfgTable.setStatus('mandatory')
qethernetCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11, 1, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qethernetCfgEntry.setStatus('mandatory')
qethernetMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11, 1, 1, 1), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qethernetMacAddress.setStatus('mandatory')
qethernetSpeedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("full-duplex-100-mbps", 1), ("full-duplex-10-mbps", 2), ("half-duplex-100-mbps", 3), ("half-duplex-10-mbps", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qethernetSpeedMode.setStatus('mandatory')
qethernetEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("etherv2encap", 1), ("ieee8023encap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qethernetEncapsulation.setStatus('mandatory')
qethernetAutoSense = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qethernetAutoSense.setStatus('mandatory')
qethernetName = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qethernetName.setStatus('mandatory')
qethernetCurrentSpeedMode = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("full-duplex-100-mbps", 1), ("full-duplex-10-mbps", 2), ("half-duplex-100-mbps", 3), ("half-duplex-10-mbps", 4), ("no-link", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qethernetCurrentSpeedMode.setStatus('mandatory')
qds1AutoClockSourceSearching = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1AutoClockSourceSearching.setStatus('mandatory')
qds1PrimaryClockSource = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("span-1", 2), ("span-2", 3), ("span-3", 4), ("span-4", 5), ("span-5", 6), ("span-6", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1PrimaryClockSource.setStatus('mandatory')
qds1PrimaryClockSourceAction = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use-current-source", 1), ("restore-to-primary-source", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1PrimaryClockSourceAction.setStatus('mandatory')
qds1SpanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 4), )
if mibBuilder.loadTexts: qds1SpanCfgTable.setStatus('mandatory')
qds1SpanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 4, 1), ).setIndexNames((0, "QWESCOM-MIB", "qds1LineCfgIndex"))
if mibBuilder.loadTexts: qds1SpanCfgEntry.setStatus('mandatory')
qds1LineCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qds1LineCfgIndex.setStatus('mandatory')
qds1LineBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("line-build-out-133-ft", 1), ("line-build-out-266-ft", 2), ("line-build-out-399-ft", 3), ("line-build-out-533-ft", 4), ("line-build-out-655-ft", 5), ("line-build-out-n7-5db", 6), ("line-build-out-n15db", 7), ("line-build-out-n22-5db", 8), ("not-applicable", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1LineBuildOut.setStatus('mandatory')
qds1ClockSourceEligibility = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eligible", 1), ("ineligible", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1ClockSourceEligibility.setStatus('mandatory')
qds1ClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("slavetonetwork", 1), ("providemasterclock", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1ClockMode.setStatus('mandatory')
qds1PerformanceMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1PerformanceMonitor.setStatus('optional')
qds1Scrambler = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1Scrambler.setStatus('optional')
qds1SpanLoopBackCmdTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 5), )
if mibBuilder.loadTexts: qds1SpanLoopBackCmdTable.setStatus('mandatory')
qds1SpanLoopBackCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 5, 1), ).setIndexNames((0, "QWESCOM-MIB", "qds1LineLoopbackIndex"))
if mibBuilder.loadTexts: qds1SpanLoopBackCmdEntry.setStatus('mandatory')
qds1LineLoopbackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qds1LineLoopbackIndex.setStatus('mandatory')
qds1LoopbackCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("deactivate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1LoopbackCommand.setStatus('mandatory')
qds1LoopbackDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qds1LoopbackDuration.setStatus('mandatory')
qds1SpanLoopBackStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 6), )
if mibBuilder.loadTexts: qds1SpanLoopBackStatsTable.setStatus('mandatory')
qds1SpanLoopBackStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 6, 1), ).setIndexNames((0, "QWESCOM-MIB", "qds1LineLoopbackStatIndex"))
if mibBuilder.loadTexts: qds1SpanLoopBackStatsEntry.setStatus('mandatory')
qds1LineLoopbackStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qds1LineLoopbackStatIndex.setStatus('mandatory')
qds1OamSegmentSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qds1OamSegmentSent.setStatus('mandatory')
qds1OamSegmentReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qds1OamSegmentReceived.setStatus('mandatory')
qds1OamSegmentFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qds1OamSegmentFailures.setStatus('mandatory')
qds10amRunnigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 12, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qds10amRunnigTime.setStatus('mandatory')
qcmSystemFile = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmSystemFile.setStatus('mandatory')
qcmConfigMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmConfigMaxEntries.setStatus('mandatory')
qcmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3), )
if mibBuilder.loadTexts: qcmConfigTable.setStatus('mandatory')
qcmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1), ).setIndexNames((0, "QWESCOM-MIB", "qcmTableIndex"))
if mibBuilder.loadTexts: qcmConfigEntry.setStatus('mandatory')
qcmTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmTableIndex.setStatus('mandatory')
qcmCurrentConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmCurrentConfig.setStatus('mandatory')
qcmActionOnConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("delete", 1), ("activatenow", 2), ("activatelater", 3), ("save", 4), ("saveas", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmActionOnConfig.setStatus('mandatory')
qcmFileAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmFileAlias.setStatus('mandatory')
qcmRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmRelease.setStatus('mandatory')
qcmConfigFile = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmConfigFile.setStatus('mandatory')
qcmBootSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmBootSequence.setStatus('mandatory')
qcmCreateDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmCreateDateTime.setStatus('mandatory')
qcmOperSchedDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmOperSchedDateTime.setStatus('mandatory')
qcmReleaseTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 4), )
if mibBuilder.loadTexts: qcmReleaseTable.setStatus('mandatory')
qcmReleaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 4, 1), ).setIndexNames((0, "QWESCOM-MIB", "qcmReleaseIndex"))
if mibBuilder.loadTexts: qcmReleaseEntry.setStatus('mandatory')
qcmReleaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmReleaseIndex.setStatus('mandatory')
qcmReleaseName = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmReleaseName.setStatus('mandatory')
qcmReleaseVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmReleaseVersion.setStatus('mandatory')
qcmConfigVerTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 5), )
if mibBuilder.loadTexts: qcmConfigVerTable.setStatus('mandatory')
qcmConfigVerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 5, 1), ).setIndexNames((0, "QWESCOM-MIB", "qcmConfigVerIndex"))
if mibBuilder.loadTexts: qcmConfigVerEntry.setStatus('mandatory')
qcmConfigVerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmConfigVerIndex.setStatus('mandatory')
qcmConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmConfigName.setStatus('mandatory')
qcmConfigVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmConfigVersion.setStatus('mandatory')
qcmConfigWorkWithMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmConfigWorkWithMin.setStatus('mandatory')
qcmConfigWorkWithMax = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qcmConfigWorkWithMax.setStatus('mandatory')
qcmWhichFile = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("operational", 0), ("base", 1), ("new", 2), ("default", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmWhichFile.setStatus('mandatory')
qcmUserBaseCfgFile = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmUserBaseCfgFile.setStatus('mandatory')
qcmUserNewCfgFile = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmUserNewCfgFile.setStatus('mandatory')
qcmUserFileAlias = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmUserFileAlias.setStatus('mandatory')
qcmUserRelease = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmUserRelease.setStatus('mandatory')
qcmUserBootSequence = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmUserBootSequence.setStatus('mandatory')
qcmUserDateTime = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmUserDateTime.setStatus('mandatory')
qcmStartConfig = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmStartConfig.setStatus('mandatory')
qcmStopConfig = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmStopConfig.setStatus('mandatory')
qcmStartViewConfig = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmStartViewConfig.setStatus('mandatory')
qcmStopViewConfig = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmStopViewConfig.setStatus('mandatory')
qcmCancelConfig = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 13, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qcmCancelConfig.setStatus('mandatory')
qwesLpTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1), )
if mibBuilder.loadTexts: qwesLpTable.setStatus('mandatory')
qwesLpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qwesLpEntry.setStatus('mandatory')
qwesLpName = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLpName.setStatus('current')
qwesLpAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLpAlias.setStatus('current')
qwesLpPhysicalInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLpPhysicalInterface.setStatus('mandatory')
qwesLpDataLinkInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 88))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLpDataLinkInterface.setStatus('mandatory')
qwesLpTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLpTrapStatus.setStatus('mandatory')
qwesLpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLpAdminStatus.setStatus('mandatory')
qwesLpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 1, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLpRowStatus.setStatus('mandatory')
qwesLifTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 2), )
if mibBuilder.loadTexts: qwesLifTable.setStatus('mandatory')
qwesLifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 2, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qwesLifEntry.setStatus('mandatory')
qwesLifName = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLifName.setStatus('current')
qwesLifAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLifAlias.setStatus('current')
qwesLifLpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(257, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLifLpIndex.setStatus('mandatory')
qwesLifTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLifTrapStatus.setStatus('mandatory')
qwesLifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLifAdminStatus.setStatus('mandatory')
qwesLifRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 2, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qwesLifRowStatus.setStatus('mandatory')
qwesAtmArpTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 3), )
if mibBuilder.loadTexts: qwesAtmArpTable.setStatus('mandatory')
qwesAtmArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 3, 1), ).setIndexNames((0, "QWESCOM-MIB", "ifIndex"))
if mibBuilder.loadTexts: qwesAtmArpEntry.setStatus('mandatory')
qwesAtmArpLifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 15, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qwesAtmArpLifIndex.setStatus('mandatory')
qSysTime = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qSysTime.setStatus('mandatory')
qTftpType = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qTftpType.setStatus('mandatory')
qTftpFileName = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qTftpFileName.setStatus('mandatory')
qTftpServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qTftpServerIpAddress.setStatus('mandatory')
qTftpServerFileName = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qTftpServerFileName.setStatus('mandatory')
qTftpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qTftpAdminStatus.setStatus('mandatory')
qTftpOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qTftpOperStatus.setStatus('mandatory')
qTftpRxCount = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qTftpRxCount.setStatus('mandatory')
qTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 17, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("eniwetok", 1), ("samoa", 2), ("hawaii", 3), ("alaska", 4), ("pacific", 5), ("arizona", 6), ("mountain", 7), ("central", 8), ("atlantic", 9), ("newfoundland", 10), ("buenos-aires", 11), ("mid-atlantic", 12), ("azores", 13), ("gmt", 14), ("paris", 15), ("israel", 16), ("moscow", 17), ("tehran", 18), ("abu-dhabi", 19), ("islamabad", 20), ("almaty", 21), ("bangkok", 22), ("beijing", 23), ("tokyo", 24), ("brisbane", 25), ("new-caledonia", 26), ("auckland", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qTimeZone.setStatus('mandatory')
qipPortTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1), )
if mibBuilder.loadTexts: qipPortTable.setStatus('mandatory')
qipPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1, 1), ).setIndexNames((0, "QWESCOM-MIB", "qIpLp"))
if mibBuilder.loadTexts: qipPortEntry.setStatus('mandatory')
qIpLp = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIpLp.setStatus('current')
qIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIpAddr.setStatus('mandatory')
qIpSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIpSubnet.setStatus('mandatory')
qIpMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIpMulticast.setStatus('current')
qIpRipStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIpRipStatus.setStatus('current')
qIpArpTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIpArpTimeout.setStatus('current')
qIpEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("hp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIpEncap.setStatus('current')
qRipPortTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2), )
if mibBuilder.loadTexts: qRipPortTable.setStatus('mandatory')
qRipPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1), ).setIndexNames((0, "QWESCOM-MIB", "qRipIpAddr"))
if mibBuilder.loadTexts: qRipPortEntry.setStatus('mandatory')
qRipIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qRipIpAddr.setStatus('mandatory')
qMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("password", 2), ("md5", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qMode.setStatus('current')
qAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qAuthentication.setStatus('current')
qSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("poisoned-reverse", 1), ("simple", 2), ("disable", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qSplitHorizon.setStatus('current')
qAdvertiseStaticRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qAdvertiseStaticRoutes.setStatus('current')
qAdvertiseIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qAdvertiseIntf.setStatus('current')
qBroadcastType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("direct-with-ones", 2), ("direct-with-zeros", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qBroadcastType.setStatus('current')
qHoldDownInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qHoldDownInterval.setStatus('current')
qUpdatesSend = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("silent", 1), ("version-1", 2), ("rip-1-compatible", 3), ("version-2", 4), ("version-1-demand", 5), ("version-2-demand", 6))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qUpdatesSend.setStatus('current')
qUpdatesReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 3))).clone(namedValues=NamedValues(("rip1", 1), ("rip2", 2), ("rip1-or-rip2", 3), ("none", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qUpdatesReceive.setStatus('current')
qDefaultRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qDefaultRouteMetric.setStatus('current')
qStaticArpTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 3), )
if mibBuilder.loadTexts: qStaticArpTable.setStatus('mandatory')
qStaticArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 3, 1), ).setIndexNames((0, "QWESCOM-MIB", "qStaticArpAddr"))
if mibBuilder.loadTexts: qStaticArpEntry.setStatus('mandatory')
qStaticArpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qStaticArpAddr.setStatus('mandatory')
qLif = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(513, 1536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qLif.setStatus('mandatory')
qPhysType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("atm-and-others", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qPhysType.setStatus('mandatory')
qMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 3, 1, 4), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qMacAddr.setStatus('mandatory')
qType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add-activate", 1), ("add-not-activate", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qType.setStatus('mandatory')
qipTtl = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 4), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qipTtl.setStatus('mandatory')
qipRoutePriority = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rip", 1), ("static", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qipRoutePriority.setStatus('mandatory')
qipRipStatus = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qipRipStatus.setStatus('mandatory')
qigmpInMsgs = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qigmpInMsgs.setStatus('mandatory')
qigmpOutMsgs = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qigmpOutMsgs.setStatus('mandatory')
qigmpInErrors = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qigmpInErrors.setStatus('mandatory')
qigmpInReports = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qigmpInReports.setStatus('mandatory')
qigmpInQueries = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qigmpInQueries.setStatus('mandatory')
qigmpInUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qigmpInUnknownType.setStatus('mandatory')
qIgmpStaticTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 7), )
if mibBuilder.loadTexts: qIgmpStaticTable.setStatus('mandatory')
qIgmpStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 7, 1), ).setIndexNames((0, "QWESCOM-MIB", "qIgmpStaticAddr"))
if mibBuilder.loadTexts: qIgmpStaticEntry.setStatus('mandatory')
qIgmpStaticAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 7, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIgmpStaticAddr.setStatus('mandatory')
qIgmpLp = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIgmpLp.setStatus('current')
qIgmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add-activate", 1), ("add-not-activate", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qIgmpType.setStatus('current')
qIgmpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 8), )
if mibBuilder.loadTexts: qIgmpGroupTable.setStatus('current')
qIgmpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 8, 1), ).setIndexNames((0, "QWESCOM-MIB", "qIgmpGroupLp"), (0, "QWESCOM-MIB", "qIgmpGroupAddr"))
if mibBuilder.loadTexts: qIgmpGroupEntry.setStatus('current')
qIgmpGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qIgmpGroupAddr.setStatus('current')
qIgmpGroupLp = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qIgmpGroupLp.setStatus('current')
qIgmpGroupMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 8, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qIgmpGroupMacAddr.setStatus('current')
qIgmpGroupInstallType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 7, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qIgmpGroupInstallType.setStatus('current')
qarpInMsgs = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpInMsgs.setStatus('mandatory')
qarpOutMsgs = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpOutMsgs.setStatus('mandatory')
qarpReqInMsg = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpReqInMsg.setStatus('mandatory')
qarpReqOutMsgs = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpReqOutMsgs.setStatus('mandatory')
qarpRespInMsgs = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpRespInMsgs.setStatus('mandatory')
qarpRespOutMsgs = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpRespOutMsgs.setStatus('mandatory')
qarpSendDiscards = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpSendDiscards.setStatus('mandatory')
qarpSendTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpSendTimeouts.setStatus('mandatory')
qarpInResourceErrors = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpInResourceErrors.setStatus('mandatory')
qarpOutResourceErrors = MibScalar((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qarpOutResourceErrors.setStatus('mandatory')
qRipStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 23), )
if mibBuilder.loadTexts: qRipStatsTable.setStatus('mandatory')
qRipStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 23, 1), ).setIndexNames((0, "QWESCOM-MIB", "qRipStatsAddr"))
if mibBuilder.loadTexts: qRipStatsEntry.setStatus('mandatory')
qRipStatsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 23, 1, 1), IpAddress())
if mibBuilder.loadTexts: qRipStatsAddr.setStatus('mandatory')
qrip2IfStatsUpdatesReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 16, 23, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qrip2IfStatsUpdatesReceives.setStatus('mandatory')
qoamGroupConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1), )
if mibBuilder.loadTexts: qoamGroupConfigTable.setStatus('mandatory')
qoamGroupConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1, 1), ).setIndexNames((0, "QWESCOM-MIB", "qoamGroupConfigIndex"))
if mibBuilder.loadTexts: qoamGroupConfigEntry.setStatus('mandatory')
qoamGroupConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamGroupConfigIndex.setStatus('current')
qoamGroupConfigAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamGroupConfigAlias.setStatus('current')
qoamGroupConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("segment-2-segment", 1), ("end-2-end", 2), ("both", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamGroupConfigType.setStatus('current')
qoamGroupConfigTransmitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamGroupConfigTransmitInterval.setStatus('current')
qoamGroupConfigS2SAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamGroupConfigS2SAlarmThreshold.setStatus('current')
qoamGroupConfigE2EAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamGroupConfigE2EAlarmThreshold.setStatus('current')
qoamGroupConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamGroupConfigStatus.setStatus('current')
qoamCircuitConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 2), )
if mibBuilder.loadTexts: qoamCircuitConfigTable.setStatus('mandatory')
qoamCircuitConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 2, 1), ).setIndexNames((0, "QWESCOM-MIB", "qoamCircuitConfigIndex"))
if mibBuilder.loadTexts: qoamCircuitConfigEntry.setStatus('mandatory')
qoamCircuitConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitConfigIndex.setStatus('current')
qoamCircuitConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("segment-2-segment", 1), ("end-2-end", 2), ("both", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitConfigType.setStatus('current')
qoamCircuitConfigTransmitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitConfigTransmitInterval.setStatus('current')
qoamCircuitConfigS2SAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitConfigS2SAlarmThreshold.setStatus('current')
qoamCircuitConfigE2EAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitConfigE2EAlarmThreshold.setStatus('current')
qoamCircuitConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add-activate", 1), ("add-not-activate", 2), ("delete", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitConfigStatus.setStatus('current')
qoamGroupControlTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 3), )
if mibBuilder.loadTexts: qoamGroupControlTable.setStatus('mandatory')
qoamGroupControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 3, 1), ).setIndexNames((0, "QWESCOM-MIB", "qoamGroupControlIndex"))
if mibBuilder.loadTexts: qoamGroupControlEntry.setStatus('mandatory')
qoamGroupControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamGroupControlIndex.setStatus('current')
qoamGroupControlType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("segment-2-segment", 1), ("end-2-end", 2), ("both", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamGroupControlType.setStatus('current')
qoamGroupControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("restore", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamGroupControlStatus.setStatus('current')
qoamCircuitControlTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 4), )
if mibBuilder.loadTexts: qoamCircuitControlTable.setStatus('mandatory')
qoamCircuitControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 4, 1), ).setIndexNames((0, "QWESCOM-MIB", "qoamCircuitControlIndex"))
if mibBuilder.loadTexts: qoamCircuitControlEntry.setStatus('mandatory')
qoamCircuitControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitControlIndex.setStatus('current')
qoamCircuitControlType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("segment-2-segment", 1), ("end-2-end", 2), ("both", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitControlType.setStatus('current')
qoamCircuitControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("restore", 3))).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qoamCircuitControlStatus.setStatus('current')
qoamStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5), )
if mibBuilder.loadTexts: qoamStatsTable.setStatus('mandatory')
qoamStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1), ).setIndexNames((0, "QWESCOM-MIB", "qatmCircuitId"))
if mibBuilder.loadTexts: qoamStatsEntry.setStatus('mandatory')
qoamStatsCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamStatsCircuit.setStatus('current')
qoamStatsVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamStatsVpi.setStatus('current')
qoamStatsVci = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamStatsVci.setStatus('current')
qoamStatsType = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("f4-segment", 1), ("f4-end", 2), ("f5-segment", 3), ("f5-end", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamStatsType.setStatus('current')
qoamStatsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamStatsStatus.setStatus('current')
qoamRequestTx = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamRequestTx.setStatus('current')
qoamRequestRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamRequestRx.setStatus('current')
qoamReplyTx = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamReplyTx.setStatus('current')
qoamReplyRx = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamReplyRx.setStatus('current')
qoamTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamTimeouts.setStatus('current')
qoamMinRt = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamMinRt.setStatus('current')
qoamMaxRt = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamMaxRt.setStatus('current')
qoamAveRt = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamAveRt.setStatus('current')
qoamOtherInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamOtherInErrs.setStatus('current')
qoamOtherOutErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamOtherOutErrs.setStatus('current')
qoamCrc10InErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamCrc10InErrs.setStatus('current')
qoamCrc10OutErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3662, 3662, 3662, 18, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qoamCrc10OutErrs.setStatus('current')
mibBuilder.exportSymbols("QWESCOM-MIB", qatmCircuitId=qatmCircuitId, qClassDefinitionDestIPUpperBound=qClassDefinitionDestIPUpperBound, qipCircExtEntry=qipCircExtEntry, qwesLpPhysicalInterface=qwesLpPhysicalInterface, qmrRepCode=qmrRepCode, qoamGroupConfigEntry=qoamGroupConfigEntry, TimeDateString=TimeDateString, qigmp=qigmp, qsnmpTrapTable=qsnmpTrapTable, qatmTrafficDescriptorTable=qatmTrafficDescriptorTable, qmrModelID=qmrModelID, qethernetName=qethernetName, qmrMacAddress=qmrMacAddress, qipCircExtAdminState=qipCircExtAdminState, qethernet=qethernet, qcmConfigWorkWithMin=qcmConfigWorkWithMin, qarpCircExtTable=qarpCircExtTable, qcmUserBaseCfgFile=qcmUserBaseCfgFile, qPolicyDefinitionStartTime=qPolicyDefinitionStartTime, qmanagementGroup=qmanagementGroup, qcmWhichFile=qcmWhichFile, qcmCurrentConfig=qcmCurrentConfig, qatmUniSharedBuffer=qatmUniSharedBuffer, qPolicyDefinitionEvent=qPolicyDefinitionEvent, qPolicyDefinitionAlias=qPolicyDefinitionAlias, qarpCircExtEntry=qarpCircExtEntry, qoamRequestTx=qoamRequestTx, qPipeDefinitionCircuitID=qPipeDefinitionCircuitID, qds1SpanLoopBackStatsEntry=qds1SpanLoopBackStatsEntry, qripCircExtTalk=qripCircExtTalk, qmiscGroup=qmiscGroup, qds1ClockMode=qds1ClockMode, qClassDefinitionMaxEntries=qClassDefinitionMaxEntries, qPipeDefinitionType=qPipeDefinitionType, qTftpOperStatus=qTftpOperStatus, qEventConfigIndex=qEventConfigIndex, qigmpOutMsgs=qigmpOutMsgs, qEventAlarmDescription=qEventAlarmDescription, qcmTableIndex=qcmTableIndex, qStaticArpTable=qStaticArpTable, qRipIpAddr=qRipIpAddr, qextmib=qextmib, qatmCellsForInactiveVcc=qatmCellsForInactiveVcc, qds1PrimaryClockSourceAction=qds1PrimaryClockSourceAction, qsnmpCommunityTable=qsnmpCommunityTable, qTftpServerIpAddress=qTftpServerIpAddress, qPipeDefinitionPhyIdx=qPipeDefinitionPhyIdx, qatmAal5VccStatsOutBytes=qatmAal5VccStatsOutBytes, qwesLpEntry=qwesLpEntry, qatmUniAlias=qatmUniAlias, qatmUniTrapStatus=qatmUniTrapStatus, qTftpRxCount=qTftpRxCount, qwesLifLpIndex=qwesLifLpIndex, qatmVplMaxVcc=qatmVplMaxVcc, qethernetMacAddress=qethernetMacAddress, qcmConfigWorkWithMax=qcmConfigWorkWithMax, qDefaultRouteMetric=qDefaultRouteMetric, qcmReleaseEntry=qcmReleaseEntry, qatmVclBwGranularity=qatmVclBwGranularity, qarpCircExtDoResp=qarpCircExtDoResp, qmrRepairTable=qmrRepairTable, qoamGroupControlIndex=qoamGroupControlIndex, qcmUserBootSequence=qcmUserBootSequence, qds1AutoClockSourceSearching=qds1AutoClockSourceSearching, qcpStopBitLength=qcpStopBitLength, qoamGroupControlTable=qoamGroupControlTable, qatmAal5VccStatsInBytes=qatmAal5VccStatsInBytes, qigmpInErrors=qigmpInErrors, qoamCrc10OutErrs=qoamCrc10OutErrs, qatmAal5Table=qatmAal5Table, qoamCircuitConfigEntry=qoamCircuitConfigEntry, qClassDefinitionDestPortUpperBound=qClassDefinitionDestPortUpperBound, qatmUniEntry=qatmUniEntry, qIgmpStaticEntry=qIgmpStaticEntry, qEventConfigTable=qEventConfigTable, oem=oem, qatmUniIlmiStatus=qatmUniIlmiStatus, qmrProductID=qmrProductID, qoamGroupControlType=qoamGroupControlType, qatmUniRowStatus=qatmUniRowStatus, qcmStopConfig=qcmStopConfig, qoamGroupConfigE2EAlarmThreshold=qoamGroupConfigE2EAlarmThreshold, qmrOemID=qmrOemID, qTimeZone=qTimeZone, qwesAtmArpEntry=qwesAtmArpEntry, qClassStatisticsEntry=qClassStatisticsEntry, qcmConfigVerEntry=qcmConfigVerEntry, qcmReleaseName=qcmReleaseName, qPipeDefinitionTable=qPipeDefinitionTable, qigmpInQueries=qigmpInQueries, qarpRespOutMsgs=qarpRespOutMsgs, qoamCircuitControlStatus=qoamCircuitControlStatus, qPolicyDefinitionType=qPolicyDefinitionType, qatmVclReservedBuffer=qatmVclReservedBuffer, qatmVplBwGranularity=qatmVplBwGranularity, qatmAal5VccStatsInSdus=qatmAal5VccStatsInSdus, qds1OamSegmentFailures=qds1OamSegmentFailures, qatmTcCellSync=qatmTcCellSync, qatmAal5Aal5Name=qatmAal5Aal5Name, qethernetAutoSense=qethernetAutoSense, qipRoutePriority=qipRoutePriority, qoamReplyTx=qoamReplyTx, qEventSystemSubSystem=qEventSystemSubSystem, qClassStatisticsTransmittedCount=qClassStatisticsTransmittedCount, qsnmpNMSIndex=qsnmpNMSIndex, qripCircExtListen=qripCircExtListen, qcmConfigName=qcmConfigName, qClassStatisticsIndex=qClassStatisticsIndex, qslots=qslots, qatmInvalidCells=qatmInvalidCells, qcmConfigFile=qcmConfigFile, qPolicyDefinitionDayofWeek=qPolicyDefinitionDayofWeek, qatmVplEntry=qatmVplEntry, qPipeDefinitionAlias=qPipeDefinitionAlias, qcmUserRelease=qcmUserRelease, qcmReleaseVersion=qcmReleaseVersion, qClassDefinitionSourcePortUpperBound=qClassDefinitionSourcePortUpperBound, qatmCircuitFirstVci=qatmCircuitFirstVci, qatmCircuitStatus=qatmCircuitStatus, qripExtUpdateTime=qripExtUpdateTime, qatmAal5AdminStatus=qatmAal5AdminStatus, qproprietaryMib2=qproprietaryMib2, qoamReplyRx=qoamReplyRx, qripExt=qripExt, qClassDefinitionEntry=qClassDefinitionEntry, qarpCircExtIndex=qarpCircExtIndex, qsnmpNMSIpAddress=qsnmpNMSIpAddress, qsnmpCommunityName=qsnmpCommunityName, qEventSystemType=qEventSystemType, qethernetSpeedMode=qethernetSpeedMode, qwesLifTrapStatus=qwesLifTrapStatus, qEventAlarmEntry=qEventAlarmEntry, qethernetCfgTable=qethernetCfgTable, qarpInResourceErrors=qarpInResourceErrors, qoamCrc10InErrs=qoamCrc10InErrs, qds1SpanCfgTable=qds1SpanCfgTable, qcmUserFileAlias=qcmUserFileAlias, qIgmpGroupMacAddr=qIgmpGroupMacAddr, qoamStatsStatus=qoamStatsStatus, qoamGroupControlStatus=qoamGroupControlStatus, qAdvertiseIntf=qAdvertiseIntf, qsnmp=qsnmp, qatmVclMaxQueueDelay=qatmVclMaxQueueDelay, qatmTrafficDescriptorEntry=qatmTrafficDescriptorEntry, DisplayString=DisplayString, qwesAtmArpLifIndex=qwesAtmArpLifIndex, qIpRipStatus=qIpRipStatus, qIgmpGroupEntry=qIgmpGroupEntry, qPipeDefinitionIndex=qPipeDefinitionIndex, qClassDefinitionTable=qClassDefinitionTable, qLogOption=qLogOption, qoamCircuitConfigIndex=qoamCircuitConfigIndex, qoamMaxRt=qoamMaxRt, qPipeDefinitionBandwidth=qPipeDefinitionBandwidth, qatmAal5MtuSize=qatmAal5MtuSize, qipPortEntry=qipPortEntry, qds1OamSegmentReceived=qds1OamSegmentReceived, qwesLifAdminStatus=qwesLifAdminStatus, qatmAal5Entry=qatmAal5Entry, qSysTime=qSysTime, qoamStatsVci=qoamStatsVci, qwesLpDataLinkInterface=qwesLpDataLinkInterface, qds10amRunnigTime=qds10amRunnigTime, qIgmpStaticAddr=qIgmpStaticAddr, qwesLifName=qwesLifName, qoamCircuitConfigTransmitInterval=qoamCircuitConfigTransmitInterval, qarpSendTimeouts=qarpSendTimeouts, qoamAveRt=qoamAveRt, qPolicyDefinitionMaxEntries=qPolicyDefinitionMaxEntries, qatmUniName=qatmUniName, qcpDataBits=qcpDataBits, qcmConfigVerTable=qcmConfigVerTable, qipPortTable=qipPortTable, qoamGroupConfigTable=qoamGroupConfigTable, qatmVplTable=qatmVplTable, qwesLpRowStatus=qwesLpRowStatus, qipRipStatus=qipRipStatus, qatmTcTable=qatmTcTable, qatmCircuitUNI=qatmCircuitUNI, qRipPortEntry=qRipPortEntry, qPolicyDefinitionPriority=qPolicyDefinitionPriority, qPhysType=qPhysType, qPolicyDefinitionIndex=qPolicyDefinitionIndex, qClassDefinitionWellKnownApplication=qClassDefinitionWellKnownApplication, qds1SpanCfgEntry=qds1SpanCfgEntry, qigmpInMsgs=qigmpInMsgs, qcraftPort=qcraftPort, qarpInMsgs=qarpInMsgs, qipCircExtIfIndex=qipCircExtIfIndex, qClassDefinitionDSMask=qClassDefinitionDSMask, qds1Scrambler=qds1Scrambler, qsnmpTrapEntry=qsnmpTrapEntry, qClassDefinitionDSUpperBound=qClassDefinitionDSUpperBound, qPolicyDefinitionOutboundDSValue=qPolicyDefinitionOutboundDSValue, qEventAlarmID_Number=qEventAlarmID_Number, qLif=qLif, qPipeDefinitionEntry=qPipeDefinitionEntry, qatmVplMtu=qatmVplMtu, qIpAddr=qIpAddr, qoamGroupConfigTransmitInterval=qoamGroupConfigTransmitInterval, qoamStatsVpi=qoamStatsVpi, qEventAlarmSubSystem=qEventAlarmSubSystem, qStaticArpEntry=qStaticArpEntry, qPolicyDefinitionPipeID=qPolicyDefinitionPipeID, qwesAtmArpTable=qwesAtmArpTable, qatmVclEntry=qatmVclEntry, qoamCircuitConfigE2EAlarmThreshold=qoamCircuitConfigE2EAlarmThreshold, qmanufactRecord=qmanufactRecord, qarpReqOutMsgs=qarpReqOutMsgs, qAdvertiseStaticRoutes=qAdvertiseStaticRoutes, qoamCircuitControlType=qoamCircuitControlType, qatmAal5VccStatsPoolDepleteds=qatmAal5VccStatsPoolDepleteds, qTftpServerFileName=qTftpServerFileName, qipCircExtTable=qipCircExtTable, qripCircExtIfIndex=qripCircExtIfIndex, qClassDefinitionSourceIPMask=qClassDefinitionSourceIPMask, qcmConfigEntry=qcmConfigEntry, oemTree=oemTree, qatmCircuitLogicalInterface=qatmCircuitLogicalInterface, qoamGroupConfigType=qoamGroupConfigType, qcpBaudRate=qcpBaudRate, qmrRepairEntry=qmrRepairEntry, qoamCircuitConfigTable=qoamCircuitConfigTable, qEventSystemEntry=qEventSystemEntry, qarpOutResourceErrors=qarpOutResourceErrors, qatmVclMaxSubChannels=qatmVclMaxSubChannels, qcmUserDateTime=qcmUserDateTime, qatmCircuitMode=qatmCircuitMode, qripCircExtEntry=qripCircExtEntry, qarpCircExtDoProxy=qarpCircExtDoProxy, qClassDefinitionProtocol=qClassDefinitionProtocol, qipCircExtOperState=qipCircExtOperState, qoamOtherInErrs=qoamOtherInErrs, qLogFileType=qLogFileType, qatmAal5Uni=qatmAal5Uni, qEventSystemIndex=qEventSystemIndex, qIgmpGroupLp=qIgmpGroupLp, qPolicyDefinitionClassID=qPolicyDefinitionClassID, qds1PerformanceMonitor=qds1PerformanceMonitor, qBroadcastType=qBroadcastType, qarpExt=qarpExt, qmrBurnDate=qmrBurnDate, qmrRepType=qmrRepType, qds1LoopbackCommand=qds1LoopbackCommand, qClassDefinitionDestPortLowerBound=qClassDefinitionDestPortLowerBound, qClassDefinitionDestIPMask=qClassDefinitionDestIPMask, qsnmpTrapIpAddress=qsnmpTrapIpAddress, qatmAal5RowStatus=qatmAal5RowStatus, qatmTcPortErrors=qatmTcPortErrors, qds1ClockSourceEligibility=qds1ClockSourceEligibility, qcmFileAlias=qcmFileAlias, qatmUniLinkBandwidth=qatmUniLinkBandwidth, qarpExtTtl=qarpExtTtl, qethernetEncapsulation=qethernetEncapsulation)
mibBuilder.exportSymbols("QWESCOM-MIB", qatmVclTable=qatmVclTable, qIgmpLp=qIgmpLp, qTftpFileName=qTftpFileName, qcmConfigVersion=qcmConfigVersion, qatmAal5VccStatsUserAborts=qatmAal5VccStatsUserAborts, qIpMulticast=qIpMulticast, qds1PrimaryClockSource=qds1PrimaryClockSource, qcmReleaseTable=qcmReleaseTable, qwesLpName=qwesLpName, qoamGroupConfigStatus=qoamGroupConfigStatus, qIgmpType=qIgmpType, qoamCircuitControlIndex=qoamCircuitControlIndex, qPipeDefinitionMBS=qPipeDefinitionMBS, qatmVplReservedBuffer=qatmVplReservedBuffer, qEventSystemDateTime=qEventSystemDateTime, qcmOperSchedDateTime=qcmOperSchedDateTime, qcmUserNewCfgFile=qcmUserNewCfgFile, qoamCircuitConfigStatus=qoamCircuitConfigStatus, qEventSystemDescription=qEventSystemDescription, qripCircExtIndex=qripCircExtIndex, qoamOtherOutErrs=qoamOtherOutErrs, qClassDefinitionFlowAgingTime=qClassDefinitionFlowAgingTime, qoamCircuitConfigType=qoamCircuitConfigType, qClassDefinitionAlias=qClassDefinitionAlias, qIgmpGroupAddr=qIgmpGroupAddr, qsnmpForwardTrap=qsnmpForwardTrap, qClassDefinitionIndex=qClassDefinitionIndex, qripCircExtTable=qripCircExtTable, qPipeDefinitionPhyType=qPipeDefinitionPhyType, PhysAddress=PhysAddress, qwescom=qwescom, qportManagement=qportManagement, qmrCheckSum=qmrCheckSum, qwesLpAdminStatus=qwesLpAdminStatus, qClassDefinitionParentClassID=qClassDefinitionParentClassID, qIgmpGroupTable=qIgmpGroupTable, qsnmpCommunityRights=qsnmpCommunityRights, qEventAlarmIndex=qEventAlarmIndex, qTftpType=qTftpType, qeventGroup=qeventGroup, qoamCircuitConfigS2SAlarmThreshold=qoamCircuitConfigS2SAlarmThreshold, qIpArpTimeout=qIpArpTimeout, qcmSystemFile=qcmSystemFile, qatm=qatm, qTftpAdminStatus=qTftpAdminStatus, qarpOutMsgs=qarpOutMsgs, qsnmpNMSEntry=qsnmpNMSEntry, qatmAal5TrapStatus=qatmAal5TrapStatus, qEventAlarmDateTime=qEventAlarmDateTime, qatmVplMaxQueueDelay=qatmVplMaxQueueDelay, qoamStatsType=qoamStatsType, qoamGroupConfigS2SAlarmThreshold=qoamGroupConfigS2SAlarmThreshold, qatmUniBandwidthGranularity=qatmUniBandwidthGranularity, qproducts=qproducts, qcmCreateDateTime=qcmCreateDateTime, qRipStatsEntry=qRipStatsEntry, qRipPortTable=qRipPortTable, qoamGroupConfigAlias=qoamGroupConfigAlias, qPolicyDefinitionLP=qPolicyDefinitionLP, qatmCircuitVpi=qatmCircuitVpi, qmrBurnTime=qmrBurnTime, qwesLifEntry=qwesLifEntry, qwesLifAlias=qwesLifAlias, qClassDefinitionSourceIPLowerBound=qClassDefinitionSourceIPLowerBound, qigmpInUnknownType=qigmpInUnknownType, qsnmpTrapIndex=qsnmpTrapIndex, qatmCircuitAlias=qatmCircuitAlias, qcpStatus=qcpStatus, qds1LoopbackDuration=qds1LoopbackDuration, qAuthentication=qAuthentication, qMacAddr=qMacAddr, qds1LineBuildOut=qds1LineBuildOut, qIpEncap=qIpEncap, Boolean=Boolean, qwesLifTable=qwesLifTable, qds1SpanLoopBackCmdTable=qds1SpanLoopBackCmdTable, qcpParity=qcpParity, qPolicyDefinitionChannelized=qPolicyDefinitionChannelized, qatmCircuitEntry=qatmCircuitEntry, qatmVplLowestVci=qatmVplLowestVci, qcpCharsReceived=qcpCharsReceived, qds1SpanLoopBackStatsTable=qds1SpanLoopBackStatsTable, qatmVclSharedBuffer=qatmVclSharedBuffer, qClassDefinitionSourcePortLowerBound=qClassDefinitionSourcePortLowerBound, qPipeDefinitionDelay=qPipeDefinitionDelay, qEventSeverityType=qEventSeverityType, qds1LineCfgIndex=qds1LineCfgIndex, qoamStatsEntry=qoamStatsEntry, qatmAal5Aal5Alias=qatmAal5Aal5Alias, qipExt=qipExt, qatmSpanPort=qatmSpanPort, qcmConfigTable=qcmConfigTable, qcmStopViewConfig=qcmStopViewConfig, qHoldDownInterval=qHoldDownInterval, qUpdatesSend=qUpdatesSend, qethernetCurrentSpeedMode=qethernetCurrentSpeedMode, qUpdatesReceive=qUpdatesReceive, qsnmpCommunityEntry=qsnmpCommunityEntry, qEventSystemID_Number=qEventSystemID_Number, qIpSubnet=qIpSubnet, qigmpInReports=qigmpInReports, qType=qType, qoamRequestRx=qoamRequestRx, qatmAal5VccStatsOutSdus=qatmAal5VccStatsOutSdus, qStaticArpAddr=qStaticArpAddr, qClassDefinitionFlowType=qClassDefinitionFlowType, qoamStatsTable=qoamStatsTable, qcmConfigMaxEntries=qcmConfigMaxEntries, qPipeDefinitionMaxEntries=qPipeDefinitionMaxEntries, qClassStatisticsTable=qClassStatisticsTable, qip=qip, qds1OamSegmentSent=qds1OamSegmentSent, qPolicyDefinitionEntry=qPolicyDefinitionEntry, qClassStatisticsDiscardCount=qClassStatisticsDiscardCount, qatmUniMinAllocBuffer=qatmUniMinAllocBuffer, qarpCircExtIfIndex=qarpCircExtIfIndex, qmrSerialNumber=qmrSerialNumber, qcmConfigVerIndex=qcmConfigVerIndex, qarpSendDiscards=qarpSendDiscards, qPolicyDefinitionTable=qPolicyDefinitionTable, qEventAlarmTable=qEventAlarmTable, qipCircExtIndex=qipCircExtIndex, qds1SpanLoopBackCmdEntry=qds1SpanLoopBackCmdEntry, qTrapOption=qTrapOption, qRipStatsAddr=qRipStatsAddr, qoamGroupConfigIndex=qoamGroupConfigIndex, qripCircExtPoison=qripCircExtPoison, qoamGroupControlEntry=qoamGroupControlEntry, qatmUniTable=qatmUniTable, qsnmpNMSTable=qsnmpNMSTable, qClassStatisticsAlias=qClassStatisticsAlias, qatmAal5VccStatsTable=qatmAal5VccStatsTable, qds1LineLoopbackStatIndex=qds1LineLoopbackStatIndex, qIgmpGroupInstallType=qIgmpGroupInstallType, qatmAal5VccStatsErrsAndDiscards=qatmAal5VccStatsErrsAndDiscards, qClassDefinitionDSLowerBound=qClassDefinitionDSLowerBound, qmrRepTime=qmrRepTime, qmrRepDate=qmrRepDate, qcmStartViewConfig=qcmStartViewConfig, qcmReleaseIndex=qcmReleaseIndex, qatmAal5VccStatsEntry=qatmAal5VccStatsEntry, qds1LineLoopbackIndex=qds1LineLoopbackIndex, qcmCancelConfig=qcmCancelConfig, qarpReqInMsg=qarpReqInMsg, qarpRespInMsgs=qarpRespInMsgs, qmrOemName=qmrOemName, qIpLp=qIpLp, qFlowClass=qFlowClass, qethernetCfgEntry=qethernetCfgEntry, qsnmpCommunityIndex=qsnmpCommunityIndex, qcmRelease=qcmRelease, qwesLpTrapStatus=qwesLpTrapStatus, qPolicyDefinitionEndTime=qPolicyDefinitionEndTime, qwesLifRowStatus=qwesLifRowStatus, qatmUniLinkDelay=qatmUniLinkDelay, qatmAal5VccStatsLengthMismatchs=qatmAal5VccStatsLengthMismatchs, qoamTimeouts=qoamTimeouts, qDisplayOption=qDisplayOption, qatmVplSharedBuffer=qatmVplSharedBuffer, qipTtl=qipTtl, qOamGroup=qOamGroup, qatmTcEntry=qatmTcEntry, qClassDefinitionDestIPLowerBound=qClassDefinitionDestIPLowerBound, qatmCircuitTable=qatmCircuitTable, qcpCharsSent=qcpCharsSent, qEventAlarmType=qEventAlarmType, qatmUniMaxQueueDelay=qatmUniMaxQueueDelay, qwesLpTable=qwesLpTable, qSplitHorizon=qSplitHorizon, qds1_e1=qds1_e1, qPipeDefinitionBufferAllocation=qPipeDefinitionBufferAllocation, qcmBootSequence=qcmBootSequence, qripExtAdminState=qripExtAdminState, qcmStartConfig=qcmStartConfig, qClassStatisticsFallbackCount=qClassStatisticsFallbackCount, qEventSystemTable=qEventSystemTable, qwesLpAlias=qwesLpAlias, qClassDefinitionSourceIPUpperBound=qClassDefinitionSourceIPUpperBound, qcmActionOnConfig=qcmActionOnConfig, qMode=qMode, qPipeDefinitionPeak=qPipeDefinitionPeak, qoamCircuitControlTable=qoamCircuitControlTable, qoamCircuitControlEntry=qoamCircuitControlEntry, qoamStatsCircuit=qoamStatsCircuit, qoamMinRt=qoamMinRt, qatmTrafficDescriptorAlias=qatmTrafficDescriptorAlias, qrip2IfStatsUpdatesReceives=qrip2IfStatsUpdatesReceives, qIgmpStaticTable=qIgmpStaticTable, qEventConfigEntry=qEventConfigEntry, qconfigManager=qconfigManager, qRipStatsTable=qRipStatsTable, qatmTcDmaErrors=qatmTcDmaErrors)
