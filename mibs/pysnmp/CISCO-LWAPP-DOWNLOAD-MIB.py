#
# PySNMP MIB module CISCO-LWAPP-DOWNLOAD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-DOWNLOAD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
cLApSysMacAddress, ciscoLwappApMIB = mibBuilder.importSymbols("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress", "ciscoLwappApMIB")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Counter64, IpAddress, Unsigned32, Integer32, iso, Gauge32, ModuleIdentity, TimeTicks, NotificationType, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "IpAddress", "Unsigned32", "Integer32", "iso", "Gauge32", "ModuleIdentity", "TimeTicks", "NotificationType", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
DisplayString, TruthValue, TextualConvention, DateAndTime, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "DateAndTime", "RowStatus")
ciscoLwappDownloadMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 513, 4))
ciscoLwappDownloadMIB.setRevisions(('2008-05-12 00:00',))
if mibBuilder.loadTexts: ciscoLwappDownloadMIB.setLastUpdated('200805120000Z')
if mibBuilder.loadTexts: ciscoLwappDownloadMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappDownloadMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 0))
ciscoLwappDownloadMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1))
ciscoLwappDownloadMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 2))
ciscoLwappDLApBoot = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 1))
ciscoLwappDLReset = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2))
clDLApBootTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 1, 1), )
if mibBuilder.loadTexts: clDLApBootTable.setStatus('current')
cldlApBootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"))
if mibBuilder.loadTexts: cldlApBootEntry.setStatus('current')
cldlAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 1, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldlAPName.setStatus('current')
cldlAPPrimaryVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldlAPPrimaryVersion.setStatus('current')
cldlAPBackupVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldlAPBackupVersion.setStatus('current')
cldlAPSwapImage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 1, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldlAPSwapImage.setStatus('current')
cldlApDownloadImage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("backup", 2))).clone('backup')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldlApDownloadImage.setStatus('current')
clDLResetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1), )
if mibBuilder.loadTexts: clDLResetTable.setStatus('current')
cldlResetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOWNLOAD-MIB", "cldlResetIndex"))
if mibBuilder.loadTexts: cldlResetEntry.setStatus('current')
cldlResetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldlResetIndex.setStatus('current')
cldlResetDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1, 1, 2), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldlResetDateAndTime.setStatus('current')
cldlResetSwapImage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldlResetSwapImage.setStatus('current')
cldlResetAP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldlResetAP.setStatus('current')
cldlResetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldlResetRowStatus.setStatus('current')
cldlResetSaveConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldlResetSaveConfig.setStatus('current')
cldlResetAlertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldlResetAlertTime.setStatus('current')
ciscoLwappScheduledResetNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 0, 1)).setObjects(("CISCO-LWAPP-DOWNLOAD-MIB", "cldlResetAlertTime"))
if mibBuilder.loadTexts: ciscoLwappScheduledResetNotif.setStatus('current')
ciscoLwappResetFailedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 0, 2))
if mibBuilder.loadTexts: ciscoLwappResetFailedNotif.setStatus('current')
ciscoLwappClearResetNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 0, 3))
if mibBuilder.loadTexts: ciscoLwappClearResetNotif.setStatus('current')
ciscoLwappDownloadMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 2, 1))
ciscoLwappDownloadMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 2, 2))
ciscoLwappDownloadMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 2, 1, 1)).setObjects(("CISCO-LWAPP-DOWNLOAD-MIB", "ciscoLwappDLApGroup"), ("CISCO-LWAPP-DOWNLOAD-MIB", "ciscoLwappDLResetGroup"), ("CISCO-LWAPP-DOWNLOAD-MIB", "ciscoLwappDLNotifsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDownloadMIBCompliance = ciscoLwappDownloadMIBCompliance.setStatus('current')
ciscoLwappDLApGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 2, 2, 1)).setObjects(("CISCO-LWAPP-DOWNLOAD-MIB", "cldlAPName"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlAPPrimaryVersion"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlAPBackupVersion"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlAPSwapImage"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlApDownloadImage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDLApGroup = ciscoLwappDLApGroup.setStatus('current')
ciscoLwappDLResetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 2, 2, 2)).setObjects(("CISCO-LWAPP-DOWNLOAD-MIB", "cldlResetDateAndTime"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlResetSwapImage"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlResetAP"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlResetRowStatus"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlResetSaveConfig"), ("CISCO-LWAPP-DOWNLOAD-MIB", "cldlResetAlertTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDLResetGroup = ciscoLwappDLResetGroup.setStatus('current')
ciscoLwappDLNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 4, 2, 2, 3)).setObjects(("CISCO-LWAPP-DOWNLOAD-MIB", "ciscoLwappScheduledResetNotif"), ("CISCO-LWAPP-DOWNLOAD-MIB", "ciscoLwappResetFailedNotif"), ("CISCO-LWAPP-DOWNLOAD-MIB", "ciscoLwappClearResetNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappDLNotifsGroup = ciscoLwappDLNotifsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-DOWNLOAD-MIB", cldlAPSwapImage=cldlAPSwapImage, cldlAPPrimaryVersion=cldlAPPrimaryVersion, cldlApDownloadImage=cldlApDownloadImage, cldlResetSwapImage=cldlResetSwapImage, ciscoLwappDownloadMIBObjects=ciscoLwappDownloadMIBObjects, ciscoLwappScheduledResetNotif=ciscoLwappScheduledResetNotif, cldlAPBackupVersion=cldlAPBackupVersion, ciscoLwappDLNotifsGroup=ciscoLwappDLNotifsGroup, clDLApBootTable=clDLApBootTable, ciscoLwappDownloadMIBCompliances=ciscoLwappDownloadMIBCompliances, ciscoLwappDownloadMIBConform=ciscoLwappDownloadMIBConform, cldlResetIndex=cldlResetIndex, ciscoLwappDLApGroup=ciscoLwappDLApGroup, ciscoLwappDownloadMIB=ciscoLwappDownloadMIB, ciscoLwappDownloadMIBNotifs=ciscoLwappDownloadMIBNotifs, cldlResetSaveConfig=cldlResetSaveConfig, cldlApBootEntry=cldlApBootEntry, PYSNMP_MODULE_ID=ciscoLwappDownloadMIB, ciscoLwappDLApBoot=ciscoLwappDLApBoot, ciscoLwappClearResetNotif=ciscoLwappClearResetNotif, ciscoLwappDLReset=ciscoLwappDLReset, cldlResetAP=cldlResetAP, cldlResetAlertTime=cldlResetAlertTime, ciscoLwappResetFailedNotif=ciscoLwappResetFailedNotif, cldlResetRowStatus=cldlResetRowStatus, cldlResetDateAndTime=cldlResetDateAndTime, clDLResetTable=clDLResetTable, cldlResetEntry=cldlResetEntry, ciscoLwappDLResetGroup=ciscoLwappDLResetGroup, cldlAPName=cldlAPName, ciscoLwappDownloadMIBCompliance=ciscoLwappDownloadMIBCompliance, ciscoLwappDownloadMIBGroups=ciscoLwappDownloadMIBGroups)
