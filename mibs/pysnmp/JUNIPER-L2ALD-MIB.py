#
# PySNMP MIB module JUNIPER-L2ALD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-L2ALD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
jnxl2aldMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxl2aldMibRoot")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, ModuleIdentity, IpAddress, Unsigned32, Counter32, NotificationType, Gauge32, Integer32, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "ModuleIdentity", "IpAddress", "Unsigned32", "Counter32", "NotificationType", "Gauge32", "Integer32", "TimeTicks", "ObjectIdentity")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
jnxl2aldMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1))
jnxl2aldMib.setRevisions(('2015-01-22 10:00', '2015-01-14 10:00', '2012-08-08 10:00', '2007-02-15 10:00',))
if mibBuilder.loadTexts: jnxl2aldMib.setLastUpdated('201208081000Z')
if mibBuilder.loadTexts: jnxl2aldMib.setOrganization('Juniper Networks, Inc.')
jnxl2aldNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 0))
jnxl2aldObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1))
jnxl2aldInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 1), )
if mibBuilder.loadTexts: jnxl2aldInterfaceTable.setStatus('current')
jnxl2aldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: jnxl2aldEntry.setStatus('current')
jnxl2aldIntfLogicalRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 1, 1, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldIntfLogicalRouter.setStatus('current')
jnxl2aldIntfRoutingInst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldIntfRoutingInst.setStatus('current')
jnxl2aldIntfBridgeDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldIntfBridgeDomain.setStatus('current')
jnxl2aldIntfMacLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldIntfMacLimit.setStatus('current')
jnxl2aldRoutingInst = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldRoutingInst.setStatus('current')
jnxl2aldBridgeDomain = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldBridgeDomain.setStatus('current')
jnxl2aldLogicalRouter = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldLogicalRouter.setStatus('current')
jnxl2aldMacLimit = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldMacLimit.setStatus('current')
jnxl2aldGbMacLimit = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldGbMacLimit.setStatus('current')
jnxl2aldMacAdress = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 1, 7), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxl2aldMacAdress.setStatus('current')
jnxL2aldMacNotificationMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2))
jnxL2aldMacNotificationMIBGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1))
jnxL2aldMacGlobalFeatureEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldMacGlobalFeatureEnabled.setStatus('current')
jnxL2aldMacNotificationInterval = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(30)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldMacNotificationInterval.setStatus('current')
jnxL2aldMacAddressesLearnt = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldMacAddressesLearnt.setStatus('current')
jnxL2aldMacAddressesRemoved = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldMacAddressesRemoved.setStatus('current')
jnxL2aldMacNotificationsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldMacNotificationsEnabled.setStatus('current')
jnxL2aldMacNotificationsSent = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldMacNotificationsSent.setStatus('current')
jnxL2aldMacHistTableMaxLength = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 500)).clone(256)).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldMacHistTableMaxLength.setStatus('current')
jnxL2aldMacHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 8), )
if mibBuilder.loadTexts: jnxL2aldMacHistoryTable.setStatus('current')
jnxL2aldMacHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 8, 1), ).setIndexNames((0, "JUNIPER-L2ALD-MIB", "jnxL2aldHistIndex"))
if mibBuilder.loadTexts: jnxL2aldMacHistoryEntry.setStatus('current')
jnxL2aldHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: jnxL2aldHistIndex.setStatus('current')
jnxL2aldHistMacChangedMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldHistMacChangedMsg.setStatus('current')
jnxL2aldHistTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 8, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldHistTimestamp.setStatus('current')
jnxL2aldMacAddressesUpdated = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldMacAddressesUpdated.setStatus('current')
jnxL2aldVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 3))
jnxL2aldVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 3, 1), )
if mibBuilder.loadTexts: jnxL2aldVlanTable.setStatus('current')
jnxL2aldVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 3, 1, 1), ).setIndexNames((0, "JUNIPER-L2ALD-MIB", "jnxL2aldVlanID"))
if mibBuilder.loadTexts: jnxL2aldVlanEntry.setStatus('current')
jnxL2aldVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: jnxL2aldVlanID.setStatus('current')
jnxL2aldVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldVlanName.setStatus('current')
jnxL2aldVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldVlanTag.setStatus('current')
jnxL2aldVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldVlanType.setStatus('current')
jnxL2aldVlanFdbId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxL2aldVlanFdbId.setStatus('current')
jnxl2aldRoutingInstMacLimit = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 0, 1)).setObjects(("JUNIPER-L2ALD-MIB", "jnxl2aldLogicalRouter"), ("JUNIPER-L2ALD-MIB", "jnxl2aldRoutingInst"), ("JUNIPER-L2ALD-MIB", "jnxl2aldBridgeDomain"), ("JUNIPER-L2ALD-MIB", "jnxl2aldMacLimit"))
if mibBuilder.loadTexts: jnxl2aldRoutingInstMacLimit.setStatus('current')
jnxl2aldInterfaceMacLimit = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 0, 2)).setObjects(("JUNIPER-L2ALD-MIB", "jnxl2aldIntfLogicalRouter"), ("JUNIPER-L2ALD-MIB", "jnxl2aldIntfRoutingInst"), ("JUNIPER-L2ALD-MIB", "jnxl2aldIntfBridgeDomain"), ("IF-MIB", "ifDescr"), ("JUNIPER-L2ALD-MIB", "jnxl2aldIntfMacLimit"))
if mibBuilder.loadTexts: jnxl2aldInterfaceMacLimit.setStatus('current')
jnxl2aldGlobalMacLimit = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 0, 3)).setObjects(("JUNIPER-L2ALD-MIB", "jnxl2aldGbMacLimit"))
if mibBuilder.loadTexts: jnxl2aldGlobalMacLimit.setStatus('current')
jnxl2aldMacMoveThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 0, 4)).setObjects(("JUNIPER-L2ALD-MIB", "jnxl2aldIntfLogicalRouter"), ("JUNIPER-L2ALD-MIB", "jnxl2aldIntfRoutingInst"), ("JUNIPER-L2ALD-MIB", "jnxl2aldIntfBridgeDomain"), ("IF-MIB", "ifDescr"), ("JUNIPER-L2ALD-MIB", "jnxl2aldMacAdress"))
if mibBuilder.loadTexts: jnxl2aldMacMoveThreshold.setStatus('current')
jnxL2aldMacChangedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 48, 1, 0, 5)).setObjects(("JUNIPER-L2ALD-MIB", "jnxL2aldHistMacChangedMsg"), ("JUNIPER-L2ALD-MIB", "jnxL2aldHistTimestamp"))
if mibBuilder.loadTexts: jnxL2aldMacChangedNotification.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-L2ALD-MIB", jnxl2aldLogicalRouter=jnxl2aldLogicalRouter, jnxl2aldObjects=jnxl2aldObjects, jnxL2aldMacNotificationMIBObjects=jnxL2aldMacNotificationMIBObjects, jnxL2aldMacAddressesLearnt=jnxL2aldMacAddressesLearnt, jnxl2aldInterfaceTable=jnxl2aldInterfaceTable, jnxL2aldVlanName=jnxL2aldVlanName, jnxL2aldMacGlobalFeatureEnabled=jnxL2aldMacGlobalFeatureEnabled, jnxl2aldIntfBridgeDomain=jnxl2aldIntfBridgeDomain, jnxL2aldVlanFdbId=jnxL2aldVlanFdbId, jnxl2aldInterfaceMacLimit=jnxl2aldInterfaceMacLimit, jnxL2aldMacHistoryTable=jnxL2aldMacHistoryTable, jnxL2aldHistTimestamp=jnxL2aldHistTimestamp, jnxL2aldMacNotificationsEnabled=jnxL2aldMacNotificationsEnabled, jnxl2aldBridgeDomain=jnxl2aldBridgeDomain, jnxL2aldMacNotificationsSent=jnxL2aldMacNotificationsSent, jnxl2aldIntfMacLimit=jnxl2aldIntfMacLimit, jnxL2aldMacAddressesRemoved=jnxL2aldMacAddressesRemoved, jnxl2aldMacLimit=jnxl2aldMacLimit, jnxl2aldRoutingInstMacLimit=jnxl2aldRoutingInstMacLimit, jnxl2aldEntry=jnxl2aldEntry, jnxl2aldRoutingInst=jnxl2aldRoutingInst, jnxl2aldNotification=jnxl2aldNotification, jnxl2aldMacAdress=jnxl2aldMacAdress, jnxL2aldMacHistoryEntry=jnxL2aldMacHistoryEntry, jnxL2aldMacAddressesUpdated=jnxL2aldMacAddressesUpdated, jnxl2aldGbMacLimit=jnxl2aldGbMacLimit, jnxL2aldHistMacChangedMsg=jnxL2aldHistMacChangedMsg, jnxl2aldIntfRoutingInst=jnxl2aldIntfRoutingInst, jnxL2aldVlanMIBObjects=jnxL2aldVlanMIBObjects, jnxL2aldVlanEntry=jnxL2aldVlanEntry, jnxL2aldVlanID=jnxL2aldVlanID, jnxL2aldMacNotificationInterval=jnxL2aldMacNotificationInterval, PYSNMP_MODULE_ID=jnxl2aldMib, jnxl2aldIntfLogicalRouter=jnxl2aldIntfLogicalRouter, jnxL2aldVlanTable=jnxL2aldVlanTable, jnxl2aldMacMoveThreshold=jnxl2aldMacMoveThreshold, jnxL2aldMacChangedNotification=jnxL2aldMacChangedNotification, jnxL2aldHistIndex=jnxL2aldHistIndex, jnxL2aldMacHistTableMaxLength=jnxL2aldMacHistTableMaxLength, jnxL2aldVlanType=jnxL2aldVlanType, jnxl2aldMib=jnxl2aldMib, jnxl2aldGlobalMacLimit=jnxl2aldGlobalMacLimit, jnxL2aldMacNotificationMIBGlobalObjects=jnxL2aldMacNotificationMIBGlobalObjects, jnxL2aldVlanTag=jnxL2aldVlanTag)
