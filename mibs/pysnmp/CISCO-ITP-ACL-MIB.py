#
# PySNMP MIB module CISCO-ITP-ACL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-ACL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:46:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
CItpTcSubSystemNumberMask, CItpTcPointCode, CItpTcTranslationType, CItpTcAclId, CItpTcEncodingSchemeValue, CItpTcPointCodeMask, CItpTcNumberingPlan, CItpTcGlobalTitleSelector, CItpTcServiceIndicator, CItpTcSubSystemNumber, CItpTcNAI = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcSubSystemNumberMask", "CItpTcPointCode", "CItpTcTranslationType", "CItpTcAclId", "CItpTcEncodingSchemeValue", "CItpTcPointCodeMask", "CItpTcNumberingPlan", "CItpTcGlobalTitleSelector", "CItpTcServiceIndicator", "CItpTcSubSystemNumber", "CItpTcNAI")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, NotificationType, Counter32, Counter64, Unsigned32, ModuleIdentity, Bits, ObjectIdentity, MibIdentifier, TimeTicks, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "NotificationType", "Counter32", "Counter64", "Unsigned32", "ModuleIdentity", "Bits", "ObjectIdentity", "MibIdentifier", "TimeTicks", "Integer32", "IpAddress")
TimeStamp, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "TextualConvention", "RowStatus")
ciscoItpAclMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 227))
ciscoItpAclMIB.setRevisions(('2001-08-29 00:00',))
if mibBuilder.loadTexts: ciscoItpAclMIB.setLastUpdated('200108290000Z')
if mibBuilder.loadTexts: ciscoItpAclMIB.setOrganization('Cisco Systems, Inc.')
cItpAclMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 227, 0))
cItpAclMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 227, 1))
cItpAclMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 227, 2))
cItpAclScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 1))
cItpAclConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2))
class CItpAclAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("accept", 1), ("discard", 2))

cItpAclConfigLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpAclConfigLastChanged.setStatus('current')
cItpAclTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1), )
if mibBuilder.loadTexts: cItpAclTable.setStatus('current')
cItpAclTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ITP-ACL-MIB", "cItpAclId"), (0, "CISCO-ITP-ACL-MIB", "cItpAclEntryType"), (0, "CISCO-ITP-ACL-MIB", "cItpAclEntryNumber"))
if mibBuilder.loadTexts: cItpAclTableEntry.setStatus('current')
cItpAclId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 1), CItpTcAclId())
if mibBuilder.loadTexts: cItpAclId.setStatus('current')
cItpAclEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("comment", 1), ("entry", 2))))
if mibBuilder.loadTexts: cItpAclEntryType.setStatus('current')
cItpAclEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cItpAclEntryNumber.setStatus('current')
cItpAclAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 4), CItpAclAction().clone('accept')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclAction.setStatus('current')
cItpAclParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 5), Bits().clone(namedValues=NamedValues(("si", 0), ("dpc", 1), ("dpcMask", 2), ("opc", 3), ("opcMask", 4), ("pattern", 5), ("comment", 6), ("cgpa", 7), ("cgpaMask", 8), ("cdpa", 9), ("cdpaMask", 10), ("selector", 11), ("aft", 12), ("aftMask", 13), ("all", 14)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclParameters.setStatus('current')
cItpAclDpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 6), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclDpc.setStatus('current')
cItpAclDpcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 7), CItpTcPointCodeMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclDpcMask.setStatus('current')
cItpAclOpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 8), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclOpc.setStatus('current')
cItpAclOpcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 9), CItpTcPointCodeMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclOpcMask.setStatus('current')
cItpAclSi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 10), CItpTcServiceIndicator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclSi.setStatus('current')
cItpAclPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclPattern.setStatus('current')
cItpAclOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclOffset.setStatus('current')
cItpAclComment = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclComment.setStatus('current')
cItpAclCgpa = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 14), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclCgpa.setStatus('current')
cItpAclCgpaMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 15), CItpTcPointCodeMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclCgpaMask.setStatus('current')
cItpAclCgpaSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 16), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclCgpaSsn.setStatus('current')
cItpAclCgpaSsnMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 17), CItpTcSubSystemNumberMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclCgpaSsnMask.setStatus('current')
cItpAclCdpa = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 18), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclCdpa.setStatus('current')
cItpAclCdpaMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 19), CItpTcPointCodeMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclCdpaMask.setStatus('current')
cItpAclCdpaSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 20), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclCdpaSsn.setStatus('current')
cItpAclCdpaSsnMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 21), CItpTcSubSystemNumberMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclCdpaSsnMask.setStatus('current')
cItpAclGtiSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 22), CItpTcGlobalTitleSelector()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclGtiSelector.setStatus('current')
cItpAclGtiTranslateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 23), CItpTcTranslationType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclGtiTranslateType.setStatus('current')
cItpAclGtiNumberingPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 24), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclGtiNumberingPlan.setStatus('current')
cItpAclGtiNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 25), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclGtiNai.setStatus('current')
cItpAclGtiEsv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 26), CItpTcEncodingSchemeValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclGtiEsv.setStatus('current')
cItpAclAft = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 27), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclAft.setStatus('current')
cItpAclAftMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 28), CItpTcPointCodeMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclAftMask.setStatus('current')
cItpAclAftSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 29), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclAftSsn.setStatus('current')
cItpAclAftSsnMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 30), CItpTcSubSystemNumberMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclAftSsnMask.setStatus('current')
cItpAclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 227, 1, 2, 1, 1, 31), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cItpAclRowStatus.setStatus('current')
cItpAclMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 227, 2, 1))
cItpAclMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 227, 2, 2))
cItpAclMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 227, 2, 1, 1)).setObjects(("CISCO-ITP-ACL-MIB", "cItpAclScalarGroup"), ("CISCO-ITP-ACL-MIB", "cItpAclAccessListGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpAclMIBCompliance = cItpAclMIBCompliance.setStatus('current')
cItpAclScalarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 227, 2, 2, 1)).setObjects(("CISCO-ITP-ACL-MIB", "cItpAclConfigLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpAclScalarGroup = cItpAclScalarGroup.setStatus('current')
cItpAclAccessListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 227, 2, 2, 2)).setObjects(("CISCO-ITP-ACL-MIB", "cItpAclAction"), ("CISCO-ITP-ACL-MIB", "cItpAclParameters"), ("CISCO-ITP-ACL-MIB", "cItpAclDpc"), ("CISCO-ITP-ACL-MIB", "cItpAclDpcMask"), ("CISCO-ITP-ACL-MIB", "cItpAclOpc"), ("CISCO-ITP-ACL-MIB", "cItpAclOpcMask"), ("CISCO-ITP-ACL-MIB", "cItpAclSi"), ("CISCO-ITP-ACL-MIB", "cItpAclPattern"), ("CISCO-ITP-ACL-MIB", "cItpAclOffset"), ("CISCO-ITP-ACL-MIB", "cItpAclComment"), ("CISCO-ITP-ACL-MIB", "cItpAclCgpa"), ("CISCO-ITP-ACL-MIB", "cItpAclCgpaMask"), ("CISCO-ITP-ACL-MIB", "cItpAclCgpaSsn"), ("CISCO-ITP-ACL-MIB", "cItpAclCgpaSsnMask"), ("CISCO-ITP-ACL-MIB", "cItpAclCdpa"), ("CISCO-ITP-ACL-MIB", "cItpAclCdpaMask"), ("CISCO-ITP-ACL-MIB", "cItpAclCdpaSsn"), ("CISCO-ITP-ACL-MIB", "cItpAclCdpaSsnMask"), ("CISCO-ITP-ACL-MIB", "cItpAclGtiSelector"), ("CISCO-ITP-ACL-MIB", "cItpAclGtiTranslateType"), ("CISCO-ITP-ACL-MIB", "cItpAclGtiNumberingPlan"), ("CISCO-ITP-ACL-MIB", "cItpAclGtiNai"), ("CISCO-ITP-ACL-MIB", "cItpAclGtiEsv"), ("CISCO-ITP-ACL-MIB", "cItpAclAft"), ("CISCO-ITP-ACL-MIB", "cItpAclAftMask"), ("CISCO-ITP-ACL-MIB", "cItpAclAftSsn"), ("CISCO-ITP-ACL-MIB", "cItpAclAftSsnMask"), ("CISCO-ITP-ACL-MIB", "cItpAclRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpAclAccessListGroup = cItpAclAccessListGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ITP-ACL-MIB", cItpAclDpc=cItpAclDpc, cItpAclOpcMask=cItpAclOpcMask, cItpAclGtiNai=cItpAclGtiNai, cItpAclGtiNumberingPlan=cItpAclGtiNumberingPlan, cItpAclScalarGroup=cItpAclScalarGroup, cItpAclMIBCompliances=cItpAclMIBCompliances, cItpAclRowStatus=cItpAclRowStatus, CItpAclAction=CItpAclAction, cItpAclEntryNumber=cItpAclEntryNumber, cItpAclCdpaSsnMask=cItpAclCdpaSsnMask, cItpAclTable=cItpAclTable, cItpAclCgpa=cItpAclCgpa, cItpAclScalars=cItpAclScalars, cItpAclParameters=cItpAclParameters, cItpAclMIBConformance=cItpAclMIBConformance, cItpAclCgpaSsn=cItpAclCgpaSsn, cItpAclMIBNotifs=cItpAclMIBNotifs, PYSNMP_MODULE_ID=ciscoItpAclMIB, cItpAclCgpaSsnMask=cItpAclCgpaSsnMask, cItpAclTableEntry=cItpAclTableEntry, cItpAclAccessListGroup=cItpAclAccessListGroup, cItpAclCdpaMask=cItpAclCdpaMask, cItpAclOffset=cItpAclOffset, cItpAclConfigLastChanged=cItpAclConfigLastChanged, cItpAclAft=cItpAclAft, ciscoItpAclMIB=ciscoItpAclMIB, cItpAclAftSsn=cItpAclAftSsn, cItpAclComment=cItpAclComment, cItpAclGtiTranslateType=cItpAclGtiTranslateType, cItpAclSi=cItpAclSi, cItpAclCgpaMask=cItpAclCgpaMask, cItpAclGtiEsv=cItpAclGtiEsv, cItpAclMIBCompliance=cItpAclMIBCompliance, cItpAclOpc=cItpAclOpc, cItpAclMIBGroups=cItpAclMIBGroups, cItpAclConfig=cItpAclConfig, cItpAclEntryType=cItpAclEntryType, cItpAclDpcMask=cItpAclDpcMask, cItpAclAftSsnMask=cItpAclAftSsnMask, cItpAclId=cItpAclId, cItpAclCdpaSsn=cItpAclCdpaSsn, cItpAclAction=cItpAclAction, cItpAclCdpa=cItpAclCdpa, cItpAclPattern=cItpAclPattern, cItpAclGtiSelector=cItpAclGtiSelector, cItpAclMIBObjects=cItpAclMIBObjects, cItpAclAftMask=cItpAclAftMask)
