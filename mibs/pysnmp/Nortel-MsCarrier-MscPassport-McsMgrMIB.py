#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-McsMgrMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-McsMgrMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
Unsigned32, RowStatus, DisplayString, RowPointer, StorageType = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Unsigned32", "RowStatus", "DisplayString", "RowPointer", "StorageType")
AsciiString, Link, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "AsciiString", "Link", "NonReplicated")
mscPassportMIBs, mscComponents = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs", "mscComponents")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, iso, Integer32, ModuleIdentity, Unsigned32, Counter32, Counter64, NotificationType, Gauge32, ObjectIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Integer32", "ModuleIdentity", "Unsigned32", "Counter32", "Counter64", "NotificationType", "Gauge32", "ObjectIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
mcsMgrMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124))
mscMcsMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122))
mscMcsMgrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 1), )
if mibBuilder.loadTexts: mscMcsMgrRowStatusTable.setStatus('mandatory')
mscMcsMgrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"))
if mibBuilder.loadTexts: mscMcsMgrRowStatusEntry.setStatus('mandatory')
mscMcsMgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrRowStatus.setStatus('mandatory')
mscMcsMgrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrComponentName.setStatus('mandatory')
mscMcsMgrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrStorageType.setStatus('mandatory')
mscMcsMgrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrIndex.setStatus('mandatory')
mscMcsMgrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 10), )
if mibBuilder.loadTexts: mscMcsMgrProvTable.setStatus('mandatory')
mscMcsMgrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"))
if mibBuilder.loadTexts: mscMcsMgrProvEntry.setStatus('mandatory')
mscMcsMgrMaxEps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrMaxEps.setStatus('mandatory')
mscMcsMgrEpAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrEpAlarmThreshold.setStatus('mandatory')
mscMcsMgrOverrideNsapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 44)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrOverrideNsapAddress.setStatus('mandatory')
mscMcsMgrLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 10, 1, 4), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrLogicalProcessor.setStatus('obsolete')
mscMcsMgrSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrSecurity.setStatus('mandatory')
mscMcsMgrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11), )
if mibBuilder.loadTexts: mscMcsMgrStateTable.setStatus('mandatory')
mscMcsMgrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"))
if mibBuilder.loadTexts: mscMcsMgrStateEntry.setStatus('mandatory')
mscMcsMgrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrAdminState.setStatus('mandatory')
mscMcsMgrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrOperationalState.setStatus('mandatory')
mscMcsMgrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrUsageState.setStatus('mandatory')
mscMcsMgrAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrAvailabilityStatus.setStatus('mandatory')
mscMcsMgrProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrProceduralStatus.setStatus('mandatory')
mscMcsMgrControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrControlStatus.setStatus('mandatory')
mscMcsMgrAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrAlarmStatus.setStatus('mandatory')
mscMcsMgrStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrStandbyStatus.setStatus('mandatory')
mscMcsMgrUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrUnknownStatus.setStatus('mandatory')
mscMcsMgrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 12), )
if mibBuilder.loadTexts: mscMcsMgrOperTable.setStatus('mandatory')
mscMcsMgrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"))
if mibBuilder.loadTexts: mscMcsMgrOperEntry.setStatus('mandatory')
mscMcsMgrCurrentLp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 12, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrCurrentLp.setStatus('mandatory')
mscMcsMgrCurrentEps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrCurrentEps.setStatus('mandatory')
mscMcsMgrNsapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 12, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrNsapAddress.setStatus('mandatory')
mscMcsMgrCanLpsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 418), )
if mibBuilder.loadTexts: mscMcsMgrCanLpsTable.setStatus('mandatory')
mscMcsMgrCanLpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 418, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrCanLpsValue"))
if mibBuilder.loadTexts: mscMcsMgrCanLpsEntry.setStatus('mandatory')
mscMcsMgrCanLpsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 418, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrCanLpsValue.setStatus('mandatory')
mcsMgrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124, 1))
mcsMgrGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124, 1, 1))
mcsMgrGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124, 1, 1, 3))
mcsMgrGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124, 1, 1, 3, 2))
mcsMgrCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124, 3))
mcsMgrCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124, 3, 1))
mcsMgrCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124, 3, 1, 3))
mcsMgrCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 124, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-McsMgrMIB", mscMcsMgrCurrentEps=mscMcsMgrCurrentEps, mcsMgrCapabilitiesCA02A=mcsMgrCapabilitiesCA02A, mscMcsMgrMaxEps=mscMcsMgrMaxEps, mscMcsMgrCurrentLp=mscMcsMgrCurrentLp, mscMcsMgrRowStatusEntry=mscMcsMgrRowStatusEntry, mscMcsMgrStateTable=mscMcsMgrStateTable, mscMcsMgrControlStatus=mscMcsMgrControlStatus, mscMcsMgr=mscMcsMgr, mscMcsMgrStandbyStatus=mscMcsMgrStandbyStatus, mscMcsMgrRowStatus=mscMcsMgrRowStatus, mscMcsMgrAvailabilityStatus=mscMcsMgrAvailabilityStatus, mscMcsMgrCanLpsTable=mscMcsMgrCanLpsTable, mscMcsMgrLogicalProcessor=mscMcsMgrLogicalProcessor, mscMcsMgrStateEntry=mscMcsMgrStateEntry, mscMcsMgrSecurity=mscMcsMgrSecurity, mscMcsMgrProceduralStatus=mscMcsMgrProceduralStatus, mscMcsMgrComponentName=mscMcsMgrComponentName, mcsMgrCapabilitiesCA=mcsMgrCapabilitiesCA, mscMcsMgrNsapAddress=mscMcsMgrNsapAddress, mcsMgrCapabilitiesCA02=mcsMgrCapabilitiesCA02, mcsMgrMIB=mcsMgrMIB, mcsMgrGroupCA02A=mcsMgrGroupCA02A, mcsMgrGroupCA=mcsMgrGroupCA, mscMcsMgrCanLpsEntry=mscMcsMgrCanLpsEntry, mscMcsMgrProvTable=mscMcsMgrProvTable, mscMcsMgrOperationalState=mscMcsMgrOperationalState, mcsMgrGroup=mcsMgrGroup, mscMcsMgrIndex=mscMcsMgrIndex, mscMcsMgrAlarmStatus=mscMcsMgrAlarmStatus, mscMcsMgrAdminState=mscMcsMgrAdminState, mscMcsMgrRowStatusTable=mscMcsMgrRowStatusTable, mcsMgrGroupCA02=mcsMgrGroupCA02, mscMcsMgrOperTable=mscMcsMgrOperTable, mcsMgrCapabilities=mcsMgrCapabilities, mscMcsMgrOperEntry=mscMcsMgrOperEntry, mscMcsMgrOverrideNsapAddress=mscMcsMgrOverrideNsapAddress, mscMcsMgrProvEntry=mscMcsMgrProvEntry, mscMcsMgrUsageState=mscMcsMgrUsageState, mscMcsMgrUnknownStatus=mscMcsMgrUnknownStatus, mscMcsMgrStorageType=mscMcsMgrStorageType, mscMcsMgrEpAlarmThreshold=mscMcsMgrEpAlarmThreshold, mscMcsMgrCanLpsValue=mscMcsMgrCanLpsValue)
