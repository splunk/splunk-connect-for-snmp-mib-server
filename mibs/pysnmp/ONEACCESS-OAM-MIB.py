#
# PySNMP MIB module ONEACCESS-OAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEACCESS-OAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:25:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
atmVclEntry, = mibBuilder.importSymbols("ATM-MIB", "atmVclEntry")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
oacExpIMAtmOamStatistics, oacMIBModules = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMAtmOamStatistics", "oacMIBModules")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, iso, Counter64, Counter32, MibIdentifier, Bits, Gauge32, TimeTicks, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "iso", "Counter64", "Counter32", "MibIdentifier", "Bits", "Gauge32", "TimeTicks", "Integer32", "ObjectIdentity")
DisplayString, TimeInterval, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeInterval", "TextualConvention", "TimeStamp")
oacOamMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 673))
oacOamMIBModule.setRevisions(('2011-10-27 00:00', '2010-07-08 00:01',))
if mibBuilder.loadTexts: oacOamMIBModule.setLastUpdated('201110270000Z')
if mibBuilder.loadTexts: oacOamMIBModule.setOrganization(' OneAccess ')
oacAtmOamStatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1))
oacAtmOamStatNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 2))
oacAtmOamStatConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 3))
oacAtmOamStatSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1))
oacAtmOamSwitchMaxConnections = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchMaxConnections.setStatus('current')
oacAtmOamSwitchSegLoopback = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchSegLoopback.setStatus('current')
oacAtmOamSwitchEndLoopback = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchEndLoopback.setStatus('current')
oacAtmOamSwitchAisRdiEnable = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchAisRdiEnable.setStatus('current')
oacAtmOamSwitchSegmentContinuityCheckEnable = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchSegmentContinuityCheckEnable.setStatus('current')
oacAtmOamSwitchEndContinuityCheckEnable = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchEndContinuityCheckEnable.setStatus('current')
oacAtmOamSwitchOamCellsReceived = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchOamCellsReceived.setStatus('current')
oacAtmOamSwitchOamCellsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchOamCellsTransmitted.setStatus('current')
oacAtmOamSwitchCurrentConnections = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamSwitchCurrentConnections.setStatus('current')
oacAtmOamVclTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2), )
if mibBuilder.loadTexts: oacAtmOamVclTable.setStatus('current')
oacAtmOamVclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1), )
atmVclEntry.registerAugmentions(("ONEACCESS-OAM-MIB", "oacAtmOamVclEntry"))
oacAtmOamVclEntry.setIndexNames(*atmVclEntry.getIndexNames())
if mibBuilder.loadTexts: oacAtmOamVclEntry.setStatus('current')
oacAtmOamVclPvcManage = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclPvcManage.setStatus('current')
oacAtmOamVclSegmentLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclSegmentLoopback.setStatus('current')
oacAtmOamVclEndLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclEndLoopback.setStatus('current')
oacAtmOamVclAisRdiEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclAisRdiEnable.setStatus('current')
oacAtmOamVclSegmentContinuityCheckEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclSegmentContinuityCheckEnable.setStatus('current')
oacAtmOamVclEndContinuityCheckEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclEndContinuityCheckEnable.setStatus('current')
oacAtmOamVclLoopbackTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclLoopbackTxInterval.setStatus('current')
oacAtmOamVclLoopbackTxRetryFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclLoopbackTxRetryFrequency.setStatus('current')
oacAtmOamVclLoopbackTxRetryUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclLoopbackTxRetryUpCount.setStatus('current')
oacAtmOamVclLoopbackTxRetryDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclLoopbackTxRetryDownCount.setStatus('current')
oacAtmOamVclAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclAlarmState.setStatus('current')
oacAtmOamVclAlarmStateLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclAlarmStateLastChange.setStatus('current')
oacAtmOamVclAisRdiRetryDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclAisRdiRetryDownCount.setStatus('current')
oacAtmOamVclAisRdiRetryUpTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclAisRdiRetryUpTimer.setStatus('current')
oacAtmOamVclPvcIntrusive = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclPvcIntrusive.setStatus('current')
oacAtmOamVclCountersTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3), )
if mibBuilder.loadTexts: oacAtmOamVclCountersTable.setStatus('current')
oacAtmOamVclCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1), )
atmVclEntry.registerAugmentions(("ONEACCESS-OAM-MIB", "oacAtmOamVclCountersEntry"))
oacAtmOamVclCountersEntry.setIndexNames(*atmVclEntry.getIndexNames())
if mibBuilder.loadTexts: oacAtmOamVclCountersEntry.setStatus('current')
oacAtmOamVclOamCellsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclOamCellsReceived.setStatus('current')
oacAtmOamVclEndLoopbackIn = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclEndLoopbackIn.setStatus('current')
oacAtmOamVclSegLoopbackIn = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclSegLoopbackIn.setStatus('current')
oacAtmOamVclEndLoopIn = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclEndLoopIn.setStatus('current')
oacAtmOamVclSegLoopIn = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclSegLoopIn.setStatus('current')
oacAtmOamVclAisIn = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclAisIn.setStatus('current')
oacAtmOamVclRdiIn = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclRdiIn.setStatus('current')
oacAtmOamVclSegCCIn = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclSegCCIn.setStatus('current')
oacAtmOamVclEndCCIn = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclEndCCIn.setStatus('current')
oacAtmOamVclOamCellsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclOamCellsSent.setStatus('current')
oacAtmOamVclEndLoopbackOut = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclEndLoopbackOut.setStatus('current')
oacAtmOamVclSegLoopbackOut = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclSegLoopbackOut.setStatus('current')
oacAtmOamVclEndLoopOut = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclEndLoopOut.setStatus('current')
oacAtmOamVclSegLoopOut = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclSegLoopOut.setStatus('current')
oacAtmOamVclAisOut = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclAisOut.setStatus('current')
oacAtmOamVclRdiOut = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclRdiOut.setStatus('current')
oacAtmOamVclSegCCOut = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclSegCCOut.setStatus('current')
oacAtmOamVclEndCCOut = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclEndCCOut.setStatus('current')
oacAtmOamVclOamCellsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmOamVclOamCellsDropped.setStatus('current')
oacAtmOamStatGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 3, 1))
oacAtmOamStatCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 3, 2))
oacAtmOamStatCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 3, 2, 1)).setObjects(("ONEACCESS-OAM-MIB", "oacAtmOamStatGeneralGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacAtmOamStatCompliance = oacAtmOamStatCompliance.setStatus('current')
oacAtmOamStatGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 2, 3, 1, 1)).setObjects(("ONEACCESS-OAM-MIB", "oacAtmOamSwitchMaxConnections"), ("ONEACCESS-OAM-MIB", "oacAtmOamSwitchSegLoopback"), ("ONEACCESS-OAM-MIB", "oacAtmOamSwitchEndLoopback"), ("ONEACCESS-OAM-MIB", "oacAtmOamSwitchAisRdiEnable"), ("ONEACCESS-OAM-MIB", "oacAtmOamSwitchSegmentContinuityCheckEnable"), ("ONEACCESS-OAM-MIB", "oacAtmOamSwitchEndContinuityCheckEnable"), ("ONEACCESS-OAM-MIB", "oacAtmOamSwitchOamCellsReceived"), ("ONEACCESS-OAM-MIB", "oacAtmOamSwitchOamCellsTransmitted"), ("ONEACCESS-OAM-MIB", "oacAtmOamSwitchCurrentConnections"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclPvcManage"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclSegmentLoopback"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclEndLoopback"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclAisRdiEnable"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclSegmentContinuityCheckEnable"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclEndContinuityCheckEnable"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclLoopbackTxInterval"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclLoopbackTxRetryFrequency"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclLoopbackTxRetryUpCount"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclLoopbackTxRetryDownCount"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclAlarmState"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclAlarmStateLastChange"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclAisRdiRetryDownCount"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclAisRdiRetryUpTimer"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclPvcIntrusive"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclOamCellsReceived"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclEndLoopbackIn"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclSegLoopbackIn"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclEndLoopIn"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclSegLoopIn"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclAisIn"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclRdiIn"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclSegCCIn"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclEndCCIn"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclOamCellsSent"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclEndLoopbackOut"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclSegLoopbackOut"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclEndLoopOut"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclSegLoopOut"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclAisOut"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclRdiOut"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclSegCCOut"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclEndCCOut"), ("ONEACCESS-OAM-MIB", "oacAtmOamVclOamCellsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacAtmOamStatGeneralGroup = oacAtmOamStatGeneralGroup.setStatus('current')
mibBuilder.exportSymbols("ONEACCESS-OAM-MIB", oacAtmOamVclSegLoopbackOut=oacAtmOamVclSegLoopbackOut, oacAtmOamVclPvcIntrusive=oacAtmOamVclPvcIntrusive, oacAtmOamVclOamCellsSent=oacAtmOamVclOamCellsSent, oacAtmOamVclRdiOut=oacAtmOamVclRdiOut, oacAtmOamVclEndLoopback=oacAtmOamVclEndLoopback, oacAtmOamVclAisRdiRetryUpTimer=oacAtmOamVclAisRdiRetryUpTimer, oacAtmOamStatNotifications=oacAtmOamStatNotifications, oacAtmOamVclSegLoopIn=oacAtmOamVclSegLoopIn, oacAtmOamSwitchOamCellsReceived=oacAtmOamSwitchOamCellsReceived, oacAtmOamVclSegmentLoopback=oacAtmOamVclSegmentLoopback, oacAtmOamVclLoopbackTxRetryUpCount=oacAtmOamVclLoopbackTxRetryUpCount, oacAtmOamVclRdiIn=oacAtmOamVclRdiIn, oacAtmOamVclLoopbackTxRetryFrequency=oacAtmOamVclLoopbackTxRetryFrequency, oacAtmOamVclAisRdiEnable=oacAtmOamVclAisRdiEnable, oacAtmOamVclLoopbackTxInterval=oacAtmOamVclLoopbackTxInterval, oacAtmOamVclEndContinuityCheckEnable=oacAtmOamVclEndContinuityCheckEnable, oacAtmOamSwitchCurrentConnections=oacAtmOamSwitchCurrentConnections, oacAtmOamVclAlarmStateLastChange=oacAtmOamVclAlarmStateLastChange, oacAtmOamStatCompliance=oacAtmOamStatCompliance, oacAtmOamVclEndLoopIn=oacAtmOamVclEndLoopIn, PYSNMP_MODULE_ID=oacOamMIBModule, oacAtmOamVclPvcManage=oacAtmOamVclPvcManage, oacAtmOamVclTable=oacAtmOamVclTable, oacAtmOamSwitchSegmentContinuityCheckEnable=oacAtmOamSwitchSegmentContinuityCheckEnable, oacAtmOamVclOamCellsReceived=oacAtmOamVclOamCellsReceived, oacAtmOamStatSwitch=oacAtmOamStatSwitch, oacAtmOamVclEndLoopbackOut=oacAtmOamVclEndLoopbackOut, oacAtmOamVclAisIn=oacAtmOamVclAisIn, oacAtmOamVclSegLoopbackIn=oacAtmOamVclSegLoopbackIn, oacAtmOamVclEntry=oacAtmOamVclEntry, oacAtmOamSwitchEndContinuityCheckEnable=oacAtmOamSwitchEndContinuityCheckEnable, oacAtmOamSwitchSegLoopback=oacAtmOamSwitchSegLoopback, oacAtmOamSwitchAisRdiEnable=oacAtmOamSwitchAisRdiEnable, oacAtmOamVclCountersTable=oacAtmOamVclCountersTable, oacAtmOamStatGroups=oacAtmOamStatGroups, oacAtmOamVclSegLoopOut=oacAtmOamVclSegLoopOut, oacAtmOamVclSegCCOut=oacAtmOamVclSegCCOut, oacAtmOamVclEndCCOut=oacAtmOamVclEndCCOut, oacAtmOamVclEndCCIn=oacAtmOamVclEndCCIn, oacAtmOamStatConformance=oacAtmOamStatConformance, oacAtmOamVclCountersEntry=oacAtmOamVclCountersEntry, oacAtmOamVclAisRdiRetryDownCount=oacAtmOamVclAisRdiRetryDownCount, oacAtmOamSwitchMaxConnections=oacAtmOamSwitchMaxConnections, oacAtmOamSwitchOamCellsTransmitted=oacAtmOamSwitchOamCellsTransmitted, oacAtmOamVclOamCellsDropped=oacAtmOamVclOamCellsDropped, oacAtmOamVclAisOut=oacAtmOamVclAisOut, oacAtmOamVclEndLoopbackIn=oacAtmOamVclEndLoopbackIn, oacAtmOamVclSegCCIn=oacAtmOamVclSegCCIn, oacAtmOamVclSegmentContinuityCheckEnable=oacAtmOamVclSegmentContinuityCheckEnable, oacAtmOamStatObjects=oacAtmOamStatObjects, oacAtmOamVclLoopbackTxRetryDownCount=oacAtmOamVclLoopbackTxRetryDownCount, oacAtmOamVclEndLoopOut=oacAtmOamVclEndLoopOut, oacAtmOamStatGeneralGroup=oacAtmOamStatGeneralGroup, oacAtmOamSwitchEndLoopback=oacAtmOamSwitchEndLoopback, oacAtmOamVclAlarmState=oacAtmOamVclAlarmState, oacOamMIBModule=oacOamMIBModule, oacAtmOamStatCompliances=oacAtmOamStatCompliances)
