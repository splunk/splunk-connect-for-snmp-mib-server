#
# PySNMP MIB module ENTERASYS-SSH-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-SSH-SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:50:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, ModuleIdentity, Counter64, IpAddress, TimeTicks, Counter32, Unsigned32, MibIdentifier, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "Counter64", "IpAddress", "TimeTicks", "Counter32", "Unsigned32", "MibIdentifier", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "Integer32")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
etsysSshServerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26))
etsysSshServerMIB.setRevisions(('2003-02-19 19:03', '2002-11-14 15:41', '2002-09-27 17:48', '2002-09-18 20:41',))
if mibBuilder.loadTexts: etsysSshServerMIB.setLastUpdated('200302191903Z')
if mibBuilder.loadTexts: etsysSshServerMIB.setOrganization('Enterasys Networks, Inc')
etsysSshObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1))
etsysSshGeneralBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 1))
etsysSshNetworkBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 2))
etsysSshCryptoBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 3))
etsysSshLoginBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 4))
etsysSshServerKeyBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 5))
etsysSshAuthBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 6))
etsysSshEnabled = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshEnabled.setStatus('deprecated')
etsysSshEventLogFilter = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("information", 2), ("warning", 3), ("error", 4))).clone('error')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshEventLogFilter.setStatus('deprecated')
etsysSshMaxConnections = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSshMaxConnections.setStatus('deprecated')
etsysSshNumConnections = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshNumConnections.setStatus('deprecated')
etsysSshCiphers = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("anyStdCipher", 1), ("anyCipher", 2), ("des", 3), ("tripleDes", 4), ("blowfish", 5), ("arcFour", 6), ("twofish", 7), ("cast128", 8), ("aes", 9))).clone('anyStdCipher')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshCiphers.setStatus('deprecated')
etsysSshMACs = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("anyStdMac", 1), ("anyMac", 2), ("hmacSha1", 3), ("hmacSha1Dash96", 4), ("hmacMd5", 5), ("hmacMd5Dash96", 6), ("hmacRipemd160", 7), ("hmacRipemd160Dash96", 8))).clone('anyStdMac')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshMACs.setStatus('deprecated')
etsysSshRekeyIntervalSeconds = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshRekeyIntervalSeconds.setStatus('deprecated')
etsysSshRandomSeed = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 3, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshRandomSeed.setStatus('deprecated')
etsysSshLoginGraceTime = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshLoginGraceTime.setStatus('deprecated')
etsysSshIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(10)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshIdleTimeout.setStatus('deprecated')
etsysSshBannerMessage = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshBannerMessage.setStatus('deprecated')
etsysSshGenerateHostKeys = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notInitiated", 1), ("completed", 2), ("failed", 3), ("generate", 4), ("completedPending", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshGenerateHostKeys.setStatus('deprecated')
etsysSshPublicHostKey = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSshPublicHostKey.setStatus('deprecated')
etsysSshAdminKeyType = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("dsa768", 1), ("rsa768", 2), ("dsa1024", 3), ("rsa1024", 4), ("dsa2048", 5), ("rsa2048", 6), ("dsa3072", 7), ("rsa3072", 8), ("dsa512", 9), ("rsa512", 10))).clone('rsa1024')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshAdminKeyType.setStatus('deprecated')
etsysSshOperKeyType = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 99))).clone(namedValues=NamedValues(("dsa768", 1), ("rsa768", 2), ("dsa1024", 3), ("rsa1024", 4), ("dsa2048", 5), ("rsa2048", 6), ("dsa3072", 7), ("rsa3072", 8), ("dsa512", 9), ("rsa512", 10), ("none", 99))).clone('rsa1024')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysSshOperKeyType.setStatus('deprecated')
etsysSshPasswordGuesses = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshPasswordGuesses.setStatus('deprecated')
etsysSshAllowedAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allAuth", 1), ("password", 2), ("publickey", 3))).clone('password')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshAllowedAuthentications.setStatus('deprecated')
etsysSshRequiredAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuth", 1), ("password", 2), ("publickey", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysSshRequiredAuthentications.setStatus('deprecated')
etsysSshConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 2))
etsysSshGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 2, 1))
etsysSshCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 2, 2))
etsysSshBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 2, 1, 1)).setObjects(("ENTERASYS-SSH-SERVER-MIB", "etsysSshEnabled"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshMaxConnections"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshNumConnections"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshCiphers"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshMACs"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshRekeyIntervalSeconds"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshRandomSeed"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshGenerateHostKeys"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshPublicHostKey"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshAdminKeyType"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshOperKeyType"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshAllowedAuthentications"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshRequiredAuthentications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSshBaseGroup = etsysSshBaseGroup.setStatus('deprecated')
etsysSshAdvancedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 2, 1, 2)).setObjects(("ENTERASYS-SSH-SERVER-MIB", "etsysSshBannerMessage"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshLoginGraceTime"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshIdleTimeout"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshPasswordGuesses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSshAdvancedGroup = etsysSshAdvancedGroup.setStatus('deprecated')
etsysSshEventLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 2, 1, 3)).setObjects(("ENTERASYS-SSH-SERVER-MIB", "etsysSshEventLogFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSshEventLogGroup = etsysSshEventLogGroup.setStatus('deprecated')
etsysSshCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 26, 2, 2, 1)).setObjects(("ENTERASYS-SSH-SERVER-MIB", "etsysSshBaseGroup"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshAdvancedGroup"), ("ENTERASYS-SSH-SERVER-MIB", "etsysSshEventLogGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysSshCompliance = etsysSshCompliance.setStatus('deprecated')
mibBuilder.exportSymbols("ENTERASYS-SSH-SERVER-MIB", etsysSshBannerMessage=etsysSshBannerMessage, etsysSshObjects=etsysSshObjects, etsysSshGeneralBranch=etsysSshGeneralBranch, etsysSshRequiredAuthentications=etsysSshRequiredAuthentications, etsysSshServerKeyBranch=etsysSshServerKeyBranch, etsysSshMaxConnections=etsysSshMaxConnections, etsysSshPasswordGuesses=etsysSshPasswordGuesses, etsysSshServerMIB=etsysSshServerMIB, etsysSshRandomSeed=etsysSshRandomSeed, etsysSshIdleTimeout=etsysSshIdleTimeout, etsysSshPublicHostKey=etsysSshPublicHostKey, etsysSshCompliances=etsysSshCompliances, etsysSshAdvancedGroup=etsysSshAdvancedGroup, etsysSshCiphers=etsysSshCiphers, etsysSshAllowedAuthentications=etsysSshAllowedAuthentications, etsysSshAuthBranch=etsysSshAuthBranch, etsysSshLoginBranch=etsysSshLoginBranch, etsysSshEnabled=etsysSshEnabled, etsysSshMACs=etsysSshMACs, etsysSshConformance=etsysSshConformance, etsysSshBaseGroup=etsysSshBaseGroup, etsysSshRekeyIntervalSeconds=etsysSshRekeyIntervalSeconds, etsysSshAdminKeyType=etsysSshAdminKeyType, etsysSshLoginGraceTime=etsysSshLoginGraceTime, etsysSshEventLogFilter=etsysSshEventLogFilter, etsysSshCryptoBranch=etsysSshCryptoBranch, etsysSshGenerateHostKeys=etsysSshGenerateHostKeys, etsysSshNetworkBranch=etsysSshNetworkBranch, etsysSshCompliance=etsysSshCompliance, etsysSshGroups=etsysSshGroups, etsysSshNumConnections=etsysSshNumConnections, etsysSshOperKeyType=etsysSshOperKeyType, PYSNMP_MODULE_ID=etsysSshServerMIB, etsysSshEventLogGroup=etsysSshEventLogGroup)
