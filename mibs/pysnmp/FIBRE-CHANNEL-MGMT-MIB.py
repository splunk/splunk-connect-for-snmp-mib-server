#
# PySNMP MIB module FIBRE-CHANNEL-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FIBRE-CHANNEL-MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:59:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Bits, ObjectIdentity, NotificationType, Gauge32, MibIdentifier, Unsigned32, Counter32, Counter64, Integer32, IpAddress, TimeTicks, iso, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "ObjectIdentity", "NotificationType", "Gauge32", "MibIdentifier", "Unsigned32", "Counter32", "Counter64", "Integer32", "IpAddress", "TimeTicks", "iso", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
fcMgmtMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 8888))
fcMgmtMIB.setRevisions(('2001-01-15 00:00', '2000-12-04 00:00', '2000-11-26 00:00', '2000-04-12 00:00',))
if mibBuilder.loadTexts: fcMgmtMIB.setLastUpdated('200101150000Z')
if mibBuilder.loadTexts: fcMgmtMIB.setOrganization('IETF IPFC Working Group')
fcMgmtNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 0))
fcMgmtObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 1))
fcMgmtConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 2))
fcMgmtConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 1, 1))
fcMgmtNotifyFilter = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 1, 2))
fcMgmtStatistics = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 1, 3))
fcMgmtSNS = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 1, 4))
fcMgmtCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 2, 1))
fcMgmtGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 8888, 2, 2))
class FcNameId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class FcGlobalId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

class FcEventSeverity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("unknown", 1), ("emergency", 2), ("alert", 3), ("critical", 4), ("error", 5), ("warning", 6), ("notify", 7), ("info", 8), ("debug", 9), ("mark", 10))

class FcUnitType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("unknown", 1), ("other", 2), ("hub", 3), ("switch", 4), ("gateway", 5), ("converter", 6), ("hba", 7), ("proxyAgent", 8), ("storageDevice", 9), ("host", 10), ("storageSubsystem", 11), ("module", 12), ("swDriver", 13), ("storageAccessDevice", 14))

class FcPortFCClass(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("unknown", 0), ("classF", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("class4", 5), ("class5", 6), ("class6", 7))

fcConnUnitNumber = MibScalar((1, 3, 6, 1, 2, 1, 8888, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitNumber.setStatus('current')
fcConnURL = MibScalar((1, 3, 6, 1, 2, 1, 8888, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnURL.setStatus('current')
fcConnUnitTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3), )
if mibBuilder.loadTexts: fcConnUnitTable.setStatus('current')
fcConnUnitEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"))
if mibBuilder.loadTexts: fcConnUnitEntry.setStatus('current')
fcConnUnitId = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitId.setStatus('current')
fcConnUnitGlobalId = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 2), FcGlobalId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitGlobalId.setStatus('current')
fcConnUnitType = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 3), FcUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitType.setStatus('current')
fcConnUnitNumPorts = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitNumPorts.setStatus('current')
fcConnUnitNumLinks = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitNumLinks.setStatus('current')
fcConnUnitState = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("online", 2), ("offline", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitState.setStatus('current')
fcConnUnitStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("unused", 2), ("ok", 3), ("warning", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitStatus.setStatus('current')
fcConnUnitProduct = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitProduct.setStatus('current')
fcConnUnitSerialNo = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSerialNo.setStatus('current')
fcConnUnitUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitUpTime.setStatus('current')
fcConnUnitUrl = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitUrl.setStatus('current')
fcConnUnitDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitDomainId.setStatus('current')
fcConnUnitProxyMaster = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("no", 2), ("yes", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitProxyMaster.setStatus('current')
fcConnUnitPrincipal = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("no", 2), ("yes", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPrincipal.setStatus('current')
fcConnUnitNumSensors = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitNumSensors.setStatus('current')
fcConnUnitNumRevs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitNumRevs.setStatus('current')
fcConnUnitModuleId = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitModuleId.setStatus('current')
fcConnUnitName = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 18), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcConnUnitName.setStatus('current')
fcConnUnitInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 19), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcConnUnitInfo.setStatus('current')
fcConnUnitControl = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("invalid", 2), ("resetConnUnitColdStart", 3), ("resetConnUnitWarmStart", 4), ("offlineConnUnit", 5), ("onlineConnUnit", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcConnUnitControl.setStatus('current')
fcConnUnitContact = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 21), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcConnUnitContact.setStatus('current')
fcConnUnitLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 22), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcConnUnitLocation.setStatus('current')
fcConnUnitEventFilter = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 23), FcEventSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcConnUnitEventFilter.setStatus('current')
fcConnUnitNumEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitNumEvents.setStatus('current')
fcConnUnitMaxEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitMaxEvents.setStatus('current')
fcConnUnitEventCurrID = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitEventCurrID.setStatus('current')
fcConnUnitFabricID = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 3, 1, 27), FcGlobalId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitFabricID.setStatus('current')
fcConnUnitRevsTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 1, 4), )
if mibBuilder.loadTexts: fcConnUnitRevsTable.setStatus('current')
fcConnUnitRevsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 1, 4, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"), (0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitRevsIndex"))
if mibBuilder.loadTexts: fcConnUnitRevsEntry.setStatus('current')
fcConnUnitRevsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitRevsIndex.setStatus('current')
fcConnUnitRevsRevision = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 4, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitRevsRevision.setStatus('current')
fcConnUnitRevsDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 4, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitRevsDescription.setStatus('current')
fcConnUnitSensorTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5), )
if mibBuilder.loadTexts: fcConnUnitSensorTable.setStatus('current')
fcConnUnitSensorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"), (0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorIndex"))
if mibBuilder.loadTexts: fcConnUnitSensorEntry.setStatus('current')
fcConnUnitSensorIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSensorIndex.setStatus('current')
fcConnUnitSensorName = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSensorName.setStatus('current')
fcConnUnitSensorStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("ok", 3), ("warning", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSensorStatus.setStatus('current')
fcConnUnitSensorInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSensorInfo.setStatus('current')
fcConnUnitSensorMessage = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSensorMessage.setStatus('current')
fcConnUnitSensorType = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("battery", 3), ("fan", 4), ("powerSupply", 5), ("transmitter", 6), ("enclosure", 7), ("board", 8), ("receiver", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSensorType.setStatus('current')
fcConnUnitSensorCharacteristic = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("temperature", 3), ("pressure", 4), ("emf", 5), ("currentValue", 6), ("airflow", 7), ("frequency", 8), ("power", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSensorCharacteristic.setStatus('current')
fcConnUnitPortTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6), )
if mibBuilder.loadTexts: fcConnUnitPortTable.setStatus('current')
fcConnUnitPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"), (0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortIndex"))
if mibBuilder.loadTexts: fcConnUnitPortEntry.setStatus('current')
fcConnUnitPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortIndex.setStatus('current')
fcConnUnitPortType = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("notPresent", 3), ("hubPort", 4), ("nPort", 5), ("lPort", 6), ("flPort", 7), ("fPort", 8), ("ePort", 9), ("gPort", 10), ("domainController", 11), ("hubController", 12), ("scsi", 13), ("escon", 14), ("lan", 15), ("wan", 16), ("wdm", 17), ("ib", 18), ("ipstore", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortType.setStatus('current')
fcConnUnitPortFCClassCap = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 3), FcPortFCClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortFCClassCap.setStatus('current')
fcConnUnitPortFCClassOp = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 4), FcPortFCClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortFCClassOp.setStatus('current')
fcConnUnitPortState = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("online", 2), ("offline", 3), ("bypassed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortState.setStatus('current')
fcConnUnitPortStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("unused", 2), ("ok", 3), ("warning", 4), ("failure", 5), ("notParticipating", 6), ("initializing", 7), ("bypassed", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatus.setStatus('current')
fcConnUnitPortTransmitterType = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("unused", 3), ("shortwave", 4), ("longwave", 5), ("copper", 6), ("scsi", 7), ("longwaveNoOFC", 8), ("shortwaveNoOFC", 9), ("longwaveLED", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortTransmitterType.setStatus('current')
fcConnUnitPortModuleType = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("gbic", 3), ("embedded", 4), ("glm", 5), ("gbicSerialId", 6), ("gbicNoSerialId", 7), ("gbicNotInstalled", 8), ("smallFormFactor", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortModuleType.setStatus('current')
fcConnUnitPortWwn = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 9), FcGlobalId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortWwn.setStatus('current')
fcConnUnitPortFCId = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortFCId.setStatus('current')
fcConnUnitPortSerialNo = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortSerialNo.setStatus('current')
fcConnUnitPortRevision = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortRevision.setStatus('current')
fcConnUnitPortVendor = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortVendor.setStatus('current')
fcConnUnitPortSpeed = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 14), Unsigned32()).setUnits('kilobytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortSpeed.setStatus('current')
fcConnUnitPortControl = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("invalid", 2), ("resetConnUnitPort", 3), ("bypassConnUnitPort", 4), ("unbypassConnUnitPort", 5), ("offlineConnUnitPort", 6), ("onlineConnUnitPort", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcConnUnitPortControl.setStatus('current')
fcConnUnitPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 16), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcConnUnitPortName.setStatus('current')
fcConnUnitPortPhysicalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortPhysicalNumber.setStatus('current')
fcConnUnitPortProtocolCap = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortProtocolCap.setStatus('current')
fcConnUnitPortProtocolOp = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortProtocolOp.setStatus('current')
fcConnUnitPortNodeWwn = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 20), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortNodeWwn.setStatus('current')
fcConnUnitPortHWState = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 6, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("failed", 2), ("bypassed", 3), ("active", 4), ("loopback", 5), ("txfault", 6), ("noMedia", 7), ("linkDown", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortHWState.setStatus('current')
fcConnUnitEventTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7), )
if mibBuilder.loadTexts: fcConnUnitEventTable.setStatus('current')
fcConnUnitEventEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"), (0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventIndex"))
if mibBuilder.loadTexts: fcConnUnitEventEntry.setStatus('current')
fcConnUnitEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitEventIndex.setStatus('current')
fcConnUnitREventTime = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(15, 15)).setFixedLength(15)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitREventTime.setStatus('current')
fcConnUnitSEventTime = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSEventTime.setStatus('current')
fcConnUnitEventSeverity = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7, 1, 4), FcEventSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitEventSeverity.setStatus('current')
fcConnUnitEventType = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("status", 3), ("configuration", 4), ("topology", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitEventType.setStatus('current')
fcConnUnitEventObject = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitEventObject.setStatus('current')
fcConnUnitEventDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 7, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitEventDescr.setStatus('current')
fcConnUnitLinkTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8), )
if mibBuilder.loadTexts: fcConnUnitLinkTable.setStatus('current')
fcConnUnitLinkEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"), (0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkIndex"))
if mibBuilder.loadTexts: fcConnUnitLinkEntry.setStatus('current')
fcConnUnitLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkIndex.setStatus('current')
fcConnUnitLinkNodeIdX = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkNodeIdX.setStatus('current')
fcConnUnitLinkPortNumberX = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkPortNumberX.setStatus('current')
fcConnUnitLinkPortWwnX = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkPortWwnX.setStatus('current')
fcConnUnitLinkNodeIdY = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkNodeIdY.setStatus('current')
fcConnUnitLinkPortNumberY = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkPortNumberY.setStatus('current')
fcConnUnitLinkPortWwnY = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkPortWwnY.setStatus('current')
fcConnUnitLinkAgentAddressY = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkAgentAddressY.setStatus('current')
fcConnUnitLinkAgentAddressTypeY = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkAgentAddressTypeY.setStatus('current')
fcConnUnitLinkAgentMask = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkAgentMask.setStatus('current')
fcConnUnitLinkAgentPortY = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkAgentPortY.setStatus('current')
fcConnUnitLinkUnitTypeY = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 12), FcUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkUnitTypeY.setStatus('current')
fcConnUnitLinkConnIdY = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 1, 8, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitLinkConnIdY.setStatus('current')
fcConnUnitPortStatTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1), )
if mibBuilder.loadTexts: fcConnUnitPortStatTable.setStatus('current')
fcConnUnitPortStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"), (0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatIndex"))
if mibBuilder.loadTexts: fcConnUnitPortStatEntry.setStatus('current')
fcConnUnitPortStatIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatIndex.setStatus('current')
fcConnUnitPortStatErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatErrs.setStatus('current')
fcConnUnitPortStatTxObjects = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatTxObjects.setStatus('current')
fcConnUnitPortStatRxObjects = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatRxObjects.setStatus('current')
fcConnUnitPortStatTxElements = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatTxElements.setStatus('current')
fcConnUnitPortStatRxElements = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatRxElements.setStatus('current')
fcConnUnitPortStatBBCreditZero = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatBBCreditZero.setStatus('current')
fcConnUnitPortStatInputBuffsFull = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatInputBuffsFull.setStatus('current')
fcConnUnitPortStatFBSYFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatFBSYFrames.setStatus('current')
fcConnUnitPortStatPBSYFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatPBSYFrames.setStatus('current')
fcConnUnitPortStatFRJTFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatFRJTFrames.setStatus('current')
fcConnUnitPortStatPRJTFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatPRJTFrames.setStatus('current')
fcConnUnitPortStatC1RxFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC1RxFrames.setStatus('current')
fcConnUnitPortStatC1TxFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC1TxFrames.setStatus('current')
fcConnUnitPortStatC1FBSYFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC1FBSYFrames.setStatus('current')
fcConnUnitPortStatC1PBSYFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC1PBSYFrames.setStatus('current')
fcConnUnitPortStatC1FRJTFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC1FRJTFrames.setStatus('current')
fcConnUnitPortStatC1PRJTFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC1PRJTFrames.setStatus('current')
fcConnUnitPortStatC2RxFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC2RxFrames.setStatus('current')
fcConnUnitPortStatC2TxFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC2TxFrames.setStatus('current')
fcConnUnitPortStatC2FBSYFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC2FBSYFrames.setStatus('current')
fcConnUnitPortStatC2PBSYFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC2PBSYFrames.setStatus('current')
fcConnUnitPortStatC2FRJTFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC2FRJTFrames.setStatus('current')
fcConnUnitPortStatC2PRJTFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC2PRJTFrames.setStatus('current')
fcConnUnitPortStatC3RxFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC3RxFrames.setStatus('current')
fcConnUnitPortStatC3TxFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC3TxFrames.setStatus('current')
fcConnUnitPortStatC3Discards = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatC3Discards.setStatus('current')
fcConnUnitPortStatRxMcastObjects = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatRxMcastObjects.setStatus('current')
fcConnUnitPortStatTxMcastObjects = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatTxMcastObjects.setStatus('current')
fcConnUnitPortStatRxBcastObjects = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatRxBcastObjects.setStatus('current')
fcConnUnitPortStatTxBcastObjects = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatTxBcastObjects.setStatus('current')
fcConnUnitPortStatRxLinkResets = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatRxLinkResets.setStatus('current')
fcConnUnitPortStatTxLinkResets = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatTxLinkResets.setStatus('current')
fcConnUnitPortStatLinkResets = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatLinkResets.setStatus('current')
fcConnUnitPortStatRxOfflineSeqs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatRxOfflineSeqs.setStatus('current')
fcConnUnitPortStatTxOfflineSeqs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatTxOfflineSeqs.setStatus('current')
fcConnUnitPortStatOfflineSeqs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatOfflineSeqs.setStatus('current')
fcConnUnitPortStatLinkFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatLinkFailures.setStatus('current')
fcConnUnitPortStatInvalidCRC = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatInvalidCRC.setStatus('current')
fcConnUnitPortStatInvalidTxWords = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatInvalidTxWords.setStatus('current')
fcConnUnitPortStatPSPErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatPSPErrs.setStatus('current')
fcConnUnitPortStatLossOfSignal = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatLossOfSignal.setStatus('current')
fcConnUnitPortStatLossOfSync = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatLossOfSync.setStatus('current')
fcConnUnitPortStatInvOrderedSets = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatInvOrderedSets.setStatus('current')
fcConnUnitPortStatFramesTooLong = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatFramesTooLong.setStatus('current')
fcConnUnitPortStatFramesTooShort = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatFramesTooShort.setStatus('current')
fcConnUnitPortStatAddressErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatAddressErrs.setStatus('current')
fcConnUnitPortStatDelimiterErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatDelimiterErrs.setStatus('current')
fcConnUnitPortStatEncodingErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 3, 1, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitPortStatEncodingErrs.setStatus('current')
fcConnUnitSnsMaxRows = MibScalar((1, 3, 6, 1, 2, 1, 8888, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsMaxRows.setStatus('current')
fcConnUnitSnsTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1), )
if mibBuilder.loadTexts: fcConnUnitSnsTable.setStatus('current')
fcConnUnitSnsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"), (0, "FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsPortName"))
if mibBuilder.loadTexts: fcConnUnitSnsEntry.setStatus('current')
fcConnUnitSnsPortIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 1), FcGlobalId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsPortIdentifier.setStatus('current')
fcConnUnitSnsPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 2), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsPortName.setStatus('current')
fcConnUnitSnsNodeName = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 3), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsNodeName.setStatus('current')
fcConnUnitSnsClassOfSvc = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsClassOfSvc.setStatus('current')
fcConnUnitSnsNodeIPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsNodeIPAddress.setStatus('current')
fcConnUnitSnsProcAssoc = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsProcAssoc.setStatus('current')
fcConnUnitSnsFC4Type = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsFC4Type.setStatus('current')
fcConnUnitSnsPortType = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsPortType.setStatus('current')
fcConnUnitSnsPortIPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsPortIPAddress.setStatus('current')
fcConnUnitSnsFabricPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 10), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsFabricPortName.setStatus('current')
fcConnUnitSnsHardAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 11), FcGlobalId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsHardAddress.setStatus('current')
fcConnUnitSnsSymbolicPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsSymbolicPortName.setStatus('current')
fcConnUnitSnsSymbolicNodeName = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 4, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcConnUnitSnsSymbolicNodeName.setStatus('current')
fcTrapMaxClients = MibScalar((1, 3, 6, 1, 2, 1, 8888, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcTrapMaxClients.setStatus('current')
fcTrapClientCount = MibScalar((1, 3, 6, 1, 2, 1, 8888, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcTrapClientCount.setStatus('current')
fcTrapRegTable = MibTable((1, 3, 6, 1, 2, 1, 8888, 1, 2, 3), )
if mibBuilder.loadTexts: fcTrapRegTable.setStatus('current')
fcTrapRegEntry = MibTableRow((1, 3, 6, 1, 2, 1, 8888, 1, 2, 3, 1), ).setIndexNames((0, "FIBRE-CHANNEL-MGMT-MIB", "fcTrapRegIpAddress"), (0, "FIBRE-CHANNEL-MGMT-MIB", "fcTrapRegPort"))
if mibBuilder.loadTexts: fcTrapRegEntry.setStatus('current')
fcTrapRegIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 2, 3, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTrapRegIpAddress.setStatus('current')
fcTrapRegPort = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTrapRegPort.setStatus('current')
fcTrapRegFilter = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 2, 3, 1, 3), FcEventSeverity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTrapRegFilter.setStatus('current')
fcTrapRegRowState = MibTableColumn((1, 3, 6, 1, 2, 1, 8888, 1, 2, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTrapRegRowState.setStatus('current')
fcConnUnitStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 8888, 0, 1)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitStatus"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitState"))
if mibBuilder.loadTexts: fcConnUnitStatusChange.setStatus('current')
fcConnUnitDeletedTrap = NotificationType((1, 3, 6, 1, 2, 1, 8888, 0, 2)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitGlobalId"))
if mibBuilder.loadTexts: fcConnUnitDeletedTrap.setStatus('current')
fcConnUnitEventTrap = NotificationType((1, 3, 6, 1, 2, 1, 8888, 0, 3)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitGlobalId"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventType"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventObject"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventDescr"))
if mibBuilder.loadTexts: fcConnUnitEventTrap.setStatus('current')
fcConnUnitSensorStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 8888, 0, 4)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorStatus"))
if mibBuilder.loadTexts: fcConnUnitSensorStatusChange.setStatus('current')
fcConnUnitPortStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 8888, 0, 5)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatus"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortState"))
if mibBuilder.loadTexts: fcConnUnitPortStatusChange.setStatus('current')
fcMgmtCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 8888, 2, 1, 1)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitGroup"), ("FIBRE-CHANNEL-MGMT-MIB", "fcCuEventGroup"), ("FIBRE-CHANNEL-MGMT-MIB", "fcCuLinkGroup"), ("FIBRE-CHANNEL-MGMT-MIB", "fcCuPortStatsGroup"), ("FIBRE-CHANNEL-MGMT-MIB", "fcCuTrapFiltersGroup"), ("FIBRE-CHANNEL-MGMT-MIB", "fcCuNotificationsGroup"), ("FIBRE-CHANNEL-MGMT-MIB", "fcCuSNSGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcMgmtCompliance = fcMgmtCompliance.setStatus('current')
fcConnUnitGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 8888, 2, 2, 1)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitNumber"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnURL"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitId"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitGlobalId"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitType"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitNumPorts"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitNumLinks"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitState"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitStatus"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitProduct"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSerialNo"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitUpTime"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitUrl"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitDomainId"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitProxyMaster"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPrincipal"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitNumSensors"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitNumRevs"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitModuleId"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitName"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitInfo"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitControl"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitContact"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLocation"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventFilter"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitNumEvents"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitMaxEvents"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventCurrID"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitFabricID"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitRevsIndex"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitRevsRevision"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitRevsDescription"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorIndex"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorName"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorStatus"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorInfo"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorMessage"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorType"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorCharacteristic"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortIndex"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortType"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortFCClassCap"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortFCClassOp"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortState"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatus"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortTransmitterType"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortModuleType"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortWwn"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortFCId"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortSerialNo"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortRevision"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortVendor"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortSpeed"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortControl"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortName"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortPhysicalNumber"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortProtocolCap"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortProtocolOp"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortNodeWwn"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortHWState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcConnUnitGroup = fcConnUnitGroup.setStatus('current')
fcCuEventGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 8888, 2, 2, 2)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventIndex"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitREventTime"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSEventTime"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventSeverity"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventType"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventObject"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcCuEventGroup = fcCuEventGroup.setStatus('current')
fcCuLinkGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 8888, 2, 2, 3)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkIndex"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkNodeIdX"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkPortNumberX"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkPortWwnX"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkNodeIdY"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkPortNumberY"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkPortWwnY"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkAgentAddressY"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkAgentAddressTypeY"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkAgentMask"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkAgentPortY"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkUnitTypeY"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitLinkConnIdY"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcCuLinkGroup = fcCuLinkGroup.setStatus('current')
fcCuPortStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 8888, 2, 2, 4)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatIndex"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatErrs"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatTxObjects"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatRxObjects"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatTxElements"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatRxElements"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatBBCreditZero"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatInputBuffsFull"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatFBSYFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatPBSYFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatFRJTFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatPRJTFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC1RxFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC1TxFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC1FBSYFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC1PBSYFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC1FRJTFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC1PRJTFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC2RxFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC2TxFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC2FBSYFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC2PBSYFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC2FRJTFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC2PRJTFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC3RxFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC3TxFrames"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatC3Discards"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatRxMcastObjects"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatTxMcastObjects"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatRxBcastObjects"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatTxBcastObjects"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatRxLinkResets"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatTxLinkResets"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatLinkResets"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatRxOfflineSeqs"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatTxOfflineSeqs"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatOfflineSeqs"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatLinkFailures"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatInvalidCRC"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatInvalidTxWords"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatPSPErrs"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatLossOfSignal"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatLossOfSync"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatInvOrderedSets"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatFramesTooLong"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatFramesTooShort"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatAddressErrs"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatDelimiterErrs"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatEncodingErrs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcCuPortStatsGroup = fcCuPortStatsGroup.setStatus('current')
fcCuSNSGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 8888, 2, 2, 5)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsMaxRows"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsPortIdentifier"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsPortName"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsNodeName"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsClassOfSvc"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsNodeIPAddress"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsProcAssoc"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsFC4Type"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsPortType"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsPortIPAddress"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsFabricPortName"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsHardAddress"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsSymbolicPortName"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSnsSymbolicNodeName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcCuSNSGroup = fcCuSNSGroup.setStatus('current')
fcCuTrapFiltersGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 8888, 2, 2, 6)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcTrapMaxClients"), ("FIBRE-CHANNEL-MGMT-MIB", "fcTrapClientCount"), ("FIBRE-CHANNEL-MGMT-MIB", "fcTrapRegIpAddress"), ("FIBRE-CHANNEL-MGMT-MIB", "fcTrapRegPort"), ("FIBRE-CHANNEL-MGMT-MIB", "fcTrapRegFilter"), ("FIBRE-CHANNEL-MGMT-MIB", "fcTrapRegRowState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcCuTrapFiltersGroup = fcCuTrapFiltersGroup.setStatus('current')
fcCuNotificationsGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 8888, 2, 2, 7)).setObjects(("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitStatusChange"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitDeletedTrap"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitEventTrap"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitSensorStatusChange"), ("FIBRE-CHANNEL-MGMT-MIB", "fcConnUnitPortStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcCuNotificationsGroup = fcCuNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("FIBRE-CHANNEL-MGMT-MIB", fcMgmtObjects=fcMgmtObjects, fcMgmtNotifyFilter=fcMgmtNotifyFilter, fcConnUnitPortSpeed=fcConnUnitPortSpeed, fcConnUnitLinkIndex=fcConnUnitLinkIndex, fcConnUnitPortStatInvalidCRC=fcConnUnitPortStatInvalidCRC, fcConnUnitPortStatEncodingErrs=fcConnUnitPortStatEncodingErrs, fcConnUnitPortWwn=fcConnUnitPortWwn, fcConnUnitPortStatC2FBSYFrames=fcConnUnitPortStatC2FBSYFrames, fcConnUnitPortStatC2PBSYFrames=fcConnUnitPortStatC2PBSYFrames, fcConnUnitSensorIndex=fcConnUnitSensorIndex, fcConnUnitPortStatPBSYFrames=fcConnUnitPortStatPBSYFrames, fcConnUnitSnsNodeIPAddress=fcConnUnitSnsNodeIPAddress, fcConnUnitPortStatC2FRJTFrames=fcConnUnitPortStatC2FRJTFrames, FcNameId=FcNameId, fcConnUnitId=fcConnUnitId, fcConnUnitPortStatAddressErrs=fcConnUnitPortStatAddressErrs, fcConnUnitLinkAgentAddressY=fcConnUnitLinkAgentAddressY, fcConnUnitPortStatTxBcastObjects=fcConnUnitPortStatTxBcastObjects, fcMgmtSNS=fcMgmtSNS, fcConnUnitPortStatTable=fcConnUnitPortStatTable, fcConnUnitPortStatFRJTFrames=fcConnUnitPortStatFRJTFrames, fcConnUnitNumRevs=fcConnUnitNumRevs, fcConnUnitLinkAgentMask=fcConnUnitLinkAgentMask, fcConnUnitPortStatRxObjects=fcConnUnitPortStatRxObjects, fcConnUnitPortStatFramesTooShort=fcConnUnitPortStatFramesTooShort, fcConnUnitPortStatEntry=fcConnUnitPortStatEntry, fcConnUnitPortStatRxElements=fcConnUnitPortStatRxElements, fcConnUnitSnsPortName=fcConnUnitSnsPortName, fcCuEventGroup=fcCuEventGroup, fcConnUnitPrincipal=fcConnUnitPrincipal, fcConnUnitNumSensors=fcConnUnitNumSensors, fcConnUnitPortTable=fcConnUnitPortTable, fcConnUnitPortStatLinkResets=fcConnUnitPortStatLinkResets, fcConnUnitSnsNodeName=fcConnUnitSnsNodeName, fcConnUnitSensorType=fcConnUnitSensorType, fcConnUnitPortStatC2PRJTFrames=fcConnUnitPortStatC2PRJTFrames, fcConnUnitSnsFabricPortName=fcConnUnitSnsFabricPortName, fcTrapRegTable=fcTrapRegTable, fcTrapRegPort=fcTrapRegPort, fcConnUnitSnsPortIPAddress=fcConnUnitSnsPortIPAddress, fcConnUnitPortStatC2TxFrames=fcConnUnitPortStatC2TxFrames, fcConnUnitSensorCharacteristic=fcConnUnitSensorCharacteristic, fcConnUnitLinkConnIdY=fcConnUnitLinkConnIdY, fcConnUnitNumPorts=fcConnUnitNumPorts, fcConnUnitContact=fcConnUnitContact, fcConnUnitSensorStatusChange=fcConnUnitSensorStatusChange, fcMgmtNotifications=fcMgmtNotifications, fcConnUnitState=fcConnUnitState, fcMgmtStatistics=fcMgmtStatistics, fcConnUnitPortFCId=fcConnUnitPortFCId, fcConnUnitUpTime=fcConnUnitUpTime, fcConnUnitEntry=fcConnUnitEntry, fcConnUnitRevsDescription=fcConnUnitRevsDescription, fcConnUnitSnsSymbolicNodeName=fcConnUnitSnsSymbolicNodeName, fcConnUnitName=fcConnUnitName, fcMgmtGroups=fcMgmtGroups, fcConnUnitPortStatRxMcastObjects=fcConnUnitPortStatRxMcastObjects, fcConnUnitPortStatusChange=fcConnUnitPortStatusChange, fcCuSNSGroup=fcCuSNSGroup, fcConnUnitPortStatIndex=fcConnUnitPortStatIndex, fcConnUnitInfo=fcConnUnitInfo, fcConnUnitPortHWState=fcConnUnitPortHWState, fcConnUnitDomainId=fcConnUnitDomainId, fcConnUnitPortFCClassOp=fcConnUnitPortFCClassOp, FcUnitType=FcUnitType, fcCuNotificationsGroup=fcCuNotificationsGroup, fcConnUnitSensorName=fcConnUnitSensorName, fcConnUnitPortStatPSPErrs=fcConnUnitPortStatPSPErrs, fcConnUnitRevsRevision=fcConnUnitRevsRevision, fcConnUnitModuleId=fcConnUnitModuleId, fcConnUnitPortStatLossOfSync=fcConnUnitPortStatLossOfSync, fcCuPortStatsGroup=fcCuPortStatsGroup, fcConnUnitPortSerialNo=fcConnUnitPortSerialNo, fcConnUnitPortStatC1TxFrames=fcConnUnitPortStatC1TxFrames, fcConnUnitPortStatTxObjects=fcConnUnitPortStatTxObjects, fcConnUnitUrl=fcConnUnitUrl, fcConnUnitSnsPortIdentifier=fcConnUnitSnsPortIdentifier, fcConnUnitPortControl=fcConnUnitPortControl, fcConnUnitEventIndex=fcConnUnitEventIndex, fcConnUnitSensorInfo=fcConnUnitSensorInfo, fcMgmtConfig=fcMgmtConfig, fcConnUnitSnsFC4Type=fcConnUnitSnsFC4Type, fcConnUnitPortState=fcConnUnitPortState, fcConnUnitEventTable=fcConnUnitEventTable, fcConnUnitLinkNodeIdY=fcConnUnitLinkNodeIdY, fcConnUnitPortStatC1PBSYFrames=fcConnUnitPortStatC1PBSYFrames, fcConnUnitPortStatRxBcastObjects=fcConnUnitPortStatRxBcastObjects, fcConnUnitProduct=fcConnUnitProduct, FcPortFCClass=FcPortFCClass, fcConnUnitSEventTime=fcConnUnitSEventTime, fcConnUnitEventEntry=fcConnUnitEventEntry, fcConnUnitPortStatDelimiterErrs=fcConnUnitPortStatDelimiterErrs, fcConnUnitSerialNo=fcConnUnitSerialNo, fcTrapRegFilter=fcTrapRegFilter, fcConnUnitPortStatC1RxFrames=fcConnUnitPortStatC1RxFrames, fcConnUnitType=fcConnUnitType, fcConnUnitGroup=fcConnUnitGroup, fcConnUnitLocation=fcConnUnitLocation, fcConnUnitEventDescr=fcConnUnitEventDescr, fcConnUnitPortTransmitterType=fcConnUnitPortTransmitterType, FcGlobalId=FcGlobalId, fcConnUnitPortStatC1PRJTFrames=fcConnUnitPortStatC1PRJTFrames, fcConnUnitSnsClassOfSvc=fcConnUnitSnsClassOfSvc, fcConnUnitSnsPortType=fcConnUnitSnsPortType, fcConnUnitSnsHardAddress=fcConnUnitSnsHardAddress, fcConnUnitPortStatErrs=fcConnUnitPortStatErrs, fcConnUnitPortStatRxLinkResets=fcConnUnitPortStatRxLinkResets, fcConnUnitLinkUnitTypeY=fcConnUnitLinkUnitTypeY, fcConnUnitRevsIndex=fcConnUnitRevsIndex, fcConnUnitLinkAgentAddressTypeY=fcConnUnitLinkAgentAddressTypeY, fcConnUnitEventTrap=fcConnUnitEventTrap, fcConnUnitSnsMaxRows=fcConnUnitSnsMaxRows, fcConnUnitPortFCClassCap=fcConnUnitPortFCClassCap, fcConnUnitPortStatC2RxFrames=fcConnUnitPortStatC2RxFrames, fcConnUnitSensorTable=fcConnUnitSensorTable, fcConnUnitPortNodeWwn=fcConnUnitPortNodeWwn, fcConnUnitProxyMaster=fcConnUnitProxyMaster, fcConnUnitLinkAgentPortY=fcConnUnitLinkAgentPortY, fcConnUnitSnsProcAssoc=fcConnUnitSnsProcAssoc, fcConnUnitTable=fcConnUnitTable, fcConnUnitSensorEntry=fcConnUnitSensorEntry, fcConnUnitLinkNodeIdX=fcConnUnitLinkNodeIdX, fcConnURL=fcConnURL, fcConnUnitPortStatC3Discards=fcConnUnitPortStatC3Discards, fcConnUnitEventFilter=fcConnUnitEventFilter, fcCuTrapFiltersGroup=fcCuTrapFiltersGroup, fcConnUnitPortStatRxOfflineSeqs=fcConnUnitPortStatRxOfflineSeqs, fcConnUnitFabricID=fcConnUnitFabricID, fcConnUnitEventType=fcConnUnitEventType, fcConnUnitPortStatBBCreditZero=fcConnUnitPortStatBBCreditZero, fcCuLinkGroup=fcCuLinkGroup, fcConnUnitSnsSymbolicPortName=fcConnUnitSnsSymbolicPortName, fcTrapRegRowState=fcTrapRegRowState, fcConnUnitPortType=fcConnUnitPortType, fcConnUnitControl=fcConnUnitControl, fcConnUnitEventObject=fcConnUnitEventObject, fcConnUnitPortStatInvalidTxWords=fcConnUnitPortStatInvalidTxWords, fcConnUnitPortStatFBSYFrames=fcConnUnitPortStatFBSYFrames, fcConnUnitPortStatLossOfSignal=fcConnUnitPortStatLossOfSignal, fcConnUnitPortProtocolCap=fcConnUnitPortProtocolCap, fcConnUnitLinkPortWwnX=fcConnUnitLinkPortWwnX, fcConnUnitPortStatInputBuffsFull=fcConnUnitPortStatInputBuffsFull, fcConnUnitPortIndex=fcConnUnitPortIndex, fcTrapMaxClients=fcTrapMaxClients, fcConnUnitRevsTable=fcConnUnitRevsTable, fcConnUnitSnsEntry=fcConnUnitSnsEntry, fcConnUnitNumLinks=fcConnUnitNumLinks, fcConnUnitREventTime=fcConnUnitREventTime, fcConnUnitPortStatus=fcConnUnitPortStatus, fcConnUnitPortProtocolOp=fcConnUnitPortProtocolOp, fcConnUnitRevsEntry=fcConnUnitRevsEntry, fcConnUnitPortStatFramesTooLong=fcConnUnitPortStatFramesTooLong, fcConnUnitLinkPortNumberY=fcConnUnitLinkPortNumberY, fcConnUnitPortStatC1FRJTFrames=fcConnUnitPortStatC1FRJTFrames, fcMgmtMIB=fcMgmtMIB, fcConnUnitLinkPortNumberX=fcConnUnitLinkPortNumberX, fcConnUnitNumEvents=fcConnUnitNumEvents, fcConnUnitPortStatOfflineSeqs=fcConnUnitPortStatOfflineSeqs, fcConnUnitDeletedTrap=fcConnUnitDeletedTrap, fcConnUnitPortStatPRJTFrames=fcConnUnitPortStatPRJTFrames, fcConnUnitPortStatTxOfflineSeqs=fcConnUnitPortStatTxOfflineSeqs, fcConnUnitPortPhysicalNumber=fcConnUnitPortPhysicalNumber, fcConnUnitLinkTable=fcConnUnitLinkTable, fcConnUnitSensorStatus=fcConnUnitSensorStatus, fcMgmtCompliances=fcMgmtCompliances, fcTrapClientCount=fcTrapClientCount, fcConnUnitPortEntry=fcConnUnitPortEntry, fcConnUnitPortStatLinkFailures=fcConnUnitPortStatLinkFailures, fcConnUnitSensorMessage=fcConnUnitSensorMessage, fcConnUnitPortStatC1FBSYFrames=fcConnUnitPortStatC1FBSYFrames, fcConnUnitPortName=fcConnUnitPortName, fcTrapRegEntry=fcTrapRegEntry, fcConnUnitMaxEvents=fcConnUnitMaxEvents, fcConnUnitPortStatInvOrderedSets=fcConnUnitPortStatInvOrderedSets, fcConnUnitPortRevision=fcConnUnitPortRevision, fcConnUnitPortStatTxLinkResets=fcConnUnitPortStatTxLinkResets, fcConnUnitLinkEntry=fcConnUnitLinkEntry, fcConnUnitPortStatTxMcastObjects=fcConnUnitPortStatTxMcastObjects, fcConnUnitPortStatC3TxFrames=fcConnUnitPortStatC3TxFrames, fcConnUnitEventCurrID=fcConnUnitEventCurrID, fcConnUnitSnsTable=fcConnUnitSnsTable, fcConnUnitEventSeverity=fcConnUnitEventSeverity, fcMgmtCompliance=fcMgmtCompliance, fcConnUnitPortModuleType=fcConnUnitPortModuleType, fcConnUnitPortVendor=fcConnUnitPortVendor, fcConnUnitStatus=fcConnUnitStatus, fcConnUnitStatusChange=fcConnUnitStatusChange, fcConnUnitNumber=fcConnUnitNumber, FcEventSeverity=FcEventSeverity, fcConnUnitPortStatC3RxFrames=fcConnUnitPortStatC3RxFrames, fcConnUnitPortStatTxElements=fcConnUnitPortStatTxElements, fcTrapRegIpAddress=fcTrapRegIpAddress, fcMgmtConformance=fcMgmtConformance, PYSNMP_MODULE_ID=fcMgmtMIB, fcConnUnitGlobalId=fcConnUnitGlobalId, fcConnUnitLinkPortWwnY=fcConnUnitLinkPortWwnY)
