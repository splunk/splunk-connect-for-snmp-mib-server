#
# PySNMP MIB module CENTILLION-LECS-MPOA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CENTILLION-LECS-MPOA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:30:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
atmLane, = mibBuilder.importSymbols("CENTILLION-ROOT-MIB", "atmLane")
lecsConfIndex, = mibBuilder.importSymbols("LAN-EMULATION-ELAN-MIB", "lecsConfIndex")
MpsIndex, MpcIndex, AtmConfigAddr, InternetworkAddrType = mibBuilder.importSymbols("MPOA-MIB", "MpsIndex", "MpcIndex", "AtmConfigAddr", "InternetworkAddrType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, Unsigned32, Counter32, IpAddress, Gauge32, NotificationType, MibIdentifier, ObjectIdentity, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "Unsigned32", "Counter32", "IpAddress", "Gauge32", "NotificationType", "MibIdentifier", "ObjectIdentity", "Integer32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC-v1", "RowStatus", "TruthValue")
cnLecsMpoaGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6))
cnLecsMpoaMpcTable = MibTable((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1), )
if mibBuilder.loadTexts: cnLecsMpoaMpcTable.setStatus('mandatory')
cnLecsMpoaMpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1), ).setIndexNames((0, "LAN-EMULATION-ELAN-MIB", "lecsConfIndex"), (0, "CENTILLION-LECS-MPOA-MIB", "cnLecsMpoaMpcIndex"))
if mibBuilder.loadTexts: cnLecsMpoaMpcEntry.setStatus('mandatory')
cnLecsMpoaMpcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 1), MpcIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcIndex.setStatus('mandatory')
cnLecsMpoaMpcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcRowStatus.setStatus('mandatory')
cnLecsMpoaMpcCtrlAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 3), AtmConfigAddr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcCtrlAtmAddr.setStatus('mandatory')
cnLecsMpoaMpcSCSetupFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcSCSetupFrameCount.setStatus('mandatory')
cnLecsMpoaMpcSCSetupFrameTime = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcSCSetupFrameTime.setStatus('mandatory')
cnLecsMpoaMpcInitialRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcInitialRetryTime.setStatus('mandatory')
cnLecsMpoaMpcRetryTimeMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 300)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcRetryTimeMaximum.setStatus('mandatory')
cnLecsMpoaMpcHoldDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 1200)).clone(160)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcHoldDownTime.setStatus('mandatory')
cnLecsMpoaMpcDefaultTLV = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcDefaultTLV.setStatus('mandatory')
cnLecsMpoaMpsTable = MibTable((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2), )
if mibBuilder.loadTexts: cnLecsMpoaMpsTable.setStatus('mandatory')
cnLecsMpoaMpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1), ).setIndexNames((0, "LAN-EMULATION-ELAN-MIB", "lecsConfIndex"), (0, "CENTILLION-LECS-MPOA-MIB", "cnLecsMpoaMpsIndex"))
if mibBuilder.loadTexts: cnLecsMpoaMpsEntry.setStatus('mandatory')
cnLecsMpoaMpsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 1), MpsIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsIndex.setStatus('mandatory')
cnLecsMpoaMpsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsRowStatus.setStatus('mandatory')
cnLecsMpoaMpsCtrlAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 3), AtmConfigAddr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsCtrlAtmAddr.setStatus('mandatory')
cnLecsMpoaMpsKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsKeepAliveTime.setStatus('mandatory')
cnLecsMpoaMpsKeepAliveLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1000)).clone(35)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsKeepAliveLifeTime.setStatus('mandatory')
cnLecsMpoaMpsInitialRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsInitialRetryTime.setStatus('mandatory')
cnLecsMpoaMpsRetryTimeMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 300)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsRetryTimeMaximum.setStatus('mandatory')
cnLecsMpoaMpsGiveupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsGiveupTime.setStatus('mandatory')
cnLecsMpoaMpsDefaultHoldingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsDefaultHoldingTime.setStatus('mandatory')
cnLecsMpoaMpsDefaultTLV = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsDefaultTLV.setStatus('mandatory')
cnLecsMpoaMpcProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 3), )
if mibBuilder.loadTexts: cnLecsMpoaMpcProtocolTable.setStatus('mandatory')
cnLecsMpoaMpcProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 3, 1), ).setIndexNames((0, "LAN-EMULATION-ELAN-MIB", "lecsConfIndex"), (0, "CENTILLION-LECS-MPOA-MIB", "cnLecsMpoaMpcProtocolIndex"), (0, "CENTILLION-LECS-MPOA-MIB", "cnLecsMpoaMpcFlowDetectProtocol"))
if mibBuilder.loadTexts: cnLecsMpoaMpcProtocolEntry.setStatus('mandatory')
cnLecsMpoaMpcProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 3, 1, 1), MpcIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnLecsMpoaMpcProtocolIndex.setStatus('mandatory')
cnLecsMpoaMpcFlowDetectProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 3, 1, 2), InternetworkAddrType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnLecsMpoaMpcFlowDetectProtocol.setStatus('mandatory')
cnLecsMpoaMpcProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 3, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcProtocolRowStatus.setStatus('mandatory')
cnLecsMpoaMpcProtocolEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 3, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpcProtocolEnable.setStatus('mandatory')
cnLecsMpoaMpsProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 4), )
if mibBuilder.loadTexts: cnLecsMpoaMpsProtocolTable.setStatus('mandatory')
cnLecsMpoaMpsProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 4, 1), ).setIndexNames((0, "LAN-EMULATION-ELAN-MIB", "lecsConfIndex"), (0, "CENTILLION-LECS-MPOA-MIB", "cnLecsMpoaMpsProtocolIndex"), (0, "CENTILLION-LECS-MPOA-MIB", "cnLecsMpoaMpsInternetworkLayerProtocol"))
if mibBuilder.loadTexts: cnLecsMpoaMpsProtocolEntry.setStatus('mandatory')
cnLecsMpoaMpsProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 4, 1, 1), MpsIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnLecsMpoaMpsProtocolIndex.setStatus('mandatory')
cnLecsMpoaMpsInternetworkLayerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 4, 1, 2), InternetworkAddrType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnLecsMpoaMpsInternetworkLayerProtocol.setStatus('mandatory')
cnLecsMpoaMpsProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 4, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsProtocolRowStatus.setStatus('mandatory')
cnLecsMpoaMpsProtocolEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 2, 3, 6, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnLecsMpoaMpsProtocolEnable.setStatus('mandatory')
mibBuilder.exportSymbols("CENTILLION-LECS-MPOA-MIB", cnLecsMpoaMpcRowStatus=cnLecsMpoaMpcRowStatus, cnLecsMpoaMpcDefaultTLV=cnLecsMpoaMpcDefaultTLV, cnLecsMpoaMpsTable=cnLecsMpoaMpsTable, cnLecsMpoaMpsDefaultTLV=cnLecsMpoaMpsDefaultTLV, cnLecsMpoaMpsProtocolTable=cnLecsMpoaMpsProtocolTable, cnLecsMpoaMpcFlowDetectProtocol=cnLecsMpoaMpcFlowDetectProtocol, cnLecsMpoaMpcSCSetupFrameCount=cnLecsMpoaMpcSCSetupFrameCount, cnLecsMpoaMpcProtocolEntry=cnLecsMpoaMpcProtocolEntry, cnLecsMpoaMpsKeepAliveTime=cnLecsMpoaMpsKeepAliveTime, cnLecsMpoaMpsInitialRetryTime=cnLecsMpoaMpsInitialRetryTime, cnLecsMpoaMpsCtrlAtmAddr=cnLecsMpoaMpsCtrlAtmAddr, cnLecsMpoaMpsRowStatus=cnLecsMpoaMpsRowStatus, cnLecsMpoaMpsInternetworkLayerProtocol=cnLecsMpoaMpsInternetworkLayerProtocol, cnLecsMpoaMpsGiveupTime=cnLecsMpoaMpsGiveupTime, cnLecsMpoaGroup=cnLecsMpoaGroup, cnLecsMpoaMpcSCSetupFrameTime=cnLecsMpoaMpcSCSetupFrameTime, cnLecsMpoaMpsEntry=cnLecsMpoaMpsEntry, cnLecsMpoaMpsProtocolIndex=cnLecsMpoaMpsProtocolIndex, cnLecsMpoaMpcRetryTimeMaximum=cnLecsMpoaMpcRetryTimeMaximum, cnLecsMpoaMpsProtocolRowStatus=cnLecsMpoaMpsProtocolRowStatus, cnLecsMpoaMpsKeepAliveLifeTime=cnLecsMpoaMpsKeepAliveLifeTime, cnLecsMpoaMpcTable=cnLecsMpoaMpcTable, cnLecsMpoaMpcIndex=cnLecsMpoaMpcIndex, cnLecsMpoaMpcProtocolTable=cnLecsMpoaMpcProtocolTable, cnLecsMpoaMpcCtrlAtmAddr=cnLecsMpoaMpcCtrlAtmAddr, cnLecsMpoaMpcHoldDownTime=cnLecsMpoaMpcHoldDownTime, cnLecsMpoaMpcProtocolEnable=cnLecsMpoaMpcProtocolEnable, cnLecsMpoaMpcInitialRetryTime=cnLecsMpoaMpcInitialRetryTime, cnLecsMpoaMpcProtocolIndex=cnLecsMpoaMpcProtocolIndex, cnLecsMpoaMpsIndex=cnLecsMpoaMpsIndex, cnLecsMpoaMpsDefaultHoldingTime=cnLecsMpoaMpsDefaultHoldingTime, cnLecsMpoaMpcEntry=cnLecsMpoaMpcEntry, cnLecsMpoaMpsProtocolEnable=cnLecsMpoaMpsProtocolEnable, cnLecsMpoaMpsRetryTimeMaximum=cnLecsMpoaMpsRetryTimeMaximum, cnLecsMpoaMpsProtocolEntry=cnLecsMpoaMpsProtocolEntry, cnLecsMpoaMpcProtocolRowStatus=cnLecsMpoaMpcProtocolRowStatus)
