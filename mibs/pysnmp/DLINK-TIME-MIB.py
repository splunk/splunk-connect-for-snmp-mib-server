#
# PySNMP MIB module DLINK-TIME-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DLINK-TIME-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:35:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter32, Gauge32, ObjectIdentity, Counter64, Unsigned32, Integer32, MibIdentifier, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Gauge32", "ObjectIdentity", "Counter64", "Unsigned32", "Integer32", "MibIdentifier", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "Bits")
TruthValue, DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DateAndTime", "TextualConvention", "DisplayString")
swDlinkTimeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 10))
if mibBuilder.loadTexts: swDlinkTimeMIB.setLastUpdated('0202140000Z')
if mibBuilder.loadTexts: swDlinkTimeMIB.setOrganization('DLink Corporation')
swSystemTime = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 10, 10))
swSNTP = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 10, 11))
swSummerTime = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 10, 12))
swTimeNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 10, 13))
swTimeCapacity = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 1), Bits().clone(namedValues=NamedValues(("systemTime", 0), ("sntp", 1), ("summerTime", 2), ("realTimeClock", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swTimeCapacity.setStatus('current')
swCurrentClock = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 2), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swCurrentClock.setStatus('current')
swClockLostOnReboot = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swClockLostOnReboot.setStatus('current')
swSystemCurrentTime = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSystemCurrentTime.setStatus('current')
swSystemUpTime = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSystemUpTime.setStatus('current')
swSystemBootTime = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 10, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSystemBootTime.setStatus('current')
swSystemTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 10, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-779, 839))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSystemTimeZone.setStatus('current')
swSNTPState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSNTPState.setStatus('current')
swSNTPTimeSource = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("system", 0), ("server1", 1), ("server2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSNTPTimeSource.setStatus('current')
swSNTPServer1IPAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 11, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSNTPServer1IPAddr.setStatus('current')
swSNTPServer2IPAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 11, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSNTPServer2IPAddr.setStatus('current')
swSNTPPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 11, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 99999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSNTPPollInterval.setStatus('current')
swSummerTimeStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("repeating", 1), ("annual", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSummerTimeStatus.setStatus('current')
swSummerTimeOffset = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 12, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(60)).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSummerTimeOffset.setStatus('current')
swRepeatSummerTimeStart = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 12, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swRepeatSummerTimeStart.setStatus('current')
swRepeatSummerTimeEnd = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 12, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swRepeatSummerTimeEnd.setStatus('current')
swAnnualSummerTimeStart = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 12, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swAnnualSummerTimeStart.setStatus('current')
swAnnualSummerTimeEnd = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 10, 12, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swAnnualSummerTimeEnd.setStatus('current')
mibBuilder.exportSymbols("DLINK-TIME-MIB", swSystemBootTime=swSystemBootTime, swSNTPTimeSource=swSNTPTimeSource, swCurrentClock=swCurrentClock, swSummerTime=swSummerTime, swSystemTimeZone=swSystemTimeZone, swSystemCurrentTime=swSystemCurrentTime, PYSNMP_MODULE_ID=swDlinkTimeMIB, swSNTPPollInterval=swSNTPPollInterval, swTimeCapacity=swTimeCapacity, swClockLostOnReboot=swClockLostOnReboot, swAnnualSummerTimeStart=swAnnualSummerTimeStart, swSNTPServer1IPAddr=swSNTPServer1IPAddr, swDlinkTimeMIB=swDlinkTimeMIB, swAnnualSummerTimeEnd=swAnnualSummerTimeEnd, swRepeatSummerTimeStart=swRepeatSummerTimeStart, swSummerTimeOffset=swSummerTimeOffset, swRepeatSummerTimeEnd=swRepeatSummerTimeEnd, swSNTPState=swSNTPState, swSNTPServer2IPAddr=swSNTPServer2IPAddr, swSystemTime=swSystemTime, swSystemUpTime=swSystemUpTime, swSummerTimeStatus=swSummerTimeStatus, swTimeNotifPrefix=swTimeNotifPrefix, swSNTP=swSNTP)
