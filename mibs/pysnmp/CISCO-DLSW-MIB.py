#
# PySNMP MIB module CISCO-DLSW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DLSW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
sdlcLSAddress, = mibBuilder.importSymbols("SNA-SDLC-MIB", "sdlcLSAddress")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, Integer32, Gauge32, Counter64, NotificationType, Bits, IpAddress, ModuleIdentity, Unsigned32, Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "Integer32", "Gauge32", "Counter64", "NotificationType", "Bits", "IpAddress", "ModuleIdentity", "Unsigned32", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
DisplayString, RowStatus, TextualConvention, TruthValue, InstancePointer = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue", "InstancePointer")
ciscoDlswMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 9))
ciscoDlswMIB.setRevisions(('1995-12-05 00:00',))
if mibBuilder.loadTexts: ciscoDlswMIB.setLastUpdated('9512050000Z')
if mibBuilder.loadTexts: ciscoDlswMIB.setOrganization('Cisco Systems Inc.')
ciscoDlswMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1))
ciscoDlswDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 2))
class NBName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class MacAddress(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), )
class TAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class DlswTimeStamp(TextualConvention, TimeTicks):
    status = 'current'

class EndStationLocation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("internal", 2), ("remote", 3), ("local", 4))

class DlcType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("na", 2), ("llc", 3), ("sdlc", 4), ("qllc", 5))

class LFSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(516, 635, 754, 873, 993, 1112, 1231, 1350, 1470, 1542, 1615, 1688, 1761, 1833, 1906, 1979, 2052, 2345, 2638, 2932, 3225, 3518, 3812, 4105, 4399, 4865, 5331, 5798, 6264, 6730, 7197, 7663, 8130, 8539, 8949, 9358, 9768, 10178, 10587, 10997, 11407, 12199, 12992, 13785, 14578, 15370, 16163, 16956, 17749, 20730, 23711, 26693, 29674, 32655, 38618, 41600, 44591, 47583, 50575, 53567, 56559, 59551, 65535))
    namedValues = NamedValues(("lfs516", 516), ("lfs635", 635), ("lfs754", 754), ("lfs873", 873), ("lfs993", 993), ("lfs1112", 1112), ("lfs1231", 1231), ("lfs1350", 1350), ("lfs1470", 1470), ("lfs1542", 1542), ("lfs1615", 1615), ("lfs1688", 1688), ("lfs1761", 1761), ("lfs1833", 1833), ("lfs1906", 1906), ("lfs1979", 1979), ("lfs2052", 2052), ("lfs2345", 2345), ("lfs2638", 2638), ("lfs2932", 2932), ("lfs3225", 3225), ("lfs3518", 3518), ("lfs3812", 3812), ("lfs4105", 4105), ("lfs4399", 4399), ("lfs4865", 4865), ("lfs5331", 5331), ("lfs5798", 5798), ("lfs6264", 6264), ("lfs6730", 6730), ("lfs7197", 7197), ("lfs7663", 7663), ("lfs8130", 8130), ("lfs8539", 8539), ("lfs8949", 8949), ("lfs9358", 9358), ("lfs9768", 9768), ("lfs10178", 10178), ("lfs10587", 10587), ("lfs10997", 10997), ("lfs11407", 11407), ("lfs12199", 12199), ("lfs12992", 12992), ("lfs13785", 13785), ("lfs14578", 14578), ("lfs15370", 15370), ("lfs16163", 16163), ("lfs16956", 16956), ("lfs17749", 17749), ("lfs20730", 20730), ("lfs23711", 23711), ("lfs26693", 26693), ("lfs29674", 29674), ("lfs32655", 32655), ("lfs38618", 38618), ("lfs41600", 41600), ("lfs44591", 44591), ("lfs47583", 47583), ("lfs50575", 50575), ("lfs53567", 53567), ("lfs56559", 56559), ("lfs59551", 59551), ("lfs65535", 65535))

ciscoDlswTCPDomain = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 2, 1))
ciscoDlswNode = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1))
ciscoDlswTConn = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2))
ciscoDlswInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3))
ciscoDlswDirectory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4))
ciscoDlswCircuit = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5))
ciscoDlswSdlc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6))
ciscoDlswVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswVersion.setStatus('current')
ciscoDlswVendorID = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswVendorID.setStatus('current')
ciscoDlswVersionString = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswVersionString.setStatus('current')
ciscoDlswStdPacingSupport = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("adaptiveRcvWindow", 2), ("fixedRcvWindow", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswStdPacingSupport.setStatus('current')
ciscoDlswStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswStatus.setStatus('current')
ciscoDlswUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswUpTime.setStatus('current')
ciscoDlswVirtualSegmentLFSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 7), LFSize().clone('lfs17749')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswVirtualSegmentLFSize.setStatus('current')
ciscoDlswResourceNBExclusivity = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswResourceNBExclusivity.setStatus('current')
ciscoDlswResourceMacExclusivity = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswResourceMacExclusivity.setStatus('current')
ciscoDlswTConnStat = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 1))
ciscoDlswTConnStatActiveConnections = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnStatActiveConnections.setStatus('current')
ciscoDlswTConnStatCloseIdles = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnStatCloseIdles.setStatus('current')
ciscoDlswTConnStatCloseBusys = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnStatCloseBusys.setStatus('current')
ciscoDlswTConnConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2), )
if mibBuilder.loadTexts: ciscoDlswTConnConfigTable.setStatus('current')
ciscoDlswTConnConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswTConnConfigIndex"))
if mibBuilder.loadTexts: ciscoDlswTConnConfigEntry.setStatus('current')
ciscoDlswTConnConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65000)))
if mibBuilder.loadTexts: ciscoDlswTConnConfigIndex.setStatus('current')
ciscoDlswTConnConfigTDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigTDomain.setStatus('current')
ciscoDlswTConnConfigLocalTAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 3), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigLocalTAddr.setStatus('current')
ciscoDlswTConnConfigRemoteTAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 4), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigRemoteTAddr.setStatus('current')
ciscoDlswTConnConfigLastModifyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 5), DlswTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigLastModifyTime.setStatus('current')
ciscoDlswTConnConfigEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("individual", 1), ("global", 2), ("group", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigEntryType.setStatus('current')
ciscoDlswTConnConfigGroupDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 7), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigGroupDefinition.setStatus('current')
ciscoDlswTConnConfigSetupType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("activePersistent", 2), ("activeOnDemand", 3), ("passive", 4), ("excluded", 5))).clone('activePersistent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigSetupType.setStatus('current')
ciscoDlswTConnConfigSapList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigSapList.setStatus('current')
ciscoDlswTConnConfigAdvertiseMacNB = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 10), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigAdvertiseMacNB.setStatus('current')
ciscoDlswTConnConfigInitCirRecvWndw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigInitCirRecvWndw.setStatus('current')
ciscoDlswTConnConfigOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigOpens.setStatus('current')
ciscoDlswTConnConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 2, 1, 13), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnConfigRowStatus.setStatus('current')
ciscoDlswTConnOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3), )
if mibBuilder.loadTexts: ciscoDlswTConnOperTable.setStatus('current')
ciscoDlswTConnOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswTConnOperTDomain"), (0, "CISCO-DLSW-MIB", "ciscoDlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: ciscoDlswTConnOperEntry.setStatus('current')
ciscoDlswTConnOperTDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: ciscoDlswTConnOperTDomain.setStatus('current')
ciscoDlswTConnOperLocalTAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 2), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperLocalTAddr.setStatus('current')
ciscoDlswTConnOperRemoteTAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 3), TAddress())
if mibBuilder.loadTexts: ciscoDlswTConnOperRemoteTAddr.setStatus('current')
ciscoDlswTConnOperEntryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 4), DlswTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperEntryTime.setStatus('current')
ciscoDlswTConnOperConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 5), DlswTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperConnectTime.setStatus('current')
ciscoDlswTConnOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("connecting", 1), ("initCapExchange", 2), ("connected", 3), ("quiescing", 4), ("disconnecting", 5), ("disconnected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperState.setStatus('current')
ciscoDlswTConnOperConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperConfigIndex.setStatus('current')
ciscoDlswTConnOperFlowCntlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undetermined", 1), ("pacing", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperFlowCntlMode.setStatus('current')
ciscoDlswTConnOperPartnerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 9), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerVersion.setStatus('current')
ciscoDlswTConnOperPartnerVendorID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 10), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerVendorID.setStatus('current')
ciscoDlswTConnOperPartnerVersionStr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerVersionStr.setStatus('current')
ciscoDlswTConnOperPartnerInitPacingWndw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerInitPacingWndw.setStatus('current')
ciscoDlswTConnOperPartnerSapList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 13), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerSapList.setStatus('current')
ciscoDlswTConnOperPartnerNBExcl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerNBExcl.setStatus('current')
ciscoDlswTConnOperPartnerMacExcl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerMacExcl.setStatus('current')
ciscoDlswTConnOperPartnerNBInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("partial", 2), ("complete", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerNBInfo.setStatus('current')
ciscoDlswTConnOperPartnerMacInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("partial", 2), ("complete", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperPartnerMacInfo.setStatus('current')
ciscoDlswTConnOperDiscTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 18), DlswTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperDiscTime.setStatus('current')
ciscoDlswTConnOperDiscReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("capExFailed", 2), ("transportLayerDisc", 3), ("operatorCommand", 4), ("lastCircuitDiscd", 5), ("protocolError", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperDiscReason.setStatus('current')
ciscoDlswTConnOperDiscActiveCir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperDiscActiveCir.setStatus('current')
ciscoDlswTConnOperInDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 21), Counter32()).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperInDataPkts.setStatus('current')
ciscoDlswTConnOperOutDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 22), Counter32()).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperOutDataPkts.setStatus('current')
ciscoDlswTConnOperInDataOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 23), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperInDataOctets.setStatus('current')
ciscoDlswTConnOperOutDataOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 24), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperOutDataOctets.setStatus('current')
ciscoDlswTConnOperInCntlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 25), Counter32()).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperInCntlPkts.setStatus('current')
ciscoDlswTConnOperOutCntlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 26), Counter32()).setUnits('SSP messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperOutCntlPkts.setStatus('current')
ciscoDlswTConnOperCURexSents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperCURexSents.setStatus('current')
ciscoDlswTConnOperICRexRcvds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperICRexRcvds.setStatus('current')
ciscoDlswTConnOperCURexRcvds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperCURexRcvds.setStatus('current')
ciscoDlswTConnOperICRexSents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperICRexSents.setStatus('current')
ciscoDlswTConnOperNQexSents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperNQexSents.setStatus('current')
ciscoDlswTConnOperNRexRcvds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperNRexRcvds.setStatus('current')
ciscoDlswTConnOperNQexRcvds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperNQexRcvds.setStatus('current')
ciscoDlswTConnOperNRexSents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperNRexSents.setStatus('current')
ciscoDlswTConnOperCirCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperCirCreates.setStatus('current')
ciscoDlswTConnOperCircuits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 3, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnOperCircuits.setStatus('current')
ciscoDlswTConnSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4))
ciscoDlswTConnTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1))
ciscoDlswTConnTcpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1), )
if mibBuilder.loadTexts: ciscoDlswTConnTcpConfigTable.setStatus('current')
ciscoDlswTConnTcpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswTConnConfigIndex"))
if mibBuilder.loadTexts: ciscoDlswTConnTcpConfigEntry.setStatus('current')
ciscoDlswTConnTcpConfigKeepAliveInt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnTcpConfigKeepAliveInt.setStatus('current')
ciscoDlswTConnTcpConfigTcpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnTcpConfigTcpConnections.setStatus('current')
ciscoDlswTConnTcpConfigMaxSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(4096)).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnTcpConfigMaxSegmentSize.setStatus('current')
ciscoDlswTConnTcpOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2), )
if mibBuilder.loadTexts: ciscoDlswTConnTcpOperTable.setStatus('current')
ciscoDlswTConnTcpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswTConnOperTDomain"), (0, "CISCO-DLSW-MIB", "ciscoDlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: ciscoDlswTConnTcpOperEntry.setStatus('current')
ciscoDlswTConnTcpOperKeepAliveInt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnTcpOperKeepAliveInt.setStatus('current')
ciscoDlswTConnTcpOperPrefTcpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnTcpOperPrefTcpConnections.setStatus('current')
ciscoDlswTConnTcpOperTcpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 2, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTConnTcpOperTcpConnections.setStatus('current')
ciscoDlswIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1), )
if mibBuilder.loadTexts: ciscoDlswIfTable.setStatus('current')
ciscoDlswIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ciscoDlswIfEntry.setStatus('current')
ciscoDlswIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswIfRowStatus.setStatus('current')
ciscoDlswIfVirtualSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswIfVirtualSegment.setStatus('current')
ciscoDlswIfSapList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswIfSapList.setStatus('current')
ciscoDlswDirStat = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1))
ciscoDlswDirMacEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacEntries.setStatus('current')
ciscoDlswDirMacCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacCacheHits.setStatus('current')
ciscoDlswDirMacCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacCacheMisses.setStatus('current')
ciscoDlswDirNBEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBEntries.setStatus('current')
ciscoDlswDirNBCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBCacheHits.setStatus('current')
ciscoDlswDirNBCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBCacheMisses.setStatus('current')
ciscoDlswDirCache = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2))
ciscoDlswDirMacTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1), )
if mibBuilder.loadTexts: ciscoDlswDirMacTable.setStatus('current')
ciscoDlswDirMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswDirMacIndex"))
if mibBuilder.loadTexts: ciscoDlswDirMacEntry.setStatus('current')
ciscoDlswDirMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000)))
if mibBuilder.loadTexts: ciscoDlswDirMacIndex.setStatus('current')
ciscoDlswDirMacMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacMac.setStatus('current')
ciscoDlswDirMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 3), MacAddress().clone(hexValue="ffffffffffff")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacMask.setStatus('current')
ciscoDlswDirMacEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("userConfiguredPublic", 2), ("userConfiguredPrivate", 3), ("partnerCapExMsg", 4), ("dynamic", 5))).clone('userConfiguredPublic')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacEntryType.setStatus('current')
ciscoDlswDirMacLocationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("remote", 3))).clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacLocationType.setStatus('current')
ciscoDlswDirMacLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 6), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacLocation.setStatus('current')
ciscoDlswDirMacStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("reachable", 2), ("notReachable", 3))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacStatus.setStatus('current')
ciscoDlswDirMacLFSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 8), LFSize().clone('lfs65535')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacLFSize.setStatus('current')
ciscoDlswDirMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 1, 1, 9), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirMacRowStatus.setStatus('current')
ciscoDlswDirNBTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2), )
if mibBuilder.loadTexts: ciscoDlswDirNBTable.setStatus('current')
ciscoDlswDirNBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswDirNBIndex"))
if mibBuilder.loadTexts: ciscoDlswDirNBEntry.setStatus('current')
ciscoDlswDirNBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000)))
if mibBuilder.loadTexts: ciscoDlswDirNBIndex.setStatus('current')
ciscoDlswDirNBName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 2), NBName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBName.setStatus('current')
ciscoDlswDirNBNameType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("individual", 2), ("group", 3))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBNameType.setStatus('current')
ciscoDlswDirNBEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("userConfiguredPublic", 2), ("userConfiguredPrivate", 3), ("partnerCapExMsg", 4), ("dynamic", 5))).clone('userConfiguredPublic')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBEntryType.setStatus('current')
ciscoDlswDirNBLocationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("remote", 3))).clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBLocationType.setStatus('current')
ciscoDlswDirNBLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 6), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBLocation.setStatus('current')
ciscoDlswDirNBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("reachable", 2), ("notReachable", 3))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBStatus.setStatus('current')
ciscoDlswDirNBLFSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 8), LFSize().clone('lfs65535')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBLFSize.setStatus('current')
ciscoDlswDirNBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 2, 2, 1, 9), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirNBRowStatus.setStatus('current')
ciscoDlswDirLocate = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3))
ciscoDlswDirLocateMacTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1), )
if mibBuilder.loadTexts: ciscoDlswDirLocateMacTable.setStatus('current')
ciscoDlswDirLocateMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswDirLocateMacMac"), (0, "CISCO-DLSW-MIB", "ciscoDlswDirLocateMacMatch"))
if mibBuilder.loadTexts: ciscoDlswDirLocateMacEntry.setStatus('current')
ciscoDlswDirLocateMacMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: ciscoDlswDirLocateMacMac.setStatus('current')
ciscoDlswDirLocateMacMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: ciscoDlswDirLocateMacMatch.setStatus('current')
ciscoDlswDirLocateMacLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 1, 1, 3), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirLocateMacLocation.setStatus('current')
ciscoDlswDirLocateNBTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2), )
if mibBuilder.loadTexts: ciscoDlswDirLocateNBTable.setStatus('current')
ciscoDlswDirLocateNBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswDirLocateNBName"), (0, "CISCO-DLSW-MIB", "ciscoDlswDirLocateNBMatch"))
if mibBuilder.loadTexts: ciscoDlswDirLocateNBEntry.setStatus('current')
ciscoDlswDirLocateNBName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2, 1, 1), NBName())
if mibBuilder.loadTexts: ciscoDlswDirLocateNBName.setStatus('current')
ciscoDlswDirLocateNBMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: ciscoDlswDirLocateNBMatch.setStatus('current')
ciscoDlswDirLocateNBLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 4, 3, 2, 1, 3), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswDirLocateNBLocation.setStatus('current')
ciscoDlswCircuitStat = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 1))
ciscoDlswActiveCircuits = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswActiveCircuits.setStatus('current')
ciscoDlswCircuitCreates = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitCreates.setStatus('current')
ciscoDlswCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2), )
if mibBuilder.loadTexts: ciscoDlswCircuitTable.setStatus('current')
ciscoDlswCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-DLSW-MIB", "ciscoDlswCircuitS1Mac"), (0, "CISCO-DLSW-MIB", "ciscoDlswCircuitS1Sap"), (0, "CISCO-DLSW-MIB", "ciscoDlswCircuitS2Mac"), (0, "CISCO-DLSW-MIB", "ciscoDlswCircuitS2Sap"))
if mibBuilder.loadTexts: ciscoDlswCircuitEntry.setStatus('current')
ciscoDlswCircuitS1Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: ciscoDlswCircuitS1Mac.setStatus('current')
ciscoDlswCircuitS1Sap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1))
if mibBuilder.loadTexts: ciscoDlswCircuitS1Sap.setStatus('current')
ciscoDlswCircuitS1IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS1IfIndex.setStatus('current')
ciscoDlswCircuitS1DlcType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 4), DlcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS1DlcType.setStatus('current')
ciscoDlswCircuitS1RouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS1RouteInfo.setStatus('current')
ciscoDlswCircuitS1CircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 6), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS1CircuitId.setStatus('current')
ciscoDlswCircuitS1Dlc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 7), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS1Dlc.setStatus('current')
ciscoDlswCircuitS2Mac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 8), MacAddress())
if mibBuilder.loadTexts: ciscoDlswCircuitS2Mac.setStatus('current')
ciscoDlswCircuitS2Sap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1))
if mibBuilder.loadTexts: ciscoDlswCircuitS2Sap.setStatus('current')
ciscoDlswCircuitS2Location = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 10), EndStationLocation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS2Location.setStatus('current')
ciscoDlswCircuitS2TDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 11), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS2TDomain.setStatus('current')
ciscoDlswCircuitS2TAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 12), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS2TAddress.setStatus('current')
ciscoDlswCircuitS2CircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 13), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitS2CircuitId.setStatus('current')
ciscoDlswCircuitOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("s1", 1), ("s2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitOrigin.setStatus('current')
ciscoDlswCircuitEntryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 15), DlswTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitEntryTime.setStatus('current')
ciscoDlswCircuitStateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 16), DlswTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitStateTime.setStatus('current')
ciscoDlswCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("disconnected", 1), ("circuitStart", 2), ("resolvePending", 3), ("circuitPending", 4), ("circuitEstablished", 5), ("connectPending", 6), ("contactPending", 7), ("connected", 8), ("disconnectPending", 9), ("haltPending", 10), ("haltPendingNoack", 11), ("circuitRestart", 12), ("restartPending", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitState.setStatus('current')
ciscoDlswCircuitPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unsupported", 0), ("low", 1), ("medium", 2), ("high", 3), ("highest", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitPriority.setStatus('current')
ciscoDlswCircuitFCSendGrantedUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCSendGrantedUnits.setStatus('current')
ciscoDlswCircuitFCSendCurrentWndw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCSendCurrentWndw.setStatus('current')
ciscoDlswCircuitFCRecvGrantedUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCRecvGrantedUnits.setStatus('current')
ciscoDlswCircuitFCRecvCurrentWndw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCRecvCurrentWndw.setStatus('current')
ciscoDlswCircuitFCLargestRecvGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCLargestRecvGranted.setStatus('current')
ciscoDlswCircuitFCLargestSendGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCLargestSendGranted.setStatus('current')
ciscoDlswCircuitFCHalveWndwSents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCHalveWndwSents.setStatus('current')
ciscoDlswCircuitFCResetOpSents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCResetOpSents.setStatus('current')
ciscoDlswCircuitFCHalveWndwRcvds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCHalveWndwRcvds.setStatus('current')
ciscoDlswCircuitFCResetOpRcvds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitFCResetOpRcvds.setStatus('current')
ciscoDlswCircuitDiscReasonLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("endStationDiscRcvd", 1), ("endStationDlcError", 2), ("protocolError", 3), ("operatorCommand", 4), ("haltDlRcvd", 5), ("haltDlNoAckRcvd", 6), ("transportConnClosed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitDiscReasonLocal.setStatus('current')
ciscoDlswCircuitDiscReasonRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("endStationDiscRcvd", 1), ("endStationDlcError", 2), ("protocolError", 3), ("operatorCommand", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitDiscReasonRemote.setStatus('current')
ciscoDlswCircuitDiscReasonRemoteData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 5, 2, 1, 31), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswCircuitDiscReasonRemoteData.setStatus('current')
ciscoDlswSdlcLsEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswSdlcLsEntries.setStatus('current')
ciscoDlswSdlcLsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2), )
if mibBuilder.loadTexts: ciscoDlswSdlcLsTable.setStatus('current')
ciscoDlswSdlcLsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SNA-SDLC-MIB", "sdlcLSAddress"))
if mibBuilder.loadTexts: ciscoDlswSdlcLsEntry.setStatus('current')
ciscoDlswSdlcLsLocalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswSdlcLsLocalMac.setStatus('current')
ciscoDlswSdlcLsLocalSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswSdlcLsLocalSap.setStatus('current')
ciscoDlswSdlcLsLocalBlockNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 3), )).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswSdlcLsLocalBlockNum.setStatus('current')
ciscoDlswSdlcLsLocalIdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(5, 5), )).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswSdlcLsLocalIdNum.setStatus('current')
ciscoDlswSdlcLsRemoteMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 5), MacAddress().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswSdlcLsRemoteMac.setStatus('current')
ciscoDlswSdlcLsRemoteSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 6), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), )).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswSdlcLsRemoteSap.setStatus('current')
ciscoDlswSdlcLsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 6, 2, 1, 7), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswSdlcLsRowStatus.setStatus('current')
ciscoDlswTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10))
ciscoDlswTrapCntlTConnPartnerReject = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("partial", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTrapCntlTConnPartnerReject.setStatus('current')
ciscoDlswTrapCntlTConnProtViolation = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTrapCntlTConnProtViolation.setStatus('current')
ciscoDlswTrapCntlTConn = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("partial", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTrapCntlTConn.setStatus('current')
ciscoDlswTrapCntlCircuit = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 1, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("partial", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoDlswTrapCntlCircuit.setStatus('current')
ciscoDlswTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7))
ciscoDlswTrapTConnPartnerReject = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 1)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnOperTDomain"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: ciscoDlswTrapTConnPartnerReject.setStatus('current')
ciscoDlswTrapTConnProtViolation = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 2)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnOperTDomain"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: ciscoDlswTrapTConnProtViolation.setStatus('current')
ciscoDlswTrapTConnUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 3)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnOperTDomain"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: ciscoDlswTrapTConnUp.setStatus('current')
ciscoDlswTrapTConnDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 4)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnOperTDomain"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperRemoteTAddr"))
if mibBuilder.loadTexts: ciscoDlswTrapTConnDown.setStatus('current')
ciscoDlswTrapCircuitUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 5)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswCircuitS1Mac"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS1Sap"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS2Mac"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS2Sap"))
if mibBuilder.loadTexts: ciscoDlswTrapCircuitUp.setStatus('current')
ciscoDlswTrapCircuitDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 9, 1, 7, 6)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswCircuitS1Mac"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS1Sap"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS2Mac"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS2Sap"))
if mibBuilder.loadTexts: ciscoDlswTrapCircuitDown.setStatus('current')
ciscoDlswConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 3))
ciscoDlswCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1))
ciscoDlswGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2))
ciscoDlswCoreCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1, 1)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswNodeGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnStatGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnTcpConfigGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnTcpOperGroup"), ("CISCO-DLSW-MIB", "ciscoDlswInterfaceGroup"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitStatGroup"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswCoreCompliance = ciscoDlswCoreCompliance.setStatus('obsolete')
ciscoDlswCoreComplianceV11R01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1, 5)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswNodeGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnStatGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnTcpConfigGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnTcpOperGroup"), ("CISCO-DLSW-MIB", "ciscoDlswInterfaceGroup"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitStatGroup"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitGroup"), ("CISCO-DLSW-MIB", "ciscoDlswNodeNBGroup"), ("CISCO-DLSW-MIB", "ciscoDlswTConnNBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswCoreComplianceV11R01 = ciscoDlswCoreComplianceV11R01.setStatus('current')
ciscoDlswDirCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1, 2)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswDirGroup"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswDirCompliance = ciscoDlswDirCompliance.setStatus('obsolete')
ciscoDlswDirComplianceV11R01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1, 6)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswDirGroup"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswDirComplianceV11R01 = ciscoDlswDirComplianceV11R01.setStatus('current')
ciscoDlswDirLocateCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1, 3)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswDirLocateGroup"), ("CISCO-DLSW-MIB", "ciscoDlswDirLocateNBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswDirLocateCompliance = ciscoDlswDirLocateCompliance.setStatus('current')
ciscoDlswSdlcCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1, 4)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswSdlcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswSdlcCompliance = ciscoDlswSdlcCompliance.setStatus('obsolete')
ciscoDlswSdlcComplianceV11R01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 1, 7)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswSdlcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswSdlcComplianceV11R01 = ciscoDlswSdlcComplianceV11R01.setStatus('current')
ciscoDlswNodeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 1)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswVersion"), ("CISCO-DLSW-MIB", "ciscoDlswVendorID"), ("CISCO-DLSW-MIB", "ciscoDlswVersionString"), ("CISCO-DLSW-MIB", "ciscoDlswStdPacingSupport"), ("CISCO-DLSW-MIB", "ciscoDlswStatus"), ("CISCO-DLSW-MIB", "ciscoDlswUpTime"), ("CISCO-DLSW-MIB", "ciscoDlswVirtualSegmentLFSize"), ("CISCO-DLSW-MIB", "ciscoDlswResourceMacExclusivity"), ("CISCO-DLSW-MIB", "ciscoDlswTrapCntlTConnPartnerReject"), ("CISCO-DLSW-MIB", "ciscoDlswTrapCntlTConnProtViolation"), ("CISCO-DLSW-MIB", "ciscoDlswTrapCntlTConn"), ("CISCO-DLSW-MIB", "ciscoDlswTrapCntlCircuit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswNodeGroup = ciscoDlswNodeGroup.setStatus('current')
ciscoDlswNodeNBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 2)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswResourceNBExclusivity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswNodeNBGroup = ciscoDlswNodeNBGroup.setStatus('current')
ciscoDlswTConnStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 3)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnStatActiveConnections"), ("CISCO-DLSW-MIB", "ciscoDlswTConnStatCloseIdles"), ("CISCO-DLSW-MIB", "ciscoDlswTConnStatCloseBusys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswTConnStatGroup = ciscoDlswTConnStatGroup.setStatus('current')
ciscoDlswTConnConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 4)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnConfigTDomain"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigLocalTAddr"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigRemoteTAddr"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigLastModifyTime"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigEntryType"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigGroupDefinition"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigSetupType"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigSapList"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigAdvertiseMacNB"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigInitCirRecvWndw"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigOpens"), ("CISCO-DLSW-MIB", "ciscoDlswTConnConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswTConnConfigGroup = ciscoDlswTConnConfigGroup.setStatus('current')
ciscoDlswTConnOperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 5)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnOperLocalTAddr"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperEntryTime"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperConnectTime"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperState"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperConfigIndex"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperFlowCntlMode"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerVersion"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerVendorID"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerVersionStr"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerInitPacingWndw"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerSapList"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerMacExcl"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerMacInfo"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperDiscTime"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperDiscReason"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperDiscActiveCir"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperInDataPkts"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperOutDataPkts"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperInDataOctets"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperOutDataOctets"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperInCntlPkts"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperOutCntlPkts"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperCURexSents"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperICRexRcvds"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperCURexRcvds"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperICRexSents"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperCirCreates"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperCircuits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswTConnOperGroup = ciscoDlswTConnOperGroup.setStatus('current')
ciscoDlswTConnNBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 6)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerNBInfo"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperPartnerNBExcl"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperNQexSents"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperNRexRcvds"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperNQexRcvds"), ("CISCO-DLSW-MIB", "ciscoDlswTConnOperNRexSents"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswTConnNBGroup = ciscoDlswTConnNBGroup.setStatus('current')
ciscoDlswInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 7)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswIfRowStatus"), ("CISCO-DLSW-MIB", "ciscoDlswIfVirtualSegment"), ("CISCO-DLSW-MIB", "ciscoDlswIfSapList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswInterfaceGroup = ciscoDlswInterfaceGroup.setStatus('current')
ciscoDlswDirGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 8)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswDirMacEntries"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacCacheHits"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacCacheMisses"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacMac"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacMask"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacEntryType"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacLocationType"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacLocation"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacStatus"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacLFSize"), ("CISCO-DLSW-MIB", "ciscoDlswDirMacRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswDirGroup = ciscoDlswDirGroup.setStatus('current')
ciscoDlswDirNBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 9)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswDirNBEntries"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBCacheHits"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBCacheMisses"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBName"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBNameType"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBEntryType"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBLocationType"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBLocation"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBStatus"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBLFSize"), ("CISCO-DLSW-MIB", "ciscoDlswDirNBRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswDirNBGroup = ciscoDlswDirNBGroup.setStatus('current')
ciscoDlswDirLocateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 10)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswDirLocateMacLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswDirLocateGroup = ciscoDlswDirLocateGroup.setStatus('current')
ciscoDlswDirLocateNBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 11)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswDirLocateNBLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswDirLocateNBGroup = ciscoDlswDirLocateNBGroup.setStatus('current')
ciscoDlswCircuitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 12)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswCircuitS1IfIndex"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS1DlcType"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS1RouteInfo"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS1CircuitId"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS1Dlc"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS2Location"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS2TDomain"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS2TAddress"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitS2CircuitId"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitOrigin"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitEntryTime"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitStateTime"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitState"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitPriority"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCSendGrantedUnits"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCSendCurrentWndw"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCRecvGrantedUnits"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCRecvCurrentWndw"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCLargestRecvGranted"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCLargestSendGranted"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCHalveWndwSents"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCResetOpSents"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCHalveWndwRcvds"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitFCResetOpRcvds"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitDiscReasonLocal"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitDiscReasonRemote"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitDiscReasonRemoteData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswCircuitGroup = ciscoDlswCircuitGroup.setStatus('current')
ciscoDlswSdlcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 13)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswSdlcLsEntries"), ("CISCO-DLSW-MIB", "ciscoDlswSdlcLsLocalMac"), ("CISCO-DLSW-MIB", "ciscoDlswSdlcLsLocalSap"), ("CISCO-DLSW-MIB", "ciscoDlswSdlcLsLocalBlockNum"), ("CISCO-DLSW-MIB", "ciscoDlswSdlcLsLocalIdNum"), ("CISCO-DLSW-MIB", "ciscoDlswSdlcLsRemoteMac"), ("CISCO-DLSW-MIB", "ciscoDlswSdlcLsRemoteSap"), ("CISCO-DLSW-MIB", "ciscoDlswSdlcLsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswSdlcGroup = ciscoDlswSdlcGroup.setStatus('current')
ciscoDlswTConnTcpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 15)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnTcpConfigKeepAliveInt"), ("CISCO-DLSW-MIB", "ciscoDlswTConnTcpConfigTcpConnections"), ("CISCO-DLSW-MIB", "ciscoDlswTConnTcpConfigMaxSegmentSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswTConnTcpConfigGroup = ciscoDlswTConnTcpConfigGroup.setStatus('current')
ciscoDlswTConnTcpOperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 16)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswTConnTcpOperKeepAliveInt"), ("CISCO-DLSW-MIB", "ciscoDlswTConnTcpOperPrefTcpConnections"), ("CISCO-DLSW-MIB", "ciscoDlswTConnTcpOperTcpConnections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswTConnTcpOperGroup = ciscoDlswTConnTcpOperGroup.setStatus('current')
ciscoDlswCircuitStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 9, 3, 2, 17)).setObjects(("CISCO-DLSW-MIB", "ciscoDlswActiveCircuits"), ("CISCO-DLSW-MIB", "ciscoDlswCircuitCreates"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDlswCircuitStatGroup = ciscoDlswCircuitStatGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-DLSW-MIB", ciscoDlswSdlcLsTable=ciscoDlswSdlcLsTable, ciscoDlswNodeNBGroup=ciscoDlswNodeNBGroup, ciscoDlswDirNBLFSize=ciscoDlswDirNBLFSize, ciscoDlswActiveCircuits=ciscoDlswActiveCircuits, ciscoDlswDirMacIndex=ciscoDlswDirMacIndex, ciscoDlswDirLocateMacEntry=ciscoDlswDirLocateMacEntry, ciscoDlswTCPDomain=ciscoDlswTCPDomain, ciscoDlswDirLocateNBMatch=ciscoDlswDirLocateNBMatch, ciscoDlswTConnOperOutCntlPkts=ciscoDlswTConnOperOutCntlPkts, ciscoDlswTConnOperFlowCntlMode=ciscoDlswTConnOperFlowCntlMode, ciscoDlswDomains=ciscoDlswDomains, ciscoDlswCircuitPriority=ciscoDlswCircuitPriority, ciscoDlswVersion=ciscoDlswVersion, ciscoDlswDirNBCacheHits=ciscoDlswDirNBCacheHits, ciscoDlswCircuitState=ciscoDlswCircuitState, ciscoDlswTConnOperOutDataPkts=ciscoDlswTConnOperOutDataPkts, ciscoDlswDirLocateNBName=ciscoDlswDirLocateNBName, EndStationLocation=EndStationLocation, ciscoDlswTConnOperTDomain=ciscoDlswTConnOperTDomain, ciscoDlswVendorID=ciscoDlswVendorID, ciscoDlswTConnTcpConfigGroup=ciscoDlswTConnTcpConfigGroup, ciscoDlswDirMacCacheMisses=ciscoDlswDirMacCacheMisses, ciscoDlswDirLocateMacMatch=ciscoDlswDirLocateMacMatch, ciscoDlswCircuitS2Location=ciscoDlswCircuitS2Location, ciscoDlswNode=ciscoDlswNode, ciscoDlswSdlcCompliance=ciscoDlswSdlcCompliance, ciscoDlswTConnOperInDataPkts=ciscoDlswTConnOperInDataPkts, ciscoDlswCircuitFCSendCurrentWndw=ciscoDlswCircuitFCSendCurrentWndw, ciscoDlswCircuitFCResetOpRcvds=ciscoDlswCircuitFCResetOpRcvds, ciscoDlswDirNBGroup=ciscoDlswDirNBGroup, ciscoDlswTConnOperICRexRcvds=ciscoDlswTConnOperICRexRcvds, ciscoDlswNodeGroup=ciscoDlswNodeGroup, ciscoDlswTConnOperPartnerNBInfo=ciscoDlswTConnOperPartnerNBInfo, ciscoDlswCircuitS2Mac=ciscoDlswCircuitS2Mac, ciscoDlswCircuitOrigin=ciscoDlswCircuitOrigin, ciscoDlswCircuitFCRecvGrantedUnits=ciscoDlswCircuitFCRecvGrantedUnits, ciscoDlswTConnOperNRexSents=ciscoDlswTConnOperNRexSents, ciscoDlswCoreComplianceV11R01=ciscoDlswCoreComplianceV11R01, DlswTimeStamp=DlswTimeStamp, ciscoDlswDirMacLocationType=ciscoDlswDirMacLocationType, ciscoDlswTConnOperRemoteTAddr=ciscoDlswTConnOperRemoteTAddr, ciscoDlswCircuitS1Sap=ciscoDlswCircuitS1Sap, ciscoDlswCircuitS1IfIndex=ciscoDlswCircuitS1IfIndex, ciscoDlswCircuitGroup=ciscoDlswCircuitGroup, ciscoDlswTConnOperCirCreates=ciscoDlswTConnOperCirCreates, ciscoDlswCompliances=ciscoDlswCompliances, ciscoDlswVersionString=ciscoDlswVersionString, ciscoDlswTConnOperConfigIndex=ciscoDlswTConnOperConfigIndex, ciscoDlswIfTable=ciscoDlswIfTable, ciscoDlswDirLocateNBTable=ciscoDlswDirLocateNBTable, ciscoDlswCircuitS2CircuitId=ciscoDlswCircuitS2CircuitId, ciscoDlswVirtualSegmentLFSize=ciscoDlswVirtualSegmentLFSize, DlcType=DlcType, ciscoDlswTConnOperInDataOctets=ciscoDlswTConnOperInDataOctets, ciscoDlswCircuitDiscReasonRemote=ciscoDlswCircuitDiscReasonRemote, ciscoDlswDirNBTable=ciscoDlswDirNBTable, ciscoDlswConformance=ciscoDlswConformance, ciscoDlswTConnConfigInitCirRecvWndw=ciscoDlswTConnConfigInitCirRecvWndw, ciscoDlswTConnOperPartnerNBExcl=ciscoDlswTConnOperPartnerNBExcl, ciscoDlswTrapCntlCircuit=ciscoDlswTrapCntlCircuit, ciscoDlswCircuit=ciscoDlswCircuit, ciscoDlswTConnConfigSetupType=ciscoDlswTConnConfigSetupType, PYSNMP_MODULE_ID=ciscoDlswMIB, ciscoDlswCircuitEntry=ciscoDlswCircuitEntry, ciscoDlswDirMacStatus=ciscoDlswDirMacStatus, ciscoDlswSdlcLsEntry=ciscoDlswSdlcLsEntry, ciscoDlswTConnConfigEntry=ciscoDlswTConnConfigEntry, ciscoDlswCircuitS1Dlc=ciscoDlswCircuitS1Dlc, ciscoDlswDirGroup=ciscoDlswDirGroup, ciscoDlswDirMacEntryType=ciscoDlswDirMacEntryType, ciscoDlswTConnTcpConfigTable=ciscoDlswTConnTcpConfigTable, ciscoDlswIfVirtualSegment=ciscoDlswIfVirtualSegment, ciscoDlswMIBObjects=ciscoDlswMIBObjects, ciscoDlswTConnOperOutDataOctets=ciscoDlswTConnOperOutDataOctets, ciscoDlswDirLocateMacLocation=ciscoDlswDirLocateMacLocation, MacAddress=MacAddress, ciscoDlswDirMacLFSize=ciscoDlswDirMacLFSize, ciscoDlswMIB=ciscoDlswMIB, ciscoDlswTConnTcpOperTable=ciscoDlswTConnTcpOperTable, ciscoDlswCircuitFCHalveWndwRcvds=ciscoDlswCircuitFCHalveWndwRcvds, ciscoDlswCircuitS1DlcType=ciscoDlswCircuitS1DlcType, ciscoDlswCircuitS1RouteInfo=ciscoDlswCircuitS1RouteInfo, ciscoDlswTConnOperInCntlPkts=ciscoDlswTConnOperInCntlPkts, ciscoDlswTConnOperNRexRcvds=ciscoDlswTConnOperNRexRcvds, ciscoDlswTConnOperEntryTime=ciscoDlswTConnOperEntryTime, ciscoDlswCircuitEntryTime=ciscoDlswCircuitEntryTime, ciscoDlswTConnTcpOperKeepAliveInt=ciscoDlswTConnTcpOperKeepAliveInt, ciscoDlswDirComplianceV11R01=ciscoDlswDirComplianceV11R01, ciscoDlswDirMacTable=ciscoDlswDirMacTable, ciscoDlswIfSapList=ciscoDlswIfSapList, ciscoDlswTConnOperCURexSents=ciscoDlswTConnOperCURexSents, ciscoDlswDirNBCacheMisses=ciscoDlswDirNBCacheMisses, ciscoDlswDirMacRowStatus=ciscoDlswDirMacRowStatus, ciscoDlswResourceNBExclusivity=ciscoDlswResourceNBExclusivity, ciscoDlswDirLocateCompliance=ciscoDlswDirLocateCompliance, ciscoDlswTConnStatCloseIdles=ciscoDlswTConnStatCloseIdles, ciscoDlswDirMacMac=ciscoDlswDirMacMac, ciscoDlswCircuitS1CircuitId=ciscoDlswCircuitS1CircuitId, ciscoDlswCircuitCreates=ciscoDlswCircuitCreates, ciscoDlswTConnTcpOperTcpConnections=ciscoDlswTConnTcpOperTcpConnections, ciscoDlswCircuitS2Sap=ciscoDlswCircuitS2Sap, ciscoDlswTConnConfigTable=ciscoDlswTConnConfigTable, ciscoDlswSdlcLsRemoteSap=ciscoDlswSdlcLsRemoteSap, ciscoDlswIfRowStatus=ciscoDlswIfRowStatus, ciscoDlswSdlcComplianceV11R01=ciscoDlswSdlcComplianceV11R01, ciscoDlswDirCompliance=ciscoDlswDirCompliance, NBName=NBName, ciscoDlswCircuitDiscReasonLocal=ciscoDlswCircuitDiscReasonLocal, ciscoDlswTrapTConnPartnerReject=ciscoDlswTrapTConnPartnerReject, ciscoDlswTConnTcpConfigKeepAliveInt=ciscoDlswTConnTcpConfigKeepAliveInt, ciscoDlswTrapCircuitUp=ciscoDlswTrapCircuitUp, ciscoDlswTrapCntlTConnPartnerReject=ciscoDlswTrapCntlTConnPartnerReject, ciscoDlswTConnStat=ciscoDlswTConnStat, ciscoDlswCircuitFCRecvCurrentWndw=ciscoDlswCircuitFCRecvCurrentWndw, ciscoDlswSdlc=ciscoDlswSdlc, ciscoDlswTConnTcpConfigMaxSegmentSize=ciscoDlswTConnTcpConfigMaxSegmentSize, ciscoDlswTConnTcp=ciscoDlswTConnTcp, ciscoDlswTrapCntlTConn=ciscoDlswTrapCntlTConn, ciscoDlswCircuitDiscReasonRemoteData=ciscoDlswCircuitDiscReasonRemoteData, ciscoDlswSdlcLsLocalSap=ciscoDlswSdlcLsLocalSap, ciscoDlswTrapTConnUp=ciscoDlswTrapTConnUp, ciscoDlswSdlcLsRemoteMac=ciscoDlswSdlcLsRemoteMac, ciscoDlswTConnOperDiscReason=ciscoDlswTConnOperDiscReason, ciscoDlswCircuitFCLargestSendGranted=ciscoDlswCircuitFCLargestSendGranted, ciscoDlswSdlcLsLocalIdNum=ciscoDlswSdlcLsLocalIdNum, ciscoDlswDirCache=ciscoDlswDirCache, ciscoDlswTConnConfigOpens=ciscoDlswTConnConfigOpens, ciscoDlswDirNBEntry=ciscoDlswDirNBEntry, TAddress=TAddress, ciscoDlswUpTime=ciscoDlswUpTime, ciscoDlswTConnOperDiscTime=ciscoDlswTConnOperDiscTime, ciscoDlswDirNBStatus=ciscoDlswDirNBStatus, ciscoDlswDirLocateMacMac=ciscoDlswDirLocateMacMac, ciscoDlswCoreCompliance=ciscoDlswCoreCompliance, ciscoDlswTrapTConnProtViolation=ciscoDlswTrapTConnProtViolation, ciscoDlswCircuitFCSendGrantedUnits=ciscoDlswCircuitFCSendGrantedUnits, ciscoDlswDirNBNameType=ciscoDlswDirNBNameType, ciscoDlswTConnOperNQexRcvds=ciscoDlswTConnOperNQexRcvds, ciscoDlswDirNBLocationType=ciscoDlswDirNBLocationType, ciscoDlswTConnOperPartnerMacExcl=ciscoDlswTConnOperPartnerMacExcl, ciscoDlswSdlcLsLocalBlockNum=ciscoDlswSdlcLsLocalBlockNum, ciscoDlswStdPacingSupport=ciscoDlswStdPacingSupport, ciscoDlswTConnOperNQexSents=ciscoDlswTConnOperNQexSents, ciscoDlswTConnConfigRemoteTAddr=ciscoDlswTConnConfigRemoteTAddr, ciscoDlswDirNBRowStatus=ciscoDlswDirNBRowStatus, ciscoDlswTConnOperCURexRcvds=ciscoDlswTConnOperCURexRcvds, ciscoDlswDirNBEntryType=ciscoDlswDirNBEntryType, ciscoDlswDirectory=ciscoDlswDirectory, ciscoDlswTConnNBGroup=ciscoDlswTConnNBGroup, ciscoDlswTConnStatActiveConnections=ciscoDlswTConnStatActiveConnections, ciscoDlswTConnConfigIndex=ciscoDlswTConnConfigIndex, ciscoDlswDirMacEntries=ciscoDlswDirMacEntries, ciscoDlswDirNBLocation=ciscoDlswDirNBLocation, ciscoDlswDirLocateGroup=ciscoDlswDirLocateGroup, ciscoDlswTConnOperPartnerVendorID=ciscoDlswTConnOperPartnerVendorID, ciscoDlswTConnOperDiscActiveCir=ciscoDlswTConnOperDiscActiveCir, ciscoDlswDirLocateNBEntry=ciscoDlswDirLocateNBEntry, ciscoDlswTrapCntlTConnProtViolation=ciscoDlswTrapCntlTConnProtViolation, ciscoDlswDirLocateNBLocation=ciscoDlswDirLocateNBLocation, ciscoDlswTConnTcpOperEntry=ciscoDlswTConnTcpOperEntry, ciscoDlswSdlcLsLocalMac=ciscoDlswSdlcLsLocalMac, ciscoDlswTConnOperConnectTime=ciscoDlswTConnOperConnectTime, ciscoDlswTConnOperEntry=ciscoDlswTConnOperEntry, ciscoDlswTConnTcpOperPrefTcpConnections=ciscoDlswTConnTcpOperPrefTcpConnections, ciscoDlswCircuitStat=ciscoDlswCircuitStat, ciscoDlswGroups=ciscoDlswGroups, ciscoDlswDirLocate=ciscoDlswDirLocate, ciscoDlswTConnSpecific=ciscoDlswTConnSpecific, ciscoDlswTConnConfigAdvertiseMacNB=ciscoDlswTConnConfigAdvertiseMacNB, ciscoDlswTrapControl=ciscoDlswTrapControl, ciscoDlswSdlcLsRowStatus=ciscoDlswSdlcLsRowStatus, ciscoDlswDirLocateMacTable=ciscoDlswDirLocateMacTable, ciscoDlswTConnOperICRexSents=ciscoDlswTConnOperICRexSents, ciscoDlswInterfaceGroup=ciscoDlswInterfaceGroup, ciscoDlswResourceMacExclusivity=ciscoDlswResourceMacExclusivity, ciscoDlswCircuitStatGroup=ciscoDlswCircuitStatGroup, ciscoDlswStatus=ciscoDlswStatus, ciscoDlswCircuitS1Mac=ciscoDlswCircuitS1Mac, ciscoDlswInterface=ciscoDlswInterface, ciscoDlswDirLocateNBGroup=ciscoDlswDirLocateNBGroup, ciscoDlswDirMacCacheHits=ciscoDlswDirMacCacheHits, ciscoDlswTConnOperPartnerMacInfo=ciscoDlswTConnOperPartnerMacInfo, ciscoDlswTConnOperState=ciscoDlswTConnOperState, ciscoDlswTConnOperPartnerVersionStr=ciscoDlswTConnOperPartnerVersionStr, ciscoDlswTConnConfigTDomain=ciscoDlswTConnConfigTDomain, ciscoDlswTConnConfigLocalTAddr=ciscoDlswTConnConfigLocalTAddr, ciscoDlswTConnOperLocalTAddr=ciscoDlswTConnOperLocalTAddr, ciscoDlswTConn=ciscoDlswTConn, ciscoDlswTrapTConnDown=ciscoDlswTrapTConnDown, ciscoDlswDirMacEntry=ciscoDlswDirMacEntry, ciscoDlswTConnOperGroup=ciscoDlswTConnOperGroup, ciscoDlswDirMacMask=ciscoDlswDirMacMask, ciscoDlswCircuitS2TAddress=ciscoDlswCircuitS2TAddress, ciscoDlswTConnConfigSapList=ciscoDlswTConnConfigSapList, ciscoDlswSdlcLsEntries=ciscoDlswSdlcLsEntries, ciscoDlswTConnTcpOperGroup=ciscoDlswTConnTcpOperGroup, ciscoDlswTConnStatGroup=ciscoDlswTConnStatGroup, ciscoDlswDirNBEntries=ciscoDlswDirNBEntries, ciscoDlswTConnOperPartnerInitPacingWndw=ciscoDlswTConnOperPartnerInitPacingWndw, ciscoDlswCircuitStateTime=ciscoDlswCircuitStateTime, ciscoDlswDirNBIndex=ciscoDlswDirNBIndex, ciscoDlswTraps=ciscoDlswTraps, LFSize=LFSize, ciscoDlswCircuitTable=ciscoDlswCircuitTable, ciscoDlswTConnTcpConfigTcpConnections=ciscoDlswTConnTcpConfigTcpConnections, ciscoDlswCircuitS2TDomain=ciscoDlswCircuitS2TDomain, ciscoDlswTrapCircuitDown=ciscoDlswTrapCircuitDown, ciscoDlswCircuitFCResetOpSents=ciscoDlswCircuitFCResetOpSents, ciscoDlswTConnOperCircuits=ciscoDlswTConnOperCircuits, ciscoDlswTConnConfigGroup=ciscoDlswTConnConfigGroup, ciscoDlswTConnStatCloseBusys=ciscoDlswTConnStatCloseBusys, ciscoDlswTConnOperPartnerSapList=ciscoDlswTConnOperPartnerSapList, ciscoDlswSdlcGroup=ciscoDlswSdlcGroup, ciscoDlswTConnOperPartnerVersion=ciscoDlswTConnOperPartnerVersion, ciscoDlswDirStat=ciscoDlswDirStat, ciscoDlswIfEntry=ciscoDlswIfEntry, ciscoDlswTConnConfigRowStatus=ciscoDlswTConnConfigRowStatus, ciscoDlswCircuitFCLargestRecvGranted=ciscoDlswCircuitFCLargestRecvGranted, ciscoDlswCircuitFCHalveWndwSents=ciscoDlswCircuitFCHalveWndwSents, ciscoDlswTConnConfigEntryType=ciscoDlswTConnConfigEntryType, ciscoDlswTConnTcpConfigEntry=ciscoDlswTConnTcpConfigEntry, ciscoDlswTConnConfigLastModifyTime=ciscoDlswTConnConfigLastModifyTime, ciscoDlswDirMacLocation=ciscoDlswDirMacLocation, ciscoDlswDirNBName=ciscoDlswDirNBName, ciscoDlswTConnOperTable=ciscoDlswTConnOperTable, ciscoDlswTConnConfigGroupDefinition=ciscoDlswTConnConfigGroupDefinition)
