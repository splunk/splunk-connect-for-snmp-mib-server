#
# PySNMP MIB module PANASAS-BLADESET-MIB-V1 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PANASAS-BLADESET-MIB-V1
# Produced by pysmi-0.3.4 at Mon Apr 29 20:27:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
panFs, = mibBuilder.importSymbols("PANASAS-PANFS-MIB-V1", "panFs")
PanSerialNumber, = mibBuilder.importSymbols("PANASAS-TC-MIB", "PanSerialNumber")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, Integer32, Unsigned32, MibIdentifier, NotificationType, ModuleIdentity, TimeTicks, Counter64, Gauge32, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "Integer32", "Unsigned32", "MibIdentifier", "NotificationType", "ModuleIdentity", "TimeTicks", "Counter64", "Gauge32", "Counter32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
panBSet = ModuleIdentity((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3))
panBSet.setRevisions(('2011-04-07 00:00',))
if mibBuilder.loadTexts: panBSet.setLastUpdated('201104070000Z')
if mibBuilder.loadTexts: panBSet.setOrganization('Panasas, Inc')
panBSetTable = MibTable((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1), )
if mibBuilder.loadTexts: panBSetTable.setStatus('current')
panBSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1), ).setIndexNames((0, "PANASAS-BLADESET-MIB-V1", "panBSetName"))
if mibBuilder.loadTexts: panBSetEntry.setStatus('current')
panBSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetName.setStatus('current')
panBSetNumBlades = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetNumBlades.setStatus('current')
panBSetAvailSpares = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetAvailSpares.setStatus('current')
panBSetRequestedSpares = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetRequestedSpares.setStatus('current')
panBSetTotalCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetTotalCapacity.setStatus('current')
panBSetReservedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetReservedCapacity.setStatus('current')
panBSetUsedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetUsedCapacity.setStatus('current')
panBSetAvailableCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetAvailableCapacity.setStatus('current')
panBSetInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetInfo.setStatus('current')
panBSetBladesTable = MibTable((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 2), )
if mibBuilder.loadTexts: panBSetBladesTable.setStatus('obsolete')
panBSetBladesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 2, 1), ).setIndexNames((0, "PANASAS-BLADESET-MIB-V1", "panBSetName"), (0, "PANASAS-BLADESET-MIB-V1", "panBSetBladeIndex"))
if mibBuilder.loadTexts: panBSetBladesEntry.setStatus('obsolete')
panBSetBladeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetBladeIndex.setStatus('obsolete')
panBSetBladeHwSn = MibTableColumn((1, 3, 6, 1, 4, 1, 10159, 1, 3, 3, 2, 1, 2), PanSerialNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: panBSetBladeHwSn.setStatus('obsolete')
mibBuilder.exportSymbols("PANASAS-BLADESET-MIB-V1", panBSetTotalCapacity=panBSetTotalCapacity, panBSetInfo=panBSetInfo, panBSetRequestedSpares=panBSetRequestedSpares, panBSetBladesTable=panBSetBladesTable, panBSetNumBlades=panBSetNumBlades, panBSetBladesEntry=panBSetBladesEntry, PYSNMP_MODULE_ID=panBSet, panBSetUsedCapacity=panBSetUsedCapacity, panBSetAvailableCapacity=panBSetAvailableCapacity, panBSetTable=panBSetTable, panBSetName=panBSetName, panBSetReservedCapacity=panBSetReservedCapacity, panBSetEntry=panBSetEntry, panBSetBladeIndex=panBSetBladeIndex, panBSetAvailSpares=panBSetAvailSpares, panBSet=panBSet, panBSetBladeHwSn=panBSetBladeHwSn)
