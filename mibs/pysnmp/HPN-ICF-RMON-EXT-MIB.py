#
# PySNMP MIB module HPN-ICF-RMON-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-RMON-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:29:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
hpnicfrmonExtend, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfrmonExtend")
OwnerString, = mibBuilder.importSymbols("IF-MIB", "OwnerString")
EntryStatus, = mibBuilder.importSymbols("RMON-MIB", "EntryStatus")
trapDestEntry, trapDestIndex = mibBuilder.importSymbols("RMON2-MIB", "trapDestEntry", "trapDestIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ModuleIdentity, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, Integer32, Counter32, ObjectIdentity, NotificationType, IpAddress, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "Integer32", "Counter32", "ObjectIdentity", "NotificationType", "IpAddress", "Bits", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfperformance = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4))
hpnicfperformance.setRevisions(('2003-03-15 00:00',))
if mibBuilder.loadTexts: hpnicfperformance.setLastUpdated('200303150000Z')
if mibBuilder.loadTexts: hpnicfperformance.setOrganization('')
hpnicfprialarmTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1), )
if mibBuilder.loadTexts: hpnicfprialarmTable.setStatus('current')
hpnicfprialarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1), ).setIndexNames((0, "HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmIndex"))
if mibBuilder.loadTexts: hpnicfprialarmEntry.setStatus('current')
hpnicfprialarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfprialarmIndex.setStatus('current')
hpnicfprialarmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmInterval.setStatus('current')
hpnicfprialarmVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmVariable.setStatus('current')
hpnicfprialarmSympol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmSympol.setStatus('current')
hpnicfprialarmSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("absoluteValue", 1), ("deltaValue", 2), ("speedValue", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmSampleType.setStatus('current')
hpnicfprialarmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfprialarmValue.setStatus('current')
hpnicfprialarmStartupAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("risingAlarm", 1), ("fallingAlarm", 2), ("risingOrFallingAlarm", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmStartupAlarm.setStatus('current')
hpnicfprialarmRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmRisingThreshold.setStatus('current')
hpnicfprialarmFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmFallingThreshold.setStatus('current')
hpnicfprialarmRisingEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmRisingEventIndex.setStatus('current')
hpnicfprialarmFallingEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmFallingEventIndex.setStatus('current')
hpnicfprialarmStatCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmStatCycle.setStatus('current')
hpnicfprialarmStatType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forever", 1), ("during", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmStatType.setStatus('current')
hpnicfprialarmOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 14), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmOwner.setStatus('current')
hpnicfprialarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 4, 1, 1, 15), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfprialarmStatus.setStatus('current')
hpnicfrmonEnableTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 5), )
if mibBuilder.loadTexts: hpnicfrmonEnableTable.setStatus('current')
hpnicfrmonEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 5, 1), ).setIndexNames((0, "HPN-ICF-RMON-EXT-MIB", "hpnicfrmonEnableIfIndex"))
if mibBuilder.loadTexts: hpnicfrmonEnableEntry.setStatus('current')
hpnicfrmonEnableIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfrmonEnableIfIndex.setStatus('current')
hpnicfrmonEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfrmonEnableStatus.setStatus('current')
hpnicfTrapDestTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 6), )
if mibBuilder.loadTexts: hpnicfTrapDestTable.setStatus('current')
hpnicfTrapDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 6, 1), )
trapDestEntry.registerAugmentions(("HPN-ICF-RMON-EXT-MIB", "hpnicfTrapDestEntry"))
hpnicfTrapDestEntry.setIndexNames(*trapDestEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfTrapDestEntry.setStatus('current')
hpnicfTrapDestVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("snmpv1", 1), ("snmpv2", 2), ("snmpv3andauthen", 3), ("snmpv3andnoauthen", 4), ("snmpv3andpriv", 5))).clone('snmpv1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfTrapDestVersion.setStatus('current')
hpnicfrmonExtendEventsV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 0))
if mibBuilder.loadTexts: hpnicfrmonExtendEventsV2.setStatus('current')
hpnicfpririsingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 0, 1)).setObjects(("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmIndex"), ("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmSympol"), ("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmSampleType"), ("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmValue"), ("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmRisingThreshold"))
if mibBuilder.loadTexts: hpnicfpririsingAlarm.setStatus('current')
hpnicfprifallingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 4, 0, 2)).setObjects(("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmIndex"), ("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmSympol"), ("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmSampleType"), ("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmValue"), ("HPN-ICF-RMON-EXT-MIB", "hpnicfprialarmFallingThreshold"))
if mibBuilder.loadTexts: hpnicfprifallingAlarm.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-RMON-EXT-MIB", hpnicfprialarmFallingThreshold=hpnicfprialarmFallingThreshold, hpnicfrmonEnableEntry=hpnicfrmonEnableEntry, hpnicfprialarmStatType=hpnicfprialarmStatType, hpnicfprialarmRisingThreshold=hpnicfprialarmRisingThreshold, hpnicfrmonEnableStatus=hpnicfrmonEnableStatus, hpnicfprialarmStatCycle=hpnicfprialarmStatCycle, hpnicfrmonEnableTable=hpnicfrmonEnableTable, hpnicfprialarmValue=hpnicfprialarmValue, hpnicfTrapDestVersion=hpnicfTrapDestVersion, hpnicfprialarmIndex=hpnicfprialarmIndex, hpnicfTrapDestEntry=hpnicfTrapDestEntry, hpnicfprialarmSampleType=hpnicfprialarmSampleType, hpnicfprialarmVariable=hpnicfprialarmVariable, hpnicfprialarmRisingEventIndex=hpnicfprialarmRisingEventIndex, hpnicfrmonExtendEventsV2=hpnicfrmonExtendEventsV2, hpnicfTrapDestTable=hpnicfTrapDestTable, hpnicfperformance=hpnicfperformance, hpnicfprialarmOwner=hpnicfprialarmOwner, hpnicfprialarmFallingEventIndex=hpnicfprialarmFallingEventIndex, hpnicfprialarmEntry=hpnicfprialarmEntry, hpnicfpririsingAlarm=hpnicfpririsingAlarm, hpnicfprialarmInterval=hpnicfprialarmInterval, hpnicfprialarmSympol=hpnicfprialarmSympol, hpnicfprifallingAlarm=hpnicfprifallingAlarm, hpnicfprialarmStatus=hpnicfprialarmStatus, hpnicfprialarmStartupAlarm=hpnicfprialarmStartupAlarm, PYSNMP_MODULE_ID=hpnicfperformance, hpnicfrmonEnableIfIndex=hpnicfrmonEnableIfIndex, hpnicfprialarmTable=hpnicfprialarmTable)
