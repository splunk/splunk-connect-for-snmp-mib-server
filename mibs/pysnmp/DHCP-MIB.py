#
# PySNMP MIB module DHCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DHCP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:31:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
software, microsoft = mibBuilder.importSymbols("MSFT-MIB", "software", "microsoft")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Unsigned32, iso, enterprises, TimeTicks, Counter64, Gauge32, Bits, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Unsigned32", "iso", "enterprises", "TimeTicks", "Counter64", "Gauge32", "Bits", "IpAddress", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
dhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 3))
dhcpPar = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 3, 1))
dhcpScope = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 3, 2))
parDhcpStartTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: parDhcpStartTime.setStatus('mandatory')
parDhcpTotalNoOfDiscovers = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: parDhcpTotalNoOfDiscovers.setStatus('mandatory')
parDhcpTotalNoOfRequests = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: parDhcpTotalNoOfRequests.setStatus('mandatory')
parDhcpTotalNoOfReleases = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: parDhcpTotalNoOfReleases.setStatus('mandatory')
parDhcpTotalNoOfOffers = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: parDhcpTotalNoOfOffers.setStatus('mandatory')
parDhcpTotalNoOfAcks = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: parDhcpTotalNoOfAcks.setStatus('mandatory')
parDhcpTotalNoOfNacks = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: parDhcpTotalNoOfNacks.setStatus('mandatory')
parDhcpTotalNoOfDeclines = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: parDhcpTotalNoOfDeclines.setStatus('mandatory')
scopeTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 3, 2, 1), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: scopeTable.setStatus('mandatory')
scopeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 3, 2, 1, 1), ).setMaxAccess("readonly").setIndexNames((0, "DHCP-MIB", "SubnetAdd"))
if mibBuilder.loadTexts: scopeTableEntry.setStatus('mandatory')
subnetAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 3, 2, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subnetAdd.setStatus('mandatory')
noAddInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 3, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: noAddInUse.setStatus('mandatory')
noAddFree = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 3, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: noAddFree.setStatus('mandatory')
noPendingOffers = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 3, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: noPendingOffers.setStatus('mandatory')
mibBuilder.exportSymbols("DHCP-MIB", dhcp=dhcp, parDhcpTotalNoOfOffers=parDhcpTotalNoOfOffers, subnetAdd=subnetAdd, parDhcpTotalNoOfDiscovers=parDhcpTotalNoOfDiscovers, parDhcpStartTime=parDhcpStartTime, dhcpScope=dhcpScope, parDhcpTotalNoOfRequests=parDhcpTotalNoOfRequests, scopeTableEntry=scopeTableEntry, noAddFree=noAddFree, noPendingOffers=noPendingOffers, parDhcpTotalNoOfNacks=parDhcpTotalNoOfNacks, parDhcpTotalNoOfDeclines=parDhcpTotalNoOfDeclines, dhcpPar=dhcpPar, noAddInUse=noAddInUse, parDhcpTotalNoOfAcks=parDhcpTotalNoOfAcks, scopeTable=scopeTable, parDhcpTotalNoOfReleases=parDhcpTotalNoOfReleases)
