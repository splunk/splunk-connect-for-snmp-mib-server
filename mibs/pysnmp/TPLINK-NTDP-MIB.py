#
# PySNMP MIB module TPLINK-NTDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-NTDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:17:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, Counter64, ObjectIdentity, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, ModuleIdentity, Counter32, MibIdentifier, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Counter64", "ObjectIdentity", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "ModuleIdentity", "Counter32", "MibIdentifier", "TimeTicks", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ntdpManage, = mibBuilder.importSymbols("TPLINK-CLUSTER-MIB", "ntdpManage")
ntdpGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1))
ntdpStatus = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpStatus.setStatus('current')
ntdpIntervalTime = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpIntervalTime.setStatus('current')
ntdpHop = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpHop.setStatus('current')
ntdpHopDelay = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpHopDelay.setStatus('current')
ntpdPortDelay = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpdPortDelay.setStatus('current')
ntdpPortTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 2), )
if mibBuilder.loadTexts: ntdpPortTable.setStatus('current')
ntdpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 2, 1), ).setIndexNames((0, "TPLINK-NTDP-MIB", "ifIndex"))
if mibBuilder.loadTexts: ntdpPortEntry.setStatus('current')
ntdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpPortStatus.setStatus('current')
ntdpCollectTopo = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("commit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntdpCollectTopo.setStatus('current')
mibBuilder.exportSymbols("TPLINK-NTDP-MIB", ntdpIntervalTime=ntdpIntervalTime, ntdpHop=ntdpHop, ntdpStatus=ntdpStatus, ntdpGlobalConfig=ntdpGlobalConfig, ntpdPortDelay=ntpdPortDelay, ntdpCollectTopo=ntdpCollectTopo, ntdpPortStatus=ntdpPortStatus, ntdpHopDelay=ntdpHopDelay, ntdpPortEntry=ntdpPortEntry, ntdpPortTable=ntdpPortTable)
