#
# PySNMP MIB module H3C-NQA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-NQA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
pingCtlTargetAddress, pingCtlTargetAddressType, pingCtlDescr, pingCtlEntry, pingCtlOwnerIndex, pingCtlType, pingCtlTestName = mibBuilder.importSymbols("DISMAN-PING-MIB", "pingCtlTargetAddress", "pingCtlTargetAddressType", "pingCtlDescr", "pingCtlEntry", "pingCtlOwnerIndex", "pingCtlType", "pingCtlTestName")
h3cRhw, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cRhw")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, ObjectIdentity, ModuleIdentity, IpAddress, Counter32, MibIdentifier, TimeTicks, Bits, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "ObjectIdentity", "ModuleIdentity", "IpAddress", "Counter32", "MibIdentifier", "TimeTicks", "Bits", "Unsigned32", "Counter64")
RowStatus, TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DateAndTime", "DisplayString")
h3cNqa = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3))
if mibBuilder.loadTexts: h3cNqa.setLastUpdated('200608140000Z')
if mibBuilder.loadTexts: h3cNqa.setOrganization('Huawei 3Com Technologies Co., Ltd.')
h3cNqaObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1))
h3cNqaImplementationTypeDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 2))
h3cNqaUdpEcho = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 2, 1))
if mibBuilder.loadTexts: h3cNqaUdpEcho.setStatus('current')
h3cNqaTcpconnect = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 2, 2))
if mibBuilder.loadTexts: h3cNqaTcpconnect.setStatus('current')
h3cNqajitter = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 2, 3))
if mibBuilder.loadTexts: h3cNqajitter.setStatus('current')
h3cNqaHttp = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 2, 4))
if mibBuilder.loadTexts: h3cNqaHttp.setStatus('current')
h3cNqadlsw = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 2, 5))
if mibBuilder.loadTexts: h3cNqadlsw.setStatus('current')
h3cNqadhcp = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 2, 6))
if mibBuilder.loadTexts: h3cNqadhcp.setStatus('current')
h3cNqaftp = ObjectIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 2, 7))
if mibBuilder.loadTexts: h3cNqaftp.setStatus('current')
h3cNqaMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaMIBVersion.setStatus('current')
h3cNqaCtlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2), )
if mibBuilder.loadTexts: h3cNqaCtlTable.setStatus('current')
h3cNqaCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1), )
pingCtlEntry.registerAugmentions(("H3C-NQA-MIB", "h3cNqaCtlEntry"))
h3cNqaCtlEntry.setIndexNames(*pingCtlEntry.getIndexNames())
if mibBuilder.loadTexts: h3cNqaCtlEntry.setStatus('current')
h3cNqaCtlTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlTargetPort.setStatus('current')
h3cNqaCtlSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlSourcePort.setStatus('current')
h3cNqaCtlTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 3), Integer32().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlTTL.setStatus('current')
h3cNqaCtlJitterAdminInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlJitterAdminInterval.setStatus('current')
h3cNqaCtlJitterAdminNumPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 5), Integer32().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlJitterAdminNumPackets.setStatus('current')
h3cNqaCtlHttpOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("get", 1), ("post", 2))).clone('get')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlHttpOperationType.setStatus('current')
h3cNqaCtlHttpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlHttpOperationString.setStatus('current')
h3cNqaCtlFtpOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("get", 1), ("put", 2))).clone('get')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlFtpOperationType.setStatus('current')
h3cNqaCtlFtpUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlFtpUsername.setStatus('current')
h3cNqaCtlFtpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlFtpPassword.setStatus('current')
h3cNqaCtlFtpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlFtpOperationString.setStatus('current')
h3cNqaCtlVPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlVPNInstance.setStatus('current')
h3cNqaCtlHistoryKeptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlHistoryKeptTime.setStatus('current')
h3cNqaCtlHistoryEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlHistoryEnable.setStatus('current')
h3cNqaCtlICPIFAdvFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlICPIFAdvFactor.setStatus('current')
h3cNqaCtlCodecType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notDefined", 1), ("g711Alaw", 2), ("g711Ulaw", 3), ("g729A", 4), ("icmpTimestamp", 5))).clone('notDefined')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlCodecType.setStatus('current')
h3cNqaResultsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3), )
if mibBuilder.loadTexts: h3cNqaResultsTable.setStatus('current')
h3cNqaResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"))
if mibBuilder.loadTexts: h3cNqaResultsEntry.setStatus('current')
h3cNqaResultsRttNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsRttNumDisconnects.setStatus('current')
h3cNqaResultsRttTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsRttTimeouts.setStatus('current')
h3cNqaResultsRttBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsRttBusies.setStatus('current')
h3cNqaResultsRttNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsRttNoConnections.setStatus('current')
h3cNqaResultsRttDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsRttDrops.setStatus('current')
h3cNqaResultsRttSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsRttSequenceErrors.setStatus('current')
h3cNqaResultsRttStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsRttStatsErrors.setStatus('current')
h3cNqaResultsMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsMaxDelaySD.setStatus('current')
h3cNqaResultsMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsMaxDelayDS.setStatus('current')
h3cNqaResultsLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 10), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsLostPacketRatio.setStatus('current')
h3cNqaResultsPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsPacketLateArrival.setStatus('current')
h3cNqaResultsRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsRttSum.setStatus('current')
h3cNqaResultsNumOfDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsNumOfDelaySD.setStatus('current')
h3cNqaResultsMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsMinDelaySD.setStatus('current')
h3cNqaResultsSumDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsSumDelaySD.setStatus('current')
h3cNqaResultsSum2DelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsSum2DelaySD.setStatus('current')
h3cNqaResultsNumOfDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsNumOfDelayDS.setStatus('current')
h3cNqaResultsMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsMinDelayDS.setStatus('current')
h3cNqaResultsSumDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsSumDelayDS.setStatus('current')
h3cNqaResultsSum2DelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaResultsSum2DelayDS.setStatus('current')
h3cNqaJitterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4), )
if mibBuilder.loadTexts: h3cNqaJitterStatsTable.setStatus('current')
h3cNqaJitterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"))
if mibBuilder.loadTexts: h3cNqaJitterStatsEntry.setStatus('current')
h3cNqaJitterStatsNumOfRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsNumOfRTT.setStatus('current')
h3cNqaJitterStatsMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsMinOfPositivesSD.setStatus('current')
h3cNqaJitterStatsMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsMaxOfPositivesSD.setStatus('current')
h3cNqaJitterStatsNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsNumOfPositivesSD.setStatus('current')
h3cNqaJitterStatsSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsSumOfPositivesSD.setStatus('current')
h3cNqaJitterStatsSum2PositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsSum2PositivesSD.setStatus('current')
h3cNqaJitterStatsMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsMinOfNegativesSD.setStatus('current')
h3cNqaJitterStatsMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsMaxOfNegativesSD.setStatus('current')
h3cNqaJitterStatsNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsNumOfNegativesSD.setStatus('current')
h3cNqaJitterStatsSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsSumOfNegativesSD.setStatus('current')
h3cNqaJitterStatsSum2NegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsSum2NegativesSD.setStatus('current')
h3cNqaJitterStatsMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsMinOfPositivesDS.setStatus('current')
h3cNqaJitterStatsMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsMaxOfPositivesDS.setStatus('current')
h3cNqaJitterStatsNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsNumOfPositivesDS.setStatus('current')
h3cNqaJitterStatsSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsSumOfPositivesDS.setStatus('current')
h3cNqaJitterStatsSum2PositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsSum2PositivesDS.setStatus('current')
h3cNqaJitterStatsMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsMinOfNegativesDS.setStatus('current')
h3cNqaJitterStatsMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsMaxOfNegativesDS.setStatus('current')
h3cNqaJitterStatsNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsNumOfNegativesDS.setStatus('current')
h3cNqaJitterStatsSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsSumOfNegativesDS.setStatus('current')
h3cNqaJitterStatsSum2NegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsSum2NegativesDS.setStatus('current')
h3cNqaJitterStatsPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsPacketLossSD.setStatus('current')
h3cNqaJitterStatsPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsPacketLossDS.setStatus('current')
h3cNqaJitterStatsAvePositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsAvePositivesSD.setStatus('current')
h3cNqaJitterStatsAveNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsAveNegativesSD.setStatus('current')
h3cNqaJitterStatsAvePositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsAvePositivesDS.setStatus('current')
h3cNqaJitterStatsAveNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsAveNegativesDS.setStatus('current')
h3cNqaJitterStatsPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 28), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsPktLossUnknown.setStatus('current')
h3cNqaJitterStatsOperOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsOperOfICPIF.setStatus('current')
h3cNqaJitterStatsOperOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 4, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaJitterStatsOperOfMOS.setStatus('current')
h3cNqaAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNqaAgentEnable.setStatus('current')
h3cNqaTcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 6), )
if mibBuilder.loadTexts: h3cNqaTcpServerTable.setStatus('current')
h3cNqaTcpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 6, 1), ).setIndexNames((0, "H3C-NQA-MIB", "h3cNqaTcpServerIpAddress"), (0, "H3C-NQA-MIB", "h3cNqaTcpServerPort"))
if mibBuilder.loadTexts: h3cNqaTcpServerEntry.setStatus('current')
h3cNqaTcpServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 6, 1, 1), InetAddress().clone(hexValue=""))
if mibBuilder.loadTexts: h3cNqaTcpServerIpAddress.setStatus('current')
h3cNqaTcpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: h3cNqaTcpServerPort.setStatus('current')
h3cNqaTcpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaTcpServerRowStatus.setStatus('current')
h3cNqaUdpServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 7), )
if mibBuilder.loadTexts: h3cNqaUdpServerTable.setStatus('current')
h3cNqaUdpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 7, 1), ).setIndexNames((0, "H3C-NQA-MIB", "h3cNqaUdpServerIpAddress"), (0, "H3C-NQA-MIB", "h3cNqaUdpServerPort"))
if mibBuilder.loadTexts: h3cNqaUdpServerEntry.setStatus('current')
h3cNqaUdpServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 7, 1, 1), InetAddress().clone(hexValue=""))
if mibBuilder.loadTexts: h3cNqaUdpServerIpAddress.setStatus('current')
h3cNqaUdpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: h3cNqaUdpServerPort.setStatus('current')
h3cNqaUdpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaUdpServerRowStatus.setStatus('current')
h3cNqaServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNqaServerEnable.setStatus('current')
h3cNqaStatsMaxGroupNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatsMaxGroupNumber.setStatus('current')
h3cNqaStatisticsCtlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 10), )
if mibBuilder.loadTexts: h3cNqaStatisticsCtlTable.setStatus('current')
h3cNqaStatisticsCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 10, 1), )
pingCtlEntry.registerAugmentions(("H3C-NQA-MIB", "h3cNqaStatisticsCtlEntry"))
h3cNqaStatisticsCtlEntry.setIndexNames(*pingCtlEntry.getIndexNames())
if mibBuilder.loadTexts: h3cNqaStatisticsCtlEntry.setStatus('current')
h3cNqaCtlStatisticsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 10, 1, 1), Unsigned32()).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlStatisticsInterval.setStatus('current')
h3cNqaCtlStatisticsGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 10, 1, 2), Unsigned32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlStatisticsGroupNumber.setStatus('current')
h3cNqaCtlStatisticsKeptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlStatisticsKeptTime.setStatus('current')
h3cNqaCtlBeginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 10, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlBeginTime.setStatus('current')
h3cNqaCtlLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 10, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaCtlLifeTime.setStatus('current')
h3cNqaStatisticsResultsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11), )
if mibBuilder.loadTexts: h3cNqaStatisticsResultsTable.setStatus('current')
h3cNqaStatisticsResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"), (0, "H3C-NQA-MIB", "h3cNqaStatResIndex"))
if mibBuilder.loadTexts: h3cNqaStatisticsResultsEntry.setStatus('current')
h3cNqaStatResIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: h3cNqaStatResIndex.setStatus('current')
h3cNqaStatResIpTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 2), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResIpTargetAddressType.setStatus('current')
h3cNqaStatResIpTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 3), InetAddress().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResIpTargetAddress.setStatus('current')
h3cNqaStatResMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 4), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResMinRtt.setStatus('current')
h3cNqaStatResMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 5), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResMaxRtt.setStatus('current')
h3cNqaStatResAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 6), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResAverageRtt.setStatus('current')
h3cNqaStatResProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResProbeResponses.setStatus('current')
h3cNqaStatResSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 8), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResSentProbes.setStatus('current')
h3cNqaStatResRttSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 9), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttSumOfSquares.setStatus('current')
h3cNqaStatResStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResStartTime.setStatus('current')
h3cNqaStatResInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 11), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResInterval.setStatus('current')
h3cNqaStatResRttNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttNumDisconnects.setStatus('current')
h3cNqaStatResRttTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttTimeouts.setStatus('current')
h3cNqaStatResRttBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttBusies.setStatus('current')
h3cNqaStatResRttNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttNoConnections.setStatus('current')
h3cNqaStatResRttDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttDrops.setStatus('current')
h3cNqaStatResRttSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttSequenceErrors.setStatus('current')
h3cNqaStatResRttErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttErrors.setStatus('current')
h3cNqaStatResLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResLostPacketRatio.setStatus('current')
h3cNqaStatResPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResPacketLateArrival.setStatus('current')
h3cNqaStatResRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResRttSum.setStatus('current')
h3cNqaStatResNumOfDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResNumOfDelaySD.setStatus('current')
h3cNqaStatResMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResMinDelaySD.setStatus('current')
h3cNqaStatResMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResMaxDelaySD.setStatus('current')
h3cNqaStatResSumDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResSumDelaySD.setStatus('current')
h3cNqaStatResSum2DelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResSum2DelaySD.setStatus('current')
h3cNqaStatResNumOfDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResNumOfDelayDS.setStatus('current')
h3cNqaStatResMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResMinDelayDS.setStatus('current')
h3cNqaStatResMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResMaxDelayDS.setStatus('current')
h3cNqaStatResSumDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResSumDelayDS.setStatus('current')
h3cNqaStatResSum2DelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 11, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatResSum2DelayDS.setStatus('current')
h3cNqaGroupStatsJitterTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12), )
if mibBuilder.loadTexts: h3cNqaGroupStatsJitterTable.setStatus('current')
h3cNqaGroupStatsJitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"), (0, "H3C-NQA-MIB", "h3cNqaStatJitterIndex"))
if mibBuilder.loadTexts: h3cNqaGroupStatsJitterEntry.setStatus('current')
h3cNqaStatJitterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: h3cNqaStatJitterIndex.setStatus('current')
h3cNqaStatJitterMinOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 2), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMinOfPosSD.setStatus('current')
h3cNqaStatJitterMaxOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 3), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMaxOfPosSD.setStatus('current')
h3cNqaStatJitterNumOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterNumOfPosSD.setStatus('current')
h3cNqaStatJitterSumOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 5), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterSumOfPosSD.setStatus('current')
h3cNqaStatJitterSumOfSquarePosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 6), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterSumOfSquarePosSD.setStatus('current')
h3cNqaStatJitterMinOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 7), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMinOfNegSD.setStatus('current')
h3cNqaStatJitterMaxOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 8), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMaxOfNegSD.setStatus('current')
h3cNqaStatJitterNumOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterNumOfNegSD.setStatus('current')
h3cNqaStatJitterSumOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 10), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterSumOfNegSD.setStatus('current')
h3cNqaStatJitterSumOfSquareNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 11), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterSumOfSquareNegSD.setStatus('current')
h3cNqaStatJitterMinOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 12), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMinOfPosDS.setStatus('current')
h3cNqaStatJitterMaxOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 13), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMaxOfPosDS.setStatus('current')
h3cNqaStatJitterNumOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterNumOfPosDS.setStatus('current')
h3cNqaStatJitterSumOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 15), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterSumOfPosDS.setStatus('current')
h3cNqaStatJitterSumOfSquarePosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 16), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterSumOfSquarePosDS.setStatus('current')
h3cNqaStatJitterMinOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 17), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMinOfNegDS.setStatus('current')
h3cNqaStatJitterMaxOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 18), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMaxOfNegDS.setStatus('current')
h3cNqaStatJitterNumOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterNumOfNegDS.setStatus('current')
h3cNqaStatJitterSumOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 20), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterSumOfNegDS.setStatus('current')
h3cNqaStatJitterSumOfSquareNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 21), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterSumOfSquareNegDS.setStatus('current')
h3cNqaStatJitterPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterPacketLossSD.setStatus('current')
h3cNqaStatJitterPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterPacketLossDS.setStatus('current')
h3cNqaStatJitterAvePosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 24), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterAvePosSD.setStatus('current')
h3cNqaStatJitterAveNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 25), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterAveNegSD.setStatus('current')
h3cNqaStatJitterAvePosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 26), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterAvePosDS.setStatus('current')
h3cNqaStatJitterAveNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 27), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterAveNegDS.setStatus('current')
h3cNqaStatJitterPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterPktLossUnknown.setStatus('current')
h3cNqaStatJitterMaxOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMaxOfICPIF.setStatus('current')
h3cNqaStatJitterMinOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMinOfICPIF.setStatus('current')
h3cNqaStatJitterMaxOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMaxOfMOS.setStatus('current')
h3cNqaStatJitterMinOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 12, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatJitterMinOfMOS.setStatus('current')
h3cNqaReactionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13), )
if mibBuilder.loadTexts: h3cNqaReactionTable.setStatus('current')
h3cNqaReactionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1), ).setIndexNames((0, "H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), (0, "H3C-NQA-MIB", "h3cNqaReactTestName"), (0, "H3C-NQA-MIB", "h3cNqaReactItemIndex"))
if mibBuilder.loadTexts: h3cNqaReactionEntry.setStatus('current')
h3cNqaReactOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cNqaReactOwnerIndex.setStatus('current')
h3cNqaReactTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cNqaReactTestName.setStatus('current')
h3cNqaReactItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cNqaReactItemIndex.setStatus('current')
h3cNqaReactCheckedElement = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("probetime", 1), ("probefailure", 2), ("jitterrtt", 3), ("jitterpacketloss", 4), ("jittersd", 5), ("jitterds", 6), ("icpif", 7), ("mos", 8), ("jitterOwdSD", 9), ("jitterOwdDS", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaReactCheckedElement.setStatus('current')
h3cNqaReactThresholdUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaReactThresholdUpperLimit.setStatus('current')
h3cNqaReactThresholdLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaReactThresholdLowerLimit.setStatus('current')
h3cNqaReactThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("invalid", 0), ("average", 1), ("consecutive", 2), ("accumulative", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaReactThresholdType.setStatus('current')
h3cNqaReactThresholdConsecNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaReactThresholdConsecNum.setStatus('current')
h3cNqaReactThresholdAccumNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaReactThresholdAccumNum.setStatus('current')
h3cNqaReactActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("trapOnly", 1), ("triggerOnly", 2), ("trapAndTrigger", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaReactActionType.setStatus('current')
h3cNqaReactCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("overThreshold", 2), ("belowThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaReactCurrentStatus.setStatus('current')
h3cNqaReactRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNqaReactRowStatus.setStatus('current')
h3cNqaReactCheckedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaReactCheckedNum.setStatus('current')
h3cNqaReactThresholdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 13, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaReactThresholdNum.setStatus('current')
h3cNqaStatisticsReactionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 14), )
if mibBuilder.loadTexts: h3cNqaStatisticsReactionTable.setStatus('current')
h3cNqaStatisticsReactionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 14, 1), ).setIndexNames((0, "H3C-NQA-MIB", "h3cNqaStatReactOwnerIndex"), (0, "H3C-NQA-MIB", "h3cNqaStatReactTestName"), (0, "H3C-NQA-MIB", "h3cNqaStatReactIndex"), (0, "H3C-NQA-MIB", "h3cNqaStatReactItemIndex"))
if mibBuilder.loadTexts: h3cNqaStatisticsReactionEntry.setStatus('current')
h3cNqaStatReactOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 14, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: h3cNqaStatReactOwnerIndex.setStatus('current')
h3cNqaStatReactTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 14, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: h3cNqaStatReactTestName.setStatus('current')
h3cNqaStatReactIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 14, 1, 3), Unsigned32())
if mibBuilder.loadTexts: h3cNqaStatReactIndex.setStatus('current')
h3cNqaStatReactItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 14, 1, 4), Unsigned32())
if mibBuilder.loadTexts: h3cNqaStatReactItemIndex.setStatus('current')
h3cNqaStatReactCheckedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatReactCheckedNum.setStatus('current')
h3cNqaStatReactThresholdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 1, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNqaStatReactThresholdNum.setStatus('current')
h3cNqaNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3))
h3cNqaProbeTimeOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3, 1)).setObjects(("H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), ("H3C-NQA-MIB", "h3cNqaReactTestName"), ("H3C-NQA-MIB", "h3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("H3C-NQA-MIB", "h3cNqaReactThresholdType"), ("H3C-NQA-MIB", "h3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: h3cNqaProbeTimeOverThreshold.setStatus('current')
h3cNqaJitterRTTOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3, 2)).setObjects(("H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), ("H3C-NQA-MIB", "h3cNqaReactTestName"), ("H3C-NQA-MIB", "h3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("H3C-NQA-MIB", "h3cNqaReactThresholdType"), ("H3C-NQA-MIB", "h3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: h3cNqaJitterRTTOverThreshold.setStatus('current')
h3cNqaProbeFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3, 3)).setObjects(("H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), ("H3C-NQA-MIB", "h3cNqaReactTestName"), ("H3C-NQA-MIB", "h3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("H3C-NQA-MIB", "h3cNqaReactThresholdType"), ("H3C-NQA-MIB", "h3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: h3cNqaProbeFailure.setStatus('current')
h3cNqaJitterPacketLoss = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3, 4)).setObjects(("H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), ("H3C-NQA-MIB", "h3cNqaReactTestName"), ("H3C-NQA-MIB", "h3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("H3C-NQA-MIB", "h3cNqaReactThresholdType"), ("H3C-NQA-MIB", "h3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: h3cNqaJitterPacketLoss.setStatus('current')
h3cNqaJitterSDOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3, 5)).setObjects(("H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), ("H3C-NQA-MIB", "h3cNqaReactTestName"), ("H3C-NQA-MIB", "h3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("H3C-NQA-MIB", "h3cNqaReactThresholdType"), ("H3C-NQA-MIB", "h3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: h3cNqaJitterSDOverThreshold.setStatus('current')
h3cNqaJitterDSOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3, 6)).setObjects(("H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), ("H3C-NQA-MIB", "h3cNqaReactTestName"), ("H3C-NQA-MIB", "h3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("H3C-NQA-MIB", "h3cNqaReactThresholdType"), ("H3C-NQA-MIB", "h3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: h3cNqaJitterDSOverThreshold.setStatus('current')
h3cNqaICPIFOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3, 7)).setObjects(("H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), ("H3C-NQA-MIB", "h3cNqaReactTestName"), ("H3C-NQA-MIB", "h3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("H3C-NQA-MIB", "h3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: h3cNqaICPIFOverThreshold.setStatus('current')
h3cNqaMOSOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 8, 3, 3, 8)).setObjects(("H3C-NQA-MIB", "h3cNqaReactOwnerIndex"), ("H3C-NQA-MIB", "h3cNqaReactTestName"), ("H3C-NQA-MIB", "h3cNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("H3C-NQA-MIB", "h3cNqaReactCurrentStatus"))
if mibBuilder.loadTexts: h3cNqaMOSOverThreshold.setStatus('current')
mibBuilder.exportSymbols("H3C-NQA-MIB", h3cNqaObjects=h3cNqaObjects, h3cNqaStatResRttSumOfSquares=h3cNqaStatResRttSumOfSquares, h3cNqaCtlFtpOperationType=h3cNqaCtlFtpOperationType, h3cNqaftp=h3cNqaftp, h3cNqaStatResPacketLateArrival=h3cNqaStatResPacketLateArrival, h3cNqaResultsNumOfDelayDS=h3cNqaResultsNumOfDelayDS, h3cNqaUdpServerIpAddress=h3cNqaUdpServerIpAddress, h3cNqaJitterStatsOperOfICPIF=h3cNqaJitterStatsOperOfICPIF, h3cNqaResultsTable=h3cNqaResultsTable, h3cNqaCtlStatisticsGroupNumber=h3cNqaCtlStatisticsGroupNumber, h3cNqaResultsMaxDelayDS=h3cNqaResultsMaxDelayDS, h3cNqaStatResNumOfDelaySD=h3cNqaStatResNumOfDelaySD, h3cNqaStatJitterSumOfSquareNegSD=h3cNqaStatJitterSumOfSquareNegSD, h3cNqaReactTestName=h3cNqaReactTestName, h3cNqaStatJitterNumOfPosSD=h3cNqaStatJitterNumOfPosSD, h3cNqaStatResAverageRtt=h3cNqaStatResAverageRtt, h3cNqaStatJitterSumOfPosSD=h3cNqaStatJitterSumOfPosSD, h3cNqaUdpEcho=h3cNqaUdpEcho, h3cNqaJitterStatsMinOfPositivesSD=h3cNqaJitterStatsMinOfPositivesSD, h3cNqaReactOwnerIndex=h3cNqaReactOwnerIndex, h3cNqaUdpServerPort=h3cNqaUdpServerPort, h3cNqaCtlTTL=h3cNqaCtlTTL, h3cNqaHttp=h3cNqaHttp, h3cNqaCtlHttpOperationType=h3cNqaCtlHttpOperationType, h3cNqaJitterStatsSum2PositivesSD=h3cNqaJitterStatsSum2PositivesSD, h3cNqaJitterStatsNumOfRTT=h3cNqaJitterStatsNumOfRTT, h3cNqaJitterStatsMaxOfPositivesSD=h3cNqaJitterStatsMaxOfPositivesSD, h3cNqaStatResSentProbes=h3cNqaStatResSentProbes, h3cNqaCtlJitterAdminInterval=h3cNqaCtlJitterAdminInterval, h3cNqaStatJitterMaxOfNegDS=h3cNqaStatJitterMaxOfNegDS, h3cNqaCtlJitterAdminNumPackets=h3cNqaCtlJitterAdminNumPackets, h3cNqaStatJitterMinOfPosSD=h3cNqaStatJitterMinOfPosSD, h3cNqaStatJitterAveNegSD=h3cNqaStatJitterAveNegSD, h3cNqaStatJitterMaxOfNegSD=h3cNqaStatJitterMaxOfNegSD, h3cNqaJitterStatsMaxOfNegativesSD=h3cNqaJitterStatsMaxOfNegativesSD, h3cNqajitter=h3cNqajitter, h3cNqaReactThresholdAccumNum=h3cNqaReactThresholdAccumNum, h3cNqaStatJitterIndex=h3cNqaStatJitterIndex, h3cNqaStatJitterNumOfPosDS=h3cNqaStatJitterNumOfPosDS, h3cNqaCtlStatisticsInterval=h3cNqaCtlStatisticsInterval, h3cNqaStatJitterSumOfSquarePosSD=h3cNqaStatJitterSumOfSquarePosSD, h3cNqaJitterStatsAveNegativesSD=h3cNqaJitterStatsAveNegativesSD, h3cNqaJitterStatsOperOfMOS=h3cNqaJitterStatsOperOfMOS, h3cNqaStatResRttSum=h3cNqaStatResRttSum, h3cNqaCtlSourcePort=h3cNqaCtlSourcePort, h3cNqaResultsMinDelaySD=h3cNqaResultsMinDelaySD, h3cNqaGroupStatsJitterTable=h3cNqaGroupStatsJitterTable, h3cNqaCtlTable=h3cNqaCtlTable, h3cNqaStatJitterSumOfSquarePosDS=h3cNqaStatJitterSumOfSquarePosDS, h3cNqaResultsNumOfDelaySD=h3cNqaResultsNumOfDelaySD, h3cNqaImplementationTypeDomains=h3cNqaImplementationTypeDomains, h3cNqaJitterStatsSumOfNegativesSD=h3cNqaJitterStatsSumOfNegativesSD, h3cNqaJitterStatsNumOfPositivesDS=h3cNqaJitterStatsNumOfPositivesDS, h3cNqaJitterStatsPacketLossSD=h3cNqaJitterStatsPacketLossSD, h3cNqaReactItemIndex=h3cNqaReactItemIndex, h3cNqaStatReactThresholdNum=h3cNqaStatReactThresholdNum, h3cNqaJitterStatsMaxOfPositivesDS=h3cNqaJitterStatsMaxOfPositivesDS, h3cNqaResultsRttSum=h3cNqaResultsRttSum, h3cNqaStatResMinRtt=h3cNqaStatResMinRtt, h3cNqaJitterStatsSum2PositivesDS=h3cNqaJitterStatsSum2PositivesDS, h3cNqaStatResMinDelayDS=h3cNqaStatResMinDelayDS, h3cNqaStatisticsResultsEntry=h3cNqaStatisticsResultsEntry, h3cNqaJitterStatsNumOfNegativesDS=h3cNqaJitterStatsNumOfNegativesDS, h3cNqaReactCheckedElement=h3cNqaReactCheckedElement, h3cNqaReactThresholdConsecNum=h3cNqaReactThresholdConsecNum, h3cNqaJitterPacketLoss=h3cNqaJitterPacketLoss, h3cNqaCtlFtpOperationString=h3cNqaCtlFtpOperationString, h3cNqaStatJitterPacketLossDS=h3cNqaStatJitterPacketLossDS, h3cNqaResultsRttNumDisconnects=h3cNqaResultsRttNumDisconnects, h3cNqaStatJitterSumOfPosDS=h3cNqaStatJitterSumOfPosDS, h3cNqaResultsMaxDelaySD=h3cNqaResultsMaxDelaySD, h3cNqaStatReactCheckedNum=h3cNqaStatReactCheckedNum, h3cNqaResultsSumDelaySD=h3cNqaResultsSumDelaySD, h3cNqaTcpServerEntry=h3cNqaTcpServerEntry, h3cNqaJitterStatsMinOfNegativesSD=h3cNqaJitterStatsMinOfNegativesSD, h3cNqaReactionTable=h3cNqaReactionTable, h3cNqaCtlCodecType=h3cNqaCtlCodecType, h3cNqaStatResRttNoConnections=h3cNqaStatResRttNoConnections, h3cNqaStatReactItemIndex=h3cNqaStatReactItemIndex, h3cNqaResultsSumDelayDS=h3cNqaResultsSumDelayDS, h3cNqaAgentEnable=h3cNqaAgentEnable, h3cNqaResultsRttDrops=h3cNqaResultsRttDrops, h3cNqaJitterStatsPktLossUnknown=h3cNqaJitterStatsPktLossUnknown, h3cNqaStatJitterMinOfMOS=h3cNqaStatJitterMinOfMOS, h3cNqaJitterStatsSumOfNegativesDS=h3cNqaJitterStatsSumOfNegativesDS, h3cNqaStatResRttErrors=h3cNqaStatResRttErrors, h3cNqaResultsEntry=h3cNqaResultsEntry, h3cNqaReactThresholdUpperLimit=h3cNqaReactThresholdUpperLimit, h3cNqaStatJitterSumOfSquareNegDS=h3cNqaStatJitterSumOfSquareNegDS, h3cNqaJitterStatsEntry=h3cNqaJitterStatsEntry, h3cNqaResultsPacketLateArrival=h3cNqaResultsPacketLateArrival, h3cNqaJitterStatsMinOfPositivesDS=h3cNqaJitterStatsMinOfPositivesDS, h3cNqaStatJitterMinOfNegSD=h3cNqaStatJitterMinOfNegSD, h3cNqaStatJitterPacketLossSD=h3cNqaStatJitterPacketLossSD, h3cNqaTcpconnect=h3cNqaTcpconnect, h3cNqaCtlHistoryEnable=h3cNqaCtlHistoryEnable, h3cNqaStatResMaxDelaySD=h3cNqaStatResMaxDelaySD, h3cNqaStatResSum2DelaySD=h3cNqaStatResSum2DelaySD, h3cNqaStatReactIndex=h3cNqaStatReactIndex, h3cNqaMOSOverThreshold=h3cNqaMOSOverThreshold, h3cNqaJitterDSOverThreshold=h3cNqaJitterDSOverThreshold, h3cNqaStatJitterAvePosSD=h3cNqaStatJitterAvePosSD, h3cNqaCtlHttpOperationString=h3cNqaCtlHttpOperationString, h3cNqaUdpServerTable=h3cNqaUdpServerTable, h3cNqaJitterStatsAvePositivesSD=h3cNqaJitterStatsAvePositivesSD, h3cNqaTcpServerRowStatus=h3cNqaTcpServerRowStatus, h3cNqaStatisticsReactionTable=h3cNqaStatisticsReactionTable, h3cNqaStatJitterMaxOfMOS=h3cNqaStatJitterMaxOfMOS, h3cNqaProbeTimeOverThreshold=h3cNqaProbeTimeOverThreshold, h3cNqaStatJitterMinOfICPIF=h3cNqaStatJitterMinOfICPIF, h3cNqaStatJitterMaxOfICPIF=h3cNqaStatJitterMaxOfICPIF, h3cNqaStatResRttDrops=h3cNqaStatResRttDrops, h3cNqaCtlBeginTime=h3cNqaCtlBeginTime, h3cNqaServerEnable=h3cNqaServerEnable, h3cNqaJitterStatsSum2NegativesDS=h3cNqaJitterStatsSum2NegativesDS, h3cNqaTcpServerTable=h3cNqaTcpServerTable, h3cNqaCtlHistoryKeptTime=h3cNqaCtlHistoryKeptTime, h3cNqaCtlTargetPort=h3cNqaCtlTargetPort, h3cNqaStatJitterNumOfNegSD=h3cNqaStatJitterNumOfNegSD, h3cNqaStatJitterSumOfNegSD=h3cNqaStatJitterSumOfNegSD, h3cNqaStatJitterAveNegDS=h3cNqaStatJitterAveNegDS, h3cNqaJitterStatsSumOfPositivesSD=h3cNqaJitterStatsSumOfPositivesSD, h3cNqaStatResRttTimeouts=h3cNqaStatResRttTimeouts, h3cNqaStatResNumOfDelayDS=h3cNqaStatResNumOfDelayDS, h3cNqaStatResMinDelaySD=h3cNqaStatResMinDelaySD, h3cNqaResultsMinDelayDS=h3cNqaResultsMinDelayDS, h3cNqaStatJitterSumOfNegDS=h3cNqaStatJitterSumOfNegDS, h3cNqaStatResMaxDelayDS=h3cNqaStatResMaxDelayDS, h3cNqaJitterStatsSumOfPositivesDS=h3cNqaJitterStatsSumOfPositivesDS, h3cNqaGroupStatsJitterEntry=h3cNqaGroupStatsJitterEntry, h3cNqaReactCurrentStatus=h3cNqaReactCurrentStatus, h3cNqaStatResIndex=h3cNqaStatResIndex, h3cNqaCtlVPNInstance=h3cNqaCtlVPNInstance, h3cNqaJitterStatsPacketLossDS=h3cNqaJitterStatsPacketLossDS, h3cNqaStatisticsResultsTable=h3cNqaStatisticsResultsTable, h3cNqaJitterSDOverThreshold=h3cNqaJitterSDOverThreshold, h3cNqaStatResMaxRtt=h3cNqaStatResMaxRtt, h3cNqaUdpServerRowStatus=h3cNqaUdpServerRowStatus, h3cNqaStatJitterAvePosDS=h3cNqaStatJitterAvePosDS, h3cNqaJitterStatsNumOfNegativesSD=h3cNqaJitterStatsNumOfNegativesSD, h3cNqaCtlFtpPassword=h3cNqaCtlFtpPassword, h3cNqaStatJitterNumOfNegDS=h3cNqaStatJitterNumOfNegDS, h3cNqaJitterStatsAvePositivesDS=h3cNqaJitterStatsAvePositivesDS, h3cNqaUdpServerEntry=h3cNqaUdpServerEntry, h3cNqaCtlEntry=h3cNqaCtlEntry, h3cNqaStatisticsReactionEntry=h3cNqaStatisticsReactionEntry, h3cNqaJitterStatsMinOfNegativesDS=h3cNqaJitterStatsMinOfNegativesDS, h3cNqaStatResRttNumDisconnects=h3cNqaStatResRttNumDisconnects, h3cNqaResultsSum2DelayDS=h3cNqaResultsSum2DelayDS, h3cNqaStatisticsCtlEntry=h3cNqaStatisticsCtlEntry, h3cNqaStatReactOwnerIndex=h3cNqaStatReactOwnerIndex, h3cNqaResultsRttTimeouts=h3cNqaResultsRttTimeouts, h3cNqaJitterStatsMaxOfNegativesDS=h3cNqaJitterStatsMaxOfNegativesDS, h3cNqaCtlLifeTime=h3cNqaCtlLifeTime, h3cNqaStatResSumDelayDS=h3cNqaStatResSumDelayDS, h3cNqaStatResSum2DelayDS=h3cNqaStatResSum2DelayDS, h3cNqaCtlStatisticsKeptTime=h3cNqaCtlStatisticsKeptTime, h3cNqa=h3cNqa, h3cNqaICPIFOverThreshold=h3cNqaICPIFOverThreshold, h3cNqaTcpServerPort=h3cNqaTcpServerPort, h3cNqaJitterStatsSum2NegativesSD=h3cNqaJitterStatsSum2NegativesSD, h3cNqaMIBVersion=h3cNqaMIBVersion, h3cNqaReactCheckedNum=h3cNqaReactCheckedNum, h3cNqaStatResProbeResponses=h3cNqaStatResProbeResponses, h3cNqaJitterRTTOverThreshold=h3cNqaJitterRTTOverThreshold, PYSNMP_MODULE_ID=h3cNqa, h3cNqaStatResSumDelaySD=h3cNqaStatResSumDelaySD, h3cNqaStatisticsCtlTable=h3cNqaStatisticsCtlTable, h3cNqaStatJitterMaxOfPosSD=h3cNqaStatJitterMaxOfPosSD, h3cNqaStatResInterval=h3cNqaStatResInterval, h3cNqaJitterStatsTable=h3cNqaJitterStatsTable, h3cNqaCtlFtpUsername=h3cNqaCtlFtpUsername, h3cNqaResultsLostPacketRatio=h3cNqaResultsLostPacketRatio, h3cNqaResultsRttBusies=h3cNqaResultsRttBusies, h3cNqaJitterStatsAveNegativesDS=h3cNqaJitterStatsAveNegativesDS, h3cNqaReactionEntry=h3cNqaReactionEntry, h3cNqaJitterStatsNumOfPositivesSD=h3cNqaJitterStatsNumOfPositivesSD, h3cNqaStatResRttBusies=h3cNqaStatResRttBusies, h3cNqaReactThresholdLowerLimit=h3cNqaReactThresholdLowerLimit, h3cNqaReactThresholdNum=h3cNqaReactThresholdNum, h3cNqaNotifications=h3cNqaNotifications, h3cNqaReactActionType=h3cNqaReactActionType, h3cNqaStatJitterMinOfPosDS=h3cNqaStatJitterMinOfPosDS, h3cNqaStatsMaxGroupNumber=h3cNqaStatsMaxGroupNumber, h3cNqadlsw=h3cNqadlsw, h3cNqaStatResIpTargetAddress=h3cNqaStatResIpTargetAddress, h3cNqadhcp=h3cNqadhcp, h3cNqaResultsRttNoConnections=h3cNqaResultsRttNoConnections, h3cNqaStatJitterMaxOfPosDS=h3cNqaStatJitterMaxOfPosDS, h3cNqaStatResRttSequenceErrors=h3cNqaStatResRttSequenceErrors, h3cNqaStatResLostPacketRatio=h3cNqaStatResLostPacketRatio, h3cNqaStatReactTestName=h3cNqaStatReactTestName, h3cNqaStatResIpTargetAddressType=h3cNqaStatResIpTargetAddressType, h3cNqaCtlICPIFAdvFactor=h3cNqaCtlICPIFAdvFactor, h3cNqaResultsRttSequenceErrors=h3cNqaResultsRttSequenceErrors, h3cNqaTcpServerIpAddress=h3cNqaTcpServerIpAddress, h3cNqaStatJitterMinOfNegDS=h3cNqaStatJitterMinOfNegDS, h3cNqaResultsRttStatsErrors=h3cNqaResultsRttStatsErrors, h3cNqaResultsSum2DelaySD=h3cNqaResultsSum2DelaySD, h3cNqaReactRowStatus=h3cNqaReactRowStatus, h3cNqaProbeFailure=h3cNqaProbeFailure, h3cNqaStatJitterPktLossUnknown=h3cNqaStatJitterPktLossUnknown, h3cNqaReactThresholdType=h3cNqaReactThresholdType, h3cNqaStatResStartTime=h3cNqaStatResStartTime)
