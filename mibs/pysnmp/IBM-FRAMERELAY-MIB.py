#
# PySNMP MIB module IBM-FRAMERELAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBM-FRAMERELAY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:39:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
frCircuitIfIndex, frCircuitDlci = mibBuilder.importSymbols("RFC1315-MIB", "frCircuitIfIndex", "frCircuitDlci")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, IpAddress, TimeTicks, Unsigned32, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, Counter64, enterprises, NotificationType, MibIdentifier, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "TimeTicks", "Unsigned32", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "Counter64", "enterprises", "NotificationType", "MibIdentifier", "Integer32", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ibmIROCfrcircuit = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5))
ibmframerelayPVCTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1), )
if mibBuilder.loadTexts: ibmframerelayPVCTable.setStatus('mandatory')
ibmframerelayPVCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"))
if mibBuilder.loadTexts: ibmframerelayPVCEntry.setStatus('mandatory')
ibmframerelayPVCCircName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmframerelayPVCCircName.setStatus('mandatory')
ibmframerelayPVCTimesActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmframerelayPVCTimesActive.setStatus('mandatory')
ibmframerelayPVCTimesInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmframerelayPVCTimesInactive.setStatus('mandatory')
ibmframerelayPVCTimesCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmframerelayPVCTimesCongested.setStatus('mandatory')
ibmframerelayPVCTxQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmframerelayPVCTxQueued.setStatus('mandatory')
ibmframerelayPVCTxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmframerelayPVCTxDropped.setStatus('mandatory')
ibmframerelayPVCClearAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 5, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ibmframerelayPVCClearAll.setStatus('mandatory')
mibBuilder.exportSymbols("IBM-FRAMERELAY-MIB", ibmframerelayPVCCircName=ibmframerelayPVCCircName, ibmframerelayPVCTimesActive=ibmframerelayPVCTimesActive, ibmframerelayPVCTable=ibmframerelayPVCTable, ibmframerelayPVCTxQueued=ibmframerelayPVCTxQueued, ibmframerelayPVCTxDropped=ibmframerelayPVCTxDropped, ibmframerelayPVCClearAll=ibmframerelayPVCClearAll, ibmframerelayPVCEntry=ibmframerelayPVCEntry, ibmIROCfrcircuit=ibmIROCfrcircuit, ibmframerelayPVCTimesInactive=ibmframerelayPVCTimesInactive, ibmframerelayPVCTimesCongested=ibmframerelayPVCTimesCongested)
