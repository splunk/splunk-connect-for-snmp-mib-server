#
# PySNMP MIB module NFSSTAT-SUNMANAGEMENTCENTER-MIB2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NFSSTAT-SUNMANAGEMENTCENTER-MIB2
# Produced by pysmi-0.3.4 at Mon Apr 29 20:11:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, MibIdentifier, Counter32, ObjectIdentity, Unsigned32, enterprises, Gauge32, TimeTicks, Bits, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Counter32", "ObjectIdentity", "Unsigned32", "enterprises", "Gauge32", "TimeTicks", "Bits", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nfsstat = ModuleIdentity((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28))
nfsstat.setRevisions(('1999-07-20 15:05',))
if mibBuilder.loadTexts: nfsstat.setLastUpdated('9907201505Z')
if mibBuilder.loadTexts: nfsstat.setOrganization('Sun Microsystems Inc.')
sun = MibIdentifier((1, 3, 6, 1, 4, 1, 42))
prod = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2))
sunsymon = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12))
agent = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12, 2))
modules = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2))
nfsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1))
nfssServerRPCStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 1)).setObjects(("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssTotServRPCCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssServBadRPCCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssServPcntBadRPCCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssServRPCCallRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nfssServerRPCStatGroup = nfssServerRPCStatGroup.setStatus('current')
nfssServerNFSStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 2)).setObjects(("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssServTotNFSCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssServBadNFSCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssServPcntBadNFSCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssServNFSCallRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nfssServerNFSStatGroup = nfssServerNFSStatGroup.setStatus('current')
nfssClientRPCStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 3)).setObjects(("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssCliTotRPCCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssCliBadRPCCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssCliPcntBadRPCCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssCliRPCCallRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nfssClientRPCStatGroup = nfssClientRPCStatGroup.setStatus('current')
nfssClientNFSStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 4)).setObjects(("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssCliTotNFSCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssCliBadNFSCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssCliPcntBadNFSCalls"), ("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", "nfssCliNFSCallRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nfssClientNFSStatGroup = nfssClientNFSStatGroup.setStatus('current')
nfssTotServRPCCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssTotServRPCCalls.setStatus('current')
nfssServBadRPCCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssServBadRPCCalls.setStatus('current')
nfssServPcntBadRPCCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 1, 3), DisplayString()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssServPcntBadRPCCalls.setStatus('current')
nfssServRPCCallRate = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 1, 4), DisplayString()).setUnits('/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssServRPCCallRate.setStatus('current')
nfssServTotNFSCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssServTotNFSCalls.setStatus('current')
nfssServBadNFSCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssServBadNFSCalls.setStatus('current')
nfssServPcntBadNFSCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 2, 3), DisplayString()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssServPcntBadNFSCalls.setStatus('current')
nfssServNFSCallRate = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 2, 4), DisplayString()).setUnits('/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssServNFSCallRate.setStatus('current')
nfssCliTotRPCCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssCliTotRPCCalls.setStatus('current')
nfssCliBadRPCCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssCliBadRPCCalls.setStatus('current')
nfssCliPcntBadRPCCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 3, 3), DisplayString()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssCliPcntBadRPCCalls.setStatus('current')
nfssCliRPCCallRate = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 3, 4), DisplayString()).setUnits('/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssCliRPCCallRate.setStatus('current')
nfssCliTotNFSCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssCliTotNFSCalls.setStatus('current')
nfssCliBadNFSCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssCliBadNFSCalls.setStatus('current')
nfssCliPcntBadNFSCalls = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 4, 3), DisplayString()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssCliPcntBadNFSCalls.setStatus('current')
nfssCliNFSCallRate = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 12, 2, 2, 28, 1, 4, 4), DisplayString()).setUnits('/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: nfssCliNFSCallRate.setStatus('current')
mibBuilder.exportSymbols("NFSSTAT-SUNMANAGEMENTCENTER-MIB2", nfssTotServRPCCalls=nfssTotServRPCCalls, nfssServPcntBadRPCCalls=nfssServPcntBadRPCCalls, nfsStats=nfsStats, nfssCliBadNFSCalls=nfssCliBadNFSCalls, nfssCliNFSCallRate=nfssCliNFSCallRate, nfssCliTotNFSCalls=nfssCliTotNFSCalls, nfssServNFSCallRate=nfssServNFSCallRate, nfssServerRPCStatGroup=nfssServerRPCStatGroup, agent=agent, nfssCliPcntBadNFSCalls=nfssCliPcntBadNFSCalls, nfssServPcntBadNFSCalls=nfssServPcntBadNFSCalls, nfssClientNFSStatGroup=nfssClientNFSStatGroup, nfssServRPCCallRate=nfssServRPCCallRate, nfssServBadRPCCalls=nfssServBadRPCCalls, sun=sun, nfssServTotNFSCalls=nfssServTotNFSCalls, modules=modules, nfssClientRPCStatGroup=nfssClientRPCStatGroup, nfssCliRPCCallRate=nfssCliRPCCallRate, nfsstat=nfsstat, nfssCliTotRPCCalls=nfssCliTotRPCCalls, nfssServerNFSStatGroup=nfssServerNFSStatGroup, nfssServBadNFSCalls=nfssServBadNFSCalls, PYSNMP_MODULE_ID=nfsstat, prod=prod, sunsymon=sunsymon, nfssCliPcntBadRPCCalls=nfssCliPcntBadRPCCalls, nfssCliBadRPCCalls=nfssCliBadRPCCalls)
