#
# PySNMP MIB module HH3C-LswMix-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-LswMix-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
hh3cLswFrameIndex, hh3cLswSlotIndex = mibBuilder.importSymbols("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex", "hh3cLswSlotIndex")
hh3clswCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3clswCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Gauge32, MibIdentifier, Counter32, Unsigned32, NotificationType, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, Integer32, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "MibIdentifier", "Counter32", "Unsigned32", "NotificationType", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "Integer32", "IpAddress", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cLswMix = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17))
hh3cLswMix.setRevisions(('2001-06-29 00:00',))
if mibBuilder.loadTexts: hh3cLswMix.setLastUpdated('200106290000Z')
if mibBuilder.loadTexts: hh3cLswMix.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cLswLastSwitchDate = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cLswLastSwitchDate.setStatus('current')
hh3cLswLastSwitchTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cLswLastSwitchTime.setStatus('current')
hh3cLswMpuSwitchsNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cLswMpuSwitchsNum.setStatus('current')
hh3cLswMpuSwitch = MibScalar((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("switch", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cLswMpuSwitch.setStatus('current')
hh3cLswXSlotTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 5), )
if mibBuilder.loadTexts: hh3cLswXSlotTable.setStatus('current')
hh3cLswXSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 5, 1), ).setIndexNames((0, "HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), (0, "HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cLswXSlotEntry.setStatus('current')
hh3cLswMainCardBoardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("standby", 2), ("process", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cLswMainCardBoardStatus.setStatus('current')
hh3cLswCrossBarStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("standby", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cLswCrossBarStatus.setStatus('current')
hh3csMixTrapMib = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 10))
hh3cSlaveSwitchOver = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 17, 10, 1))
if mibBuilder.loadTexts: hh3cSlaveSwitchOver.setStatus('current')
mibBuilder.exportSymbols("HH3C-LswMix-MIB", hh3cLswCrossBarStatus=hh3cLswCrossBarStatus, hh3cLswXSlotTable=hh3cLswXSlotTable, PYSNMP_MODULE_ID=hh3cLswMix, hh3csMixTrapMib=hh3csMixTrapMib, hh3cLswMpuSwitchsNum=hh3cLswMpuSwitchsNum, hh3cLswMainCardBoardStatus=hh3cLswMainCardBoardStatus, hh3cSlaveSwitchOver=hh3cSlaveSwitchOver, hh3cLswMpuSwitch=hh3cLswMpuSwitch, hh3cLswLastSwitchDate=hh3cLswLastSwitchDate, hh3cLswLastSwitchTime=hh3cLswLastSwitchTime, hh3cLswXSlotEntry=hh3cLswXSlotEntry, hh3cLswMix=hh3cLswMix)
