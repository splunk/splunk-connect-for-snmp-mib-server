#
# PySNMP MIB module H3C-DOT11-RRM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-DOT11-RRM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:08:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
H3cDot11RadioElementIndex, H3cDot11ChannelScopeType, H3cDot11SSIDStringType, H3cDot11ObjectIDType, H3cDot11RadioScopeType, h3cDot11, h3cDot11APElementIndex, H3cDot11RadioType = mibBuilder.importSymbols("H3C-DOT11-REF-MIB", "H3cDot11RadioElementIndex", "H3cDot11ChannelScopeType", "H3cDot11SSIDStringType", "H3cDot11ObjectIDType", "H3cDot11RadioScopeType", "h3cDot11", "h3cDot11APElementIndex", "H3cDot11RadioType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, Gauge32, MibIdentifier, Counter32, Counter64, ObjectIdentity, iso, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "Gauge32", "MibIdentifier", "Counter32", "Counter64", "ObjectIdentity", "iso", "TimeTicks", "Bits")
MacAddress, DisplayString, TruthValue, DateAndTime, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TruthValue", "DateAndTime", "TextualConvention", "RowStatus")
h3cDot11RRM = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8))
h3cDot11RRM.setRevisions(('2010-09-25 18:00', '2010-02-23 18:00', '2009-08-01 20:00', '2009-05-07 20:00', '2009-04-17 20:00', '2008-07-14 14:29',))
if mibBuilder.loadTexts: h3cDot11RRM.setLastUpdated('201009251800Z')
if mibBuilder.loadTexts: h3cDot11RRM.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cDot11RRMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1))
h3cDot11RRMGlobalCfgPara = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1))
h3cDot11RRM11nMadtMaxMcs = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 76), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRM11nMadtMaxMcs.setStatus('current')
h3cDot11RRM11nSuptMaxMcs = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 76)).clone(76)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRM11nSuptMaxMcs.setStatus('current')
h3cDot11RRM11gProtect = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRM11gProtect.setStatus('current')
h3cDot11RRM11aPwrConstrt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRM11aPwrConstrt.setStatus('current')
h3cDot11RRM11aSpectrumManag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRM11aSpectrumManag.setStatus('current')
h3cDot11RRMAutoChlAvoid11h = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMAutoChlAvoid11h.setStatus('current')
h3cDot11RRMScanChl = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("all", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMScanChl.setStatus('current')
h3cDot11RRMScanRptIntvel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120)).clone(10)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMScanRptIntvel.setStatus('current')
h3cDot11APInterfNumThreshhd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11APInterfNumThreshhd.setStatus('current')
h3cDot11StaInterfNumThreshhd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11StaInterfNumThreshhd.setStatus('current')
h3cDot11RRMRadioCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2), )
if mibBuilder.loadTexts: h3cDot11RRMRadioCfgTable.setStatus('current')
h3cDot11RRMRadioCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1), ).setIndexNames((0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMRadioType"))
if mibBuilder.loadTexts: h3cDot11RRMRadioCfgEntry.setStatus('current')
h3cDot11RRMRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 1), H3cDot11RadioType())
if mibBuilder.loadTexts: h3cDot11RRMRadioType.setStatus('current')
h3cDot11RRMCfgChlState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgChlState.setStatus('current')
h3cDot11RRMCfgChlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("selfDecisive", 1), ("userTriggered", 2))).clone('userTriggered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgChlMode.setStatus('current')
h3cDot11RRMChlProntoRadioElmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMChlProntoRadioElmt.setStatus('current')
h3cDot11RRMCfgPwrState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgPwrState.setStatus('current')
h3cDot11RRMCfgPwrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("selfDecisive", 1), ("userTriggered", 2))).clone('userTriggered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgPwrMode.setStatus('current')
h3cDot11RRMPwrProntoRadioElmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMPwrProntoRadioElmt.setStatus('current')
h3cDot11RRMCfgIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 8), Integer32().clone(8)).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgIntrvl.setStatus('current')
h3cDot11RRMCfgIntrfThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40, 100)).clone(50)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgIntrfThres.setStatus('current')
h3cDot11RRMCfgNoiseThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127)).clone(-70)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgNoiseThres.setStatus('current')
h3cDot11RRMCfgPERThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(20)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgPERThres.setStatus('current')
h3cDot11RRMCfgToleranceFctr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 45)).clone(20)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgToleranceFctr.setStatus('current')
h3cDot11RRMCfgAdjacencyFctr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCfgAdjacencyFctr.setStatus('current')
h3cDot11RRMAPCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 3), )
if mibBuilder.loadTexts: h3cDot11RRMAPCfgTable.setStatus('current')
h3cDot11RRMAPCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 3, 1), ).setIndexNames((0, "H3C-DOT11-REF-MIB", "h3cDot11APElementIndex"))
if mibBuilder.loadTexts: h3cDot11RRMAPCfgEntry.setStatus('current')
h3cDot11RRMAPWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMAPWorkMode.setStatus('current')
h3cDot11RRMSDRadioGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 4), )
if mibBuilder.loadTexts: h3cDot11RRMSDRadioGroupTable.setStatus('current')
h3cDot11RRMSDRadioGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 4, 1), ).setIndexNames((0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMSDRadioGroupId"))
if mibBuilder.loadTexts: h3cDot11RRMSDRadioGroupEntry.setStatus('current')
h3cDot11RRMSDRadioGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: h3cDot11RRMSDRadioGroupId.setStatus('current')
h3cDot11RRMSDRadioGroupDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 4, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RRMSDRadioGroupDesc.setStatus('current')
h3cDot11RRMSDRdGrpChlHolddownTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 4, 1, 3), Unsigned32()).setUnits('minute').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RRMSDRdGrpChlHolddownTm.setStatus('current')
h3cDot11RRMSDRdGrpPwrHolddownTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 4, 1, 4), Unsigned32()).setUnits('minute').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RRMSDRdGrpPwrHolddownTm.setStatus('current')
h3cDot11RRMSDRdGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11RRMSDRdGroupRowStatus.setStatus('current')
h3cDot11RRMAPCfg2Table = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 5), )
if mibBuilder.loadTexts: h3cDot11RRMAPCfg2Table.setStatus('current')
h3cDot11RRMAPCfg2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 5, 1), ).setIndexNames((0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMAPSerialID"))
if mibBuilder.loadTexts: h3cDot11RRMAPCfg2Entry.setStatus('current')
h3cDot11RRMAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 5, 1, 1), H3cDot11ObjectIDType())
if mibBuilder.loadTexts: h3cDot11RRMAPSerialID.setStatus('current')
h3cDot11RRMAPIntfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMAPIntfThreshold.setStatus('current')
h3cDot11RRMStaIntfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMStaIntfThreshold.setStatus('current')
h3cDot11RRMCoChlIntfTrapThhd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 5, 1, 4), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMCoChlIntfTrapThhd.setStatus('current')
h3cDot11RRMAdjChlIntfTrapThhd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 1, 5, 1, 5), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMAdjChlIntfTrapThhd.setStatus('current')
h3cDot11RRMDetectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2))
h3cDot11RRMChlRptTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1), )
if mibBuilder.loadTexts: h3cDot11RRMChlRptTable.setStatus('current')
h3cDot11RRMChlRptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1), ).setIndexNames((0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMRadioIndex"), (0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMChlRptChlNum"))
if mibBuilder.loadTexts: h3cDot11RRMChlRptEntry.setStatus('current')
h3cDot11RRMRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 1), H3cDot11RadioElementIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11RRMRadioIndex.setStatus('current')
h3cDot11RRMChlRptChlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11RRMChlRptChlNum.setStatus('current')
h3cDot11RRMChlRptChlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primeChannel", 1), ("offChannel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptChlType.setStatus('current')
h3cDot11RRMChlRptChlQlty = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("good", 1), ("bad", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptChlQlty.setStatus('current')
h3cDot11RRMChlRptNbrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptNbrCnt.setStatus('current')
h3cDot11RRMChlRptLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptLoad.setStatus('current')
h3cDot11RRMChlRptUtlz = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptUtlz.setStatus('current')
h3cDot11RRMChlRptIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptIntrf.setStatus('current')
h3cDot11RRMChlRptPER = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptPER.setStatus('current')
h3cDot11RRMChlRptRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptRetryRate.setStatus('current')
h3cDot11RRMChlRptNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMChlRptNoise.setStatus('current')
h3cDot11RRMChlRptRadarIndtcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("detected", 1), ("notDetected", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RRMChlRptRadarIndtcr.setStatus('current')
h3cDot11RRMNbrInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 2), )
if mibBuilder.loadTexts: h3cDot11RRMNbrInfoTable.setStatus('current')
h3cDot11RRMNbrInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 2, 1), ).setIndexNames((0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMRadioIndex"), (0, "H3C-DOT11-RRM-MIB", "h3cDot11RrmNbrBSSID"))
if mibBuilder.loadTexts: h3cDot11RRMNbrInfoEntry.setStatus('current')
h3cDot11RrmNbrBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11RrmNbrBSSID.setStatus('current')
h3cDot11RrmNbrChl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 2, 1, 2), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RrmNbrChl.setStatus('current')
h3cDot11RRMNbrIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMNbrIntrf.setStatus('current')
h3cDot11RrmNbrRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 2, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RrmNbrRSSI.setStatus('current')
h3cDot11RrmNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("managed", 1), ("unmanaged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RrmNbrType.setStatus('current')
h3cDot11RrmNbrSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 2, 1, 6), H3cDot11SSIDStringType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RrmNbrSSID.setStatus('current')
h3cDot11RRMHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3), )
if mibBuilder.loadTexts: h3cDot11RRMHistoryTable.setStatus('current')
h3cDot11RRMHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1), ).setIndexNames((0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMRadioIndex"), (0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMHistoryId"), (0, "H3C-DOT11-RRM-MIB", "h3cDot11RRMHistoryRecIndctr"))
if mibBuilder.loadTexts: h3cDot11RRMHistoryEntry.setStatus('current')
h3cDot11RRMHistoryId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11RRMHistoryId.setStatus('current')
h3cDot11RRMHistoryRecIndctr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("before", 1), ("after", 2))))
if mibBuilder.loadTexts: h3cDot11RRMHistoryRecIndctr.setStatus('current')
h3cDot11RRMHistoryChl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 3), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryChl.setStatus('current')
h3cDot11RRMHistoryPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryPwr.setStatus('current')
h3cDot11RRMHistoryLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryLoad.setStatus('current')
h3cDot11RRMHistoryUtlz = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryUtlz.setStatus('current')
h3cDot11RRMHistoryIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryIntrf.setStatus('current')
h3cDot11RRMHistoryNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryNoise.setStatus('current')
h3cDot11RRMHistoryPER = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryPER.setStatus('current')
h3cDot11RRMHistoryRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryRetryRate.setStatus('current')
h3cDot11RRMHistoryChgReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 11), Bits().clone(namedValues=NamedValues(("others", 0), ("coverage", 1), ("radar", 2), ("retransmission", 3), ("packetsDiscarded", 4), ("interference", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryChgReason.setStatus('current')
h3cDot11RRMHistoryChgDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 2, 3, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RRMHistoryChgDateTime.setStatus('current')
h3cDot11RRMNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3))
h3cDot11RRMChlQltyNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 1))
h3cDot11RRMChlQltyNtfPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 1, 0))
h3cDot11RRMIntrfLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 1, 0, 1)).setObjects(("H3C-DOT11-RRM-MIB", "h3cDot11RRMChlRptIntrf"))
if mibBuilder.loadTexts: h3cDot11RRMIntrfLimit.setStatus('current')
h3cDot11RRMPERLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 1, 0, 2)).setObjects(("H3C-DOT11-RRM-MIB", "h3cDot11RRMChlRptPER"))
if mibBuilder.loadTexts: h3cDot11RRMPERLimit.setStatus('current')
h3cDot11RRMNoiseLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 1, 0, 3)).setObjects(("H3C-DOT11-RRM-MIB", "h3cDot11RRMChlRptNoise"))
if mibBuilder.loadTexts: h3cDot11RRMNoiseLimit.setStatus('current')
h3cDot11RRMResChgNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 2))
h3cDot11RRMResChgNtfPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 2, 0))
h3cDot11RRMPowerChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 2, 0, 1)).setObjects(("H3C-DOT11-RRM-MIB", "h3cDot11RRMRadioIndex"), ("H3C-DOT11-RRM-MIB", "h3cDot11NewPower"), ("H3C-DOT11-RRM-MIB", "h3cDot11OldPower"))
if mibBuilder.loadTexts: h3cDot11RRMPowerChange.setStatus('current')
h3cDot11RRMNotificationsVar = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 3))
h3cDot11NewPower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11NewPower.setStatus('current')
h3cDot11OldPower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 3, 3, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11OldPower.setStatus('current')
h3cDot11MonitorDetectedGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4))
h3cDot11MonitorDetectedDevTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1), )
if mibBuilder.loadTexts: h3cDot11MonitorDetectedDevTable.setStatus('current')
h3cDot11MonitorDetectedDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1), ).setIndexNames((0, "H3C-DOT11-RRM-MIB", "h3cDot11MonitorDevMAC"), (0, "H3C-DOT11-REF-MIB", "h3cDot11APElementIndex"))
if mibBuilder.loadTexts: h3cDot11MonitorDetectedDevEntry.setStatus('current')
h3cDot11MonitorDevMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11MonitorDevMAC.setStatus('current')
h3cDot11MonitorDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("client", 1), ("ap", 2), ("adhoc", 3), ("wirelessBridge", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevType.setStatus('current')
h3cDot11MonitorDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevVendor.setStatus('current')
h3cDot11MonitorDevSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevSSID.setStatus('current')
h3cDot11MonitorDevBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevBSSID.setStatus('current')
h3cDot11MonitorDevChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 6), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevChannel.setStatus('current')
h3cDot11MonitorRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 7), H3cDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorRadioId.setStatus('current')
h3cDot11MonitorDevMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 8), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevMaxRSSI.setStatus('current')
h3cDot11MonitorDevBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 9), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevBeaconIntvl.setStatus('current')
h3cDot11MonitorDevFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevFstDctTime.setStatus('current')
h3cDot11MonitorDevLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevLstDctTime.setStatus('current')
h3cDot11MonitorDevClear = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11MonitorDevClear.setStatus('current')
h3cDot11MonitorDevSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 75, 8, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11MonitorDevSNR.setStatus('current')
mibBuilder.exportSymbols("H3C-DOT11-RRM-MIB", h3cDot11MonitorDevSNR=h3cDot11MonitorDevSNR, h3cDot11RRMAPCfg2Table=h3cDot11RRMAPCfg2Table, h3cDot11RRMPwrProntoRadioElmt=h3cDot11RRMPwrProntoRadioElmt, h3cDot11RRMHistoryLoad=h3cDot11RRMHistoryLoad, h3cDot11RRMCfgToleranceFctr=h3cDot11RRMCfgToleranceFctr, h3cDot11RRMChlRptNoise=h3cDot11RRMChlRptNoise, h3cDot11RRMSDRadioGroupId=h3cDot11RRMSDRadioGroupId, h3cDot11RRMNbrIntrf=h3cDot11RRMNbrIntrf, h3cDot11MonitorDevClear=h3cDot11MonitorDevClear, h3cDot11RRMAPSerialID=h3cDot11RRMAPSerialID, h3cDot11RRMHistoryId=h3cDot11RRMHistoryId, h3cDot11RRMAPWorkMode=h3cDot11RRMAPWorkMode, h3cDot11RRMHistoryPER=h3cDot11RRMHistoryPER, h3cDot11RRMChlRptNbrCnt=h3cDot11RRMChlRptNbrCnt, h3cDot11MonitorDevLstDctTime=h3cDot11MonitorDevLstDctTime, h3cDot11RRMResChgNotifications=h3cDot11RRMResChgNotifications, h3cDot11RRMRadioCfgTable=h3cDot11RRMRadioCfgTable, h3cDot11MonitorDetectedDevTable=h3cDot11MonitorDetectedDevTable, h3cDot11MonitorDevVendor=h3cDot11MonitorDevVendor, h3cDot11RRMCfgPERThres=h3cDot11RRMCfgPERThres, h3cDot11RRM11nMadtMaxMcs=h3cDot11RRM11nMadtMaxMcs, h3cDot11RRMHistoryIntrf=h3cDot11RRMHistoryIntrf, h3cDot11RrmNbrSSID=h3cDot11RrmNbrSSID, h3cDot11RRMAdjChlIntfTrapThhd=h3cDot11RRMAdjChlIntfTrapThhd, h3cDot11RRM11aPwrConstrt=h3cDot11RRM11aPwrConstrt, h3cDot11OldPower=h3cDot11OldPower, h3cDot11RRMNbrInfoTable=h3cDot11RRMNbrInfoTable, h3cDot11RRMAutoChlAvoid11h=h3cDot11RRMAutoChlAvoid11h, h3cDot11RRMPERLimit=h3cDot11RRMPERLimit, h3cDot11RRMChlRptLoad=h3cDot11RRMChlRptLoad, h3cDot11RRMChlQltyNtfPrefix=h3cDot11RRMChlQltyNtfPrefix, h3cDot11MonitorDevMaxRSSI=h3cDot11MonitorDevMaxRSSI, h3cDot11MonitorDevBeaconIntvl=h3cDot11MonitorDevBeaconIntvl, h3cDot11RRM11nSuptMaxMcs=h3cDot11RRM11nSuptMaxMcs, h3cDot11RRMCoChlIntfTrapThhd=h3cDot11RRMCoChlIntfTrapThhd, h3cDot11MonitorDetectedGroup=h3cDot11MonitorDetectedGroup, PYSNMP_MODULE_ID=h3cDot11RRM, h3cDot11RRMCfgChlState=h3cDot11RRMCfgChlState, h3cDot11RRMChlRptEntry=h3cDot11RRMChlRptEntry, h3cDot11RRMChlRptChlNum=h3cDot11RRMChlRptChlNum, h3cDot11RRMPowerChange=h3cDot11RRMPowerChange, h3cDot11RRMDetectGroup=h3cDot11RRMDetectGroup, h3cDot11RRMNbrInfoEntry=h3cDot11RRMNbrInfoEntry, h3cDot11RRMSDRdGroupRowStatus=h3cDot11RRMSDRdGroupRowStatus, h3cDot11RRMChlProntoRadioElmt=h3cDot11RRMChlProntoRadioElmt, h3cDot11RRMAPCfgEntry=h3cDot11RRMAPCfgEntry, h3cDot11RRMConfigGroup=h3cDot11RRMConfigGroup, h3cDot11RRM=h3cDot11RRM, h3cDot11RRMScanChl=h3cDot11RRMScanChl, h3cDot11RRMChlRptChlQlty=h3cDot11RRMChlRptChlQlty, h3cDot11RrmNbrChl=h3cDot11RrmNbrChl, h3cDot11RRMNotificationsVar=h3cDot11RRMNotificationsVar, h3cDot11RRM11gProtect=h3cDot11RRM11gProtect, h3cDot11RRMChlQltyNotifications=h3cDot11RRMChlQltyNotifications, h3cDot11RRMAPIntfThreshold=h3cDot11RRMAPIntfThreshold, h3cDot11RRMAPCfgTable=h3cDot11RRMAPCfgTable, h3cDot11RRMHistoryChgReason=h3cDot11RRMHistoryChgReason, h3cDot11MonitorDevChannel=h3cDot11MonitorDevChannel, h3cDot11RRMGlobalCfgPara=h3cDot11RRMGlobalCfgPara, h3cDot11RRMResChgNtfPrefix=h3cDot11RRMResChgNtfPrefix, h3cDot11MonitorDevFstDctTime=h3cDot11MonitorDevFstDctTime, h3cDot11MonitorDevMAC=h3cDot11MonitorDevMAC, h3cDot11RrmNbrRSSI=h3cDot11RrmNbrRSSI, h3cDot11RRMChlRptUtlz=h3cDot11RRMChlRptUtlz, h3cDot11RRMCfgPwrState=h3cDot11RRMCfgPwrState, h3cDot11RRMCfgIntrfThres=h3cDot11RRMCfgIntrfThres, h3cDot11StaInterfNumThreshhd=h3cDot11StaInterfNumThreshhd, h3cDot11RRMRadioIndex=h3cDot11RRMRadioIndex, h3cDot11RRMCfgNoiseThres=h3cDot11RRMCfgNoiseThres, h3cDot11RRMHistoryEntry=h3cDot11RRMHistoryEntry, h3cDot11RRMHistoryPwr=h3cDot11RRMHistoryPwr, h3cDot11RRMChlRptRadarIndtcr=h3cDot11RRMChlRptRadarIndtcr, h3cDot11RrmNbrType=h3cDot11RrmNbrType, h3cDot11RRMAPCfg2Entry=h3cDot11RRMAPCfg2Entry, h3cDot11RRMHistoryRecIndctr=h3cDot11RRMHistoryRecIndctr, h3cDot11RRMSDRdGrpChlHolddownTm=h3cDot11RRMSDRdGrpChlHolddownTm, h3cDot11RRMChlRptIntrf=h3cDot11RRMChlRptIntrf, h3cDot11RRMHistoryNoise=h3cDot11RRMHistoryNoise, h3cDot11RRMStaIntfThreshold=h3cDot11RRMStaIntfThreshold, h3cDot11RRMHistoryChgDateTime=h3cDot11RRMHistoryChgDateTime, h3cDot11RRMNoiseLimit=h3cDot11RRMNoiseLimit, h3cDot11RRMChlRptChlType=h3cDot11RRMChlRptChlType, h3cDot11RRMScanRptIntvel=h3cDot11RRMScanRptIntvel, h3cDot11MonitorDevSSID=h3cDot11MonitorDevSSID, h3cDot11RRM11aSpectrumManag=h3cDot11RRM11aSpectrumManag, h3cDot11MonitorRadioId=h3cDot11MonitorRadioId, h3cDot11RRMRadioType=h3cDot11RRMRadioType, h3cDot11RRMRadioCfgEntry=h3cDot11RRMRadioCfgEntry, h3cDot11RRMCfgChlMode=h3cDot11RRMCfgChlMode, h3cDot11MonitorDetectedDevEntry=h3cDot11MonitorDetectedDevEntry, h3cDot11RRMHistoryTable=h3cDot11RRMHistoryTable, h3cDot11RRMSDRadioGroupEntry=h3cDot11RRMSDRadioGroupEntry, h3cDot11RRMChlRptTable=h3cDot11RRMChlRptTable, h3cDot11RRMNotifyGroup=h3cDot11RRMNotifyGroup, h3cDot11RRMHistoryChl=h3cDot11RRMHistoryChl, h3cDot11RRMHistoryRetryRate=h3cDot11RRMHistoryRetryRate, h3cDot11RrmNbrBSSID=h3cDot11RrmNbrBSSID, h3cDot11RRMHistoryUtlz=h3cDot11RRMHistoryUtlz, h3cDot11RRMIntrfLimit=h3cDot11RRMIntrfLimit, h3cDot11RRMChlRptRetryRate=h3cDot11RRMChlRptRetryRate, h3cDot11RRMSDRadioGroupDesc=h3cDot11RRMSDRadioGroupDesc, h3cDot11MonitorDevType=h3cDot11MonitorDevType, h3cDot11NewPower=h3cDot11NewPower, h3cDot11RRMCfgIntrvl=h3cDot11RRMCfgIntrvl, h3cDot11RRMCfgAdjacencyFctr=h3cDot11RRMCfgAdjacencyFctr, h3cDot11RRMSDRadioGroupTable=h3cDot11RRMSDRadioGroupTable, h3cDot11RRMChlRptPER=h3cDot11RRMChlRptPER, h3cDot11APInterfNumThreshhd=h3cDot11APInterfNumThreshhd, h3cDot11MonitorDevBSSID=h3cDot11MonitorDevBSSID, h3cDot11RRMSDRdGrpPwrHolddownTm=h3cDot11RRMSDRdGrpPwrHolddownTm, h3cDot11RRMCfgPwrMode=h3cDot11RRMCfgPwrMode)
