#
# PySNMP MIB module G3-AVAYA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/G3-AVAYA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:04:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, Counter64, ObjectIdentity, ModuleIdentity, IpAddress, iso, Unsigned32, internet, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "Counter64", "ObjectIdentity", "ModuleIdentity", "IpAddress", "iso", "Unsigned32", "internet", "Gauge32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
mgmt = MibIdentifier((1, 3, 6, 1, 2))
directory = MibIdentifier((1, 3, 6, 1, 1))
experimental = MibIdentifier((1, 3, 6, 1, 3))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
avaya = MibIdentifier((1, 3, 6, 1, 4, 1, 6889))
mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2))
definity = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8))
g3_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1)).setLabel("g3-mib")
g3proxmib = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1))
def_products = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8)).setLabel("def-products")
g3_products = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1)).setLabel("g3-products")
definity_proxy = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 40)).setLabel("definity-proxy")
definity_g3 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 41)).setLabel("definity-g3")
definity_ecs = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 42)).setLabel("definity-ecs")
definity_mcu = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 43)).setLabel("definity-mcu")
val_board = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 45)).setLabel("val-board")
clan_board = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 46)).setLabel("clan-board")
definity_one = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 47)).setLabel("definity-one")
definity_ip600 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 48)).setLabel("definity-ip600")
avaya_s8700m = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 49)).setLabel("avaya-s8700m")
avaya_s8300 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 50)).setLabel("avaya-s8300")
avaya_s8700i = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 51)).setLabel("avaya-s8700i")
avaya_s8500 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 52)).setLabel("avaya-s8500")
crossfire_board = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 53)).setLabel("crossfire-board")
blade_server = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 55)).setLabel("blade-server")
avaya_s8400 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 1, 8, 1, 56)).setLabel("avaya-s8400")
g3client = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1))
g3agent = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2))
g3trap = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3))
g3filter = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4))
g3connect = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1))
g3vintage = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2))
g3config = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3))
g3alarms = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4))
g3errors = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5))
g3health = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6))
g3cabinet = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7))
g3cabtype = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 8))
g3cartype = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9))
g3port = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 10))
g3station = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11))
g3statsta = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12))
g3trunkmem = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13))
g3trunksta = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14))
g3datamod = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 15))
g3datamsta = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16))
g3timedate = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18))
g3busytrk = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19))
g3busybrd = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20))
g3servalm = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21))
g3msgalm = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22))
g3ipevt = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 23))
g3platcmds = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24))
g3ds1cfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30))
g3extdev = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31))
g3trunkgrp = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32))
g3bulletin = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33))
g3ds1 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34))
g3atmpnc = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35))
g3pnchealth = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36))
g3siggroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37))
g3restart = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38))
g3fiberlink = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39))
g3routepattern = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40))
g3trunkcfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41))
g3stationcfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42))
g3atmcfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43))
g3aca = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44))
g3atmtrunk = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45))
g3atmportpg1 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46))
g3atmportpg2 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47))
g3atmportpg3 = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48))
g3dmodule = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49))
g3occsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50))
g3attdgrp = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51))
g3attdpos = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52))
g3trunksum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53))
g3pktrunksum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54))
g3trunkwbsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55))
g3pktrunkwbsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56))
g3pktrunkout = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57))
g3pktrunklight = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58))
g3pnblock = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59))
g3pkpnblock = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60))
g3snblock = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61))
g3pksnblock = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62))
g3hunt = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63))
g3pkhunt = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64))
g3huntlist = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65))
g3tonerec = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66))
g3pktonerec = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67))
g3tonerecsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68))
g3pktonerecsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69))
g3rpatcfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70))
g3rpat = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71))
g3pkrpat = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72))
g3secviolate = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73))
g3cbctrunk = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74))
g3deftime = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75))
g3trunkout = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76))
g3trunklight = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77))
g3loadtotal = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78))
g3loadint = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79))
g3loadinc = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80))
g3loadout = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81))
g3loadtan = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82))
g3pkloadtotal = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83))
g3pkloadint = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84))
g3pkloadinc = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85))
g3pkloadout = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86))
g3pkloadtan = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87))
g3atmlatency = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88))
g3pkatmlatency = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89))
g3ipcodecsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90))
g3pkipcodecsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91))
g3ipregion = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92))
g3ipdspsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93))
g3pkipdspsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94))
g3ipsignal = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95))
g3pkipsignal = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96))
g3annall = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97))
g3pkannall = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98))
g3anninteg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99))
g3pkanninteg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100))
g3nodename = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101))
g3trkgrpmem = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102))
g3ipinterface = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103))
g3gateway = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104))
g3mediacfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105))
g3stamedia = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106))
g3stamgann = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107))
g3ipserver = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108))
g3regipstat = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109))
g3callratedata = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110))
g3callratevoice = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111))
g3callratesrv = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112))
g3callratemedia = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113))
g3callratetotal = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114))
g3clansocsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115))
g3pkclansocsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116))
g3clanether = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117))
g3clanppp = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118))
g3mmisum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119))
g3pkmmisum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120))
g3esmsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121))
g3pkesmsum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122))
g3voicesum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123))
g3pkvoicesum = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124))
g3ipintlist = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125))
g3stamedlist = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126))
g3lsplist = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127))
g3eventhour = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128))
g3eventday = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129))
g3statregion = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130))
g3ipnetregion = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131))
g3statmedpro = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132))
g3ipunreg = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133))
g3commlink = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134))
g3statlink = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135))
g3covpath = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136))
g3pkcovpath = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137))
g3principal = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138))
g3pkprincipal = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139))
g3esmain = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140))
g3esservers = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141))
g3esparms = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142))
g3mgrecrule = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143))
g3busyrls = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 250))
g3connectState = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("down", 3), ("init", 4), ("up", 5), ("idle", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3connectState.setStatus('mandatory')
g3connectTimeUp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectTimeUp.setStatus('mandatory')
g3connectTimeUnused = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectTimeUnused.setStatus('mandatory')
g3connectAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectAttempts.setStatus('mandatory')
g3connectSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectSuccess.setStatus('mandatory')
g3connectRequests = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectRequests.setStatus('mandatory')
g3connectResponses = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectResponses.setStatus('mandatory')
g3connectErrors = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectErrors.setStatus('mandatory')
g3connectQueued = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectQueued.setStatus('mandatory')
g3connectDelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectDelay.setStatus('mandatory')
g3connectAlarmForward = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("failed", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3connectAlarmForward.setStatus('mandatory')
g3connectTimeReset = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3connectTimeReset.setStatus('mandatory')
g3connectType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectType.setStatus('mandatory')
g3connectTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3connectTimeout.setStatus('mandatory')
g3vintageTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageTage.setStatus('mandatory')
g3vintageTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3vintageTintvl.setStatus('mandatory')
g3vintageTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageTdelay.setStatus('mandatory')
g3vintageTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3vintageTretrieve.setStatus('mandatory')
g3vintageSpeArelease = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageSpeArelease.setStatus('mandatory')
g3vintageSpeBrelease = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageSpeBrelease.setStatus('mandatory')
g3vintageCurMemory = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageCurMemory.setStatus('mandatory')
g3vintageSpeAupID = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageSpeAupID.setStatus('mandatory')
g3vintageSpeBupID = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageSpeBupID.setStatus('mandatory')
g3vintageSpeAupState1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageSpeAupState1.setStatus('mandatory')
g3vintageSpeBupState1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageSpeBupState1.setStatus('mandatory')
g3vintageSpeAupState2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageSpeAupState2.setStatus('mandatory')
g3vintageSpeBupState2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageSpeBupState2.setStatus('mandatory')
g3vintageVSPacketBus = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageVSPacketBus.setStatus('mandatory')
g3vintageOfferCategory = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageOfferCategory.setStatus('mandatory')
g3vintageATMPnc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageATMPnc.setStatus('mandatory')
g3vintageProductID = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageProductID.setStatus('mandatory')
g3vintageOSSNumber1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageOSSNumber1.setStatus('mandatory')
g3vintageAbbAlmRep1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageAbbAlmRep1.setStatus('mandatory')
g3vintageOSSNumber2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageOSSNumber2.setStatus('mandatory')
g3vintageAbbAlmRep2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageAbbAlmRep2.setStatus('mandatory')
g3vintageAOActivate = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageAOActivate.setStatus('mandatory')
g3vintageCANotify = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageCANotify.setStatus('mandatory')
g3vintageResNotify = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageResNotify.setStatus('mandatory')
g3vintagePbxID = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintagePbxID.setStatus('mandatory')
g3vintageACAFlag = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageACAFlag.setStatus('mandatory')
g3vintageIPAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPAddress1.setStatus('mandatory')
g3vintageIPAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPAddress2.setStatus('mandatory')
g3vintageIPAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPAddress3.setStatus('mandatory')
g3vintageIPAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPAddress4.setStatus('mandatory')
g3vintagePortNetSupport = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintagePortNetSupport.setStatus('mandatory')
g3vintageLocalSpareProc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageLocalSpareProc.setStatus('mandatory')
g3vintagePlatform = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintagePlatform.setStatus('mandatory')
g3vintageLocalNodeNbr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageLocalNodeNbr.setStatus('mandatory')
g3vintageIPStaReg = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPStaReg.setStatus('mandatory')
g3vintageIPStaAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPStaAvail.setStatus('mandatory')
g3vintageIPStaLimit = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPStaLimit.setStatus('mandatory')
g3vintageIPAttdReg = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPAttdReg.setStatus('mandatory')
g3vintageIPAttdAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPAttdAvail.setStatus('mandatory')
g3vintageIPAttdLimit = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageIPAttdLimit.setStatus('mandatory')
g3vintageRemoteOffReg = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageRemoteOffReg.setStatus('mandatory')
g3vintageRemoteOffAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageRemoteOffAvail.setStatus('mandatory')
g3vintageRemoteOffLimit = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 2, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3vintageRemoteOffLimit.setStatus('mandatory')
g3configTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configTage.setStatus('mandatory')
g3configTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3configTintvl.setStatus('mandatory')
g3configTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configTdelay.setStatus('mandatory')
g3configTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3configTretrieve.setStatus('mandatory')
g3configTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configTcount.setStatus('mandatory')
g3configTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6), )
if mibBuilder.loadTexts: g3configTable.setStatus('mandatory')
g3configEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3configBoardNum"), (0, "G3-AVAYA-MIB", "g3configIndex"))
if mibBuilder.loadTexts: g3configEntry.setStatus('mandatory')
g3configBoardNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configBoardNum.setStatus('mandatory')
g3configIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configIndex.setStatus('mandatory')
g3configBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configBoardType.setStatus('mandatory')
g3configCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configCode.setStatus('mandatory')
g3configSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configSuffix.setStatus('mandatory')
g3configVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configVintage.setStatus('mandatory')
g3configPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort1.setStatus('mandatory')
g3configPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort2.setStatus('mandatory')
g3configPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort3.setStatus('mandatory')
g3configPort4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort4.setStatus('mandatory')
g3configPort5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort5.setStatus('mandatory')
g3configPort6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort6.setStatus('mandatory')
g3configPort7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort7.setStatus('mandatory')
g3configPort8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort8.setStatus('mandatory')
g3configPort9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort9.setStatus('mandatory')
g3configPort10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort10.setStatus('mandatory')
g3configPort11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort11.setStatus('mandatory')
g3configPort12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort12.setStatus('mandatory')
g3configPort13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort13.setStatus('mandatory')
g3configPort14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort14.setStatus('mandatory')
g3configPort15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort15.setStatus('mandatory')
g3configPort16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort16.setStatus('mandatory')
g3configPort17 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort17.setStatus('mandatory')
g3configPort18 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort18.setStatus('mandatory')
g3configPort19 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort19.setStatus('mandatory')
g3configPort20 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort20.setStatus('mandatory')
g3configPort21 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort21.setStatus('mandatory')
g3configPort22 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort22.setStatus('mandatory')
g3configPort23 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort23.setStatus('mandatory')
g3configPort24 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort24.setStatus('mandatory')
g3configPort25 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort25.setStatus('mandatory')
g3configPort26 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort26.setStatus('mandatory')
g3configPort27 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort27.setStatus('mandatory')
g3configPort28 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort28.setStatus('mandatory')
g3configPort29 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort29.setStatus('mandatory')
g3configPort30 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort30.setStatus('mandatory')
g3configPort31 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort31.setStatus('mandatory')
g3configPort32 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 3, 6, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3configPort32.setStatus('mandatory')
g3alarmsTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsTage.setStatus('mandatory')
g3alarmsTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3alarmsTintvl.setStatus('mandatory')
g3alarmsTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsTdelay.setStatus('mandatory')
g3alarmsTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3alarmsTretrieve.setStatus('mandatory')
g3alarmsTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsTcount.setStatus('mandatory')
g3alarmsTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6), )
if mibBuilder.loadTexts: g3alarmsTable.setStatus('mandatory')
g3alarmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3alarmsPort"), (0, "G3-AVAYA-MIB", "g3alarmsIndex"))
if mibBuilder.loadTexts: g3alarmsEntry.setStatus('mandatory')
g3alarmsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsPort.setStatus('mandatory')
g3alarmsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsIndex.setStatus('mandatory')
g3alarmsMaintName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsMaintName.setStatus('mandatory')
g3alarmsOnBrd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsOnBrd.setStatus('mandatory')
g3alarmsAltName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsAltName.setStatus('mandatory')
g3alarmsAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsAlarmType.setStatus('mandatory')
g3alarmsSvcState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsSvcState.setStatus('mandatory')
g3alarmsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsAck.setStatus('mandatory')
g3alarmsMonthAlrmd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsMonthAlrmd.setStatus('mandatory')
g3alarmsDayAlrmd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsDayAlrmd.setStatus('mandatory')
g3alarmsHourAlrmd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsHourAlrmd.setStatus('mandatory')
g3alarmsMinAlrmd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsMinAlrmd.setStatus('mandatory')
g3alarmsMonthRslvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsMonthRslvd.setStatus('mandatory')
g3alarmsDayRslvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsDayRslvd.setStatus('mandatory')
g3alarmsHourRslvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsHourRslvd.setStatus('mandatory')
g3alarmsMinRslvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsMinRslvd.setStatus('mandatory')
g3alarmsAlarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsAlarmNumber.setStatus('mandatory')
g3alarmsProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsProductID.setStatus('mandatory')
g3alarmsAck2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 4, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3alarmsAck2.setStatus('mandatory')
g3errorsTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsTage.setStatus('mandatory')
g3errorsTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3errorsTintvl.setStatus('mandatory')
g3errorsTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsTdelay.setStatus('mandatory')
g3errorsTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3errorsTretrieve.setStatus('mandatory')
g3errorsTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsTcount.setStatus('mandatory')
g3errorsTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6), )
if mibBuilder.loadTexts: g3errorsTable.setStatus('mandatory')
g3errorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3errorsPort"), (0, "G3-AVAYA-MIB", "g3errorsIndex"))
if mibBuilder.loadTexts: g3errorsEntry.setStatus('mandatory')
g3errorsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsPort.setStatus('mandatory')
g3errorsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsIndex.setStatus('mandatory')
g3errorsMaintName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsMaintName.setStatus('mandatory')
g3errorsAltName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsAltName.setStatus('mandatory')
g3errorsErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsErrType.setStatus('mandatory')
g3errorsAuxData = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsAuxData.setStatus('mandatory')
g3errorsMonthFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsMonthFirst.setStatus('mandatory')
g3errorsDayFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsDayFirst.setStatus('mandatory')
g3errorsHourFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsHourFirst.setStatus('mandatory')
g3errorsMinFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsMinFirst.setStatus('mandatory')
g3errorsMonthLast = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsMonthLast.setStatus('mandatory')
g3errorsDayLast = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsDayLast.setStatus('mandatory')
g3errorsHourLast = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsHourLast.setStatus('mandatory')
g3errorsMinLast = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsMinLast.setStatus('mandatory')
g3errorsErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsErrCnt.setStatus('mandatory')
g3errorsErrRt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsErrRt.setStatus('mandatory')
g3errorsRtperHr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsRtperHr.setStatus('mandatory')
g3errorsAlSt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsAlSt.setStatus('mandatory')
g3errorsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 5, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3errorsAck.setStatus('mandatory')
g3healthTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthTage.setStatus('mandatory')
g3healthTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3healthTintvl.setStatus('mandatory')
g3healthTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthTdelay.setStatus('mandatory')
g3healthTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3healthTretrieve.setStatus('mandatory')
g3healthMajor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthMajor.setStatus('mandatory')
g3healthMinor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthMinor.setStatus('mandatory')
g3healthWarning = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthWarning.setStatus('mandatory')
g3healthTrkBusy = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthTrkBusy.setStatus('mandatory')
g3healthStnBusy = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthStnBusy.setStatus('mandatory')
g3healthOthBusy = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthOthBusy.setStatus('mandatory')
g3healthStaticOcc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthStaticOcc.setStatus('mandatory')
g3healthCallpOcc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCallpOcc.setStatus('mandatory')
g3healthSysMgmtOcc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthSysMgmtOcc.setStatus('mandatory')
g3healthIdleOcc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthIdleOcc.setStatus('mandatory')
g3healthActiveSPE = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthActiveSPE.setStatus('mandatory')
g3healthActivePNC = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthActivePNC.setStatus('mandatory')
g3healthDupSPE = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthDupSPE.setStatus('mandatory')
g3healthDupPNC = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthDupPNC.setStatus('mandatory')
g3healthPower = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPower.setStatus('mandatory')
g3healthTimeSource = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthTimeSource.setStatus('mandatory')
g3healthLogins = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthLogins.setStatus('mandatory')
g3healthCab1to151 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to151.setStatus('mandatory')
g3healthCab1to152 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to152.setStatus('mandatory')
g3healthCab1to153 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to153.setStatus('mandatory')
g3healthCab1to154 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to154.setStatus('mandatory')
g3healthCab1to155 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to155.setStatus('mandatory')
g3healthCab1to156 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to156.setStatus('mandatory')
g3healthCab1to157 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to157.setStatus('mandatory')
g3healthCab1to158 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to158.setStatus('mandatory')
g3healthCab1to159 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to159.setStatus('mandatory')
g3healthCab1to1510 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to1510.setStatus('mandatory')
g3healthCab1to1511 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to1511.setStatus('mandatory')
g3healthCab1to1512 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to1512.setStatus('mandatory')
g3healthCab1to1513 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to1513.setStatus('mandatory')
g3healthCab1to1514 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to1514.setStatus('mandatory')
g3healthCab1to1515 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab1to1515.setStatus('mandatory')
g3healthPncStat1to151 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to151.setStatus('mandatory')
g3healthPncStat1to152 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to152.setStatus('mandatory')
g3healthPncStat1to153 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to153.setStatus('mandatory')
g3healthPncStat1to154 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to154.setStatus('mandatory')
g3healthPncStat1to155 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to155.setStatus('mandatory')
g3healthPncStat1to156 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to156.setStatus('mandatory')
g3healthPncStat1to157 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to157.setStatus('mandatory')
g3healthPncStat1to158 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to158.setStatus('mandatory')
g3healthPncStat1to159 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to159.setStatus('mandatory')
g3healthPncStat1to1510 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to1510.setStatus('mandatory')
g3healthPncStat1to1511 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to1511.setStatus('mandatory')
g3healthPncStat1to1512 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to1512.setStatus('mandatory')
g3healthPncStat1to1513 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to1513.setStatus('mandatory')
g3healthPncStat1to1514 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to1514.setStatus('mandatory')
g3healthPncStat1to1515 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat1to1515.setStatus('mandatory')
g3healthCab16to3017 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3017.setStatus('mandatory')
g3healthCab16to3018 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3018.setStatus('mandatory')
g3healthCab16to3019 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3019.setStatus('mandatory')
g3healthCab16to3020 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3020.setStatus('mandatory')
g3healthCab16to3021 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3021.setStatus('mandatory')
g3healthCab16to3022 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3022.setStatus('mandatory')
g3healthCab16to3023 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3023.setStatus('mandatory')
g3healthCab16to3024 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3024.setStatus('mandatory')
g3healthCab16to3025 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3025.setStatus('mandatory')
g3healthCab16to3026 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3026.setStatus('mandatory')
g3healthCab16to3027 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3027.setStatus('mandatory')
g3healthCab16to3028 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3028.setStatus('mandatory')
g3healthCab16to3029 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3029.setStatus('mandatory')
g3healthCab16to3030 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3030.setStatus('mandatory')
g3healthCab16to3031 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab16to3031.setStatus('mandatory')
g3healthPncStat16to3017 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 67), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3017.setStatus('mandatory')
g3healthPncStat16to3018 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3018.setStatus('mandatory')
g3healthPncStat16to3019 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3019.setStatus('mandatory')
g3healthPncStat16to3020 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3020.setStatus('mandatory')
g3healthPncStat16to3021 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 71), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3021.setStatus('mandatory')
g3healthPncStat16to3022 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 72), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3022.setStatus('mandatory')
g3healthPncStat16to3023 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 73), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3023.setStatus('mandatory')
g3healthPncStat16to3024 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 74), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3024.setStatus('mandatory')
g3healthPncStat16to3025 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 75), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3025.setStatus('mandatory')
g3healthPncStat16to3026 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 76), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3026.setStatus('mandatory')
g3healthPncStat16to3027 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 77), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3027.setStatus('mandatory')
g3healthPncStat16to3028 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 78), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3028.setStatus('mandatory')
g3healthPncStat16to3029 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3029.setStatus('mandatory')
g3healthPncStat16to3030 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3030.setStatus('mandatory')
g3healthPncStat16to3031 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 81), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat16to3031.setStatus('mandatory')
g3healthCab31to4417 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4417.setStatus('mandatory')
g3healthCab31to4418 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4418.setStatus('mandatory')
g3healthCab31to4419 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4419.setStatus('mandatory')
g3healthCab31to4420 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4420.setStatus('mandatory')
g3healthCab31to4421 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4421.setStatus('mandatory')
g3healthCab31to4422 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4422.setStatus('mandatory')
g3healthCab31to4423 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4423.setStatus('mandatory')
g3healthCab31to4424 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4424.setStatus('mandatory')
g3healthCab31to4425 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4425.setStatus('mandatory')
g3healthCab31to4426 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4426.setStatus('mandatory')
g3healthCab31to4427 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4427.setStatus('mandatory')
g3healthCab31to4428 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4428.setStatus('mandatory')
g3healthCab31to4429 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4429.setStatus('mandatory')
g3healthCab31to4430 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthCab31to4430.setStatus('mandatory')
g3healthPncStat31to4417 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 96), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4417.setStatus('mandatory')
g3healthPncStat31to4418 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 97), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4418.setStatus('mandatory')
g3healthPncStat31to4419 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 98), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4419.setStatus('mandatory')
g3healthPncStat31to4420 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4420.setStatus('mandatory')
g3healthPncStat31to4421 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 100), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4421.setStatus('mandatory')
g3healthPncStat31to4422 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 101), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4422.setStatus('mandatory')
g3healthPncStat31to4423 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 102), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4423.setStatus('mandatory')
g3healthPncStat31to4424 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 103), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4424.setStatus('mandatory')
g3healthPncStat31to4425 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 104), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4425.setStatus('mandatory')
g3healthPncStat31to4426 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 105), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4426.setStatus('mandatory')
g3healthPncStat31to4427 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 106), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4427.setStatus('mandatory')
g3healthPncStat31to4428 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 107), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4428.setStatus('mandatory')
g3healthPncStat31to4429 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 108), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4429.setStatus('mandatory')
g3healthPncStat31to4430 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 6, 109), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3healthPncStat31to4430.setStatus('mandatory')
g3cabinetTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetTage.setStatus('mandatory')
g3cabinetTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3cabinetTintvl.setStatus('mandatory')
g3cabinetTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetTdelay.setStatus('mandatory')
g3cabinetTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3cabinetTretrieve.setStatus('mandatory')
g3cabinetTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetTcount.setStatus('mandatory')
g3cabinetTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6), )
if mibBuilder.loadTexts: g3cabinetTable.setStatus('mandatory')
g3cabinetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3cabinetNum"))
if mibBuilder.loadTexts: g3cabinetEntry.setStatus('mandatory')
g3cabinetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetNum.setStatus('mandatory')
g3cabinetType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetType.setStatus('mandatory')
g3cabinetLayout = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetLayout.setStatus('mandatory')
g3cabinetRoom = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetRoom.setStatus('mandatory')
g3cabinetFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetFloor.setStatus('mandatory')
g3cabinetBuilding = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetBuilding.setStatus('mandatory')
g3cabinetCarAType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarAType.setStatus('mandatory')
g3cabinetCarAPNN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarAPNN.setStatus('mandatory')
g3cabinetCarBType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarBType.setStatus('mandatory')
g3cabinetCarBPNN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarBPNN.setStatus('mandatory')
g3cabinetCarCType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarCType.setStatus('mandatory')
g3cabinetCarCPNN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarCPNN.setStatus('mandatory')
g3cabinetCarDType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarDType.setStatus('mandatory')
g3cabinetCarDPNN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarDPNN.setStatus('mandatory')
g3cabinetCarEType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarEType.setStatus('mandatory')
g3cabinetCarEPNN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetCarEPNN.setStatus('mandatory')
g3cabinetSREPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetSREPN.setStatus('mandatory')
g3cabinetSRProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetSRProductID.setStatus('mandatory')
g3cabinetRack = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetRack.setStatus('mandatory')
g3cabinetLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 7, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabinetLocation.setStatus('mandatory')
g3cabtypeTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabtypeTage.setStatus('mandatory')
g3cabtypeTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 8, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3cabtypeTintvl.setStatus('mandatory')
g3cabtypeTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 8, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabtypeTdelay.setStatus('mandatory')
g3cabtypeTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3cabtypeTretrieve.setStatus('mandatory')
g3cabtypeCab1Type = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 8, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabtypeCab1Type.setStatus('mandatory')
g3cabtypeCab2Type = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 8, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabtypeCab2Type.setStatus('mandatory')
g3cabtypeCab3Type = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 8, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cabtypeCab3Type.setStatus('mandatory')
g3cartypeTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeTage.setStatus('mandatory')
g3cartypeTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3cartypeTintvl.setStatus('mandatory')
g3cartypeTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeTdelay.setStatus('mandatory')
g3cartypeTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3cartypeTretrieve.setStatus('mandatory')
g3cartypeCab1CarAType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab1CarAType.setStatus('mandatory')
g3cartypeCab1CarBType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab1CarBType.setStatus('mandatory')
g3cartypeCab1CarCType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab1CarCType.setStatus('mandatory')
g3cartypeCab1CarDType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab1CarDType.setStatus('mandatory')
g3cartypeCab1CarEType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab1CarEType.setStatus('mandatory')
g3cartypeCab2CarAType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab2CarAType.setStatus('mandatory')
g3cartypeCab2CarBType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab2CarBType.setStatus('mandatory')
g3cartypeCab2CarCType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab2CarCType.setStatus('mandatory')
g3cartypeCab2CarDType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab2CarDType.setStatus('mandatory')
g3cartypeCab2CarEType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab2CarEType.setStatus('mandatory')
g3cartypeCab3CarAType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab3CarAType.setStatus('mandatory')
g3cartypeCab3CarBType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab3CarBType.setStatus('mandatory')
g3cartypeCab3CarCType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab3CarCType.setStatus('mandatory')
g3cartypeCab3CarDType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab3CarDType.setStatus('mandatory')
g3cartypeCab3CarEType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 9, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cartypeCab3CarEType.setStatus('mandatory')
g3portTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 10, 1), )
if mibBuilder.loadTexts: g3portTable.setStatus('mandatory')
g3portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 10, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3portNumber"))
if mibBuilder.loadTexts: g3portEntry.setStatus('mandatory')
g3portNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 10, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3portNumber.setStatus('mandatory')
g3portEquipType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 10, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3portEquipType.setStatus('mandatory')
g3portId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 10, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3portId.setStatus('mandatory')
g3portEquipType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 10, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3portEquipType2.setStatus('mandatory')
g3portId2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 10, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3portId2.setStatus('mandatory')
g3stationTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1), )
if mibBuilder.loadTexts: g3stationTable.setStatus('mandatory')
g3stationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3stationExtension"))
if mibBuilder.loadTexts: g3stationEntry.setStatus('mandatory')
g3stationExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationExtension.setStatus('mandatory')
g3stationType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationType.setStatus('mandatory')
g3stationName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationName.setStatus('mandatory')
g3stationBuilding = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationBuilding.setStatus('mandatory')
g3stationFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationFloor.setStatus('mandatory')
g3stationRoom = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationRoom.setStatus('mandatory')
g3stationCable = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationCable.setStatus('mandatory')
g3stationJack = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationJack.setStatus('mandatory')
g3stationDataExt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationDataExt.setStatus('mandatory')
g3stationDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationDataName.setStatus('mandatory')
g3stationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 11, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationPort.setStatus('mandatory')
g3statstaTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1), )
if mibBuilder.loadTexts: g3statstaTable.setStatus('mandatory')
g3statstaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3statstaExtension"))
if mibBuilder.loadTexts: g3statstaEntry.setStatus('mandatory')
g3statstaExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaExtension.setStatus('mandatory')
g3statstaServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaServiceState.setStatus('mandatory')
g3statstaMaintBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaMaintBusy.setStatus('mandatory')
g3statstaConnPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaConnPort1.setStatus('mandatory')
g3statstaConnPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaConnPort2.setStatus('mandatory')
g3statstaConnPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaConnPort3.setStatus('mandatory')
g3statstaConnPort4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaConnPort4.setStatus('mandatory')
g3statstaConnPort5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaConnPort5.setStatus('mandatory')
g3statstaConnPort6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaConnPort6.setStatus('mandatory')
g3statstaSACactive = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaSACactive.setStatus('mandatory')
g3statstaCFdestExt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaCFdestExt.setStatus('mandatory')
g3statstaRingCutOff = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaRingCutOff.setStatus('mandatory')
g3statstaSerialNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaSerialNbr.setStatus('mandatory')
g3statstaPartID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaPartID.setStatus('mandatory')
g3statstaSwitchPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaSwitchPort.setStatus('mandatory')
g3statstaSwitchIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaSwitchIPAddr.setStatus('mandatory')
g3statstaSwitchIPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaSwitchIPPort.setStatus('mandatory')
g3statstaSetIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaSetIPAddr.setStatus('mandatory')
g3statstaSetIPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 12, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statstaSetIPPort.setStatus('mandatory')
g3trunkmemTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13, 1), )
if mibBuilder.loadTexts: g3trunkmemTable.setStatus('mandatory')
g3trunkmemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trunkmemGroup"), (0, "G3-AVAYA-MIB", "g3trunkmemMember"))
if mibBuilder.loadTexts: g3trunkmemEntry.setStatus('mandatory')
g3trunkmemGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkmemGroup.setStatus('mandatory')
g3trunkmemMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkmemMember.setStatus('mandatory')
g3trunkmemName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkmemName.setStatus('mandatory')
g3trunkmemType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkmemType.setStatus('mandatory')
g3trunkmemSigGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkmemSigGroup.setStatus('mandatory')
g3trunkmemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 13, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkmemPort.setStatus('mandatory')
g3trunkstaTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1), )
if mibBuilder.loadTexts: g3trunkstaTable.setStatus('mandatory')
g3trunkstaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trunkstaTrunkGroup"), (0, "G3-AVAYA-MIB", "g3trunkstaMember"))
if mibBuilder.loadTexts: g3trunkstaEntry.setStatus('mandatory')
g3trunkstaTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaTrunkGroup.setStatus('mandatory')
g3trunkstaMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaMember.setStatus('mandatory')
g3trunkstaServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaServiceState.setStatus('mandatory')
g3trunkstaMaintBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaMaintBusy.setStatus('mandatory')
g3trunkstaConnPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort1.setStatus('mandatory')
g3trunkstaConnPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort2.setStatus('mandatory')
g3trunkstaConnPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort3.setStatus('mandatory')
g3trunkstaConnPort4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort4.setStatus('mandatory')
g3trunkstaConnPort5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort5.setStatus('mandatory')
g3trunkstaConnPort6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort6.setStatus('mandatory')
g3trunkstaConnPort7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort7.setStatus('mandatory')
g3trunkstaConnPort8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort8.setStatus('mandatory')
g3trunkstaConnPort9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 14, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkstaConnPort9.setStatus('mandatory')
g3datamodTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 15, 1), )
if mibBuilder.loadTexts: g3datamodTable.setStatus('mandatory')
g3datamodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 15, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3datamodExtension"))
if mibBuilder.loadTexts: g3datamodEntry.setStatus('mandatory')
g3datamodExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 15, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamodExtension.setStatus('mandatory')
g3datamodType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 15, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamodType.setStatus('mandatory')
g3datamodName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 15, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamodName.setStatus('mandatory')
g3datamstaTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1), )
if mibBuilder.loadTexts: g3datamstaTable.setStatus('mandatory')
g3datamstaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3datamstaExtension"))
if mibBuilder.loadTexts: g3datamstaEntry.setStatus('mandatory')
g3datamstaExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaExtension.setStatus('mandatory')
g3datamstaServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaServiceState.setStatus('mandatory')
g3datamstaMaintBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaMaintBusy.setStatus('mandatory')
g3datamstaConnPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort1.setStatus('mandatory')
g3datamstaConnPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort2.setStatus('mandatory')
g3datamstaConnPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort3.setStatus('mandatory')
g3datamstaConnPort4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort4.setStatus('mandatory')
g3datamstaConnPort5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort5.setStatus('mandatory')
g3datamstaConnPort6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort6.setStatus('mandatory')
g3datamstaConnPort7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort7.setStatus('mandatory')
g3datamstaConnPort8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort8.setStatus('mandatory')
g3datamstaConnPort9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaConnPort9.setStatus('mandatory')
g3datamstaCFdestExt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 16, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3datamstaCFdestExt.setStatus('mandatory')
g3timedateDayOfMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3timedateDayOfMonth.setStatus('mandatory')
g3timedateMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3timedateMonth.setStatus('mandatory')
g3timedateYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3timedateYear.setStatus('mandatory')
g3timedateDayOfWeek = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3timedateDayOfWeek.setStatus('mandatory')
g3timedateHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3timedateHour.setStatus('mandatory')
g3timedateMinute = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3timedateMinute.setStatus('mandatory')
g3timedateSecond = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3timedateSecond.setStatus('mandatory')
g3timedateLastError1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3timedateLastError1.setStatus('mandatory')
g3timedateLastError2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3timedateLastError2.setStatus('mandatory')
g3timedateLastError3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3timedateLastError3.setStatus('mandatory')
g3timedateLastError4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3timedateLastError4.setStatus('mandatory')
g3timedateLastError5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3timedateLastError5.setStatus('mandatory')
g3timedateLastError6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 18, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3timedateLastError6.setStatus('mandatory')
g3busytrkTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1), )
if mibBuilder.loadTexts: g3busytrkTable.setStatus('mandatory')
g3busytrkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3busytrkGroup"), (0, "G3-AVAYA-MIB", "g3busytrkMember"))
if mibBuilder.loadTexts: g3busytrkEntry.setStatus('mandatory')
g3busytrkAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkAction.setStatus('mandatory')
g3busytrkObject = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkObject.setStatus('mandatory')
g3busytrkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkGroup.setStatus('mandatory')
g3busytrkMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkMember.setStatus('mandatory')
g3busytrkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkIndex.setStatus('mandatory')
g3busytrkPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkPort.setStatus('mandatory')
g3busytrkMaintName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkMaintName.setStatus('mandatory')
g3busytrkAltName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkAltName.setStatus('mandatory')
g3busytrkResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkResult.setStatus('mandatory')
g3busytrkErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkErrorCode.setStatus('mandatory')
g3busytrkLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkLastError.setStatus('mandatory')
g3busytrkUDateStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 19, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busytrkUDateStr.setStatus('mandatory')
g3busybrdTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1), )
if mibBuilder.loadTexts: g3busybrdTable.setStatus('mandatory')
g3busybrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3busybrdBoardVal"), (0, "G3-AVAYA-MIB", "g3busybrdPortVal"))
if mibBuilder.loadTexts: g3busybrdEntry.setStatus('mandatory')
g3busybrdAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdAction.setStatus('mandatory')
g3busybrdObject = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdObject.setStatus('mandatory')
g3busybrdBoardVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdBoardVal.setStatus('mandatory')
g3busybrdPortVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdPortVal.setStatus('mandatory')
g3busybrdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdIndex.setStatus('mandatory')
g3busybrdPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdPort.setStatus('mandatory')
g3busybrdMaintName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdMaintName.setStatus('mandatory')
g3busybrdAltName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdAltName.setStatus('mandatory')
g3busybrdResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdResult.setStatus('mandatory')
g3busybrdErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdErrorCode.setStatus('mandatory')
g3busybrdLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdLastError.setStatus('mandatory')
g3busybrdUDateStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 20, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3busybrdUDateStr.setStatus('mandatory')
g3servalmTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1), )
if mibBuilder.loadTexts: g3servalmTable.setStatus('mandatory')
g3servalmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3servalmID"))
if mibBuilder.loadTexts: g3servalmEntry.setStatus('mandatory')
g3servalmID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3servalmID.setStatus('mandatory')
g3servalmSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3servalmSource.setStatus('mandatory')
g3servalmEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3servalmEventID.setStatus('mandatory')
g3servalmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3servalmLevel.setStatus('mandatory')
g3servalmAck = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3servalmAck.setStatus('mandatory')
g3servalmDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3servalmDate.setStatus('mandatory')
g3servalmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 21, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3servalmDescription.setStatus('mandatory')
g3msgalmTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1), )
if mibBuilder.loadTexts: g3msgalmTable.setStatus('mandatory')
g3msgalmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3msgalmID"))
if mibBuilder.loadTexts: g3msgalmEntry.setStatus('mandatory')
g3msgalmID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmID.setStatus('mandatory')
g3msgalmAPP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmAPP.setStatus('mandatory')
g3msgalmSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmSource.setStatus('mandatory')
g3msgalmEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmEventID.setStatus('mandatory')
g3msgalmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmLevel.setStatus('mandatory')
g3msgalmAck = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmAck.setStatus('mandatory')
g3msgalmLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmLocation.setStatus('mandatory')
g3msgalmDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmDate.setStatus('mandatory')
g3msgalmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 22, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3msgalmDescription.setStatus('mandatory')
g3ipevtTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 23, 1), )
if mibBuilder.loadTexts: g3ipevtTable.setStatus('mandatory')
g3ipevtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 23, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipevtIndex"))
if mibBuilder.loadTexts: g3ipevtEntry.setStatus('mandatory')
g3ipevtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 23, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipevtIndex.setStatus('mandatory')
g3ipevtIPEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 23, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipevtIPEvent.setStatus('mandatory')
g3platcmdsTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1), )
if mibBuilder.loadTexts: g3platcmdsTable.setStatus('mandatory')
g3platcmdsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3platcmdsSeqNumber"))
if mibBuilder.loadTexts: g3platcmdsEntry.setStatus('mandatory')
g3platcmdsDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3platcmdsDate.setStatus('mandatory')
g3platcmdsTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3platcmdsTime.setStatus('mandatory')
g3platcmdsSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3platcmdsSeqNumber.setStatus('mandatory')
g3platcmdsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3platcmdsPriority.setStatus('mandatory')
g3platcmdsServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3platcmdsServerName.setStatus('mandatory')
g3platcmdsLoginId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3platcmdsLoginId.setStatus('mandatory')
g3platcmdsCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 24, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3platcmdsCommand.setStatus('mandatory')
g3ds1cfgTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgTage.setStatus('mandatory')
g3ds1cfgTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ds1cfgTintvl.setStatus('mandatory')
g3ds1cfgTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgTdelay.setStatus('mandatory')
g3ds1cfgTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ds1cfgTretrieve.setStatus('mandatory')
g3ds1cfgTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgTcount.setStatus('mandatory')
g3ds1cfgTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6), )
if mibBuilder.loadTexts: g3ds1cfgTable.setStatus('mandatory')
g3ds1cfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ds1cfgBoardNum"))
if mibBuilder.loadTexts: g3ds1cfgEntry.setStatus('mandatory')
g3ds1cfgBoardNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgBoardNum.setStatus('mandatory')
g3ds1cfgCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgCode.setStatus('mandatory')
g3ds1cfgSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgSuffix.setStatus('mandatory')
g3ds1cfgVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgVintage.setStatus('mandatory')
g3ds1cfgSignaling = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgSignaling.setStatus('mandatory')
g3ds1cfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgName.setStatus('mandatory')
g3ds1cfgCsuMod = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 30, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1cfgCsuMod.setStatus('mandatory')
g3extdevTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevTage.setStatus('mandatory')
g3extdevTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3extdevTintvl.setStatus('mandatory')
g3extdevTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevTdelay.setStatus('mandatory')
g3extdevTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3extdevTretrieve.setStatus('mandatory')
g3extdevTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevTcount.setStatus('mandatory')
g3extdevTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6), )
if mibBuilder.loadTexts: g3extdevTable.setStatus('mandatory')
g3extdevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3extdevPort"))
if mibBuilder.loadTexts: g3extdevEntry.setStatus('mandatory')
g3extdevPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevPort.setStatus('mandatory')
g3extdevType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevType.setStatus('mandatory')
g3extdevAltName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevAltName.setStatus('mandatory')
g3extdevDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 43))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevDescription.setStatus('mandatory')
g3extdevID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevID.setStatus('mandatory')
g3extdevBuilding = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevBuilding.setStatus('mandatory')
g3extdevAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 31, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3extdevAddress.setStatus('mandatory')
g3trunkgrpTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpTage.setStatus('mandatory')
g3trunkgrpTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunkgrpTintvl.setStatus('mandatory')
g3trunkgrpTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpTdelay.setStatus('mandatory')
g3trunkgrpTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunkgrpTretrieve.setStatus('mandatory')
g3trunkgrpTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpTcount.setStatus('mandatory')
g3trunkgrpTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6), )
if mibBuilder.loadTexts: g3trunkgrpTable.setStatus('mandatory')
g3trunkgrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trunkgrpNumber"))
if mibBuilder.loadTexts: g3trunkgrpEntry.setStatus('mandatory')
g3trunkgrpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpNumber.setStatus('mandatory')
g3trunkgrpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpType.setStatus('mandatory')
g3trunkgrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpName.setStatus('mandatory')
g3trunkgrpDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpDirection.setStatus('mandatory')
g3trunkgrpServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpServiceType.setStatus('mandatory')
g3trunkgrpCommType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpCommType.setStatus('mandatory')
g3trunkgrpTrunkType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpTrunkType.setStatus('mandatory')
g3trunkgrpSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpSize.setStatus('mandatory')
g3trunkgrpUsageAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpUsageAlloc.setStatus('mandatory')
g3trunkgrpTAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpTAC.setStatus('mandatory')
g3trunkgrpWideSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpWideSupport.setStatus('mandatory')
g3trunkgrpDCSFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpDCSFlag.setStatus('mandatory')
g3trunkgrpPbxID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpPbxID.setStatus('mandatory')
g3trunkgrpDCSSigType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpDCSSigType.setStatus('mandatory')
g3trunkgrpSigType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpSigType.setStatus('mandatory')
g3trunkgrpACAFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpACAFlag.setStatus('mandatory')
g3trunkgrpLongHold = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpLongHold.setStatus('mandatory')
g3trunkgrpShortHold = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpShortHold.setStatus('mandatory')
g3trunkgrpShortThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpShortThreshold.setStatus('mandatory')
g3trunkgrpQsigValueAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpQsigValueAdd.setStatus('mandatory')
g3trunkgrpSuppServProt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 32, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkgrpSuppServProt.setStatus('mandatory')
g3bulletinTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinTage.setStatus('mandatory')
g3bulletinTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3bulletinTintvl.setStatus('mandatory')
g3bulletinTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinTdelay.setStatus('mandatory')
g3bulletinTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3bulletinTretrieve.setStatus('mandatory')
g3bulletinMessage1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage1.setStatus('mandatory')
g3bulletinMessage2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage2.setStatus('mandatory')
g3bulletinMessage3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage3.setStatus('mandatory')
g3bulletinMessage4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage4.setStatus('mandatory')
g3bulletinMessage5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage5.setStatus('mandatory')
g3bulletinMessage6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage6.setStatus('mandatory')
g3bulletinMessage7 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage7.setStatus('mandatory')
g3bulletinMessage8 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage8.setStatus('mandatory')
g3bulletinMessage9 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage9.setStatus('mandatory')
g3bulletinMessage10 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage10.setStatus('mandatory')
g3bulletinMessage11 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage11.setStatus('mandatory')
g3bulletinMessage12 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage12.setStatus('mandatory')
g3bulletinMessage13 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage13.setStatus('mandatory')
g3bulletinMessage14 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage14.setStatus('mandatory')
g3bulletinMessage15 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage15.setStatus('mandatory')
g3bulletinMessage16 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage16.setStatus('mandatory')
g3bulletinMessage17 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage17.setStatus('mandatory')
g3bulletinMessage18 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage18.setStatus('mandatory')
g3bulletinMessage19 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage19.setStatus('mandatory')
g3bulletinMessage20 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage20.setStatus('mandatory')
g3bulletinMessage21 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage21.setStatus('mandatory')
g3bulletinMessage22 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage22.setStatus('mandatory')
g3bulletinMessage23 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage23.setStatus('mandatory')
g3bulletinMessage24 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage24.setStatus('mandatory')
g3bulletinMessage25 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage25.setStatus('mandatory')
g3bulletinMessage26 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage26.setStatus('mandatory')
g3bulletinMessage27 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage27.setStatus('mandatory')
g3bulletinMessage28 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage28.setStatus('mandatory')
g3bulletinMessage29 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage29.setStatus('mandatory')
g3bulletinMessage30 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage30.setStatus('mandatory')
g3bulletinMessage31 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage31.setStatus('mandatory')
g3bulletinMessage32 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage32.setStatus('mandatory')
g3bulletinMessage33 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage33.setStatus('mandatory')
g3bulletinMessage34 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage34.setStatus('mandatory')
g3bulletinMessage35 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage35.setStatus('mandatory')
g3bulletinMessage36 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage36.setStatus('mandatory')
g3bulletinMessage37 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage37.setStatus('mandatory')
g3bulletinMessage38 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage38.setStatus('mandatory')
g3bulletinMessage39 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage39.setStatus('mandatory')
g3bulletinMessage40 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage40.setStatus('mandatory')
g3bulletinMessage41 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage41.setStatus('mandatory')
g3bulletinMessage42 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage42.setStatus('mandatory')
g3bulletinMessage43 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage43.setStatus('mandatory')
g3bulletinMessage44 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage44.setStatus('mandatory')
g3bulletinMessage45 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage45.setStatus('mandatory')
g3bulletinMessage46 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage46.setStatus('mandatory')
g3bulletinMessage47 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage47.setStatus('mandatory')
g3bulletinMessage48 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage48.setStatus('mandatory')
g3bulletinMessage49 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage49.setStatus('mandatory')
g3bulletinMessage50 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage50.setStatus('mandatory')
g3bulletinMessage51 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage51.setStatus('mandatory')
g3bulletinMessage52 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage52.setStatus('mandatory')
g3bulletinMessage53 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage53.setStatus('mandatory')
g3bulletinMessage54 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage54.setStatus('mandatory')
g3bulletinMessage55 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 59), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage55.setStatus('mandatory')
g3bulletinMessage56 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 60), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage56.setStatus('mandatory')
g3bulletinMessage57 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 61), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage57.setStatus('mandatory')
g3bulletinMessage58 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 62), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage58.setStatus('mandatory')
g3bulletinMessage59 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 63), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinMessage59.setStatus('mandatory')
g3bulletinDate1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 64), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate1.setStatus('mandatory')
g3bulletinDate2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate2.setStatus('mandatory')
g3bulletinDate3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 66), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate3.setStatus('mandatory')
g3bulletinDate4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 67), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate4.setStatus('mandatory')
g3bulletinDate5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate5.setStatus('mandatory')
g3bulletinDate6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate6.setStatus('mandatory')
g3bulletinDate7 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate7.setStatus('mandatory')
g3bulletinDate8 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 71), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate8.setStatus('mandatory')
g3bulletinDate9 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 72), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate9.setStatus('mandatory')
g3bulletinDate10 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 73), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate10.setStatus('mandatory')
g3bulletinDate11 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 74), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate11.setStatus('mandatory')
g3bulletinDate12 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 75), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate12.setStatus('mandatory')
g3bulletinDate13 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 76), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate13.setStatus('mandatory')
g3bulletinDate14 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 77), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate14.setStatus('mandatory')
g3bulletinDate15 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 78), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate15.setStatus('mandatory')
g3bulletinDate16 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate16.setStatus('mandatory')
g3bulletinDate17 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate17.setStatus('mandatory')
g3bulletinDate18 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 81), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate18.setStatus('mandatory')
g3bulletinDate19 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 82), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate19.setStatus('mandatory')
g3bulletinDate20 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 83), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate20.setStatus('mandatory')
g3bulletinDate21 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 84), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate21.setStatus('mandatory')
g3bulletinDate22 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 85), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate22.setStatus('mandatory')
g3bulletinDate23 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 86), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate23.setStatus('mandatory')
g3bulletinDate24 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 87), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate24.setStatus('mandatory')
g3bulletinDate25 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 88), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate25.setStatus('mandatory')
g3bulletinDate26 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 89), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate26.setStatus('mandatory')
g3bulletinDate27 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 90), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate27.setStatus('mandatory')
g3bulletinDate28 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 91), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate28.setStatus('mandatory')
g3bulletinDate29 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 92), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate29.setStatus('mandatory')
g3bulletinDate30 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 93), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate30.setStatus('mandatory')
g3bulletinDate31 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 94), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate31.setStatus('mandatory')
g3bulletinDate32 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 95), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate32.setStatus('mandatory')
g3bulletinDate33 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 96), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate33.setStatus('mandatory')
g3bulletinDate34 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 97), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate34.setStatus('mandatory')
g3bulletinDate35 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 98), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate35.setStatus('mandatory')
g3bulletinDate36 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate36.setStatus('mandatory')
g3bulletinDate37 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 100), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate37.setStatus('mandatory')
g3bulletinDate38 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 101), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate38.setStatus('mandatory')
g3bulletinDate39 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 102), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate39.setStatus('mandatory')
g3bulletinDate40 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 103), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate40.setStatus('mandatory')
g3bulletinDate41 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 104), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate41.setStatus('mandatory')
g3bulletinDate42 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 105), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate42.setStatus('mandatory')
g3bulletinDate43 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 106), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate43.setStatus('mandatory')
g3bulletinDate44 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 107), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate44.setStatus('mandatory')
g3bulletinDate45 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 108), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate45.setStatus('mandatory')
g3bulletinDate46 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 109), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate46.setStatus('mandatory')
g3bulletinDate47 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 110), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate47.setStatus('mandatory')
g3bulletinDate48 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 111), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate48.setStatus('mandatory')
g3bulletinDate49 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 112), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate49.setStatus('mandatory')
g3bulletinDate50 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 113), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate50.setStatus('mandatory')
g3bulletinDate51 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 114), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate51.setStatus('mandatory')
g3bulletinDate52 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 115), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate52.setStatus('mandatory')
g3bulletinDate53 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 116), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate53.setStatus('mandatory')
g3bulletinDate54 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 117), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate54.setStatus('mandatory')
g3bulletinDate55 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 118), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate55.setStatus('mandatory')
g3bulletinDate56 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 119), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate56.setStatus('mandatory')
g3bulletinDate57 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 120), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate57.setStatus('mandatory')
g3bulletinDate58 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 121), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate58.setStatus('mandatory')
g3bulletinDate59 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 33, 122), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3bulletinDate59.setStatus('mandatory')
g3ds1Tage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1Tage.setStatus('mandatory')
g3ds1Tintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ds1Tintvl.setStatus('mandatory')
g3ds1Tdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1Tdelay.setStatus('mandatory')
g3ds1Tretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ds1Tretrieve.setStatus('mandatory')
g3ds1Tcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1Tcount.setStatus('mandatory')
g3ds1Table = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 6), )
if mibBuilder.loadTexts: g3ds1Table.setStatus('mandatory')
g3ds1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ds1Location"))
if mibBuilder.loadTexts: g3ds1Entry.setStatus('mandatory')
g3ds1Location = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1Location.setStatus('mandatory')
g3ds1BitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1BitRate.setStatus('mandatory')
g3ds1Signaling = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1Signaling.setStatus('mandatory')
g3ds1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 34, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ds1Name.setStatus('mandatory')
g3atmpncTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncTage.setStatus('mandatory')
g3atmpncTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmpncTintvl.setStatus('mandatory')
g3atmpncTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncTdelay.setStatus('mandatory')
g3atmpncTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmpncTretrieve.setStatus('mandatory')
g3atmpncTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncTcount.setStatus('mandatory')
g3atmpncTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6), )
if mibBuilder.loadTexts: g3atmpncTable.setStatus('mandatory')
g3atmpncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3atmpncconnection"))
if mibBuilder.loadTexts: g3atmpncEntry.setStatus('mandatory')
g3atmpncconnection = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncconnection.setStatus('mandatory')
g3atmpncPncLocA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncLocA.setStatus('mandatory')
g3atmpncPncNameA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncNameA.setStatus('mandatory')
g3atmpncPncAddFmtA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncAddFmtA.setStatus('mandatory')
g3atmpncPncAFIA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncAFIA.setStatus('mandatory')
g3atmpncPncE164A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncE164A.setStatus('mandatory')
g3atmpncPncDCIA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncDCIA.setStatus('mandatory')
g3atmpncPncHoDsp1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncHoDsp1A.setStatus('mandatory')
g3atmpncPncHoDsp2A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncHoDsp2A.setStatus('mandatory')
g3atmpncPncESIA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncESIA.setStatus('mandatory')
g3atmpncPncSELA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncSELA.setStatus('mandatory')
g3atmpncPncLocB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncLocB.setStatus('mandatory')
g3atmpncPncNameB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncNameB.setStatus('mandatory')
g3atmpncPncAddFmtB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncAddFmtB.setStatus('mandatory')
g3atmpncPncAFIB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncAFIB.setStatus('mandatory')
g3atmpncPncE164B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncE164B.setStatus('mandatory')
g3atmpncPncDCIB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncDCIB.setStatus('mandatory')
g3atmpncPncHoDsp1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncHoDsp1B.setStatus('mandatory')
g3atmpncPncHoDsp2B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncHoDsp2B.setStatus('mandatory')
g3atmpncPncESIB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncESIB.setStatus('mandatory')
g3atmpncPncSELB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 35, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmpncPncSELB.setStatus('mandatory')
g3pnchealthTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthTage.setStatus('mandatory')
g3pnchealthTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pnchealthTintvl.setStatus('mandatory')
g3pnchealthTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthTdelay.setStatus('mandatory')
g3pnchealthTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pnchealthTretrieve.setStatus('mandatory')
g3pnchealthSoftwreLck = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthSoftwreLck.setStatus('mandatory')
g3pnchealthStandbyBusd = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthStandbyBusd.setStatus('mandatory')
g3pnchealthStndbyRfsh = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthStndbyRfsh.setStatus('mandatory')
g3pnchealthIntchDisble = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthIntchDisble.setStatus('mandatory')
g3pnchealthPncAMode = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncAMode.setStatus('mandatory')
g3pnchealthPncBMode = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncBMode.setStatus('mandatory')
g3pnchealthPncAHealth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncAHealth.setStatus('mandatory')
g3pnchealthPncBHealth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncBHealth.setStatus('mandatory')
g3pnchealthPncAIntrIdx = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncAIntrIdx.setStatus('mandatory')
g3pnchealthPncBIntrIdx = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncBIntrIdx.setStatus('mandatory')
g3pnchealthPncAMajor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncAMajor.setStatus('mandatory')
g3pnchealthPncBMajor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncBMajor.setStatus('mandatory')
g3pnchealthPncAMinor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncAMinor.setStatus('mandatory')
g3pnchealthPncBMinor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncBMinor.setStatus('mandatory')
g3pnchealthPncAWarning = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncAWarning.setStatus('mandatory')
g3pnchealthPncBWarning = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncBWarning.setStatus('mandatory')
g3pnchealthPncASNIntrIdx = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncASNIntrIdx.setStatus('mandatory')
g3pnchealthPncBSNIntrIdx = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 36, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnchealthPncBSNIntrIdx.setStatus('mandatory')
g3siggroupTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupTage.setStatus('mandatory')
g3siggroupTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3siggroupTintvl.setStatus('mandatory')
g3siggroupTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupTdelay.setStatus('mandatory')
g3siggroupTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3siggroupTretrieve.setStatus('mandatory')
g3siggroupTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupTcount.setStatus('mandatory')
g3siggroupTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6), )
if mibBuilder.loadTexts: g3siggroupTable.setStatus('mandatory')
g3siggroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3siggroupGrpNbr"))
if mibBuilder.loadTexts: g3siggroupEntry.setStatus('mandatory')
g3siggroupGrpNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupGrpNbr.setStatus('mandatory')
g3siggroupPriDChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupPriDChannel.setStatus('mandatory')
g3siggroupSecDChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupSecDChannel.setStatus('mandatory')
g3siggroupBoard1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard1.setStatus('mandatory')
g3siggroupBoard2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard2.setStatus('mandatory')
g3siggroupBoard3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard3.setStatus('mandatory')
g3siggroupBoard4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard4.setStatus('mandatory')
g3siggroupBoard5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard5.setStatus('mandatory')
g3siggroupBoard6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard6.setStatus('mandatory')
g3siggroupBoard7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard7.setStatus('mandatory')
g3siggroupBoard8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard8.setStatus('mandatory')
g3siggroupBoard9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard9.setStatus('mandatory')
g3siggroupBoard10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard10.setStatus('mandatory')
g3siggroupBoard11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard11.setStatus('mandatory')
g3siggroupBoard12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard12.setStatus('mandatory')
g3siggroupBoard13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard13.setStatus('mandatory')
g3siggroupBoard14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard14.setStatus('mandatory')
g3siggroupBoard15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard15.setStatus('mandatory')
g3siggroupBoard16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard16.setStatus('mandatory')
g3siggroupBoard17 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard17.setStatus('mandatory')
g3siggroupBoard18 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard18.setStatus('mandatory')
g3siggroupBoard19 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard19.setStatus('mandatory')
g3siggroupBoard20 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupBoard20.setStatus('mandatory')
g3siggroupIntfNum1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum1.setStatus('mandatory')
g3siggroupIntfNum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum2.setStatus('mandatory')
g3siggroupIntfNum3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum3.setStatus('mandatory')
g3siggroupIntfNum4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum4.setStatus('mandatory')
g3siggroupIntfNum5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum5.setStatus('mandatory')
g3siggroupIntfNum6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum6.setStatus('mandatory')
g3siggroupIntfNum7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum7.setStatus('mandatory')
g3siggroupIntfNum8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum8.setStatus('mandatory')
g3siggroupIntfNum9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum9.setStatus('mandatory')
g3siggroupIntfNum10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum10.setStatus('mandatory')
g3siggroupIntfNum11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum11.setStatus('mandatory')
g3siggroupIntfNum12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum12.setStatus('mandatory')
g3siggroupIntfNum13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum13.setStatus('mandatory')
g3siggroupIntfNum14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum14.setStatus('mandatory')
g3siggroupIntfNum15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum15.setStatus('mandatory')
g3siggroupIntfNum16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum16.setStatus('mandatory')
g3siggroupIntfNum17 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum17.setStatus('mandatory')
g3siggroupIntfNum18 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum18.setStatus('mandatory')
g3siggroupIntfNum19 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum19.setStatus('mandatory')
g3siggroupIntfNum20 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupIntfNum20.setStatus('mandatory')
g3siggroupAsocSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 37, 6, 1, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3siggroupAsocSignal.setStatus('mandatory')
g3restartTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartTage.setStatus('mandatory')
g3restartTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3restartTintvl.setStatus('mandatory')
g3restartTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartTdelay.setStatus('mandatory')
g3restartTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3restartTretrieve.setStatus('mandatory')
g3restartTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartTcount.setStatus('mandatory')
g3restartTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6), )
if mibBuilder.loadTexts: g3restartTable.setStatus('mandatory')
g3restartEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3restartMonth"), (0, "G3-AVAYA-MIB", "g3restartDay"), (0, "G3-AVAYA-MIB", "g3restartHour"), (0, "G3-AVAYA-MIB", "g3restartMinute"), (0, "G3-AVAYA-MIB", "g3restartIndex"))
if mibBuilder.loadTexts: g3restartEntry.setStatus('mandatory')
g3restartMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartMonth.setStatus('mandatory')
g3restartDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartDay.setStatus('mandatory')
g3restartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartHour.setStatus('mandatory')
g3restartMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartMinute.setStatus('mandatory')
g3restartDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartDateTime.setStatus('mandatory')
g3restartLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartLevel.setStatus('mandatory')
g3restartCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartCarrier.setStatus('mandatory')
g3restartCraftDemand = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartCraftDemand.setStatus('mandatory')
g3restartEscalated = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartEscalated.setStatus('mandatory')
g3restartInterchange = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartInterchange.setStatus('mandatory')
g3restartUnavailable = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartUnavailable.setStatus('mandatory')
g3restartCause = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartCause.setStatus('mandatory')
g3restartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 38, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3restartIndex.setStatus('mandatory')
g3fiberlinkTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkTage.setStatus('mandatory')
g3fiberlinkTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3fiberlinkTintvl.setStatus('mandatory')
g3fiberlinkTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkTdelay.setStatus('mandatory')
g3fiberlinkTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3fiberlinkTretrieve.setStatus('mandatory')
g3fiberlinkTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkTcount.setStatus('mandatory')
g3fiberlinkTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6), )
if mibBuilder.loadTexts: g3fiberlinkTable.setStatus('mandatory')
g3fiberlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3fiberlinkFLNumber"))
if mibBuilder.loadTexts: g3fiberlinkEntry.setStatus('mandatory')
g3fiberlinkFLNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkFLNumber.setStatus('mandatory')
g3fiberlinkDS1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkDS1Type.setStatus('mandatory')
g3fiberlinkE1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE1Type.setStatus('mandatory')
g3fiberlinkE2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE2Type.setStatus('mandatory')
g3fiberlinkE1ABoard = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE1ABoard.setStatus('mandatory')
g3fiberlinkE2ABoard = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE2ABoard.setStatus('mandatory')
g3fiberlinkE1BBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE1BBoard.setStatus('mandatory')
g3fiberlinkE2BBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE2BBoard.setStatus('mandatory')
g3fiberlinkE1ADs1Board = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE1ADs1Board.setStatus('mandatory')
g3fiberlinkE2ADs1Board = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE2ADs1Board.setStatus('mandatory')
g3fiberlinkE1BDs1Board = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE1BDs1Board.setStatus('mandatory')
g3fiberlinkE2BDs1Board = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 39, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3fiberlinkE2BDs1Board.setStatus('mandatory')
g3routepatternTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTage.setStatus('mandatory')
g3routepatternTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3routepatternTintvl.setStatus('mandatory')
g3routepatternTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTdelay.setStatus('mandatory')
g3routepatternTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3routepatternTretrieve.setStatus('mandatory')
g3routepatternTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTcount.setStatus('mandatory')
g3routepatternTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6), )
if mibBuilder.loadTexts: g3routepatternTable.setStatus('mandatory')
g3routepatternEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3routepatternRPNumber"))
if mibBuilder.loadTexts: g3routepatternEntry.setStatus('mandatory')
g3routepatternRPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternRPNumber.setStatus('mandatory')
g3routepatternTGNumber1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber1.setStatus('mandatory')
g3routepatternTGNumber2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber2.setStatus('mandatory')
g3routepatternTGNumber3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber3.setStatus('mandatory')
g3routepatternTGNumber4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber4.setStatus('mandatory')
g3routepatternTGNumber5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber5.setStatus('mandatory')
g3routepatternTGNumber6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber6.setStatus('mandatory')
g3routepatternTGNumber7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber7.setStatus('mandatory')
g3routepatternTGNumber8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber8.setStatus('mandatory')
g3routepatternTGNumber9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber9.setStatus('mandatory')
g3routepatternTGNumber10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber10.setStatus('mandatory')
g3routepatternTGNumber11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber11.setStatus('mandatory')
g3routepatternTGNumber12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber12.setStatus('mandatory')
g3routepatternTGNumber13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber13.setStatus('mandatory')
g3routepatternTGNumber14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber14.setStatus('mandatory')
g3routepatternTGNumber15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber15.setStatus('mandatory')
g3routepatternTGNumber16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 40, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3routepatternTGNumber16.setStatus('mandatory')
g3trunkcfgTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkcfgTage.setStatus('mandatory')
g3trunkcfgTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunkcfgTintvl.setStatus('mandatory')
g3trunkcfgTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkcfgTdelay.setStatus('mandatory')
g3trunkcfgTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunkcfgTretrieve.setStatus('mandatory')
g3trunkcfgTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkcfgTcount.setStatus('mandatory')
g3trunkcfgTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 6), )
if mibBuilder.loadTexts: g3trunkcfgTable.setStatus('mandatory')
g3trunkcfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trunkcfgBoardNum"))
if mibBuilder.loadTexts: g3trunkcfgEntry.setStatus('mandatory')
g3trunkcfgBoardNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkcfgBoardNum.setStatus('mandatory')
g3trunkcfgBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkcfgBoardType.setStatus('mandatory')
g3trunkcfgCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkcfgCode.setStatus('mandatory')
g3trunkcfgVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkcfgVintage.setStatus('mandatory')
g3trunkcfgSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 41, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkcfgSuffix.setStatus('mandatory')
g3stationcfgTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationcfgTage.setStatus('mandatory')
g3stationcfgTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3stationcfgTintvl.setStatus('mandatory')
g3stationcfgTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationcfgTdelay.setStatus('mandatory')
g3stationcfgTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3stationcfgTretrieve.setStatus('mandatory')
g3stationcfgTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationcfgTcount.setStatus('mandatory')
g3stationcfgTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 6), )
if mibBuilder.loadTexts: g3stationcfgTable.setStatus('mandatory')
g3stationcfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3stationcfgBoardNum"))
if mibBuilder.loadTexts: g3stationcfgEntry.setStatus('mandatory')
g3stationcfgBoardNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationcfgBoardNum.setStatus('mandatory')
g3stationcfgBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationcfgBoardType.setStatus('mandatory')
g3stationcfgCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationcfgCode.setStatus('mandatory')
g3stationcfgVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationcfgVintage.setStatus('mandatory')
g3stationcfgSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 42, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stationcfgSuffix.setStatus('mandatory')
g3atmcfgTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgTage.setStatus('mandatory')
g3atmcfgTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmcfgTintvl.setStatus('mandatory')
g3atmcfgTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgTdelay.setStatus('mandatory')
g3atmcfgTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmcfgTretrieve.setStatus('mandatory')
g3atmcfgTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgTcount.setStatus('mandatory')
g3atmcfgTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 6), )
if mibBuilder.loadTexts: g3atmcfgTable.setStatus('mandatory')
g3atmcfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3atmcfgBoardNum"))
if mibBuilder.loadTexts: g3atmcfgEntry.setStatus('mandatory')
g3atmcfgBoardNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgBoardNum.setStatus('mandatory')
g3atmcfgCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgCode.setStatus('mandatory')
g3atmcfgBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgBoardType.setStatus('mandatory')
g3atmcfgVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgVintage.setStatus('mandatory')
g3atmcfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgName.setStatus('mandatory')
g3atmcfgSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 43, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmcfgSuffix.setStatus('mandatory')
g3acaTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaTage.setStatus('mandatory')
g3acaTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3acaTintvl.setStatus('mandatory')
g3acaTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaTdelay.setStatus('mandatory')
g3acaTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3acaTretrieve.setStatus('mandatory')
g3acaTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaTcount.setStatus('mandatory')
g3acaTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6), )
if mibBuilder.loadTexts: g3acaTable.setStatus('mandatory')
g3acaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3acaTGNumber"), (0, "G3-AVAYA-MIB", "g3acaTGMember"), (0, "G3-AVAYA-MIB", "g3acaDayTime"))
if mibBuilder.loadTexts: g3acaEntry.setStatus('mandatory')
g3acaTGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaTGNumber.setStatus('mandatory')
g3acaTGMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaTGMember.setStatus('mandatory')
g3acaDayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaDayTime.setStatus('mandatory')
g3acaYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaYear.setStatus('mandatory')
g3acaMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaMonth.setStatus('mandatory')
g3acaDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaDay.setStatus('mandatory')
g3acaHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaHour.setStatus('mandatory')
g3acaTGAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaTGAccess.setStatus('mandatory')
g3acaRefType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaRefType.setStatus('mandatory')
g3acaWideBand = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 44, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3acaWideBand.setStatus('mandatory')
g3atmtrunkTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmtrunkTage.setStatus('mandatory')
g3atmtrunkTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmtrunkTintvl.setStatus('mandatory')
g3atmtrunkTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmtrunkTdelay.setStatus('mandatory')
g3atmtrunkTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmtrunkTretrieve.setStatus('mandatory')
g3atmtrunkTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmtrunkTcount.setStatus('mandatory')
g3atmtrunkTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 6), )
if mibBuilder.loadTexts: g3atmtrunkTable.setStatus('mandatory')
g3atmtrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3atmtrunkLocation"))
if mibBuilder.loadTexts: g3atmtrunkEntry.setStatus('mandatory')
g3atmtrunkLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmtrunkLocation.setStatus('mandatory')
g3atmtrunkName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmtrunkName.setStatus('mandatory')
g3atmtrunkSynch = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 45, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmtrunkSynch.setStatus('mandatory')
g3atmportpg1Tage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1Tage.setStatus('mandatory')
g3atmportpg1Tintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmportpg1Tintvl.setStatus('mandatory')
g3atmportpg1Tdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1Tdelay.setStatus('mandatory')
g3atmportpg1Tretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmportpg1Tretrieve.setStatus('mandatory')
g3atmportpg1Tcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1Tcount.setStatus('mandatory')
g3atmportpg1Table = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6), )
if mibBuilder.loadTexts: g3atmportpg1Table.setStatus('mandatory')
g3atmportpg1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3atmportpg1Location"))
if mibBuilder.loadTexts: g3atmportpg1Entry.setStatus('mandatory')
g3atmportpg1Location = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1Location.setStatus('mandatory')
g3atmportpg1SGNumber1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber1.setStatus('mandatory')
g3atmportpg1SGNumber2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber2.setStatus('mandatory')
g3atmportpg1SGNumber3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber3.setStatus('mandatory')
g3atmportpg1SGNumber4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber4.setStatus('mandatory')
g3atmportpg1SGNumber5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber5.setStatus('mandatory')
g3atmportpg1SGNumber6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber6.setStatus('mandatory')
g3atmportpg1SGNumber7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber7.setStatus('mandatory')
g3atmportpg1SGNumber8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber8.setStatus('mandatory')
g3atmportpg1SGNumber9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber9.setStatus('mandatory')
g3atmportpg1SGNumber10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber10.setStatus('mandatory')
g3atmportpg1SGNumber11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber11.setStatus('mandatory')
g3atmportpg1SGNumber12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber12.setStatus('mandatory')
g3atmportpg1SGNumber13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber13.setStatus('mandatory')
g3atmportpg1SGNumber14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber14.setStatus('mandatory')
g3atmportpg1SGNumber15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber15.setStatus('mandatory')
g3atmportpg1SGNumber16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber16.setStatus('mandatory')
g3atmportpg1SGNumber17 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber17.setStatus('mandatory')
g3atmportpg1SGNumber18 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber18.setStatus('mandatory')
g3atmportpg1SGNumber19 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber19.setStatus('mandatory')
g3atmportpg1SGNumber20 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber20.setStatus('mandatory')
g3atmportpg1SGNumber21 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber21.setStatus('mandatory')
g3atmportpg1SGNumber22 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber22.setStatus('mandatory')
g3atmportpg1SGNumber23 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber23.setStatus('mandatory')
g3atmportpg1SGNumber24 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber24.setStatus('mandatory')
g3atmportpg1SGNumber25 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber25.setStatus('mandatory')
g3atmportpg1SGNumber26 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber26.setStatus('mandatory')
g3atmportpg1SGNumber27 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber27.setStatus('mandatory')
g3atmportpg1SGNumber28 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber28.setStatus('mandatory')
g3atmportpg1SGNumber29 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber29.setStatus('mandatory')
g3atmportpg1SGNumber30 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber30.setStatus('mandatory')
g3atmportpg1SGNumber31 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber31.setStatus('mandatory')
g3atmportpg1SGNumber32 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber32.setStatus('mandatory')
g3atmportpg1SGNumber33 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber33.setStatus('mandatory')
g3atmportpg1SGNumber34 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber34.setStatus('mandatory')
g3atmportpg1SGNumber35 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber35.setStatus('mandatory')
g3atmportpg1SGNumber36 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber36.setStatus('mandatory')
g3atmportpg1SGNumber37 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber37.setStatus('mandatory')
g3atmportpg1SGNumber38 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber38.setStatus('mandatory')
g3atmportpg1SGNumber39 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber39.setStatus('mandatory')
g3atmportpg1SGNumber40 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber40.setStatus('mandatory')
g3atmportpg1SGNumber41 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber41.setStatus('mandatory')
g3atmportpg1SGNumber42 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber42.setStatus('mandatory')
g3atmportpg1SGNumber43 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber43.setStatus('mandatory')
g3atmportpg1SGNumber44 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber44.setStatus('mandatory')
g3atmportpg1SGNumber45 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber45.setStatus('mandatory')
g3atmportpg1SGNumber46 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber46.setStatus('mandatory')
g3atmportpg1SGNumber47 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber47.setStatus('mandatory')
g3atmportpg1SGNumber48 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber48.setStatus('mandatory')
g3atmportpg1SGNumber49 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber49.setStatus('mandatory')
g3atmportpg1SGNumber50 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber50.setStatus('mandatory')
g3atmportpg1SGNumber51 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber51.setStatus('mandatory')
g3atmportpg1SGNumber52 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber52.setStatus('mandatory')
g3atmportpg1SGNumber53 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber53.setStatus('mandatory')
g3atmportpg1SGNumber54 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber54.setStatus('mandatory')
g3atmportpg1SGNumber55 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber55.setStatus('mandatory')
g3atmportpg1SGNumber56 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber56.setStatus('mandatory')
g3atmportpg1SGNumber57 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber57.setStatus('mandatory')
g3atmportpg1SGNumber58 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber58.setStatus('mandatory')
g3atmportpg1SGNumber59 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber59.setStatus('mandatory')
g3atmportpg1SGNumber60 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber60.setStatus('mandatory')
g3atmportpg1SGNumber61 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber61.setStatus('mandatory')
g3atmportpg1SGNumber62 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber62.setStatus('mandatory')
g3atmportpg1SGNumber63 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber63.setStatus('mandatory')
g3atmportpg1SGNumber64 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber64.setStatus('mandatory')
g3atmportpg1SGNumber65 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber65.setStatus('mandatory')
g3atmportpg1SGNumber66 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber66.setStatus('mandatory')
g3atmportpg1SGNumber67 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber67.setStatus('mandatory')
g3atmportpg1SGNumber68 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber68.setStatus('mandatory')
g3atmportpg1SGNumber69 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber69.setStatus('mandatory')
g3atmportpg1SGNumber70 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber70.setStatus('mandatory')
g3atmportpg1SGNumber71 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber71.setStatus('mandatory')
g3atmportpg1SGNumber72 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber72.setStatus('mandatory')
g3atmportpg1SGNumber73 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber73.setStatus('mandatory')
g3atmportpg1SGNumber74 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber74.setStatus('mandatory')
g3atmportpg1SGNumber75 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber75.setStatus('mandatory')
g3atmportpg1SGNumber76 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber76.setStatus('mandatory')
g3atmportpg1SGNumber77 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber77.setStatus('mandatory')
g3atmportpg1SGNumber78 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber78.setStatus('mandatory')
g3atmportpg1SGNumber79 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber79.setStatus('mandatory')
g3atmportpg1SGNumber80 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber80.setStatus('mandatory')
g3atmportpg1SGNumber81 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber81.setStatus('mandatory')
g3atmportpg1SGNumber82 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber82.setStatus('mandatory')
g3atmportpg1SGNumber83 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber83.setStatus('mandatory')
g3atmportpg1SGNumber84 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber84.setStatus('mandatory')
g3atmportpg1SGNumber85 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber85.setStatus('mandatory')
g3atmportpg1SGNumber86 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber86.setStatus('mandatory')
g3atmportpg1SGNumber87 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber87.setStatus('mandatory')
g3atmportpg1SGNumber88 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber88.setStatus('mandatory')
g3atmportpg1SGNumber89 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber89.setStatus('mandatory')
g3atmportpg1SGNumber90 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1SGNumber90.setStatus('mandatory')
g3atmportpg1TGNumber1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber1.setStatus('mandatory')
g3atmportpg1TGNumber2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber2.setStatus('mandatory')
g3atmportpg1TGNumber3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber3.setStatus('mandatory')
g3atmportpg1TGNumber4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber4.setStatus('mandatory')
g3atmportpg1TGNumber5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber5.setStatus('mandatory')
g3atmportpg1TGNumber6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber6.setStatus('mandatory')
g3atmportpg1TGNumber7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber7.setStatus('mandatory')
g3atmportpg1TGNumber8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber8.setStatus('mandatory')
g3atmportpg1TGNumber9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber9.setStatus('mandatory')
g3atmportpg1TGNumber10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber10.setStatus('mandatory')
g3atmportpg1TGNumber11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber11.setStatus('mandatory')
g3atmportpg1TGNumber12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber12.setStatus('mandatory')
g3atmportpg1TGNumber13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber13.setStatus('mandatory')
g3atmportpg1TGNumber14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber14.setStatus('mandatory')
g3atmportpg1TGNumber15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber15.setStatus('mandatory')
g3atmportpg1TGNumber16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber16.setStatus('mandatory')
g3atmportpg1TGNumber17 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber17.setStatus('mandatory')
g3atmportpg1TGNumber18 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber18.setStatus('mandatory')
g3atmportpg1TGNumber19 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber19.setStatus('mandatory')
g3atmportpg1TGNumber20 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 111), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber20.setStatus('mandatory')
g3atmportpg1TGNumber21 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 112), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber21.setStatus('mandatory')
g3atmportpg1TGNumber22 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 113), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber22.setStatus('mandatory')
g3atmportpg1TGNumber23 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 114), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber23.setStatus('mandatory')
g3atmportpg1TGNumber24 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 115), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber24.setStatus('mandatory')
g3atmportpg1TGNumber25 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 116), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber25.setStatus('mandatory')
g3atmportpg1TGNumber26 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 117), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber26.setStatus('mandatory')
g3atmportpg1TGNumber27 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 118), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber27.setStatus('mandatory')
g3atmportpg1TGNumber28 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 119), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber28.setStatus('mandatory')
g3atmportpg1TGNumber29 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 120), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber29.setStatus('mandatory')
g3atmportpg1TGNumber30 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 121), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber30.setStatus('mandatory')
g3atmportpg1TGNumber31 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 122), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber31.setStatus('mandatory')
g3atmportpg1TGNumber32 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 123), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber32.setStatus('mandatory')
g3atmportpg1TGNumber33 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 124), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber33.setStatus('mandatory')
g3atmportpg1TGNumber34 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 125), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber34.setStatus('mandatory')
g3atmportpg1TGNumber35 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 126), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber35.setStatus('mandatory')
g3atmportpg1TGNumber36 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 127), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber36.setStatus('mandatory')
g3atmportpg1TGNumber37 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 128), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber37.setStatus('mandatory')
g3atmportpg1TGNumber38 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 129), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber38.setStatus('mandatory')
g3atmportpg1TGNumber39 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 130), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber39.setStatus('mandatory')
g3atmportpg1TGNumber40 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 131), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber40.setStatus('mandatory')
g3atmportpg1TGNumber41 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 132), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber41.setStatus('mandatory')
g3atmportpg1TGNumber42 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 133), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber42.setStatus('mandatory')
g3atmportpg1TGNumber43 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 134), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber43.setStatus('mandatory')
g3atmportpg1TGNumber44 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 135), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber44.setStatus('mandatory')
g3atmportpg1TGNumber45 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 136), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber45.setStatus('mandatory')
g3atmportpg1TGNumber46 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 137), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber46.setStatus('mandatory')
g3atmportpg1TGNumber47 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 138), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber47.setStatus('mandatory')
g3atmportpg1TGNumber48 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 139), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber48.setStatus('mandatory')
g3atmportpg1TGNumber49 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 140), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber49.setStatus('mandatory')
g3atmportpg1TGNumber50 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 141), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber50.setStatus('mandatory')
g3atmportpg1TGNumber51 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 142), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber51.setStatus('mandatory')
g3atmportpg1TGNumber52 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 143), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber52.setStatus('mandatory')
g3atmportpg1TGNumber53 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 144), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber53.setStatus('mandatory')
g3atmportpg1TGNumber54 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 145), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber54.setStatus('mandatory')
g3atmportpg1TGNumber55 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 146), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber55.setStatus('mandatory')
g3atmportpg1TGNumber56 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 147), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber56.setStatus('mandatory')
g3atmportpg1TGNumber57 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 148), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber57.setStatus('mandatory')
g3atmportpg1TGNumber58 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 149), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber58.setStatus('mandatory')
g3atmportpg1TGNumber59 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 150), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber59.setStatus('mandatory')
g3atmportpg1TGNumber60 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 151), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber60.setStatus('mandatory')
g3atmportpg1TGNumber61 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 152), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber61.setStatus('mandatory')
g3atmportpg1TGNumber62 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 153), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber62.setStatus('mandatory')
g3atmportpg1TGNumber63 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 154), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber63.setStatus('mandatory')
g3atmportpg1TGNumber64 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 155), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber64.setStatus('mandatory')
g3atmportpg1TGNumber65 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 156), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber65.setStatus('mandatory')
g3atmportpg1TGNumber66 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 157), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber66.setStatus('mandatory')
g3atmportpg1TGNumber67 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 158), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber67.setStatus('mandatory')
g3atmportpg1TGNumber68 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 159), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber68.setStatus('mandatory')
g3atmportpg1TGNumber69 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 160), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber69.setStatus('mandatory')
g3atmportpg1TGNumber70 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 161), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber70.setStatus('mandatory')
g3atmportpg1TGNumber71 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 162), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber71.setStatus('mandatory')
g3atmportpg1TGNumber72 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 163), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber72.setStatus('mandatory')
g3atmportpg1TGNumber73 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 164), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber73.setStatus('mandatory')
g3atmportpg1TGNumber74 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 165), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber74.setStatus('mandatory')
g3atmportpg1TGNumber75 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 166), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber75.setStatus('mandatory')
g3atmportpg1TGNumber76 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 167), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber76.setStatus('mandatory')
g3atmportpg1TGNumber77 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 168), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber77.setStatus('mandatory')
g3atmportpg1TGNumber78 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 169), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber78.setStatus('mandatory')
g3atmportpg1TGNumber79 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 170), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber79.setStatus('mandatory')
g3atmportpg1TGNumber80 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 171), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber80.setStatus('mandatory')
g3atmportpg1TGNumber81 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 172), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber81.setStatus('mandatory')
g3atmportpg1TGNumber82 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 173), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber82.setStatus('mandatory')
g3atmportpg1TGNumber83 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 174), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber83.setStatus('mandatory')
g3atmportpg1TGNumber84 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 175), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber84.setStatus('mandatory')
g3atmportpg1TGNumber85 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 176), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber85.setStatus('mandatory')
g3atmportpg1TGNumber86 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 177), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber86.setStatus('mandatory')
g3atmportpg1TGNumber87 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 178), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber87.setStatus('mandatory')
g3atmportpg1TGNumber88 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 179), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber88.setStatus('mandatory')
g3atmportpg1TGNumber89 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 180), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber89.setStatus('mandatory')
g3atmportpg1TGNumber90 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 46, 6, 1, 181), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg1TGNumber90.setStatus('mandatory')
g3atmportpg2Tage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2Tage.setStatus('mandatory')
g3atmportpg2Tintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmportpg2Tintvl.setStatus('mandatory')
g3atmportpg2Tdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2Tdelay.setStatus('mandatory')
g3atmportpg2Tretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmportpg2Tretrieve.setStatus('mandatory')
g3atmportpg2Tcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2Tcount.setStatus('mandatory')
g3atmportpg2Table = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6), )
if mibBuilder.loadTexts: g3atmportpg2Table.setStatus('mandatory')
g3atmportpg2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3atmportpg2Location"))
if mibBuilder.loadTexts: g3atmportpg2Entry.setStatus('mandatory')
g3atmportpg2Location = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2Location.setStatus('mandatory')
g3atmportpg2SGNumber91 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber91.setStatus('mandatory')
g3atmportpg2SGNumber92 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber92.setStatus('mandatory')
g3atmportpg2SGNumber93 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber93.setStatus('mandatory')
g3atmportpg2SGNumber94 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber94.setStatus('mandatory')
g3atmportpg2SGNumber95 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber95.setStatus('mandatory')
g3atmportpg2SGNumber96 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber96.setStatus('mandatory')
g3atmportpg2SGNumber97 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber97.setStatus('mandatory')
g3atmportpg2SGNumber98 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber98.setStatus('mandatory')
g3atmportpg2SGNumber99 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber99.setStatus('mandatory')
g3atmportpg2SGNumber100 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber100.setStatus('mandatory')
g3atmportpg2SGNumber101 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber101.setStatus('mandatory')
g3atmportpg2SGNumber102 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber102.setStatus('mandatory')
g3atmportpg2SGNumber103 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber103.setStatus('mandatory')
g3atmportpg2SGNumber104 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber104.setStatus('mandatory')
g3atmportpg2SGNumber105 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber105.setStatus('mandatory')
g3atmportpg2SGNumber106 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber106.setStatus('mandatory')
g3atmportpg2SGNumber107 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber107.setStatus('mandatory')
g3atmportpg2SGNumber108 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber108.setStatus('mandatory')
g3atmportpg2SGNumber109 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber109.setStatus('mandatory')
g3atmportpg2SGNumber110 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber110.setStatus('mandatory')
g3atmportpg2SGNumber111 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber111.setStatus('mandatory')
g3atmportpg2SGNumber112 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber112.setStatus('mandatory')
g3atmportpg2SGNumber113 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber113.setStatus('mandatory')
g3atmportpg2SGNumber114 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber114.setStatus('mandatory')
g3atmportpg2SGNumber115 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber115.setStatus('mandatory')
g3atmportpg2SGNumber116 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber116.setStatus('mandatory')
g3atmportpg2SGNumber117 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber117.setStatus('mandatory')
g3atmportpg2SGNumber118 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber118.setStatus('mandatory')
g3atmportpg2SGNumber119 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber119.setStatus('mandatory')
g3atmportpg2SGNumber120 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber120.setStatus('mandatory')
g3atmportpg2SGNumber121 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber121.setStatus('mandatory')
g3atmportpg2SGNumber122 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber122.setStatus('mandatory')
g3atmportpg2SGNumber123 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber123.setStatus('mandatory')
g3atmportpg2SGNumber124 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber124.setStatus('mandatory')
g3atmportpg2SGNumber125 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber125.setStatus('mandatory')
g3atmportpg2SGNumber126 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber126.setStatus('mandatory')
g3atmportpg2SGNumber127 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber127.setStatus('mandatory')
g3atmportpg2SGNumber128 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber128.setStatus('mandatory')
g3atmportpg2SGNumber129 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber129.setStatus('mandatory')
g3atmportpg2SGNumber130 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber130.setStatus('mandatory')
g3atmportpg2SGNumber131 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber131.setStatus('mandatory')
g3atmportpg2SGNumber132 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber132.setStatus('mandatory')
g3atmportpg2SGNumber133 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber133.setStatus('mandatory')
g3atmportpg2SGNumber134 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber134.setStatus('mandatory')
g3atmportpg2SGNumber135 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber135.setStatus('mandatory')
g3atmportpg2SGNumber136 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber136.setStatus('mandatory')
g3atmportpg2SGNumber137 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber137.setStatus('mandatory')
g3atmportpg2SGNumber138 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber138.setStatus('mandatory')
g3atmportpg2SGNumber139 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber139.setStatus('mandatory')
g3atmportpg2SGNumber140 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber140.setStatus('mandatory')
g3atmportpg2SGNumber141 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber141.setStatus('mandatory')
g3atmportpg2SGNumber142 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber142.setStatus('mandatory')
g3atmportpg2SGNumber143 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber143.setStatus('mandatory')
g3atmportpg2SGNumber144 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber144.setStatus('mandatory')
g3atmportpg2SGNumber145 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber145.setStatus('mandatory')
g3atmportpg2SGNumber146 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber146.setStatus('mandatory')
g3atmportpg2SGNumber147 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber147.setStatus('mandatory')
g3atmportpg2SGNumber148 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber148.setStatus('mandatory')
g3atmportpg2SGNumber149 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber149.setStatus('mandatory')
g3atmportpg2SGNumber150 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber150.setStatus('mandatory')
g3atmportpg2SGNumber151 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber151.setStatus('mandatory')
g3atmportpg2SGNumber152 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber152.setStatus('mandatory')
g3atmportpg2SGNumber153 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber153.setStatus('mandatory')
g3atmportpg2SGNumber154 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber154.setStatus('mandatory')
g3atmportpg2SGNumber155 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber155.setStatus('mandatory')
g3atmportpg2SGNumber156 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber156.setStatus('mandatory')
g3atmportpg2SGNumber157 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber157.setStatus('mandatory')
g3atmportpg2SGNumber158 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber158.setStatus('mandatory')
g3atmportpg2SGNumber159 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber159.setStatus('mandatory')
g3atmportpg2SGNumber160 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber160.setStatus('mandatory')
g3atmportpg2SGNumber161 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber161.setStatus('mandatory')
g3atmportpg2SGNumber162 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber162.setStatus('mandatory')
g3atmportpg2SGNumber163 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber163.setStatus('mandatory')
g3atmportpg2SGNumber164 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber164.setStatus('mandatory')
g3atmportpg2SGNumber165 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber165.setStatus('mandatory')
g3atmportpg2SGNumber166 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber166.setStatus('mandatory')
g3atmportpg2SGNumber167 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber167.setStatus('mandatory')
g3atmportpg2SGNumber168 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber168.setStatus('mandatory')
g3atmportpg2SGNumber169 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber169.setStatus('mandatory')
g3atmportpg2SGNumber170 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber170.setStatus('mandatory')
g3atmportpg2SGNumber171 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber171.setStatus('mandatory')
g3atmportpg2SGNumber172 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber172.setStatus('mandatory')
g3atmportpg2SGNumber173 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber173.setStatus('mandatory')
g3atmportpg2SGNumber174 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber174.setStatus('mandatory')
g3atmportpg2SGNumber175 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber175.setStatus('mandatory')
g3atmportpg2SGNumber176 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber176.setStatus('mandatory')
g3atmportpg2SGNumber177 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber177.setStatus('mandatory')
g3atmportpg2SGNumber178 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber178.setStatus('mandatory')
g3atmportpg2SGNumber179 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber179.setStatus('mandatory')
g3atmportpg2SGNumber180 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2SGNumber180.setStatus('mandatory')
g3atmportpg2TGNumber91 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber91.setStatus('mandatory')
g3atmportpg2TGNumber92 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber92.setStatus('mandatory')
g3atmportpg2TGNumber93 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber93.setStatus('mandatory')
g3atmportpg2TGNumber94 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber94.setStatus('mandatory')
g3atmportpg2TGNumber95 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber95.setStatus('mandatory')
g3atmportpg2TGNumber96 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber96.setStatus('mandatory')
g3atmportpg2TGNumber97 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber97.setStatus('mandatory')
g3atmportpg2TGNumber98 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber98.setStatus('mandatory')
g3atmportpg2TGNumber99 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber99.setStatus('mandatory')
g3atmportpg2TGNumber100 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber100.setStatus('mandatory')
g3atmportpg2TGNumber101 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber101.setStatus('mandatory')
g3atmportpg2TGNumber102 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber102.setStatus('mandatory')
g3atmportpg2TGNumber103 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber103.setStatus('mandatory')
g3atmportpg2TGNumber104 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber104.setStatus('mandatory')
g3atmportpg2TGNumber105 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber105.setStatus('mandatory')
g3atmportpg2TGNumber106 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber106.setStatus('mandatory')
g3atmportpg2TGNumber107 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber107.setStatus('mandatory')
g3atmportpg2TGNumber108 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber108.setStatus('mandatory')
g3atmportpg2TGNumber109 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber109.setStatus('mandatory')
g3atmportpg2TGNumber110 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 111), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber110.setStatus('mandatory')
g3atmportpg2TGNumber111 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 112), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber111.setStatus('mandatory')
g3atmportpg2TGNumber112 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 113), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber112.setStatus('mandatory')
g3atmportpg2TGNumber113 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 114), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber113.setStatus('mandatory')
g3atmportpg2TGNumber114 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 115), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber114.setStatus('mandatory')
g3atmportpg2TGNumber115 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 116), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber115.setStatus('mandatory')
g3atmportpg2TGNumber116 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 117), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber116.setStatus('mandatory')
g3atmportpg2TGNumber117 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 118), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber117.setStatus('mandatory')
g3atmportpg2TGNumber118 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 119), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber118.setStatus('mandatory')
g3atmportpg2TGNumber119 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 120), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber119.setStatus('mandatory')
g3atmportpg2TGNumber120 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 121), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber120.setStatus('mandatory')
g3atmportpg2TGNumber121 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 122), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber121.setStatus('mandatory')
g3atmportpg2TGNumber122 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 123), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber122.setStatus('mandatory')
g3atmportpg2TGNumber123 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 124), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber123.setStatus('mandatory')
g3atmportpg2TGNumber124 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 125), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber124.setStatus('mandatory')
g3atmportpg2TGNumber125 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 126), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber125.setStatus('mandatory')
g3atmportpg2TGNumber126 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 127), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber126.setStatus('mandatory')
g3atmportpg2TGNumber127 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 128), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber127.setStatus('mandatory')
g3atmportpg2TGNumber128 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 129), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber128.setStatus('mandatory')
g3atmportpg2TGNumber129 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 130), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber129.setStatus('mandatory')
g3atmportpg2TGNumber130 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 131), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber130.setStatus('mandatory')
g3atmportpg2TGNumber131 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 132), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber131.setStatus('mandatory')
g3atmportpg2TGNumber132 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 133), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber132.setStatus('mandatory')
g3atmportpg2TGNumber133 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 134), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber133.setStatus('mandatory')
g3atmportpg2TGNumber134 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 135), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber134.setStatus('mandatory')
g3atmportpg2TGNumber135 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 136), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber135.setStatus('mandatory')
g3atmportpg2TGNumber136 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 137), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber136.setStatus('mandatory')
g3atmportpg2TGNumber137 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 138), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber137.setStatus('mandatory')
g3atmportpg2TGNumber138 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 139), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber138.setStatus('mandatory')
g3atmportpg2TGNumber139 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 140), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber139.setStatus('mandatory')
g3atmportpg2TGNumber140 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 141), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber140.setStatus('mandatory')
g3atmportpg2TGNumber141 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 142), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber141.setStatus('mandatory')
g3atmportpg2TGNumber142 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 143), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber142.setStatus('mandatory')
g3atmportpg2TGNumber143 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 144), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber143.setStatus('mandatory')
g3atmportpg2TGNumber144 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 145), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber144.setStatus('mandatory')
g3atmportpg2TGNumber145 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 146), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber145.setStatus('mandatory')
g3atmportpg2TGNumber146 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 147), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber146.setStatus('mandatory')
g3atmportpg2TGNumber147 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 148), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber147.setStatus('mandatory')
g3atmportpg2TGNumber148 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 149), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber148.setStatus('mandatory')
g3atmportpg2TGNumber149 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 150), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber149.setStatus('mandatory')
g3atmportpg2TGNumber150 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 151), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber150.setStatus('mandatory')
g3atmportpg2TGNumber151 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 152), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber151.setStatus('mandatory')
g3atmportpg2TGNumber152 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 153), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber152.setStatus('mandatory')
g3atmportpg2TGNumber153 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 154), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber153.setStatus('mandatory')
g3atmportpg2TGNumber154 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 155), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber154.setStatus('mandatory')
g3atmportpg2TGNumber155 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 156), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber155.setStatus('mandatory')
g3atmportpg2TGNumber156 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 157), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber156.setStatus('mandatory')
g3atmportpg2TGNumber157 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 158), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber157.setStatus('mandatory')
g3atmportpg2TGNumber158 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 159), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber158.setStatus('mandatory')
g3atmportpg2TGNumber159 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 160), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber159.setStatus('mandatory')
g3atmportpg2TGNumber160 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 161), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber160.setStatus('mandatory')
g3atmportpg2TGNumber161 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 162), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber161.setStatus('mandatory')
g3atmportpg2TGNumber162 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 163), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber162.setStatus('mandatory')
g3atmportpg2TGNumber163 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 164), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber163.setStatus('mandatory')
g3atmportpg2TGNumber164 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 165), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber164.setStatus('mandatory')
g3atmportpg2TGNumber165 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 166), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber165.setStatus('mandatory')
g3atmportpg2TGNumber166 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 167), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber166.setStatus('mandatory')
g3atmportpg2TGNumber167 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 168), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber167.setStatus('mandatory')
g3atmportpg2TGNumber168 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 169), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber168.setStatus('mandatory')
g3atmportpg2TGNumber169 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 170), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber169.setStatus('mandatory')
g3atmportpg2TGNumber170 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 171), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber170.setStatus('mandatory')
g3atmportpg2TGNumber171 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 172), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber171.setStatus('mandatory')
g3atmportpg2TGNumber172 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 173), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber172.setStatus('mandatory')
g3atmportpg2TGNumber173 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 174), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber173.setStatus('mandatory')
g3atmportpg2TGNumber174 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 175), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber174.setStatus('mandatory')
g3atmportpg2TGNumber175 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 176), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber175.setStatus('mandatory')
g3atmportpg2TGNumber176 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 177), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber176.setStatus('mandatory')
g3atmportpg2TGNumber177 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 178), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber177.setStatus('mandatory')
g3atmportpg2TGNumber178 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 179), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber178.setStatus('mandatory')
g3atmportpg2TGNumber179 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 180), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber179.setStatus('mandatory')
g3atmportpg2TGNumber180 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 47, 6, 1, 181), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg2TGNumber180.setStatus('mandatory')
g3atmportpg3Tage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3Tage.setStatus('mandatory')
g3atmportpg3Tintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmportpg3Tintvl.setStatus('mandatory')
g3atmportpg3Tdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3Tdelay.setStatus('mandatory')
g3atmportpg3Tretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmportpg3Tretrieve.setStatus('mandatory')
g3atmportpg3Tcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3Tcount.setStatus('mandatory')
g3atmportpg3Table = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6), )
if mibBuilder.loadTexts: g3atmportpg3Table.setStatus('mandatory')
g3atmportpg3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3atmportpg3Location"))
if mibBuilder.loadTexts: g3atmportpg3Entry.setStatus('mandatory')
g3atmportpg3Location = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3Location.setStatus('mandatory')
g3atmportpg3SGNumber181 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber181.setStatus('mandatory')
g3atmportpg3SGNumber182 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber182.setStatus('mandatory')
g3atmportpg3SGNumber183 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber183.setStatus('mandatory')
g3atmportpg3SGNumber184 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber184.setStatus('mandatory')
g3atmportpg3SGNumber185 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber185.setStatus('mandatory')
g3atmportpg3SGNumber186 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber186.setStatus('mandatory')
g3atmportpg3SGNumber187 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber187.setStatus('mandatory')
g3atmportpg3SGNumber188 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber188.setStatus('mandatory')
g3atmportpg3SGNumber189 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber189.setStatus('mandatory')
g3atmportpg3SGNumber190 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber190.setStatus('mandatory')
g3atmportpg3SGNumber191 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber191.setStatus('mandatory')
g3atmportpg3SGNumber192 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber192.setStatus('mandatory')
g3atmportpg3SGNumber193 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber193.setStatus('mandatory')
g3atmportpg3SGNumber194 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber194.setStatus('mandatory')
g3atmportpg3SGNumber195 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber195.setStatus('mandatory')
g3atmportpg3SGNumber196 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber196.setStatus('mandatory')
g3atmportpg3SGNumber197 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber197.setStatus('mandatory')
g3atmportpg3SGNumber198 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber198.setStatus('mandatory')
g3atmportpg3SGNumber199 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber199.setStatus('mandatory')
g3atmportpg3SGNumber200 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber200.setStatus('mandatory')
g3atmportpg3SGNumber201 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber201.setStatus('mandatory')
g3atmportpg3SGNumber202 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber202.setStatus('mandatory')
g3atmportpg3SGNumber203 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber203.setStatus('mandatory')
g3atmportpg3SGNumber204 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber204.setStatus('mandatory')
g3atmportpg3SGNumber205 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber205.setStatus('mandatory')
g3atmportpg3SGNumber206 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber206.setStatus('mandatory')
g3atmportpg3SGNumber207 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber207.setStatus('mandatory')
g3atmportpg3SGNumber208 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber208.setStatus('mandatory')
g3atmportpg3SGNumber209 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber209.setStatus('mandatory')
g3atmportpg3SGNumber210 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber210.setStatus('mandatory')
g3atmportpg3SGNumber211 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber211.setStatus('mandatory')
g3atmportpg3SGNumber212 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber212.setStatus('mandatory')
g3atmportpg3SGNumber213 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber213.setStatus('mandatory')
g3atmportpg3SGNumber214 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber214.setStatus('mandatory')
g3atmportpg3SGNumber215 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber215.setStatus('mandatory')
g3atmportpg3SGNumber216 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber216.setStatus('mandatory')
g3atmportpg3SGNumber217 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber217.setStatus('mandatory')
g3atmportpg3SGNumber218 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber218.setStatus('mandatory')
g3atmportpg3SGNumber219 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber219.setStatus('mandatory')
g3atmportpg3SGNumber220 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber220.setStatus('mandatory')
g3atmportpg3SGNumber221 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber221.setStatus('mandatory')
g3atmportpg3SGNumber222 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber222.setStatus('mandatory')
g3atmportpg3SGNumber223 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber223.setStatus('mandatory')
g3atmportpg3SGNumber224 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber224.setStatus('mandatory')
g3atmportpg3SGNumber225 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber225.setStatus('mandatory')
g3atmportpg3SGNumber226 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber226.setStatus('mandatory')
g3atmportpg3SGNumber227 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber227.setStatus('mandatory')
g3atmportpg3SGNumber228 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber228.setStatus('mandatory')
g3atmportpg3SGNumber229 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber229.setStatus('mandatory')
g3atmportpg3SGNumber230 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber230.setStatus('mandatory')
g3atmportpg3SGNumber231 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber231.setStatus('mandatory')
g3atmportpg3SGNumber232 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber232.setStatus('mandatory')
g3atmportpg3SGNumber233 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber233.setStatus('mandatory')
g3atmportpg3SGNumber234 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber234.setStatus('mandatory')
g3atmportpg3SGNumber235 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber235.setStatus('mandatory')
g3atmportpg3SGNumber236 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber236.setStatus('mandatory')
g3atmportpg3SGNumber237 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber237.setStatus('mandatory')
g3atmportpg3SGNumber238 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber238.setStatus('mandatory')
g3atmportpg3SGNumber239 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber239.setStatus('mandatory')
g3atmportpg3SGNumber240 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber240.setStatus('mandatory')
g3atmportpg3SGNumber241 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber241.setStatus('mandatory')
g3atmportpg3SGNumber242 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber242.setStatus('mandatory')
g3atmportpg3SGNumber243 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber243.setStatus('mandatory')
g3atmportpg3SGNumber244 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber244.setStatus('mandatory')
g3atmportpg3SGNumber245 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3SGNumber245.setStatus('mandatory')
g3atmportpg3LSGNumber1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber1.setStatus('mandatory')
g3atmportpg3LSGNumber2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber2.setStatus('mandatory')
g3atmportpg3LSGNumber3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber3.setStatus('mandatory')
g3atmportpg3LSGNumber4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber4.setStatus('mandatory')
g3atmportpg3LSGNumber5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber5.setStatus('mandatory')
g3atmportpg3LSGNumber6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber6.setStatus('mandatory')
g3atmportpg3LSGNumber7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber7.setStatus('mandatory')
g3atmportpg3LSGNumber8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber8.setStatus('mandatory')
g3atmportpg3LSGNumber9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber9.setStatus('mandatory')
g3atmportpg3LSGNumber10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber10.setStatus('mandatory')
g3atmportpg3LSGNumber11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LSGNumber11.setStatus('mandatory')
g3atmportpg3TGNumber181 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber181.setStatus('mandatory')
g3atmportpg3TGNumber182 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber182.setStatus('mandatory')
g3atmportpg3TGNumber183 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber183.setStatus('mandatory')
g3atmportpg3TGNumber184 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber184.setStatus('mandatory')
g3atmportpg3TGNumber185 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber185.setStatus('mandatory')
g3atmportpg3TGNumber186 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber186.setStatus('mandatory')
g3atmportpg3TGNumber187 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber187.setStatus('mandatory')
g3atmportpg3TGNumber188 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber188.setStatus('mandatory')
g3atmportpg3TGNumber189 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber189.setStatus('mandatory')
g3atmportpg3TGNumber190 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber190.setStatus('mandatory')
g3atmportpg3TGNumber191 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber191.setStatus('mandatory')
g3atmportpg3TGNumber192 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber192.setStatus('mandatory')
g3atmportpg3TGNumber193 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber193.setStatus('mandatory')
g3atmportpg3TGNumber194 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber194.setStatus('mandatory')
g3atmportpg3TGNumber195 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber195.setStatus('mandatory')
g3atmportpg3TGNumber196 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber196.setStatus('mandatory')
g3atmportpg3TGNumber197 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber197.setStatus('mandatory')
g3atmportpg3TGNumber198 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber198.setStatus('mandatory')
g3atmportpg3TGNumber199 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber199.setStatus('mandatory')
g3atmportpg3TGNumber200 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber200.setStatus('mandatory')
g3atmportpg3TGNumber201 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber201.setStatus('mandatory')
g3atmportpg3TGNumber202 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber202.setStatus('mandatory')
g3atmportpg3TGNumber203 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber203.setStatus('mandatory')
g3atmportpg3TGNumber204 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber204.setStatus('mandatory')
g3atmportpg3TGNumber205 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber205.setStatus('mandatory')
g3atmportpg3TGNumber206 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber206.setStatus('mandatory')
g3atmportpg3TGNumber207 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber207.setStatus('mandatory')
g3atmportpg3TGNumber208 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber208.setStatus('mandatory')
g3atmportpg3TGNumber209 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber209.setStatus('mandatory')
g3atmportpg3TGNumber210 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber210.setStatus('mandatory')
g3atmportpg3TGNumber211 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber211.setStatus('mandatory')
g3atmportpg3TGNumber212 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber212.setStatus('mandatory')
g3atmportpg3TGNumber213 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber213.setStatus('mandatory')
g3atmportpg3TGNumber214 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 111), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber214.setStatus('mandatory')
g3atmportpg3TGNumber215 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 112), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber215.setStatus('mandatory')
g3atmportpg3TGNumber216 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 113), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber216.setStatus('mandatory')
g3atmportpg3TGNumber217 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 114), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber217.setStatus('mandatory')
g3atmportpg3TGNumber218 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 115), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber218.setStatus('mandatory')
g3atmportpg3TGNumber219 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 116), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber219.setStatus('mandatory')
g3atmportpg3TGNumber220 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 117), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber220.setStatus('mandatory')
g3atmportpg3TGNumber221 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 118), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber221.setStatus('mandatory')
g3atmportpg3TGNumber222 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 119), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber222.setStatus('mandatory')
g3atmportpg3TGNumber223 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 120), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber223.setStatus('mandatory')
g3atmportpg3TGNumber224 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 121), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber224.setStatus('mandatory')
g3atmportpg3TGNumber225 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 122), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber225.setStatus('mandatory')
g3atmportpg3TGNumber226 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 123), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber226.setStatus('mandatory')
g3atmportpg3TGNumber227 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 124), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber227.setStatus('mandatory')
g3atmportpg3TGNumber228 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 125), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber228.setStatus('mandatory')
g3atmportpg3TGNumber229 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 126), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber229.setStatus('mandatory')
g3atmportpg3TGNumber230 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 127), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber230.setStatus('mandatory')
g3atmportpg3TGNumber231 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 128), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber231.setStatus('mandatory')
g3atmportpg3TGNumber232 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 129), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber232.setStatus('mandatory')
g3atmportpg3TGNumber233 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 130), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber233.setStatus('mandatory')
g3atmportpg3TGNumber234 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 131), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber234.setStatus('mandatory')
g3atmportpg3TGNumber235 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 132), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber235.setStatus('mandatory')
g3atmportpg3TGNumber236 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 133), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber236.setStatus('mandatory')
g3atmportpg3TGNumber237 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 134), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber237.setStatus('mandatory')
g3atmportpg3TGNumber238 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 135), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber238.setStatus('mandatory')
g3atmportpg3TGNumber239 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 136), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber239.setStatus('mandatory')
g3atmportpg3TGNumber240 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 137), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber240.setStatus('mandatory')
g3atmportpg3TGNumber241 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 138), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber241.setStatus('mandatory')
g3atmportpg3TGNumber242 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 139), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber242.setStatus('mandatory')
g3atmportpg3TGNumber243 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 140), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber243.setStatus('mandatory')
g3atmportpg3TGNumber244 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 141), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber244.setStatus('mandatory')
g3atmportpg3TGNumber245 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 142), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3TGNumber245.setStatus('mandatory')
g3atmportpg3LTGNumber1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 143), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber1.setStatus('mandatory')
g3atmportpg3LTGNumber2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 144), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber2.setStatus('mandatory')
g3atmportpg3LTGNumber3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 145), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber3.setStatus('mandatory')
g3atmportpg3LTGNumber4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 146), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber4.setStatus('mandatory')
g3atmportpg3LTGNumber5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 147), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber5.setStatus('mandatory')
g3atmportpg3LTGNumber6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 148), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber6.setStatus('mandatory')
g3atmportpg3LTGNumber7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 149), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber7.setStatus('mandatory')
g3atmportpg3LTGNumber8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 150), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber8.setStatus('mandatory')
g3atmportpg3LTGNumber9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 151), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber9.setStatus('mandatory')
g3atmportpg3LTGNumber10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 152), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber10.setStatus('mandatory')
g3atmportpg3LTGNumber11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 48, 6, 1, 153), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmportpg3LTGNumber11.setStatus('mandatory')
g3dmoduleTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3dmoduleTage.setStatus('mandatory')
g3dmoduleTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3dmoduleTintvl.setStatus('mandatory')
g3dmoduleTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3dmoduleTdelay.setStatus('mandatory')
g3dmoduleTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3dmoduleTretrieve.setStatus('mandatory')
g3dmoduleTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3dmoduleTcount.setStatus('mandatory')
g3dmoduleTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 6), )
if mibBuilder.loadTexts: g3dmoduleTable.setStatus('mandatory')
g3dmoduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3dmoduleExtension"))
if mibBuilder.loadTexts: g3dmoduleEntry.setStatus('mandatory')
g3dmoduleExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3dmoduleExtension.setStatus('mandatory')
g3dmoduleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3dmoduleType.setStatus('mandatory')
g3dmoduleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3dmoduleName.setStatus('mandatory')
g3dmodulePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 49, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3dmodulePort.setStatus('mandatory')
g3occsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumTage.setStatus('mandatory')
g3occsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3occsumTintvl.setStatus('mandatory')
g3occsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumTdelay.setStatus('mandatory')
g3occsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3occsumTretrieve.setStatus('mandatory')
g3occsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumTcount.setStatus('mandatory')
g3occsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6), )
if mibBuilder.loadTexts: g3occsumTable.setStatus('mandatory')
g3occsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3occsumMeasHour"))
if mibBuilder.loadTexts: g3occsumEntry.setStatus('mandatory')
g3occsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumMeasHour.setStatus('mandatory')
g3occsumRunYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumRunYear.setStatus('mandatory')
g3occsumRunMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumRunMonth.setStatus('mandatory')
g3occsumRunDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumRunDay.setStatus('mandatory')
g3occsumRunHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumRunHour.setStatus('mandatory')
g3occsumPeakHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumPeakHour.setStatus('mandatory')
g3occsumStatOcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumStatOcc.setStatus('mandatory')
g3occsumCPOcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumCPOcc.setStatus('mandatory')
g3occsumSMOcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumSMOcc.setStatus('mandatory')
g3occsumIdleOcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumIdleOcc.setStatus('mandatory')
g3occsumTotCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumTotCall.setStatus('mandatory')
g3occsumTandCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumTandCall.setStatus('mandatory')
g3occsumTotAtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumTotAtt.setStatus('mandatory')
g3occsumIntcomAtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumIntcomAtt.setStatus('mandatory')
g3occsumIncAtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumIncAtt.setStatus('mandatory')
g3occsumOutAtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumOutAtt.setStatus('mandatory')
g3occsumPnetAtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 50, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3occsumPnetAtt.setStatus('mandatory')
g3attdgrpTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpTage.setStatus('mandatory')
g3attdgrpTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3attdgrpTintvl.setStatus('mandatory')
g3attdgrpTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpTdelay.setStatus('mandatory')
g3attdgrpTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3attdgrpTretrieve.setStatus('mandatory')
g3attdgrpTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpTcount.setStatus('mandatory')
g3attdgrpTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6), )
if mibBuilder.loadTexts: g3attdgrpTable.setStatus('mandatory')
g3attdgrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3attdgrpMeasType"))
if mibBuilder.loadTexts: g3attdgrpEntry.setStatus('mandatory')
g3attdgrpMeasType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpMeasType.setStatus('mandatory')
g3attdgrpMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpMeasHour.setStatus('mandatory')
g3attdgrpRunYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpRunYear.setStatus('mandatory')
g3attdgrpRunMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpRunMonth.setStatus('mandatory')
g3attdgrpRunDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpRunDay.setStatus('mandatory')
g3attdgrpRunHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpRunHour.setStatus('mandatory')
g3attdgrpGrpSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpGrpSiz.setStatus('mandatory')
g3attdgrpCallsAns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpCallsAns.setStatus('mandatory')
g3attdgrpCallsAbnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpCallsAbnd.setStatus('mandatory')
g3attdgrpCallsQued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpCallsQued.setStatus('mandatory')
g3attdgrpCallsHAbd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpCallsHAbd.setStatus('mandatory')
g3attdgrpCallsHeld = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpCallsHeld.setStatus('mandatory')
g3attdgrpTimeAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpTimeAvail.setStatus('mandatory')
g3attdgrpTimeTalk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpTimeTalk.setStatus('mandatory')
g3attdgrpTimeHeld = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpTimeHeld.setStatus('mandatory')
g3attdgrpTimeAbnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpTimeAbnd.setStatus('mandatory')
g3attdgrpSpeedAns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 51, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdgrpSpeedAns.setStatus('mandatory')
g3attdposTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposTage.setStatus('mandatory')
g3attdposTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3attdposTintvl.setStatus('mandatory')
g3attdposTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposTdelay.setStatus('mandatory')
g3attdposTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3attdposTretrieve.setStatus('mandatory')
g3attdposTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposTcount.setStatus('mandatory')
g3attdposTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6), )
if mibBuilder.loadTexts: g3attdposTable.setStatus('mandatory')
g3attdposEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3attdposAttdID"))
if mibBuilder.loadTexts: g3attdposEntry.setStatus('mandatory')
g3attdposAttdID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposAttdID.setStatus('mandatory')
g3attdposYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposYear.setStatus('mandatory')
g3attdposMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposMonth.setStatus('mandatory')
g3attdposDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposDay.setStatus('mandatory')
g3attdposHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposHour.setStatus('mandatory')
g3attdposPeakHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposPeakHour.setStatus('mandatory')
g3attdposPkTimeAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposPkTimeAvail.setStatus('mandatory')
g3attdposPkTimeTalk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposPkTimeTalk.setStatus('mandatory')
g3attdposPkTimeHeld = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposPkTimeHeld.setStatus('mandatory')
g3attdposPkCallsAns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposPkCallsAns.setStatus('mandatory')
g3attdposLastHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposLastHour.setStatus('mandatory')
g3attdposTimeAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposTimeAvail.setStatus('mandatory')
g3attdposTimeTalk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposTimeTalk.setStatus('mandatory')
g3attdposTimeHeld = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposTimeHeld.setStatus('mandatory')
g3attdposCallsAns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 52, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3attdposCallsAns.setStatus('mandatory')
g3trunksumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumTage.setStatus('mandatory')
g3trunksumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunksumTintvl.setStatus('mandatory')
g3trunksumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumTdelay.setStatus('mandatory')
g3trunksumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunksumTretrieve.setStatus('mandatory')
g3trunksumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumTcount.setStatus('mandatory')
g3trunksumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6), )
if mibBuilder.loadTexts: g3trunksumTable.setStatus('mandatory')
g3trunksumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trunksumTrunkGroup"))
if mibBuilder.loadTexts: g3trunksumEntry.setStatus('mandatory')
g3trunksumTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumTrunkGroup.setStatus('mandatory')
g3trunksumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumMeasHour.setStatus('mandatory')
g3trunksumRunYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumRunYear.setStatus('mandatory')
g3trunksumRunMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumRunMonth.setStatus('mandatory')
g3trunksumRunDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumRunDay.setStatus('mandatory')
g3trunksumRunHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumRunHour.setStatus('mandatory')
g3trunksumGroupSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumGroupSize.setStatus('mandatory')
g3trunksumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumTotalUsage.setStatus('mandatory')
g3trunksumTotalSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumTotalSeize.setStatus('mandatory')
g3trunksumIncSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumIncSeize.setStatus('mandatory')
g3trunksumGrpOvfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumGrpOvfl.setStatus('mandatory')
g3trunksumQueSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumQueSiz.setStatus('mandatory')
g3trunksumCallQued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumCallQued.setStatus('mandatory')
g3trunksumQueOvf = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumQueOvf.setStatus('mandatory')
g3trunksumQueAbd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumQueAbd.setStatus('mandatory')
g3trunksumOutSrv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumOutSrv.setStatus('mandatory')
g3trunksumPercentAtb = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumPercentAtb.setStatus('mandatory')
g3trunksumPercentOutBlk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 53, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunksumPercentOutBlk.setStatus('mandatory')
g3pktrunksumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumTage.setStatus('mandatory')
g3pktrunksumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktrunksumTintvl.setStatus('mandatory')
g3pktrunksumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumTdelay.setStatus('mandatory')
g3pktrunksumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktrunksumTretrieve.setStatus('mandatory')
g3pktrunksumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumTcount.setStatus('mandatory')
g3pktrunksumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6), )
if mibBuilder.loadTexts: g3pktrunksumTable.setStatus('mandatory')
g3pktrunksumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pktrunksumTrunkGroup"))
if mibBuilder.loadTexts: g3pktrunksumEntry.setStatus('mandatory')
g3pktrunksumTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumTrunkGroup.setStatus('mandatory')
g3pktrunksumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumMeasHour.setStatus('mandatory')
g3pktrunksumRunYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumRunYear.setStatus('mandatory')
g3pktrunksumRunMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumRunMonth.setStatus('mandatory')
g3pktrunksumRunDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumRunDay.setStatus('mandatory')
g3pktrunksumRunHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumRunHour.setStatus('mandatory')
g3pktrunksumGroupSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumGroupSize.setStatus('mandatory')
g3pktrunksumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumTotalUsage.setStatus('mandatory')
g3pktrunksumTotalSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumTotalSeize.setStatus('mandatory')
g3pktrunksumIncSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumIncSeize.setStatus('mandatory')
g3pktrunksumGrpOvfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumGrpOvfl.setStatus('mandatory')
g3pktrunksumQueSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumQueSiz.setStatus('mandatory')
g3pktrunksumCallQued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumCallQued.setStatus('mandatory')
g3pktrunksumQueOvf = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumQueOvf.setStatus('mandatory')
g3pktrunksumQueAbd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumQueAbd.setStatus('mandatory')
g3pktrunksumOutSrv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumOutSrv.setStatus('mandatory')
g3pktrunksumPercentAtb = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumPercentAtb.setStatus('mandatory')
g3pktrunksumPercentOutBlk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 54, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunksumPercentOutBlk.setStatus('mandatory')
g3trunkwbsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumTage.setStatus('mandatory')
g3trunkwbsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunkwbsumTintvl.setStatus('mandatory')
g3trunkwbsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumTdelay.setStatus('mandatory')
g3trunkwbsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunkwbsumTretrieve.setStatus('mandatory')
g3trunkwbsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumTcount.setStatus('mandatory')
g3trunkwbsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6), )
if mibBuilder.loadTexts: g3trunkwbsumTable.setStatus('mandatory')
g3trunkwbsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trunkwbsumTrunkGroup"))
if mibBuilder.loadTexts: g3trunkwbsumEntry.setStatus('mandatory')
g3trunkwbsumTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumTrunkGroup.setStatus('mandatory')
g3trunkwbsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumMeasHour.setStatus('mandatory')
g3trunkwbsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumYear.setStatus('mandatory')
g3trunkwbsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumMonth.setStatus('mandatory')
g3trunkwbsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumDay.setStatus('mandatory')
g3trunkwbsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumHour.setStatus('mandatory')
g3trunkwbsumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumTotalUsage.setStatus('mandatory')
g3trunkwbsumTotalSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumTotalSeize.setStatus('mandatory')
g3trunkwbsumIncSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumIncSeize.setStatus('mandatory')
g3trunkwbsumGrpOvfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumGrpOvfl.setStatus('mandatory')
g3trunkwbsumOutSrv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumOutSrv.setStatus('mandatory')
g3trunkwbsumPercentAtb = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumPercentAtb.setStatus('mandatory')
g3trunkwbsumPercentOutBlk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 55, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkwbsumPercentOutBlk.setStatus('mandatory')
g3pktrunkwbsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumTage.setStatus('mandatory')
g3pktrunkwbsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktrunkwbsumTintvl.setStatus('mandatory')
g3pktrunkwbsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumTdelay.setStatus('mandatory')
g3pktrunkwbsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktrunkwbsumTretrieve.setStatus('mandatory')
g3pktrunkwbsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumTcount.setStatus('mandatory')
g3pktrunkwbsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6), )
if mibBuilder.loadTexts: g3pktrunkwbsumTable.setStatus('mandatory')
g3pktrunkwbsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pktrunkwbsumTrunkGroup"))
if mibBuilder.loadTexts: g3pktrunkwbsumEntry.setStatus('mandatory')
g3pktrunkwbsumTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumTrunkGroup.setStatus('mandatory')
g3pktrunkwbsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumMeasHour.setStatus('mandatory')
g3pktrunkwbsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumYear.setStatus('mandatory')
g3pktrunkwbsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumMonth.setStatus('mandatory')
g3pktrunkwbsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumDay.setStatus('mandatory')
g3pktrunkwbsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumHour.setStatus('mandatory')
g3pktrunkwbsumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumTotalUsage.setStatus('mandatory')
g3pktrunkwbsumTotalSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumTotalSeize.setStatus('mandatory')
g3pktrunkwbsumIncSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumIncSeize.setStatus('mandatory')
g3pktrunkwbsumGrpOvfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumGrpOvfl.setStatus('mandatory')
g3pktrunkwbsumOutSrv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumOutSrv.setStatus('mandatory')
g3pktrunkwbsumPercentAtb = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumPercentAtb.setStatus('mandatory')
g3pktrunkwbsumPercentOutBlk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 56, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkwbsumPercentOutBlk.setStatus('mandatory')
g3pktrunkoutTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutTage.setStatus('mandatory')
g3pktrunkoutTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktrunkoutTintvl.setStatus('mandatory')
g3pktrunkoutTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutTdelay.setStatus('mandatory')
g3pktrunkoutTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktrunkoutTretrieve.setStatus('mandatory')
g3pktrunkoutTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutTcount.setStatus('mandatory')
g3pktrunkoutTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6), )
if mibBuilder.loadTexts: g3pktrunkoutTable.setStatus('mandatory')
g3pktrunkoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pktrunkoutTrunkGroup"), (0, "G3-AVAYA-MIB", "g3pktrunkoutMember"))
if mibBuilder.loadTexts: g3pktrunkoutEntry.setStatus('mandatory')
g3pktrunkoutTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutTrunkGroup.setStatus('mandatory')
g3pktrunkoutMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutMember.setStatus('mandatory')
g3pktrunkoutYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutYear.setStatus('mandatory')
g3pktrunkoutMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutMonth.setStatus('mandatory')
g3pktrunkoutDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutDay.setStatus('mandatory')
g3pktrunkoutHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutHour.setStatus('mandatory')
g3pktrunkoutOutages = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 57, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunkoutOutages.setStatus('mandatory')
g3pktrunklightTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightTage.setStatus('mandatory')
g3pktrunklightTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktrunklightTintvl.setStatus('mandatory')
g3pktrunklightTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightTdelay.setStatus('mandatory')
g3pktrunklightTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktrunklightTretrieve.setStatus('mandatory')
g3pktrunklightTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightTcount.setStatus('mandatory')
g3pktrunklightTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6), )
if mibBuilder.loadTexts: g3pktrunklightTable.setStatus('mandatory')
g3pktrunklightEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pktrunklightTrunkGroup"), (0, "G3-AVAYA-MIB", "g3pktrunklightMember"))
if mibBuilder.loadTexts: g3pktrunklightEntry.setStatus('mandatory')
g3pktrunklightTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightTrunkGroup.setStatus('mandatory')
g3pktrunklightMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightMember.setStatus('mandatory')
g3pktrunklightYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightYear.setStatus('mandatory')
g3pktrunklightMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightMonth.setStatus('mandatory')
g3pktrunklightDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightDay.setStatus('mandatory')
g3pktrunklightHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightHour.setStatus('mandatory')
g3pktrunklightCarried = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 58, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktrunklightCarried.setStatus('mandatory')
g3pnblockTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockTage.setStatus('mandatory')
g3pnblockTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pnblockTintvl.setStatus('mandatory')
g3pnblockTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockTdelay.setStatus('mandatory')
g3pnblockTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pnblockTretrieve.setStatus('mandatory')
g3pnblockTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockTcount.setStatus('mandatory')
g3pnblockTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6), )
if mibBuilder.loadTexts: g3pnblockTable.setStatus('mandatory')
g3pnblockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pnblockPNNumber"))
if mibBuilder.loadTexts: g3pnblockEntry.setStatus('mandatory')
g3pnblockPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockPNNumber.setStatus('mandatory')
g3pnblockMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockMeasHour.setStatus('mandatory')
g3pnblockYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockYear.setStatus('mandatory')
g3pnblockMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockMonth.setStatus('mandatory')
g3pnblockDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockDay.setStatus('mandatory')
g3pnblockHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockHour.setStatus('mandatory')
g3pnblockTdmUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockTdmUsage.setStatus('mandatory')
g3pnblockTdmPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockTdmPeg.setStatus('mandatory')
g3pnblockTdmPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockTdmPeak.setStatus('mandatory')
g3pnblockTdmBlockage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockTdmBlockage.setStatus('mandatory')
g3pnblockTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockTimeSlots.setStatus('mandatory')
g3pnblockPNlinkUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockPNlinkUsage.setStatus('mandatory')
g3pnblockPNlinkPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockPNlinkPeg.setStatus('mandatory')
g3pnblockPNlinkPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockPNlinkPeak.setStatus('mandatory')
g3pnblockPNlinkBlockage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 59, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pnblockPNlinkBlockage.setStatus('mandatory')
g3pkpnblockTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockTage.setStatus('mandatory')
g3pkpnblockTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkpnblockTintvl.setStatus('mandatory')
g3pkpnblockTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockTdelay.setStatus('mandatory')
g3pkpnblockTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkpnblockTretrieve.setStatus('mandatory')
g3pkpnblockTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockTcount.setStatus('mandatory')
g3pkpnblockTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6), )
if mibBuilder.loadTexts: g3pkpnblockTable.setStatus('mandatory')
g3pkpnblockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkpnblockPNNumber"))
if mibBuilder.loadTexts: g3pkpnblockEntry.setStatus('mandatory')
g3pkpnblockPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockPNNumber.setStatus('mandatory')
g3pkpnblockMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockMeasHour.setStatus('mandatory')
g3pkpnblockYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockYear.setStatus('mandatory')
g3pkpnblockMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockMonth.setStatus('mandatory')
g3pkpnblockDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockDay.setStatus('mandatory')
g3pkpnblockHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockHour.setStatus('mandatory')
g3pkpnblockTdmUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockTdmUsage.setStatus('mandatory')
g3pkpnblockTdmPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockTdmPeg.setStatus('mandatory')
g3pkpnblockTdmPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockTdmPeak.setStatus('mandatory')
g3pkpnblockTdmBlockage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockTdmBlockage.setStatus('mandatory')
g3pkpnblockTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockTimeSlots.setStatus('mandatory')
g3pkpnblockPNlinkUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockPNlinkUsage.setStatus('mandatory')
g3pkpnblockPNlinkPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockPNlinkPeg.setStatus('mandatory')
g3pkpnblockPNlinkPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockPNlinkPeak.setStatus('mandatory')
g3pkpnblockPNlinkBlockage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 60, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkpnblockPNlinkBlockage.setStatus('mandatory')
g3snblockTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockTage.setStatus('mandatory')
g3snblockTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3snblockTintvl.setStatus('mandatory')
g3snblockTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockTdelay.setStatus('mandatory')
g3snblockTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3snblockTretrieve.setStatus('mandatory')
g3snblockTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockTcount.setStatus('mandatory')
g3snblockTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6), )
if mibBuilder.loadTexts: g3snblockTable.setStatus('mandatory')
g3snblockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3snblockSnPair"))
if mibBuilder.loadTexts: g3snblockEntry.setStatus('mandatory')
g3snblockSnPair = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockSnPair.setStatus('mandatory')
g3snblockMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockMeasHour.setStatus('mandatory')
g3snblockYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockYear.setStatus('mandatory')
g3snblockMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockMonth.setStatus('mandatory')
g3snblockDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockDay.setStatus('mandatory')
g3snblockHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockHour.setStatus('mandatory')
g3snblockTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockTimeSlots.setStatus('mandatory')
g3snblockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockUsage.setStatus('mandatory')
g3snblockSnPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockSnPeg.setStatus('mandatory')
g3snblockLinkBlockage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockLinkBlockage.setStatus('mandatory')
g3snblockOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 61, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3snblockOverflow.setStatus('mandatory')
g3pksnblockTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockTage.setStatus('mandatory')
g3pksnblockTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pksnblockTintvl.setStatus('mandatory')
g3pksnblockTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockTdelay.setStatus('mandatory')
g3pksnblockTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pksnblockTretrieve.setStatus('mandatory')
g3pksnblockTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockTcount.setStatus('mandatory')
g3pksnblockTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6), )
if mibBuilder.loadTexts: g3pksnblockTable.setStatus('mandatory')
g3pksnblockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pksnblockSnPair"))
if mibBuilder.loadTexts: g3pksnblockEntry.setStatus('mandatory')
g3pksnblockSnPair = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockSnPair.setStatus('mandatory')
g3pksnblockMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockMeasHour.setStatus('mandatory')
g3pksnblockYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockYear.setStatus('mandatory')
g3pksnblockMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockMonth.setStatus('mandatory')
g3pksnblockDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockDay.setStatus('mandatory')
g3pksnblockHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockHour.setStatus('mandatory')
g3pksnblockTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockTimeSlots.setStatus('mandatory')
g3pksnblockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockUsage.setStatus('mandatory')
g3pksnblockSnPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockSnPeg.setStatus('mandatory')
g3pksnblockLinkBlockage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockLinkBlockage.setStatus('mandatory')
g3pksnblockOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 62, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pksnblockOverflow.setStatus('mandatory')
g3huntTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntTage.setStatus('mandatory')
g3huntTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3huntTintvl.setStatus('mandatory')
g3huntTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntTdelay.setStatus('mandatory')
g3huntTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3huntTretrieve.setStatus('mandatory')
g3huntTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntTcount.setStatus('mandatory')
g3huntTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6), )
if mibBuilder.loadTexts: g3huntTable.setStatus('mandatory')
g3huntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3huntHuntGroup"))
if mibBuilder.loadTexts: g3huntEntry.setStatus('mandatory')
g3huntHuntGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntHuntGroup.setStatus('mandatory')
g3huntMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntMeasHour.setStatus('mandatory')
g3huntYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntYear.setStatus('mandatory')
g3huntMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntMonth.setStatus('mandatory')
g3huntDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntDay.setStatus('mandatory')
g3huntHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntHour.setStatus('mandatory')
g3huntGroupSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntGroupSize.setStatus('mandatory')
g3huntTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntTotalUsage.setStatus('mandatory')
g3huntCallsAns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntCallsAns.setStatus('mandatory')
g3huntCallsAban = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntCallsAban.setStatus('mandatory')
g3huntQueSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntQueSiz.setStatus('mandatory')
g3huntCallsQue = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntCallsQue.setStatus('mandatory')
g3huntQueOvfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntQueOvfl.setStatus('mandatory')
g3huntTimeAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntTimeAvail.setStatus('mandatory')
g3huntSpeedAns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 63, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntSpeedAns.setStatus('mandatory')
g3pkhuntTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntTage.setStatus('mandatory')
g3pkhuntTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkhuntTintvl.setStatus('mandatory')
g3pkhuntTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntTdelay.setStatus('mandatory')
g3pkhuntTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkhuntTretrieve.setStatus('mandatory')
g3pkhuntTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntTcount.setStatus('mandatory')
g3pkhuntTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6), )
if mibBuilder.loadTexts: g3pkhuntTable.setStatus('mandatory')
g3pkhuntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkhuntHuntGroup"))
if mibBuilder.loadTexts: g3pkhuntEntry.setStatus('mandatory')
g3pkhuntHuntGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntHuntGroup.setStatus('mandatory')
g3pkhuntMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntMeasHour.setStatus('mandatory')
g3pkhuntYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntYear.setStatus('mandatory')
g3pkhuntMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntMonth.setStatus('mandatory')
g3pkhuntDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntDay.setStatus('mandatory')
g3pkhuntHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntHour.setStatus('mandatory')
g3pkhuntGroupSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntGroupSize.setStatus('mandatory')
g3pkhuntTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntTotalUsage.setStatus('mandatory')
g3pkhuntCallsAns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntCallsAns.setStatus('mandatory')
g3pkhuntCallsAban = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntCallsAban.setStatus('mandatory')
g3pkhuntQueSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntQueSiz.setStatus('mandatory')
g3pkhuntCallsQue = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntCallsQue.setStatus('mandatory')
g3pkhuntQueOvfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntQueOvfl.setStatus('mandatory')
g3pkhuntTimeAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntTimeAvail.setStatus('mandatory')
g3pkhuntSpeedAns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 64, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkhuntSpeedAns.setStatus('mandatory')
g3huntlistTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntlistTage.setStatus('mandatory')
g3huntlistTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3huntlistTintvl.setStatus('mandatory')
g3huntlistTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntlistTdelay.setStatus('mandatory')
g3huntlistTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3huntlistTretrieve.setStatus('mandatory')
g3huntlistTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntlistTcount.setStatus('mandatory')
g3huntlistTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 6), )
if mibBuilder.loadTexts: g3huntlistTable.setStatus('mandatory')
g3huntlistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3huntlistHGNumber"))
if mibBuilder.loadTexts: g3huntlistEntry.setStatus('mandatory')
g3huntlistHGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntlistHGNumber.setStatus('mandatory')
g3huntlistName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntlistName.setStatus('mandatory')
g3huntlistExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntlistExtension.setStatus('mandatory')
g3huntlistType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 65, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3huntlistType.setStatus('mandatory')
g3tonerecTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecTage.setStatus('mandatory')
g3tonerecTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3tonerecTintvl.setStatus('mandatory')
g3tonerecTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecTdelay.setStatus('mandatory')
g3tonerecTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3tonerecTretrieve.setStatus('mandatory')
g3tonerecTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecTcount.setStatus('mandatory')
g3tonerecTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6), )
if mibBuilder.loadTexts: g3tonerecTable.setStatus('mandatory')
g3tonerecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3tonerecPNNumber"))
if mibBuilder.loadTexts: g3tonerecEntry.setStatus('mandatory')
g3tonerecPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecPNNumber.setStatus('mandatory')
g3tonerecMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecMeasHour.setStatus('mandatory')
g3tonerecYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecYear.setStatus('mandatory')
g3tonerecMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecMonth.setStatus('mandatory')
g3tonerecDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecDay.setStatus('mandatory')
g3tonerecHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecHour.setStatus('mandatory')
g3tonerecDTMFPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecDTMFPnReq.setStatus('mandatory')
g3tonerecDTMFPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecDTMFPnAlloc.setStatus('mandatory')
g3tonerecDTMFPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecDTMFPkAlloc.setStatus('mandatory')
g3tonerecDTMFTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecDTMFTotOffPN.setStatus('mandatory')
g3tonerecDTMFPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecDTMFPkOffPN.setStatus('mandatory')
g3tonerecGPTDPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecGPTDPnReq.setStatus('mandatory')
g3tonerecGPTDPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecGPTDPnAlloc.setStatus('mandatory')
g3tonerecGPTDPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecGPTDPkAlloc.setStatus('mandatory')
g3tonerecGPTDTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecGPTDTotOffPN.setStatus('mandatory')
g3tonerecGPTDPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecGPTDPkOffPN.setStatus('mandatory')
g3tonerecCCTTRPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCTTRPnReq.setStatus('mandatory')
g3tonerecCCTTRPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCTTRPnAlloc.setStatus('mandatory')
g3tonerecCCTTRPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCTTRPkAlloc.setStatus('mandatory')
g3tonerecCCTTRTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCTTRTotOffPN.setStatus('mandatory')
g3tonerecCCTTRPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCTTRPkOffPN.setStatus('mandatory')
g3tonerecCCCPTRPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCCPTRPnReq.setStatus('mandatory')
g3tonerecCCCPTRPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCCPTRPnAlloc.setStatus('mandatory')
g3tonerecCCCPTRPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCCPTRPkAlloc.setStatus('mandatory')
g3tonerecCCCPTRTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCCPTRTotOffPN.setStatus('mandatory')
g3tonerecCCCPTRPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCCPTRPkOffPN.setStatus('mandatory')
g3tonerecCCMFCRPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCMFCRPnReq.setStatus('mandatory')
g3tonerecCCMFCRPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCMFCRPnAlloc.setStatus('mandatory')
g3tonerecCCMFCRPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCMFCRPkAlloc.setStatus('mandatory')
g3tonerecCCMFCRTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCMFCRTotOffPN.setStatus('mandatory')
g3tonerecCCMFCRPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 66, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecCCMFCRPkOffPN.setStatus('mandatory')
g3pktonerecTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecTage.setStatus('mandatory')
g3pktonerecTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktonerecTintvl.setStatus('mandatory')
g3pktonerecTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecTdelay.setStatus('mandatory')
g3pktonerecTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktonerecTretrieve.setStatus('mandatory')
g3pktonerecTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecTcount.setStatus('mandatory')
g3pktonerecTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6), )
if mibBuilder.loadTexts: g3pktonerecTable.setStatus('mandatory')
g3pktonerecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pktonerecPNNumber"))
if mibBuilder.loadTexts: g3pktonerecEntry.setStatus('mandatory')
g3pktonerecPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecPNNumber.setStatus('mandatory')
g3pktonerecMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecMeasHour.setStatus('mandatory')
g3pktonerecYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecYear.setStatus('mandatory')
g3pktonerecMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecMonth.setStatus('mandatory')
g3pktonerecDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecDay.setStatus('mandatory')
g3pktonerecHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecHour.setStatus('mandatory')
g3pktonerecDTMFPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecDTMFPnReq.setStatus('mandatory')
g3pktonerecDTMFPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecDTMFPnAlloc.setStatus('mandatory')
g3pktonerecDTMFPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecDTMFPkAlloc.setStatus('mandatory')
g3pktonerecDTMFTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecDTMFTotOffPN.setStatus('mandatory')
g3pktonerecDTMFPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecDTMFPkOffPN.setStatus('mandatory')
g3pktonerecGPTDPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecGPTDPnReq.setStatus('mandatory')
g3pktonerecGPTDPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecGPTDPnAlloc.setStatus('mandatory')
g3pktonerecGPTDPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecGPTDPkAlloc.setStatus('mandatory')
g3pktonerecGPTDTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecGPTDTotOffPN.setStatus('mandatory')
g3pktonerecGPTDPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecGPTDPkOffPN.setStatus('mandatory')
g3pktonerecCCTTRPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCTTRPnReq.setStatus('mandatory')
g3pktonerecCCTTRPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCTTRPnAlloc.setStatus('mandatory')
g3pktonerecCCTTRPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCTTRPkAlloc.setStatus('mandatory')
g3pktonerecCCTTRTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCTTRTotOffPN.setStatus('mandatory')
g3pktonerecCCTTRPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCTTRPkOffPN.setStatus('mandatory')
g3pktonerecCCCPTRPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCCPTRPnReq.setStatus('mandatory')
g3pktonerecCCCPTRPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCCPTRPnAlloc.setStatus('mandatory')
g3pktonerecCCCPTRPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCCPTRPkAlloc.setStatus('mandatory')
g3pktonerecCCCPTRTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCCPTRTotOffPN.setStatus('mandatory')
g3pktonerecCCCPTRPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCCPTRPkOffPN.setStatus('mandatory')
g3pktonerecCCMFCRPnReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCMFCRPnReq.setStatus('mandatory')
g3pktonerecCCMFCRPnAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCMFCRPnAlloc.setStatus('mandatory')
g3pktonerecCCMFCRPkAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCMFCRPkAlloc.setStatus('mandatory')
g3pktonerecCCMFCRTotOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCMFCRTotOffPN.setStatus('mandatory')
g3pktonerecCCMFCRPkOffPN = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 67, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecCCMFCRPkOffPN.setStatus('mandatory')
g3tonerecsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumTage.setStatus('mandatory')
g3tonerecsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3tonerecsumTintvl.setStatus('mandatory')
g3tonerecsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumTdelay.setStatus('mandatory')
g3tonerecsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3tonerecsumTretrieve.setStatus('mandatory')
g3tonerecsumRunYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumRunYear.setStatus('mandatory')
g3tonerecsumRunMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumRunMonth.setStatus('mandatory')
g3tonerecsumRunDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumRunDay.setStatus('mandatory')
g3tonerecsumRunHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumRunHour.setStatus('mandatory')
g3tonerecsumDTMFHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumDTMFHour.setStatus('mandatory')
g3tonerecsumDTMFTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumDTMFTReq.setStatus('mandatory')
g3tonerecsumDTMFPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumDTMFPReq.setStatus('mandatory')
g3tonerecsumDTMFTQueue = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumDTMFTQueue.setStatus('mandatory')
g3tonerecsumDTMFPQueue = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumDTMFPQueue.setStatus('mandatory')
g3tonerecsumDTMFTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumDTMFTDeny.setStatus('mandatory')
g3tonerecsumDTMFPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumDTMFPDeny.setStatus('mandatory')
g3tonerecsumGPTDHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumGPTDHour.setStatus('mandatory')
g3tonerecsumGPTDTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumGPTDTReq.setStatus('mandatory')
g3tonerecsumGPTDPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumGPTDPReq.setStatus('mandatory')
g3tonerecsumGPTDTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumGPTDTDeny.setStatus('mandatory')
g3tonerecsumGPTDPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumGPTDPDeny.setStatus('mandatory')
g3tonerecsumCCTTRHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCTTRHour.setStatus('mandatory')
g3tonerecsumCCTTRTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCTTRTReq.setStatus('mandatory')
g3tonerecsumCCTTRPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCTTRPReq.setStatus('mandatory')
g3tonerecsumCCTTRTQueue = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCTTRTQueue.setStatus('mandatory')
g3tonerecsumCCTTRPQueue = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCTTRPQueue.setStatus('mandatory')
g3tonerecsumCCTTRTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCTTRTDeny.setStatus('mandatory')
g3tonerecsumCCTTRPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCTTRPDeny.setStatus('mandatory')
g3tonerecsumCCCPTRHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCCPTRHour.setStatus('mandatory')
g3tonerecsumCCCPTRTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCCPTRTReq.setStatus('mandatory')
g3tonerecsumCCCPTRPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCCPTRPReq.setStatus('mandatory')
g3tonerecsumCCCPTRTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCCPTRTDeny.setStatus('mandatory')
g3tonerecsumCCCPTRPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCCPTRPDeny.setStatus('mandatory')
g3tonerecsumCCMFCRHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCMFCRHour.setStatus('mandatory')
g3tonerecsumCCMFCRTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCMFCRTReq.setStatus('mandatory')
g3tonerecsumCCMFCRPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCMFCRPReq.setStatus('mandatory')
g3tonerecsumCCMFCRTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCMFCRTDeny.setStatus('mandatory')
g3tonerecsumCCMFCRPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCCMFCRPDeny.setStatus('mandatory')
g3tonerecsumDTMRTAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumDTMRTAvail.setStatus('mandatory')
g3tonerecsumGPRDTAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumGPRDTAvail.setStatus('mandatory')
g3tonerecsumCLASTAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumCLASTAvail.setStatus('mandatory')
g3tonerecsumETRTAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 68, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3tonerecsumETRTAvail.setStatus('mandatory')
g3pktonerecsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumTage.setStatus('mandatory')
g3pktonerecsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktonerecsumTintvl.setStatus('mandatory')
g3pktonerecsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumTdelay.setStatus('mandatory')
g3pktonerecsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pktonerecsumTretrieve.setStatus('mandatory')
g3pktonerecsumRunYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumRunYear.setStatus('mandatory')
g3pktonerecsumRunMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumRunMonth.setStatus('mandatory')
g3pktonerecsumRunDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumRunDay.setStatus('mandatory')
g3pktonerecsumRunHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumRunHour.setStatus('mandatory')
g3pktonerecsumDTMFHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumDTMFHour.setStatus('mandatory')
g3pktonerecsumDTMFTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumDTMFTReq.setStatus('mandatory')
g3pktonerecsumDTMFPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumDTMFPReq.setStatus('mandatory')
g3pktonerecsumDTMFTQueue = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumDTMFTQueue.setStatus('mandatory')
g3pktonerecsumDTMFPQueue = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumDTMFPQueue.setStatus('mandatory')
g3pktonerecsumDTMFTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumDTMFTDeny.setStatus('mandatory')
g3pktonerecsumDTMFPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumDTMFPDeny.setStatus('mandatory')
g3pktonerecsumGPTDHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumGPTDHour.setStatus('mandatory')
g3pktonerecsumGPTDTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumGPTDTReq.setStatus('mandatory')
g3pktonerecsumGPTDPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumGPTDPReq.setStatus('mandatory')
g3pktonerecsumGPTDTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumGPTDTDeny.setStatus('mandatory')
g3pktonerecsumGPTDPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumGPTDPDeny.setStatus('mandatory')
g3pktonerecsumCCTTRHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCTTRHour.setStatus('mandatory')
g3pktonerecsumCCTTRTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCTTRTReq.setStatus('mandatory')
g3pktonerecsumCCTTRPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCTTRPReq.setStatus('mandatory')
g3pktonerecsumCCTTRTQueue = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCTTRTQueue.setStatus('mandatory')
g3pktonerecsumCCTTRPQueue = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCTTRPQueue.setStatus('mandatory')
g3pktonerecsumCCTTRTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCTTRTDeny.setStatus('mandatory')
g3pktonerecsumCCTTRPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCTTRPDeny.setStatus('mandatory')
g3pktonerecsumCCCPTRHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCCPTRHour.setStatus('mandatory')
g3pktonerecsumCCCPTRTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCCPTRTReq.setStatus('mandatory')
g3pktonerecsumCCCPTRPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCCPTRPReq.setStatus('mandatory')
g3pktonerecsumCCCPTRTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCCPTRTDeny.setStatus('mandatory')
g3pktonerecsumCCCPTRPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCCPTRPDeny.setStatus('mandatory')
g3pktonerecsumCCMFCRHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCMFCRHour.setStatus('mandatory')
g3pktonerecsumCCMFCRTReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCMFCRTReq.setStatus('mandatory')
g3pktonerecsumCCMFCRPReq = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCMFCRPReq.setStatus('mandatory')
g3pktonerecsumCCMFCRTDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCMFCRTDeny.setStatus('mandatory')
g3pktonerecsumCCMFCRPDeny = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCCMFCRPDeny.setStatus('mandatory')
g3pktonerecsumDTMRTAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumDTMRTAvail.setStatus('mandatory')
g3pktonerecsumGPRDTAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumGPRDTAvail.setStatus('mandatory')
g3pktonerecsumCLASTAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumCLASTAvail.setStatus('mandatory')
g3pktonerecsumETRTAvail = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 69, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pktonerecsumETRTAvail.setStatus('mandatory')
g3rpatcfgTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgTage.setStatus('mandatory')
g3rpatcfgTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3rpatcfgTintvl.setStatus('mandatory')
g3rpatcfgTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgTdelay.setStatus('mandatory')
g3rpatcfgTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3rpatcfgTretrieve.setStatus('mandatory')
g3rpatcfgTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgTcount.setStatus('mandatory')
g3rpatcfgPattern1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern1.setStatus('mandatory')
g3rpatcfgPattern2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern2.setStatus('mandatory')
g3rpatcfgPattern3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern3.setStatus('mandatory')
g3rpatcfgPattern4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern4.setStatus('mandatory')
g3rpatcfgPattern5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern5.setStatus('mandatory')
g3rpatcfgPattern6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern6.setStatus('mandatory')
g3rpatcfgPattern7 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern7.setStatus('mandatory')
g3rpatcfgPattern8 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern8.setStatus('mandatory')
g3rpatcfgPattern9 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern9.setStatus('mandatory')
g3rpatcfgPattern10 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern10.setStatus('mandatory')
g3rpatcfgPattern11 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern11.setStatus('mandatory')
g3rpatcfgPattern12 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern12.setStatus('mandatory')
g3rpatcfgPattern13 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern13.setStatus('mandatory')
g3rpatcfgPattern14 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern14.setStatus('mandatory')
g3rpatcfgPattern15 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern15.setStatus('mandatory')
g3rpatcfgPattern16 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern16.setStatus('mandatory')
g3rpatcfgPattern17 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern17.setStatus('mandatory')
g3rpatcfgPattern18 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern18.setStatus('mandatory')
g3rpatcfgPattern19 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern19.setStatus('mandatory')
g3rpatcfgPattern20 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern20.setStatus('mandatory')
g3rpatcfgPattern21 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern21.setStatus('mandatory')
g3rpatcfgPattern22 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern22.setStatus('mandatory')
g3rpatcfgPattern23 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern23.setStatus('mandatory')
g3rpatcfgPattern24 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern24.setStatus('mandatory')
g3rpatcfgPattern25 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 70, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatcfgPattern25.setStatus('mandatory')
g3rpatTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatTage.setStatus('mandatory')
g3rpatTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3rpatTintvl.setStatus('mandatory')
g3rpatTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatTdelay.setStatus('mandatory')
g3rpatTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3rpatTretrieve.setStatus('mandatory')
g3rpatTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatTcount.setStatus('mandatory')
g3rpatTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6), )
if mibBuilder.loadTexts: g3rpatTable.setStatus('mandatory')
g3rpatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3rpatPattern"), (0, "G3-AVAYA-MIB", "g3rpatIndex"))
if mibBuilder.loadTexts: g3rpatEntry.setStatus('mandatory')
g3rpatPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatPattern.setStatus('mandatory')
g3rpatTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatTrunkGroup.setStatus('mandatory')
g3rpatYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatYear.setStatus('mandatory')
g3rpatMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatMonth.setStatus('mandatory')
g3rpatDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatDay.setStatus('mandatory')
g3rpatHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatHour.setStatus('mandatory')
g3rpatQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatQueueSize.setStatus('mandatory')
g3rpatCallsOffered = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatCallsOffered.setStatus('mandatory')
g3rpatCallsCarried = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatCallsCarried.setStatus('mandatory')
g3rpatCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatCallsBlocked.setStatus('mandatory')
g3rpatCallsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatCallsQueued.setStatus('mandatory')
g3rpatQueueOvflo = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatQueueOvflo.setStatus('mandatory')
g3rpatCallsCarrd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatCallsCarrd.setStatus('mandatory')
g3rpatTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatTotalCalls.setStatus('mandatory')
g3rpatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 71, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3rpatIndex.setStatus('mandatory')
g3pkrpatTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatTage.setStatus('mandatory')
g3pkrpatTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkrpatTintvl.setStatus('mandatory')
g3pkrpatTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatTdelay.setStatus('mandatory')
g3pkrpatTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkrpatTretrieve.setStatus('mandatory')
g3pkrpatTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatTcount.setStatus('mandatory')
g3pkrpatTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6), )
if mibBuilder.loadTexts: g3pkrpatTable.setStatus('mandatory')
g3pkrpatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkrpatPattern"), (0, "G3-AVAYA-MIB", "g3pkrpatIndex"))
if mibBuilder.loadTexts: g3pkrpatEntry.setStatus('mandatory')
g3pkrpatPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatPattern.setStatus('mandatory')
g3pkrpatTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatTrunkGroup.setStatus('mandatory')
g3pkrpatYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatYear.setStatus('mandatory')
g3pkrpatMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatMonth.setStatus('mandatory')
g3pkrpatDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatDay.setStatus('mandatory')
g3pkrpatHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatHour.setStatus('mandatory')
g3pkrpatQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatQueueSize.setStatus('mandatory')
g3pkrpatCallsOffered = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatCallsOffered.setStatus('mandatory')
g3pkrpatCallsCarried = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatCallsCarried.setStatus('mandatory')
g3pkrpatCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatCallsBlocked.setStatus('mandatory')
g3pkrpatCallsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatCallsQueued.setStatus('mandatory')
g3pkrpatQueueOvflo = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatQueueOvflo.setStatus('mandatory')
g3pkrpatCallsCarrd = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatCallsCarrd.setStatus('mandatory')
g3pkrpatTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatTotalCalls.setStatus('mandatory')
g3pkrpatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 72, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkrpatIndex.setStatus('mandatory')
g3secviolateTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTage.setStatus('mandatory')
g3secviolateTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3secviolateTintvl.setStatus('mandatory')
g3secviolateTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTdelay.setStatus('mandatory')
g3secviolateTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3secviolateTretrieve.setStatus('mandatory')
g3secviolateTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTcount.setStatus('mandatory')
g3secviolateTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6), )
if mibBuilder.loadTexts: g3secviolateTable.setStatus('mandatory')
g3secviolateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3secviolatePortType"))
if mibBuilder.loadTexts: g3secviolateEntry.setStatus('mandatory')
g3secviolatePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolatePortType.setStatus('mandatory')
g3secviolateYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateYear.setStatus('mandatory')
g3secviolateMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateMonth.setStatus('mandatory')
g3secviolateDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateDay.setStatus('mandatory')
g3secviolateHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateHour.setStatus('mandatory')
g3secviolateCountSince = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateCountSince.setStatus('mandatory')
g3secviolateValidBC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateValidBC.setStatus('mandatory')
g3secviolateInvalidBC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateInvalidBC.setStatus('mandatory')
g3secviolateViolateBC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateViolateBC.setStatus('mandatory')
g3secviolateStnValidSSC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateStnValidSSC.setStatus('mandatory')
g3secviolateStnInvalidSSC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateStnInvalidSSC.setStatus('mandatory')
g3secviolateTrkValidSSC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTrkValidSSC.setStatus('mandatory')
g3secviolateTrkInvalidSSC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTrkInvalidSSC.setStatus('mandatory')
g3secviolateTtlValidSSC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTtlValidSSC.setStatus('mandatory')
g3secviolateTtlInvalidSSC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTtlInvalidSSC.setStatus('mandatory')
g3secviolateTtlViolateSSC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTtlViolateSSC.setStatus('mandatory')
g3secviolateStnValidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateStnValidAC.setStatus('mandatory')
g3secviolateStnInvalidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateStnInvalidAC.setStatus('mandatory')
g3secviolateStnViolateAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateStnViolateAC.setStatus('mandatory')
g3secviolateTrkValidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTrkValidAC.setStatus('mandatory')
g3secviolateTrkInvalidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTrkInvalidAC.setStatus('mandatory')
g3secviolateTrkViolateAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTrkViolateAC.setStatus('mandatory')
g3secviolateRAValidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateRAValidAC.setStatus('mandatory')
g3secviolateRAInvalidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateRAInvalidAC.setStatus('mandatory')
g3secviolateRAViolateAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateRAViolateAC.setStatus('mandatory')
g3secviolateAtdValidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateAtdValidAC.setStatus('mandatory')
g3secviolateAtdInvalidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateAtdInvalidAC.setStatus('mandatory')
g3secviolateAtdViolateAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateAtdViolateAC.setStatus('mandatory')
g3secviolateTtlValidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTtlValidAC.setStatus('mandatory')
g3secviolateTtlInvalidAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTtlInvalidAC.setStatus('mandatory')
g3secviolateTtlViolateAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTtlViolateAC.setStatus('mandatory')
g3secviolateLoginSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateLoginSuccess.setStatus('mandatory')
g3secviolateInvalidAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateInvalidAttempt.setStatus('mandatory')
g3secviolateInvalidID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateInvalidID.setStatus('mandatory')
g3secviolateForceDsc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateForceDsc.setStatus('mandatory')
g3secviolateSecViolate = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateSecViolate.setStatus('mandatory')
g3secviolateTrivialAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 73, 6, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3secviolateTrivialAttempt.setStatus('mandatory')
g3cbctrunkTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTage.setStatus('mandatory')
g3cbctrunkTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3cbctrunkTintvl.setStatus('mandatory')
g3cbctrunkTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTdelay.setStatus('mandatory')
g3cbctrunkTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3cbctrunkTretrieve.setStatus('mandatory')
g3cbctrunkTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTcount.setStatus('mandatory')
g3cbctrunkTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6), )
if mibBuilder.loadTexts: g3cbctrunkTable.setStatus('mandatory')
g3cbctrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3cbctrunkTGNumber"), (0, "G3-AVAYA-MIB", "g3cbctrunkServiceName"))
if mibBuilder.loadTexts: g3cbctrunkEntry.setStatus('mandatory')
g3cbctrunkTGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTGNumber.setStatus('mandatory')
g3cbctrunkServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkServiceName.setStatus('mandatory')
g3cbctrunkYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkYear.setStatus('mandatory')
g3cbctrunkMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkMonth.setStatus('mandatory')
g3cbctrunkDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkDay.setStatus('mandatory')
g3cbctrunkHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkHour.setStatus('mandatory')
g3cbctrunkQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkQueueSize.setStatus('mandatory')
g3cbctrunkCallsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkCallsQueued.setStatus('mandatory')
g3cbctrunkQueueOvflw = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkQueueOvflw.setStatus('mandatory')
g3cbctrunkQueueAband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkQueueAband.setStatus('mandatory')
g3cbctrunkTrunksOOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTrunksOOS.setStatus('mandatory')
g3cbctrunkPlan1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkPlan1.setStatus('mandatory')
g3cbctrunkPlan2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkPlan2.setStatus('mandatory')
g3cbctrunkPlan3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkPlan3.setStatus('mandatory')
g3cbctrunkPlan4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkPlan4.setStatus('mandatory')
g3cbctrunkPlan5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkPlan5.setStatus('mandatory')
g3cbctrunkPlan6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkPlan6.setStatus('mandatory')
g3cbctrunkDur1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkDur1.setStatus('mandatory')
g3cbctrunkDur2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkDur2.setStatus('mandatory')
g3cbctrunkDur3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkDur3.setStatus('mandatory')
g3cbctrunkDur4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkDur4.setStatus('mandatory')
g3cbctrunkDur5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkDur5.setStatus('mandatory')
g3cbctrunkDur6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkDur6.setStatus('mandatory')
g3cbctrunkMinChan = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkMinChan.setStatus('mandatory')
g3cbctrunkMaxChan = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkMaxChan.setStatus('mandatory')
g3cbctrunkMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkMeasHour.setStatus('mandatory')
g3cbctrunkTotUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTotUsage.setStatus('mandatory')
g3cbctrunkTotSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTotSeize.setStatus('mandatory')
g3cbctrunkIncSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkIncSeize.setStatus('mandatory')
g3cbctrunkTanSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTanSeize.setStatus('mandatory')
g3cbctrunkOvfTG = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkOvfTG.setStatus('mandatory')
g3cbctrunkOvfSF = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkOvfSF.setStatus('mandatory')
g3cbctrunkOvfMAX = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkOvfMAX.setStatus('mandatory')
g3cbctrunkTBM = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkTBM.setStatus('mandatory')
g3cbctrunkATB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkATB.setStatus('mandatory')
g3cbctrunkOutBlk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 74, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3cbctrunkOutBlk.setStatus('mandatory')
g3deftimeTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeTage.setStatus('mandatory')
g3deftimeTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3deftimeTintvl.setStatus('mandatory')
g3deftimeTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeTdelay.setStatus('mandatory')
g3deftimeTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3deftimeTretrieve.setStatus('mandatory')
g3deftimeDayOfMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeDayOfMonth.setStatus('mandatory')
g3deftimeMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeMonth.setStatus('mandatory')
g3deftimeYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeYear.setStatus('mandatory')
g3deftimeDayOfWeek = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeDayOfWeek.setStatus('mandatory')
g3deftimeHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeHour.setStatus('mandatory')
g3deftimeMinute = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeMinute.setStatus('mandatory')
g3deftimeSecond = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 75, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3deftimeSecond.setStatus('mandatory')
g3trunkoutTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutTage.setStatus('mandatory')
g3trunkoutTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunkoutTintvl.setStatus('mandatory')
g3trunkoutTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutTdelay.setStatus('mandatory')
g3trunkoutTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunkoutTretrieve.setStatus('mandatory')
g3trunkoutTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutTcount.setStatus('mandatory')
g3trunkoutTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6), )
if mibBuilder.loadTexts: g3trunkoutTable.setStatus('mandatory')
g3trunkoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trunkoutTrunkGroup"), (0, "G3-AVAYA-MIB", "g3trunkoutMember"))
if mibBuilder.loadTexts: g3trunkoutEntry.setStatus('mandatory')
g3trunkoutTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutTrunkGroup.setStatus('mandatory')
g3trunkoutMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutMember.setStatus('mandatory')
g3trunkoutYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutYear.setStatus('mandatory')
g3trunkoutMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutMonth.setStatus('mandatory')
g3trunkoutDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutDay.setStatus('mandatory')
g3trunkoutHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutHour.setStatus('mandatory')
g3trunkoutOutages = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 76, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunkoutOutages.setStatus('mandatory')
g3trunklightTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightTage.setStatus('mandatory')
g3trunklightTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunklightTintvl.setStatus('mandatory')
g3trunklightTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightTdelay.setStatus('mandatory')
g3trunklightTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trunklightTretrieve.setStatus('mandatory')
g3trunklightTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightTcount.setStatus('mandatory')
g3trunklightTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6), )
if mibBuilder.loadTexts: g3trunklightTable.setStatus('mandatory')
g3trunklightEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trunklightTrunkGroup"), (0, "G3-AVAYA-MIB", "g3trunklightMember"))
if mibBuilder.loadTexts: g3trunklightEntry.setStatus('mandatory')
g3trunklightTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightTrunkGroup.setStatus('mandatory')
g3trunklightMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightMember.setStatus('mandatory')
g3trunklightYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightYear.setStatus('mandatory')
g3trunklightMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightMonth.setStatus('mandatory')
g3trunklightDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightDay.setStatus('mandatory')
g3trunklightHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightHour.setStatus('mandatory')
g3trunklightCarried = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 77, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trunklightCarried.setStatus('mandatory')
g3loadtotalTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalTage.setStatus('mandatory')
g3loadtotalTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadtotalTintvl.setStatus('mandatory')
g3loadtotalTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalTdelay.setStatus('mandatory')
g3loadtotalTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadtotalTretrieve.setStatus('mandatory')
g3loadtotalTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalTcount.setStatus('mandatory')
g3loadtotalTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6), )
if mibBuilder.loadTexts: g3loadtotalTable.setStatus('mandatory')
g3loadtotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3loadtotalPNNumber"))
if mibBuilder.loadTexts: g3loadtotalEntry.setStatus('mandatory')
g3loadtotalPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalPNNumber.setStatus('mandatory')
g3loadtotalYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalYear.setStatus('mandatory')
g3loadtotalMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalMonth.setStatus('mandatory')
g3loadtotalDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalDay.setStatus('mandatory')
g3loadtotalHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalHour.setStatus('mandatory')
g3loadtotalPNOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalPNOccupancy.setStatus('mandatory')
g3loadtotalPNUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalPNUtil.setStatus('mandatory')
g3loadtotalTDMOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 78, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtotalTDMOccupancy.setStatus('mandatory')
g3loadintTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintTage.setStatus('mandatory')
g3loadintTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadintTintvl.setStatus('mandatory')
g3loadintTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintTdelay.setStatus('mandatory')
g3loadintTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadintTretrieve.setStatus('mandatory')
g3loadintTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintTcount.setStatus('mandatory')
g3loadintTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6), )
if mibBuilder.loadTexts: g3loadintTable.setStatus('mandatory')
g3loadintEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3loadintPNNumber"))
if mibBuilder.loadTexts: g3loadintEntry.setStatus('mandatory')
g3loadintPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintPNNumber.setStatus('mandatory')
g3loadintYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintYear.setStatus('mandatory')
g3loadintMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintMonth.setStatus('mandatory')
g3loadintDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintDay.setStatus('mandatory')
g3loadintHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintHour.setStatus('mandatory')
g3loadintIntIntraPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintIntIntraPNUse.setStatus('mandatory')
g3loadintIntIntraPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintIntIntraPNPeg.setStatus('mandatory')
g3loadintIntInterPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintIntInterPNUse.setStatus('mandatory')
g3loadintIntInterPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 79, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadintIntInterPNPeg.setStatus('mandatory')
g3loadincTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincTage.setStatus('mandatory')
g3loadincTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadincTintvl.setStatus('mandatory')
g3loadincTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincTdelay.setStatus('mandatory')
g3loadincTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadincTretrieve.setStatus('mandatory')
g3loadincTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincTcount.setStatus('mandatory')
g3loadincTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6), )
if mibBuilder.loadTexts: g3loadincTable.setStatus('mandatory')
g3loadincEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3loadincPNNumber"))
if mibBuilder.loadTexts: g3loadincEntry.setStatus('mandatory')
g3loadincPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincPNNumber.setStatus('mandatory')
g3loadincYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincYear.setStatus('mandatory')
g3loadincMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincMonth.setStatus('mandatory')
g3loadincDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincDay.setStatus('mandatory')
g3loadincHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincHour.setStatus('mandatory')
g3loadincIncIntraPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincIncIntraPNUse.setStatus('mandatory')
g3loadincIncIntraPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincIncIntraPNPeg.setStatus('mandatory')
g3loadincIncIncomingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincIncIncomingUse.setStatus('mandatory')
g3loadincIncIncomingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincIncIncomingPeg.setStatus('mandatory')
g3loadincIncOutgoingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincIncOutgoingUse.setStatus('mandatory')
g3loadincIncOutgoingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 80, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadincIncOutgoingPeg.setStatus('mandatory')
g3loadoutTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutTage.setStatus('mandatory')
g3loadoutTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadoutTintvl.setStatus('mandatory')
g3loadoutTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutTdelay.setStatus('mandatory')
g3loadoutTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadoutTretrieve.setStatus('mandatory')
g3loadoutTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutTcount.setStatus('mandatory')
g3loadoutTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6), )
if mibBuilder.loadTexts: g3loadoutTable.setStatus('mandatory')
g3loadoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3loadoutPNNumber"))
if mibBuilder.loadTexts: g3loadoutEntry.setStatus('mandatory')
g3loadoutPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutPNNumber.setStatus('mandatory')
g3loadoutYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutYear.setStatus('mandatory')
g3loadoutMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutMonth.setStatus('mandatory')
g3loadoutDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutDay.setStatus('mandatory')
g3loadoutHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutHour.setStatus('mandatory')
g3loadoutOutIntraPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutOutIntraPNUse.setStatus('mandatory')
g3loadoutOutIntraPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutOutIntraPNPeg.setStatus('mandatory')
g3loadoutOutIncomingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutOutIncomingUse.setStatus('mandatory')
g3loadoutOutIncomingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutOutIncomingPeg.setStatus('mandatory')
g3loadoutOutOutgoingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutOutOutgoingUse.setStatus('mandatory')
g3loadoutOutOutgoingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 81, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadoutOutOutgoingPeg.setStatus('mandatory')
g3loadtanTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTage.setStatus('mandatory')
g3loadtanTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadtanTintvl.setStatus('mandatory')
g3loadtanTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTdelay.setStatus('mandatory')
g3loadtanTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3loadtanTretrieve.setStatus('mandatory')
g3loadtanTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTcount.setStatus('mandatory')
g3loadtanTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6), )
if mibBuilder.loadTexts: g3loadtanTable.setStatus('mandatory')
g3loadtanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3loadtanPNNumber"))
if mibBuilder.loadTexts: g3loadtanEntry.setStatus('mandatory')
g3loadtanPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanPNNumber.setStatus('mandatory')
g3loadtanYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanYear.setStatus('mandatory')
g3loadtanMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanMonth.setStatus('mandatory')
g3loadtanDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanDay.setStatus('mandatory')
g3loadtanHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanHour.setStatus('mandatory')
g3loadtanTanIntraPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTanIntraPNUse.setStatus('mandatory')
g3loadtanTanIntraPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTanIntraPNPeg.setStatus('mandatory')
g3loadtanTanIncomingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTanIncomingUse.setStatus('mandatory')
g3loadtanTanIncomingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTanIncomingPeg.setStatus('mandatory')
g3loadtanTanOutgoingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTanOutgoingUse.setStatus('mandatory')
g3loadtanTanOutgoingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 82, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3loadtanTanOutgoingPeg.setStatus('mandatory')
g3pkloadtotalTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalTage.setStatus('mandatory')
g3pkloadtotalTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadtotalTintvl.setStatus('mandatory')
g3pkloadtotalTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalTdelay.setStatus('mandatory')
g3pkloadtotalTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadtotalTretrieve.setStatus('mandatory')
g3pkloadtotalTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalTcount.setStatus('mandatory')
g3pkloadtotalTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6), )
if mibBuilder.loadTexts: g3pkloadtotalTable.setStatus('mandatory')
g3pkloadtotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkloadtotalPNNumber"))
if mibBuilder.loadTexts: g3pkloadtotalEntry.setStatus('mandatory')
g3pkloadtotalPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalPNNumber.setStatus('mandatory')
g3pkloadtotalYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalYear.setStatus('mandatory')
g3pkloadtotalMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalMonth.setStatus('mandatory')
g3pkloadtotalDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalDay.setStatus('mandatory')
g3pkloadtotalHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalHour.setStatus('mandatory')
g3pkloadtotalPNOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalPNOccupancy.setStatus('mandatory')
g3pkloadtotalPNUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalPNUtil.setStatus('mandatory')
g3pkloadtotalTDMOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 83, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtotalTDMOccupancy.setStatus('mandatory')
g3pkloadintTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintTage.setStatus('mandatory')
g3pkloadintTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadintTintvl.setStatus('mandatory')
g3pkloadintTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintTdelay.setStatus('mandatory')
g3pkloadintTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadintTretrieve.setStatus('mandatory')
g3pkloadintTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintTcount.setStatus('mandatory')
g3pkloadintTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6), )
if mibBuilder.loadTexts: g3pkloadintTable.setStatus('mandatory')
g3pkloadintEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkloadintPNNumber"))
if mibBuilder.loadTexts: g3pkloadintEntry.setStatus('mandatory')
g3pkloadintPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintPNNumber.setStatus('mandatory')
g3pkloadintYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintYear.setStatus('mandatory')
g3pkloadintMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintMonth.setStatus('mandatory')
g3pkloadintDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintDay.setStatus('mandatory')
g3pkloadintHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintHour.setStatus('mandatory')
g3pkloadintIntIntraPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintIntIntraPNUse.setStatus('mandatory')
g3pkloadintIntIntraPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintIntIntraPNPeg.setStatus('mandatory')
g3pkloadintIntInterPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintIntInterPNUse.setStatus('mandatory')
g3pkloadintIntInterPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 84, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadintIntInterPNPeg.setStatus('mandatory')
g3pkloadincTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincTage.setStatus('mandatory')
g3pkloadincTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadincTintvl.setStatus('mandatory')
g3pkloadincTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincTdelay.setStatus('mandatory')
g3pkloadincTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadincTretrieve.setStatus('mandatory')
g3pkloadincTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincTcount.setStatus('mandatory')
g3pkloadincTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6), )
if mibBuilder.loadTexts: g3pkloadincTable.setStatus('mandatory')
g3pkloadincEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkloadincPNNumber"))
if mibBuilder.loadTexts: g3pkloadincEntry.setStatus('mandatory')
g3pkloadincPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincPNNumber.setStatus('mandatory')
g3pkloadincYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincYear.setStatus('mandatory')
g3pkloadincMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincMonth.setStatus('mandatory')
g3pkloadincDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincDay.setStatus('mandatory')
g3pkloadincHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincHour.setStatus('mandatory')
g3pkloadincIncIntraPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincIncIntraPNUse.setStatus('mandatory')
g3pkloadincIncIntraPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincIncIntraPNPeg.setStatus('mandatory')
g3pkloadincIncIncomingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincIncIncomingUse.setStatus('mandatory')
g3pkloadincIncIncomingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincIncIncomingPeg.setStatus('mandatory')
g3pkloadincIncOutgoingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincIncOutgoingUse.setStatus('mandatory')
g3pkloadincIncOutgoingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 85, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadincIncOutgoingPeg.setStatus('mandatory')
g3pkloadoutTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutTage.setStatus('mandatory')
g3pkloadoutTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadoutTintvl.setStatus('mandatory')
g3pkloadoutTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutTdelay.setStatus('mandatory')
g3pkloadoutTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadoutTretrieve.setStatus('mandatory')
g3pkloadoutTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutTcount.setStatus('mandatory')
g3pkloadoutTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6), )
if mibBuilder.loadTexts: g3pkloadoutTable.setStatus('mandatory')
g3pkloadoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkloadoutPNNumber"))
if mibBuilder.loadTexts: g3pkloadoutEntry.setStatus('mandatory')
g3pkloadoutPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutPNNumber.setStatus('mandatory')
g3pkloadoutYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutYear.setStatus('mandatory')
g3pkloadoutMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutMonth.setStatus('mandatory')
g3pkloadoutDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutDay.setStatus('mandatory')
g3pkloadoutHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutHour.setStatus('mandatory')
g3pkloadoutOutIntraPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutOutIntraPNUse.setStatus('mandatory')
g3pkloadoutOutIntraPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutOutIntraPNPeg.setStatus('mandatory')
g3pkloadoutOutIncomingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutOutIncomingUse.setStatus('mandatory')
g3pkloadoutOutIncomingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutOutIncomingPeg.setStatus('mandatory')
g3pkloadoutOutOutgoingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutOutOutgoingUse.setStatus('mandatory')
g3pkloadoutOutOutgoingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 86, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadoutOutOutgoingPeg.setStatus('mandatory')
g3pkloadtanTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTage.setStatus('mandatory')
g3pkloadtanTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadtanTintvl.setStatus('mandatory')
g3pkloadtanTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTdelay.setStatus('mandatory')
g3pkloadtanTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkloadtanTretrieve.setStatus('mandatory')
g3pkloadtanTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTcount.setStatus('mandatory')
g3pkloadtanTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6), )
if mibBuilder.loadTexts: g3pkloadtanTable.setStatus('mandatory')
g3pkloadtanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkloadtanPNNumber"))
if mibBuilder.loadTexts: g3pkloadtanEntry.setStatus('mandatory')
g3pkloadtanPNNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanPNNumber.setStatus('mandatory')
g3pkloadtanYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanYear.setStatus('mandatory')
g3pkloadtanMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanMonth.setStatus('mandatory')
g3pkloadtanDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanDay.setStatus('mandatory')
g3pkloadtanHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanHour.setStatus('mandatory')
g3pkloadtanTanIntraPNUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTanIntraPNUse.setStatus('mandatory')
g3pkloadtanTanIntraPNPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTanIntraPNPeg.setStatus('mandatory')
g3pkloadtanTanIncomingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTanIncomingUse.setStatus('mandatory')
g3pkloadtanTanIncomingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTanIncomingPeg.setStatus('mandatory')
g3pkloadtanTanOutgoingUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTanOutgoingUse.setStatus('mandatory')
g3pkloadtanTanOutgoingPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 87, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkloadtanTanOutgoingPeg.setStatus('mandatory')
g3atmlatencyTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyTage.setStatus('mandatory')
g3atmlatencyTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmlatencyTintvl.setStatus('mandatory')
g3atmlatencyTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyTdelay.setStatus('mandatory')
g3atmlatencyTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3atmlatencyTretrieve.setStatus('mandatory')
g3atmlatencyTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyTcount.setStatus('mandatory')
g3atmlatencyTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6), )
if mibBuilder.loadTexts: g3atmlatencyTable.setStatus('mandatory')
g3atmlatencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3atmlatencyPNPair"))
if mibBuilder.loadTexts: g3atmlatencyEntry.setStatus('mandatory')
g3atmlatencyPNPair = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyPNPair.setStatus('mandatory')
g3atmlatencyYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyYear.setStatus('mandatory')
g3atmlatencyMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyMonth.setStatus('mandatory')
g3atmlatencyDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyDay.setStatus('mandatory')
g3atmlatencyHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyHour.setStatus('mandatory')
g3atmlatencyPNOrig1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyPNOrig1.setStatus('mandatory')
g3atmlatencyPNDest1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyPNDest1.setStatus('mandatory')
g3atmlatencyCount1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyCount1A.setStatus('mandatory')
g3atmlatencySetup1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencySetup1A.setStatus('mandatory')
g3atmlatencyATMCount1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyATMCount1A.setStatus('mandatory')
g3atmlatencyATMSetup1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyATMSetup1A.setStatus('mandatory')
g3atmlatencyMeasHour1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyMeasHour1A.setStatus('mandatory')
g3atmlatencyCount1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyCount1B.setStatus('mandatory')
g3atmlatencySetup1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencySetup1B.setStatus('mandatory')
g3atmlatencyATMCount1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyATMCount1B.setStatus('mandatory')
g3atmlatencyATMSetup1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyATMSetup1B.setStatus('mandatory')
g3atmlatencyMeasHour1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 88, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3atmlatencyMeasHour1B.setStatus('mandatory')
g3pkatmlatencyTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyTage.setStatus('mandatory')
g3pkatmlatencyTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkatmlatencyTintvl.setStatus('mandatory')
g3pkatmlatencyTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyTdelay.setStatus('mandatory')
g3pkatmlatencyTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkatmlatencyTretrieve.setStatus('mandatory')
g3pkatmlatencyTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyTcount.setStatus('mandatory')
g3pkatmlatencyTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6), )
if mibBuilder.loadTexts: g3pkatmlatencyTable.setStatus('mandatory')
g3pkatmlatencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkatmlatencyPNPair"))
if mibBuilder.loadTexts: g3pkatmlatencyEntry.setStatus('mandatory')
g3pkatmlatencyPNPair = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyPNPair.setStatus('mandatory')
g3pkatmlatencyYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyYear.setStatus('mandatory')
g3pkatmlatencyMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyMonth.setStatus('mandatory')
g3pkatmlatencyDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyDay.setStatus('mandatory')
g3pkatmlatencyHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyHour.setStatus('mandatory')
g3pkatmlatencyPNOrig1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyPNOrig1.setStatus('mandatory')
g3pkatmlatencyPNDest1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyPNDest1.setStatus('mandatory')
g3pkatmlatencyCount1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyCount1A.setStatus('mandatory')
g3pkatmlatencySetup1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencySetup1A.setStatus('mandatory')
g3pkatmlatencyATMCount1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyATMCount1A.setStatus('mandatory')
g3pkatmlatencyATMSetup1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyATMSetup1A.setStatus('mandatory')
g3pkatmlatencyMeasHour1A = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyMeasHour1A.setStatus('mandatory')
g3pkatmlatencyCount1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyCount1B.setStatus('mandatory')
g3pkatmlatencySetup1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencySetup1B.setStatus('mandatory')
g3pkatmlatencyATMCount1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyATMCount1B.setStatus('mandatory')
g3pkatmlatencyATMSetup1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyATMSetup1B.setStatus('mandatory')
g3pkatmlatencyMeasHour1B = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 89, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkatmlatencyMeasHour1B.setStatus('mandatory')
g3ipcodecsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumTage.setStatus('mandatory')
g3ipcodecsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipcodecsumTintvl.setStatus('mandatory')
g3ipcodecsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumTdelay.setStatus('mandatory')
g3ipcodecsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipcodecsumTretrieve.setStatus('mandatory')
g3ipcodecsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumTcount.setStatus('mandatory')
g3ipcodecsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6), )
if mibBuilder.loadTexts: g3ipcodecsumTable.setStatus('mandatory')
g3ipcodecsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipcodecsumRegion"))
if mibBuilder.loadTexts: g3ipcodecsumEntry.setStatus('mandatory')
g3ipcodecsumRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumRegion.setStatus('mandatory')
g3ipcodecsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumMeasHour.setStatus('mandatory')
g3ipcodecsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumYear.setStatus('mandatory')
g3ipcodecsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumMonth.setStatus('mandatory')
g3ipcodecsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumDay.setStatus('mandatory')
g3ipcodecsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumHour.setStatus('mandatory')
g3ipcodecsumDSPRecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumDSPRecs.setStatus('mandatory')
g3ipcodecsumG711Usage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumG711Usage.setStatus('mandatory')
g3ipcodecsumG711InRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumG711InRegion.setStatus('mandatory')
g3ipcodecsumG711OutRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumG711OutRegion.setStatus('mandatory')
g3ipcodecsumG723Usage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumG723Usage.setStatus('mandatory')
g3ipcodecsumG723InRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumG723InRegion.setStatus('mandatory')
g3ipcodecsumG723OutRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 90, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipcodecsumG723OutRegion.setStatus('mandatory')
g3pkipcodecsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumTage.setStatus('mandatory')
g3pkipcodecsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkipcodecsumTintvl.setStatus('mandatory')
g3pkipcodecsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumTdelay.setStatus('mandatory')
g3pkipcodecsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkipcodecsumTretrieve.setStatus('mandatory')
g3pkipcodecsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumTcount.setStatus('mandatory')
g3pkipcodecsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6), )
if mibBuilder.loadTexts: g3pkipcodecsumTable.setStatus('mandatory')
g3pkipcodecsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkipcodecsumRegion"))
if mibBuilder.loadTexts: g3pkipcodecsumEntry.setStatus('mandatory')
g3pkipcodecsumRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumRegion.setStatus('mandatory')
g3pkipcodecsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumMeasHour.setStatus('mandatory')
g3pkipcodecsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumYear.setStatus('mandatory')
g3pkipcodecsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumMonth.setStatus('mandatory')
g3pkipcodecsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumDay.setStatus('mandatory')
g3pkipcodecsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumHour.setStatus('mandatory')
g3pkipcodecsumDSPRecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumDSPRecs.setStatus('mandatory')
g3pkipcodecsumG711Usage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumG711Usage.setStatus('mandatory')
g3pkipcodecsumG711InRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumG711InRegion.setStatus('mandatory')
g3pkipcodecsumG711OutRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumG711OutRegion.setStatus('mandatory')
g3pkipcodecsumG723Usage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumG723Usage.setStatus('mandatory')
g3pkipcodecsumG723InRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumG723InRegion.setStatus('mandatory')
g3pkipcodecsumG723OutRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 91, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipcodecsumG723OutRegion.setStatus('mandatory')
g3ipregionTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipregionTage.setStatus('mandatory')
g3ipregionTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipregionTintvl.setStatus('mandatory')
g3ipregionTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipregionTdelay.setStatus('mandatory')
g3ipregionTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipregionTretrieve.setStatus('mandatory')
g3ipregionTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipregionTcount.setStatus('mandatory')
g3ipregionTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 6), )
if mibBuilder.loadTexts: g3ipregionTable.setStatus('mandatory')
g3ipregionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipregionRegion"))
if mibBuilder.loadTexts: g3ipregionEntry.setStatus('mandatory')
g3ipregionRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipregionRegion.setStatus('mandatory')
g3ipregionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 92, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipregionName.setStatus('mandatory')
g3ipdspsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumTage.setStatus('mandatory')
g3ipdspsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipdspsumTintvl.setStatus('mandatory')
g3ipdspsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumTdelay.setStatus('mandatory')
g3ipdspsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipdspsumTretrieve.setStatus('mandatory')
g3ipdspsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumTcount.setStatus('mandatory')
g3ipdspsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6), )
if mibBuilder.loadTexts: g3ipdspsumTable.setStatus('mandatory')
g3ipdspsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipdspsumRegion"))
if mibBuilder.loadTexts: g3ipdspsumEntry.setStatus('mandatory')
g3ipdspsumRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumRegion.setStatus('mandatory')
g3ipdspsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumMeasHour.setStatus('mandatory')
g3ipdspsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumYear.setStatus('mandatory')
g3ipdspsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumMonth.setStatus('mandatory')
g3ipdspsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumDay.setStatus('mandatory')
g3ipdspsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumHour.setStatus('mandatory')
g3ipdspsumDSPRecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumDSPRecs.setStatus('mandatory')
g3ipdspsumDSPUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumDSPUsage.setStatus('mandatory')
g3ipdspsumInRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumInRegion.setStatus('mandatory')
g3ipdspsumOutRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumOutRegion.setStatus('mandatory')
g3ipdspsumDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumDenied.setStatus('mandatory')
g3ipdspsumPctBlk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumPctBlk.setStatus('mandatory')
g3ipdspsumPctOutSrv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 93, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipdspsumPctOutSrv.setStatus('mandatory')
g3pkipdspsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumTage.setStatus('mandatory')
g3pkipdspsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkipdspsumTintvl.setStatus('mandatory')
g3pkipdspsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumTdelay.setStatus('mandatory')
g3pkipdspsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkipdspsumTretrieve.setStatus('mandatory')
g3pkipdspsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumTcount.setStatus('mandatory')
g3pkipdspsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6), )
if mibBuilder.loadTexts: g3pkipdspsumTable.setStatus('mandatory')
g3pkipdspsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkipdspsumRegion"))
if mibBuilder.loadTexts: g3pkipdspsumEntry.setStatus('mandatory')
g3pkipdspsumRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumRegion.setStatus('mandatory')
g3pkipdspsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumMeasHour.setStatus('mandatory')
g3pkipdspsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumYear.setStatus('mandatory')
g3pkipdspsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumMonth.setStatus('mandatory')
g3pkipdspsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumDay.setStatus('mandatory')
g3pkipdspsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumHour.setStatus('mandatory')
g3pkipdspsumDSPRecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumDSPRecs.setStatus('mandatory')
g3pkipdspsumDSPUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumDSPUsage.setStatus('mandatory')
g3pkipdspsumInRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumInRegion.setStatus('mandatory')
g3pkipdspsumOutRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumOutRegion.setStatus('mandatory')
g3pkipdspsumDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumDenied.setStatus('mandatory')
g3pkipdspsumPctBlk = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumPctBlk.setStatus('mandatory')
g3pkipdspsumPctOutSrv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 94, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipdspsumPctOutSrv.setStatus('mandatory')
g3ipsignalTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalTage.setStatus('mandatory')
g3ipsignalTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipsignalTintvl.setStatus('mandatory')
g3ipsignalTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalTdelay.setStatus('mandatory')
g3ipsignalTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipsignalTretrieve.setStatus('mandatory')
g3ipsignalTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalTcount.setStatus('mandatory')
g3ipsignalTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6), )
if mibBuilder.loadTexts: g3ipsignalTable.setStatus('mandatory')
g3ipsignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipsignalSigGroup"))
if mibBuilder.loadTexts: g3ipsignalEntry.setStatus('mandatory')
g3ipsignalSigGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalSigGroup.setStatus('mandatory')
g3ipsignalRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalRegion.setStatus('mandatory')
g3ipsignalYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalYear.setStatus('mandatory')
g3ipsignalMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalMonth.setStatus('mandatory')
g3ipsignalDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalDay.setStatus('mandatory')
g3ipsignalHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalHour.setStatus('mandatory')
g3ipsignalHourAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalHourAvgLatency.setStatus('mandatory')
g3ipsignalHourPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalHourPacketsSent.setStatus('mandatory')
g3ipsignalHourPktsLostPct = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalHourPktsLostPct.setStatus('mandatory')
g3ipsignalMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalMeasHour.setStatus('mandatory')
g3ipsignalWorstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalWorstInterval.setStatus('mandatory')
g3ipsignalIntvlAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalIntvlAvgLatency.setStatus('mandatory')
g3ipsignalIntvlPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalIntvlPacketsSent.setStatus('mandatory')
g3ipsignalIntvlPktsLostPct = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 95, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipsignalIntvlPktsLostPct.setStatus('mandatory')
g3pkipsignalTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalTage.setStatus('mandatory')
g3pkipsignalTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkipsignalTintvl.setStatus('mandatory')
g3pkipsignalTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalTdelay.setStatus('mandatory')
g3pkipsignalTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkipsignalTretrieve.setStatus('mandatory')
g3pkipsignalTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalTcount.setStatus('mandatory')
g3pkipsignalTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6), )
if mibBuilder.loadTexts: g3pkipsignalTable.setStatus('mandatory')
g3pkipsignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkipsignalSigGroup"), (0, "G3-AVAYA-MIB", "g3pkipsignalMeasHour"))
if mibBuilder.loadTexts: g3pkipsignalEntry.setStatus('mandatory')
g3pkipsignalSigGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalSigGroup.setStatus('mandatory')
g3pkipsignalRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalRegion.setStatus('mandatory')
g3pkipsignalYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalYear.setStatus('mandatory')
g3pkipsignalMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalMonth.setStatus('mandatory')
g3pkipsignalDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalDay.setStatus('mandatory')
g3pkipsignalHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalHour.setStatus('mandatory')
g3pkipsignalHourAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalHourAvgLatency.setStatus('mandatory')
g3pkipsignalHourPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalHourPacketsSent.setStatus('mandatory')
g3pkipsignalHourPktsLostPct = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalHourPktsLostPct.setStatus('mandatory')
g3pkipsignalMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalMeasHour.setStatus('mandatory')
g3pkipsignalWorstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalWorstInterval.setStatus('mandatory')
g3pkipsignalIntvlAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalIntvlAvgLatency.setStatus('mandatory')
g3pkipsignalIntvlPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalIntvlPacketsSent.setStatus('mandatory')
g3pkipsignalIntvlPktsLostPct = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 96, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkipsignalIntvlPktsLostPct.setStatus('mandatory')
g3annallTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallTage.setStatus('mandatory')
g3annallTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3annallTintvl.setStatus('mandatory')
g3annallTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallTdelay.setStatus('mandatory')
g3annallTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3annallTretrieve.setStatus('mandatory')
g3annallTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallTcount.setStatus('mandatory')
g3annallTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6), )
if mibBuilder.loadTexts: g3annallTable.setStatus('mandatory')
g3annallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3annallAnnNbr"))
if mibBuilder.loadTexts: g3annallEntry.setStatus('mandatory')
g3annallAnnNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallAnnNbr.setStatus('mandatory')
g3annallYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallYear.setStatus('mandatory')
g3annallMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallMonth.setStatus('mandatory')
g3annallDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallDay.setStatus('mandatory')
g3annallHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallHour.setStatus('mandatory')
g3annallExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallExtension.setStatus('mandatory')
g3annallName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallName.setStatus('mandatory')
g3annallMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallMeasHour.setStatus('mandatory')
g3annallPlayRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallPlayRequests.setStatus('mandatory')
g3annallCallsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallCallsQueued.setStatus('mandatory')
g3annallASP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallASP.setStatus('mandatory')
g3annallQueueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallQueueDrops.setStatus('mandatory')
g3annallMPortPlay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallMPortPlay.setStatus('mandatory')
g3annallMaxPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallMaxPorts.setStatus('mandatory')
g3annallMaxCallers = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 97, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annallMaxCallers.setStatus('mandatory')
g3pkannallTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallTage.setStatus('mandatory')
g3pkannallTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkannallTintvl.setStatus('mandatory')
g3pkannallTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallTdelay.setStatus('mandatory')
g3pkannallTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkannallTretrieve.setStatus('mandatory')
g3pkannallTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallTcount.setStatus('mandatory')
g3pkannallTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6), )
if mibBuilder.loadTexts: g3pkannallTable.setStatus('mandatory')
g3pkannallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkannallAnnNbr"))
if mibBuilder.loadTexts: g3pkannallEntry.setStatus('mandatory')
g3pkannallAnnNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallAnnNbr.setStatus('mandatory')
g3pkannallYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallYear.setStatus('mandatory')
g3pkannallMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallMonth.setStatus('mandatory')
g3pkannallDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallDay.setStatus('mandatory')
g3pkannallHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallHour.setStatus('mandatory')
g3pkannallExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallExtension.setStatus('mandatory')
g3pkannallName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallName.setStatus('mandatory')
g3pkannallMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallMeasHour.setStatus('mandatory')
g3pkannallPlayRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallPlayRequests.setStatus('mandatory')
g3pkannallCallsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallCallsQueued.setStatus('mandatory')
g3pkannallASP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallASP.setStatus('mandatory')
g3pkannallQueueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallQueueDrops.setStatus('mandatory')
g3pkannallMPortPlay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallMPortPlay.setStatus('mandatory')
g3pkannallMaxPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallMaxPorts.setStatus('mandatory')
g3pkannallMaxCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 98, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannallMaxCall.setStatus('mandatory')
g3annintegTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegTage.setStatus('mandatory')
g3annintegTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3annintegTintvl.setStatus('mandatory')
g3annintegTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegTdelay.setStatus('mandatory')
g3annintegTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3annintegTretrieve.setStatus('mandatory')
g3annintegTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegTcount.setStatus('mandatory')
g3annintegTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6), )
if mibBuilder.loadTexts: g3annintegTable.setStatus('mandatory')
g3annintegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3annintegAnnNbr"))
if mibBuilder.loadTexts: g3annintegEntry.setStatus('mandatory')
g3annintegBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegBoard.setStatus('mandatory')
g3annintegYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegYear.setStatus('mandatory')
g3annintegMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegMonth.setStatus('mandatory')
g3annintegDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegDay.setStatus('mandatory')
g3annintegHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegHour.setStatus('mandatory')
g3annintegPlayPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegPlayPorts.setStatus('mandatory')
g3annintegMaxCallPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegMaxCallPeriod.setStatus('mandatory')
g3annintegAllPortsBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegAllPortsBusy.setStatus('mandatory')
g3annintegAnnNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegAnnNbr.setStatus('mandatory')
g3annintegExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegExtension.setStatus('mandatory')
g3annintegName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegName.setStatus('mandatory')
g3annintegMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegMeasHour.setStatus('mandatory')
g3annintegPlayReqts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegPlayReqts.setStatus('mandatory')
g3annintegCallsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegCallsQueued.setStatus('mandatory')
g3annintegASP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegASP.setStatus('mandatory')
g3annintegQueueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegQueueDrops.setStatus('mandatory')
g3annintegMPortPlay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegMPortPlay.setStatus('mandatory')
g3annintegMaxPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegMaxPorts.setStatus('mandatory')
g3annintegMaxCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 99, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3annintegMaxCall.setStatus('mandatory')
g3pkannintegTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegTage.setStatus('mandatory')
g3pkannintegTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkannintegTintvl.setStatus('mandatory')
g3pkannintegTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegTdelay.setStatus('mandatory')
g3pkannintegTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkannintegTretrieve.setStatus('mandatory')
g3pkannintegTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegTcount.setStatus('mandatory')
g3pkannintegTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6), )
if mibBuilder.loadTexts: g3pkannintegTable.setStatus('mandatory')
g3pkannintegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkannintegAnnNbr"))
if mibBuilder.loadTexts: g3pkannintegEntry.setStatus('mandatory')
g3pkannintegBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegBoard.setStatus('mandatory')
g3pkannintegYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegYear.setStatus('mandatory')
g3pkannintegMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegMonth.setStatus('mandatory')
g3pkannintegDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegDay.setStatus('mandatory')
g3pkannintegHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegHour.setStatus('mandatory')
g3pkannintegPlayPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegPlayPorts.setStatus('mandatory')
g3pkannintegMaxCallPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegMaxCallPeriod.setStatus('mandatory')
g3pkannintegAllPortsBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegAllPortsBusy.setStatus('mandatory')
g3pkannintegAnnNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegAnnNbr.setStatus('mandatory')
g3pkannintegExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegExtension.setStatus('mandatory')
g3pkannintegName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegName.setStatus('mandatory')
g3pkannintegMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegMeasHour.setStatus('mandatory')
g3pkannintegPlayReqts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegPlayReqts.setStatus('mandatory')
g3pkannintegCallsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegCallsQueued.setStatus('mandatory')
g3pkannintegASP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegASP.setStatus('mandatory')
g3pkannintegQueueDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegQueueDrops.setStatus('mandatory')
g3pkannintegMPortPlay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegMPortPlay.setStatus('mandatory')
g3pkannintegMaxPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegMaxPorts.setStatus('mandatory')
g3pkannintegMaxCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 100, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkannintegMaxCall.setStatus('mandatory')
g3nodenameTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameTage.setStatus('mandatory')
g3nodenameTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3nodenameTintvl.setStatus('mandatory')
g3nodenameTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameTdelay.setStatus('mandatory')
g3nodenameTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3nodenameTretrieve.setStatus('mandatory')
g3nodenameTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameTcount.setStatus('mandatory')
g3nodenameTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 6), )
if mibBuilder.loadTexts: g3nodenameTable.setStatus('mandatory')
g3nodenameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3nodenameName"))
if mibBuilder.loadTexts: g3nodenameEntry.setStatus('mandatory')
g3nodenameName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameName.setStatus('mandatory')
g3nodenameType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameType.setStatus('mandatory')
g3nodenameIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameIP1.setStatus('mandatory')
g3nodenameIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameIP2.setStatus('mandatory')
g3nodenameIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameIP3.setStatus('mandatory')
g3nodenameIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 101, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3nodenameIP4.setStatus('mandatory')
g3trkgrpmemTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemTage.setStatus('mandatory')
g3trkgrpmemTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trkgrpmemTintvl.setStatus('mandatory')
g3trkgrpmemTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemTdelay.setStatus('mandatory')
g3trkgrpmemTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trkgrpmemTretrieve.setStatus('mandatory')
g3trkgrpmemTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemTcount.setStatus('mandatory')
g3trkgrpmemTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 6), )
if mibBuilder.loadTexts: g3trkgrpmemTable.setStatus('mandatory')
g3trkgrpmemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3trkgrpmemGroup"), (0, "G3-AVAYA-MIB", "g3trkgrpmemMember"))
if mibBuilder.loadTexts: g3trkgrpmemEntry.setStatus('mandatory')
g3trkgrpmemGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemGroup.setStatus('mandatory')
g3trkgrpmemMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemMember.setStatus('mandatory')
g3trkgrpmemName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemName.setStatus('mandatory')
g3trkgrpmemType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemType.setStatus('mandatory')
g3trkgrpmemSigGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemSigGroup.setStatus('mandatory')
g3trkgrpmemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 102, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trkgrpmemPort.setStatus('mandatory')
g3ipinterfaceTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceTage.setStatus('mandatory')
g3ipinterfaceTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipinterfaceTintvl.setStatus('mandatory')
g3ipinterfaceTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceTdelay.setStatus('mandatory')
g3ipinterfaceTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipinterfaceTretrieve.setStatus('mandatory')
g3ipinterfaceNodeName1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName1.setStatus('mandatory')
g3ipinterfaceNodeName2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName2.setStatus('mandatory')
g3ipinterfaceNodeName3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName3.setStatus('mandatory')
g3ipinterfaceNodeName4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName4.setStatus('mandatory')
g3ipinterfaceNodeName5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName5.setStatus('mandatory')
g3ipinterfaceNodeName6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName6.setStatus('mandatory')
g3ipinterfaceNodeName7 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName7.setStatus('mandatory')
g3ipinterfaceNodeName8 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName8.setStatus('mandatory')
g3ipinterfaceNodeName9 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName9.setStatus('mandatory')
g3ipinterfaceNodeName10 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName10.setStatus('mandatory')
g3ipinterfaceNodeName11 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName11.setStatus('mandatory')
g3ipinterfaceNodeName12 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName12.setStatus('mandatory')
g3ipinterfaceNodeName13 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName13.setStatus('mandatory')
g3ipinterfaceNodeName14 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName14.setStatus('mandatory')
g3ipinterfaceNodeName15 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName15.setStatus('mandatory')
g3ipinterfaceNodeName16 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName16.setStatus('mandatory')
g3ipinterfaceNodeName17 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName17.setStatus('mandatory')
g3ipinterfaceNodeName18 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName18.setStatus('mandatory')
g3ipinterfaceNodeName19 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName19.setStatus('mandatory')
g3ipinterfaceNodeName20 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName20.setStatus('mandatory')
g3ipinterfaceNodeName21 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName21.setStatus('mandatory')
g3ipinterfaceNodeName22 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName22.setStatus('mandatory')
g3ipinterfaceNodeName23 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName23.setStatus('mandatory')
g3ipinterfaceNodeName24 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName24.setStatus('mandatory')
g3ipinterfaceNodeName25 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName25.setStatus('mandatory')
g3ipinterfaceNodeName26 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName26.setStatus('mandatory')
g3ipinterfaceNodeName27 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName27.setStatus('mandatory')
g3ipinterfaceNodeName28 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName28.setStatus('mandatory')
g3ipinterfaceNodeName29 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName29.setStatus('mandatory')
g3ipinterfaceNodeName30 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName30.setStatus('mandatory')
g3ipinterfaceNodeName31 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName31.setStatus('mandatory')
g3ipinterfaceNodeName32 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName32.setStatus('mandatory')
g3ipinterfaceNodeName33 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName33.setStatus('mandatory')
g3ipinterfaceNodeName34 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName34.setStatus('mandatory')
g3ipinterfaceNodeName35 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName35.setStatus('mandatory')
g3ipinterfaceNodeName36 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName36.setStatus('mandatory')
g3ipinterfaceNodeName37 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName37.setStatus('mandatory')
g3ipinterfaceNodeName38 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName38.setStatus('mandatory')
g3ipinterfaceNodeName39 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName39.setStatus('mandatory')
g3ipinterfaceNodeName40 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName40.setStatus('mandatory')
g3ipinterfaceNodeName41 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName41.setStatus('mandatory')
g3ipinterfaceNodeName42 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName42.setStatus('mandatory')
g3ipinterfaceNodeName43 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName43.setStatus('mandatory')
g3ipinterfaceNodeName44 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName44.setStatus('mandatory')
g3ipinterfaceNodeName45 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName45.setStatus('mandatory')
g3ipinterfaceNodeName46 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName46.setStatus('mandatory')
g3ipinterfaceNodeName47 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName47.setStatus('mandatory')
g3ipinterfaceNodeName48 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName48.setStatus('mandatory')
g3ipinterfaceNodeName49 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName49.setStatus('mandatory')
g3ipinterfaceNodeName50 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName50.setStatus('mandatory')
g3ipinterfaceNodeName51 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName51.setStatus('mandatory')
g3ipinterfaceNodeName52 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName52.setStatus('mandatory')
g3ipinterfaceNodeName53 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName53.setStatus('mandatory')
g3ipinterfaceNodeName54 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName54.setStatus('mandatory')
g3ipinterfaceNodeName55 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 59), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName55.setStatus('mandatory')
g3ipinterfaceNodeName56 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 60), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName56.setStatus('mandatory')
g3ipinterfaceNodeName57 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 61), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName57.setStatus('mandatory')
g3ipinterfaceNodeName58 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 62), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName58.setStatus('mandatory')
g3ipinterfaceNodeName59 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 63), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName59.setStatus('mandatory')
g3ipinterfaceNodeName60 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 64), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName60.setStatus('mandatory')
g3ipinterfaceNodeName61 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName61.setStatus('mandatory')
g3ipinterfaceNodeName62 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 66), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName62.setStatus('mandatory')
g3ipinterfaceNodeName63 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 67), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName63.setStatus('mandatory')
g3ipinterfaceNodeName64 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName64.setStatus('mandatory')
g3ipinterfaceNodeName65 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName65.setStatus('mandatory')
g3ipinterfaceNodeName66 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName66.setStatus('mandatory')
g3ipinterfaceNodeName67 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 71), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName67.setStatus('mandatory')
g3ipinterfaceNodeName68 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 72), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName68.setStatus('mandatory')
g3ipinterfaceNodeName69 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 73), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName69.setStatus('mandatory')
g3ipinterfaceNodeName70 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 74), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName70.setStatus('mandatory')
g3ipinterfaceNodeName71 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 75), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName71.setStatus('mandatory')
g3ipinterfaceNodeName72 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 76), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName72.setStatus('mandatory')
g3ipinterfaceNodeName73 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 77), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName73.setStatus('mandatory')
g3ipinterfaceNodeName74 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 78), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName74.setStatus('mandatory')
g3ipinterfaceNodeName75 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName75.setStatus('mandatory')
g3ipinterfaceNodeName76 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName76.setStatus('mandatory')
g3ipinterfaceNodeName77 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 81), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName77.setStatus('mandatory')
g3ipinterfaceNodeName78 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 82), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName78.setStatus('mandatory')
g3ipinterfaceNodeName79 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 83), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName79.setStatus('mandatory')
g3ipinterfaceNodeName80 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 84), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName80.setStatus('mandatory')
g3ipinterfaceNodeName81 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 85), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName81.setStatus('mandatory')
g3ipinterfaceNodeName82 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 86), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName82.setStatus('mandatory')
g3ipinterfaceNodeName83 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 87), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName83.setStatus('mandatory')
g3ipinterfaceNodeName84 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 88), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName84.setStatus('mandatory')
g3ipinterfaceNodeName85 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 89), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceNodeName85.setStatus('mandatory')
g3ipinterfaceSlot1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 90), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot1.setStatus('mandatory')
g3ipinterfaceSlot2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 91), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot2.setStatus('mandatory')
g3ipinterfaceSlot3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 92), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot3.setStatus('mandatory')
g3ipinterfaceSlot4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 93), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot4.setStatus('mandatory')
g3ipinterfaceSlot5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 94), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot5.setStatus('mandatory')
g3ipinterfaceSlot6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 95), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot6.setStatus('mandatory')
g3ipinterfaceSlot7 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 96), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot7.setStatus('mandatory')
g3ipinterfaceSlot8 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 97), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot8.setStatus('mandatory')
g3ipinterfaceSlot9 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 98), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot9.setStatus('mandatory')
g3ipinterfaceSlot10 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 99), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot10.setStatus('mandatory')
g3ipinterfaceSlot11 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 100), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot11.setStatus('mandatory')
g3ipinterfaceSlot12 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 101), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot12.setStatus('mandatory')
g3ipinterfaceSlot13 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 102), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot13.setStatus('mandatory')
g3ipinterfaceSlot14 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 103), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot14.setStatus('mandatory')
g3ipinterfaceSlot15 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 104), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot15.setStatus('mandatory')
g3ipinterfaceSlot16 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 105), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot16.setStatus('mandatory')
g3ipinterfaceSlot17 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 106), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot17.setStatus('mandatory')
g3ipinterfaceSlot18 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 107), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot18.setStatus('mandatory')
g3ipinterfaceSlot19 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 108), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot19.setStatus('mandatory')
g3ipinterfaceSlot20 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 109), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot20.setStatus('mandatory')
g3ipinterfaceSlot21 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 110), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot21.setStatus('mandatory')
g3ipinterfaceSlot22 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 111), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot22.setStatus('mandatory')
g3ipinterfaceSlot23 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 112), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot23.setStatus('mandatory')
g3ipinterfaceSlot24 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 113), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot24.setStatus('mandatory')
g3ipinterfaceSlot25 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 114), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot25.setStatus('mandatory')
g3ipinterfaceSlot26 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 115), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot26.setStatus('mandatory')
g3ipinterfaceSlot27 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 116), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot27.setStatus('mandatory')
g3ipinterfaceSlot28 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 117), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot28.setStatus('mandatory')
g3ipinterfaceSlot29 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 118), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot29.setStatus('mandatory')
g3ipinterfaceSlot30 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 119), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot30.setStatus('mandatory')
g3ipinterfaceSlot31 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 120), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot31.setStatus('mandatory')
g3ipinterfaceSlot32 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 121), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot32.setStatus('mandatory')
g3ipinterfaceSlot33 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 122), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot33.setStatus('mandatory')
g3ipinterfaceSlot34 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 123), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot34.setStatus('mandatory')
g3ipinterfaceSlot35 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 124), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot35.setStatus('mandatory')
g3ipinterfaceSlot36 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 125), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot36.setStatus('mandatory')
g3ipinterfaceSlot37 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 126), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot37.setStatus('mandatory')
g3ipinterfaceSlot38 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 127), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot38.setStatus('mandatory')
g3ipinterfaceSlot39 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 128), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot39.setStatus('mandatory')
g3ipinterfaceSlot40 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 129), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot40.setStatus('mandatory')
g3ipinterfaceSlot41 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 130), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot41.setStatus('mandatory')
g3ipinterfaceSlot42 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 131), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot42.setStatus('mandatory')
g3ipinterfaceSlot43 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 132), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot43.setStatus('mandatory')
g3ipinterfaceSlot44 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 133), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot44.setStatus('mandatory')
g3ipinterfaceSlot45 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 134), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot45.setStatus('mandatory')
g3ipinterfaceSlot46 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 135), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot46.setStatus('mandatory')
g3ipinterfaceSlot47 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 136), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot47.setStatus('mandatory')
g3ipinterfaceSlot48 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 137), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot48.setStatus('mandatory')
g3ipinterfaceSlot49 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 138), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot49.setStatus('mandatory')
g3ipinterfaceSlot50 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 139), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot50.setStatus('mandatory')
g3ipinterfaceSlot51 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 140), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot51.setStatus('mandatory')
g3ipinterfaceSlot52 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 141), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot52.setStatus('mandatory')
g3ipinterfaceSlot53 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 142), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot53.setStatus('mandatory')
g3ipinterfaceSlot54 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 143), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot54.setStatus('mandatory')
g3ipinterfaceSlot55 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 144), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot55.setStatus('mandatory')
g3ipinterfaceSlot56 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 145), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot56.setStatus('mandatory')
g3ipinterfaceSlot57 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 146), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot57.setStatus('mandatory')
g3ipinterfaceSlot58 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 147), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot58.setStatus('mandatory')
g3ipinterfaceSlot59 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 148), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot59.setStatus('mandatory')
g3ipinterfaceSlot60 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 149), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot60.setStatus('mandatory')
g3ipinterfaceSlot61 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 150), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot61.setStatus('mandatory')
g3ipinterfaceSlot62 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 151), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot62.setStatus('mandatory')
g3ipinterfaceSlot63 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 152), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot63.setStatus('mandatory')
g3ipinterfaceSlot64 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 153), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot64.setStatus('mandatory')
g3ipinterfaceSlot65 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 154), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot65.setStatus('mandatory')
g3ipinterfaceSlot66 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 155), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot66.setStatus('mandatory')
g3ipinterfaceSlot67 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 156), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot67.setStatus('mandatory')
g3ipinterfaceSlot68 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 157), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot68.setStatus('mandatory')
g3ipinterfaceSlot69 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 158), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot69.setStatus('mandatory')
g3ipinterfaceSlot70 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 159), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot70.setStatus('mandatory')
g3ipinterfaceSlot71 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 160), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot71.setStatus('mandatory')
g3ipinterfaceSlot72 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 161), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot72.setStatus('mandatory')
g3ipinterfaceSlot73 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 162), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot73.setStatus('mandatory')
g3ipinterfaceSlot74 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 163), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot74.setStatus('mandatory')
g3ipinterfaceSlot75 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 164), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot75.setStatus('mandatory')
g3ipinterfaceSlot76 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 165), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot76.setStatus('mandatory')
g3ipinterfaceSlot77 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 166), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot77.setStatus('mandatory')
g3ipinterfaceSlot78 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 167), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot78.setStatus('mandatory')
g3ipinterfaceSlot79 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 168), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot79.setStatus('mandatory')
g3ipinterfaceSlot80 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 169), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot80.setStatus('mandatory')
g3ipinterfaceSlot81 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 170), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot81.setStatus('mandatory')
g3ipinterfaceSlot82 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 171), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot82.setStatus('mandatory')
g3ipinterfaceSlot83 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 172), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot83.setStatus('mandatory')
g3ipinterfaceSlot84 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 173), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot84.setStatus('mandatory')
g3ipinterfaceSlot85 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 103, 174), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipinterfaceSlot85.setStatus('mandatory')
g3gatewayTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayTage.setStatus('mandatory')
g3gatewayTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3gatewayTintvl.setStatus('mandatory')
g3gatewayTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayTdelay.setStatus('mandatory')
g3gatewayTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3gatewayTretrieve.setStatus('mandatory')
g3gatewayTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayTcount.setStatus('mandatory')
g3gatewayTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6), )
if mibBuilder.loadTexts: g3gatewayTable.setStatus('mandatory')
g3gatewayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3gatewayNumber"))
if mibBuilder.loadTexts: g3gatewayEntry.setStatus('mandatory')
g3gatewayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayNumber.setStatus('mandatory')
g3gatewayName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayName.setStatus('mandatory')
g3gatewayIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayIdentifier.setStatus('mandatory')
g3gatewayIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayIPAddress.setStatus('mandatory')
g3gatewayMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayMACAddress.setStatus('mandatory')
g3gatewayRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayRegion.setStatus('mandatory')
g3gatewayLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayLocation.setStatus('mandatory')
g3gatewaySiteData1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewaySiteData1.setStatus('mandatory')
g3gatewaySiteData2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewaySiteData2.setStatus('mandatory')
g3gatewayG700ModTypeV1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG700ModTypeV1.setStatus('mandatory')
g3gatewayG700ModTypeV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG700ModTypeV2.setStatus('mandatory')
g3gatewayG700ModTypeV3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG700ModTypeV3.setStatus('mandatory')
g3gatewayG700ModTypeV4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG700ModTypeV4.setStatus('mandatory')
g3gatewayG700ModTypeV8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG700ModTypeV8.setStatus('mandatory')
g3gatewayG700ModTypeV9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG700ModTypeV9.setStatus('mandatory')
g3gatewayRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayRegistered.setStatus('mandatory')
g3gatewayType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayType.setStatus('mandatory')
g3gatewayFWVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayFWVintage.setStatus('mandatory')
g3gatewayHWVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayHWVintage.setStatus('mandatory')
g3gatewayNearEndIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayNearEndIP.setStatus('mandatory')
g3gatewayEncrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayEncrypt.setStatus('mandatory')
g3gatewayG350ModTypeV1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG350ModTypeV1.setStatus('mandatory')
g3gatewayG350ModTypeV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG350ModTypeV2.setStatus('mandatory')
g3gatewayG350ModTypeV3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG350ModTypeV3.setStatus('mandatory')
g3gatewayG350ModTypeV4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG350ModTypeV4.setStatus('mandatory')
g3gatewayG350ModTypeV5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG350ModTypeV5.setStatus('mandatory')
g3gatewayG350ModTypeV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG350ModTypeV6.setStatus('mandatory')
g3gatewayG350ModTypeV7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG350ModTypeV7.setStatus('mandatory')
g3gatewayG350ModTypeV9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayG350ModTypeV9.setStatus('mandatory')
g3gatewayRecoveryRule = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 104, 6, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3gatewayRecoveryRule.setStatus('mandatory')
g3mediacfgTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mediacfgTage.setStatus('mandatory')
g3mediacfgTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3mediacfgTintvl.setStatus('mandatory')
g3mediacfgTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mediacfgTdelay.setStatus('mandatory')
g3mediacfgTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3mediacfgTretrieve.setStatus('mandatory')
g3mediacfgTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mediacfgTcount.setStatus('mandatory')
g3mediacfgTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 6), )
if mibBuilder.loadTexts: g3mediacfgTable.setStatus('mandatory')
g3mediacfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3mediacfgBoardNum"))
if mibBuilder.loadTexts: g3mediacfgEntry.setStatus('mandatory')
g3mediacfgBoardNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mediacfgBoardNum.setStatus('mandatory')
g3mediacfgBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mediacfgBoardType.setStatus('mandatory')
g3mediacfgCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mediacfgCode.setStatus('mandatory')
g3mediacfgVintage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mediacfgVintage.setStatus('mandatory')
g3mediacfgSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 105, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mediacfgSuffix.setStatus('mandatory')
g3stamediaTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaTage.setStatus('mandatory')
g3stamediaTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3stamediaTintvl.setStatus('mandatory')
g3stamediaTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaTdelay.setStatus('mandatory')
g3stamediaTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3stamediaTretrieve.setStatus('mandatory')
g3stamediaAlarmMajor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaAlarmMajor.setStatus('mandatory')
g3stamediaAlarmMinor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaAlarmMinor.setStatus('mandatory')
g3stamediaAlarmWarning = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaAlarmWarning.setStatus('mandatory')
g3stamediaBusyOutTrunks = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaBusyOutTrunks.setStatus('mandatory')
g3stamediaBusyOutStations = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaBusyOutStations.setStatus('mandatory')
g3stamediaH248LinksDown = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaH248LinksDown.setStatus('mandatory')
g3stamediaH248LinksUp = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaH248LinksUp.setStatus('mandatory')
g3stamediaNbrLogins = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaNbrLogins.setStatus('mandatory')
g3stamediaGatewayStatus1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus1.setStatus('mandatory')
g3stamediaGatewayStatus2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus2.setStatus('mandatory')
g3stamediaGatewayStatus3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus3.setStatus('mandatory')
g3stamediaGatewayStatus4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus4.setStatus('mandatory')
g3stamediaGatewayStatus5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus5.setStatus('mandatory')
g3stamediaGatewayStatus6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus6.setStatus('mandatory')
g3stamediaGatewayStatus7 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus7.setStatus('mandatory')
g3stamediaGatewayStatus8 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus8.setStatus('mandatory')
g3stamediaGatewayStatus9 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus9.setStatus('mandatory')
g3stamediaGatewayStatus10 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus10.setStatus('mandatory')
g3stamediaGatewayStatus11 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus11.setStatus('mandatory')
g3stamediaGatewayStatus12 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus12.setStatus('mandatory')
g3stamediaGatewayStatus13 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus13.setStatus('mandatory')
g3stamediaGatewayStatus14 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus14.setStatus('mandatory')
g3stamediaGatewayStatus15 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus15.setStatus('mandatory')
g3stamediaGatewayStatus16 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus16.setStatus('mandatory')
g3stamediaGatewayStatus17 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus17.setStatus('mandatory')
g3stamediaGatewayStatus18 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus18.setStatus('mandatory')
g3stamediaGatewayStatus19 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus19.setStatus('mandatory')
g3stamediaGatewayStatus20 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus20.setStatus('mandatory')
g3stamediaGatewayStatus21 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus21.setStatus('mandatory')
g3stamediaGatewayStatus22 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus22.setStatus('mandatory')
g3stamediaGatewayStatus23 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus23.setStatus('mandatory')
g3stamediaGatewayStatus24 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus24.setStatus('mandatory')
g3stamediaGatewayStatus25 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus25.setStatus('mandatory')
g3stamediaGatewayStatus26 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus26.setStatus('mandatory')
g3stamediaGatewayStatus27 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus27.setStatus('mandatory')
g3stamediaGatewayStatus28 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus28.setStatus('mandatory')
g3stamediaGatewayStatus29 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus29.setStatus('mandatory')
g3stamediaGatewayStatus30 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus30.setStatus('mandatory')
g3stamediaGatewayStatus31 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus31.setStatus('mandatory')
g3stamediaGatewayStatus32 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus32.setStatus('mandatory')
g3stamediaGatewayStatus33 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus33.setStatus('mandatory')
g3stamediaGatewayStatus34 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus34.setStatus('mandatory')
g3stamediaGatewayStatus35 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus35.setStatus('mandatory')
g3stamediaGatewayStatus36 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus36.setStatus('mandatory')
g3stamediaGatewayStatus37 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus37.setStatus('mandatory')
g3stamediaGatewayStatus38 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus38.setStatus('mandatory')
g3stamediaGatewayStatus39 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus39.setStatus('mandatory')
g3stamediaGatewayStatus40 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus40.setStatus('mandatory')
g3stamediaGatewayStatus41 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus41.setStatus('mandatory')
g3stamediaGatewayStatus42 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus42.setStatus('mandatory')
g3stamediaGatewayStatus43 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus43.setStatus('mandatory')
g3stamediaGatewayStatus44 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus44.setStatus('mandatory')
g3stamediaGatewayStatus45 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus45.setStatus('mandatory')
g3stamediaGatewayStatus46 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus46.setStatus('mandatory')
g3stamediaGatewayStatus47 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 59), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus47.setStatus('mandatory')
g3stamediaGatewayStatus48 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 60), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus48.setStatus('mandatory')
g3stamediaGatewayStatus49 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 61), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus49.setStatus('mandatory')
g3stamediaGatewayStatus50 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 62), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus50.setStatus('mandatory')
g3stamediaGatewayStatus51 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 63), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus51.setStatus('mandatory')
g3stamediaGatewayStatus52 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 64), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus52.setStatus('mandatory')
g3stamediaGatewayStatus53 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus53.setStatus('mandatory')
g3stamediaGatewayStatus54 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 66), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus54.setStatus('mandatory')
g3stamediaGatewayStatus55 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 67), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus55.setStatus('mandatory')
g3stamediaGatewayStatus56 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus56.setStatus('mandatory')
g3stamediaGatewayStatus57 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus57.setStatus('mandatory')
g3stamediaGatewayStatus58 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus58.setStatus('mandatory')
g3stamediaGatewayStatus59 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 71), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus59.setStatus('mandatory')
g3stamediaGatewayStatus60 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 72), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus60.setStatus('mandatory')
g3stamediaGatewayStatus61 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 73), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus61.setStatus('mandatory')
g3stamediaGatewayStatus62 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 74), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus62.setStatus('mandatory')
g3stamediaGatewayStatus63 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 75), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus63.setStatus('mandatory')
g3stamediaGatewayStatus64 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 76), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus64.setStatus('mandatory')
g3stamediaGatewayStatus65 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 77), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus65.setStatus('mandatory')
g3stamediaGatewayStatus66 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 78), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus66.setStatus('mandatory')
g3stamediaGatewayStatus67 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus67.setStatus('mandatory')
g3stamediaGatewayStatus68 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus68.setStatus('mandatory')
g3stamediaGatewayStatus69 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 81), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus69.setStatus('mandatory')
g3stamediaGatewayStatus70 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 82), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus70.setStatus('mandatory')
g3stamediaGatewayStatus71 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 83), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus71.setStatus('mandatory')
g3stamediaGatewayStatus72 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 84), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus72.setStatus('mandatory')
g3stamediaGatewayStatus73 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 85), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus73.setStatus('mandatory')
g3stamediaGatewayStatus74 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 86), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus74.setStatus('mandatory')
g3stamediaGatewayStatus75 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 87), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus75.setStatus('mandatory')
g3stamediaGatewayStatus76 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 88), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus76.setStatus('mandatory')
g3stamediaGatewayStatus77 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 89), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus77.setStatus('mandatory')
g3stamediaGatewayStatus78 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 90), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus78.setStatus('mandatory')
g3stamediaGatewayStatus79 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 91), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus79.setStatus('mandatory')
g3stamediaGatewayStatus80 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 106, 92), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamediaGatewayStatus80.setStatus('mandatory')
g3stamgannTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamgannTage.setStatus('mandatory')
g3stamgannTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3stamgannTintvl.setStatus('mandatory')
g3stamgannTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamgannTdelay.setStatus('mandatory')
g3stamgannTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3stamgannTretrieve.setStatus('mandatory')
g3stamgannTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamgannTcount.setStatus('mandatory')
g3stamgannTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 6), )
if mibBuilder.loadTexts: g3stamgannTable.setStatus('mandatory')
g3stamgannEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3stamgannGatewayNbr"))
if mibBuilder.loadTexts: g3stamgannEntry.setStatus('mandatory')
g3stamgannGatewayNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamgannGatewayNbr.setStatus('mandatory')
g3stamgannAnnActive = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 107, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamgannAnnActive.setStatus('mandatory')
g3ipserverTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverTage.setStatus('mandatory')
g3ipserverTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipserverTintvl.setStatus('mandatory')
g3ipserverTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverTdelay.setStatus('mandatory')
g3ipserverTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipserverTretrieve.setStatus('mandatory')
g3ipserverTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverTcount.setStatus('mandatory')
g3ipserverTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6), )
if mibBuilder.loadTexts: g3ipserverTable.setStatus('mandatory')
g3ipserverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipserverPortNetwork"))
if mibBuilder.loadTexts: g3ipserverEntry.setStatus('mandatory')
g3ipserverPortNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPortNetwork.setStatus('mandatory')
g3ipserverSocketEncr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSocketEncr.setStatus('mandatory')
g3ipserverSecServer = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecServer.setStatus('mandatory')
g3ipserverPrimLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimLocation.setStatus('mandatory')
g3ipserverPrimHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimHost.setStatus('mandatory')
g3ipserverPrimDHCPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimDHCPID.setStatus('mandatory')
g3ipserverPrimIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimIP1.setStatus('mandatory')
g3ipserverPrimIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimIP2.setStatus('mandatory')
g3ipserverPrimIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimIP3.setStatus('mandatory')
g3ipserverPrimIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimIP4.setStatus('mandatory')
g3ipserverPrimIPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimIPPort.setStatus('mandatory')
g3ipserverPrimServState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimServState.setStatus('mandatory')
g3ipserverPrimCntlState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimCntlState.setStatus('mandatory')
g3ipserverPrimStHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverPrimStHealth.setStatus('mandatory')
g3ipserverSecLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecLocation.setStatus('mandatory')
g3ipserverSecHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecHost.setStatus('mandatory')
g3ipserverSecDHCPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecDHCPID.setStatus('mandatory')
g3ipserverSecIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecIP1.setStatus('mandatory')
g3ipserverSecIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecIP2.setStatus('mandatory')
g3ipserverSecIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecIP3.setStatus('mandatory')
g3ipserverSecIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecIP4.setStatus('mandatory')
g3ipserverSecIPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecIPPort.setStatus('mandatory')
g3ipserverSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecServState.setStatus('mandatory')
g3ipserverSecCntlState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecCntlState.setStatus('mandatory')
g3ipserverSecStHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverSecStHealth.setStatus('mandatory')
g3ipserverCallCntl802 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverCallCntl802.setStatus('mandatory')
g3ipserverCallCntlDiff = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 108, 6, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipserverCallCntlDiff.setStatus('mandatory')
g3regipstatTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3regipstatTage.setStatus('mandatory')
g3regipstatTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3regipstatTintvl.setStatus('mandatory')
g3regipstatTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3regipstatTdelay.setStatus('mandatory')
g3regipstatTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3regipstatTretrieve.setStatus('mandatory')
g3regipstatTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3regipstatTcount.setStatus('mandatory')
g3regipstatTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109, 6), )
if mibBuilder.loadTexts: g3regipstatTable.setStatus('mandatory')
g3regipstatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3regipstatExtension"))
if mibBuilder.loadTexts: g3regipstatEntry.setStatus('mandatory')
g3regipstatExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 109, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3regipstatExtension.setStatus('mandatory')
g3callratedataTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataTage.setStatus('mandatory')
g3callratedataTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratedataTintvl.setStatus('mandatory')
g3callratedataTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataTdelay.setStatus('mandatory')
g3callratedataTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratedataTretrieve.setStatus('mandatory')
g3callratedataRunYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataRunYear.setStatus('mandatory')
g3callratedataRunMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataRunMonth.setStatus('mandatory')
g3callratedataRunDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataRunDay.setStatus('mandatory')
g3callratedataRunHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataRunHour.setStatus('mandatory')
g3callratedataMeasHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataMeasHour.setStatus('mandatory')
g3callratedataNumCalls = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataNumCalls.setStatus('mandatory')
g3callratedataBsyIntHr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntHr.setStatus('mandatory')
g3callratedataBsyIntMn = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntMn.setStatus('mandatory')
g3callratedataBsyIntSc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntSc.setStatus('mandatory')
g3callratedataBsyCalCmpl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyCalCmpl.setStatus('mandatory')
g3callratedataMeasHour2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataMeasHour2.setStatus('mandatory')
g3callratedataNumCallsToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataNumCallsToday.setStatus('mandatory')
g3callratedataBsyIntHrToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntHrToday.setStatus('mandatory')
g3callratedataBsyIntMnToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntMnToday.setStatus('mandatory')
g3callratedataBsyIntScToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntScToday.setStatus('mandatory')
g3callratedataBsyCalCmplToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyCalCmplToday.setStatus('mandatory')
g3callratedataMeasHour3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataMeasHour3.setStatus('mandatory')
g3callratedataNumCallsToday1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataNumCallsToday1.setStatus('mandatory')
g3callratedataBsyIntTodayHr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntTodayHr.setStatus('mandatory')
g3callratedataBsyIntTodayMn = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntTodayMn.setStatus('mandatory')
g3callratedataBsyIntTodaySc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntTodaySc.setStatus('mandatory')
g3callratedataBsyCalCmplToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyCalCmplToday2.setStatus('mandatory')
g3callratedataMeasHour4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataMeasHour4.setStatus('mandatory')
g3callratedataNumCallsToday3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataNumCallsToday3.setStatus('mandatory')
g3callratedataBsyIntHrYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntHrYesterday.setStatus('mandatory')
g3callratedataBsyIntMnYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntMnYesterday.setStatus('mandatory')
g3callratedataBsyIntScYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntScYesterday.setStatus('mandatory')
g3callratedataBsyCalCmplYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyCalCmplYesterday.setStatus('mandatory')
g3callratedataMeasHour5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataMeasHour5.setStatus('mandatory')
g3callratedataNumCallsYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataNumCallsYesterday.setStatus('mandatory')
g3callratedataBsyIntHrYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntHrYesterday2.setStatus('mandatory')
g3callratedataBsyIntMnYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntMnYesterday2.setStatus('mandatory')
g3callratedataBsyIntScYesteday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyIntScYesteday2.setStatus('mandatory')
g3callratedataBsyCalCmplYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 110, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratedataBsyCalCmplYesterday2.setStatus('mandatory')
g3callratevoiceTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceTage.setStatus('mandatory')
g3callratevoiceTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratevoiceTintvl.setStatus('mandatory')
g3callratevoiceTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceTdelay.setStatus('mandatory')
g3callratevoiceTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratevoiceTretrieve.setStatus('mandatory')
g3callratevoiceRunYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceRunYear.setStatus('mandatory')
g3callratevoiceRunMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceRunMonth.setStatus('mandatory')
g3callratevoiceRunDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceRunDay.setStatus('mandatory')
g3callratevoiceRunHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceRunHour.setStatus('mandatory')
g3callratevoiceMeasHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceMeasHour.setStatus('mandatory')
g3callratevoiceNumCalls = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceNumCalls.setStatus('mandatory')
g3callratevoiceBsyIntHr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntHr.setStatus('mandatory')
g3callratevoiceBsyIntMn = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntMn.setStatus('mandatory')
g3callratevoiceBsyIntSc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntSc.setStatus('mandatory')
g3callratevoiceBsyCalCmpl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyCalCmpl.setStatus('mandatory')
g3callratevoiceMeasHour2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceMeasHour2.setStatus('mandatory')
g3callratevoiceNumCallsToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceNumCallsToday.setStatus('mandatory')
g3callratevoiceBsyIntHrToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntHrToday.setStatus('mandatory')
g3callratevoiceBsyIntMnToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntMnToday.setStatus('mandatory')
g3callratevoiceBsyIntScToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntScToday.setStatus('mandatory')
g3callratevoiceBsyCalCmplToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyCalCmplToday.setStatus('mandatory')
g3callratevoiceMeasHour3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceMeasHour3.setStatus('mandatory')
g3callratevoiceNumCallsToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceNumCallsToday2.setStatus('mandatory')
g3callratevoiceBsyIntHrToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntHrToday2.setStatus('mandatory')
g3callratevoiceBsyIntMnToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntMnToday2.setStatus('mandatory')
g3callratevoiceBsyIntScToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntScToday2.setStatus('mandatory')
g3callratevoiceBsyCalCmplToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyCalCmplToday2.setStatus('mandatory')
g3callratevoiceMeasHour4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceMeasHour4.setStatus('mandatory')
g3callratevoiceNumCallsYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceNumCallsYesterday.setStatus('mandatory')
g3callratevoiceBsyIntHrYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntHrYesterday.setStatus('mandatory')
g3callratevoiceBsyIntMnYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntMnYesterday.setStatus('mandatory')
g3callratevoiceBsyIntScYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntScYesterday.setStatus('mandatory')
g3callratevoiceBsyCalCmplYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyCalCmplYesterday.setStatus('mandatory')
g3callratevoiceMeasHour5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceMeasHour5.setStatus('mandatory')
g3callratevoiceNumCallsYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceNumCallsYesterday2.setStatus('mandatory')
g3callratevoiceBsyIntHrYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntHrYesterday2.setStatus('mandatory')
g3callratevoiceBsyIntMnYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntMnYesterday2.setStatus('mandatory')
g3callratevoiceBsyIntScYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyIntScYesterday2.setStatus('mandatory')
g3callratevoiceBsyCalCmplYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 111, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratevoiceBsyCalCmplYesterday2.setStatus('mandatory')
g3callratesrvTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvTage.setStatus('mandatory')
g3callratesrvTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratesrvTintvl.setStatus('mandatory')
g3callratesrvTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvTdelay.setStatus('mandatory')
g3callratesrvTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratesrvTretrieve.setStatus('mandatory')
g3callratesrvRunYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvRunYear.setStatus('mandatory')
g3callratesrvRunMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvRunMonth.setStatus('mandatory')
g3callratesrvRunDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvRunDay.setStatus('mandatory')
g3callratesrvRunHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvRunHour.setStatus('mandatory')
g3callratesrvMeasHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvMeasHour.setStatus('mandatory')
g3callratesrvNumCalls = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvNumCalls.setStatus('mandatory')
g3callratesrvBsyIntHr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntHr.setStatus('mandatory')
g3callratesrvBsyIntMn = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntMn.setStatus('mandatory')
g3callratesrvBsyIntSc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntSc.setStatus('mandatory')
g3callratesrvBsyCalCmpl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyCalCmpl.setStatus('mandatory')
g3callratesrvMeasHour2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvMeasHour2.setStatus('mandatory')
g3callratesrvNumCallsToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvNumCallsToday.setStatus('mandatory')
g3callratesrvBsyIntHrToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntHrToday.setStatus('mandatory')
g3callratesrvBsyIntMnToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntMnToday.setStatus('mandatory')
g3callratesrvBsyIntScToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntScToday.setStatus('mandatory')
g3callratesrvBsyCalCmplToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyCalCmplToday.setStatus('mandatory')
g3callratesrvMeasHour3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvMeasHour3.setStatus('mandatory')
g3callratesrvNumCallsToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvNumCallsToday2.setStatus('mandatory')
g3callratesrvBsyIntHrToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntHrToday2.setStatus('mandatory')
g3callratesrvBsyIntMnToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntMnToday2.setStatus('mandatory')
g3callratesrvBsyIntScToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntScToday2.setStatus('mandatory')
g3callratesrvBsyCalCmplToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyCalCmplToday2.setStatus('mandatory')
g3callratesrvMeasHour4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvMeasHour4.setStatus('mandatory')
g3callratesrvNumCallsYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvNumCallsYesterday.setStatus('mandatory')
g3callratesrvBsyIntHrYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntHrYesterday.setStatus('mandatory')
g3callratesrvBsyIntMnYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntMnYesterday.setStatus('mandatory')
g3callratesrvBsyIntScYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntScYesterday.setStatus('mandatory')
g3callratesrvBsyCalCmplYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyCalCmplYesterday.setStatus('mandatory')
g3callratesrvMeasHour5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvMeasHour5.setStatus('mandatory')
g3callratesrvNumCallsYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvNumCallsYesterday2.setStatus('mandatory')
g3callratesrvBsyIntHrYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntHrYesterday2.setStatus('mandatory')
g3callratesrvBsyIntMnYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntMnYesterday2.setStatus('mandatory')
g3callratesrvBsyIntScYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyIntScYesterday2.setStatus('mandatory')
g3callratesrvBsyCalCmplYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 112, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratesrvBsyCalCmplYesterday2.setStatus('mandatory')
g3callratemediaTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaTage.setStatus('mandatory')
g3callratemediaTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratemediaTintvl.setStatus('mandatory')
g3callratemediaTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaTdelay.setStatus('mandatory')
g3callratemediaTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratemediaTretrieve.setStatus('mandatory')
g3callratemediaRunYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaRunYear.setStatus('mandatory')
g3callratemediaRunMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaRunMonth.setStatus('mandatory')
g3callratemediaRunDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaRunDay.setStatus('mandatory')
g3callratemediaRunHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaRunHour.setStatus('mandatory')
g3callratemediaMeasHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaMeasHour.setStatus('mandatory')
g3callratemediaNumCalls = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaNumCalls.setStatus('mandatory')
g3callratemediaBsyIntHr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntHr.setStatus('mandatory')
g3callratemediaBsyIntMn = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntMn.setStatus('mandatory')
g3callratemediaBsyIntSc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntSc.setStatus('mandatory')
g3callratemediaBsyCalCmpl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyCalCmpl.setStatus('mandatory')
g3callratemediaMeasHour2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaMeasHour2.setStatus('mandatory')
g3callratemediaNumCallsToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaNumCallsToday.setStatus('mandatory')
g3callratemediaBsyIntHrToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntHrToday.setStatus('mandatory')
g3callratemediaBsyIntMnToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntMnToday.setStatus('mandatory')
g3callratemediaBsyIntScToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntScToday.setStatus('mandatory')
g3callratemediaBsyCalCmplToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyCalCmplToday.setStatus('mandatory')
g3callratemediaMeasHour3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaMeasHour3.setStatus('mandatory')
g3callratemediaNumCallsToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaNumCallsToday2.setStatus('mandatory')
g3callratemediaBsyIntHrToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntHrToday2.setStatus('mandatory')
g3callratemediaBsyIntMnToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntMnToday2.setStatus('mandatory')
g3callratemediaBsyIntScToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntScToday2.setStatus('mandatory')
g3callratemediaBsyCalCmplToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyCalCmplToday2.setStatus('mandatory')
g3callratemediaMeasHour4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaMeasHour4.setStatus('mandatory')
g3callratemediaNumCallsYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaNumCallsYesterday.setStatus('mandatory')
g3callratemediaBsyIntHrYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntHrYesterday.setStatus('mandatory')
g3callratemediaBsyIntMnYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntMnYesterday.setStatus('mandatory')
g3callratemediaBsyIntScYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntScYesterday.setStatus('mandatory')
g3callratemediaBsyCalCmplYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyCalCmplYesterday.setStatus('mandatory')
g3callratemediaMeasHour5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaMeasHour5.setStatus('mandatory')
g3callratemediaNumCallsYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaNumCallsYesterday2.setStatus('mandatory')
g3callratemediaBsyIntHrYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntHrYesterday2.setStatus('mandatory')
g3callratemediaBsyIntMnYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntMnYesterday2.setStatus('mandatory')
g3callratemediaBsyIntScYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyIntScYesterday2.setStatus('mandatory')
g3callratemediaBsyCalCmplYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 113, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratemediaBsyCalCmplYesterday2.setStatus('mandatory')
g3callratetotalTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalTage.setStatus('mandatory')
g3callratetotalTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratetotalTintvl.setStatus('mandatory')
g3callratetotalTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalTdelay.setStatus('mandatory')
g3callratetotalTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3callratetotalTretrieve.setStatus('mandatory')
g3callratetotalRunYear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalRunYear.setStatus('mandatory')
g3callratetotalRunMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalRunMonth.setStatus('mandatory')
g3callratetotalRunDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalRunDay.setStatus('mandatory')
g3callratetotalRunHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalRunHour.setStatus('mandatory')
g3callratetotalMeasHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalMeasHour.setStatus('mandatory')
g3callratetotalNumCalls = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalNumCalls.setStatus('mandatory')
g3callratetotalBsyIntHr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntHr.setStatus('mandatory')
g3callratetotalBsyIntMn = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntMn.setStatus('mandatory')
g3callratetotalBsyIntSc = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntSc.setStatus('mandatory')
g3callratetotalBsyCalCmpl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyCalCmpl.setStatus('mandatory')
g3callratetotalMeasHour2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalMeasHour2.setStatus('mandatory')
g3callratetotalNumCallsToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalNumCallsToday.setStatus('mandatory')
g3callratetotalBsyIntHrToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntHrToday.setStatus('mandatory')
g3callratetotalBsyIntMnToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntMnToday.setStatus('mandatory')
g3callratetotalBsyIntScToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntScToday.setStatus('mandatory')
g3callratetotalBsyCalCmplToday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyCalCmplToday.setStatus('mandatory')
g3callratetotalMeasHour3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalMeasHour3.setStatus('mandatory')
g3callratetotalNumCallsToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalNumCallsToday2.setStatus('mandatory')
g3callratetotalBsyIntHrToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntHrToday2.setStatus('mandatory')
g3callratetotalBsyIntMnToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntMnToday2.setStatus('mandatory')
g3callratetotalBsyIntScToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntScToday2.setStatus('mandatory')
g3callratetotalBsyCalCmplToday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyCalCmplToday2.setStatus('mandatory')
g3callratetotalMeasHour4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalMeasHour4.setStatus('mandatory')
g3callratetotalNumCallsYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalNumCallsYesterday.setStatus('mandatory')
g3callratetotalBsyIntHrYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntHrYesterday.setStatus('mandatory')
g3callratetotalBsyIntMnYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntMnYesterday.setStatus('mandatory')
g3callratetotalBsyIntScYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntScYesterday.setStatus('mandatory')
g3callratetotalBsyCalCmplYesterday = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyCalCmplYesterday.setStatus('mandatory')
g3callratetotalMeasHour5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalMeasHour5.setStatus('mandatory')
g3callratetotalNumCallsYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalNumCallsYesterday2.setStatus('mandatory')
g3callratetotalBsyIntHrYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntHrYesterday2.setStatus('mandatory')
g3callratetotalBsyIntMnYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntMnYesterday2.setStatus('mandatory')
g3callratetotalBsyIntScYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyIntScYesterday2.setStatus('mandatory')
g3callratetotalBsyCalCmplYesterday2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 114, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3callratetotalBsyCalCmplYesterday2.setStatus('mandatory')
g3clansocsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumTage.setStatus('mandatory')
g3clansocsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3clansocsumTintvl.setStatus('mandatory')
g3clansocsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumTdelay.setStatus('mandatory')
g3clansocsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3clansocsumTretrieve.setStatus('mandatory')
g3clansocsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumTcount.setStatus('mandatory')
g3clansocsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6), )
if mibBuilder.loadTexts: g3clansocsumTable.setStatus('mandatory')
g3clansocsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3clansocsumBoard"))
if mibBuilder.loadTexts: g3clansocsumEntry.setStatus('mandatory')
g3clansocsumBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumBoard.setStatus('mandatory')
g3clansocsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumMeasHour.setStatus('mandatory')
g3clansocsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumYear.setStatus('mandatory')
g3clansocsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumMonth.setStatus('mandatory')
g3clansocsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumDay.setStatus('mandatory')
g3clansocsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumHour.setStatus('mandatory')
g3clansocsumRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumRegion.setStatus('mandatory')
g3clansocsumSockusage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumSockusage.setStatus('mandatory')
g3clansocsumSockPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumSockPeg.setStatus('mandatory')
g3clansocsumDenialPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumDenialPeg.setStatus('mandatory')
g3clansocsumPctDenial = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumPctDenial.setStatus('mandatory')
g3clansocsumPcttmASB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 115, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clansocsumPcttmASB.setStatus('mandatory')
g3pkclansocsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumTage.setStatus('mandatory')
g3pkclansocsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkclansocsumTintvl.setStatus('mandatory')
g3pkclansocsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumTdelay.setStatus('mandatory')
g3pkclansocsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkclansocsumTretrieve.setStatus('mandatory')
g3pkclansocsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumTcount.setStatus('mandatory')
g3pkclansocsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6), )
if mibBuilder.loadTexts: g3pkclansocsumTable.setStatus('mandatory')
g3pkclansocsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkclansocsumBoard"))
if mibBuilder.loadTexts: g3pkclansocsumEntry.setStatus('mandatory')
g3pkclansocsumBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumBoard.setStatus('mandatory')
g3pkclansocsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumMeasHour.setStatus('mandatory')
g3pkclansocsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumYear.setStatus('mandatory')
g3pkclansocsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumMonth.setStatus('mandatory')
g3pkclansocsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumDay.setStatus('mandatory')
g3pkclansocsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumHour.setStatus('mandatory')
g3pkclansocsumRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumRegion.setStatus('mandatory')
g3pkclansocsumSockusage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumSockusage.setStatus('mandatory')
g3pkclansocsumSockPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumSockPeg.setStatus('mandatory')
g3pkclansocsumDenialPeg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumDenialPeg.setStatus('mandatory')
g3pkclansocsumPctDenial = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumPctDenial.setStatus('mandatory')
g3pkclansocsumPcttmASB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 116, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkclansocsumPcttmASB.setStatus('mandatory')
g3clanetherTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherTage.setStatus('mandatory')
g3clanetherTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3clanetherTintvl.setStatus('mandatory')
g3clanetherTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherTdelay.setStatus('mandatory')
g3clanetherTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3clanetherTretrieve.setStatus('mandatory')
g3clanetherTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherTcount.setStatus('mandatory')
g3clanetherTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6), )
if mibBuilder.loadTexts: g3clanetherTable.setStatus('mandatory')
g3clanetherEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3clanetherKey"), (0, "G3-AVAYA-MIB", "g3clanetherDate"), (0, "G3-AVAYA-MIB", "g3clanetherTime"))
if mibBuilder.loadTexts: g3clanetherEntry.setStatus('mandatory')
g3clanetherKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherKey.setStatus('mandatory')
g3clanetherYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherYear.setStatus('mandatory')
g3clanetherMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherMonth.setStatus('mandatory')
g3clanetherDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherDay.setStatus('mandatory')
g3clanetherHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherHour.setStatus('mandatory')
g3clanetherDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherDate.setStatus('mandatory')
g3clanetherTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherTime.setStatus('mandatory')
g3clanetherCrcChkTot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherCrcChkTot.setStatus('mandatory')
g3clanetherCrcChkDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherCrcChkDelta.setStatus('mandatory')
g3clanetherCollCntTot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherCollCntTot.setStatus('mandatory')
g3clanetherCollCntDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 117, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanetherCollCntDelta.setStatus('mandatory')
g3clanpppTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppTage.setStatus('mandatory')
g3clanpppTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3clanpppTintvl.setStatus('mandatory')
g3clanpppTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppTdelay.setStatus('mandatory')
g3clanpppTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3clanpppTretrieve.setStatus('mandatory')
g3clanpppTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppTcount.setStatus('mandatory')
g3clanpppTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6), )
if mibBuilder.loadTexts: g3clanpppTable.setStatus('mandatory')
g3clanpppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3clanpppKey"), (0, "G3-AVAYA-MIB", "g3clanpppDate"), (0, "G3-AVAYA-MIB", "g3clanpppTime"))
if mibBuilder.loadTexts: g3clanpppEntry.setStatus('mandatory')
g3clanpppKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppKey.setStatus('mandatory')
g3clanpppYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppYear.setStatus('mandatory')
g3clanpppMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppMonth.setStatus('mandatory')
g3clanpppDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppDay.setStatus('mandatory')
g3clanpppHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppHour.setStatus('mandatory')
g3clanpppDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppDate.setStatus('mandatory')
g3clanpppTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppTime.setStatus('mandatory')
g3clanpppCrcChkTot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppCrcChkTot.setStatus('mandatory')
g3clanpppCrcChkDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppCrcChkDelta.setStatus('mandatory')
g3clanpppInvFrameTot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppInvFrameTot.setStatus('mandatory')
g3clanpppInvFrameDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppInvFrameDelta.setStatus('mandatory')
g3clanpppChapFailTot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppChapFailTot.setStatus('mandatory')
g3clanpppChapFailDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 118, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clanpppChapFailDelta.setStatus('mandatory')
g3mmisumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumTage.setStatus('mandatory')
g3mmisumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3mmisumTintvl.setStatus('mandatory')
g3mmisumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumTdelay.setStatus('mandatory')
g3mmisumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3mmisumTretrieve.setStatus('mandatory')
g3mmisumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumTcount.setStatus('mandatory')
g3mmisumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6), )
if mibBuilder.loadTexts: g3mmisumTable.setStatus('mandatory')
g3mmisumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3mmisumMeasHour"))
if mibBuilder.loadTexts: g3mmisumEntry.setStatus('mandatory')
g3mmisumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumMeasHour.setStatus('mandatory')
g3mmisumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumYear.setStatus('mandatory')
g3mmisumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumMonth.setStatus('mandatory')
g3mmisumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumDay.setStatus('mandatory')
g3mmisumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumHour.setStatus('mandatory')
g3mmisumAvailablePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumAvailablePorts.setStatus('mandatory')
g3mmisumAvailableUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumAvailableUsage.setStatus('mandatory')
g3mmisumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumTotalUsage.setStatus('mandatory')
g3mmisumTotalAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumTotalAllocation.setStatus('mandatory')
g3mmisumMMIDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumMMIDenials.setStatus('mandatory')
g3mmisumOutofService = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumOutofService.setStatus('mandatory')
g3mmisumPercentAPB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumPercentAPB.setStatus('mandatory')
g3mmisumPercentBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 119, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mmisumPercentBlock.setStatus('mandatory')
g3pkmmisumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumTage.setStatus('mandatory')
g3pkmmisumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkmmisumTintvl.setStatus('mandatory')
g3pkmmisumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumTdelay.setStatus('mandatory')
g3pkmmisumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkmmisumTretrieve.setStatus('mandatory')
g3pkmmisumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumTcount.setStatus('mandatory')
g3pkmmisumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6), )
if mibBuilder.loadTexts: g3pkmmisumTable.setStatus('mandatory')
g3pkmmisumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkmmisumMeasHour"))
if mibBuilder.loadTexts: g3pkmmisumEntry.setStatus('mandatory')
g3pkmmisumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumMeasHour.setStatus('mandatory')
g3pkmmisumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumYear.setStatus('mandatory')
g3pkmmisumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumMonth.setStatus('mandatory')
g3pkmmisumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumDay.setStatus('mandatory')
g3pkmmisumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumHour.setStatus('mandatory')
g3pkmmisumAvailablePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumAvailablePorts.setStatus('mandatory')
g3pkmmisumAvailableUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumAvailableUsage.setStatus('mandatory')
g3pkmmisumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumTotalUsage.setStatus('mandatory')
g3pkmmisumTotalAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumTotalAllocation.setStatus('mandatory')
g3pkmmisumMMIDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumMMIDenials.setStatus('mandatory')
g3pkmmisumOutofService = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumOutofService.setStatus('mandatory')
g3pkmmisumPercentAPB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumPercentAPB.setStatus('mandatory')
g3pkmmisumPercentBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 120, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkmmisumPercentBlock.setStatus('mandatory')
g3esmsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumTage.setStatus('mandatory')
g3esmsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3esmsumTintvl.setStatus('mandatory')
g3esmsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumTdelay.setStatus('mandatory')
g3esmsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3esmsumTretrieve.setStatus('mandatory')
g3esmsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumTcount.setStatus('mandatory')
g3esmsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6), )
if mibBuilder.loadTexts: g3esmsumTable.setStatus('mandatory')
g3esmsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3esmsumMeasHour"))
if mibBuilder.loadTexts: g3esmsumEntry.setStatus('mandatory')
g3esmsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumMeasHour.setStatus('mandatory')
g3esmsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumYear.setStatus('mandatory')
g3esmsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumMonth.setStatus('mandatory')
g3esmsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumDay.setStatus('mandatory')
g3esmsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumHour.setStatus('mandatory')
g3esmsumAvailablePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumAvailablePorts.setStatus('mandatory')
g3esmsumAvailableUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumAvailableUsage.setStatus('mandatory')
g3esmsumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumTotalUsage.setStatus('mandatory')
g3esmsumTotalAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumTotalAllocation.setStatus('mandatory')
g3esmsumESMDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumESMDenials.setStatus('mandatory')
g3esmsumOutofService = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumOutofService.setStatus('mandatory')
g3esmsumPercentAPB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumPercentAPB.setStatus('mandatory')
g3esmsumPercentBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 121, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmsumPercentBlock.setStatus('mandatory')
g3pkesmsumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumTage.setStatus('mandatory')
g3pkesmsumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkesmsumTintvl.setStatus('mandatory')
g3pkesmsumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumTdelay.setStatus('mandatory')
g3pkesmsumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkesmsumTretrieve.setStatus('mandatory')
g3pkesmsumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumTcount.setStatus('mandatory')
g3pkesmsumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6), )
if mibBuilder.loadTexts: g3pkesmsumTable.setStatus('mandatory')
g3pkesmsumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkesmsumMeasHour"))
if mibBuilder.loadTexts: g3pkesmsumEntry.setStatus('mandatory')
g3pkesmsumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumMeasHour.setStatus('mandatory')
g3pkesmsumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumYear.setStatus('mandatory')
g3pkesmsumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumMonth.setStatus('mandatory')
g3pkesmsumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumDay.setStatus('mandatory')
g3pkesmsumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumHour.setStatus('mandatory')
g3pkesmsumAvailablePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumAvailablePorts.setStatus('mandatory')
g3pkesmsumAvailableUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumAvailableUsage.setStatus('mandatory')
g3pkesmsumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumTotalUsage.setStatus('mandatory')
g3pkesmsumTotalAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumTotalAllocation.setStatus('mandatory')
g3pkesmsumESMDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumESMDenials.setStatus('mandatory')
g3pkesmsumOutofService = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumOutofService.setStatus('mandatory')
g3pkesmsumPercentAPB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumPercentAPB.setStatus('mandatory')
g3pkesmsumPercentBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 122, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkesmsumPercentBlock.setStatus('mandatory')
g3voicesumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumTage.setStatus('mandatory')
g3voicesumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3voicesumTintvl.setStatus('mandatory')
g3voicesumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumTdelay.setStatus('mandatory')
g3voicesumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3voicesumTretrieve.setStatus('mandatory')
g3voicesumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumTcount.setStatus('mandatory')
g3voicesumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6), )
if mibBuilder.loadTexts: g3voicesumTable.setStatus('mandatory')
g3voicesumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3voicesumMeasHour"))
if mibBuilder.loadTexts: g3voicesumEntry.setStatus('mandatory')
g3voicesumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumMeasHour.setStatus('mandatory')
g3voicesumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumYear.setStatus('mandatory')
g3voicesumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumMonth.setStatus('mandatory')
g3voicesumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumDay.setStatus('mandatory')
g3voicesumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumHour.setStatus('mandatory')
g3voicesumAvailablePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumAvailablePorts.setStatus('mandatory')
g3voicesumAvailableUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumAvailableUsage.setStatus('mandatory')
g3voicesumH320Usage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumH320Usage.setStatus('mandatory')
g3voicesumVoiceUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumVoiceUsage.setStatus('mandatory')
g3voicesumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumTotalUsage.setStatus('mandatory')
g3voicesumH320Allocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumH320Allocation.setStatus('mandatory')
g3voicesumVoiceAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumVoiceAllocation.setStatus('mandatory')
g3voicesumTotalAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumTotalAllocation.setStatus('mandatory')
g3voicesumH320Denials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumH320Denials.setStatus('mandatory')
g3voicesumVoiceDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumVoiceDenials.setStatus('mandatory')
g3voicesumTotalDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumTotalDenials.setStatus('mandatory')
g3voicesumOutofService = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumOutofService.setStatus('mandatory')
g3voicesumPercentAPB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumPercentAPB.setStatus('mandatory')
g3voicesumPercentBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 123, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3voicesumPercentBlock.setStatus('mandatory')
g3pkvoicesumTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumTage.setStatus('mandatory')
g3pkvoicesumTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkvoicesumTintvl.setStatus('mandatory')
g3pkvoicesumTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumTdelay.setStatus('mandatory')
g3pkvoicesumTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkvoicesumTretrieve.setStatus('mandatory')
g3pkvoicesumTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumTcount.setStatus('mandatory')
g3pkvoicesumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6), )
if mibBuilder.loadTexts: g3pkvoicesumTable.setStatus('mandatory')
g3pkvoicesumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkvoicesumMeasHour"))
if mibBuilder.loadTexts: g3pkvoicesumEntry.setStatus('mandatory')
g3pkvoicesumMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumMeasHour.setStatus('mandatory')
g3pkvoicesumYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumYear.setStatus('mandatory')
g3pkvoicesumMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumMonth.setStatus('mandatory')
g3pkvoicesumDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumDay.setStatus('mandatory')
g3pkvoicesumHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumHour.setStatus('mandatory')
g3pkvoicesumAvailablePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumAvailablePorts.setStatus('mandatory')
g3pkvoicesumAvailableUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumAvailableUsage.setStatus('mandatory')
g3pkvoicesumH320Usage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumH320Usage.setStatus('mandatory')
g3pkvoicesumVoiceUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumVoiceUsage.setStatus('mandatory')
g3pkvoicesumTotalUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumTotalUsage.setStatus('mandatory')
g3pkvoicesumH320Allocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumH320Allocation.setStatus('mandatory')
g3pkvoicesumVoiceAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumVoiceAllocation.setStatus('mandatory')
g3pkvoicesumTotalAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumTotalAllocation.setStatus('mandatory')
g3pkvoicesumH320Denials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumH320Denials.setStatus('mandatory')
g3pkvoicesumVoiceDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumVoiceDenials.setStatus('mandatory')
g3pkvoicesumTotalDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumTotalDenials.setStatus('mandatory')
g3pkvoicesumOutofService = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumOutofService.setStatus('mandatory')
g3pkvoicesumPercentAPB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumPercentAPB.setStatus('mandatory')
g3pkvoicesumPercentBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 124, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkvoicesumPercentBlock.setStatus('mandatory')
g3ipintlistTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipintlistTage.setStatus('mandatory')
g3ipintlistTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipintlistTintvl.setStatus('mandatory')
g3ipintlistTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipintlistTdelay.setStatus('mandatory')
g3ipintlistTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipintlistTretrieve.setStatus('mandatory')
g3ipintlistTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipintlistTcount.setStatus('mandatory')
g3ipintlistTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 6), )
if mibBuilder.loadTexts: g3ipintlistTable.setStatus('mandatory')
g3ipintlistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipintlistNodeName"))
if mibBuilder.loadTexts: g3ipintlistEntry.setStatus('mandatory')
g3ipintlistNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipintlistNodeName.setStatus('mandatory')
g3ipintlistSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 125, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipintlistSlot.setStatus('mandatory')
g3stamedlistTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamedlistTage.setStatus('mandatory')
g3stamedlistTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3stamedlistTintvl.setStatus('mandatory')
g3stamedlistTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamedlistTdelay.setStatus('mandatory')
g3stamedlistTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3stamedlistTretrieve.setStatus('mandatory')
g3stamedlistTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamedlistTcount.setStatus('mandatory')
g3stamedlistTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126, 6), )
if mibBuilder.loadTexts: g3stamedlistTable.setStatus('mandatory')
g3stamedlistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3stamedlistGatewayStatus"))
if mibBuilder.loadTexts: g3stamedlistEntry.setStatus('mandatory')
g3stamedlistGatewayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 126, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3stamedlistGatewayStatus.setStatus('mandatory')
g3lsplistTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistTage.setStatus('mandatory')
g3lsplistTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3lsplistTintvl.setStatus('mandatory')
g3lsplistTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistTdelay.setStatus('mandatory')
g3lsplistTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3lsplistTretrieve.setStatus('mandatory')
g3lsplistTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistTcount.setStatus('mandatory')
g3lsplistTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6), )
if mibBuilder.loadTexts: g3lsplistTable.setStatus('mandatory')
g3lsplistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3lsplistNodeName"))
if mibBuilder.loadTexts: g3lsplistEntry.setStatus('mandatory')
g3lsplistNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistNodeName.setStatus('mandatory')
g3lsplistIPAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistIPAddr1.setStatus('mandatory')
g3lsplistIPAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistIPAddr2.setStatus('mandatory')
g3lsplistIPAddr3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistIPAddr3.setStatus('mandatory')
g3lsplistIPAddr4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistIPAddr4.setStatus('mandatory')
g3lsplistAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistAvailable.setStatus('mandatory')
g3lsplistXlnUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistXlnUpdated.setStatus('mandatory')
g3lsplistServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 127, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3lsplistServiceState.setStatus('mandatory')
g3eventhourTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourTage.setStatus('mandatory')
g3eventhourTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3eventhourTintvl.setStatus('mandatory')
g3eventhourTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourTdelay.setStatus('mandatory')
g3eventhourTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3eventhourTretrieve.setStatus('mandatory')
g3eventhourTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourTcount.setStatus('mandatory')
g3eventhourTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6), )
if mibBuilder.loadTexts: g3eventhourTable.setStatus('mandatory')
g3eventhourEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3eventhourEventType"), (0, "G3-AVAYA-MIB", "g3eventhourIndex"))
if mibBuilder.loadTexts: g3eventhourEntry.setStatus('mandatory')
g3eventhourEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourEventType.setStatus('mandatory')
g3eventhourIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourIndex.setStatus('mandatory')
g3eventhourEventDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourEventDesc.setStatus('mandatory')
g3eventhourEventData1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourEventData1.setStatus('mandatory')
g3eventhourEventData2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourEventData2.setStatus('mandatory')
g3eventhourFirstMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourFirstMonth.setStatus('mandatory')
g3eventhourFirstDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourFirstDay.setStatus('mandatory')
g3eventhourFirstHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourFirstHour.setStatus('mandatory')
g3eventhourFirstMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourFirstMinute.setStatus('mandatory')
g3eventhourLastMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourLastMonth.setStatus('mandatory')
g3eventhourLastDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourLastDay.setStatus('mandatory')
g3eventhourLastHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourLastHour.setStatus('mandatory')
g3eventhourLastMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourLastMinute.setStatus('mandatory')
g3eventhourEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 128, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventhourEventCount.setStatus('mandatory')
g3eventdayTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayTage.setStatus('mandatory')
g3eventdayTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3eventdayTintvl.setStatus('mandatory')
g3eventdayTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayTdelay.setStatus('mandatory')
g3eventdayTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3eventdayTretrieve.setStatus('mandatory')
g3eventdayTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayTcount.setStatus('mandatory')
g3eventdayTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6), )
if mibBuilder.loadTexts: g3eventdayTable.setStatus('mandatory')
g3eventdayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3eventdayEventType"), (0, "G3-AVAYA-MIB", "g3eventdayIndex"))
if mibBuilder.loadTexts: g3eventdayEntry.setStatus('mandatory')
g3eventdayEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayEventType.setStatus('mandatory')
g3eventdayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayIndex.setStatus('mandatory')
g3eventdayEventDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayEventDesc.setStatus('mandatory')
g3eventdayEventData1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayEventData1.setStatus('mandatory')
g3eventdayEventData2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayEventData2.setStatus('mandatory')
g3eventdayFirstMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayFirstMonth.setStatus('mandatory')
g3eventdayFirstDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayFirstDay.setStatus('mandatory')
g3eventdayFirstHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayFirstHour.setStatus('mandatory')
g3eventdayFirstMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayFirstMinute.setStatus('mandatory')
g3eventdayLastMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayLastMonth.setStatus('mandatory')
g3eventdayLastDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayLastDay.setStatus('mandatory')
g3eventdayLastHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayLastHour.setStatus('mandatory')
g3eventdayLastMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayLastMinute.setStatus('mandatory')
g3eventdayEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 129, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3eventdayEventCount.setStatus('mandatory')
g3statregionTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionTage.setStatus('mandatory')
g3statregionTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3statregionTintvl.setStatus('mandatory')
g3statregionTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionTdelay.setStatus('mandatory')
g3statregionTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3statregionTretrieve.setStatus('mandatory')
g3statregionTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionTcount.setStatus('mandatory')
g3statregionTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6), )
if mibBuilder.loadTexts: g3statregionTable.setStatus('mandatory')
g3statregionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3statregionSourceRegion"), (0, "G3-AVAYA-MIB", "g3statregionDestRegion"))
if mibBuilder.loadTexts: g3statregionEntry.setStatus('mandatory')
g3statregionSourceRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionSourceRegion.setStatus('mandatory')
g3statregionDestRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionDestRegion.setStatus('mandatory')
g3statregionConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionConnType.setStatus('mandatory')
g3statregionConnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionConnStatus.setStatus('mandatory')
g3statregionBWLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionBWLimitValue.setStatus('mandatory')
g3statregionBWLimitUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionBWLimitUnits.setStatus('mandatory')
g3statregionBWUsedTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionBWUsedTx.setStatus('mandatory')
g3statregionBWUsedRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionBWUsedRx.setStatus('mandatory')
g3statregionNbrConnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionNbrConnTx.setStatus('mandatory')
g3statregionNbrConnRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionNbrConnRx.setStatus('mandatory')
g3statregionDenialCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 130, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statregionDenialCount.setStatus('mandatory')
g3ipnetregionTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipnetregionTage.setStatus('mandatory')
g3ipnetregionTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionTintvl.setStatus('mandatory')
g3ipnetregionTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipnetregionTdelay.setStatus('mandatory')
g3ipnetregionTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionTretrieve.setStatus('mandatory')
g3ipnetregionTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipnetregionTcount.setStatus('mandatory')
g3ipnetregionTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6), )
if mibBuilder.loadTexts: g3ipnetregionTable.setStatus('mandatory')
g3ipnetregionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipnetregionRegion"))
if mibBuilder.loadTexts: g3ipnetregionEntry.setStatus('mandatory')
g3ipnetregionRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionRegion.setStatus('mandatory')
g3ipnetregionCCPHB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionCCPHB.setStatus('mandatory')
g3ipnetregionAudioPHB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionAudioPHB.setStatus('mandatory')
g3ipnetregionCC8021Pri = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionCC8021Pri.setStatus('mandatory')
g3ipnetregionAudio8021Pri = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionAudio8021Pri.setStatus('mandatory')
g3ipnetregionRSVPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionRSVPEnabled.setStatus('mandatory')
g3ipnetregionRSVPRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionRSVPRefresh.setStatus('mandatory')
g3ipnetregionRSVPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionRSVPFailure.setStatus('mandatory')
g3ipnetregionRSVPProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionRSVPProfile.setStatus('mandatory')
g3ipnetregionRSVPBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipnetregionRSVPBBE.setStatus('mandatory')
g3ipnetregionLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 131, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipnetregionLastError.setStatus('mandatory')
g3statmedproTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproTage.setStatus('mandatory')
g3statmedproTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3statmedproTintvl.setStatus('mandatory')
g3statmedproTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproTdelay.setStatus('mandatory')
g3statmedproTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3statmedproTretrieve.setStatus('mandatory')
g3statmedproTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproTcount.setStatus('mandatory')
g3statmedproTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6), )
if mibBuilder.loadTexts: g3statmedproTable.setStatus('mandatory')
g3statmedproEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3statmedproBoardLoc"))
if mibBuilder.loadTexts: g3statmedproEntry.setStatus('mandatory')
g3statmedproBoardLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproBoardLoc.setStatus('mandatory')
g3statmedproState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproState.setStatus('mandatory')
g3statmedproNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproNodeName.setStatus('mandatory')
g3statmedproSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproSourceIP.setStatus('mandatory')
g3statmedproSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproSubnetMask.setStatus('mandatory')
g3statmedproBroadCastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproBroadCastAddr.setStatus('mandatory')
g3statmedproPhysicalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproPhysicalAddr.setStatus('mandatory')
g3statmedproEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproEnabled.setStatus('mandatory')
g3statmedproDSPChanStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDSPChanStatus1.setStatus('mandatory')
g3statmedproDSPChanStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDSPChanStatus2.setStatus('mandatory')
g3statmedproDSPChanStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDSPChanStatus3.setStatus('mandatory')
g3statmedproDSPChanStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDSPChanStatus4.setStatus('mandatory')
g3statmedproDSPChanStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDSPChanStatus5.setStatus('mandatory')
g3statmedproDSPChanStatus6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDSPChanStatus6.setStatus('mandatory')
g3statmedproDSPChanStatus7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDSPChanStatus7.setStatus('mandatory')
g3statmedproDSPChanStatus8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDSPChanStatus8.setStatus('mandatory')
g3statmedproNetworkRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproNetworkRegion.setStatus('mandatory')
g3statmedproAltNetworkRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproAltNetworkRegion.setStatus('mandatory')
g3statmedproStandbyRefreshed = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproStandbyRefreshed.setStatus('mandatory')
g3statmedproSharedIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproSharedIP.setStatus('mandatory')
g3statmedproSharedVirtMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproSharedVirtMAC.setStatus('mandatory')
g3statmedproDupBoardLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupBoardLoc.setStatus('mandatory')
g3statmedproDupState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupState.setStatus('mandatory')
g3statmedproDupNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupNodeName.setStatus('mandatory')
g3statmedproDupSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupSourceIP.setStatus('mandatory')
g3statmedproDupSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupSubnetMask.setStatus('mandatory')
g3statmedproDupBroadCastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupBroadCastAddr.setStatus('mandatory')
g3statmedproDupPhysicalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupPhysicalAddr.setStatus('mandatory')
g3statmedproDupEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupEnabled.setStatus('mandatory')
g3statmedproLinkCCL = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproLinkCCL.setStatus('mandatory')
g3statmedproLinkEth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproLinkEth.setStatus('mandatory')
g3statmedproLinkPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproLinkPeer.setStatus('mandatory')
g3statmedproAlarmMaj = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproAlarmMaj.setStatus('mandatory')
g3statmedproAlarmMin = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproAlarmMin.setStatus('mandatory')
g3statmedproAlarmWrn = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproAlarmWrn.setStatus('mandatory')
g3statmedproDupLinkCCL = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupLinkCCL.setStatus('mandatory')
g3statmedproDupLinkEth = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupLinkEth.setStatus('mandatory')
g3statmedproDupLinkPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupLinkPeer.setStatus('mandatory')
g3statmedproDupAlarmMaj = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupAlarmMaj.setStatus('mandatory')
g3statmedproDupAlarmMin = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupAlarmMin.setStatus('mandatory')
g3statmedproDupAlarmWrn = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 132, 6, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statmedproDupAlarmWrn.setStatus('mandatory')
g3ipunregTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipunregTage.setStatus('mandatory')
g3ipunregTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipunregTintvl.setStatus('mandatory')
g3ipunregTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipunregTdelay.setStatus('mandatory')
g3ipunregTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3ipunregTretrieve.setStatus('mandatory')
g3ipunregTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipunregTcount.setStatus('mandatory')
g3ipunregTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 6), )
if mibBuilder.loadTexts: g3ipunregTable.setStatus('mandatory')
g3ipunregEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3ipunregStatExtn"))
if mibBuilder.loadTexts: g3ipunregEntry.setStatus('mandatory')
g3ipunregStatExtn = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipunregStatExtn.setStatus('mandatory')
g3ipunregStatPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipunregStatPort.setStatus('mandatory')
g3ipunregStatReg = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 133, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3ipunregStatReg.setStatus('mandatory')
g3commlinkTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3commlinkTage.setStatus('mandatory')
g3commlinkTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3commlinkTintvl.setStatus('mandatory')
g3commlinkTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3commlinkTdelay.setStatus('mandatory')
g3commlinkTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3commlinkTretrieve.setStatus('mandatory')
g3commlinkTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3commlinkTcount.setStatus('mandatory')
g3commlinkTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 6), )
if mibBuilder.loadTexts: g3commlinkTable.setStatus('mandatory')
g3commlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3commlinkLinkNumber"))
if mibBuilder.loadTexts: g3commlinkEntry.setStatus('mandatory')
g3commlinkLinkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3commlinkLinkNumber.setStatus('mandatory')
g3commlinkLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 134, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3commlinkLinkType.setStatus('mandatory')
g3statlinkTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statlinkTage.setStatus('mandatory')
g3statlinkTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3statlinkTintvl.setStatus('mandatory')
g3statlinkTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statlinkTdelay.setStatus('mandatory')
g3statlinkTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3statlinkTretrieve.setStatus('mandatory')
g3statlinkTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statlinkTcount.setStatus('mandatory')
g3statlinkTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 6), )
if mibBuilder.loadTexts: g3statlinkTable.setStatus('mandatory')
g3statlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3statlinkSysLinkNumber"))
if mibBuilder.loadTexts: g3statlinkEntry.setStatus('mandatory')
g3statlinkSysLinkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statlinkSysLinkNumber.setStatus('mandatory')
g3statlinkCLANBoardLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statlinkCLANBoardLoc.setStatus('mandatory')
g3statlinkDOLANSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 135, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3statlinkDOLANSessions.setStatus('mandatory')
g3covpathTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathTage.setStatus('mandatory')
g3covpathTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3covpathTintvl.setStatus('mandatory')
g3covpathTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathTdelay.setStatus('mandatory')
g3covpathTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3covpathTretrieve.setStatus('mandatory')
g3covpathTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathTcount.setStatus('mandatory')
g3covpathTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6), )
if mibBuilder.loadTexts: g3covpathTable.setStatus('mandatory')
g3covpathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3covpathCoveragePath"))
if mibBuilder.loadTexts: g3covpathEntry.setStatus('mandatory')
g3covpathCoveragePath = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathCoveragePath.setStatus('mandatory')
g3covpathMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathMeasHour.setStatus('mandatory')
g3covpathCallsOffTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathCallsOffTotal.setStatus('mandatory')
g3covpathCallsOffAct = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathCallsOffAct.setStatus('mandatory')
g3covpathCallsOffBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathCallsOffBusy.setStatus('mandatory')
g3covpathCallsOffDA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathCallsOffDA.setStatus('mandatory')
g3covpathCallsOffCA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathCallsOffCA.setStatus('mandatory')
g3covpathCallsOffSAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathCallsOffSAC.setStatus('mandatory')
g3covpathCallsOffCB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathCallsOffCB.setStatus('mandatory')
g3covpathPoint1Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint1Ans.setStatus('mandatory')
g3covpathPoint2Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint2Ans.setStatus('mandatory')
g3covpathPoint3Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint3Ans.setStatus('mandatory')
g3covpathPoint4Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint4Ans.setStatus('mandatory')
g3covpathPoint5Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint5Ans.setStatus('mandatory')
g3covpathPoint6Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint6Ans.setStatus('mandatory')
g3covpathPoint1Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint1Aband.setStatus('mandatory')
g3covpathPoint2Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint2Aband.setStatus('mandatory')
g3covpathPoint3Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint3Aband.setStatus('mandatory')
g3covpathPoint4Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint4Aband.setStatus('mandatory')
g3covpathPoint5Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint5Aband.setStatus('mandatory')
g3covpathPoint6Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 136, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3covpathPoint6Aband.setStatus('mandatory')
g3pkcovpathTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathTage.setStatus('mandatory')
g3pkcovpathTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkcovpathTintvl.setStatus('mandatory')
g3pkcovpathTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathTdelay.setStatus('mandatory')
g3pkcovpathTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkcovpathTretrieve.setStatus('mandatory')
g3pkcovpathTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathTcount.setStatus('mandatory')
g3pkcovpathTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6), )
if mibBuilder.loadTexts: g3pkcovpathTable.setStatus('mandatory')
g3pkcovpathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkcovpathCoveragePath"))
if mibBuilder.loadTexts: g3pkcovpathEntry.setStatus('mandatory')
g3pkcovpathCoveragePath = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathCoveragePath.setStatus('mandatory')
g3pkcovpathMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathMeasHour.setStatus('mandatory')
g3pkcovpathCallsOffTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathCallsOffTotal.setStatus('mandatory')
g3pkcovpathCallsOffAct = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathCallsOffAct.setStatus('mandatory')
g3pkcovpathCallsOffBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathCallsOffBusy.setStatus('mandatory')
g3pkcovpathCallsOffDA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathCallsOffDA.setStatus('mandatory')
g3pkcovpathCallsOffCA = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathCallsOffCA.setStatus('mandatory')
g3pkcovpathCallsOffSAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathCallsOffSAC.setStatus('mandatory')
g3pkcovpathCallsOffCB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathCallsOffCB.setStatus('mandatory')
g3pkcovpathPoint1Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint1Ans.setStatus('mandatory')
g3pkcovpathPoint2Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint2Ans.setStatus('mandatory')
g3pkcovpathPoint3Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint3Ans.setStatus('mandatory')
g3pkcovpathPoint4Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint4Ans.setStatus('mandatory')
g3pkcovpathPoint5Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint5Ans.setStatus('mandatory')
g3pkcovpathPoint6Ans = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint6Ans.setStatus('mandatory')
g3pkcovpathPoint1Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint1Aband.setStatus('mandatory')
g3pkcovpathPoint2Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint2Aband.setStatus('mandatory')
g3pkcovpathPoint3Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint3Aband.setStatus('mandatory')
g3pkcovpathPoint4Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint4Aband.setStatus('mandatory')
g3pkcovpathPoint5Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint5Aband.setStatus('mandatory')
g3pkcovpathPoint6Aband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 137, 6, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkcovpathPoint6Aband.setStatus('mandatory')
g3principalTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalTage.setStatus('mandatory')
g3principalTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3principalTintvl.setStatus('mandatory')
g3principalTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalTdelay.setStatus('mandatory')
g3principalTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3principalTretrieve.setStatus('mandatory')
g3principalTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalTcount.setStatus('mandatory')
g3principalTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6), )
if mibBuilder.loadTexts: g3principalTable.setStatus('mandatory')
g3principalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3principalExtensionTAC"))
if mibBuilder.loadTexts: g3principalEntry.setStatus('mandatory')
g3principalExtensionTAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalExtensionTAC.setStatus('mandatory')
g3principalMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalMeasHour.setStatus('mandatory')
g3principalCallsOffTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsOffTotal.setStatus('mandatory')
g3principalCallsAband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsAband.setStatus('mandatory')
g3principalCallsRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsRedirect.setStatus('mandatory')
g3principalCallsCAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsCAC.setStatus('mandatory')
g3principalCallsCBC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsCBC.setStatus('mandatory')
g3principalCallsCDAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsCDAC.setStatus('mandatory')
g3principalCallsCCAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsCCAC.setStatus('mandatory')
g3principalCallsCSAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsCSAC.setStatus('mandatory')
g3principalCallsCSCB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCallsCSCB.setStatus('mandatory')
g3principalCovPath1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCovPath1.setStatus('mandatory')
g3principalCovPath2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCovPath2.setStatus('mandatory')
g3principalCovPath3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCovPath3.setStatus('mandatory')
g3principalCovPath4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCovPath4.setStatus('mandatory')
g3principalCovPath5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCovPath5.setStatus('mandatory')
g3principalCovPath6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCovPath6.setStatus('mandatory')
g3principalCovPath7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCovPath7.setStatus('mandatory')
g3principalCovPath8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 138, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3principalCovPath8.setStatus('mandatory')
g3pkprincipalTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalTage.setStatus('mandatory')
g3pkprincipalTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkprincipalTintvl.setStatus('mandatory')
g3pkprincipalTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalTdelay.setStatus('mandatory')
g3pkprincipalTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3pkprincipalTretrieve.setStatus('mandatory')
g3pkprincipalTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalTcount.setStatus('mandatory')
g3pkprincipalTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6), )
if mibBuilder.loadTexts: g3pkprincipalTable.setStatus('mandatory')
g3pkprincipalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3pkprincipalExtensionTAC"))
if mibBuilder.loadTexts: g3pkprincipalEntry.setStatus('mandatory')
g3pkprincipalExtensionTAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalExtensionTAC.setStatus('mandatory')
g3pkprincipalMeasHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalMeasHour.setStatus('mandatory')
g3pkprincipalCallsOffTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsOffTotal.setStatus('mandatory')
g3pkprincipalCallsAband = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsAband.setStatus('mandatory')
g3pkprincipalCallsRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsRedirect.setStatus('mandatory')
g3pkprincipalCallsCAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsCAC.setStatus('mandatory')
g3pkprincipalCallsCBC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsCBC.setStatus('mandatory')
g3pkprincipalCallsCDAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsCDAC.setStatus('mandatory')
g3pkprincipalCallsCCAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsCCAC.setStatus('mandatory')
g3pkprincipalCallsCSAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsCSAC.setStatus('mandatory')
g3pkprincipalCallsCSCB = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCallsCSCB.setStatus('mandatory')
g3pkprincipalCovPath1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCovPath1.setStatus('mandatory')
g3pkprincipalCovPath2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCovPath2.setStatus('mandatory')
g3pkprincipalCovPath3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCovPath3.setStatus('mandatory')
g3pkprincipalCovPath4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCovPath4.setStatus('mandatory')
g3pkprincipalCovPath5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCovPath5.setStatus('mandatory')
g3pkprincipalCovPath6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCovPath6.setStatus('mandatory')
g3pkprincipalCovPath7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCovPath7.setStatus('mandatory')
g3pkprincipalCovPath8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 139, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3pkprincipalCovPath8.setStatus('mandatory')
g3esmainTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainTage.setStatus('mandatory')
g3esmainTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3esmainTintvl.setStatus('mandatory')
g3esmainTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainTdelay.setStatus('mandatory')
g3esmainTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3esmainTretrieve.setStatus('mandatory')
g3esmainTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainTcount.setStatus('mandatory')
g3esmainTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6), )
if mibBuilder.loadTexts: g3esmainTable.setStatus('mandatory')
g3esmainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3esmainClusterId"))
if mibBuilder.loadTexts: g3esmainEntry.setStatus('mandatory')
g3esmainClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainClusterId.setStatus('mandatory')
g3esmainPlatformType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainPlatformType.setStatus('mandatory')
g3esmainServerAId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerAId.setStatus('mandatory')
g3esmainServerAIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerAIP1.setStatus('mandatory')
g3esmainServerAIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerAIP2.setStatus('mandatory')
g3esmainServerAIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerAIP3.setStatus('mandatory')
g3esmainServerAIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerAIP4.setStatus('mandatory')
g3esmainServerBId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerBId.setStatus('mandatory')
g3esmainServerBIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerBIP1.setStatus('mandatory')
g3esmainServerBIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerBIP2.setStatus('mandatory')
g3esmainServerBIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerBIP3.setStatus('mandatory')
g3esmainServerBIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainServerBIP4.setStatus('mandatory')
g3esmainPriorityScore = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainPriorityScore.setStatus('mandatory')
g3esmainNetComm = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainNetComm.setStatus('mandatory')
g3esmainSystemPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainSystemPref.setStatus('mandatory')
g3esmainLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainLocalPref.setStatus('mandatory')
g3esmainLocalOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 140, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esmainLocalOnly.setStatus('mandatory')
g3esserversTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversTage.setStatus('mandatory')
g3esserversTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3esserversTintvl.setStatus('mandatory')
g3esserversTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversTdelay.setStatus('mandatory')
g3esserversTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3esserversTretrieve.setStatus('mandatory')
g3esserversTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversTcount.setStatus('mandatory')
g3esserversTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6), )
if mibBuilder.loadTexts: g3esserversTable.setStatus('mandatory')
g3esserversEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3esserversClusterId"))
if mibBuilder.loadTexts: g3esserversEntry.setStatus('mandatory')
g3esserversClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversClusterId.setStatus('mandatory')
g3esserversPlatformType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversPlatformType.setStatus('mandatory')
g3esserversServerAId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerAId.setStatus('mandatory')
g3esserversServerAIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerAIP1.setStatus('mandatory')
g3esserversServerAIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerAIP2.setStatus('mandatory')
g3esserversServerAIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerAIP3.setStatus('mandatory')
g3esserversServerAIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerAIP4.setStatus('mandatory')
g3esserversServerBId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerBId.setStatus('mandatory')
g3esserversServerBIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerBIP1.setStatus('mandatory')
g3esserversServerBIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerBIP2.setStatus('mandatory')
g3esserversServerBIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerBIP3.setStatus('mandatory')
g3esserversServerBIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversServerBIP4.setStatus('mandatory')
g3esserversPriorityScore = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversPriorityScore.setStatus('mandatory')
g3esserversNetComm = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversNetComm.setStatus('mandatory')
g3esserversSystemPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversSystemPref.setStatus('mandatory')
g3esserversLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversLocalPref.setStatus('mandatory')
g3esserversLocalOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 141, 6, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esserversLocalOnly.setStatus('mandatory')
g3esparmsTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsTage.setStatus('mandatory')
g3esparmsTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3esparmsTintvl.setStatus('mandatory')
g3esparmsTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsTdelay.setStatus('mandatory')
g3esparmsTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3esparmsTretrieve.setStatus('mandatory')
g3esparmsTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsTcount.setStatus('mandatory')
g3esparmsNetCommunity1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity1.setStatus('mandatory')
g3esparmsNetCommunity2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity2.setStatus('mandatory')
g3esparmsNetCommunity3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity3.setStatus('mandatory')
g3esparmsNetCommunity4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity4.setStatus('mandatory')
g3esparmsNetCommunity5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity5.setStatus('mandatory')
g3esparmsNetCommunity6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity6.setStatus('mandatory')
g3esparmsNetCommunity7 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity7.setStatus('mandatory')
g3esparmsNetCommunity8 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity8.setStatus('mandatory')
g3esparmsNetCommunity9 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity9.setStatus('mandatory')
g3esparmsNetCommunity10 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity10.setStatus('mandatory')
g3esparmsNetCommunity11 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity11.setStatus('mandatory')
g3esparmsNetCommunity12 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity12.setStatus('mandatory')
g3esparmsNetCommunity13 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity13.setStatus('mandatory')
g3esparmsNetCommunity14 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity14.setStatus('mandatory')
g3esparmsNetCommunity15 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity15.setStatus('mandatory')
g3esparmsNetCommunity16 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity16.setStatus('mandatory')
g3esparmsNetCommunity17 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity17.setStatus('mandatory')
g3esparmsNetCommunity18 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity18.setStatus('mandatory')
g3esparmsNetCommunity19 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity19.setStatus('mandatory')
g3esparmsNetCommunity20 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity20.setStatus('mandatory')
g3esparmsNetCommunity21 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity21.setStatus('mandatory')
g3esparmsNetCommunity22 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity22.setStatus('mandatory')
g3esparmsNetCommunity23 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity23.setStatus('mandatory')
g3esparmsNetCommunity24 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity24.setStatus('mandatory')
g3esparmsNetCommunity25 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity25.setStatus('mandatory')
g3esparmsNetCommunity26 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity26.setStatus('mandatory')
g3esparmsNetCommunity27 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity27.setStatus('mandatory')
g3esparmsNetCommunity28 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity28.setStatus('mandatory')
g3esparmsNetCommunity29 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity29.setStatus('mandatory')
g3esparmsNetCommunity30 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity30.setStatus('mandatory')
g3esparmsNetCommunity31 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity31.setStatus('mandatory')
g3esparmsNetCommunity32 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity32.setStatus('mandatory')
g3esparmsNetCommunity33 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity33.setStatus('mandatory')
g3esparmsNetCommunity34 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity34.setStatus('mandatory')
g3esparmsNetCommunity35 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity35.setStatus('mandatory')
g3esparmsNetCommunity36 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity36.setStatus('mandatory')
g3esparmsNetCommunity37 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity37.setStatus('mandatory')
g3esparmsNetCommunity38 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity38.setStatus('mandatory')
g3esparmsNetCommunity39 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity39.setStatus('mandatory')
g3esparmsNetCommunity40 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity40.setStatus('mandatory')
g3esparmsNetCommunity41 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity41.setStatus('mandatory')
g3esparmsNetCommunity42 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity42.setStatus('mandatory')
g3esparmsNetCommunity43 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity43.setStatus('mandatory')
g3esparmsNetCommunity44 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity44.setStatus('mandatory')
g3esparmsNetCommunity45 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity45.setStatus('mandatory')
g3esparmsNetCommunity46 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity46.setStatus('mandatory')
g3esparmsNetCommunity47 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity47.setStatus('mandatory')
g3esparmsNetCommunity48 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity48.setStatus('mandatory')
g3esparmsNetCommunity49 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity49.setStatus('mandatory')
g3esparmsNetCommunity50 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 55), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity50.setStatus('mandatory')
g3esparmsNetCommunity51 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity51.setStatus('mandatory')
g3esparmsNetCommunity52 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity52.setStatus('mandatory')
g3esparmsNetCommunity53 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity53.setStatus('mandatory')
g3esparmsNetCommunity54 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 59), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity54.setStatus('mandatory')
g3esparmsNetCommunity55 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 60), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity55.setStatus('mandatory')
g3esparmsNetCommunity56 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 61), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity56.setStatus('mandatory')
g3esparmsNetCommunity57 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 62), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity57.setStatus('mandatory')
g3esparmsNetCommunity58 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 63), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity58.setStatus('mandatory')
g3esparmsNetCommunity59 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 64), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity59.setStatus('mandatory')
g3esparmsNetCommunity60 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity60.setStatus('mandatory')
g3esparmsNetCommunity61 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 66), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity61.setStatus('mandatory')
g3esparmsNetCommunity62 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 67), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity62.setStatus('mandatory')
g3esparmsNetCommunity63 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity63.setStatus('mandatory')
g3esparmsNetCommunity64 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNetCommunity64.setStatus('mandatory')
g3esparmsAutoReturn = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsAutoReturn.setStatus('mandatory')
g3esparmsDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 71), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsDay.setStatus('mandatory')
g3esparmsHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 72), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsHour.setStatus('mandatory')
g3esparmsMinute = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 73), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsMinute.setStatus('mandatory')
g3esparmsNoServerTO = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 142, 74), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3esparmsNoServerTO.setStatus('mandatory')
g3mgrecruleTage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mgrecruleTage.setStatus('mandatory')
g3mgrecruleTintvl = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3mgrecruleTintvl.setStatus('mandatory')
g3mgrecruleTdelay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mgrecruleTdelay.setStatus('mandatory')
g3mgrecruleTretrieve = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("update", 2), ("current", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3mgrecruleTretrieve.setStatus('mandatory')
g3mgrecruleTcount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mgrecruleTcount.setStatus('mandatory')
g3mgrecruleTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 6), )
if mibBuilder.loadTexts: g3mgrecruleTable.setStatus('mandatory')
g3mgrecruleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 6, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3mgrecruleGatewayNbr"))
if mibBuilder.loadTexts: g3mgrecruleEntry.setStatus('mandatory')
g3mgrecruleGatewayNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mgrecruleGatewayNbr.setStatus('mandatory')
g3mgrecruleGatewayName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mgrecruleGatewayName.setStatus('mandatory')
g3mgrecruleRecRule = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 143, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3mgrecruleRecRule.setStatus('mandatory')
g3busyrlsAction = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 250, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("busyout", 1), ("release", 2), ("campon-busyout", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3busyrlsAction.setStatus('mandatory')
g3busyrlsObject = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 250, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("trunk", 1), ("board", 2), ("media-processor", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3busyrlsObject.setStatus('mandatory')
g3busyrlsTrunkGroup = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 250, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3busyrlsTrunkGroup.setStatus('mandatory')
g3busyrlsTrunkMember = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 250, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3busyrlsTrunkMember.setStatus('mandatory')
g3busyrlsBoard = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 250, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3busyrlsBoard.setStatus('mandatory')
g3busyrlsPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 1, 250, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3busyrlsPort.setStatus('mandatory')
g3clientTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1), )
if mibBuilder.loadTexts: g3clientTable.setStatus('mandatory')
g3clientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3clientTableIndex"))
if mibBuilder.loadTexts: g3clientEntry.setStatus('mandatory')
g3clientCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientCommunity.setStatus('mandatory')
g3clientCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientCustomerId.setStatus('mandatory')
g3clientDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientDescription.setStatus('mandatory')
g3clientExternalName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientExternalName.setStatus('mandatory')
g3clientConnectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientConnectStatus.setStatus('mandatory')
g3clientSubmapType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientSubmapType.setStatus('mandatory')
g3clientState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientState.setStatus('mandatory')
g3clientSubmapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientSubmapName.setStatus('mandatory')
g3clientConnectType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientConnectType.setStatus('mandatory')
g3clientDynamicTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientDynamicTimeout.setStatus('mandatory')
g3clientEnumType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("generic", 1), ("usa", 2), ("custom", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientEnumType.setStatus('mandatory')
g3clientEnumState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50))).clone(namedValues=NamedValues(("alabama", 1), ("alaska", 2), ("arizona", 3), ("arkansas", 4), ("california", 5), ("colorado", 6), ("connecticut", 7), ("delaware", 8), ("florida", 9), ("georgia", 10), ("hawaii", 11), ("idaho", 12), ("illinois", 13), ("indiana", 14), ("iowa", 15), ("kansas", 16), ("kentucky", 17), ("louisiana", 18), ("maine", 19), ("maryland", 20), ("massachusetts", 21), ("michigan", 22), ("minnesota", 23), ("mississippi", 24), ("missouri", 25), ("montana", 26), ("nebraska", 27), ("nevada", 28), ("new-hampshire", 29), ("new-jersey", 30), ("new-mexico", 31), ("new-york", 32), ("north-carolina", 33), ("north-dakota", 34), ("ohio", 35), ("oklahoma", 36), ("oregon", 37), ("pennsylvania", 38), ("rhode-island", 39), ("south-carolina", 40), ("south-dakota", 41), ("tennessee", 42), ("texas", 43), ("utah", 44), ("vermont", 45), ("virginia", 46), ("washington", 47), ("west-virginia", 48), ("wisconsin", 49), ("wyoming", 50)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientEnumState.setStatus('mandatory')
g3clientDialString1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientDialString1.setStatus('mandatory')
g3clientDialString2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientDialString2.setStatus('mandatory')
g3clientProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3clientProductID.setStatus('mandatory')
g3clientTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 1, 1, 1, 16), Integer32())
if mibBuilder.loadTexts: g3clientTableIndex.setStatus('mandatory')
g3agentSubmapType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentSubmapType.setStatus('mandatory')
g3agentState = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentState.setStatus('mandatory')
g3agentSubmapName = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentSubmapName.setStatus('mandatory')
g3agentRelease = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentRelease.setStatus('mandatory')
g3agentDomainName = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentDomainName.setStatus('mandatory')
g3agentSnmpPolling = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentSnmpPolling.setStatus('mandatory')
g3agentSnmpTraps = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentSnmpTraps.setStatus('mandatory')
g3agentSnmpSet = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentSnmpSet.setStatus('mandatory')
g3agentActiveName = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentActiveName.setStatus('mandatory')
g3agentActiveIP = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentActiveIP.setStatus('mandatory')
g3agentServer1Name = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentServer1Name.setStatus('mandatory')
g3agentServer1IP = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentServer1IP.setStatus('mandatory')
g3agentServer1State = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("dormant", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentServer1State.setStatus('mandatory')
g3agentServer2Name = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentServer2Name.setStatus('mandatory')
g3agentServer2IP = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentServer2IP.setStatus('mandatory')
g3agentServer2State = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("dormant", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentServer2State.setStatus('mandatory')
g3agentCLANIP = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentCLANIP.setStatus('mandatory')
g3agentPrim1IP = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentPrim1IP.setStatus('mandatory')
g3agentPrim2IP = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentPrim2IP.setStatus('mandatory')
g3agentServerType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentServerType.setStatus('mandatory')
g3agentOfferType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentOfferType.setStatus('mandatory')
g3agentLspConfig = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentLspConfig.setStatus('mandatory')
g3agentEssConfig = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 2, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3agentEssConfig.setStatus('mandatory')
g3trapDestination = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapDestination.setStatus('mandatory')
g3trapFilterNumber = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapFilterNumber.setStatus('mandatory')
g3trapFrequency = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapFrequency.setStatus('mandatory')
g3trapOperation = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("add-replace", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapOperation.setStatus('mandatory')
g3trapActive = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapActive.setStatus('mandatory')
g3trapResolved = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapResolved.setStatus('mandatory')
g3trapMajor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapMajor.setStatus('mandatory')
g3trapMinor = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapMinor.setStatus('mandatory')
g3trapWarning = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapWarning.setStatus('mandatory')
g3trapInterval = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("hour", 1), ("day", 2), ("week", 3), ("month", 4), ("all", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapInterval.setStatus('mandatory')
g3trapFromMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapFromMonth.setStatus('mandatory')
g3trapFromDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapFromDay.setStatus('mandatory')
g3trapFromHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapFromHour.setStatus('mandatory')
g3trapFromMinute = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapFromMinute.setStatus('mandatory')
g3trapToMonth = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapToMonth.setStatus('mandatory')
g3trapToDay = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapToDay.setStatus('mandatory')
g3trapToHour = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapToHour.setStatus('mandatory')
g3trapToMinute = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapToMinute.setStatus('mandatory')
g3trapMediaGateway = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapMediaGateway.setStatus('mandatory')
g3trapCabinet = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapCabinet.setStatus('mandatory')
g3trapPortNetwork = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3trapPortNetwork.setStatus('mandatory')
g3trapBoardNumber = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapBoardNumber.setStatus('mandatory')
g3trapPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapPort.setStatus('mandatory')
g3trapCategory = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapCategory.setStatus('mandatory')
g3trapMaintenanceObject = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapMaintenanceObject.setStatus('mandatory')
g3trapExtension = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapExtension.setStatus('mandatory')
g3trapTrunkGroup = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapTrunkGroup.setStatus('mandatory')
g3trapTrunkMember = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 3, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3trapTrunkMember.setStatus('mandatory')
g3filterFilterStatus = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("current", 1), ("update", 2), ("abort", 3), ("save", 4), ("clear", 5), ("off", 6), ("on", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g3filterFilterStatus.setStatus('mandatory')
g3filterTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2), )
if mibBuilder.loadTexts: g3filterTable.setStatus('mandatory')
g3filterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1), ).setIndexNames((0, "G3-AVAYA-MIB", "g3filterDestination"), (0, "G3-AVAYA-MIB", "g3filterFilterNumber"))
if mibBuilder.loadTexts: g3filterEntry.setStatus('mandatory')
g3filterDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterDestination.setStatus('mandatory')
g3filterFilterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterFilterNumber.setStatus('mandatory')
g3filterFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterFrequency.setStatus('mandatory')
g3filterActive = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterActive.setStatus('mandatory')
g3filterResolved = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterResolved.setStatus('mandatory')
g3filterMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterMajor.setStatus('mandatory')
g3filterMinor = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterMinor.setStatus('mandatory')
g3filterWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterWarning.setStatus('mandatory')
g3filterMediaGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterMediaGateway.setStatus('mandatory')
g3filterCabinet = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterCabinet.setStatus('mandatory')
g3filterPortNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterPortNetwork.setStatus('mandatory')
g3filterBoardNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterBoardNumber.setStatus('mandatory')
g3filterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterPort.setStatus('mandatory')
g3filterCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterCategory.setStatus('mandatory')
g3filterMaintenanceObject = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterMaintenanceObject.setStatus('mandatory')
g3filterExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterExtension.setStatus('mandatory')
g3filterTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterTrunkGroup.setStatus('mandatory')
g3filterTrunkMember = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g3filterTrunkMember.setStatus('mandatory')
g3filterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 8, 2, 4, 2, 1, 19), Integer32())
if mibBuilder.loadTexts: g3filterTableIndex.setStatus('mandatory')
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3acaTretrieve=g3acaTretrieve, g3configPort31=g3configPort31, g3gateway=g3gateway, g3atmportpg1TGNumber29=g3atmportpg1TGNumber29, g3pkipdspsumTage=g3pkipdspsumTage, g3statlinkCLANBoardLoc=g3statlinkCLANBoardLoc, g3acaYear=g3acaYear, g3eventdayTable=g3eventdayTable, g3snblock=g3snblock, g3trapTrunkGroup=g3trapTrunkGroup, g3callratesrvTage=g3callratesrvTage, g3pkrpatDay=g3pkrpatDay, g3atmpncPncSELA=g3atmpncPncSELA, g3tonerecCCTTRPnAlloc=g3tonerecCCTTRPnAlloc, g3atmportpg1TGNumber34=g3atmportpg1TGNumber34, g3siggroupTage=g3siggroupTage, g3atmportpg1TGNumber25=g3atmportpg1TGNumber25, g3esserversTdelay=g3esserversTdelay, g3callratetotalNumCallsYesterday=g3callratetotalNumCallsYesterday, g3mgrecruleTable=g3mgrecruleTable, g3rpatcfg=g3rpatcfg, g3healthPncStat1to1512=g3healthPncStat1to1512, g3tonerecsumCCMFCRPReq=g3tonerecsumCCMFCRPReq, g3rpatTintvl=g3rpatTintvl, g3callratedataTintvl=g3callratedataTintvl, g3pkloadtanTage=g3pkloadtanTage, g3lsplistTable=g3lsplistTable, g3gatewayG350ModTypeV1=g3gatewayG350ModTypeV1, g3atmportpg1TGNumber8=g3atmportpg1TGNumber8, g3loadincDay=g3loadincDay, g3pkipcodecsumHour=g3pkipcodecsumHour, g3trapResolved=g3trapResolved, g3pktonerecDay=g3pktonerecDay, g3stamediaGatewayStatus62=g3stamediaGatewayStatus62, g3esparmsHour=g3esparmsHour, g3ipinterfaceNodeName47=g3ipinterfaceNodeName47, g3trunkoutDay=g3trunkoutDay, g3eventhour=g3eventhour, g3trunkstaConnPort9=g3trunkstaConnPort9, g3ipintlistNodeName=g3ipintlistNodeName, g3ipsignalIntvlAvgLatency=g3ipsignalIntvlAvgLatency, g3esparmsNetCommunity20=g3esparmsNetCommunity20, g3bulletinMessage44=g3bulletinMessage44, g3atmportpg2SGNumber92=g3atmportpg2SGNumber92, g3atmportpg3SGNumber232=g3atmportpg3SGNumber232, g3regipstatExtension=g3regipstatExtension, g3trapMaintenanceObject=g3trapMaintenanceObject, g3secviolateTtlValidSSC=g3secviolateTtlValidSSC, g3stamediaGatewayStatus59=g3stamediaGatewayStatus59, g3atmportpg1TGNumber82=g3atmportpg1TGNumber82, g3mmisumMonth=g3mmisumMonth, g3annintegTable=g3annintegTable, g3pkprincipalExtensionTAC=g3pkprincipalExtensionTAC, g3attdgrpMeasType=g3attdgrpMeasType, g3restartCarrier=g3restartCarrier, g3pktrunksumTcount=g3pktrunksumTcount, g3occsumTage=g3occsumTage, g3atmportpg3LSGNumber1=g3atmportpg3LSGNumber1, g3atmpncPncHoDsp2A=g3atmpncPncHoDsp2A, g3ipsignalHourAvgLatency=g3ipsignalHourAvgLatency, g3ds1BitRate=g3ds1BitRate, g3ipsignalWorstInterval=g3ipsignalWorstInterval, g3mgrecruleGatewayNbr=g3mgrecruleGatewayNbr, g3vintageATMPnc=g3vintageATMPnc, g3pkipdspsumRegion=g3pkipdspsumRegion, g3pkhuntYear=g3pkhuntYear, g3statmedproAltNetworkRegion=g3statmedproAltNetworkRegion, g3bulletinMessage24=g3bulletinMessage24, g3pkannintegCallsQueued=g3pkannintegCallsQueued, g3dmoduleExtension=g3dmoduleExtension, g3statmedproState=g3statmedproState, g3pkloadoutTage=g3pkloadoutTage, g3atmportpg3TGNumber208=g3atmportpg3TGNumber208, g3atmportpg1SGNumber87=g3atmportpg1SGNumber87, g3trunkgrpTintvl=g3trunkgrpTintvl, g3pkannall=g3pkannall, g3atmportpg1Location=g3atmportpg1Location, g3pkcovpathTretrieve=g3pkcovpathTretrieve, g3mmisumPercentBlock=g3mmisumPercentBlock, g3pnchealthPncBSNIntrIdx=g3pnchealthPncBSNIntrIdx, g3pkrpatPattern=g3pkrpatPattern, g3stamediaGatewayStatus12=g3stamediaGatewayStatus12, g3agentServer2State=g3agentServer2State, g3voicesumOutofService=g3voicesumOutofService, g3atmportpg2SGNumber140=g3atmportpg2SGNumber140, g3pkloadtotalMonth=g3pkloadtotalMonth, g3annallExtension=g3annallExtension, g3clanpppTable=g3clanpppTable, g3voicesumTcount=g3voicesumTcount, g3cbctrunkMeasHour=g3cbctrunkMeasHour, g3siggroupTretrieve=g3siggroupTretrieve, g3atmportpg1TGNumber57=g3atmportpg1TGNumber57, g3attdgrpMeasHour=g3attdgrpMeasHour, g3errorsMinLast=g3errorsMinLast, g3gatewaySiteData2=g3gatewaySiteData2, g3atmpncPncLocB=g3atmpncPncLocB, g3pkloadint=g3pkloadint, g3ipinterfaceSlot39=g3ipinterfaceSlot39, g3clanpppChapFailDelta=g3clanpppChapFailDelta, g3callratevoiceRunDay=g3callratevoiceRunDay, g3healthMajor=g3healthMajor, g3bulletinMessage42=g3bulletinMessage42, g3atmportpg1SGNumber46=g3atmportpg1SGNumber46, g3atmportpg1TGNumber17=g3atmportpg1TGNumber17, g3pkesmsumDay=g3pkesmsumDay, g3mmisumMMIDenials=g3mmisumMMIDenials, g3principalCallsCCAC=g3principalCallsCCAC, g3statstaSwitchPort=g3statstaSwitchPort, g3ipinterfaceNodeName64=g3ipinterfaceNodeName64, g3clientDialString2=g3clientDialString2, g3bulletinDate26=g3bulletinDate26, g3trapCabinet=g3trapCabinet, g3pnblockPNNumber=g3pnblockPNNumber, g3filterMinor=g3filterMinor, g3rpatcfgTage=g3rpatcfgTage, g3healthPncStat31to4419=g3healthPncStat31to4419, g3pkpnblockTdmBlockage=g3pkpnblockTdmBlockage, g3pktonerecsumRunDay=g3pktonerecsumRunDay, g3statmedproAlarmMaj=g3statmedproAlarmMaj, g3ipinterfaceNodeName40=g3ipinterfaceNodeName40, g3connectDelay=g3connectDelay, g3pktrunkout=g3pktrunkout, g3secviolateTdelay=g3secviolateTdelay, g3ipinterfaceSlot22=g3ipinterfaceSlot22, g3acaTage=g3acaTage, g3atmportpg3SGNumber225=g3atmportpg3SGNumber225, g3cbctrunkOvfSF=g3cbctrunkOvfSF, g3atmportpg1SGNumber84=g3atmportpg1SGNumber84, g3callratesrvRunHour=g3callratesrvRunHour, g3pkclansocsumDay=g3pkclansocsumDay, g3pkloadintYear=g3pkloadintYear, g3secviolateTtlViolateAC=g3secviolateTtlViolateAC, g3statlinkTintvl=g3statlinkTintvl, g3atmportpg1SGNumber35=g3atmportpg1SGNumber35, g3pkipcodecsumYear=g3pkipcodecsumYear, g3statmedproTage=g3statmedproTage, g3bulletinDate45=g3bulletinDate45, g3pkloadoutHour=g3pkloadoutHour, g3atmportpg1TGNumber43=g3atmportpg1TGNumber43, g3callratetotalBsyIntMnToday2=g3callratetotalBsyIntMnToday2, g3huntlistTage=g3huntlistTage, g3covpathPoint2Ans=g3covpathPoint2Ans, g3statstaPartID=g3statstaPartID, g3pkesmsumEntry=g3pkesmsumEntry, g3esparmsDay=g3esparmsDay, g3dmodulePort=g3dmodulePort, g3ipserverPrimDHCPID=g3ipserverPrimDHCPID, g3ipinterfaceNodeName2=g3ipinterfaceNodeName2, g3atmportpg3SGNumber233=g3atmportpg3SGNumber233, g3callratesrvBsyIntScToday=g3callratesrvBsyIntScToday, avaya_s8500=avaya_s8500, g3configEntry=g3configEntry, g3healthPncStat31to4422=g3healthPncStat31to4422, g3cartypeCab2CarAType=g3cartypeCab2CarAType, g3pktrunksumCallQued=g3pktrunksumCallQued, g3busyrlsObject=g3busyrlsObject, g3ipinterfaceNodeName58=g3ipinterfaceNodeName58, g3healthCab16to3020=g3healthCab16to3020, g3pktonerecsumDTMFPDeny=g3pktonerecsumDTMFPDeny, g3pkloadincTintvl=g3pkloadincTintvl, g3pkloadintIntIntraPNUse=g3pkloadintIntIntraPNUse, g3secviolateStnInvalidAC=g3secviolateStnInvalidAC, g3pkcovpathCallsOffBusy=g3pkcovpathCallsOffBusy, g3callratemediaMeasHour4=g3callratemediaMeasHour4, g3pkannallTretrieve=g3pkannallTretrieve, g3healthCallpOcc=g3healthCallpOcc, g3rpatCallsOffered=g3rpatCallsOffered, g3pktonerecsumGPTDTReq=g3pktonerecsumGPTDTReq, g3atmportpg1SGNumber25=g3atmportpg1SGNumber25, g3eventhourLastMinute=g3eventhourLastMinute, g3esparmsNetCommunity1=g3esparmsNetCommunity1, g3bulletinDate17=g3bulletinDate17, g3ipinterfaceNodeName68=g3ipinterfaceNodeName68, g3covpathCallsOffCA=g3covpathCallsOffCA, g3esparmsNetCommunity37=g3esparmsNetCommunity37, g3pkvoicesumVoiceAllocation=g3pkvoicesumVoiceAllocation, g3loadoutHour=g3loadoutHour, g3healthCab31to4419=g3healthCab31to4419, g3vintageIPStaLimit=g3vintageIPStaLimit, g3healthPncStat1to155=g3healthPncStat1to155, g3vintageCANotify=g3vintageCANotify, g3healthCab1to1510=g3healthCab1to1510, g3msgalmSource=g3msgalmSource, g3ipserverSecStHealth=g3ipserverSecStHealth, g3pktrunkoutTretrieve=g3pktrunkoutTretrieve, g3pktonerecsumGPTDPReq=g3pktonerecsumGPTDPReq, g3bulletinMessage15=g3bulletinMessage15, g3atmportpg1TGNumber28=g3atmportpg1TGNumber28, g3ipinterfaceNodeName71=g3ipinterfaceNodeName71, g3annallPlayRequests=g3annallPlayRequests, g3trunkstaEntry=g3trunkstaEntry, g3covpathCallsOffBusy=g3covpathCallsOffBusy, g3atmportpg3TGNumber230=g3atmportpg3TGNumber230, g3ipinterfaceNodeName61=g3ipinterfaceNodeName61, g3cabinetRoom=g3cabinetRoom, g3datamstaConnPort4=g3datamstaConnPort4, g3clansocsumDay=g3clansocsumDay, g3pkmmisumOutofService=g3pkmmisumOutofService, g3pnblockTdmBlockage=g3pnblockTdmBlockage, g3atmcfgTable=g3atmcfgTable, g3atmportpg2SGNumber99=g3atmportpg2SGNumber99, g3tonerecCCCPTRPnReq=g3tonerecCCCPTRPnReq, g3siggroupIntfNum4=g3siggroupIntfNum4, g3atmportpg1TGNumber51=g3atmportpg1TGNumber51, g3ds1cfgSuffix=g3ds1cfgSuffix, g3atmpncPncHoDsp1B=g3atmpncPncHoDsp1B, g3pkipdspsumYear=g3pkipdspsumYear, g3pktonerecCCMFCRPnReq=g3pktonerecCCMFCRPnReq, g3callratetotalBsyIntScToday=g3callratetotalBsyIntScToday, g3ipserverSocketEncr=g3ipserverSocketEncr, g3atmportpg2SGNumber97=g3atmportpg2SGNumber97, g3principal=g3principal, val_board=val_board, g3stamgann=g3stamgann, g3pnchealthPncBHealth=g3pnchealthPncBHealth, g3esparmsNetCommunity47=g3esparmsNetCommunity47, g3siggroupTdelay=g3siggroupTdelay, g3pktonerecCCCPTRPnAlloc=g3pktonerecCCCPTRPnAlloc, g3pktonerecCCCPTRPnReq=g3pktonerecCCCPTRPnReq, g3secviolateMonth=g3secviolateMonth, g3filterPort=g3filterPort, g3bulletinMessage19=g3bulletinMessage19, g3cabtypeCab3Type=g3cabtypeCab3Type, g3alarmsAltName=g3alarmsAltName, g3atmportpg2Tintvl=g3atmportpg2Tintvl, g3voicesumTable=g3voicesumTable, g3statregionConnStatus=g3statregionConnStatus, g3ipunregTcount=g3ipunregTcount, g3trunkstaConnPort5=g3trunkstaConnPort5, g3pkhuntTimeAvail=g3pkhuntTimeAvail, g3ipinterfaceSlot54=g3ipinterfaceSlot54, g3vintageIPStaAvail=g3vintageIPStaAvail, g3pkcovpath=g3pkcovpath, g3healthPncStat16to3028=g3healthPncStat16to3028, g3siggroupBoard3=g3siggroupBoard3, g3busyrlsBoard=g3busyrlsBoard, g3statregionDenialCount=g3statregionDenialCount, g3secviolateRAViolateAC=g3secviolateRAViolateAC, g3ipdspsumHour=g3ipdspsumHour, g3extdevTintvl=g3extdevTintvl, g3bulletinMessage55=g3bulletinMessage55, g3ipdspsum=g3ipdspsum, g3atmportpg2TGNumber107=g3atmportpg2TGNumber107, g3annintegAnnNbr=g3annintegAnnNbr, g3trunklightEntry=g3trunklightEntry, g3pkipsignalIntvlPktsLostPct=g3pkipsignalIntvlPktsLostPct, g3pkhuntTdelay=g3pkhuntTdelay, g3pksnblockTcount=g3pksnblockTcount, g3atmportpg1TGNumber58=g3atmportpg1TGNumber58, g3cbctrunkDur1=g3cbctrunkDur1, g3pkmmisumTcount=g3pkmmisumTcount, g3ipinterfaceSlot16=g3ipinterfaceSlot16, g3atmportpg3TGNumber213=g3atmportpg3TGNumber213, g3attdposPkCallsAns=g3attdposPkCallsAns)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3lsplistTretrieve=g3lsplistTretrieve, g3pkcovpathPoint6Aband=g3pkcovpathPoint6Aband, g3eventhourTable=g3eventhourTable, g3atmportpg1SGNumber63=g3atmportpg1SGNumber63, g3busybrdAction=g3busybrdAction, g3pkipcodecsumG711Usage=g3pkipcodecsumG711Usage, g3atmportpg1TGNumber45=g3atmportpg1TGNumber45, g3pktrunkwbsumTintvl=g3pktrunkwbsumTintvl, g3pkhuntHour=g3pkhuntHour, g3esmainLocalOnly=g3esmainLocalOnly, g3stamediaGatewayStatus34=g3stamediaGatewayStatus34, g3ipserverPrimLocation=g3ipserverPrimLocation, g3trapToHour=g3trapToHour, g3pkipdspsumOutRegion=g3pkipdspsumOutRegion, g3stamediaGatewayStatus33=g3stamediaGatewayStatus33, g3pkpnblockPNNumber=g3pkpnblockPNNumber, g3atmportpg1TGNumber86=g3atmportpg1TGNumber86, g3cartypeCab3CarEType=g3cartypeCab3CarEType, g3clanpppTintvl=g3clanpppTintvl, g3bulletinDate36=g3bulletinDate36, g3bulletinMessage38=g3bulletinMessage38, g3trunkmemName=g3trunkmemName, g3bulletinMessage43=g3bulletinMessage43, g3atmportpg1TGNumber13=g3atmportpg1TGNumber13, g3callratevoiceBsyIntScToday2=g3callratevoiceBsyIntScToday2, g3esparmsNetCommunity45=g3esparmsNetCommunity45, g3bulletinMessage21=g3bulletinMessage21, g3ipintlist=g3ipintlist, g3atmportpg3SGNumber235=g3atmportpg3SGNumber235, g3healthLogins=g3healthLogins, g3cbctrunkTrunksOOS=g3cbctrunkTrunksOOS, g3callratesrvBsyCalCmpl=g3callratesrvBsyCalCmpl, g3atmportpg1TGNumber52=g3atmportpg1TGNumber52, g3pktrunklightEntry=g3pktrunklightEntry, g3anninteg=g3anninteg, g3occsumTotCall=g3occsumTotCall, g3attdgrpTcount=g3attdgrpTcount, g3attdposMonth=g3attdposMonth, g3statstaCFdestExt=g3statstaCFdestExt, g3timedateDayOfMonth=g3timedateDayOfMonth, g3callratevoiceBsyIntSc=g3callratevoiceBsyIntSc, g3errorsHourFirst=g3errorsHourFirst, g3healthCab31to4425=g3healthCab31to4425, g3atmportpg1SGNumber30=g3atmportpg1SGNumber30, g3bulletinDate20=g3bulletinDate20, g3tonerecsumETRTAvail=g3tonerecsumETRTAvail, g3secviolateTrivialAttempt=g3secviolateTrivialAttempt, g3ipinterfaceNodeName72=g3ipinterfaceNodeName72, g3loadoutYear=g3loadoutYear, g3statmedproDupLinkCCL=g3statmedproDupLinkCCL, g3statstaSwitchIPPort=g3statstaSwitchIPPort, g3callratevoiceMeasHour2=g3callratevoiceMeasHour2, g3fiberlinkEntry=g3fiberlinkEntry, g3servalmAck=g3servalmAck, g3pktonerecDTMFPkAlloc=g3pktonerecDTMFPkAlloc, g3cabinetLocation=g3cabinetLocation, g3extdevTage=g3extdevTage, g3pkcovpathCoveragePath=g3pkcovpathCoveragePath, g3ipinterfaceTdelay=g3ipinterfaceTdelay, g3cbctrunkTintvl=g3cbctrunkTintvl, g3trunkoutOutages=g3trunkoutOutages, g3atmportpg2TGNumber122=g3atmportpg2TGNumber122, g3bulletinDate53=g3bulletinDate53, g3loadincTdelay=g3loadincTdelay, g3ipintlistTintvl=g3ipintlistTintvl, g3tonerecsumCCCPTRTReq=g3tonerecsumCCCPTRTReq, g3statmedproSharedVirtMAC=g3statmedproSharedVirtMAC, g3trunklight=g3trunklight, g3tonerecsumRunMonth=g3tonerecsumRunMonth, g3annintegQueueDrops=g3annintegQueueDrops, g3hunt=g3hunt, g3ipinterfaceSlot83=g3ipinterfaceSlot83, g3pkesmsumTretrieve=g3pkesmsumTretrieve, g3healthMinor=g3healthMinor, g3esserversNetComm=g3esserversNetComm, g3annintegEntry=g3annintegEntry, g3mgrecruleTage=g3mgrecruleTage, g3pnchealthStndbyRfsh=g3pnchealthStndbyRfsh, g3atmportpg3SGNumber204=g3atmportpg3SGNumber204, g3pkatmlatencySetup1B=g3pkatmlatencySetup1B, g3bulletinDate48=g3bulletinDate48, g3ipinterfaceNodeName21=g3ipinterfaceNodeName21, g3healthPncStat31to4426=g3healthPncStat31to4426, g3atmportpg1SGNumber76=g3atmportpg1SGNumber76, g3atmportpg3TGNumber210=g3atmportpg3TGNumber210, g3trunksumTdelay=g3trunksumTdelay, g3fiberlinkTretrieve=g3fiberlinkTretrieve, g3pktrunksumTotalUsage=g3pktrunksumTotalUsage, g3ipinterfaceNodeName23=g3ipinterfaceNodeName23, g3trunkwbsumPercentAtb=g3trunkwbsumPercentAtb, g3atmpnc=g3atmpnc, g3trunksumPercentAtb=g3trunksumPercentAtb, products=products, g3healthCab16to3017=g3healthCab16to3017, g3portId2=g3portId2, g3bulletinMessage1=g3bulletinMessage1, g3pktonerecTdelay=g3pktonerecTdelay, g3atmportpg3SGNumber199=g3atmportpg3SGNumber199, g3occsumRunMonth=g3occsumRunMonth, g3pkannintegPlayReqts=g3pkannintegPlayReqts, g3healthPncStat1to153=g3healthPncStat1to153, g3atmcfgSuffix=g3atmcfgSuffix, g3atmportpg1TGNumber39=g3atmportpg1TGNumber39, g3statstaConnPort5=g3statstaConnPort5, g3atmportpg2SGNumber117=g3atmportpg2SGNumber117, g3cabinet=g3cabinet, g3callratemediaBsyIntSc=g3callratemediaBsyIntSc, g3atmportpg3TGNumber229=g3atmportpg3TGNumber229, g3eventhourFirstHour=g3eventhourFirstHour, g3pkmmisumTintvl=g3pkmmisumTintvl, g3ipinterfaceSlot42=g3ipinterfaceSlot42, g3bulletinMessage52=g3bulletinMessage52, g3ipserverEntry=g3ipserverEntry, g3atmportpg2TGNumber95=g3atmportpg2TGNumber95, g3bulletinMessage51=g3bulletinMessage51, g3stamediaGatewayStatus43=g3stamediaGatewayStatus43, g3pkclansocsumMonth=g3pkclansocsumMonth, g3configPort30=g3configPort30, g3atmportpg1TGNumber54=g3atmportpg1TGNumber54, g3pnblockYear=g3pnblockYear, g3pkipsignalEntry=g3pkipsignalEntry, g3platcmdsEntry=g3platcmdsEntry, g3annintegYear=g3annintegYear, g3mmisumDay=g3mmisumDay, g3tonerecsumCCTTRTQueue=g3tonerecsumCCTTRTQueue, g3pktonerecCCTTRPkAlloc=g3pktonerecCCTTRPkAlloc, g3secviolateTrkValidAC=g3secviolateTrkValidAC, g3trunkcfg=g3trunkcfg, g3cbctrunkDur5=g3cbctrunkDur5, g3callratemediaBsyIntScToday=g3callratemediaBsyIntScToday, g3callratevoiceRunHour=g3callratevoiceRunHour, g3callratesrvMeasHour2=g3callratesrvMeasHour2, g3covpathPoint5Ans=g3covpathPoint5Ans, g3statmedproDSPChanStatus1=g3statmedproDSPChanStatus1, g3esparmsNetCommunity54=g3esparmsNetCommunity54, g3errorsPort=g3errorsPort, g3callratedataRunHour=g3callratedataRunHour, g3pkannintegAnnNbr=g3pkannintegAnnNbr, g3trapPort=g3trapPort, avaya=avaya, g3filterDestination=g3filterDestination, g3gatewayTdelay=g3gatewayTdelay, g3atmportpg2TGNumber127=g3atmportpg2TGNumber127, g3ipinterfaceNodeName79=g3ipinterfaceNodeName79, g3cbctrunkPlan1=g3cbctrunkPlan1, g3ipinterfaceNodeName30=g3ipinterfaceNodeName30, g3siggroupAsocSignal=g3siggroupAsocSignal, g3ipcodecsumYear=g3ipcodecsumYear, g3clanpppMonth=g3clanpppMonth, g3eventhourIndex=g3eventhourIndex, g3atmportpg1SGNumber14=g3atmportpg1SGNumber14, g3routepatternTintvl=g3routepatternTintvl, g3acaTable=g3acaTable, g3atmportpg3TGNumber193=g3atmportpg3TGNumber193, g3bulletinMessage6=g3bulletinMessage6, g3esmainTdelay=g3esmainTdelay, g3pkhuntTcount=g3pkhuntTcount, g3atmportpg1TGNumber14=g3atmportpg1TGNumber14, g3restartInterchange=g3restartInterchange, g3trapActive=g3trapActive, g3healthPncStat16to3023=g3healthPncStat16to3023, g3healthCab31to4427=g3healthCab31to4427, g3pkipdspsumMonth=g3pkipdspsumMonth, g3atmportpg2TGNumber134=g3atmportpg2TGNumber134, g3loadintPNNumber=g3loadintPNNumber, g3voicesumVoiceDenials=g3voicesumVoiceDenials, g3atmportpg2SGNumber93=g3atmportpg2SGNumber93, g3atmportpg1SGNumber22=g3atmportpg1SGNumber22, g3alarmsTdelay=g3alarmsTdelay, g3pkloadintIntIntraPNPeg=g3pkloadintIntIntraPNPeg, g3pkipdspsumDSPRecs=g3pkipdspsumDSPRecs, g3agentServer1Name=g3agentServer1Name, g3trunkstaConnPort7=g3trunkstaConnPort7, g3ipinterfaceNodeName82=g3ipinterfaceNodeName82, g3cabtypeCab2Type=g3cabtypeCab2Type, g3bulletinMessage53=g3bulletinMessage53, g3pnchealthStandbyBusd=g3pnchealthStandbyBusd, g3atmportpg1SGNumber37=g3atmportpg1SGNumber37, g3atmportpg1SGNumber64=g3atmportpg1SGNumber64, g3pkhuntGroupSize=g3pkhuntGroupSize, g3trunkmem=g3trunkmem, g3statmedproDupAlarmMaj=g3statmedproDupAlarmMaj, g3agentServerType=g3agentServerType, g3trunkstaConnPort1=g3trunkstaConnPort1, g3pkrpatCallsQueued=g3pkrpatCallsQueued, g3stamediaGatewayStatus41=g3stamediaGatewayStatus41, g3bulletinMessage28=g3bulletinMessage28, g3secviolateStnValidAC=g3secviolateStnValidAC, g3pkprincipalCovPath7=g3pkprincipalCovPath7, g3trunkstaTable=g3trunkstaTable, g3atmportpg2TGNumber131=g3atmportpg2TGNumber131, g3ipinterfaceSlot6=g3ipinterfaceSlot6, g3atmportpg1SGNumber16=g3atmportpg1SGNumber16, g3ipinterfaceSlot7=g3ipinterfaceSlot7, g3pkatmlatencyATMSetup1B=g3pkatmlatencyATMSetup1B, g3cbctrunkYear=g3cbctrunkYear, g3pkloadtotalTdelay=g3pkloadtotalTdelay, g3portEquipType2=g3portEquipType2, g3atmportpg2TGNumber172=g3atmportpg2TGNumber172, g3dmoduleName=g3dmoduleName, g3gatewayTretrieve=g3gatewayTretrieve, g3ipnetregionEntry=g3ipnetregionEntry, g3pkloadtotalPNOccupancy=g3pkloadtotalPNOccupancy, g3esserversEntry=g3esserversEntry, g3atmportpg3LTGNumber9=g3atmportpg3LTGNumber9, g3rpatcfgPattern8=g3rpatcfgPattern8, g3vintageACAFlag=g3vintageACAFlag, g3trunkcfgVintage=g3trunkcfgVintage, g3atmpncTable=g3atmpncTable, g3atmportpg3TGNumber218=g3atmportpg3TGNumber218, g3pkannallTage=g3pkannallTage, g3statmedproDSPChanStatus5=g3statmedproDSPChanStatus5, g3pnblockPNlinkUsage=g3pnblockPNlinkUsage, g3aca=g3aca, g3atmcfgBoardNum=g3atmcfgBoardNum, g3snblockHour=g3snblockHour, g3deftimeTretrieve=g3deftimeTretrieve, g3eventhourEventData2=g3eventhourEventData2, g3stamediaGatewayStatus5=g3stamediaGatewayStatus5, g3acaTGAccess=g3acaTGAccess, g3atmportpg1TGNumber4=g3atmportpg1TGNumber4, g3atmportpg3TGNumber241=g3atmportpg3TGNumber241, g3ipinterfaceNodeName7=g3ipinterfaceNodeName7, g3pkvoicesumH320Denials=g3pkvoicesumH320Denials, g3busybrdErrorCode=g3busybrdErrorCode, g3voicesumMonth=g3voicesumMonth, g3mgrecruleTdelay=g3mgrecruleTdelay, g3busyrlsAction=g3busyrlsAction, g3esparmsNetCommunity17=g3esparmsNetCommunity17, g3atmportpg2SGNumber178=g3atmportpg2SGNumber178, g3stamediaGatewayStatus53=g3stamediaGatewayStatus53, g3annintegMPortPlay=g3annintegMPortPlay, g3loadintTcount=g3loadintTcount, g3callratedataBsyIntHrYesterday=g3callratedataBsyIntHrYesterday, g3siggroupTable=g3siggroupTable, g3atmportpg1SGNumber42=g3atmportpg1SGNumber42, g3atmportpg3SGNumber191=g3atmportpg3SGNumber191, g3stamedia=g3stamedia, g3callratedataMeasHour3=g3callratedataMeasHour3, g3siggroupIntfNum20=g3siggroupIntfNum20, g3restartLevel=g3restartLevel, g3ipsignalTretrieve=g3ipsignalTretrieve, g3healthCab31to4424=g3healthCab31to4424, g3siggroupBoard14=g3siggroupBoard14, g3tonerecDTMFTotOffPN=g3tonerecDTMFTotOffPN, g3callratemediaNumCalls=g3callratemediaNumCalls, g3callratetotalBsyIntMnYesterday2=g3callratetotalBsyIntMnYesterday2, g3principalCovPath1=g3principalCovPath1, g3rpatCallsQueued=g3rpatCallsQueued, g3statstaConnPort4=g3statstaConnPort4, g3callratedataBsyIntTodayHr=g3callratedataBsyIntTodayHr, g3trkgrpmemTretrieve=g3trkgrpmemTretrieve, g3stationcfgTdelay=g3stationcfgTdelay, g3clientCustomerId=g3clientCustomerId)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3pkloadtan=g3pkloadtan, g3cartypeCab1CarCType=g3cartypeCab1CarCType, g3atmportpg3SGNumber200=g3atmportpg3SGNumber200, g3trunksum=g3trunksum, g3trunkgrpServiceType=g3trunkgrpServiceType, g3nodenameTintvl=g3nodenameTintvl, g3pnchealthPncBIntrIdx=g3pnchealthPncBIntrIdx, g3atmportpg2SGNumber160=g3atmportpg2SGNumber160, g3callratevoiceNumCallsYesterday=g3callratevoiceNumCallsYesterday, g3loadincIncIncomingUse=g3loadincIncIncomingUse, g3atmportpg3SGNumber196=g3atmportpg3SGNumber196, blade_server=blade_server, g3pkloadintPNNumber=g3pkloadintPNNumber, g3callratetotalRunDay=g3callratetotalRunDay, g3ipnetregionCC8021Pri=g3ipnetregionCC8021Pri, g3huntTintvl=g3huntTintvl, g3atmportpg1TGNumber31=g3atmportpg1TGNumber31, g3siggroupIntfNum9=g3siggroupIntfNum9, g3secviolatePortType=g3secviolatePortType, g3bulletin=g3bulletin, g3esparmsTdelay=g3esparmsTdelay, g3esmain=g3esmain, g3configPort8=g3configPort8, g3siggroupBoard15=g3siggroupBoard15, g3attdgrpTintvl=g3attdgrpTintvl, g3esserversSystemPref=g3esserversSystemPref, g3loadtotalPNNumber=g3loadtotalPNNumber, g3pktrunklightTintvl=g3pktrunklightTintvl, g3pkipcodecsum=g3pkipcodecsum, g3atmportpg2TGNumber146=g3atmportpg2TGNumber146, g3bulletinMessage54=g3bulletinMessage54, g3healthCab16to3024=g3healthCab16to3024, g3pktrunklightDay=g3pktrunklightDay, g3ipinterfaceSlot82=g3ipinterfaceSlot82, g3rpat=g3rpat, g3atmportpg2SGNumber161=g3atmportpg2SGNumber161, g3pnchealthPncBMinor=g3pnchealthPncBMinor, g3stationcfgTable=g3stationcfgTable, g3atmportpg1SGNumber58=g3atmportpg1SGNumber58, g3occsumEntry=g3occsumEntry, g3trapWarning=g3trapWarning, g3bulletinDate9=g3bulletinDate9, g3stamediaTintvl=g3stamediaTintvl, g3pktrunkoutYear=g3pktrunkoutYear, g3siggroupBoard13=g3siggroupBoard13, g3gatewayTage=g3gatewayTage, g3atmportpg3TGNumber202=g3atmportpg3TGNumber202, g3loadintMonth=g3loadintMonth, g3deftimeTage=g3deftimeTage, g3ipsignalTdelay=g3ipsignalTdelay, g3atmportpg1TGNumber3=g3atmportpg1TGNumber3, g3pkmmisumMeasHour=g3pkmmisumMeasHour, g3pkesmsumESMDenials=g3pkesmsumESMDenials, g3callratedataNumCalls=g3callratedataNumCalls, g3trkgrpmemEntry=g3trkgrpmemEntry, g3trunklightCarried=g3trunklightCarried, g3atmportpg3Table=g3atmportpg3Table, g3callratesrvBsyIntHr=g3callratesrvBsyIntHr, g3pkannintegHour=g3pkannintegHour, g3trunkgrpDCSFlag=g3trunkgrpDCSFlag, g3atmportpg1SGNumber45=g3atmportpg1SGNumber45, g3atmportpg3LSGNumber10=g3atmportpg3LSGNumber10, g3cabinetTage=g3cabinetTage, g3ipinterfaceSlot32=g3ipinterfaceSlot32, g3esparmsNetCommunity27=g3esparmsNetCommunity27, g3pkrpatTdelay=g3pkrpatTdelay, g3ds1cfg=g3ds1cfg, g3esserversLocalOnly=g3esserversLocalOnly, g3ipsignalMonth=g3ipsignalMonth, g3ipevtIndex=g3ipevtIndex, g3ipinterfaceSlot33=g3ipinterfaceSlot33, g3callratedataMeasHour2=g3callratedataMeasHour2, g3pkesmsumOutofService=g3pkesmsumOutofService, g3trunkwbsumPercentOutBlk=g3trunkwbsumPercentOutBlk, g3atmportpg1SGNumber20=g3atmportpg1SGNumber20, g3trapFromMonth=g3trapFromMonth, g3servalmEntry=g3servalmEntry, g3bulletinMessage17=g3bulletinMessage17, g3atmportpg2TGNumber177=g3atmportpg2TGNumber177, g3tonerecTintvl=g3tonerecTintvl, g3ipinterfaceNodeName73=g3ipinterfaceNodeName73, g3gatewayNearEndIP=g3gatewayNearEndIP, g3pkclansocsumTage=g3pkclansocsumTage, g3attdgrpTage=g3attdgrpTage, g3ipnetregionTintvl=g3ipnetregionTintvl, g3cartypeTdelay=g3cartypeTdelay, g3ipunregTretrieve=g3ipunregTretrieve, g3extdev=g3extdev, g3ipinterfaceTage=g3ipinterfaceTage, g3pkrpatHour=g3pkrpatHour, g3vintageRemoteOffReg=g3vintageRemoteOffReg, g3mmisumTretrieve=g3mmisumTretrieve, g3eventdayEventDesc=g3eventdayEventDesc, g3filterTableIndex=g3filterTableIndex, g3pkprincipalCallsCBC=g3pkprincipalCallsCBC, g3atmpncPncAddFmtA=g3atmpncPncAddFmtA, g3occsumMeasHour=g3occsumMeasHour, g3statstaEntry=g3statstaEntry, g3huntTable=g3huntTable, g3clanpppInvFrameDelta=g3clanpppInvFrameDelta, g3pkanninteg=g3pkanninteg, g3healthPncStat1to1514=g3healthPncStat1to1514, g3configPort19=g3configPort19, g3bulletinMessage14=g3bulletinMessage14, g3cabinetBuilding=g3cabinetBuilding, g3esparmsNetCommunity4=g3esparmsNetCommunity4, g3trunkcfgBoardNum=g3trunkcfgBoardNum, g3atmportpg2TGNumber91=g3atmportpg2TGNumber91, g3ds1Table=g3ds1Table, g3pktonerecsumDTMFHour=g3pktonerecsumDTMFHour, g3ipserverSecDHCPID=g3ipserverSecDHCPID, g3pkpnblockTretrieve=g3pkpnblockTretrieve, g3ipunregTage=g3ipunregTage, g3clanpppHour=g3clanpppHour, g3pktrunkoutEntry=g3pktrunkoutEntry, g3stamediaGatewayStatus11=g3stamediaGatewayStatus11, g3esparmsNetCommunity15=g3esparmsNetCommunity15, g3pkannintegPlayPorts=g3pkannintegPlayPorts, g3atmportpg1SGNumber29=g3atmportpg1SGNumber29, g3annintegTage=g3annintegTage, g3mmisumMeasHour=g3mmisumMeasHour, g3restartTage=g3restartTage, g3atmportpg3SGNumber213=g3atmportpg3SGNumber213, g3pnblockTdmPeg=g3pnblockTdmPeg, g3healthCab31to4417=g3healthCab31to4417, g3pktonerecsumCCMFCRPDeny=g3pktonerecsumCCMFCRPDeny, g3ipdspsumPctOutSrv=g3ipdspsumPctOutSrv, g3atmportpg3SGNumber227=g3atmportpg3SGNumber227, g3restartHour=g3restartHour, g3ipinterfaceNodeName20=g3ipinterfaceNodeName20, g3stationcfgBoardType=g3stationcfgBoardType, g3lsplistIPAddr4=g3lsplistIPAddr4, g3callratemediaBsyIntHrYesterday2=g3callratemediaBsyIntHrYesterday2, g3atmportpg3LTGNumber7=g3atmportpg3LTGNumber7, g3callratemediaBsyIntHrYesterday=g3callratemediaBsyIntHrYesterday, g3atmportpg2Tretrieve=g3atmportpg2Tretrieve, g3siggroupIntfNum17=g3siggroupIntfNum17, g3snblockSnPair=g3snblockSnPair, g3configPort25=g3configPort25, g3rpatcfgPattern23=g3rpatcfgPattern23, g3atmportpg2TGNumber96=g3atmportpg2TGNumber96, g3bulletinDate18=g3bulletinDate18, g3attdposTimeHeld=g3attdposTimeHeld, g3attdposAttdID=g3attdposAttdID, g3eventdayLastHour=g3eventdayLastHour, g3tonerecsumDTMFTQueue=g3tonerecsumDTMFTQueue, g3pksnblockMonth=g3pksnblockMonth, g3mmisumPercentAPB=g3mmisumPercentAPB, g3bulletinDate10=g3bulletinDate10, g3atmportpg2SGNumber107=g3atmportpg2SGNumber107, g3trapInterval=g3trapInterval, g3stamediaGatewayStatus63=g3stamediaGatewayStatus63, g3tonerecsumCCTTRPQueue=g3tonerecsumCCTTRPQueue, g3cbctrunkQueueAband=g3cbctrunkQueueAband, g3gatewayIPAddress=g3gatewayIPAddress, g3stamediaGatewayStatus48=g3stamediaGatewayStatus48, g3ipinterfaceSlot68=g3ipinterfaceSlot68, g3atmtrunkTcount=g3atmtrunkTcount, g3atmportpg1TGNumber38=g3atmportpg1TGNumber38, g3pktonerecsumRunHour=g3pktonerecsumRunHour, g3esmainNetComm=g3esmainNetComm, g3stamediaH248LinksUp=g3stamediaH248LinksUp, g3atmportpg1SGNumber81=g3atmportpg1SGNumber81, g3stamediaGatewayStatus19=g3stamediaGatewayStatus19, g3datamstaConnPort5=g3datamstaConnPort5, g3ipcodecsumMonth=g3ipcodecsumMonth, g3trunkoutTage=g3trunkoutTage, g3esparmsNetCommunity39=g3esparmsNetCommunity39, g3bulletinDate58=g3bulletinDate58, g3stamediaGatewayStatus13=g3stamediaGatewayStatus13, g3esparmsNoServerTO=g3esparmsNoServerTO, g3pksnblockLinkBlockage=g3pksnblockLinkBlockage, g3acaHour=g3acaHour, g3ipinterfaceNodeName14=g3ipinterfaceNodeName14, g3msgalm=g3msgalm, g3alarmsMonthAlrmd=g3alarmsMonthAlrmd, g3pktrunksumTdelay=g3pktrunksumTdelay, g3restartIndex=g3restartIndex, g3eventhourEventData1=g3eventhourEventData1, g3healthPncStat31to4425=g3healthPncStat31to4425, g3callratetotalBsyIntHrToday=g3callratetotalBsyIntHrToday, g3pkannallName=g3pkannallName, g3restartDateTime=g3restartDateTime, g3atmlatencyPNPair=g3atmlatencyPNPair, g3callratesrvMeasHour5=g3callratesrvMeasHour5, g3atmportpg2TGNumber105=g3atmportpg2TGNumber105, g3atmportpg3TGNumber220=g3atmportpg3TGNumber220, g3rpatCallsCarried=g3rpatCallsCarried, g3proxmib=g3proxmib, g3cbctrunkTcount=g3cbctrunkTcount, g3atmportpg2TGNumber129=g3atmportpg2TGNumber129, g3voicesumTdelay=g3voicesumTdelay, g3gatewayHWVintage=g3gatewayHWVintage, g3bulletinDate7=g3bulletinDate7, g3atmportpg1TGNumber78=g3atmportpg1TGNumber78, g3healthPncStat16to3029=g3healthPncStat16to3029, g3bulletinDate59=g3bulletinDate59, g3mediacfgBoardType=g3mediacfgBoardType, g3stamediaGatewayStatus25=g3stamediaGatewayStatus25, g3atmportpg2TGNumber150=g3atmportpg2TGNumber150, g3statmedproTcount=g3statmedproTcount, g3atmportpg3SGNumber203=g3atmportpg3SGNumber203, g3ipdspsumTintvl=g3ipdspsumTintvl, g3attdposPkTimeTalk=g3attdposPkTimeTalk, g3station=g3station, g3tonerecsumCCCPTRHour=g3tonerecsumCCCPTRHour, g3acaRefType=g3acaRefType, g3healthCab1to153=g3healthCab1to153, g3voicesumPercentBlock=g3voicesumPercentBlock, g3connectState=g3connectState, g3ds1Signaling=g3ds1Signaling, g3filterWarning=g3filterWarning, g3atmportpg2SGNumber108=g3atmportpg2SGNumber108, g3trunksumCallQued=g3trunksumCallQued, g3callratevoiceBsyIntScYesterday2=g3callratevoiceBsyIntScYesterday2, g3healthCab16to3026=g3healthCab16to3026, g3eventhourTintvl=g3eventhourTintvl, g3huntlistName=g3huntlistName, g3ipinterfaceNodeName3=g3ipinterfaceNodeName3, g3ipserverPrimHost=g3ipserverPrimHost, g3busytrkEntry=g3busytrkEntry, g3pkhuntMonth=g3pkhuntMonth, g3attdgrpCallsQued=g3attdgrpCallsQued, g3stamediaGatewayStatus73=g3stamediaGatewayStatus73, g3loadint=g3loadint, g3fiberlinkE1ABoard=g3fiberlinkE1ABoard, g3atmportpg2SGNumber135=g3atmportpg2SGNumber135, g3pnchealthPncBMode=g3pnchealthPncBMode, g3atmtrunk=g3atmtrunk, g3alarmsHourAlrmd=g3alarmsHourAlrmd, g3covpathEntry=g3covpathEntry, g3fiberlinkE2BBoard=g3fiberlinkE2BBoard, g3datamodType=g3datamodType, g3rpatcfgPattern3=g3rpatcfgPattern3, g3pkannintegTintvl=g3pkannintegTintvl, g3stamediaGatewayStatus54=g3stamediaGatewayStatus54, g3callratetotalBsyCalCmplYesterday=g3callratetotalBsyCalCmplYesterday, definity_ecs=definity_ecs, g3atmportpg1TGNumber80=g3atmportpg1TGNumber80, g3stamediaGatewayStatus9=g3stamediaGatewayStatus9, g3secviolateTable=g3secviolateTable, g3pkprincipalCovPath3=g3pkprincipalCovPath3, g3healthCab16to3029=g3healthCab16to3029, g3secviolateCountSince=g3secviolateCountSince, g3pkrpatTrunkGroup=g3pkrpatTrunkGroup, g3atmportpg3LSGNumber6=g3atmportpg3LSGNumber6, g3trkgrpmemName=g3trkgrpmemName, g3loadtotalYear=g3loadtotalYear, g3trunkcfgTcount=g3trunkcfgTcount, g3ipserverSecIP4=g3ipserverSecIP4, g3atmportpg2SGNumber114=g3atmportpg2SGNumber114, g3clanpppCrcChkTot=g3clanpppCrcChkTot, g3bulletinMessage4=g3bulletinMessage4, g3ipinterfaceSlot25=g3ipinterfaceSlot25)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3clanetherTcount=g3clanetherTcount, g3configVintage=g3configVintage, g3restartCraftDemand=g3restartCraftDemand, g3statmedproBoardLoc=g3statmedproBoardLoc, g3ipsignalIntvlPacketsSent=g3ipsignalIntvlPacketsSent, g3callratemediaBsyIntMnToday2=g3callratemediaBsyIntMnToday2, g3ipsignalDay=g3ipsignalDay, g3ipdspsumTcount=g3ipdspsumTcount, g3tonerecsumCCCPTRTDeny=g3tonerecsumCCCPTRTDeny, g3bulletinDate3=g3bulletinDate3, g3atmportpg1SGNumber80=g3atmportpg1SGNumber80, g3callratevoiceTintvl=g3callratevoiceTintvl, g3esparmsNetCommunity52=g3esparmsNetCommunity52, g3pkprincipalCallsRedirect=g3pkprincipalCallsRedirect, g3pkannintegTable=g3pkannintegTable, g3eventdayFirstHour=g3eventdayFirstHour, g3tonerecsum=g3tonerecsum, g3pnblockTage=g3pnblockTage, g3agentSnmpTraps=g3agentSnmpTraps, g3occsumTretrieve=g3occsumTretrieve, g3rpatCallsBlocked=g3rpatCallsBlocked, g3atmportpg2TGNumber154=g3atmportpg2TGNumber154, g3atmportpg1TGNumber53=g3atmportpg1TGNumber53, g3ipinterfaceSlot35=g3ipinterfaceSlot35, g3pktrunklightTretrieve=g3pktrunklightTretrieve, g3callratemediaBsyIntScYesterday2=g3callratemediaBsyIntScYesterday2, g3mgrecrule=g3mgrecrule, g3atmlatencyTcount=g3atmlatencyTcount, g3siggroupIntfNum12=g3siggroupIntfNum12, g3atmportpg2SGNumber128=g3atmportpg2SGNumber128, g3pkatmlatencyTretrieve=g3pkatmlatencyTretrieve, g3atmportpg1SGNumber26=g3atmportpg1SGNumber26, g3atmportpg3SGNumber221=g3atmportpg3SGNumber221, g3atmportpg3LTGNumber6=g3atmportpg3LTGNumber6, g3clansocsumPctDenial=g3clansocsumPctDenial, g3errorsErrRt=g3errorsErrRt, g3pkvoicesumTotalAllocation=g3pkvoicesumTotalAllocation, g3covpathTable=g3covpathTable, g3acaTintvl=g3acaTintvl, g3bulletinDate8=g3bulletinDate8, g3ipserverCallCntlDiff=g3ipserverCallCntlDiff, g3secviolateTage=g3secviolateTage, g3callratevoiceRunMonth=g3callratevoiceRunMonth, g3rpatEntry=g3rpatEntry, g3callratemediaRunHour=g3callratemediaRunHour, g3loadoutOutIncomingUse=g3loadoutOutIncomingUse, g3statmedproDupBroadCastAddr=g3statmedproDupBroadCastAddr, g3pnchealthTretrieve=g3pnchealthTretrieve, g3atmportpg1TGNumber77=g3atmportpg1TGNumber77, g3ipinterfaceSlot37=g3ipinterfaceSlot37, g3busytrkMaintName=g3busytrkMaintName, g3atmportpg2TGNumber174=g3atmportpg2TGNumber174, g3atmportpg1TGNumber19=g3atmportpg1TGNumber19, g3alarmsProductID=g3alarmsProductID, g3healthDupSPE=g3healthDupSPE, g3atmportpg3SGNumber207=g3atmportpg3SGNumber207, g3atmportpg1TGNumber15=g3atmportpg1TGNumber15, g3huntTretrieve=g3huntTretrieve, g3statstaConnPort3=g3statstaConnPort3, g3atmportpg1SGNumber74=g3atmportpg1SGNumber74, g3principalCallsCBC=g3principalCallsCBC, g3atmportpg2SGNumber127=g3atmportpg2SGNumber127, g3bulletinMessage49=g3bulletinMessage49, g3ipinterfaceNodeName78=g3ipinterfaceNodeName78, g3configTage=g3configTage, g3eventdayLastDay=g3eventdayLastDay, g3siggroupBoard4=g3siggroupBoard4, g3callratedataBsyIntHrToday=g3callratedataBsyIntHrToday, g3gatewayName=g3gatewayName, g3pktonerecsumDTMFTDeny=g3pktonerecsumDTMFTDeny, g3healthPncStat1to159=g3healthPncStat1to159, g3atmportpg2TGNumber121=g3atmportpg2TGNumber121, g3esserversServerBIP1=g3esserversServerBIP1, g3callratemediaBsyCalCmplToday2=g3callratemediaBsyCalCmplToday2, g3pktrunklightTdelay=g3pktrunklightTdelay, g3atmportpg2TGNumber164=g3atmportpg2TGNumber164, g3configPort28=g3configPort28, g3bulletinDate39=g3bulletinDate39, g3statmedproDupAlarmWrn=g3statmedproDupAlarmWrn, g3ipinterfaceSlot18=g3ipinterfaceSlot18, g3pkesmsumTintvl=g3pkesmsumTintvl, g3callratetotalMeasHour4=g3callratetotalMeasHour4, g3rpatTretrieve=g3rpatTretrieve, g3errorsMinFirst=g3errorsMinFirst, g3callratevoiceBsyCalCmplYesterday2=g3callratevoiceBsyCalCmplYesterday2, g3esmsumYear=g3esmsumYear, g3siggroupTintvl=g3siggroupTintvl, g3stamediaGatewayStatus56=g3stamediaGatewayStatus56, g3pkprincipalCovPath5=g3pkprincipalCovPath5, g3annallTable=g3annallTable, g3alarmsMaintName=g3alarmsMaintName, g3pktonerecYear=g3pktonerecYear, g3esserversServerAIP4=g3esserversServerAIP4, g3siggroupBoard9=g3siggroupBoard9, g3atmportpg1SGNumber72=g3atmportpg1SGNumber72, g3commlinkLinkType=g3commlinkLinkType, g3secviolateTrkViolateAC=g3secviolateTrkViolateAC, g3mmisumYear=g3mmisumYear, g3atmpncPncNameA=g3atmpncPncNameA, g3atmportpg2TGNumber119=g3atmportpg2TGNumber119, g3callratemediaTdelay=g3callratemediaTdelay, g3callratesrvBsyIntScToday2=g3callratesrvBsyIntScToday2, g3annintegASP=g3annintegASP, g3tonerecsumCCTTRTDeny=g3tonerecsumCCTTRTDeny, g3siggroupSecDChannel=g3siggroupSecDChannel, g3tonerecCCTTRTotOffPN=g3tonerecCCTTRTotOffPN, g3voicesumPercentAPB=g3voicesumPercentAPB, g3statregionTcount=g3statregionTcount, g3atmportpg2SGNumber137=g3atmportpg2SGNumber137, g3stationRoom=g3stationRoom, g3rpatTrunkGroup=g3rpatTrunkGroup, g3errorsTintvl=g3errorsTintvl, g3clanetherTintvl=g3clanetherTintvl, g3pkvoicesumMeasHour=g3pkvoicesumMeasHour, g3atmtrunkTable=g3atmtrunkTable, g3statmedproAlarmWrn=g3statmedproAlarmWrn, g3pkmmisumTdelay=g3pkmmisumTdelay, g3clanetherCollCntDelta=g3clanetherCollCntDelta, g3restartMinute=g3restartMinute, g3attdposTable=g3attdposTable, g3connectAttempts=g3connectAttempts, g3occsumTandCall=g3occsumTandCall, g3ipserverSecIPPort=g3ipserverSecIPPort, g3rpatTotalCalls=g3rpatTotalCalls, g3pkhuntHuntGroup=g3pkhuntHuntGroup, g3pkatmlatencyTable=g3pkatmlatencyTable, g3alarmsTage=g3alarmsTage, g3stamediaGatewayStatus55=g3stamediaGatewayStatus55, g3atmlatencyHour=g3atmlatencyHour, g3healthPncStat31to4423=g3healthPncStat31to4423, g3callratedataBsyCalCmplToday=g3callratedataBsyCalCmplToday, g3siggroupEntry=g3siggroupEntry, g3stamediaGatewayStatus35=g3stamediaGatewayStatus35, g3healthCab1to159=g3healthCab1to159, g3pkloadincDay=g3pkloadincDay, g3loadincIncIntraPNUse=g3loadincIncIntraPNUse, g3atmportpg1TGNumber12=g3atmportpg1TGNumber12, g3trunklightYear=g3trunklightYear, g3statstaSetIPPort=g3statstaSetIPPort, g3atmportpg1TGNumber11=g3atmportpg1TGNumber11, g3cbctrunkIncSeize=g3cbctrunkIncSeize, g3errors=g3errors, g3agentServer2Name=g3agentServer2Name, g3atmportpg2SGNumber134=g3atmportpg2SGNumber134, g3atmportpg3TGNumber207=g3atmportpg3TGNumber207, g3trunkgrpACAFlag=g3trunkgrpACAFlag, g3pkipdspsumDSPUsage=g3pkipdspsumDSPUsage, g3atmportpg3SGNumber190=g3atmportpg3SGNumber190, g3pksnblockTretrieve=g3pksnblockTretrieve, g3gatewayG350ModTypeV6=g3gatewayG350ModTypeV6, g3connectTimeout=g3connectTimeout, g3atmportpg3SGNumber211=g3atmportpg3SGNumber211, g3ipdspsumEntry=g3ipdspsumEntry, g3callratemediaMeasHour3=g3callratemediaMeasHour3, g3trunksumTotalUsage=g3trunksumTotalUsage, g3atmportpg2TGNumber133=g3atmportpg2TGNumber133, g3mmisumOutofService=g3mmisumOutofService, g3healthCab16to3019=g3healthCab16to3019, g3atmlatency=g3atmlatency, g3loadtanTcount=g3loadtanTcount, g3callratesrvMeasHour=g3callratesrvMeasHour, g3ipintlistEntry=g3ipintlistEntry, g3atmportpg2SGNumber126=g3atmportpg2SGNumber126, g3pktonerecsumCCCPTRTReq=g3pktonerecsumCCCPTRTReq, g3secviolateTretrieve=g3secviolateTretrieve, g3callratesrvNumCallsYesterday2=g3callratesrvNumCallsYesterday2, g3cbctrunkPlan2=g3cbctrunkPlan2, g3callratevoiceNumCalls=g3callratevoiceNumCalls, g3esparmsNetCommunity2=g3esparmsNetCommunity2, g3atmportpg2SGNumber156=g3atmportpg2SGNumber156, g3clientTable=g3clientTable, g3atmportpg3SGNumber197=g3atmportpg3SGNumber197, g3ipinterfaceNodeName25=g3ipinterfaceNodeName25, g3clientEntry=g3clientEntry, g3atmportpg1TGNumber65=g3atmportpg1TGNumber65, g3pnchealthPncAMode=g3pnchealthPncAMode, g3rpatcfgPattern25=g3rpatcfgPattern25, g3restartCause=g3restartCause, g3rpatTcount=g3rpatTcount, g3bulletinDate4=g3bulletinDate4, g3pkpnblockTintvl=g3pkpnblockTintvl, g3esparmsNetCommunity21=g3esparmsNetCommunity21, g3stamediaGatewayStatus20=g3stamediaGatewayStatus20, g3loadout=g3loadout, g3pnblockTdmPeak=g3pnblockTdmPeak, g3atmportpg1TGNumber2=g3atmportpg1TGNumber2, g3ipsignalMeasHour=g3ipsignalMeasHour, g3atmportpg2TGNumber175=g3atmportpg2TGNumber175, g3huntHuntGroup=g3huntHuntGroup, g3esparmsTretrieve=g3esparmsTretrieve, g3atmportpg2TGNumber116=g3atmportpg2TGNumber116, g3bulletinDate11=g3bulletinDate11, g3atmcfgEntry=g3atmcfgEntry, g3atmportpg1TGNumber6=g3atmportpg1TGNumber6, g3stamediaGatewayStatus69=g3stamediaGatewayStatus69, g3bulletinDate35=g3bulletinDate35, g3datamstaConnPort7=g3datamstaConnPort7, g3acaDayTime=g3acaDayTime, g3connectErrors=g3connectErrors, g3pkloadoutEntry=g3pkloadoutEntry, g3cabinetLayout=g3cabinetLayout, g3stamediaGatewayStatus36=g3stamediaGatewayStatus36, g3atmportpg3SGNumber244=g3atmportpg3SGNumber244, g3pkannintegTdelay=g3pkannintegTdelay, g3pksnblockTage=g3pksnblockTage, g3atmpncconnection=g3atmpncconnection, g3pkipsignalDay=g3pkipsignalDay, g3atmportpg1SGNumber27=g3atmportpg1SGNumber27, g3ds1cfgVintage=g3ds1cfgVintage, g3principalCallsAband=g3principalCallsAband, g3healthPower=g3healthPower, g3ipnetregionRSVPBBE=g3ipnetregionRSVPBBE, g3ipdspsumTretrieve=g3ipdspsumTretrieve, g3pkatmlatencyTcount=g3pkatmlatencyTcount, g3clansocsumBoard=g3clansocsumBoard, g3secviolateTintvl=g3secviolateTintvl, g3atmpncPncLocA=g3atmpncPncLocA, g3mediacfg=g3mediacfg, g3routepatternTGNumber12=g3routepatternTGNumber12, g3trunksta=g3trunksta, g3cabinetCarDType=g3cabinetCarDType, g3covpathPoint5Aband=g3covpathPoint5Aband, g3trapFromHour=g3trapFromHour, g3bulletinMessage10=g3bulletinMessage10, g3pktonerecCCMFCRPnAlloc=g3pktonerecCCMFCRPnAlloc, g3ipinterfaceSlot11=g3ipinterfaceSlot11, g3siggroupIntfNum7=g3siggroupIntfNum7, g3clanetherEntry=g3clanetherEntry, g3ipnetregionRSVPFailure=g3ipnetregionRSVPFailure, g3siggroupPriDChannel=g3siggroupPriDChannel, g3pkloadtotalYear=g3pkloadtotalYear, g3routepatternRPNumber=g3routepatternRPNumber, g3pkloadincIncIncomingUse=g3pkloadincIncIncomingUse, g3fiberlinkTintvl=g3fiberlinkTintvl, g3esmsumTdelay=g3esmsumTdelay, g3pkatmlatencyPNPair=g3pkatmlatencyPNPair, g3pkannallDay=g3pkannallDay, g3mediacfgVintage=g3mediacfgVintage, g3fiberlinkDS1Type=g3fiberlinkDS1Type, g3loadtotalTDMOccupancy=g3loadtotalTDMOccupancy, g3ipinterfaceSlot47=g3ipinterfaceSlot47, g3snblockTage=g3snblockTage, g3cbctrunkOvfMAX=g3cbctrunkOvfMAX, g3busytrkMember=g3busytrkMember, g3bulletinDate14=g3bulletinDate14, g3trunkwbsumTretrieve=g3trunkwbsumTretrieve, g3stamediaGatewayStatus65=g3stamediaGatewayStatus65, g3trunkstaConnPort6=g3trunkstaConnPort6, g3atmpncTintvl=g3atmpncTintvl, g3pkatmlatencyMonth=g3pkatmlatencyMonth, g3atmportpg2SGNumber157=g3atmportpg2SGNumber157, g3pkpnblockTdmPeg=g3pkpnblockTdmPeg, g3atmlatencySetup1A=g3atmlatencySetup1A, g3healthCab1to1514=g3healthCab1to1514)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3trunkoutTrunkGroup=g3trunkoutTrunkGroup, g3lsplistNodeName=g3lsplistNodeName, g3stamedlistTable=g3stamedlistTable, g3fiberlinkFLNumber=g3fiberlinkFLNumber, g3healthPncStat1to158=g3healthPncStat1to158, g3atmportpg2TGNumber92=g3atmportpg2TGNumber92, g3pkatmlatencyTage=g3pkatmlatencyTage, g3trunkstaMember=g3trunkstaMember, g3pkloadtanMonth=g3pkloadtanMonth, g3bulletinDate55=g3bulletinDate55, g3ipunregEntry=g3ipunregEntry, g3atmportpg2TGNumber156=g3atmportpg2TGNumber156, g3stamediaGatewayStatus40=g3stamediaGatewayStatus40, g3pkipsignal=g3pkipsignal, g3stationDataName=g3stationDataName, g3atmportpg2Tage=g3atmportpg2Tage, g3principalCovPath3=g3principalCovPath3, g3pkpnblockEntry=g3pkpnblockEntry, g3siggroupIntfNum16=g3siggroupIntfNum16, g3pkloadincHour=g3pkloadincHour, g3esmainLocalPref=g3esmainLocalPref, g3gatewayTcount=g3gatewayTcount, g3filterMajor=g3filterMajor, g3clanpppTcount=g3clanpppTcount, g3tonerecsumGPTDPDeny=g3tonerecsumGPTDPDeny, g3restartUnavailable=g3restartUnavailable, g3esparmsNetCommunity38=g3esparmsNetCommunity38, g3tonerecTdelay=g3tonerecTdelay, g3attdgrpTdelay=g3attdgrpTdelay, g3atmportpg1SGNumber39=g3atmportpg1SGNumber39, g3statmedproTdelay=g3statmedproTdelay, g3esparmsNetCommunity34=g3esparmsNetCommunity34, g3lsplistTage=g3lsplistTage, g3pktrunkoutTdelay=g3pktrunkoutTdelay, g3pkipcodecsumG723InRegion=g3pkipcodecsumG723InRegion, g3dmodule=g3dmodule, g3healthCab1to1512=g3healthCab1to1512, g3rpatDay=g3rpatDay, g3pktrunkwbsumTotalUsage=g3pktrunkwbsumTotalUsage, g3pkloadout=g3pkloadout, g3alarmsDayAlrmd=g3alarmsDayAlrmd, g3clanppp=g3clanppp, g3pkannintegAllPortsBusy=g3pkannintegAllPortsBusy, g3gatewayTintvl=g3gatewayTintvl, g3ipserverPrimServState=g3ipserverPrimServState, g3dmoduleTdelay=g3dmoduleTdelay, g3callratedataBsyIntMnYesterday=g3callratedataBsyIntMnYesterday, g3mmisumTdelay=g3mmisumTdelay, g3statmedproDupLinkEth=g3statmedproDupLinkEth, g3esparmsNetCommunity48=g3esparmsNetCommunity48, g3pkipdspsum=g3pkipdspsum, g3cbctrunkTGNumber=g3cbctrunkTGNumber, g3pkloadtotalTintvl=g3pkloadtotalTintvl, g3voicesumTretrieve=g3voicesumTretrieve, g3loadincEntry=g3loadincEntry, g3ipinterfaceNodeName1=g3ipinterfaceNodeName1, g3deftimeDayOfWeek=g3deftimeDayOfWeek, g3pkvoicesumAvailablePorts=g3pkvoicesumAvailablePorts, g3ipnetregionAudio8021Pri=g3ipnetregionAudio8021Pri, g3pktrunksumPercentOutBlk=g3pktrunksumPercentOutBlk, g3siggroupBoard8=g3siggroupBoard8, g3atmportpg3SGNumber198=g3atmportpg3SGNumber198, g3routepatternTGNumber4=g3routepatternTGNumber4, g3stamediaGatewayStatus57=g3stamediaGatewayStatus57, g3ipinterfaceNodeName16=g3ipinterfaceNodeName16, g3esmainServerBIP2=g3esmainServerBIP2, g3healthCab31to4422=g3healthCab31to4422, g3trunkgrpEntry=g3trunkgrpEntry, g3pkloadincYear=g3pkloadincYear, g3atmportpg3SGNumber184=g3atmportpg3SGNumber184, g3atmportpg2TGNumber108=g3atmportpg2TGNumber108, g3trunkgrpShortHold=g3trunkgrpShortHold, g3loadintTage=g3loadintTage, g3pktonerecsumGPRDTAvail=g3pktonerecsumGPRDTAvail, g3pktonerecCCCPTRTotOffPN=g3pktonerecCCCPTRTotOffPN, g3secviolateAtdInvalidAC=g3secviolateAtdInvalidAC, g3timedateYear=g3timedateYear, g3pktrunkwbsumMeasHour=g3pktrunkwbsumMeasHour, g3pkannallTintvl=g3pkannallTintvl, g3pktrunkoutHour=g3pktrunkoutHour, g3pnchealthPncBWarning=g3pnchealthPncBWarning, g3ipinterfaceSlot74=g3ipinterfaceSlot74, g3snblockTable=g3snblockTable, g3pkipsignalTcount=g3pkipsignalTcount, g3cabtypeTdelay=g3cabtypeTdelay, g3ipregionTdelay=g3ipregionTdelay, g3callratedataBsyCalCmplYesterday=g3callratedataBsyCalCmplYesterday, g3secviolateDay=g3secviolateDay, g3pkesmsumTotalAllocation=g3pkesmsumTotalAllocation, g3pkrpatCallsCarrd=g3pkrpatCallsCarrd, g3_mib=g3_mib, g3atmportpg3LSGNumber4=g3atmportpg3LSGNumber4, g3pkmmisumMonth=g3pkmmisumMonth, g3stamediaAlarmMajor=g3stamediaAlarmMajor, g3pkloadincIncOutgoingUse=g3pkloadincIncOutgoingUse, g3pkloadoutTretrieve=g3pkloadoutTretrieve, g3cbctrunkServiceName=g3cbctrunkServiceName, g3pkipcodecsumMonth=g3pkipcodecsumMonth, g3bulletinMessage32=g3bulletinMessage32, g3pkhuntCallsQue=g3pkhuntCallsQue, g3timedateLastError5=g3timedateLastError5, g3ds1Tintvl=g3ds1Tintvl, g3loadintIntIntraPNPeg=g3loadintIntIntraPNPeg, g3ipinterfaceNodeName62=g3ipinterfaceNodeName62, g3agentSnmpSet=g3agentSnmpSet, g3filterTrunkGroup=g3filterTrunkGroup, g3atmportpg3TGNumber228=g3atmportpg3TGNumber228, g3pkcovpathTable=g3pkcovpathTable, g3errorsTdelay=g3errorsTdelay, g3esmainServerBIP1=g3esmainServerBIP1, g3mediacfgTretrieve=g3mediacfgTretrieve, g3rpatcfgPattern17=g3rpatcfgPattern17, g3tonerecsumRunHour=g3tonerecsumRunHour, g3atmportpg2TGNumber94=g3atmportpg2TGNumber94, g3atmportpg2TGNumber110=g3atmportpg2TGNumber110, g3voicesumYear=g3voicesumYear, g3bulletinMessage23=g3bulletinMessage23, g3atmpncPncAFIA=g3atmpncPncAFIA, g3pkloadincTdelay=g3pkloadincTdelay, g3pkcovpathTcount=g3pkcovpathTcount, g3atmportpg1Entry=g3atmportpg1Entry, g3callratevoiceBsyIntHrYesterday2=g3callratevoiceBsyIntHrYesterday2, g3esmsumTotalUsage=g3esmsumTotalUsage, g3callratevoiceBsyCalCmplToday=g3callratevoiceBsyCalCmplToday, g3covpathPoint1Aband=g3covpathPoint1Aband, g3trkgrpmemPort=g3trkgrpmemPort, g3statregionEntry=g3statregionEntry, g3bulletinDate25=g3bulletinDate25, g3atmportpg1SGNumber6=g3atmportpg1SGNumber6, g3loadoutOutOutgoingPeg=g3loadoutOutOutgoingPeg, g3nodenameIP4=g3nodenameIP4, g3stamediaGatewayStatus23=g3stamediaGatewayStatus23, g3atmportpg1SGNumber73=g3atmportpg1SGNumber73, g3clanpppDay=g3clanpppDay, g3ipinterfaceSlot79=g3ipinterfaceSlot79, g3ipevt=g3ipevt, g3pkrpatTable=g3pkrpatTable, g3atmportpg3TGNumber223=g3atmportpg3TGNumber223, g3callratedataRunYear=g3callratedataRunYear, g3eventdayEventType=g3eventdayEventType, g3covpathPoint2Aband=g3covpathPoint2Aband, g3atmportpg1TGNumber76=g3atmportpg1TGNumber76, g3stamediaGatewayStatus21=g3stamediaGatewayStatus21, g3atmportpg1SGNumber9=g3atmportpg1SGNumber9, g3loadincIncIncomingPeg=g3loadincIncIncomingPeg, g3healthCab16to3025=g3healthCab16to3025, g3servalmDate=g3servalmDate, g3pkmmisumYear=g3pkmmisumYear, g3pkannintegMPortPlay=g3pkannintegMPortPlay, g3datamstaConnPort3=g3datamstaConnPort3, g3cartypeCab2CarEType=g3cartypeCab2CarEType, g3routepatternTGNumber1=g3routepatternTGNumber1, g3eventdayFirstDay=g3eventdayFirstDay, g3esparmsNetCommunity63=g3esparmsNetCommunity63, g3ipinterfaceSlot1=g3ipinterfaceSlot1, g3voicesumHour=g3voicesumHour, g3pktrunksumIncSeize=g3pktrunksumIncSeize, g3atmportpg2SGNumber120=g3atmportpg2SGNumber120, g3pkipdspsumPctOutSrv=g3pkipdspsumPctOutSrv, g3ipinterfaceSlot8=g3ipinterfaceSlot8, g3atmportpg1TGNumber90=g3atmportpg1TGNumber90, g3gatewayG700ModTypeV1=g3gatewayG700ModTypeV1, g3pkhuntCallsAban=g3pkhuntCallsAban, g3trunksumGrpOvfl=g3trunksumGrpOvfl, g3atmpncPncAddFmtB=g3atmpncPncAddFmtB, g3trunklightTcount=g3trunklightTcount, g3pksnblockTintvl=g3pksnblockTintvl, g3fiberlinkE1BDs1Board=g3fiberlinkE1BDs1Board, g3gatewayRegistered=g3gatewayRegistered, g3mmisumTintvl=g3mmisumTintvl, g3esmainTcount=g3esmainTcount, g3siggroupIntfNum2=g3siggroupIntfNum2, g3pkloadincPNNumber=g3pkloadincPNNumber, g3mgrecruleRecRule=g3mgrecruleRecRule, g3attdgrpTable=g3attdgrpTable, g3routepatternTGNumber7=g3routepatternTGNumber7, g3eventday=g3eventday, g3pkprincipalCovPath4=g3pkprincipalCovPath4, g3pktonerecsumDTMRTAvail=g3pktonerecsumDTMRTAvail, g3ipinterfaceSlot75=g3ipinterfaceSlot75, g3cbctrunkTable=g3cbctrunkTable, g3annallASP=g3annallASP, g3trapMinor=g3trapMinor, g3atmportpg3SGNumber242=g3atmportpg3SGNumber242, g3gatewayG700ModTypeV4=g3gatewayG700ModTypeV4, g3callratevoiceMeasHour5=g3callratevoiceMeasHour5, g3trunkgrpTcount=g3trunkgrpTcount, g3annintegMeasHour=g3annintegMeasHour, g3callratetotalMeasHour5=g3callratetotalMeasHour5, g3errorsTable=g3errorsTable, g3healthCab16to3021=g3healthCab16to3021, g3ipinterfaceNodeName67=g3ipinterfaceNodeName67, g3ipinterfaceSlot70=g3ipinterfaceSlot70, g3callratevoiceTretrieve=g3callratevoiceTretrieve, g3pkrpatTintvl=g3pkrpatTintvl, g3pktrunksumRunDay=g3pktrunksumRunDay, g3alarmsMinRslvd=g3alarmsMinRslvd, g3esserversTretrieve=g3esserversTretrieve, g3cartypeCab3CarCType=g3cartypeCab3CarCType, g3annallName=g3annallName, g3datamstaTable=g3datamstaTable, g3callratetotalNumCallsToday=g3callratetotalNumCallsToday, g3pkipdspsumPctBlk=g3pkipdspsumPctBlk, g3siggroupBoard16=g3siggroupBoard16, g3atmtrunkLocation=g3atmtrunkLocation, g3routepatternTGNumber3=g3routepatternTGNumber3, g3regipstat=g3regipstat, g3healthTintvl=g3healthTintvl, g3healthCab1to155=g3healthCab1to155, g3cabtypeTintvl=g3cabtypeTintvl, g3atmportpg3TGNumber197=g3atmportpg3TGNumber197, g3pkclansocsumSockPeg=g3pkclansocsumSockPeg, g3dmoduleTcount=g3dmoduleTcount, g3loadintDay=g3loadintDay, g3pkcovpathCallsOffDA=g3pkcovpathCallsOffDA, g3agentSubmapName=g3agentSubmapName, g3trunkoutYear=g3trunkoutYear, g3pkhuntTotalUsage=g3pkhuntTotalUsage, g3principalCovPath6=g3principalCovPath6, g3bulletinMessage20=g3bulletinMessage20, g3atmportpg1SGNumber43=g3atmportpg1SGNumber43, g3cabinetCarCType=g3cabinetCarCType, g3pkloadtanPNNumber=g3pkloadtanPNNumber, mgmt=mgmt, g3attdgrpCallsAns=g3attdgrpCallsAns, g3callratetotalBsyCalCmplToday=g3callratetotalBsyCalCmplToday, g3pktonerecsum=g3pktonerecsum, g3esmainServerBIP4=g3esmainServerBIP4, g3cbctrunkEntry=g3cbctrunkEntry, g3ipinterfaceSlot46=g3ipinterfaceSlot46, g3loadincTintvl=g3loadincTintvl, g3mmisumAvailableUsage=g3mmisumAvailableUsage, g3datamstaConnPort8=g3datamstaConnPort8, g3callratedataNumCallsToday1=g3callratedataNumCallsToday1, g3pkprincipalTable=g3pkprincipalTable, g3nodenameName=g3nodenameName, g3ipserverPrimIP3=g3ipserverPrimIP3, g3tonerecTretrieve=g3tonerecTretrieve, g3atmportpg2SGNumber143=g3atmportpg2SGNumber143, g3pktonerecCCTTRTotOffPN=g3pktonerecCCTTRTotOffPN, g3trunkmemEntry=g3trunkmemEntry, g3pkannallEntry=g3pkannallEntry, g3stamediaGatewayStatus2=g3stamediaGatewayStatus2, g3pkprincipalEntry=g3pkprincipalEntry, g3vintageIPAttdAvail=g3vintageIPAttdAvail, g3clanpppYear=g3clanpppYear, g3pkcovpathTdelay=g3pkcovpathTdelay, g3pkprincipalCallsOffTotal=g3pkprincipalCallsOffTotal, g3atmportpg3TGNumber214=g3atmportpg3TGNumber214, g3pkesmsumPercentBlock=g3pkesmsumPercentBlock, g3atmportpg1SGNumber62=g3atmportpg1SGNumber62, g3lsplistEntry=g3lsplistEntry, g3siggroupBoard19=g3siggroupBoard19, g3pktonerecCCCPTRPkAlloc=g3pktonerecCCCPTRPkAlloc)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3loadtotalPNOccupancy=g3loadtotalPNOccupancy, g3ipinterfaceNodeName15=g3ipinterfaceNodeName15, g3ipinterfaceNodeName75=g3ipinterfaceNodeName75, g3atmportpg3SGNumber239=g3atmportpg3SGNumber239, g3pkannallASP=g3pkannallASP, g3healthTimeSource=g3healthTimeSource, g3atmportpg1TGNumber61=g3atmportpg1TGNumber61, g3annallDay=g3annallDay, g3pkprincipal=g3pkprincipal, g3esparmsNetCommunity35=g3esparmsNetCommunity35, g3pkloadintTdelay=g3pkloadintTdelay, g3atmportpg3TGNumber190=g3atmportpg3TGNumber190, g3healthPncStat31to4424=g3healthPncStat31to4424, g3vintagePlatform=g3vintagePlatform, g3pkclansocsumMeasHour=g3pkclansocsumMeasHour, g3bulletinDate41=g3bulletinDate41, g3tonerecCCMFCRPnAlloc=g3tonerecCCMFCRPnAlloc, g3bulletinMessage3=g3bulletinMessage3, g3trunkgrp=g3trunkgrp, g3principalTretrieve=g3principalTretrieve, g3pkipsignalTable=g3pkipsignalTable, g3vintageLocalSpareProc=g3vintageLocalSpareProc, g3stamgannEntry=g3stamgannEntry, g3configPort23=g3configPort23, g3atmportpg3LSGNumber9=g3atmportpg3LSGNumber9, g3healthCab16to3023=g3healthCab16to3023, g3callratesrvBsyIntScYesterday=g3callratesrvBsyIntScYesterday, g3agentActiveName=g3agentActiveName, g3ipinterfaceNodeName50=g3ipinterfaceNodeName50, g3pkhuntMeasHour=g3pkhuntMeasHour, g3clanpppTdelay=g3clanpppTdelay, g3bulletinMessage56=g3bulletinMessage56, g3mmisumEntry=g3mmisumEntry, g3statmedproDupNodeName=g3statmedproDupNodeName, g3restartMonth=g3restartMonth, g3callratedataBsyIntTodayMn=g3callratedataBsyIntTodayMn, g3pkrpatQueueOvflo=g3pkrpatQueueOvflo, g3callratemediaTage=g3callratemediaTage, g3atmcfg=g3atmcfg, g3trunkoutHour=g3trunkoutHour, g3configPort10=g3configPort10, g3ipinterfaceNodeName27=g3ipinterfaceNodeName27, g3atmportpg3TGNumber238=g3atmportpg3TGNumber238, g3attdgrpRunDay=g3attdgrpRunDay, g3pkclansocsumPcttmASB=g3pkclansocsumPcttmASB, g3healthPncStat16to3024=g3healthPncStat16to3024, g3pktrunksumTage=g3pktrunksumTage, g3statmedproTable=g3statmedproTable, g3atmportpg3TGNumber194=g3atmportpg3TGNumber194, g3ipinterfaceSlot61=g3ipinterfaceSlot61, g3busybrdResult=g3busybrdResult, g3esmsumHour=g3esmsumHour, g3pkesmsumTable=g3pkesmsumTable, g3covpathTcount=g3covpathTcount, g3healthPncStat31to4427=g3healthPncStat31to4427, g3lsplistTintvl=g3lsplistTintvl, g3msgalmAPP=g3msgalmAPP, g3rpatYear=g3rpatYear, g3cbctrunkDay=g3cbctrunkDay, definity_mcu=definity_mcu, g3esparmsNetCommunity13=g3esparmsNetCommunity13, g3esparmsNetCommunity24=g3esparmsNetCommunity24, g3healthDupPNC=g3healthDupPNC, g3huntSpeedAns=g3huntSpeedAns, g3rpatcfgTintvl=g3rpatcfgTintvl, g3huntlistTdelay=g3huntlistTdelay, g3principalCovPath8=g3principalCovPath8, g3regipstatTintvl=g3regipstatTintvl, g3gatewayG350ModTypeV3=g3gatewayG350ModTypeV3, g3busybrdEntry=g3busybrdEntry, g3pktonerecDTMFPnReq=g3pktonerecDTMFPnReq, g3annintegName=g3annintegName, g3ipserverSecIP3=g3ipserverSecIP3, g3attdgrpSpeedAns=g3attdgrpSpeedAns, g3connect=g3connect, g3platcmdsCommand=g3platcmdsCommand, g3attdposTintvl=g3attdposTintvl, g3trunkwbsumDay=g3trunkwbsumDay, g3atmportpg1SGNumber21=g3atmportpg1SGNumber21, g3pkatmlatency=g3pkatmlatency, g3pksnblockSnPair=g3pksnblockSnPair, g3trunklightTable=g3trunklightTable, g3atmportpg1SGNumber38=g3atmportpg1SGNumber38, g3pkipcodecsumG723Usage=g3pkipcodecsumG723Usage, g3esserversLocalPref=g3esserversLocalPref, g3callratetotalRunYear=g3callratetotalRunYear, g3callratesrvBsyIntHrYesterday=g3callratesrvBsyIntHrYesterday, g3loadintTintvl=g3loadintTintvl, g3routepatternTGNumber8=g3routepatternTGNumber8, g3pkcovpathPoint5Ans=g3pkcovpathPoint5Ans, g3statregionNbrConnTx=g3statregionNbrConnTx, g3atmlatencyDay=g3atmlatencyDay, g3atmportpg3LTGNumber4=g3atmportpg3LTGNumber4, g3restart=g3restart, g3ipserverTintvl=g3ipserverTintvl, g3bulletinMessage8=g3bulletinMessage8, g3voicesumAvailableUsage=g3voicesumAvailableUsage, g3statstaExtension=g3statstaExtension, g3esmsumPercentBlock=g3esmsumPercentBlock, definity_one=definity_one, g3cabinetCarEType=g3cabinetCarEType, g3msgalmDate=g3msgalmDate, g3atmportpg2TGNumber176=g3atmportpg2TGNumber176, g3pktrunkwbsumHour=g3pktrunkwbsumHour, g3tonerecEntry=g3tonerecEntry, g3pkloadtotalTDMOccupancy=g3pkloadtotalTDMOccupancy, g3pkprincipalTintvl=g3pkprincipalTintvl, g3pkannallQueueDrops=g3pkannallQueueDrops, g3filterTable=g3filterTable, g3trunkoutTdelay=g3trunkoutTdelay, experimental=experimental, g3pkloadincMonth=g3pkloadincMonth, g3stamediaGatewayStatus29=g3stamediaGatewayStatus29, g3trunkwbsum=g3trunkwbsum, g3callratemedia=g3callratemedia, g3pktrunkoutMember=g3pktrunkoutMember, g3pkloadoutPNNumber=g3pkloadoutPNNumber, g3ipintlistTdelay=g3ipintlistTdelay, g3configPort12=g3configPort12, g3esparmsNetCommunity49=g3esparmsNetCommunity49, g3esparmsNetCommunity64=g3esparmsNetCommunity64, g3extdevTdelay=g3extdevTdelay, g3commlinkTage=g3commlinkTage, g3atmportpg3SGNumber185=g3atmportpg3SGNumber185, g3vintageSpeAupState1=g3vintageSpeAupState1, g3lsplistIPAddr2=g3lsplistIPAddr2, g3configPort14=g3configPort14, g3atmportpg3TGNumber187=g3atmportpg3TGNumber187, g3atmportpg3TGNumber231=g3atmportpg3TGNumber231, g3deftimeDayOfMonth=g3deftimeDayOfMonth, g3tonerecsumTdelay=g3tonerecsumTdelay, g3atmportpg2SGNumber180=g3atmportpg2SGNumber180, g3attdposPkTimeHeld=g3attdposPkTimeHeld, g3snblockUsage=g3snblockUsage, g3callratesrvBsyIntSc=g3callratesrvBsyIntSc, g3bulletinDate27=g3bulletinDate27, g3pkprincipalCallsAband=g3pkprincipalCallsAband, g3healthPncStat1to154=g3healthPncStat1to154, g3atmportpg2TGNumber135=g3atmportpg2TGNumber135, g3atmportpg3Tcount=g3atmportpg3Tcount, g3timedateHour=g3timedateHour, g3trkgrpmemSigGroup=g3trkgrpmemSigGroup, g3callratetotalBsyCalCmpl=g3callratetotalBsyCalCmpl, g3cabtypeCab1Type=g3cabtypeCab1Type, g3atmcfgCode=g3atmcfgCode, g3deftimeYear=g3deftimeYear, g3callratemediaBsyIntMnYesterday=g3callratemediaBsyIntMnYesterday, g3covpathPoint3Aband=g3covpathPoint3Aband, g3pkcovpathCallsOffSAC=g3pkcovpathCallsOffSAC, g3principalTdelay=g3principalTdelay, g3ds1Tcount=g3ds1Tcount, g3alarmsAck2=g3alarmsAck2, g3rpatcfgPattern14=g3rpatcfgPattern14, g3stamediaGatewayStatus64=g3stamediaGatewayStatus64, g3pkvoicesumVoiceDenials=g3pkvoicesumVoiceDenials, g3atmportpg1TGNumber79=g3atmportpg1TGNumber79, g3msgalmID=g3msgalmID, g3pktonerecsumCCTTRTQueue=g3pktonerecsumCCTTRTQueue, g3statmedproDupEnabled=g3statmedproDupEnabled, g3atmportpg1SGNumber24=g3atmportpg1SGNumber24, g3callratemediaNumCallsYesterday=g3callratemediaNumCallsYesterday, g3ipserverSecHost=g3ipserverSecHost, g3trunklightMonth=g3trunklightMonth, g3pkloadoutOutOutgoingPeg=g3pkloadoutOutOutgoingPeg, g3atmportpg3SGNumber229=g3atmportpg3SGNumber229, g3trunkmemTable=g3trunkmemTable, g3trunkmemMember=g3trunkmemMember, g3atmportpg1SGNumber1=g3atmportpg1SGNumber1, g3atmportpg3SGNumber216=g3atmportpg3SGNumber216, g3atmportpg3LTGNumber5=g3atmportpg3LTGNumber5, g3tonerecsumCCMFCRPDeny=g3tonerecsumCCMFCRPDeny, g3trunkwbsumYear=g3trunkwbsumYear, g3connectQueued=g3connectQueued, g3ipinterfaceSlot40=g3ipinterfaceSlot40, g3clanetherDate=g3clanetherDate, g3stamedlistTcount=g3stamedlistTcount, g3annintegPlayReqts=g3annintegPlayReqts, g3clanpppTretrieve=g3clanpppTretrieve, g3ipnetregionAudioPHB=g3ipnetregionAudioPHB, g3statlinkTdelay=g3statlinkTdelay, g3ipnetregionLastError=g3ipnetregionLastError, g3loadoutOutIntraPNPeg=g3loadoutOutIntraPNPeg, g3ipinterfaceSlot27=g3ipinterfaceSlot27, g3secviolateAtdValidAC=g3secviolateAtdValidAC, g3pkvoicesumTdelay=g3pkvoicesumTdelay, g3atmportpg2SGNumber167=g3atmportpg2SGNumber167, g3pkprincipalCallsCDAC=g3pkprincipalCallsCDAC, g3loadintHour=g3loadintHour, g3annintegBoard=g3annintegBoard, g3ipinterfaceSlot63=g3ipinterfaceSlot63, g3tonerecsumCCTTRPReq=g3tonerecsumCCTTRPReq, g3pkesmsumTdelay=g3pkesmsumTdelay, g3esparmsNetCommunity22=g3esparmsNetCommunity22, g3bulletinMessage59=g3bulletinMessage59, g3vintageSpeAupState2=g3vintageSpeAupState2, g3cbctrunkDur2=g3cbctrunkDur2, g3atmportpg3SGNumber210=g3atmportpg3SGNumber210, g3mgrecruleTretrieve=g3mgrecruleTretrieve, g3cabinetFloor=g3cabinetFloor, g3portTable=g3portTable, g3cabinetCarCPNN=g3cabinetCarCPNN, g3siggroupBoard17=g3siggroupBoard17, g3secviolateInvalidBC=g3secviolateInvalidBC, g3stationcfgTcount=g3stationcfgTcount, g3atmportpg1TGNumber16=g3atmportpg1TGNumber16, g3pktonerecTintvl=g3pktonerecTintvl, g3atmpncPncAFIB=g3atmpncPncAFIB, g3tonerecsumCCMFCRTReq=g3tonerecsumCCMFCRTReq, g3pkcovpathTintvl=g3pkcovpathTintvl, g3loadincMonth=g3loadincMonth, g3atmlatencyMonth=g3atmlatencyMonth, g3configPort16=g3configPort16, g3healthCab1to152=g3healthCab1to152, g3callratetotalBsyCalCmplToday2=g3callratetotalBsyCalCmplToday2, g3statmedproNetworkRegion=g3statmedproNetworkRegion, g3stationCable=g3stationCable, g3loadintIntIntraPNUse=g3loadintIntIntraPNUse, g3occsumTable=g3occsumTable, g3ipunreg=g3ipunreg, g3stamediaGatewayStatus6=g3stamediaGatewayStatus6, g3tonerecsumGPRDTAvail=g3tonerecsumGPRDTAvail, g3stamediaGatewayStatus71=g3stamediaGatewayStatus71, g3pkmmisumAvailablePorts=g3pkmmisumAvailablePorts, g3mgrecruleTintvl=g3mgrecruleTintvl, g3errorsIndex=g3errorsIndex, g3msgalmLocation=g3msgalmLocation, g3busytrkResult=g3busytrkResult, g3trunklightMember=g3trunklightMember, g3pkipcodecsumTable=g3pkipcodecsumTable, g3pkvoicesumTretrieve=g3pkvoicesumTretrieve, g3atmportpg2SGNumber112=g3atmportpg2SGNumber112, g3callratemediaNumCallsToday2=g3callratemediaNumCallsToday2, g3ipunregTdelay=g3ipunregTdelay, g3ipinterfaceNodeName74=g3ipinterfaceNodeName74, g3cabinetTable=g3cabinetTable, g3statstaServiceState=g3statstaServiceState, g3callratetotalNumCalls=g3callratetotalNumCalls, g3pksnblockDay=g3pksnblockDay, g3atmportpg3Tretrieve=g3atmportpg3Tretrieve, g3alarmsAlarmNumber=g3alarmsAlarmNumber, g3pkvoicesumPercentAPB=g3pkvoicesumPercentAPB, g3huntHour=g3huntHour, g3callratetotalMeasHour3=g3callratetotalMeasHour3, g3commlinkTable=g3commlinkTable, g3trkgrpmemMember=g3trkgrpmemMember, g3statmedproDupSourceIP=g3statmedproDupSourceIP, g3attdgrpGrpSiz=g3attdgrpGrpSiz, g3atmtrunkTretrieve=g3atmtrunkTretrieve, g3annallCallsQueued=g3annallCallsQueued, g3trapOperation=g3trapOperation, avaya_s8700i=avaya_s8700i, g3datamstaServiceState=g3datamstaServiceState, g3stamediaGatewayStatus39=g3stamediaGatewayStatus39, g3healthCab1to1511=g3healthCab1to1511)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3clansocsumTcount=g3clansocsumTcount, g3trunklightTdelay=g3trunklightTdelay, g3atmportpg2TGNumber165=g3atmportpg2TGNumber165, g3huntlistTretrieve=g3huntlistTretrieve, g3pkipsignalTdelay=g3pkipsignalTdelay, g3tonerecsumGPTDTDeny=g3tonerecsumGPTDTDeny, g3bulletinMessage25=g3bulletinMessage25, g3ipserverCallCntl802=g3ipserverCallCntl802, g3huntEntry=g3huntEntry, g3routepatternTable=g3routepatternTable, g3occsumIdleOcc=g3occsumIdleOcc, g3statmedproDSPChanStatus6=g3statmedproDSPChanStatus6, g3occsumTcount=g3occsumTcount, g3atmportpg1Tcount=g3atmportpg1Tcount, g3pnblockTimeSlots=g3pnblockTimeSlots, g3atmportpg2SGNumber153=g3atmportpg2SGNumber153, g3statstaSetIPAddr=g3statstaSetIPAddr, g3ds1cfgCode=g3ds1cfgCode, g3atmportpg2SGNumber138=g3atmportpg2SGNumber138, g3snblockYear=g3snblockYear, g3callratetotalBsyIntHrYesterday2=g3callratetotalBsyIntHrYesterday2, g3ipnetregionTcount=g3ipnetregionTcount, g3pnchealthTage=g3pnchealthTage, g3ipserverTable=g3ipserverTable, g3bulletinDate43=g3bulletinDate43, g3cabtype=g3cabtype, g3healthPncStat16to3030=g3healthPncStat16to3030, g3vintageSpeBupState2=g3vintageSpeBupState2, g3agentOfferType=g3agentOfferType, g3bulletinDate47=g3bulletinDate47, g3pktonerecsumTintvl=g3pktonerecsumTintvl, g3pkloadintEntry=g3pkloadintEntry, g3callratedataTdelay=g3callratedataTdelay, g3atmportpg1SGNumber57=g3atmportpg1SGNumber57, g3voicesumH320Allocation=g3voicesumH320Allocation, g3trunklightTintvl=g3trunklightTintvl, g3ipinterfaceNodeName22=g3ipinterfaceNodeName22, g3bulletinMessage18=g3bulletinMessage18, g3clanetherYear=g3clanetherYear, g3trunksumRunDay=g3trunksumRunDay, g3clanpppEntry=g3clanpppEntry, g3principalCallsRedirect=g3principalCallsRedirect, g3huntlistType=g3huntlistType, g3cabinetSRProductID=g3cabinetSRProductID, g3pktrunksumGroupSize=g3pktrunksumGroupSize, g3clientDynamicTimeout=g3clientDynamicTimeout, g3pktrunkwbsumTable=g3pktrunkwbsumTable, g3pkrpatTotalCalls=g3pkrpatTotalCalls, g3timedate=g3timedate, g3trunksumRunHour=g3trunksumRunHour, g3pnchealthSoftwreLck=g3pnchealthSoftwreLck, g3tonerecMeasHour=g3tonerecMeasHour, g3cbctrunkMonth=g3cbctrunkMonth, g3stamediaGatewayStatus42=g3stamediaGatewayStatus42, g3atmportpg2Entry=g3atmportpg2Entry, g3pktrunklightTcount=g3pktrunklightTcount, g3loadtanTdelay=g3loadtanTdelay, g3atmtrunkTdelay=g3atmtrunkTdelay, g3callratesrvBsyIntMn=g3callratesrvBsyIntMn, g3voicesumAvailablePorts=g3voicesumAvailablePorts, g3trunkgrpTage=g3trunkgrpTage, g3configPort24=g3configPort24, g3atmportpg3Tdelay=g3atmportpg3Tdelay, g3occsumIntcomAtt=g3occsumIntcomAtt, g3trkgrpmemGroup=g3trkgrpmemGroup, g3stationJack=g3stationJack, g3atmportpg3LTGNumber3=g3atmportpg3LTGNumber3, g3pkvoicesumMonth=g3pkvoicesumMonth, g3principalCallsCDAC=g3principalCallsCDAC, g3atmportpg2SGNumber179=g3atmportpg2SGNumber179, g3annallYear=g3annallYear, g3callratedataBsyIntHr=g3callratedataBsyIntHr, g3callratetotal=g3callratetotal, g3pkipsignalYear=g3pkipsignalYear, g3pkloadoutTable=g3pkloadoutTable, g3vintageIPAttdReg=g3vintageIPAttdReg, g3bulletinDate15=g3bulletinDate15, g3pkcovpathPoint2Ans=g3pkcovpathPoint2Ans, g3pktonerecsumDTMFPQueue=g3pktonerecsumDTMFPQueue, g3pktrunkwbsumTotalSeize=g3pktrunkwbsumTotalSeize, g3pkesmsumMonth=g3pkesmsumMonth, g3healthPncStat31to4421=g3healthPncStat31to4421, g3huntlistExtension=g3huntlistExtension, g3pkipcodecsumTage=g3pkipcodecsumTage, g3vintageIPAddress2=g3vintageIPAddress2, g3callratedataNumCallsToday=g3callratedataNumCallsToday, g3eventdayIndex=g3eventdayIndex, g3trapMajor=g3trapMajor, g3ipnetregionRegion=g3ipnetregionRegion, g3extdevTcount=g3extdevTcount, g3agentServer1State=g3agentServer1State, g3trunksumOutSrv=g3trunksumOutSrv, g3pkipdspsumTintvl=g3pkipdspsumTintvl, g3pkprincipalCallsCSCB=g3pkprincipalCallsCSCB, g3pktrunkwbsumDay=g3pktrunkwbsumDay, g3pkannintegTretrieve=g3pkannintegTretrieve, g3loadoutOutOutgoingUse=g3loadoutOutOutgoingUse, g3ipinterfaceNodeName8=g3ipinterfaceNodeName8, g3pkipdspsumEntry=g3pkipdspsumEntry, g3tonerecTable=g3tonerecTable, g3pkvoicesumYear=g3pkvoicesumYear, g3lsplistIPAddr3=g3lsplistIPAddr3, g3atmportpg1TGNumber44=g3atmportpg1TGNumber44, g3atmportpg3TGNumber185=g3atmportpg3TGNumber185, g3clansocsumDenialPeg=g3clansocsumDenialPeg, g3pnchealthTintvl=g3pnchealthTintvl, g3esmainTable=g3esmainTable, g3clientProductID=g3clientProductID, g3healthCab1to157=g3healthCab1to157, g3pktonerecsumCCCPTRPDeny=g3pktonerecsumCCCPTRPDeny, g3configTretrieve=g3configTretrieve, g3pkclansocsumRegion=g3pkclansocsumRegion, g3pktrunklightTable=g3pktrunklightTable, g3restartTretrieve=g3restartTretrieve, g3agentLspConfig=g3agentLspConfig, g3pksnblockEntry=g3pksnblockEntry, g3loadoutMonth=g3loadoutMonth, g3atmportpg2SGNumber163=g3atmportpg2SGNumber163, g3atmlatencyPNOrig1=g3atmlatencyPNOrig1, g3ipdspsumDSPUsage=g3ipdspsumDSPUsage, g3pktrunkwbsumPercentOutBlk=g3pktrunkwbsumPercentOutBlk, g3routepatternTGNumber10=g3routepatternTGNumber10, g3stamgannTable=g3stamgannTable, g3pktrunkwbsumTcount=g3pktrunkwbsumTcount, g3callratemediaBsyCalCmplYesterday=g3callratemediaBsyCalCmplYesterday, g3loadinc=g3loadinc, g3trunkgrpPbxID=g3trunkgrpPbxID, g3msgalmDescription=g3msgalmDescription, g3bulletinMessage30=g3bulletinMessage30, g3pkesmsumMeasHour=g3pkesmsumMeasHour, g3callratevoiceTage=g3callratevoiceTage, g3bulletinMessage58=g3bulletinMessage58, g3stamediaBusyOutStations=g3stamediaBusyOutStations, g3atmportpg3TGNumber219=g3atmportpg3TGNumber219, g3atmportpg2TGNumber101=g3atmportpg2TGNumber101, g3attdgrpTretrieve=g3attdgrpTretrieve, g3healthCab1to1513=g3healthCab1to1513, g3occsumRunDay=g3occsumRunDay, g3siggroupIntfNum11=g3siggroupIntfNum11, g3atmportpg3TGNumber199=g3atmportpg3TGNumber199, g3ipsignalSigGroup=g3ipsignalSigGroup, g3pkloadoutOutIntraPNPeg=g3pkloadoutOutIntraPNPeg, g3trkgrpmemTintvl=g3trkgrpmemTintvl, g3callratesrvBsyIntMnYesterday2=g3callratesrvBsyIntMnYesterday2, g3callratedataMeasHour5=g3callratedataMeasHour5, g3atmportpg1SGNumber47=g3atmportpg1SGNumber47, g3esmsumDay=g3esmsumDay, g3cbctrunkTretrieve=g3cbctrunkTretrieve, g3annallMeasHour=g3annallMeasHour, g3stamediaGatewayStatus75=g3stamediaGatewayStatus75, g3cbctrunkDur4=g3cbctrunkDur4, g3pnchealthPncAMajor=g3pnchealthPncAMajor, g3stamediaTage=g3stamediaTage, g3pkhunt=g3pkhunt, g3errorsDayLast=g3errorsDayLast, g3acaDay=g3acaDay, g3siggroupBoard11=g3siggroupBoard11, g3regipstatTable=g3regipstatTable, g3callratedataMeasHour=g3callratedataMeasHour, g3ipinterfaceSlot80=g3ipinterfaceSlot80, g3atmportpg2TGNumber142=g3atmportpg2TGNumber142, g3pkannintegMaxCallPeriod=g3pkannintegMaxCallPeriod, g3errorsErrType=g3errorsErrType, g3bulletinMessage2=g3bulletinMessage2, g3pkloadintIntInterPNPeg=g3pkloadintIntInterPNPeg, g3tonerecsumCCCPTRPDeny=g3tonerecsumCCCPTRPDeny, g3pktrunkoutMonth=g3pktrunkoutMonth, g3healthOthBusy=g3healthOthBusy, g3configTdelay=g3configTdelay, g3secviolateStnViolateAC=g3secviolateStnViolateAC, g3servalmID=g3servalmID, g3loadtotalTcount=g3loadtotalTcount, g3rpatcfgPattern12=g3rpatcfgPattern12, g3callratetotalBsyIntScToday2=g3callratetotalBsyIntScToday2, g3atmportpg1SGNumber88=g3atmportpg1SGNumber88, g3pkrpatCallsCarried=g3pkrpatCallsCarried, g3bulletinDate22=g3bulletinDate22, g3stamediaGatewayStatus26=g3stamediaGatewayStatus26, g3statmedproLinkEth=g3statmedproLinkEth, g3cartypeTage=g3cartypeTage, g3atmportpg1SGNumber77=g3atmportpg1SGNumber77, g3eventdayLastMinute=g3eventdayLastMinute, g3secviolateTtlInvalidAC=g3secviolateTtlInvalidAC, g3alarmsTcount=g3alarmsTcount, g3agentEssConfig=g3agentEssConfig, g3statmedproDSPChanStatus4=g3statmedproDSPChanStatus4, g3eventhourFirstDay=g3eventhourFirstDay, g3configPort7=g3configPort7, g3trapBoardNumber=g3trapBoardNumber, g3snblockTintvl=g3snblockTintvl, g3trunksumMeasHour=g3trunksumMeasHour, g3cbctrunkPlan5=g3cbctrunkPlan5, g3callratesrvRunMonth=g3callratesrvRunMonth, g3atmportpg2TGNumber102=g3atmportpg2TGNumber102, g3bulletinDate24=g3bulletinDate24, g3statregionNbrConnRx=g3statregionNbrConnRx, g3ipserverSecIP1=g3ipserverSecIP1, g3atmportpg2SGNumber177=g3atmportpg2SGNumber177, g3callratedataBsyIntMn=g3callratedataBsyIntMn, g3statstaTable=g3statstaTable, g3pkipdspsumTdelay=g3pkipdspsumTdelay, g3ipcodecsumG723InRegion=g3ipcodecsumG723InRegion, g3pkloadintTage=g3pkloadintTage, g3clansocsumTintvl=g3clansocsumTintvl, g3ipcodecsumTretrieve=g3ipcodecsumTretrieve, g3mediacfgTcount=g3mediacfgTcount, g3cbctrunkPlan3=g3cbctrunkPlan3, g3atmportpg2TGNumber143=g3atmportpg2TGNumber143, g3cabinetCarEPNN=g3cabinetCarEPNN, g3pktrunksumOutSrv=g3pktrunksumOutSrv, g3pktonerecGPTDPnReq=g3pktonerecGPTDPnReq, g3loadtanTanOutgoingUse=g3loadtanTanOutgoingUse, g3ipcodecsumTdelay=g3ipcodecsumTdelay, g3pkclansocsumYear=g3pkclansocsumYear, g3msgalmEntry=g3msgalmEntry, g3clanetherTdelay=g3clanetherTdelay, g3ipserverPrimStHealth=g3ipserverPrimStHealth, g3ipcodecsumMeasHour=g3ipcodecsumMeasHour, g3pkmmisumDay=g3pkmmisumDay, g3atmportpg3TGNumber236=g3atmportpg3TGNumber236, g3loadincTable=g3loadincTable, g3pktonerecsumGPTDPDeny=g3pktonerecsumGPTDPDeny, g3tonerecDay=g3tonerecDay, g3atmportpg3Location=g3atmportpg3Location, g3statmedproDupState=g3statmedproDupState, g3pktonerecsumTdelay=g3pktonerecsumTdelay, g3callratevoiceBsyIntHrYesterday=g3callratevoiceBsyIntHrYesterday, g3nodenameIP2=g3nodenameIP2, g3atmportpg2Table=g3atmportpg2Table, g3atmlatencyATMSetup1A=g3atmlatencyATMSetup1A, g3ipinterfaceSlot29=g3ipinterfaceSlot29, g3tonerecsumDTMRTAvail=g3tonerecsumDTMRTAvail, g3pkhuntCallsAns=g3pkhuntCallsAns, g3ipinterfaceNodeName84=g3ipinterfaceNodeName84, g3bulletinMessage9=g3bulletinMessage9, g3pkloadintTintvl=g3pkloadintTintvl, g3callratetotalTage=g3callratetotalTage, g3ipinterfaceSlot66=g3ipinterfaceSlot66, g3bulletinMessage29=g3bulletinMessage29, g3tonerecsumTintvl=g3tonerecsumTintvl, g3esparmsNetCommunity59=g3esparmsNetCommunity59, g3portEquipType=g3portEquipType, enterprises=enterprises, g3trkgrpmem=g3trkgrpmem, g3callratetotalNumCallsToday2=g3callratetotalNumCallsToday2, g3esmainClusterId=g3esmainClusterId, g3atmportpg2TGNumber163=g3atmportpg2TGNumber163, g3trunksumIncSeize=g3trunksumIncSeize, g3esmainPlatformType=g3esmainPlatformType, g3atmportpg2SGNumber109=g3atmportpg2SGNumber109, g3esparmsNetCommunity18=g3esparmsNetCommunity18, g3snblockLinkBlockage=g3snblockLinkBlockage, g3mmisumAvailablePorts=g3mmisumAvailablePorts, g3trapToDay=g3trapToDay)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3bulletinDate40=g3bulletinDate40, g3pkpnblockTdelay=g3pkpnblockTdelay, g3cbctrunkTanSeize=g3cbctrunkTanSeize, g3pkloadincTable=g3pkloadincTable, g3stamediaGatewayStatus18=g3stamediaGatewayStatus18, g3loadtanTable=g3loadtanTable, g3atmportpg2SGNumber103=g3atmportpg2SGNumber103, g3healthPncStat16to3031=g3healthPncStat16to3031, g3loadtanEntry=g3loadtanEntry, g3atmportpg3SGNumber187=g3atmportpg3SGNumber187, g3loadoutTdelay=g3loadoutTdelay, g3atmlatencyCount1B=g3atmlatencyCount1B, g3ipinterfaceNodeName41=g3ipinterfaceNodeName41, g3atmportpg1SGNumber83=g3atmportpg1SGNumber83, g3pkloadtotalHour=g3pkloadtotalHour, g3ipinterfaceNodeName80=g3ipinterfaceNodeName80, g3extdevDescription=g3extdevDescription, g3pktrunksumGrpOvfl=g3pktrunksumGrpOvfl, g3siggroupBoard10=g3siggroupBoard10, g3esmsumTretrieve=g3esmsumTretrieve, g3secviolateInvalidAttempt=g3secviolateInvalidAttempt, g3cabtypeTage=g3cabtypeTage, g3pktrunklightCarried=g3pktrunklightCarried, g3eventdayTage=g3eventdayTage, g3pkprincipalCovPath6=g3pkprincipalCovPath6, g3cbctrunkHour=g3cbctrunkHour, g3tonerecGPTDTotOffPN=g3tonerecGPTDTotOffPN, g3trunksumGroupSize=g3trunksumGroupSize, g3tonerecHour=g3tonerecHour, g3atmportpg2TGNumber157=g3atmportpg2TGNumber157, g3pktonerecGPTDPkOffPN=g3pktonerecGPTDPkOffPN, g3esparmsNetCommunity61=g3esparmsNetCommunity61, g3ipinterfaceSlot38=g3ipinterfaceSlot38, g3principalCovPath5=g3principalCovPath5, g3rpatcfgTretrieve=g3rpatcfgTretrieve, g3pkcovpathCallsOffTotal=g3pkcovpathCallsOffTotal, g3atmportpg2TGNumber138=g3atmportpg2TGNumber138, g3pkrpatTcount=g3pkrpatTcount, g3stamgannTintvl=g3stamgannTintvl, g3pkmmisumHour=g3pkmmisumHour, g3filterFilterStatus=g3filterFilterStatus, g3trunksumRunMonth=g3trunksumRunMonth, g3pkesmsumTcount=g3pkesmsumTcount, g3siggroupIntfNum3=g3siggroupIntfNum3, g3atmcfgTretrieve=g3atmcfgTretrieve, g3errorsMaintName=g3errorsMaintName, g3atmportpg2TGNumber140=g3atmportpg2TGNumber140, g3callratevoiceBsyCalCmplToday2=g3callratevoiceBsyCalCmplToday2, g3atmportpg1TGNumber66=g3atmportpg1TGNumber66, g3pkannintegMaxPorts=g3pkannintegMaxPorts, g3ipinterfaceNodeName65=g3ipinterfaceNodeName65, g3clansocsumMeasHour=g3clansocsumMeasHour, g3atmportpg2SGNumber149=g3atmportpg2SGNumber149, g3atmportpg2SGNumber104=g3atmportpg2SGNumber104, g3cabinetTcount=g3cabinetTcount, g3rpatIndex=g3rpatIndex, g3pkloadintTcount=g3pkloadintTcount, g3atmpncPncESIB=g3atmpncPncESIB, g3extdevType=g3extdevType, g3tonerecsumCCTTRHour=g3tonerecsumCCTTRHour, g3mmisumTotalAllocation=g3mmisumTotalAllocation, avaya_s8700m=avaya_s8700m, g3clansocsumSockPeg=g3clansocsumSockPeg, g3stamediaTretrieve=g3stamediaTretrieve, g3pktrunkwbsumPercentAtb=g3pktrunkwbsumPercentAtb, g3atmportpg3TGNumber181=g3atmportpg3TGNumber181, g3cartypeCab3CarAType=g3cartypeCab3CarAType, g3ipnetregionRSVPRefresh=g3ipnetregionRSVPRefresh, g3atmpncPncE164B=g3atmpncPncE164B, g3healthCab31to4428=g3healthCab31to4428, g3principalCovPath7=g3principalCovPath7, g3nodenameIP3=g3nodenameIP3, g3tonerecYear=g3tonerecYear, g3ipinterfaceNodeName69=g3ipinterfaceNodeName69, g3ipserverSecCntlState=g3ipserverSecCntlState, definity_ip600=definity_ip600, g3pktrunksumTintvl=g3pktrunksumTintvl, g3alarmsAlarmType=g3alarmsAlarmType, g3stamediaGatewayStatus45=g3stamediaGatewayStatus45, g3atmportpg1TGNumber10=g3atmportpg1TGNumber10, g3trunksumQueSiz=g3trunksumQueSiz, g3ipinterfaceSlot52=g3ipinterfaceSlot52, g3annintegTdelay=g3annintegTdelay, g3ds1cfgCsuMod=g3ds1cfgCsuMod, g3atmportpg1TGNumber87=g3atmportpg1TGNumber87, g3deftimeSecond=g3deftimeSecond, g3ipintlistTable=g3ipintlistTable, g3ipinterfaceSlot65=g3ipinterfaceSlot65, g3callratedataBsyIntSc=g3callratedataBsyIntSc, g3pkloadtanTretrieve=g3pkloadtanTretrieve, g3rpatcfgPattern5=g3rpatcfgPattern5, g3esparmsNetCommunity44=g3esparmsNetCommunity44, g3atmportpg2TGNumber130=g3atmportpg2TGNumber130, g3filterFilterNumber=g3filterFilterNumber, g3ipinterfaceNodeName63=g3ipinterfaceNodeName63, g3atmportpg3TGNumber225=g3atmportpg3TGNumber225, g3ipinterfaceNodeName44=g3ipinterfaceNodeName44, g3pkloadintIntInterPNUse=g3pkloadintIntInterPNUse, g3healthStaticOcc=g3healthStaticOcc, g3loadintEntry=g3loadintEntry, g3statregionBWUsedTx=g3statregionBWUsedTx, g3trunkwbsumHour=g3trunkwbsumHour, g3ipdspsumMonth=g3ipdspsumMonth, g3connectAlarmForward=g3connectAlarmForward, g3atmportpg2SGNumber100=g3atmportpg2SGNumber100, g3regipstatTretrieve=g3regipstatTretrieve, g3healthCab1to151=g3healthCab1to151, g3atmportpg3TGNumber203=g3atmportpg3TGNumber203, g3loadtotalTage=g3loadtotalTage, g3pkloadincIncOutgoingPeg=g3pkloadincIncOutgoingPeg, g3eventhourLastHour=g3eventhourLastHour, g3atmpncPncDCIB=g3atmpncPncDCIB, g3esparmsNetCommunity16=g3esparmsNetCommunity16, g3healthCab16to3027=g3healthCab16to3027, g3timedateMinute=g3timedateMinute, definity=definity, g3atmportpg2SGNumber159=g3atmportpg2SGNumber159, g3trunkoutTable=g3trunkoutTable, g3siggroupIntfNum5=g3siggroupIntfNum5, g3esparmsAutoReturn=g3esparmsAutoReturn, g3restartEntry=g3restartEntry, g3attdposTimeAvail=g3attdposTimeAvail, g3loadtanTintvl=g3loadtanTintvl, g3annallQueueDrops=g3annallQueueDrops, g3callratedataBsyIntMnToday=g3callratedataBsyIntMnToday, g3atmportpg3TGNumber239=g3atmportpg3TGNumber239, g3statmedproNodeName=g3statmedproNodeName, g3trunklightTrunkGroup=g3trunklightTrunkGroup, g3clanetherTable=g3clanetherTable, g3eventhourLastDay=g3eventhourLastDay, g3trunkmemType=g3trunkmemType, g3atmportpg2SGNumber173=g3atmportpg2SGNumber173, g3statsta=g3statsta, g3healthPncStat1to152=g3healthPncStat1to152, g3pkloadtotalEntry=g3pkloadtotalEntry, g3datamstaEntry=g3datamstaEntry, g3tonerecCCTTRPkOffPN=g3tonerecCCTTRPkOffPN, g3bulletinDate19=g3bulletinDate19, g3cabinetType=g3cabinetType, g3clanpppChapFailTot=g3clanpppChapFailTot, g3vintageTretrieve=g3vintageTretrieve, g3agentSnmpPolling=g3agentSnmpPolling, g3callratetotalMeasHour2=g3callratetotalMeasHour2, g3ipunregStatPort=g3ipunregStatPort, g3clanetherKey=g3clanetherKey, g3tonerecsumCCCPTRPReq=g3tonerecsumCCCPTRPReq, g3covpath=g3covpath, g3healthPncStat16to3020=g3healthPncStat16to3020, g3stationcfgTintvl=g3stationcfgTintvl, g3ipinterfaceNodeName33=g3ipinterfaceNodeName33, g3bulletinMessage48=g3bulletinMessage48, g3callratetotalBsyIntHrYesterday=g3callratetotalBsyIntHrYesterday, g3vintageOfferCategory=g3vintageOfferCategory, g3esmsumMeasHour=g3esmsumMeasHour, g3atmportpg1TGNumber85=g3atmportpg1TGNumber85, g3stamediaGatewayStatus31=g3stamediaGatewayStatus31, g3atmportpg3SGNumber236=g3atmportpg3SGNumber236, g3healthPncStat1to151=g3healthPncStat1to151, g3ipserverPrimIP4=g3ipserverPrimIP4, g3tonerecGPTDPnReq=g3tonerecGPTDPnReq, g3callratevoiceTdelay=g3callratevoiceTdelay, g3statlinkDOLANSessions=g3statlinkDOLANSessions, g3pkannallMonth=g3pkannallMonth, g3esmainSystemPref=g3esmainSystemPref, g3gatewaySiteData1=g3gatewaySiteData1, g3alarmsDayRslvd=g3alarmsDayRslvd, g3platcmdsDate=g3platcmdsDate, g3callratevoiceRunYear=g3callratevoiceRunYear, g3esparmsNetCommunity28=g3esparmsNetCommunity28, g3vintageIPAddress4=g3vintageIPAddress4, g3configPort1=g3configPort1, g3atmpncPncDCIA=g3atmpncPncDCIA, g3pktonerecCCCPTRPkOffPN=g3pktonerecCCCPTRPkOffPN, g3bulletinMessage57=g3bulletinMessage57, g3gatewayIdentifier=g3gatewayIdentifier, g3pksnblockUsage=g3pksnblockUsage, g3pkclansocsum=g3pkclansocsum, g3pkvoicesumTcount=g3pkvoicesumTcount, g3principalTcount=g3principalTcount, g3healthPncStat1to1513=g3healthPncStat1to1513, g3routepatternTage=g3routepatternTage, g3atmportpg2TGNumber141=g3atmportpg2TGNumber141, g3pkannallMPortPlay=g3pkannallMPortPlay, g3stamediaGatewayStatus37=g3stamediaGatewayStatus37, g3pkannintegName=g3pkannintegName, g3statmedproDupAlarmMin=g3statmedproDupAlarmMin, g3ipinterfaceNodeName39=g3ipinterfaceNodeName39, g3ipintlistTretrieve=g3ipintlistTretrieve, g3stamediaGatewayStatus30=g3stamediaGatewayStatus30, g3pkcovpathCallsOffCA=g3pkcovpathCallsOffCA, g3esparmsNetCommunity10=g3esparmsNetCommunity10, g3trapToMinute=g3trapToMinute, g3servalmEventID=g3servalmEventID, g3pnblockTcount=g3pnblockTcount, g3snblockSnPeg=g3snblockSnPeg, g3fiberlinkTcount=g3fiberlinkTcount, g3ipinterfaceSlot4=g3ipinterfaceSlot4, g3trunkcfgTage=g3trunkcfgTage, g3atmportpg1SGNumber28=g3atmportpg1SGNumber28, g3pkloadtanTable=g3pkloadtanTable, g3annintegMaxCall=g3annintegMaxCall, g3trapExtension=g3trapExtension, g3clansocsumHour=g3clansocsumHour, g3healthPncStat16to3026=g3healthPncStat16to3026, g3cbctrunkMaxChan=g3cbctrunkMaxChan, g3trunkwbsumIncSeize=g3trunkwbsumIncSeize, g3atmportpg1SGNumber36=g3atmportpg1SGNumber36, g3vintagePbxID=g3vintagePbxID, g3callratetotalBsyIntScYesterday=g3callratetotalBsyIntScYesterday, g3atmportpg1TGNumber50=g3atmportpg1TGNumber50, g3atmportpg2TGNumber124=g3atmportpg2TGNumber124, g3clientDescription=g3clientDescription, g3cabinetCarBPNN=g3cabinetCarBPNN, g3timedateDayOfWeek=g3timedateDayOfWeek, g3alarmsHourRslvd=g3alarmsHourRslvd, g3atmportpg3TGNumber200=g3atmportpg3TGNumber200, g3healthWarning=g3healthWarning, g3pkloadtanTanOutgoingPeg=g3pkloadtanTanOutgoingPeg, g3pkhuntTintvl=g3pkhuntTintvl, g3bulletinDate51=g3bulletinDate51, g3atmlatencyATMCount1A=g3atmlatencyATMCount1A, g3ipinterfaceSlot69=g3ipinterfaceSlot69, g3callratemediaBsyIntMnToday=g3callratemediaBsyIntMnToday, g3attdposPkTimeAvail=g3attdposPkTimeAvail, g3atmlatencyTdelay=g3atmlatencyTdelay, g3atmportpg1TGNumber37=g3atmportpg1TGNumber37, g3gatewayFWVintage=g3gatewayFWVintage, g3trunkoutEntry=g3trunkoutEntry, g3healthTage=g3healthTage, g3esparmsTintvl=g3esparmsTintvl, g3esparmsNetCommunity58=g3esparmsNetCommunity58, g3esmainTintvl=g3esmainTintvl, g3ipdspsumDenied=g3ipdspsumDenied, g3ipinterface=g3ipinterface, g3configPort22=g3configPort22, g3atmportpg2TGNumber159=g3atmportpg2TGNumber159, g3atmportpg1SGNumber49=g3atmportpg1SGNumber49, g3commlinkTdelay=g3commlinkTdelay, g3cbctrunkTotUsage=g3cbctrunkTotUsage, g3loadtanYear=g3loadtanYear, g3tonerecsumCCMFCRTDeny=g3tonerecsumCCMFCRTDeny, g3statlinkTcount=g3statlinkTcount, g3atmportpg3TGNumber227=g3atmportpg3TGNumber227, g3pkclansocsumEntry=g3pkclansocsumEntry, g3stamediaGatewayStatus61=g3stamediaGatewayStatus61, g3pktrunkoutTcount=g3pktrunkoutTcount, g3callratemediaTintvl=g3callratemediaTintvl, g3statregionDestRegion=g3statregionDestRegion, g3bulletinDate31=g3bulletinDate31, g3atmportpg1SGNumber13=g3atmportpg1SGNumber13, g3covpathCallsOffCB=g3covpathCallsOffCB, g3pkloadtanTintvl=g3pkloadtanTintvl, g3covpathTretrieve=g3covpathTretrieve, g3trapCategory=g3trapCategory)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3atmportpg2TGNumber109=g3atmportpg2TGNumber109, g3atmportpg3SGNumber240=g3atmportpg3SGNumber240, g3tonerecsumRunDay=g3tonerecsumRunDay, g3filterExtension=g3filterExtension, g3ipinterfaceSlot34=g3ipinterfaceSlot34, g3filterBoardNumber=g3filterBoardNumber, g3mmisumTotalUsage=g3mmisumTotalUsage, g3fiberlinkE2Type=g3fiberlinkE2Type, g3ipinterfaceNodeName5=g3ipinterfaceNodeName5, g3ipinterfaceNodeName28=g3ipinterfaceNodeName28, g3stamgannTage=g3stamgannTage, g3voicesumH320Usage=g3voicesumH320Usage, g3atmportpg1SGNumber65=g3atmportpg1SGNumber65, g3statregionBWUsedRx=g3statregionBWUsedRx, g3trunksumTrunkGroup=g3trunksumTrunkGroup, g3atmportpg1SGNumber53=g3atmportpg1SGNumber53, g3cabinetCarDPNN=g3cabinetCarDPNN, g3configPort3=g3configPort3, g3pktrunksumEntry=g3pktrunksumEntry, g3pnblockTintvl=g3pnblockTintvl, g3callratevoiceBsyIntHr=g3callratevoiceBsyIntHr, g3atmportpg1TGNumber73=g3atmportpg1TGNumber73, g3mediacfgTintvl=g3mediacfgTintvl, g3atmportpg1TGNumber68=g3atmportpg1TGNumber68, g3pkloadtotalPNNumber=g3pkloadtotalPNNumber, g3attdgrpCallsHeld=g3attdgrpCallsHeld, g3ipinterfaceNodeName76=g3ipinterfaceNodeName76, g3bulletinMessage11=g3bulletinMessage11, g3callratemediaMeasHour=g3callratemediaMeasHour, g3voicesumDay=g3voicesumDay, g3healthPncStat16to3025=g3healthPncStat16to3025, g3statstaSwitchIPAddr=g3statstaSwitchIPAddr, g3callratemediaBsyIntHrToday2=g3callratemediaBsyIntHrToday2, g3ipinterfaceSlot2=g3ipinterfaceSlot2, g3fiberlinkTable=g3fiberlinkTable, g3atmportpg1TGNumber33=g3atmportpg1TGNumber33, g3atmportpg3SGNumber202=g3atmportpg3SGNumber202, g3tonerecCCMFCRPkAlloc=g3tonerecCCMFCRPkAlloc, g3pkvoicesumAvailableUsage=g3pkvoicesumAvailableUsage, g3platcmdsSeqNumber=g3platcmdsSeqNumber, g3atmportpg1SGNumber8=g3atmportpg1SGNumber8, g3busytrkUDateStr=g3busytrkUDateStr, g3cabinetCarBType=g3cabinetCarBType, g3datamstaConnPort9=g3datamstaConnPort9, g3clansocsumYear=g3clansocsumYear, g3mmisumTcount=g3mmisumTcount, g3atmportpg3SGNumber206=g3atmportpg3SGNumber206, g3clanpppCrcChkDelta=g3clanpppCrcChkDelta, g3huntYear=g3huntYear, g3atmportpg1TGNumber59=g3atmportpg1TGNumber59, g3attdposDay=g3attdposDay, g3ipserverTdelay=g3ipserverTdelay, g3clansocsumRegion=g3clansocsumRegion, g3routepatternTretrieve=g3routepatternTretrieve, g3stamediaGatewayStatus27=g3stamediaGatewayStatus27, g3covpathTdelay=g3covpathTdelay, g3bulletinMessage31=g3bulletinMessage31, g3pkesmsum=g3pkesmsum, g3rpatcfgPattern11=g3rpatcfgPattern11, g3ipinterfaceSlot64=g3ipinterfaceSlot64, g3callratevoiceBsyCalCmpl=g3callratevoiceBsyCalCmpl, g3healthCab1to1515=g3healthCab1to1515, g3atmlatencySetup1B=g3atmlatencySetup1B, g3voicesumVoiceAllocation=g3voicesumVoiceAllocation, g3ipcodecsumG723OutRegion=g3ipcodecsumG723OutRegion, g3loadtotalEntry=g3loadtotalEntry, g3pktonerecMonth=g3pktonerecMonth, g3configPort21=g3configPort21, g3healthPncStat1to156=g3healthPncStat1to156, g3atmportpg3SGNumber183=g3atmportpg3SGNumber183, g3ipsignalTcount=g3ipsignalTcount, g3secviolateViolateBC=g3secviolateViolateBC, g3pkvoicesumOutofService=g3pkvoicesumOutofService, g3eventdayEventData2=g3eventdayEventData2, g3rpatcfgPattern6=g3rpatcfgPattern6, g3platcmdsTime=g3platcmdsTime, g3attdgrpTimeHeld=g3attdgrpTimeHeld, g3pktonerecCCTTRPkOffPN=g3pktonerecCCTTRPkOffPN, g3loadtotalHour=g3loadtotalHour, g3pkvoicesumPercentBlock=g3pkvoicesumPercentBlock, g3vintageOSSNumber1=g3vintageOSSNumber1, g3connectTimeUnused=g3connectTimeUnused, g3callratevoiceNumCallsYesterday2=g3callratevoiceNumCallsYesterday2, g3atmportpg3TGNumber221=g3atmportpg3TGNumber221, g3ipinterfaceNodeName70=g3ipinterfaceNodeName70, g3pkipsignalMeasHour=g3pkipsignalMeasHour, g3principalCovPath4=g3principalCovPath4, g3alarmsOnBrd=g3alarmsOnBrd, g3siggroupBoard5=g3siggroupBoard5, g3trunkcfgCode=g3trunkcfgCode, g3pktonerecGPTDPnAlloc=g3pktonerecGPTDPnAlloc, g3annallTdelay=g3annallTdelay, g3annallTage=g3annallTage, g3pkcovpathPoint4Ans=g3pkcovpathPoint4Ans, g3datamstaConnPort6=g3datamstaConnPort6, g3ipcodecsumG723Usage=g3ipcodecsumG723Usage, g3ipinterfaceSlot36=g3ipinterfaceSlot36, g3rpatQueueOvflo=g3rpatQueueOvflo, g3esmsumEntry=g3esmsumEntry, g3atmportpg3LTGNumber2=g3atmportpg3LTGNumber2, g3atmportpg2TGNumber160=g3atmportpg2TGNumber160, g3healthCab31to4418=g3healthCab31to4418, g3atmportpg2TGNumber145=g3atmportpg2TGNumber145, g3atmportpg3TGNumber189=g3atmportpg3TGNumber189, g3ipinterfaceSlot49=g3ipinterfaceSlot49, g3cabinetSREPN=g3cabinetSREPN, g3pkannintegBoard=g3pkannintegBoard, g3pkcovpathPoint1Ans=g3pkcovpathPoint1Ans, g3mediacfgTdelay=g3mediacfgTdelay, g3extdevTable=g3extdevTable, g3rpatcfgPattern10=g3rpatcfgPattern10, g3ipcodecsumDSPRecs=g3ipcodecsumDSPRecs, g3pkclansocsumTretrieve=g3pkclansocsumTretrieve, g3esparmsNetCommunity6=g3esparmsNetCommunity6, g3huntDay=g3huntDay, g3commlinkTintvl=g3commlinkTintvl, g3attdgrpTimeAvail=g3attdgrpTimeAvail, g3rpatcfgPattern7=g3rpatcfgPattern7, g3esparmsNetCommunity25=g3esparmsNetCommunity25, g3atmportpg3TGNumber240=g3atmportpg3TGNumber240, g3atmlatencyTage=g3atmlatencyTage, g3ipsignalYear=g3ipsignalYear, g3ds1cfgBoardNum=g3ds1cfgBoardNum, g3ipinterfaceNodeName29=g3ipinterfaceNodeName29, g3statmedproDSPChanStatus3=g3statmedproDSPChanStatus3, g3loadtanPNNumber=g3loadtanPNNumber, g3stationcfgCode=g3stationcfgCode, g3pkloadoutDay=g3pkloadoutDay, g3ipcodecsumTable=g3ipcodecsumTable, g3atmportpg1SGNumber11=g3atmportpg1SGNumber11, g3esserversTcount=g3esserversTcount, g3callratemediaMeasHour5=g3callratemediaMeasHour5, g3atmportpg2TGNumber104=g3atmportpg2TGNumber104, g3alarmsAck=g3alarmsAck, g3pkloadincIncIntraPNPeg=g3pkloadincIncIntraPNPeg, g3statstaSACactive=g3statstaSACactive, g3trapToMonth=g3trapToMonth, g3atmportpg1Tdelay=g3atmportpg1Tdelay, g3atmportpg1TGNumber22=g3atmportpg1TGNumber22, g3pkvoicesumEntry=g3pkvoicesumEntry, g3healthPncStat16to3021=g3healthPncStat16to3021, g3atmportpg3SGNumber230=g3atmportpg3SGNumber230, g3bulletinDate2=g3bulletinDate2, g3gatewayG350ModTypeV5=g3gatewayG350ModTypeV5, g3pktonerecPNNumber=g3pktonerecPNNumber, g3extdevEntry=g3extdevEntry, g3loadoutTretrieve=g3loadoutTretrieve, g3trapFilterNumber=g3trapFilterNumber, g3secviolateTtlValidAC=g3secviolateTtlValidAC, g3trunkcfgEntry=g3trunkcfgEntry, g3clansocsumEntry=g3clansocsumEntry, g3attdposLastHour=g3attdposLastHour, g3vintageLocalNodeNbr=g3vintageLocalNodeNbr, g3atmportpg3SGNumber237=g3atmportpg3SGNumber237, g3esmsumAvailablePorts=g3esmsumAvailablePorts, g3pnchealthPncASNIntrIdx=g3pnchealthPncASNIntrIdx, g3atmcfgTcount=g3atmcfgTcount, g3pnblockPNlinkBlockage=g3pnblockPNlinkBlockage, g3cbctrunkMinChan=g3cbctrunkMinChan, g3stamediaGatewayStatus60=g3stamediaGatewayStatus60, g3esserversServerBIP3=g3esserversServerBIP3, g3atmportpg1TGNumber89=g3atmportpg1TGNumber89, g3ipregionTage=g3ipregionTage, g3healthSysMgmtOcc=g3healthSysMgmtOcc, g3callratedataBsyIntTodaySc=g3callratedataBsyIntTodaySc, g3trunkgrpUsageAlloc=g3trunkgrpUsageAlloc, g3siggroupIntfNum15=g3siggroupIntfNum15, g3atmportpg1TGNumber21=g3atmportpg1TGNumber21, g3pnblockTdelay=g3pnblockTdelay, g3atmportpg2SGNumber158=g3atmportpg2SGNumber158, g3occsumStatOcc=g3occsumStatOcc, g3pnblockPNlinkPeak=g3pnblockPNlinkPeak, g3stamediaGatewayStatus67=g3stamediaGatewayStatus67, g3statmedproDSPChanStatus8=g3statmedproDSPChanStatus8, g3datamsta=g3datamsta, g3atmportpg1SGNumber60=g3atmportpg1SGNumber60, g3atmportpg1SGNumber78=g3atmportpg1SGNumber78, g3pkipsignalHourPktsLostPct=g3pkipsignalHourPktsLostPct, g3atmportpg1TGNumber5=g3atmportpg1TGNumber5, g3pktonerecGPTDTotOffPN=g3pktonerecGPTDTotOffPN, g3deftimeMonth=g3deftimeMonth, g3principalCallsCAC=g3principalCallsCAC, g3pkrpatIndex=g3pkrpatIndex, g3ipunregTintvl=g3ipunregTintvl, g3pkpnblockPNlinkPeg=g3pkpnblockPNlinkPeg, g3ipdspsumMeasHour=g3ipdspsumMeasHour, g3pkipdspsumDenied=g3pkipdspsumDenied, g3pkesmsumPercentAPB=g3pkesmsumPercentAPB, g3ipinterfaceSlot58=g3ipinterfaceSlot58, g3atmportpg1SGNumber59=g3atmportpg1SGNumber59, g3ipinterfaceSlot48=g3ipinterfaceSlot48, g3atmportpg2SGNumber151=g3atmportpg2SGNumber151, g3atmtrunkName=g3atmtrunkName, g3atmportpg1TGNumber56=g3atmportpg1TGNumber56, g3errorsEntry=g3errorsEntry, g3siggroupBoard7=g3siggroupBoard7, g3callratedataNumCallsToday3=g3callratedataNumCallsToday3, g3atmportpg3TGNumber201=g3atmportpg3TGNumber201, g3bulletinMessage12=g3bulletinMessage12, g3pkpnblockPNlinkUsage=g3pkpnblockPNlinkUsage, g3pkloadtotalDay=g3pkloadtotalDay, g3atmportpg2SGNumber110=g3atmportpg2SGNumber110, g3pkloadintMonth=g3pkloadintMonth, g3atmportpg1SGNumber3=g3atmportpg1SGNumber3, g3tonerecDTMFPkOffPN=g3tonerecDTMFPkOffPN, g3pktonerecsumDTMFPReq=g3pktonerecsumDTMFPReq, g3atmportpg3TGNumber192=g3atmportpg3TGNumber192, g3ipinterfaceSlot76=g3ipinterfaceSlot76, g3ds1Tdelay=g3ds1Tdelay, g3stamediaGatewayStatus58=g3stamediaGatewayStatus58, g3atmportpg1TGNumber30=g3atmportpg1TGNumber30, g3tonerecsumGPTDHour=g3tonerecsumGPTDHour, g3pkclansocsumTable=g3pkclansocsumTable, g3covpathPoint6Ans=g3covpathPoint6Ans, g3ipsignalTintvl=g3ipsignalTintvl, g3loadtotalTretrieve=g3loadtotalTretrieve, g3rpatcfgPattern19=g3rpatcfgPattern19, g3rpatTage=g3rpatTage, g3cbctrunkOutBlk=g3cbctrunkOutBlk, crossfire_board=crossfire_board, g3routepattern=g3routepattern, g3ds1cfgTage=g3ds1cfgTage, g3esserversServerBId=g3esserversServerBId, g3attdgrp=g3attdgrp, g3trunkmemPort=g3trunkmemPort, g3pkipcodecsumTdelay=g3pkipcodecsumTdelay, g3agentPrim2IP=g3agentPrim2IP, g3eventdayFirstMinute=g3eventdayFirstMinute, g3pkesmsumYear=g3pkesmsumYear, g3pkatmlatencyATMSetup1A=g3pkatmlatencyATMSetup1A, g3agentDomainName=g3agentDomainName, g3pkclansocsumHour=g3pkclansocsumHour, g3ipserver=g3ipserver, g3loadintTdelay=g3loadintTdelay, g3atmportpg3SGNumber208=g3atmportpg3SGNumber208, g3atmportpg3TGNumber244=g3atmportpg3TGNumber244, g3pkipcodecsumRegion=g3pkipcodecsumRegion, g3ipregionEntry=g3ipregionEntry, g3clansocsumSockusage=g3clansocsumSockusage, g3atmportpg2SGNumber111=g3atmportpg2SGNumber111, g3cbctrunkPlan4=g3cbctrunkPlan4, g3stamgannTdelay=g3stamgannTdelay, g3occsum=g3occsum, mibs=mibs, g3atmportpg3LSGNumber3=g3atmportpg3LSGNumber3, g3callratetotalBsyIntHr=g3callratetotalBsyIntHr, g3attdgrpCallsHAbd=g3attdgrpCallsHAbd, g3atmportpg3TGNumber198=g3atmportpg3TGNumber198, g3attdgrpTimeAbnd=g3attdgrpTimeAbnd, g3tonerecsumDTMFHour=g3tonerecsumDTMFHour, g3tonerecsumDTMFPDeny=g3tonerecsumDTMFPDeny, g3stamediaGatewayStatus44=g3stamediaGatewayStatus44, g3stationTable=g3stationTable, g3pkloadintDay=g3pkloadintDay)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3pkatmlatencyHour=g3pkatmlatencyHour, g3voicesumMeasHour=g3voicesumMeasHour, g3eventhourLastMonth=g3eventhourLastMonth, g3timedateLastError3=g3timedateLastError3, g3atmcfgName=g3atmcfgName, g3principalCallsCSAC=g3principalCallsCSAC, g3atmportpg3TGNumber183=g3atmportpg3TGNumber183, g3pktrunkwbsumOutSrv=g3pktrunkwbsumOutSrv, g3atmportpg1TGNumber36=g3atmportpg1TGNumber36, g3clientTableIndex=g3clientTableIndex, g3annintegMaxPorts=g3annintegMaxPorts, g3healthTdelay=g3healthTdelay, g3callratevoiceBsyIntHrToday=g3callratevoiceBsyIntHrToday, g3healthActivePNC=g3healthActivePNC, g3configPort4=g3configPort4, g3annallTcount=g3annallTcount, g3msgalmEventID=g3msgalmEventID, g3voicesumTintvl=g3voicesumTintvl, g3agentRelease=g3agentRelease, g3atmportpg2TGNumber93=g3atmportpg2TGNumber93, g3ipsignalEntry=g3ipsignalEntry, g3atmportpg2SGNumber102=g3atmportpg2SGNumber102, g3pktrunksumTable=g3pktrunksumTable, g3atmportpg3TGNumber224=g3atmportpg3TGNumber224, g3pnblockDay=g3pnblockDay, g3pktonerecCCMFCRTotOffPN=g3pktonerecCCMFCRTotOffPN, g3agentSubmapType=g3agentSubmapType, g3esmsumTcount=g3esmsumTcount, g3pkrpat=g3pkrpat, g3pkhuntQueOvfl=g3pkhuntQueOvfl, g3healthCab31to4429=g3healthCab31to4429, g3callratesrvTretrieve=g3callratesrvTretrieve, g3esmsumOutofService=g3esmsumOutofService, g3pkloadinc=g3pkloadinc, g3pkipdspsumInRegion=g3pkipdspsumInRegion, g3esserversClusterId=g3esserversClusterId, g3pktonerecsumDTMFTReq=g3pktonerecsumDTMFTReq, g3atmportpg1SGNumber75=g3atmportpg1SGNumber75, g3atmportpg3SGNumber205=g3atmportpg3SGNumber205, g3atmportpg1TGNumber84=g3atmportpg1TGNumber84, g3rpatcfgPattern24=g3rpatcfgPattern24, g3ipinterfaceSlot28=g3ipinterfaceSlot28, g3gatewayG700ModTypeV9=g3gatewayG700ModTypeV9, g3stamediaGatewayStatus8=g3stamediaGatewayStatus8, g3bulletinDate1=g3bulletinDate1, g3pktrunkwbsumTretrieve=g3pktrunkwbsumTretrieve, g3statstaRingCutOff=g3statstaRingCutOff, g3cbctrunk=g3cbctrunk, g3dmoduleTable=g3dmoduleTable, g3atmportpg3Tage=g3atmportpg3Tage, g3pkpnblockMonth=g3pkpnblockMonth, g3stationExtension=g3stationExtension, g3statregionTable=g3statregionTable, g3callratedataBsyIntScYesterday=g3callratedataBsyIntScYesterday, g3siggroupIntfNum10=g3siggroupIntfNum10, g3atmlatencyPNDest1=g3atmlatencyPNDest1, g3stamediaGatewayStatus76=g3stamediaGatewayStatus76, g3pkhuntTretrieve=g3pkhuntTretrieve, g3commlinkLinkNumber=g3commlinkLinkNumber, g3pnblockPNlinkPeg=g3pnblockPNlinkPeg, g3annintegMaxCallPeriod=g3annintegMaxCallPeriod, g3tonerecsumDTMFPReq=g3tonerecsumDTMFPReq, g3gatewayTable=g3gatewayTable, g3tonerecsumCCTTRPDeny=g3tonerecsumCCTTRPDeny, g3pnchealthPncBMajor=g3pnchealthPncBMajor, g3stamgannTcount=g3stamgannTcount, g3atmportpg2TGNumber166=g3atmportpg2TGNumber166, g3pktrunkoutTable=g3pktrunkoutTable, g3pktonerecEntry=g3pktonerecEntry, g3pktonerecsumCCTTRTReq=g3pktonerecsumCCTTRTReq, g3pkloadtanYear=g3pkloadtanYear, g3mediacfgTage=g3mediacfgTage, g3pkloadintTable=g3pkloadintTable, g3callratesrvRunYear=g3callratesrvRunYear, g3esmsum=g3esmsum, g3ds1cfgTcount=g3ds1cfgTcount, g3healthPncStat1to1510=g3healthPncStat1to1510, g3clientDialString1=g3clientDialString1, g3secviolateAtdViolateAC=g3secviolateAtdViolateAC, g3atmportpg2SGNumber105=g3atmportpg2SGNumber105, g3ipinterfaceNodeName32=g3ipinterfaceNodeName32, g3attdgrpTimeTalk=g3attdgrpTimeTalk, g3covpathPoint4Aband=g3covpathPoint4Aband, g3esmsumTable=g3esmsumTable, avaya_s8300=avaya_s8300, g3atmportpg3SGNumber228=g3atmportpg3SGNumber228, g3trunkwbsumMonth=g3trunkwbsumMonth, g3ipinterfaceSlot78=g3ipinterfaceSlot78, g3callratesrvNumCallsToday2=g3callratesrvNumCallsToday2, g3atmportpg2TGNumber149=g3atmportpg2TGNumber149, g3snblockTdelay=g3snblockTdelay, g3annintegTintvl=g3annintegTintvl, g3ipserverTcount=g3ipserverTcount, g3ipserverPrimIP2=g3ipserverPrimIP2, g3lsplistIPAddr1=g3lsplistIPAddr1, g3atmpncPncE164A=g3atmpncPncE164A, g3errorsAlSt=g3errorsAlSt, g3pkcovpathPoint4Aband=g3pkcovpathPoint4Aband, g3atmportpg2TGNumber179=g3atmportpg2TGNumber179, g3siggroupBoard6=g3siggroupBoard6, g3huntlistTcount=g3huntlistTcount, g3trunkoutMonth=g3trunkoutMonth, g3ipevtIPEvent=g3ipevtIPEvent, g3atmcfgVintage=g3atmcfgVintage, g3atmpncPncHoDsp1A=g3atmpncPncHoDsp1A, g3stamediaGatewayStatus49=g3stamediaGatewayStatus49, g3callratesrvTintvl=g3callratesrvTintvl, g3configPort27=g3configPort27, g3loadoutTage=g3loadoutTage, g3atmportpg2SGNumber145=g3atmportpg2SGNumber145, g3pktrunkwbsumTrunkGroup=g3pktrunkwbsumTrunkGroup, g3esparmsNetCommunity40=g3esparmsNetCommunity40, g3alarmsTretrieve=g3alarmsTretrieve, g3clanetherDay=g3clanetherDay, g3ipregionTretrieve=g3ipregionTretrieve, g3esmsumTintvl=g3esmsumTintvl, g3esserversPlatformType=g3esserversPlatformType, g3ipinterfaceSlot43=g3ipinterfaceSlot43, g3atmportpg3SGNumber234=g3atmportpg3SGNumber234, g3stamediaGatewayStatus24=g3stamediaGatewayStatus24, g3pkprincipalTage=g3pkprincipalTage, g3ipinterfaceSlot30=g3ipinterfaceSlot30, g3busybrdMaintName=g3busybrdMaintName, g3huntlistEntry=g3huntlistEntry, g3esparmsNetCommunity26=g3esparmsNetCommunity26, g3rpatcfgTdelay=g3rpatcfgTdelay, g3callratevoiceMeasHour4=g3callratevoiceMeasHour4, g3vintageRemoteOffLimit=g3vintageRemoteOffLimit, g3trunkcfgTable=g3trunkcfgTable, g3ipinterfaceSlot26=g3ipinterfaceSlot26, g3callratemediaBsyIntScToday2=g3callratemediaBsyIntScToday2, g3eventhourTdelay=g3eventhourTdelay, g3busytrkAltName=g3busytrkAltName, g3atmportpg2TGNumber151=g3atmportpg2TGNumber151, g3siggroupIntfNum6=g3siggroupIntfNum6, g3pkpnblockHour=g3pkpnblockHour, g3ipinterfaceNodeName56=g3ipinterfaceNodeName56, g3cbctrunkQueueOvflw=g3cbctrunkQueueOvflw, g3gatewayEntry=g3gatewayEntry, g3ipcodecsumTcount=g3ipcodecsumTcount, g3eventhourEventCount=g3eventhourEventCount, g3loadoutDay=g3loadoutDay, g3atmportpg2TGNumber144=g3atmportpg2TGNumber144, g3attdgrpCallsAbnd=g3attdgrpCallsAbnd, g3statlinkTretrieve=g3statlinkTretrieve, g3atmportpg3TGNumber211=g3atmportpg3TGNumber211, g3statmedproDupPhysicalAddr=g3statmedproDupPhysicalAddr, g3statregionBWLimitValue=g3statregionBWLimitValue, g3huntTcount=g3huntTcount, g3pkhuntSpeedAns=g3pkhuntSpeedAns, g3ipinterfaceNodeName52=g3ipinterfaceNodeName52, g3callratemediaNumCallsToday=g3callratemediaNumCallsToday, g3atmportpg2SGNumber131=g3atmportpg2SGNumber131, g3tonerecsumCCMFCRHour=g3tonerecsumCCMFCRHour, g3pkannintegYear=g3pkannintegYear, g3stamediaGatewayStatus32=g3stamediaGatewayStatus32, g3clientSubmapName=g3clientSubmapName, g3pkipsignalMonth=g3pkipsignalMonth, g3attdposTage=g3attdposTage, g3configIndex=g3configIndex, g3annallMonth=g3annallMonth, g3covpathPoint4Ans=g3covpathPoint4Ans, g3servalmTable=g3servalmTable, g3loadintYear=g3loadintYear, g3trkgrpmemTdelay=g3trkgrpmemTdelay, g3atmlatencyATMSetup1B=g3atmlatencyATMSetup1B, g3secviolateInvalidID=g3secviolateInvalidID, g3ipinterfaceSlot59=g3ipinterfaceSlot59, g3esparmsNetCommunity33=g3esparmsNetCommunity33, g3pktrunksumQueOvf=g3pktrunksumQueOvf, g3pkipdspsumTable=g3pkipdspsumTable, g3stamedlistEntry=g3stamedlistEntry, g3statlinkSysLinkNumber=g3statlinkSysLinkNumber, g3mgrecruleTcount=g3mgrecruleTcount, g3stamediaGatewayStatus4=g3stamediaGatewayStatus4, g3bulletinDate28=g3bulletinDate28, g3servalm=g3servalm, g3pnchealthPncAWarning=g3pnchealthPncAWarning, g3routepatternTcount=g3routepatternTcount, g3statmedproTretrieve=g3statmedproTretrieve, g3callratesrvMeasHour4=g3callratesrvMeasHour4, g3atmtrunkSynch=g3atmtrunkSynch, g3pkrpatCallsOffered=g3pkrpatCallsOffered, g3timedateLastError1=g3timedateLastError1, g3pktrunkoutTintvl=g3pktrunkoutTintvl, g3pkipcodecsumDay=g3pkipcodecsumDay, g3pkipsignalHourPacketsSent=g3pkipsignalHourPacketsSent, g3pkipsignalWorstInterval=g3pkipsignalWorstInterval, g3atmportpg2SGNumber132=g3atmportpg2SGNumber132, g3trunkgrpQsigValueAdd=g3trunkgrpQsigValueAdd, g3cbctrunkTdelay=g3cbctrunkTdelay, g3ipunregStatExtn=g3ipunregStatExtn, g3siggroupIntfNum1=g3siggroupIntfNum1, g3ipintlistTcount=g3ipintlistTcount, g3callratedataBsyIntScYesteday2=g3callratedataBsyIntScYesteday2, g3cbctrunkDur6=g3cbctrunkDur6, g3vintagePortNetSupport=g3vintagePortNetSupport, g3healthPncStat1to1511=g3healthPncStat1to1511, g3atmportpg2SGNumber166=g3atmportpg2SGNumber166, g3annallMaxPorts=g3annallMaxPorts, g3atmportpg2TGNumber168=g3atmportpg2TGNumber168, g3rpatcfgPattern2=g3rpatcfgPattern2, g3atmportpg2TGNumber139=g3atmportpg2TGNumber139, g3stamediaTdelay=g3stamediaTdelay, g3ipinterfaceSlot73=g3ipinterfaceSlot73, g3callratedataBsyIntScToday=g3callratedataBsyIntScToday, g3pktonerecsumCCMFCRHour=g3pktonerecsumCCMFCRHour, g3alarmsMonthRslvd=g3alarmsMonthRslvd, g3pkipcodecsumG723OutRegion=g3pkipcodecsumG723OutRegion, g3ipnetregionTage=g3ipnetregionTage, g3esparmsNetCommunity43=g3esparmsNetCommunity43, g3atmportpg1SGNumber10=g3atmportpg1SGNumber10, g3pkprincipalCovPath8=g3pkprincipalCovPath8, g3config=g3config, g3stamgannTretrieve=g3stamgannTretrieve, g3atmportpg1SGNumber67=g3atmportpg1SGNumber67, g3callratedataTretrieve=g3callratedataTretrieve, g3secviolateSecViolate=g3secviolateSecViolate, g3ds1Tretrieve=g3ds1Tretrieve, g3pktrunklightMonth=g3pktrunklightMonth, g3ds1Tage=g3ds1Tage, g3ipinterfaceSlot57=g3ipinterfaceSlot57, g3bulletinDate57=g3bulletinDate57, g3configPort26=g3configPort26, g3esparmsNetCommunity31=g3esparmsNetCommunity31, g3atmportpg2TGNumber103=g3atmportpg2TGNumber103, g3stamediaGatewayStatus47=g3stamediaGatewayStatus47, g3atmcfgBoardType=g3atmcfgBoardType, g3atmportpg3SGNumber222=g3atmportpg3SGNumber222, g3stationcfgTage=g3stationcfgTage, g3mgrecruleEntry=g3mgrecruleEntry, g3pkmmisumTage=g3pkmmisumTage, g3pkloadtanDay=g3pkloadtanDay, g3healthPncStat31to4418=g3healthPncStat31to4418, g3alarmsIndex=g3alarmsIndex, g3configPort13=g3configPort13, g3stamediaGatewayStatus72=g3stamediaGatewayStatus72, g3eventhourEntry=g3eventhourEntry, g3lsplistTdelay=g3lsplistTdelay, g3stamedlistGatewayStatus=g3stamedlistGatewayStatus, g3ipinterfaceNodeName53=g3ipinterfaceNodeName53, g3pksnblockTdelay=g3pksnblockTdelay, g3esparmsNetCommunity46=g3esparmsNetCommunity46, g3annallMaxCallers=g3annallMaxCallers, g3pkatmlatencyYear=g3pkatmlatencyYear, g3pkhuntTage=g3pkhuntTage, g3occsumRunHour=g3occsumRunHour, g3pkprincipalMeasHour=g3pkprincipalMeasHour, g3bulletinMessage26=g3bulletinMessage26, g3atmportpg3SGNumber219=g3atmportpg3SGNumber219, g3siggroupIntfNum14=g3siggroupIntfNum14, g3secviolateForceDsc=g3secviolateForceDsc, g3pkannintegQueueDrops=g3pkannintegQueueDrops, g3atmportpg2SGNumber162=g3atmportpg2SGNumber162)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3stamgannAnnActive=g3stamgannAnnActive, g3datamstaConnPort1=g3datamstaConnPort1, g3busytrkAction=g3busytrkAction, g3healthCab31to4423=g3healthCab31to4423, g3pktonerecsumCCTTRPReq=g3pktonerecsumCCTTRPReq, g3pkannintegMonth=g3pkannintegMonth, g3ipinterfaceSlot56=g3ipinterfaceSlot56, g3callratetotalBsyIntMn=g3callratetotalBsyIntMn, g3pktrunklightTage=g3pktrunklightTage, g3commlink=g3commlink, g3extdevID=g3extdevID, g3datamodTable=g3datamodTable, g3trunkcfgTdelay=g3trunkcfgTdelay, g3pkipcodecsumTintvl=g3pkipcodecsumTintvl, g3ipregionName=g3ipregionName, g3huntlistTable=g3huntlistTable, g3pkannallYear=g3pkannallYear, g3esparmsNetCommunity57=g3esparmsNetCommunity57, g3pktrunkwbsumIncSeize=g3pktrunkwbsumIncSeize, g3pkloadtanHour=g3pkloadtanHour, g3ipinterfaceNodeName10=g3ipinterfaceNodeName10, g3healthCab16to3028=g3healthCab16to3028, g3healthStnBusy=g3healthStnBusy, g3loadintTable=g3loadintTable, g3callratevoiceBsyIntScYesterday=g3callratevoiceBsyIntScYesterday, g3clanetherTage=g3clanetherTage, g3configTcount=g3configTcount, g3servalmLevel=g3servalmLevel, g3atmportpg1SGNumber89=g3atmportpg1SGNumber89, g3atmportpg1SGNumber52=g3atmportpg1SGNumber52, g3vintageAbbAlmRep1=g3vintageAbbAlmRep1, g3trunkstaServiceState=g3trunkstaServiceState, g3statstaConnPort2=g3statstaConnPort2, g3bulletinMessage47=g3bulletinMessage47, g3atmportpg2TGNumber98=g3atmportpg2TGNumber98, g3pktonerecsumRunMonth=g3pktonerecsumRunMonth, g3callratedataBsyIntMnYesterday2=g3callratedataBsyIntMnYesterday2, g3covpathCallsOffTotal=g3covpathCallsOffTotal, g3pkcovpathCallsOffAct=g3pkcovpathCallsOffAct, g3pkloadincTretrieve=g3pkloadincTretrieve, g3busyrlsPort=g3busyrlsPort, g3pkvoicesumTintvl=g3pkvoicesumTintvl, g3healthActiveSPE=g3healthActiveSPE, g3stamediaGatewayStatus17=g3stamediaGatewayStatus17, g3bulletinTage=g3bulletinTage, g3siggroupTcount=g3siggroupTcount, g3timedateLastError4=g3timedateLastError4, g3siggroupIntfNum13=g3siggroupIntfNum13, g3atmportpg1TGNumber1=g3atmportpg1TGNumber1, g3attdposCallsAns=g3attdposCallsAns, g3pkipcodecsumTcount=g3pkipcodecsumTcount, g3lsplist=g3lsplist, g3loadintTretrieve=g3loadintTretrieve, g3atmportpg2TGNumber171=g3atmportpg2TGNumber171, g3trunkcfgSuffix=g3trunkcfgSuffix, g3snblockDay=g3snblockDay, g3bulletinMessage39=g3bulletinMessage39, g3atmportpg1SGNumber66=g3atmportpg1SGNumber66, g3atmportpg2TGNumber97=g3atmportpg2TGNumber97, g3pkpnblockTable=g3pkpnblockTable, g3callratevoiceBsyIntHrToday2=g3callratevoiceBsyIntHrToday2, g3tonerecDTMFPkAlloc=g3tonerecDTMFPkAlloc, g3tonerecCCMFCRTotOffPN=g3tonerecCCMFCRTotOffPN, g3statmedproLinkCCL=g3statmedproLinkCCL, definity_proxy=definity_proxy, g3ds1cfgTintvl=g3ds1cfgTintvl, g3callratevoiceBsyCalCmplYesterday=g3callratevoiceBsyCalCmplYesterday, g3pkmmisumPercentAPB=g3pkmmisumPercentAPB, g3trunkoutTcount=g3trunkoutTcount, g3atmportpg2TGNumber152=g3atmportpg2TGNumber152, g3occsumOutAtt=g3occsumOutAtt, g3ipnetregionRSVPEnabled=g3ipnetregionRSVPEnabled, g3atmportpg2SGNumber152=g3atmportpg2SGNumber152, g3trunkgrpShortThreshold=g3trunkgrpShortThreshold, g3atmportpg2TGNumber161=g3atmportpg2TGNumber161, g3pktrunksumMeasHour=g3pktrunksumMeasHour, g3stamediaAlarmWarning=g3stamediaAlarmWarning, g3busytrk=g3busytrk, g3stamedlist=g3stamedlist, g3annintegDay=g3annintegDay, g3esserversTage=g3esserversTage, g3atmportpg1TGNumber55=g3atmportpg1TGNumber55, g3pktonerecsumETRTAvail=g3pktonerecsumETRTAvail, g3atmportpg2SGNumber136=g3atmportpg2SGNumber136, g3pktonerecCCTTRPnReq=g3pktonerecCCTTRPnReq, g3configTable=g3configTable, g3atmportpg2TGNumber100=g3atmportpg2TGNumber100, g3healthCab16to3030=g3healthCab16to3030, g3trunksumQueOvf=g3trunksumQueOvf, g3pkhuntDay=g3pkhuntDay, g3extdevAddress=g3extdevAddress, g3agentPrim1IP=g3agentPrim1IP, g3fiberlinkE2BDs1Board=g3fiberlinkE2BDs1Board, g3gatewayType=g3gatewayType, g3loadtanDay=g3loadtanDay, g3ipinterfaceSlot14=g3ipinterfaceSlot14, g3callratevoiceMeasHour3=g3callratevoiceMeasHour3, g3ipnetregionTretrieve=g3ipnetregionTretrieve, g3trapMediaGateway=g3trapMediaGateway, g3vintageVSPacketBus=g3vintageVSPacketBus, g3pkannintegDay=g3pkannintegDay, g3gatewayRegion=g3gatewayRegion, g3clansocsumPcttmASB=g3clansocsumPcttmASB, g3pkvoicesumH320Usage=g3pkvoicesumH320Usage, g3pktonerecsumCCCPTRTDeny=g3pktonerecsumCCCPTRTDeny, g3tonerecsumDTMFTReq=g3tonerecsumDTMFTReq, g3cartypeCab3CarDType=g3cartypeCab3CarDType, g3pkatmlatencyDay=g3pkatmlatencyDay, g3atmpncPncESIA=g3atmpncPncESIA, g3esserversServerAId=g3esserversServerAId, g3callratesrvBsyIntMnToday=g3callratesrvBsyIntMnToday, g3atmportpg2TGNumber132=g3atmportpg2TGNumber132, g3pnchealth=g3pnchealth, g3trunkwbsumMeasHour=g3trunkwbsumMeasHour, g3huntlistHGNumber=g3huntlistHGNumber, g3esparmsNetCommunity55=g3esparmsNetCommunity55, g3atmportpg2SGNumber169=g3atmportpg2SGNumber169, g3loadtanHour=g3loadtanHour, g3configTintvl=g3configTintvl, g3trunkwbsumTrunkGroup=g3trunkwbsumTrunkGroup, g3pkloadincIncIncomingPeg=g3pkloadincIncIncomingPeg, g3pkvoicesumHour=g3pkvoicesumHour, g3configBoardNum=g3configBoardNum, g3rpatTable=g3rpatTable, g3alarmsTintvl=g3alarmsTintvl, g3esmainServerBIP3=g3esmainServerBIP3, g3bulletinDate52=g3bulletinDate52, g3esmainEntry=g3esmainEntry, g3datamstaConnPort2=g3datamstaConnPort2, g3healthPncStat1to1515=g3healthPncStat1to1515, g3tonerecGPTDPnAlloc=g3tonerecGPTDPnAlloc, g3rpatTdelay=g3rpatTdelay, g3bulletinDate6=g3bulletinDate6, g3ipinterfaceSlot72=g3ipinterfaceSlot72, g3dmoduleType=g3dmoduleType, g3loadoutPNNumber=g3loadoutPNNumber, g3atmportpg1SGNumber71=g3atmportpg1SGNumber71, g3pkannallAnnNbr=g3pkannallAnnNbr, g3ipinterfaceSlot55=g3ipinterfaceSlot55, g3annallMPortPlay=g3annallMPortPlay, g3regipstatTage=g3regipstatTage, g3eventdayEventCount=g3eventdayEventCount, g3atmportpg3SGNumber217=g3atmportpg3SGNumber217, g3ipinterfaceNodeName11=g3ipinterfaceNodeName11, g3busytrkIndex=g3busytrkIndex, g3atmportpg3SGNumber201=g3atmportpg3SGNumber201, g3pkipdspsumTretrieve=g3pkipdspsumTretrieve, g3stamediaGatewayStatus3=g3stamediaGatewayStatus3, g3pktonerecsumCCMFCRTDeny=g3pktonerecsumCCMFCRTDeny, g3ipserverPortNetwork=g3ipserverPortNetwork, g3ipserverPrimIPPort=g3ipserverPrimIPPort, g3pkcovpathPoint5Aband=g3pkcovpathPoint5Aband, g3attdgrpRunHour=g3attdgrpRunHour, g3trunkwbsumOutSrv=g3trunkwbsumOutSrv, g3atmportpg2TGNumber180=g3atmportpg2TGNumber180, g3ipdspsumTdelay=g3ipdspsumTdelay, g3callratemediaRunDay=g3callratemediaRunDay, g3attdposPeakHour=g3attdposPeakHour, g3clanetherTretrieve=g3clanetherTretrieve, g3clanetherHour=g3clanetherHour, g3atmportpg2SGNumber150=g3atmportpg2SGNumber150, g3configPort32=g3configPort32, g3atmportpg1SGNumber85=g3atmportpg1SGNumber85, g3huntMonth=g3huntMonth, g3ipregionTintvl=g3ipregionTintvl, g3ipinterfaceNodeName18=g3ipinterfaceNodeName18, g3statmedproDupLinkPeer=g3statmedproDupLinkPeer, g3commlinkTcount=g3commlinkTcount, g3pkloadtanTanIntraPNPeg=g3pkloadtanTanIntraPNPeg, g3pkatmlatencyATMCount1A=g3pkatmlatencyATMCount1A, g3pktonerecsumCCMFCRTReq=g3pktonerecsumCCMFCRTReq, g3pkannallCallsQueued=g3pkannallCallsQueued, g3statlink=g3statlink, g3configPort2=g3configPort2, g3ipinterfaceSlot71=g3ipinterfaceSlot71, g3annallHour=g3annallHour, g3stamedlistTdelay=g3stamedlistTdelay, g3pktonerecMeasHour=g3pktonerecMeasHour, g3trunksumTotalSeize=g3trunksumTotalSeize, g3trunkwbsumEntry=g3trunkwbsumEntry, g3ipcodecsumG711Usage=g3ipcodecsumG711Usage, g3rpatcfgPattern22=g3rpatcfgPattern22, g3loadintIntInterPNPeg=g3loadintIntInterPNPeg, g3trap=g3trap, g3ipinterfaceNodeName12=g3ipinterfaceNodeName12, g3atmportpg2SGNumber154=g3atmportpg2SGNumber154, g3atmportpg1SGNumber61=g3atmportpg1SGNumber61, g3callratemediaBsyCalCmplYesterday2=g3callratemediaBsyCalCmplYesterday2, g3clanpppTime=g3clanpppTime, g3configPort6=g3configPort6, g3pkmmisumTable=g3pkmmisumTable, g3statmedproEnabled=g3statmedproEnabled, g3atmportpg2SGNumber165=g3atmportpg2SGNumber165, g3clansocsumTable=g3clansocsumTable, g3covpathCallsOffAct=g3covpathCallsOffAct, g3annintegTretrieve=g3annintegTretrieve, g3alarms=g3alarms, g3tonerecTage=g3tonerecTage, g3stamediaGatewayStatus10=g3stamediaGatewayStatus10, g3pktrunklight=g3pktrunklight, g3atmportpg3TGNumber237=g3atmportpg3TGNumber237, g3tonerecsumRunYear=g3tonerecsumRunYear, g3cabinetNum=g3cabinetNum, g3atmportpg1TGNumber48=g3atmportpg1TGNumber48, g3ds1cfgTable=g3ds1cfgTable, g3trunkstaConnPort3=g3trunkstaConnPort3, g3trunksumTintvl=g3trunksumTintvl, g3pkipsignalIntvlPacketsSent=g3pkipsignalIntvlPacketsSent, g3restartTintvl=g3restartTintvl, g3clanetherMonth=g3clanetherMonth, g3gatewayEncrypt=g3gatewayEncrypt, g3ipdspsumPctBlk=g3ipdspsumPctBlk, g3pkvoicesum=g3pkvoicesum, g3esparmsNetCommunity41=g3esparmsNetCommunity41, g3extdevTretrieve=g3extdevTretrieve, g3atmlatencyMeasHour1B=g3atmlatencyMeasHour1B, g3nodenameEntry=g3nodenameEntry, g3atmportpg1TGNumber83=g3atmportpg1TGNumber83, g3huntQueOvfl=g3huntQueOvfl, g3principalCallsOffTotal=g3principalCallsOffTotal, g3atmlatencyCount1A=g3atmlatencyCount1A, g3atmpncTdelay=g3atmpncTdelay, g3pkipdspsumHour=g3pkipdspsumHour, g3errorsAltName=g3errorsAltName, g3ipinterfaceSlot50=g3ipinterfaceSlot50, g3atmportpg1SGNumber40=g3atmportpg1SGNumber40, g3atmpncTage=g3atmpncTage, g3atmportpg1TGNumber63=g3atmportpg1TGNumber63, g3restartEscalated=g3restartEscalated, g3stamediaNbrLogins=g3stamediaNbrLogins, g3secviolateHour=g3secviolateHour, g3extdevPort=g3extdevPort, g3pkloadoutOutIncomingUse=g3pkloadoutOutIncomingUse, g3tonerecPNNumber=g3tonerecPNNumber, g3stamedlistTretrieve=g3stamedlistTretrieve, g3callratesrvBsyIntHrYesterday2=g3callratesrvBsyIntHrYesterday2, g3vintageIPAddress1=g3vintageIPAddress1, g3atmportpg1SGNumber50=g3atmportpg1SGNumber50, g3eventhourTretrieve=g3eventhourTretrieve, g3pkatmlatencyEntry=g3pkatmlatencyEntry, g3pnblockTable=g3pnblockTable, g3pkprincipalCovPath1=g3pkprincipalCovPath1, g3ipinterfaceSlot19=g3ipinterfaceSlot19, g3callratevoiceBsyIntMnToday=g3callratevoiceBsyIntMnToday, g3pktrunksumTretrieve=g3pktrunksumTretrieve, g3rpatcfgPattern15=g3rpatcfgPattern15, g3callratesrvBsyCalCmplYesterday2=g3callratesrvBsyCalCmplYesterday2, g3covpathCallsOffDA=g3covpathCallsOffDA, g3tonerecMonth=g3tonerecMonth, g3callratemediaBsyIntMn=g3callratemediaBsyIntMn, g3trunklightDay=g3trunklightDay, g3snblockMeasHour=g3snblockMeasHour, g3cabinetCarAPNN=g3cabinetCarAPNN, g3siggroupBoard20=g3siggroupBoard20)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3atmportpg2SGNumber106=g3atmportpg2SGNumber106, g3esmainServerAIP2=g3esmainServerAIP2, g3callratesrvNumCallsToday=g3callratesrvNumCallsToday, g3esparmsNetCommunity19=g3esparmsNetCommunity19, g3pnchealthIntchDisble=g3pnchealthIntchDisble, g3atmportpg2TGNumber173=g3atmportpg2TGNumber173, g3trunkwbsumTable=g3trunkwbsumTable, g3pkloadoutTintvl=g3pkloadoutTintvl, g3callratesrvBsyIntHrToday2=g3callratesrvBsyIntHrToday2, g3eventhourFirstMonth=g3eventhourFirstMonth, g3bulletinMessage37=g3bulletinMessage37, g3pkpnblockPNlinkPeak=g3pkpnblockPNlinkPeak, g3loadoutTintvl=g3loadoutTintvl, g3alarmsSvcState=g3alarmsSvcState, g3atmportpg3LSGNumber11=g3atmportpg3LSGNumber11, g3ds1=g3ds1, g3pkloadtanTanOutgoingUse=g3pkloadtanTanOutgoingUse, g3configPort18=g3configPort18, g3pkhuntEntry=g3pkhuntEntry, g3atmportpg3SGNumber186=g3atmportpg3SGNumber186, g3stamediaGatewayStatus51=g3stamediaGatewayStatus51, g3ipdspsumDSPRecs=g3ipdspsumDSPRecs, g3healthTrkBusy=g3healthTrkBusy, g3datamstaMaintBusy=g3datamstaMaintBusy, g3pkatmlatencySetup1A=g3pkatmlatencySetup1A, g3pkannallExtension=g3pkannallExtension, g3ipinterfaceSlot53=g3ipinterfaceSlot53, g3ipinterfaceNodeName49=g3ipinterfaceNodeName49, g3filterTrunkMember=g3filterTrunkMember, g3atmportpg1SGNumber15=g3atmportpg1SGNumber15, g3pktrunkoutTage=g3pktrunkoutTage, g3pkmmisum=g3pkmmisum, g3pkpnblockYear=g3pkpnblockYear, g3bulletinMessage27=g3bulletinMessage27, g3stamediaGatewayStatus50=g3stamediaGatewayStatus50, g3ipevtEntry=g3ipevtEntry, g3ipinterfaceSlot77=g3ipinterfaceSlot77, g3statmedproLinkPeer=g3statmedproLinkPeer, g3errorsRtperHr=g3errorsRtperHr, g3vintageIPAddress3=g3vintageIPAddress3, g3cartypeCab2CarBType=g3cartypeCab2CarBType, g3routepatternTGNumber14=g3routepatternTGNumber14, g3callratedataBsyIntHrYesterday2=g3callratedataBsyIntHrYesterday2, g3acaMonth=g3acaMonth, g3trunkmemGroup=g3trunkmemGroup, g3clanetherCrcChkTot=g3clanetherCrcChkTot, g3nodenameTable=g3nodenameTable, g3atmportpg1TGNumber75=g3atmportpg1TGNumber75, g3huntGroupSize=g3huntGroupSize, g3eventhourTcount=g3eventhourTcount, g3atmportpg2TGNumber112=g3atmportpg2TGNumber112, g3pktrunksumQueAbd=g3pktrunksumQueAbd, g3pkprincipalCovPath2=g3pkprincipalCovPath2, g3timedateLastError2=g3timedateLastError2, g3pnchealthPncAHealth=g3pnchealthPncAHealth, g3pkcovpathTage=g3pkcovpathTage, g3configSuffix=g3configSuffix, g3atmtrunkTage=g3atmtrunkTage, g3bulletinMessage13=g3bulletinMessage13, g3voicesumTotalDenials=g3voicesumTotalDenials, g3tonerecDTMFPnReq=g3tonerecDTMFPnReq, g3filterMaintenanceObject=g3filterMaintenanceObject, g3atmportpg3TGNumber234=g3atmportpg3TGNumber234, g3tonerecsumTage=g3tonerecsumTage, g3busyrls=g3busyrls, g3atmportpg1Tage=g3atmportpg1Tage, g3pnchealthTdelay=g3pnchealthTdelay, g3atmportpg1SGNumber54=g3atmportpg1SGNumber54, g3atmportpg2SGNumber139=g3atmportpg2SGNumber139, g3callratedataBsyCalCmplToday2=g3callratedataBsyCalCmplToday2, g3pkipcodecsumEntry=g3pkipcodecsumEntry, g3ipinterfaceSlot21=g3ipinterfaceSlot21, g3ipinterfaceNodeName13=g3ipinterfaceNodeName13, g3timedateSecond=g3timedateSecond, g3atmportpg1SGNumber2=g3atmportpg1SGNumber2, g3routepatternTGNumber6=g3routepatternTGNumber6, g3pktonerecsumCLASTAvail=g3pktonerecsumCLASTAvail, g3pkpnblock=g3pkpnblock, g3ipinterfaceNodeName6=g3ipinterfaceNodeName6, g3callratesrvBsyCalCmplToday2=g3callratesrvBsyCalCmplToday2, g3callratemediaBsyCalCmplToday=g3callratemediaBsyCalCmplToday, g3annallEntry=g3annallEntry, g3atmportpg1TGNumber64=g3atmportpg1TGNumber64, clan_board=clan_board, g3esmsumESMDenials=g3esmsumESMDenials, g3atmportpg1=g3atmportpg1, g3atmportpg3LTGNumber10=g3atmportpg3LTGNumber10, g3bulletinDate44=g3bulletinDate44, g3atmportpg2SGNumber175=g3atmportpg2SGNumber175, g3pkesmsumTotalUsage=g3pkesmsumTotalUsage, g3callratetotalBsyIntSc=g3callratetotalBsyIntSc, g3callratetotalBsyCalCmplYesterday2=g3callratetotalBsyCalCmplYesterday2, g3snblockTretrieve=g3snblockTretrieve, g3pkprincipalTcount=g3pkprincipalTcount, g3tonerecGPTDPkOffPN=g3tonerecGPTDPkOffPN, g3pkloadtanTdelay=g3pkloadtanTdelay, g3trunklightTage=g3trunklightTage, g3cabtypeTretrieve=g3cabtypeTretrieve, g3connectRequests=g3connectRequests, g3vintageProductID=g3vintageProductID, g3atmportpg1SGNumber5=g3atmportpg1SGNumber5, g3tonerecDTMFPnAlloc=g3tonerecDTMFPnAlloc, g3trunkwbsumTotalSeize=g3trunkwbsumTotalSeize, g3voicesumTotalUsage=g3voicesumTotalUsage, g3pkloadoutOutIntraPNUse=g3pkloadoutOutIntraPNUse, g3huntCallsAban=g3huntCallsAban, g3atmlatencyTretrieve=g3atmlatencyTretrieve, g3pkvoicesumDay=g3pkvoicesumDay, g3bulletinTdelay=g3bulletinTdelay, g3eventhourEventType=g3eventhourEventType, g3errorsTage=g3errorsTage, g3eventdayFirstMonth=g3eventdayFirstMonth, g3ipsignal=g3ipsignal, g3healthCab1to158=g3healthCab1to158, g3alarmsMinAlrmd=g3alarmsMinAlrmd, g3esparmsNetCommunity9=g3esparmsNetCommunity9, g3pkpnblockTdmPeak=g3pkpnblockTdmPeak, g3esparmsNetCommunity50=g3esparmsNetCommunity50, g3alarmsEntry=g3alarmsEntry, g3cartypeCab2CarDType=g3cartypeCab2CarDType, g3bulletinDate23=g3bulletinDate23, g3pkipsignalTage=g3pkipsignalTage, g3covpathPoint1Ans=g3covpathPoint1Ans, g3gatewayG350ModTypeV4=g3gatewayG350ModTypeV4, g3atmportpg3TGNumber182=g3atmportpg3TGNumber182, g3esserversTable=g3esserversTable, g3pktrunksumRunHour=g3pktrunksumRunHour, g3pkloadtotal=g3pkloadtotal, g3dmoduleTage=g3dmoduleTage, g3pkrpatQueueSize=g3pkrpatQueueSize, g3pnblockMeasHour=g3pnblockMeasHour, g3huntTotalUsage=g3huntTotalUsage, g3cbctrunkATB=g3cbctrunkATB, g3pkannintegASP=g3pkannintegASP, g3ds1cfgName=g3ds1cfgName, g3attdposYear=g3attdposYear, g3stationcfgVintage=g3stationcfgVintage, g3clientEnumState=g3clientEnumState, g3bulletinTretrieve=g3bulletinTretrieve, g3snblockMonth=g3snblockMonth, def_products=def_products, g3clansocsumTdelay=g3clansocsumTdelay, g3clanetherTime=g3clanetherTime, g3callratedataRunMonth=g3callratedataRunMonth, g3healthCab31to4426=g3healthCab31to4426, g3atmportpg1SGNumber18=g3atmportpg1SGNumber18, g3filterActive=g3filterActive, g3loadincTretrieve=g3loadincTretrieve, g3atmportpg2TGNumber158=g3atmportpg2TGNumber158, g3atmportpg2SGNumber118=g3atmportpg2SGNumber118, g3atmportpg2TGNumber99=g3atmportpg2TGNumber99, g3occsumRunYear=g3occsumRunYear, g3pkcovpathMeasHour=g3pkcovpathMeasHour, g3vintageIPStaReg=g3vintageIPStaReg, g3bulletinMessage45=g3bulletinMessage45, g3fiberlinkTage=g3fiberlinkTage, g3atmlatencyTable=g3atmlatencyTable, g3esmsumPercentAPB=g3esmsumPercentAPB, g3pktrunksumTotalSeize=g3pktrunksumTotalSeize, g3ipinterfaceSlot81=g3ipinterfaceSlot81, g3pkclansocsumTintvl=g3pkclansocsumTintvl, g3deftime=g3deftime, g3ipinterfaceNodeName26=g3ipinterfaceNodeName26, g3ipinterfaceNodeName59=g3ipinterfaceNodeName59, avaya_s8400=avaya_s8400, g3loadtotal=g3loadtotal, g3mmisum=g3mmisum, g3errorsErrCnt=g3errorsErrCnt, g3healthCab31to4420=g3healthCab31to4420, g3datamstaCFdestExt=g3datamstaCFdestExt, g3trunkcfgBoardType=g3trunkcfgBoardType, g3esparmsNetCommunity53=g3esparmsNetCommunity53, g3trunklightHour=g3trunklightHour, g3esparmsNetCommunity7=g3esparmsNetCommunity7, g3connectTimeUp=g3connectTimeUp, g3stationPort=g3stationPort, g3covpathPoint3Ans=g3covpathPoint3Ans, g3atmportpg2TGNumber155=g3atmportpg2TGNumber155, g3pktrunksumPercentAtb=g3pktrunksumPercentAtb, g3atmportpg1SGNumber23=g3atmportpg1SGNumber23, g3pktonerecTcount=g3pktonerecTcount, g3annintegAllPortsBusy=g3annintegAllPortsBusy, g3atmportpg3LSGNumber2=g3atmportpg3LSGNumber2, g3clanpppTage=g3clanpppTage, g3vintageTintvl=g3vintageTintvl, g3bulletinDate42=g3bulletinDate42, g3pkloadtotalTcount=g3pkloadtotalTcount, g3ipinterfaceSlot60=g3ipinterfaceSlot60, g3statmedproBroadCastAddr=g3statmedproBroadCastAddr, g3filter=g3filter, g3atmportpg1SGNumber55=g3atmportpg1SGNumber55, g3atmportpg2SGNumber91=g3atmportpg2SGNumber91, g3loadtanTanOutgoingPeg=g3loadtanTanOutgoingPeg, g3cartypeCab1CarBType=g3cartypeCab1CarBType, g3pkannintegEntry=g3pkannintegEntry, g3ipserverSecLocation=g3ipserverSecLocation, g3pktonerecsumCCTTRPQueue=g3pktonerecsumCCTTRPQueue, g3stamediaH248LinksDown=g3stamediaH248LinksDown, g3atmportpg2SGNumber142=g3atmportpg2SGNumber142, g3ipsignalHour=g3ipsignalHour, g3callratedataNumCallsYesterday=g3callratedataNumCallsYesterday, g3esparmsMinute=g3esparmsMinute, g3pkvoicesumTotalUsage=g3pkvoicesumTotalUsage, g3atmportpg2SGNumber94=g3atmportpg2SGNumber94, g3pkcovpathCallsOffCB=g3pkcovpathCallsOffCB, g3pkmmisumMMIDenials=g3pkmmisumMMIDenials, g3esserversServerBIP2=g3esserversServerBIP2, g3trunkgrpTAC=g3trunkgrpTAC, g3stamediaGatewayStatus14=g3stamediaGatewayStatus14, g3annintegHour=g3annintegHour, g3callratevoiceBsyIntMnYesterday2=g3callratevoiceBsyIntMnYesterday2, g3clientCommunity=g3clientCommunity, g3ipserverTage=g3ipserverTage, g3pktonerecsumGPTDTDeny=g3pktonerecsumGPTDTDeny, g3pkipsignalHourAvgLatency=g3pkipsignalHourAvgLatency, g3pkipsignalIntvlAvgLatency=g3pkipsignalIntvlAvgLatency, g3atmportpg1SGNumber90=g3atmportpg1SGNumber90, g3pkipcodecsumDSPRecs=g3pkipcodecsumDSPRecs, g3callratevoice=g3callratevoice, g3clanetherCrcChkDelta=g3clanetherCrcChkDelta, g3connectResponses=g3connectResponses, g3ipintlistSlot=g3ipintlistSlot, g3atmportpg1TGNumber26=g3atmportpg1TGNumber26, g3atmportpg2SGNumber95=g3atmportpg2SGNumber95, g3atmportpg3SGNumber193=g3atmportpg3SGNumber193, g3filterEntry=g3filterEntry, g3atmlatencyEntry=g3atmlatencyEntry, g3trapTrunkMember=g3trapTrunkMember, g3pksnblockSnPeg=g3pksnblockSnPeg, g3ipinterfaceSlot23=g3ipinterfaceSlot23, g3ipcodecsumDay=g3ipcodecsumDay, g3vintageAbbAlmRep2=g3vintageAbbAlmRep2, g3loadincHour=g3loadincHour, g3atmportpg2TGNumber170=g3atmportpg2TGNumber170, g3secviolateTrkInvalidAC=g3secviolateTrkInvalidAC, g3pktonerecsumCCMFCRPReq=g3pktonerecsumCCMFCRPReq, g3atmportpg3TGNumber184=g3atmportpg3TGNumber184, g3pkatmlatencyATMCount1B=g3pkatmlatencyATMCount1B, g3platcmdsTable=g3platcmdsTable, g3esmainServerAIP4=g3esmainServerAIP4, g3atmportpg1SGNumber68=g3atmportpg1SGNumber68, g3trunkgrpCommType=g3trunkgrpCommType, g3statregionTintvl=g3statregionTintvl, g3atmportpg3LTGNumber11=g3atmportpg3LTGNumber11, g3atmportpg2SGNumber133=g3atmportpg2SGNumber133, g3rpatQueueSize=g3rpatQueueSize, g3trunkout=g3trunkout, g3timedateMonth=g3timedateMonth, g3pnblockTretrieve=g3pnblockTretrieve, g3ipinterfaceNodeName77=g3ipinterfaceNodeName77, g3gatewayG700ModTypeV3=g3gatewayG700ModTypeV3, g3trapFrequency=g3trapFrequency, g3atmportpg3=g3atmportpg3, g3voicesum=g3voicesum)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3ipnetregion=g3ipnetregion, g3bulletinMessage46=g3bulletinMessage46, g3ipinterfaceNodeName38=g3ipinterfaceNodeName38, g3stamediaBusyOutTrunks=g3stamediaBusyOutTrunks, g3pkloadtotalTage=g3pkloadtotalTage, g3routepatternTdelay=g3routepatternTdelay, g3eventdayEventData1=g3eventdayEventData1, g3pkannintegMaxCall=g3pkannintegMaxCall, g3bulletinMessage36=g3bulletinMessage36, g3busybrdTable=g3busybrdTable, g3pktonerecTretrieve=g3pktonerecTretrieve, g3voicesumEntry=g3voicesumEntry, g3busytrkErrorCode=g3busytrkErrorCode, g3atmportpg1SGNumber12=g3atmportpg1SGNumber12, g3ipinterfaceNodeName9=g3ipinterfaceNodeName9, g3ds1Entry=g3ds1Entry, g3callratevoiceBsyIntMn=g3callratevoiceBsyIntMn, g3secviolateRAInvalidAC=g3secviolateRAInvalidAC, g3atmportpg1TGNumber47=g3atmportpg1TGNumber47, g3atmportpg3TGNumber205=g3atmportpg3TGNumber205, g3ipinterfaceSlot9=g3ipinterfaceSlot9, g3pkcovpathPoint3Aband=g3pkcovpathPoint3Aband, g3callratedata=g3callratedata, g3esparmsNetCommunity23=g3esparmsNetCommunity23, g3pktrunkwbsumGrpOvfl=g3pktrunkwbsumGrpOvfl, g3ipnetregionTable=g3ipnetregionTable, g3pkcovpathEntry=g3pkcovpathEntry, g3callratesrvBsyCalCmplYesterday=g3callratesrvBsyCalCmplYesterday, g3ipcodecsumTage=g3ipcodecsumTage, g3atmportpg2TGNumber115=g3atmportpg2TGNumber115, g3trunkgrpSuppServProt=g3trunkgrpSuppServProt, g3healthPncStat31to4420=g3healthPncStat31to4420, g3dmoduleEntry=g3dmoduleEntry, g3trunkwbsumTcount=g3trunkwbsumTcount, g3atmportpg2TGNumber147=g3atmportpg2TGNumber147, g3principalTage=g3principalTage, g3atmportpg2SGNumber147=g3atmportpg2SGNumber147, g3esservers=g3esservers, g3healthPncStat31to4417=g3healthPncStat31to4417, g3esparmsNetCommunity51=g3esparmsNetCommunity51, g3pkatmlatencyPNDest1=g3pkatmlatencyPNDest1, g3client=g3client, g3atmportpg1SGNumber79=g3atmportpg1SGNumber79, g3pktrunksumRunYear=g3pktrunksumRunYear, g3errorsMonthFirst=g3errorsMonthFirst, g3trunkstaConnPort2=g3trunkstaConnPort2, g3atmportpg3TGNumber186=g3atmportpg3TGNumber186, g3siggroupIntfNum8=g3siggroupIntfNum8, g3loadincPNNumber=g3loadincPNNumber, g3atmportpg1TGNumber23=g3atmportpg1TGNumber23, g3ipdspsumTable=g3ipdspsumTable, g3statmedproSourceIP=g3statmedproSourceIP, g3atmportpg3LSGNumber7=g3atmportpg3LSGNumber7, g3pkesmsumTage=g3pkesmsumTage, g3lsplistXlnUpdated=g3lsplistXlnUpdated, g3statregion=g3statregion, g3pkrpatYear=g3pkrpatYear, g3rpatCallsCarrd=g3rpatCallsCarrd, g3pktonerecsumCCTTRTDeny=g3pktonerecsumCCTTRTDeny, g3pkclansocsumSockusage=g3pkclansocsumSockusage, g3busybrdBoardVal=g3busybrdBoardVal, g3statregionTretrieve=g3statregionTretrieve, g3atmportpg1SGNumber41=g3atmportpg1SGNumber41, g3atmportpg1TGNumber32=g3atmportpg1TGNumber32, g3ipsignalRegion=g3ipsignalRegion, g3trunkcfgTintvl=g3trunkcfgTintvl, g3pkprincipalTdelay=g3pkprincipalTdelay, g3trunkwbsumTdelay=g3trunkwbsumTdelay, g3cartypeCab3CarBType=g3cartypeCab3CarBType, g3bulletinDate38=g3bulletinDate38, g3nodenameTretrieve=g3nodenameTretrieve, g3cbctrunkTBM=g3cbctrunkTBM, g3atmpncPncSELB=g3atmpncPncSELB, g3pktrunkwbsumYear=g3pktrunkwbsumYear, g3healthPncStat16to3019=g3healthPncStat16to3019, g3pksnblockMeasHour=g3pksnblockMeasHour, g3loadoutOutIncomingPeg=g3loadoutOutIncomingPeg, g3ipinterfaceSlot41=g3ipinterfaceSlot41, g3atmportpg1TGNumber74=g3atmportpg1TGNumber74, g3rpatcfgTcount=g3rpatcfgTcount, g3covpathTintvl=g3covpathTintvl, g3esserversServerAIP3=g3esserversServerAIP3, g3atmportpg1TGNumber24=g3atmportpg1TGNumber24, g3stationcfgBoardNum=g3stationcfgBoardNum, g3atmportpg2SGNumber116=g3atmportpg2SGNumber116, g3pktonerecCCMFCRPkOffPN=g3pktonerecCCMFCRPkOffPN, g3acaTGNumber=g3acaTGNumber, g3pktrunkwbsumEntry=g3pktrunkwbsumEntry, g3atmlatencyTintvl=g3atmlatencyTintvl, g3atmportpg3SGNumber181=g3atmportpg3SGNumber181, g3esparmsNetCommunity56=g3esparmsNetCommunity56, g3pktonerecsumGPTDHour=g3pktonerecsumGPTDHour, g3secviolateTtlViolateSSC=g3secviolateTtlViolateSSC, g3atmportpg2SGNumber170=g3atmportpg2SGNumber170, g3errorsDayFirst=g3errorsDayFirst, g3pkclansocsumBoard=g3pkclansocsumBoard, g3ipinterfaceSlot85=g3ipinterfaceSlot85, g3stamgannGatewayNbr=g3stamgannGatewayNbr, g3cartypeCab2CarCType=g3cartypeCab2CarCType, g3vintageCurMemory=g3vintageCurMemory, g3pkpnblockTcount=g3pkpnblockTcount, g3loadintIntInterPNUse=g3loadintIntInterPNUse, g3callratesrvMeasHour3=g3callratesrvMeasHour3, g3atmportpg3SGNumber223=g3atmportpg3SGNumber223, g3pkloadoutOutOutgoingUse=g3pkloadoutOutOutgoingUse, g3ipsignalTage=g3ipsignalTage, g3trunkstaConnPort8=g3trunkstaConnPort8, g3connectSuccess=g3connectSuccess, g3atmportpg3TGNumber235=g3atmportpg3TGNumber235, g3atmlatencyATMCount1B=g3atmlatencyATMCount1B, g3ipinterfaceSlot51=g3ipinterfaceSlot51, g3healthCab16to3031=g3healthCab16to3031, g3stamediaGatewayStatus38=g3stamediaGatewayStatus38, g3tonerecsumCLASTAvail=g3tonerecsumCLASTAvail, g3callratemediaMeasHour2=g3callratemediaMeasHour2, g3atmportpg1SGNumber19=g3atmportpg1SGNumber19, g3msgalmLevel=g3msgalmLevel, g3errorsTretrieve=g3errorsTretrieve, g3agentServer1IP=g3agentServer1IP, g3pkmmisumAvailableUsage=g3pkmmisumAvailableUsage, g3callratesrvBsyIntScYesterday2=g3callratesrvBsyIntScYesterday2, g3clansocsumMonth=g3clansocsumMonth, g3eventhourTage=g3eventhourTage, g3cbctrunkDur3=g3cbctrunkDur3, g3rpatcfgPattern9=g3rpatcfgPattern9, g3loadoutTable=g3loadoutTable, g3pkloadtanTcount=g3pkloadtanTcount, g3stationType=g3stationType, g3callratemediaBsyIntHr=g3callratemediaBsyIntHr, g3callratedataBsyCalCmpl=g3callratedataBsyCalCmpl, g3covpathCoveragePath=g3covpathCoveragePath, g3trapPortNetwork=g3trapPortNetwork, g3annintegTcount=g3annintegTcount, g3callratetotalRunMonth=g3callratetotalRunMonth, g3pkloadtotalTable=g3pkloadtotalTable, g3bulletinDate13=g3bulletinDate13, g3pkannallPlayRequests=g3pkannallPlayRequests, g3stamediaGatewayStatus66=g3stamediaGatewayStatus66, g3cbctrunkTage=g3cbctrunkTage, g3stamedlistTage=g3stamedlistTage, g3rpatcfgPattern21=g3rpatcfgPattern21, g3occsumSMOcc=g3occsumSMOcc, g3tonerecCCMFCRPnReq=g3tonerecCCMFCRPnReq, g3rpatPattern=g3rpatPattern, g3bulletinMessage50=g3bulletinMessage50, g3rpatHour=g3rpatHour, g3ipsignalIntvlPktsLostPct=g3ipsignalIntvlPktsLostPct, g3connectTimeReset=g3connectTimeReset, g3agentActiveIP=g3agentActiveIP, g3trunkoutTretrieve=g3trunkoutTretrieve, g3ipinterfaceNodeName37=g3ipinterfaceNodeName37, g3commlinkTretrieve=g3commlinkTretrieve, g3huntlist=g3huntlist, g3bulletinDate46=g3bulletinDate46, g3bulletinMessage35=g3bulletinMessage35, g3stationcfgSuffix=g3stationcfgSuffix, g3esmainPriorityScore=g3esmainPriorityScore, g3trunkcfgTretrieve=g3trunkcfgTretrieve, g3ipcodecsum=g3ipcodecsum, g3bulletinDate30=g3bulletinDate30, g3atmportpg3LSGNumber8=g3atmportpg3LSGNumber8, g3huntlistTintvl=g3huntlistTintvl, g3alarmsTable=g3alarmsTable, g3stamediaGatewayStatus70=g3stamediaGatewayStatus70, g3atmportpg2TGNumber111=g3atmportpg2TGNumber111, g3atmportpg3SGNumber224=g3atmportpg3SGNumber224, g3ipdspsumOutRegion=g3ipdspsumOutRegion, g3port=g3port, g3trunkstaConnPort4=g3trunkstaConnPort4, g3callratemediaTretrieve=g3callratemediaTretrieve, g3eventdayTretrieve=g3eventdayTretrieve, g3clanpppDate=g3clanpppDate, g3bulletinDate16=g3bulletinDate16, g3mmisumTable=g3mmisumTable, g3esserversPriorityScore=g3esserversPriorityScore, g3pkloadoutMonth=g3pkloadoutMonth, g3covpathCallsOffSAC=g3covpathCallsOffSAC, g3pkpnblockTdmUsage=g3pkpnblockTdmUsage, g3callratesrvRunDay=g3callratesrvRunDay, g3ipserverSecIP2=g3ipserverSecIP2, g3gatewayG350ModTypeV9=g3gatewayG350ModTypeV9, g3occsumPeakHour=g3occsumPeakHour, g3ipregionTable=g3ipregionTable, g3atmportpg2SGNumber98=g3atmportpg2SGNumber98, g3cabinetCarAType=g3cabinetCarAType, g3acaTcount=g3acaTcount, g3tonerec=g3tonerec, g3stamediaGatewayStatus1=g3stamediaGatewayStatus1, g3callratevoiceMeasHour=g3callratevoiceMeasHour, g3pktonerecsumCCTTRHour=g3pktonerecsumCCTTRHour, g3statmedproDupSubnetMask=g3statmedproDupSubnetMask, g3ipinterfaceNodeName57=g3ipinterfaceNodeName57, g3healthTretrieve=g3healthTretrieve, g3busybrdIndex=g3busybrdIndex, g3atmportpg2TGNumber113=g3atmportpg2TGNumber113, g3cartypeTretrieve=g3cartypeTretrieve, g3atmportpg3TGNumber217=g3atmportpg3TGNumber217, g3callratesrvTdelay=g3callratesrvTdelay, g3msgalmTable=g3msgalmTable, g3filterFrequency=g3filterFrequency, g3atmportpg1SGNumber70=g3atmportpg1SGNumber70, g3atmportpg3LTGNumber1=g3atmportpg3LTGNumber1, g3pktrunkoutDay=g3pktrunkoutDay, g3rpatcfgPattern1=g3rpatcfgPattern1, g3eventdayTintvl=g3eventdayTintvl, g3esserversServerAIP1=g3esserversServerAIP1, g3platcmdsPriority=g3platcmdsPriority, g3routepatternTGNumber13=g3routepatternTGNumber13, g3pktonerecCCTTRPnAlloc=g3pktonerecCCTTRPnAlloc, g3atmportpg1SGNumber86=g3atmportpg1SGNumber86, g3configPort9=g3configPort9, g3pkatmlatencyTintvl=g3pkatmlatencyTintvl, g3atmlatencyMeasHour1A=g3atmlatencyMeasHour1A, g3trunklightTretrieve=g3trunklightTretrieve, g3bulletinDate34=g3bulletinDate34, g3ipsignalTable=g3ipsignalTable, g3eventdayEntry=g3eventdayEntry, g3ipcodecsumTintvl=g3ipcodecsumTintvl, g3pkloadintTretrieve=g3pkloadintTretrieve, g3cbctrunkOvfTG=g3cbctrunkOvfTG, g3pkannintegExtension=g3pkannintegExtension, g3pkcovpathPoint2Aband=g3pkcovpathPoint2Aband, g3vintageTdelay=g3vintageTdelay, g3datamodEntry=g3datamodEntry, g3atmportpg1TGNumber69=g3atmportpg1TGNumber69, g3ipinterfaceSlot17=g3ipinterfaceSlot17, g3atmportpg2TGNumber136=g3atmportpg2TGNumber136, g3servalmDescription=g3servalmDescription, g3busybrdLastError=g3busybrdLastError, g3atmportpg3TGNumber245=g3atmportpg3TGNumber245, g3atmpncPncHoDsp2B=g3atmpncPncHoDsp2B, g3acaTGMember=g3acaTGMember, g3vintageSpeBupID=g3vintageSpeBupID, g3filterResolved=g3filterResolved, g3pkcovpathPoint6Ans=g3pkcovpathPoint6Ans, g3trunkwbsumTotalUsage=g3trunkwbsumTotalUsage, g3acaWideBand=g3acaWideBand, g3pkesmsumAvailablePorts=g3pkesmsumAvailablePorts, g3tonerecCCTTRPkAlloc=g3tonerecCCTTRPkAlloc, g3stamediaGatewayStatus7=g3stamediaGatewayStatus7, g3configPort29=g3configPort29, g3esmainServerAIP3=g3esmainServerAIP3, g3ipnetregionCCPHB=g3ipnetregionCCPHB, g3pkcovpathPoint3Ans=g3pkcovpathPoint3Ans, g3ipdspsumYear=g3ipdspsumYear, g3trunkgrpName=g3trunkgrpName, g3atmportpg1TGNumber67=g3atmportpg1TGNumber67, g3attdposTretrieve=g3attdposTretrieve, g3atmportpg3SGNumber194=g3atmportpg3SGNumber194, g3ipinterfaceSlot20=g3ipinterfaceSlot20, g3atmportpg1TGNumber35=g3atmportpg1TGNumber35, g3healthPncStat16to3022=g3healthPncStat16to3022, g3siggroupIntfNum18=g3siggroupIntfNum18, g3pkloadoutYear=g3pkloadoutYear)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3configPort11=g3configPort11, g3atmportpg2SGNumber96=g3atmportpg2SGNumber96, g3fiberlinkE1ADs1Board=g3fiberlinkE1ADs1Board, g3atmcfgTdelay=g3atmcfgTdelay, g3pktonerecsumCCCPTRPReq=g3pktonerecsumCCCPTRPReq, g3pkipcodecsumTretrieve=g3pkipcodecsumTretrieve, g3vintageSpeBrelease=g3vintageSpeBrelease, g3trunkgrpType=g3trunkgrpType, g3pkloadoutTcount=g3pkloadoutTcount, g3ds1cfgSignaling=g3ds1cfgSignaling, g3ipinterfaceNodeName31=g3ipinterfaceNodeName31, g3fiberlink=g3fiberlink, g3pksnblockHour=g3pksnblockHour, g3regipstatTcount=g3regipstatTcount, g3atmportpg2TGNumber114=g3atmportpg2TGNumber114, g3nodenameTage=g3nodenameTage, g3agentState=g3agentState, g3pkrpatTage=g3pkrpatTage, g3platcmdsLoginId=g3platcmdsLoginId, g3atmportpg3TGNumber188=g3atmportpg3TGNumber188, g3datamodExtension=g3datamodExtension, g3statmedproEntry=g3statmedproEntry, g3pktonerecsumTage=g3pktonerecsumTage, g3atmportpg2SGNumber122=g3atmportpg2SGNumber122, g3annintegExtension=g3annintegExtension, g3atmportpg2SGNumber171=g3atmportpg2SGNumber171, g3configBoardType=g3configBoardType, g3tonerecTcount=g3tonerecTcount, g3atmportpg2SGNumber123=g3atmportpg2SGNumber123, g3extdevAltName=g3extdevAltName, g3atmportpg3SGNumber218=g3atmportpg3SGNumber218, g3restartTable=g3restartTable, g3gatewayMACAddress=g3gatewayMACAddress, g3esparmsNetCommunity12=g3esparmsNetCommunity12, g3deftimeTdelay=g3deftimeTdelay, g3atmportpg2TGNumber153=g3atmportpg2TGNumber153, g3callratesrvBsyCalCmplToday=g3callratesrvBsyCalCmplToday, g3bulletinDate5=g3bulletinDate5, g3occsumCPOcc=g3occsumCPOcc, g3healthPncStat16to3027=g3healthPncStat16to3027, g3snblockTcount=g3snblockTcount, g3trkgrpmemTcount=g3trkgrpmemTcount, g3healthCab16to3018=g3healthCab16to3018, g3atmportpg3SGNumber192=g3atmportpg3SGNumber192, g3atmportpg3TGNumber195=g3atmportpg3TGNumber195, g3trunkgrpSize=g3trunkgrpSize, g3regipstatTdelay=g3regipstatTdelay, g3atmportpg3Tintvl=g3atmportpg3Tintvl, g3lsplistServiceState=g3lsplistServiceState, g3fiberlinkTdelay=g3fiberlinkTdelay, g3pktrunksumTrunkGroup=g3pktrunksumTrunkGroup, g3timedateLastError6=g3timedateLastError6, g3bulletinDate50=g3bulletinDate50, g3ipinterfaceNodeName36=g3ipinterfaceNodeName36, g3ipinterfaceNodeName43=g3ipinterfaceNodeName43, g3callratesrvNumCalls=g3callratesrvNumCalls, g3voicesumH320Denials=g3voicesumH320Denials, g3mmisumTage=g3mmisumTage, g3deftimeMinute=g3deftimeMinute, g3ipinterfaceNodeName34=g3ipinterfaceNodeName34, g3attdposTcount=g3attdposTcount, g3tonerecsumGPTDPReq=g3tonerecsumGPTDPReq, g3gatewayLocation=g3gatewayLocation, g3callratevoiceNumCallsToday=g3callratevoiceNumCallsToday, g3atmportpg2SGNumber176=g3atmportpg2SGNumber176, g3callratetotalTintvl=g3callratetotalTintvl, g3ds1cfgTretrieve=g3ds1cfgTretrieve, g3pktrunklightHour=g3pktrunklightHour, g3trunksumTage=g3trunksumTage, g3callratesrvBsyIntHrToday=g3callratesrvBsyIntHrToday, g3atmportpg1TGNumber7=g3atmportpg1TGNumber7, g3statmedproPhysicalAddr=g3statmedproPhysicalAddr, g3pktrunklightYear=g3pktrunklightYear, g3clientEnumType=g3clientEnumType, g3voicesumTage=g3voicesumTage, g3siggroupBoard2=g3siggroupBoard2, g3cbctrunkPlan6=g3cbctrunkPlan6, g3secviolateStnValidSSC=g3secviolateStnValidSSC, g3ipunregTable=g3ipunregTable, g3atmportpg3TGNumber226=g3atmportpg3TGNumber226, g3ipevtTable=g3ipevtTable, g3trunkgrpTretrieve=g3trunkgrpTretrieve, g3esmainServerBId=g3esmainServerBId, g3secviolateTrkValidSSC=g3secviolateTrkValidSSC, g3tonerecCCTTRPnReq=g3tonerecCCTTRPnReq, g3ipinterfaceNodeName66=g3ipinterfaceNodeName66, g3healthCab1to154=g3healthCab1to154, g3atmportpg2SGNumber124=g3atmportpg2SGNumber124, g3configPort15=g3configPort15, g3callratevoiceBsyIntMnToday2=g3callratevoiceBsyIntMnToday2, g3callratetotalBsyIntHrToday2=g3callratetotalBsyIntHrToday2, g3callratetotalRunHour=g3callratetotalRunHour, g3principalTable=g3principalTable, g3acaEntry=g3acaEntry, g3bulletinMessage33=g3bulletinMessage33, g3esparmsNetCommunity36=g3esparmsNetCommunity36, g3pkloadtanTanIntraPNUse=g3pkloadtanTanIntraPNUse, g3cabinetTintvl=g3cabinetTintvl, g3busytrkGroup=g3busytrkGroup, g3extdevBuilding=g3extdevBuilding, g3stamediaGatewayStatus15=g3stamediaGatewayStatus15, g3pktonerec=g3pktonerec, g3callratemediaRunYear=g3callratemediaRunYear, g3esmainTage=g3esmainTage, g3atmportpg3TGNumber191=g3atmportpg3TGNumber191, g3esparmsNetCommunity29=g3esparmsNetCommunity29, g3pktonerecDTMFTotOffPN=g3pktonerecDTMFTotOffPN, g3pktonerecDTMFPnAlloc=g3pktonerecDTMFPnAlloc, g3callratetotalBsyIntMnToday=g3callratetotalBsyIntMnToday, g3atmportpg1TGNumber88=g3atmportpg1TGNumber88, g3trapFromDay=g3trapFromDay, g3pkatmlatencyMeasHour1B=g3pkatmlatencyMeasHour1B, g3cartypeTintvl=g3cartypeTintvl, g3atmportpg3SGNumber241=g3atmportpg3SGNumber241, g3huntMeasHour=g3huntMeasHour, g3esmsumAvailableUsage=g3esmsumAvailableUsage, g3pkesmsumHour=g3pkesmsumHour, g3atmportpg1TGNumber40=g3atmportpg1TGNumber40, g3errorsAck=g3errorsAck, g3pkipdspsumTcount=g3pkipdspsumTcount, g3pktrunksum=g3pktrunksum, g3atmportpg3TGNumber242=g3atmportpg3TGNumber242, g3pktonerecsumRunYear=g3pktonerecsumRunYear, g3occsumTotAtt=g3occsumTotAtt, g3pktonerecHour=g3pktonerecHour, g3mediacfgSuffix=g3mediacfgSuffix, g3atmportpg2SGNumber146=g3atmportpg2SGNumber146, g3tonerecsumGPTDTReq=g3tonerecsumGPTDTReq, g3cabinetEntry=g3cabinetEntry, g3pktrunksumQueSiz=g3pktrunksumQueSiz, g3statregionBWLimitUnits=g3statregionBWLimitUnits, g3configCode=g3configCode, g3trunksumTcount=g3trunksumTcount, g3atmcfgTage=g3atmcfgTage, g3atmportpg1SGNumber56=g3atmportpg1SGNumber56, g3ipinterfaceSlot67=g3ipinterfaceSlot67, g3restartTcount=g3restartTcount, g3nodenameTcount=g3nodenameTcount, g3restartDay=g3restartDay, g3ipcodecsumEntry=g3ipcodecsumEntry, g3esserversServerAIP2=g3esserversServerAIP2, g3esparmsNetCommunity8=g3esparmsNetCommunity8, g3statregionSourceRegion=g3statregionSourceRegion, g3pkvoicesumH320Allocation=g3pkvoicesumH320Allocation, g3atmportpg2SGNumber172=g3atmportpg2SGNumber172, g3pkrpatMonth=g3pkrpatMonth, g3atmportpg3TGNumber212=g3atmportpg3TGNumber212, g3pnblock=g3pnblock, g3stamediaGatewayStatus79=g3stamediaGatewayStatus79, g3atmportpg2SGNumber164=g3atmportpg2SGNumber164, g3atmpncTcount=g3atmpncTcount, g3atmportpg2SGNumber125=g3atmportpg2SGNumber125, g3rpatcfgPattern18=g3rpatcfgPattern18, g3bulletinDate37=g3bulletinDate37, g3atmportpg3SGNumber226=g3atmportpg3SGNumber226, g3voicesumVoiceUsage=g3voicesumVoiceUsage, g3trapFromMinute=g3trapFromMinute, g3cartype=g3cartype, g3loadtanMonth=g3loadtanMonth, g3stationDataExt=g3stationDataExt, g3connectType=g3connectType, g3trunkoutMember=g3trunkoutMember, g3cabinetTretrieve=g3cabinetTretrieve, g3stationBuilding=g3stationBuilding, g3pkatmlatencyMeasHour1A=g3pkatmlatencyMeasHour1A, g3callratemediaNumCallsYesterday2=g3callratemediaNumCallsYesterday2, g3occsumPnetAtt=g3occsumPnetAtt, g3atmportpg3TGNumber222=g3atmportpg3TGNumber222, g3errorsMonthLast=g3errorsMonthLast, g3statlinkTable=g3statlinkTable, g3ipinterfaceSlot10=g3ipinterfaceSlot10, g3clansocsumTretrieve=g3clansocsumTretrieve, g3callratemediaBsyIntScYesterday=g3callratemediaBsyIntScYesterday, g3filterCategory=g3filterCategory, g3callratetotalNumCallsYesterday2=g3callratetotalNumCallsYesterday2, g3atmpncTretrieve=g3atmpncTretrieve, g3trunkgrpLongHold=g3trunkgrpLongHold, g3pktrunklightTrunkGroup=g3pktrunklightTrunkGroup, g3loadtanTanIntraPNPeg=g3loadtanTanIntraPNPeg, g3esparmsNetCommunity5=g3esparmsNetCommunity5, g3callratedataTage=g3callratedataTage, g3loadoutTcount=g3loadoutTcount, g3ipinterfaceNodeName81=g3ipinterfaceNodeName81, g3atmportpg3LTGNumber8=g3atmportpg3LTGNumber8, g3esparmsNetCommunity30=g3esparmsNetCommunity30, g3statmedpro=g3statmedpro, g3ipdspsumTage=g3ipdspsumTage, g3pkipsignalHour=g3pkipsignalHour, g3pkannallTable=g3pkannallTable, g3pkloadtotalTretrieve=g3pkloadtotalTretrieve, g3atmportpg2SGNumber174=g3atmportpg2SGNumber174, g3ipinterfaceNodeName19=g3ipinterfaceNodeName19, g3healthPncStat31to4428=g3healthPncStat31to4428, g3pkmmisumTretrieve=g3pkmmisumTretrieve, g3busyrlsTrunkMember=g3busyrlsTrunkMember, g3pkipsignalTretrieve=g3pkipsignalTretrieve, g3atmportpg1SGNumber44=g3atmportpg1SGNumber44, g3pktonerecsumCCCPTRHour=g3pktonerecsumCCCPTRHour, g3ipdspsumInRegion=g3ipdspsumInRegion, g3atmportpg3SGNumber188=g3atmportpg3SGNumber188, g3trkgrpmemTable=g3trkgrpmemTable, g3ipinterfaceNodeName48=g3ipinterfaceNodeName48, g3clanetherCollCntTot=g3clanetherCollCntTot, g3trapDestination=g3trapDestination, g3trunkgrpTable=g3trunkgrpTable, g3ipregionRegion=g3ipregionRegion, g3stationFloor=g3stationFloor, g3atmportpg2TGNumber128=g3atmportpg2TGNumber128, g3atmportpg3TGNumber204=g3atmportpg3TGNumber204, g3vintageIPAttdLimit=g3vintageIPAttdLimit, g3loadincIncOutgoingUse=g3loadincIncOutgoingUse, g3vintageRemoteOffAvail=g3vintageRemoteOffAvail, g3ipinterfaceSlot62=g3ipinterfaceSlot62, g3atmportpg2Tdelay=g3atmportpg2Tdelay, g3healthCab1to156=g3healthCab1to156, g3healthCab31to4421=g3healthCab31to4421, g3pktonerecsumTretrieve=g3pktonerecsumTretrieve, g3clanpppKey=g3clanpppKey, g3atmportpg1TGNumber72=g3atmportpg1TGNumber72, g3statmedproSharedIP=g3statmedproSharedIP, g3principalExtensionTAC=g3principalExtensionTAC, g3esparmsTage=g3esparmsTage, g3principalEntry=g3principalEntry, g3msgalmAck=g3msgalmAck, g3pkipsignalSigGroup=g3pkipsignalSigGroup, g3stationcfgTretrieve=g3stationcfgTretrieve, g3stamediaAlarmMinor=g3stamediaAlarmMinor, g3tonerecsumDTMFTDeny=g3tonerecsumDTMFTDeny, g3clientConnectType=g3clientConnectType, g3pktrunksumRunMonth=g3pktrunksumRunMonth, g3pktrunkwbsumTage=g3pktrunkwbsumTage, g3busybrdPort=g3busybrdPort, g3rpatcfgPattern16=g3rpatcfgPattern16, g3loadincTcount=g3loadincTcount, g3pkclansocsumTcount=g3pkclansocsumTcount, g3loadincYear=g3loadincYear, g3siggroupBoard1=g3siggroupBoard1, g3pkipsignalTintvl=g3pkipsignalTintvl, g3trunkstaMaintBusy=g3trunkstaMaintBusy, g3pkipsignalRegion=g3pkipsignalRegion, g3mediacfgEntry=g3mediacfgEntry, g3callratedataRunDay=g3callratedataRunDay, g3callratemediaBsyIntHrToday=g3callratemediaBsyIntHrToday, g3pktrunklightMember=g3pktrunklightMember, g3pkipdspsumDay=g3pkipdspsumDay, g3callratesrvBsyIntMnToday2=g3callratesrvBsyIntMnToday2, g3pkmmisumTotalUsage=g3pkmmisumTotalUsage, g3ipinterfaceSlot84=g3ipinterfaceSlot84, g3covpathMeasHour=g3covpathMeasHour, definity_g3=definity_g3, g3mmisumHour=g3mmisumHour, g3trunksumTable=g3trunksumTable, g3secviolateStnInvalidSSC=g3secviolateStnInvalidSSC, g3tonerecCCCPTRPnAlloc=g3tonerecCCCPTRPnAlloc)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3attdposHour=g3attdposHour, g3lsplistAvailable=g3lsplistAvailable, g3restartTdelay=g3restartTdelay, g3busytrkObject=g3busytrkObject, g3pnblockHour=g3pnblockHour, g3ds1cfgEntry=g3ds1cfgEntry, g3clientExternalName=g3clientExternalName, g3bulletinDate33=g3bulletinDate33, g3atmportpg1SGNumber4=g3atmportpg1SGNumber4, g3loadincTage=g3loadincTage, g3stationcfg=g3stationcfg, g3ds1cfgTdelay=g3ds1cfgTdelay, g3pkclansocsumDenialPeg=g3pkclansocsumDenialPeg, g3pktonerecDTMFPkOffPN=g3pktonerecDTMFPkOffPN, private=private, g3bulletinDate56=g3bulletinDate56, g3trunkwbsumTage=g3trunkwbsumTage, g3snblockTimeSlots=g3snblockTimeSlots, g3stamediaGatewayStatus68=g3stamediaGatewayStatus68, g3trkgrpmemType=g3trkgrpmemType, g3loadtotalTdelay=g3loadtotalTdelay, g3rpatcfgPattern20=g3rpatcfgPattern20, g3atmportpg2TGNumber120=g3atmportpg2TGNumber120, g3statmedproDupBoardLoc=g3statmedproDupBoardLoc, g3routepatternTGNumber16=g3routepatternTGNumber16, g3pktonerecCCMFCRPkAlloc=g3pktonerecCCMFCRPkAlloc, g3atmportpg1TGNumber9=g3atmportpg1TGNumber9, g3clansocsum=g3clansocsum, g3atmportpg2=g3atmportpg2, g3ipcodecsumHour=g3ipcodecsumHour, g3annallTintvl=g3annallTintvl, g3ipdspsumRegion=g3ipdspsumRegion, g3esmsumTotalAllocation=g3esmsumTotalAllocation, g3pktrunkwbsum=g3pktrunkwbsum, g3pkhuntTable=g3pkhuntTable, g3atmportpg1TGNumber71=g3atmportpg1TGNumber71, g3atmportpg1Table=g3atmportpg1Table, g3voicesumTotalAllocation=g3voicesumTotalAllocation, g3pktonerecGPTDPkAlloc=g3pktonerecGPTDPkAlloc, g3rpatcfgPattern4=g3rpatcfgPattern4, g3callratetotalMeasHour=g3callratetotalMeasHour, g3tonerecsumTretrieve=g3tonerecsumTretrieve, g3trunkgrpTdelay=g3trunkgrpTdelay, g3ipinterfaceNodeName60=g3ipinterfaceNodeName60, g3bulletinDate49=g3bulletinDate49, g3platcmds=g3platcmds, g3platcmdsServerName=g3platcmdsServerName, g3ds1Location=g3ds1Location, g3atmportpg3TGNumber233=g3atmportpg3TGNumber233, g3ipinterfaceSlot24=g3ipinterfaceSlot24, g3mediacfgTable=g3mediacfgTable, g3stamediaGatewayStatus78=g3stamediaGatewayStatus78, g3pkmmisumPercentBlock=g3pkmmisumPercentBlock, g3datamod=g3datamod, g3pkrpatEntry=g3pkrpatEntry, g3atmportpg2TGNumber167=g3atmportpg2TGNumber167, g3loadoutOutIntraPNUse=g3loadoutOutIntraPNUse, g3eventhourFirstMinute=g3eventhourFirstMinute, g3errorsHourLast=g3errorsHourLast, g3portNumber=g3portNumber, g3datamstaExtension=g3datamstaExtension, g3regipstatEntry=g3regipstatEntry, g3huntCallsQue=g3huntCallsQue, g3statregionConnType=g3statregionConnType, g3stationName=g3stationName, g3pktrunkoutTrunkGroup=g3pktrunkoutTrunkGroup, g3deftimeHour=g3deftimeHour, g3attdposTimeTalk=g3attdposTimeTalk, g3siggroup=g3siggroup, g3callratevoiceNumCallsToday2=g3callratevoiceNumCallsToday2, g3atmportpg2SGNumber148=g3atmportpg2SGNumber148, g3ipdspsumDay=g3ipdspsumDay, g3atmportpg1TGNumber46=g3atmportpg1TGNumber46, g3loadtotalPNUtil=g3loadtotalPNUtil, g3pkcovpathPoint1Aband=g3pkcovpathPoint1Aband, g3atmportpg3SGNumber220=g3atmportpg3SGNumber220, g3loadoutEntry=g3loadoutEntry, g3pkloadincEntry=g3pkloadincEntry, g3ipinterfaceNodeName42=g3ipinterfaceNodeName42, g3nodename=g3nodename, g3gatewayG700ModTypeV8=g3gatewayG700ModTypeV8, g3stationEntry=g3stationEntry, g3attdposEntry=g3attdposEntry, g3attdgrpEntry=g3attdgrpEntry, g3snblockOverflow=g3snblockOverflow, g3pkannallTdelay=g3pkannallTdelay, g3atmportpg3SGNumber189=g3atmportpg3SGNumber189, g3trunkoutTintvl=g3trunkoutTintvl, g3pkmmisumTotalAllocation=g3pkmmisumTotalAllocation, g3esparmsNetCommunity32=g3esparmsNetCommunity32, g3atmportpg1SGNumber31=g3atmportpg1SGNumber31, g3huntTage=g3huntTage, g3vintageSpeBupState1=g3vintageSpeBupState1, g3atmportpg1SGNumber69=g3atmportpg1SGNumber69, g3pkipdspsumMeasHour=g3pkipdspsumMeasHour, g3vintage=g3vintage, g3gatewayNumber=g3gatewayNumber, g3ipsignalHourPacketsSent=g3ipsignalHourPacketsSent, g3fiberlinkE1Type=g3fiberlinkE1Type, g3vintageResNotify=g3vintageResNotify, g3pkprincipalCallsCCAC=g3pkprincipalCallsCCAC, g3cartypeCab1CarAType=g3cartypeCab1CarAType, g3atmportpg1TGNumber70=g3atmportpg1TGNumber70, g3pkannallTcount=g3pkannallTcount, g3secviolateTcount=g3secviolateTcount, g3atmportpg3SGNumber212=g3atmportpg3SGNumber212, g3ipinterfaceNodeName4=g3ipinterfaceNodeName4, g3pkvoicesumTable=g3pkvoicesumTable, g3tonerecCCCPTRPkAlloc=g3tonerecCCCPTRPkAlloc, g3atmportpg3SGNumber195=g3atmportpg3SGNumber195, g3huntQueSiz=g3huntQueSiz, g3ipinterfaceSlot13=g3ipinterfaceSlot13, g3pksnblockTable=g3pksnblockTable, g3atmportpg1TGNumber49=g3atmportpg1TGNumber49, g3principalCovPath2=g3principalCovPath2, g3trunkgrpSigType=g3trunkgrpSigType, g3atmportpg3SGNumber231=g3atmportpg3SGNumber231, g3atmportpg1TGNumber41=g3atmportpg1TGNumber41, g3atmportpg2SGNumber168=g3atmportpg2SGNumber168, g3pkhuntQueSiz=g3pkhuntQueSiz, g3tonerecCCCPTRTotOffPN=g3tonerecCCCPTRTotOffPN, g3statregionTdelay=g3statregionTdelay, g3pktonerecsumCCTTRPDeny=g3pktonerecsumCCTTRPDeny, g3secviolateValidBC=g3secviolateValidBC, g3atmportpg3SGNumber215=g3atmportpg3SGNumber215, g3huntTimeAvail=g3huntTimeAvail, g3eventhourEventDesc=g3eventhourEventDesc, g3pktonerecTage=g3pktonerecTage, g3pkloadtanTanIncomingPeg=g3pkloadtanTanIncomingPeg, g3callratemediaRunMonth=g3callratemediaRunMonth, g3esparmsNetCommunity3=g3esparmsNetCommunity3, g3trunkgrpTrunkType=g3trunkgrpTrunkType, g3covpathTage=g3covpathTage, g3secviolateRAValidAC=g3secviolateRAValidAC, g3nodenameTdelay=g3nodenameTdelay, g3agentServer2IP=g3agentServer2IP, g3routepatternTGNumber11=g3routepatternTGNumber11, g3tonerecGPTDPkAlloc=g3tonerecGPTDPkAlloc, g3secviolateLoginSuccess=g3secviolateLoginSuccess, g3annintegPlayPorts=g3annintegPlayPorts, g3atmportpg3TGNumber216=g3atmportpg3TGNumber216, g3pksnblockOverflow=g3pksnblockOverflow, g3pkannintegTage=g3pkannintegTage, g3bulletinMessage22=g3bulletinMessage22, g3healthPncStat16to3017=g3healthPncStat16to3017, g3atmportpg2TGNumber162=g3atmportpg2TGNumber162, g3annintegMonth=g3annintegMonth, g3dmoduleTintvl=g3dmoduleTintvl, g3ipinterfaceNodeName46=g3ipinterfaceNodeName46, g3bulletinMessage16=g3bulletinMessage16, g3annallTretrieve=g3annallTretrieve, g3clanpppInvFrameTot=g3clanpppInvFrameTot, g3loadtotalTable=g3loadtotalTable, g3mediacfgBoardNum=g3mediacfgBoardNum, g3atmtrunkTintvl=g3atmtrunkTintvl, g3pkvoicesumTage=g3pkvoicesumTage, g3callratedataMeasHour4=g3callratedataMeasHour4, g3busybrdUDateStr=g3busybrdUDateStr, g3atmportpg3SGNumber245=g3atmportpg3SGNumber245, g3pktrunkwbsumMonth=g3pktrunkwbsumMonth, g3pkannintegMeasHour=g3pkannintegMeasHour, g3atmportpg1TGNumber20=g3atmportpg1TGNumber20, g3esmainServerAIP1=g3esmainServerAIP1, g3statmedproAlarmMin=g3statmedproAlarmMin, g3atmportpg2Tcount=g3atmportpg2Tcount, g3stamediaGatewayStatus74=g3stamediaGatewayStatus74, g3healthPncStat16to3018=g3healthPncStat16to3018, g3atmportpg1TGNumber42=g3atmportpg1TGNumber42, g3secviolate=g3secviolate, g3trunkmemSigGroup=g3trunkmemSigGroup, g3occsumTdelay=g3occsumTdelay, g3atmportpg3Entry=g3atmportpg3Entry, g3ipinterfaceNodeName45=g3ipinterfaceNodeName45, g3tonerecCCMFCRPkOffPN=g3tonerecCCMFCRPkOffPN, g3esparmsNetCommunity14=g3esparmsNetCommunity14, g3atmportpg2SGNumber115=g3atmportpg2SGNumber115, g3atmportpg2SGNumber129=g3atmportpg2SGNumber129, g3trunkgrpWideSupport=g3trunkgrpWideSupport, g3pkipcodecsumG711OutRegion=g3pkipcodecsumG711OutRegion, g3statstaConnPort6=g3statstaConnPort6, g3pkprincipalCallsCAC=g3pkprincipalCallsCAC, g3stamediaGatewayStatus28=g3stamediaGatewayStatus28, g3atmpncEntry=g3atmpncEntry, g3pkannintegTcount=g3pkannintegTcount, g3bulletinDate54=g3bulletinDate54, g3cbctrunkCallsQueued=g3cbctrunkCallsQueued, g3statmedproSubnetMask=g3statmedproSubnetMask, g3ipinterfaceNodeName55=g3ipinterfaceNodeName55, g3callratemediaBsyCalCmpl=g3callratemediaBsyCalCmpl, g3pnblockEntry=g3pnblockEntry, g3atmportpg3TGNumber215=g3atmportpg3TGNumber215, g3statstaConnPort1=g3statstaConnPort1, g3pkloadoutTdelay=g3pkloadoutTdelay, g3pkprincipalTretrieve=g3pkprincipalTretrieve, g3pkloadincTage=g3pkloadincTage, g3callratesrvNumCallsYesterday=g3callratesrvNumCallsYesterday, g3bulletinDate21=g3bulletinDate21, g3routepatternTGNumber5=g3routepatternTGNumber5, g3ipinterfaceNodeName24=g3ipinterfaceNodeName24, g3ipinterfaceNodeName35=g3ipinterfaceNodeName35, g3esparmsNetCommunity11=g3esparmsNetCommunity11, g3gatewayG350ModTypeV7=g3gatewayG350ModTypeV7, g3pkloadtanEntry=g3pkloadtanEntry, g3atmportpg3SGNumber243=g3atmportpg3SGNumber243, g3annall=g3annall, g3stamediaGatewayStatus22=g3stamediaGatewayStatus22, g3pkloadincTcount=g3pkloadincTcount, g3bulletinMessage5=g3bulletinMessage5, g3mediacfgCode=g3mediacfgCode, g3ipinterfaceNodeName17=g3ipinterfaceNodeName17, g3statmedproStandbyRefreshed=g3statmedproStandbyRefreshed, g3atmportpg1SGNumber32=g3atmportpg1SGNumber32, g3ipunregStatReg=g3ipunregStatReg, g3siggroupBoard12=g3siggroupBoard12, g3esparms=g3esparms, g3bulletinMessage7=g3bulletinMessage7, g3ipinterfaceSlot3=g3ipinterfaceSlot3, g3ipinterfaceSlot44=g3ipinterfaceSlot44, g3gatewayRecoveryRule=g3gatewayRecoveryRule, g3statlinkTage=g3statlinkTage, g3atmportpg3LSGNumber5=g3atmportpg3LSGNumber5, g3ipserverPrimIP1=g3ipserverPrimIP1, g3pktrunkwbsumTdelay=g3pktrunkwbsumTdelay, g3ipinterfaceSlot31=g3ipinterfaceSlot31, g3ipserverPrimCntlState=g3ipserverPrimCntlState, g3callratetotalTretrieve=g3callratetotalTretrieve, g3pkclansocsumTdelay=g3pkclansocsumTdelay, g3pkloadoutOutIncomingPeg=g3pkloadoutOutIncomingPeg, g3esmainTretrieve=g3esmainTretrieve, g3atmportpg2TGNumber123=g3atmportpg2TGNumber123, g3principalCallsCSCB=g3principalCallsCSCB, g3eventdayLastMonth=g3eventdayLastMonth, g3esserversServerBIP4=g3esserversServerBIP4, g3atmportpg2SGNumber141=g3atmportpg2SGNumber141, g3health=g3health, g3occsumIncAtt=g3occsumIncAtt, g3pnchealthPncAIntrIdx=g3pnchealthPncAIntrIdx, g3busytrkLastError=g3busytrkLastError, g3healthPncStat31to4429=g3healthPncStat31to4429, g3callratedataBsyCalCmplYesterday2=g3callratedataBsyCalCmplYesterday2, g3loadtan=g3loadtan, g3pkprincipalCallsCSAC=g3pkprincipalCallsCSAC, g3alarmsPort=g3alarmsPort, g3pkloadincIncIntraPNUse=g3pkloadincIncIntraPNUse, g3trunksumTretrieve=g3trunksumTretrieve, g3atmportpg1TGNumber81=g3atmportpg1TGNumber81, g3callratevoiceBsyIntScToday=g3callratevoiceBsyIntScToday, g3callratevoiceBsyIntMnYesterday=g3callratevoiceBsyIntMnYesterday, g3clientSubmapType=g3clientSubmapType, g3pkloadintHour=g3pkloadintHour, g3atmportpg2TGNumber178=g3atmportpg2TGNumber178, g3cbctrunkTotSeize=g3cbctrunkTotSeize, g3pktonerecsumDTMFTQueue=g3pktonerecsumDTMFTQueue, g3annintegCallsQueued=g3annintegCallsQueued)
mibBuilder.exportSymbols("G3-AVAYA-MIB", g3stamediaGatewayStatus77=g3stamediaGatewayStatus77, g3atmportpg1SGNumber33=g3atmportpg1SGNumber33, g3trunkwbsumTintvl=g3trunkwbsumTintvl, g3atmportpg2TGNumber118=g3atmportpg2TGNumber118, g3atmlatencyYear=g3atmlatencyYear, g3atmportpg3SGNumber209=g3atmportpg3SGNumber209, g3cabinetRack=g3cabinetRack, g3trunkwbsumGrpOvfl=g3trunkwbsumGrpOvfl, g3pkannallHour=g3pkannallHour, g3nodenameType=g3nodenameType, g3secviolateTrkInvalidSSC=g3secviolateTrkInvalidSSC, g3pkatmlatencyPNOrig1=g3pkatmlatencyPNOrig1, g3ipinterfaceSlot12=g3ipinterfaceSlot12, g3atmportpg2SGNumber155=g3atmportpg2SGNumber155, g3clansocsumTage=g3clansocsumTage, g3busybrdPortVal=g3busybrdPortVal, g3statstaMaintBusy=g3statstaMaintBusy, g3atmportpg1TGNumber27=g3atmportpg1TGNumber27, g3bulletinDate29=g3bulletinDate29, g3healthPncStat31to4430=g3healthPncStat31to4430, g3attdposTdelay=g3attdposTdelay, g3siggroupBoard18=g3siggroupBoard18, g3ipinterfaceTintvl=g3ipinterfaceTintvl, g3portEntry=g3portEntry, g3loadtanTanIntraPNUse=g3loadtanTanIntraPNUse, g3atmportpg1SGNumber17=g3atmportpg1SGNumber17, g3configPort5=g3configPort5, g3clientConnectStatus=g3clientConnectStatus, g3rpatcfgPattern13=g3rpatcfgPattern13, g3atmportpg1Tintvl=g3atmportpg1Tintvl, g3atmportpg2TGNumber117=g3atmportpg2TGNumber117, g3atmtrunkEntry=g3atmtrunkEntry, g3busybrdAltName=g3busybrdAltName, g3pkloadtotalPNUtil=g3pkloadtotalPNUtil, g3pkatmlatencyTdelay=g3pkatmlatencyTdelay, g3vintageSpeArelease=g3vintageSpeArelease, g3pnblockMonth=g3pnblockMonth, g3cabinetTdelay=g3cabinetTdelay, g3ipcodecsumG711OutRegion=g3ipcodecsumG711OutRegion, g3pnblockTdmUsage=g3pnblockTdmUsage, g3callratesrv=g3callratesrv, g3secviolateTtlInvalidSSC=g3secviolateTtlInvalidSSC, g3pkpnblockTage=g3pkpnblockTage, g3atmportpg3TGNumber209=g3atmportpg3TGNumber209, g3esmainServerAId=g3esmainServerAId, g3acaTdelay=g3acaTdelay, g3attdgrpRunYear=g3attdgrpRunYear, g3atmportpg1SGNumber51=g3atmportpg1SGNumber51, g3vintageSpeAupID=g3vintageSpeAupID, g3atmportpg1TGNumber62=g3atmportpg1TGNumber62, g3eventdayTcount=g3eventdayTcount, g3occsumTintvl=g3occsumTintvl, g3ipregionTcount=g3ipregionTcount, g3pnchealthPncAMinor=g3pnchealthPncAMinor, g3pksnblock=g3pksnblock, g3esserversTintvl=g3esserversTintvl, g3healthCab16to3022=g3healthCab16to3022, g3pkipcodecsumG711InRegion=g3pkipcodecsumG711InRegion, g3configPort17=g3configPort17, g3attdpos=g3attdpos, g3bulletinTintvl=g3bulletinTintvl, g3ipinterfaceNodeName54=g3ipinterfaceNodeName54, g3vintageAOActivate=g3vintageAOActivate, g3atmportpg3TGNumber232=g3atmportpg3TGNumber232, g3ipserverSecServState=g3ipserverSecServState, g3atmportpg1TGNumber18=g3atmportpg1TGNumber18, g3atmcfgTintvl=g3atmcfgTintvl, g3ipserverSecServer=g3ipserverSecServer, g3esparmsNetCommunity42=g3esparmsNetCommunity42, g3healthCab31to4430=g3healthCab31to4430, g3pkpnblockTimeSlots=g3pkpnblockTimeSlots, g3ipinterfaceNodeName51=g3ipinterfaceNodeName51, g3stationcfgEntry=g3stationcfgEntry, g3callratemediaBsyIntMnYesterday2=g3callratemediaBsyIntMnYesterday2, g3covpathPoint6Aband=g3covpathPoint6Aband, g3trunkgrpNumber=g3trunkgrpNumber, g3errorsTcount=g3errorsTcount, g3statregionTage=g3statregionTage, g3cbctrunkQueueSize=g3cbctrunkQueueSize, g3trkgrpmemTage=g3trkgrpmemTage, g3pkpnblockMeasHour=g3pkpnblockMeasHour, g3loadtanTanIncomingUse=g3loadtanTanIncomingUse, g3loadtanTretrieve=g3loadtanTretrieve, g3pkipcodecsumMeasHour=g3pkipcodecsumMeasHour, g3pkmmisumEntry=g3pkmmisumEntry, g3pkatmlatencyCount1A=g3pkatmlatencyCount1A, g3pkpnblockDay=g3pkpnblockDay, g3ipnetregionRSVPProfile=g3ipnetregionRSVPProfile, g3tonerecsumDTMFPQueue=g3tonerecsumDTMFPQueue, g3esparmsTcount=g3esparmsTcount, g3atmportpg2TGNumber106=g3atmportpg2TGNumber106, g3trunksumPercentOutBlk=g3trunksumPercentOutBlk, g3esmsumTage=g3esmsumTage, g3bulletinDate12=g3bulletinDate12, g3atmportpg2TGNumber169=g3atmportpg2TGNumber169, g3pkannallMaxPorts=g3pkannallMaxPorts, g3pksnblockYear=g3pksnblockYear, g3ipinterfaceSlot45=g3ipinterfaceSlot45, g3stamediaGatewayStatus16=g3stamediaGatewayStatus16, g3healthIdleOcc=g3healthIdleOcc, g3agent=g3agent, g3configPort20=g3configPort20, g3rpatMonth=g3rpatMonth, g3atmpncPncNameB=g3atmpncPncNameB, g3trunkgrpDCSSigType=g3trunkgrpDCSSigType, g3atmportpg1SGNumber48=g3atmportpg1SGNumber48, g3atmportpg3TGNumber206=g3atmportpg3TGNumber206, g3statlinkEntry=g3statlinkEntry, g3trunksumEntry=g3trunksumEntry, g3atmportpg2TGNumber126=g3atmportpg2TGNumber126, g3callratetotalTdelay=g3callratetotalTdelay, g3callratetotalBsyIntMnYesterday=g3callratetotalBsyIntMnYesterday, g3healthPncStat1to157=g3healthPncStat1to157, g3bulletinMessage34=g3bulletinMessage34, g3esparmsNetCommunity60=g3esparmsNetCommunity60, g3huntCallsAns=g3huntCallsAns, g3bulletinDate32=g3bulletinDate32, g3ipsignalHourPktsLostPct=g3ipsignalHourPktsLostPct, g3ipinterfaceSlot5=g3ipinterfaceSlot5, g3pkclansocsumPctDenial=g3pkclansocsumPctDenial, g3mgrecruleGatewayName=g3mgrecruleGatewayName, g3routepatternTGNumber15=g3routepatternTGNumber15, g3attdgrpRunMonth=g3attdgrpRunMonth, g3stamediaGatewayStatus46=g3stamediaGatewayStatus46, g3trunkstaTrunkGroup=g3trunkstaTrunkGroup, g3pktonerecTable=g3pktonerecTable, g3pksnblockTimeSlots=g3pksnblockTimeSlots, g3ipintlistTage=g3ipintlistTage, g3fiberlinkE2ADs1Board=g3fiberlinkE2ADs1Board, g3busytrkTable=g3busytrkTable, g3ipinterfaceSlot15=g3ipinterfaceSlot15, g3ipcodecsumG711InRegion=g3ipcodecsumG711InRegion, g3pkpnblockPNlinkBlockage=g3pkpnblockPNlinkBlockage, g3siggroupIntfNum19=g3siggroupIntfNum19, g3ipinterfaceTretrieve=g3ipinterfaceTretrieve, g3datamodName=g3datamodName, g3pktrunkoutOutages=g3pktrunkoutOutages, g3lsplistTcount=g3lsplistTcount, g3stamediaGatewayStatus80=g3stamediaGatewayStatus80, g3statmedproTintvl=g3statmedproTintvl, g3loadincIncIntraPNPeg=g3loadincIncIntraPNPeg, g3loadincIncOutgoingPeg=g3loadincIncOutgoingPeg, g3eventdayTdelay=g3eventdayTdelay, g3errorsAuxData=g3errorsAuxData, g3loadtotalDay=g3loadtotalDay, g3ipinterfaceNodeName85=g3ipinterfaceNodeName85, g3pkesmsumAvailableUsage=g3pkesmsumAvailableUsage, g3principalMeasHour=g3principalMeasHour, g3fiberlinkE1BBoard=g3fiberlinkE1BBoard, g3filterCabinet=g3filterCabinet, g3atmportpg2TGNumber148=g3atmportpg2TGNumber148, g3busyrlsTrunkGroup=g3busyrlsTrunkGroup, g3statmedproDSPChanStatus2=g3statmedproDSPChanStatus2, g3gatewayG350ModTypeV2=g3gatewayG350ModTypeV2, g3cartypeCab1CarEType=g3cartypeCab1CarEType, g3atmportpg2TGNumber125=g3atmportpg2TGNumber125, g3loadtotalMonth=g3loadtotalMonth, g3clanether=g3clanether, g3trunkgrpDirection=g3trunkgrpDirection, g3atmportpg2TGNumber137=g3atmportpg2TGNumber137, g3tonerecCCCPTRPkOffPN=g3tonerecCCCPTRPkOffPN, g3atmportpg2SGNumber121=g3atmportpg2SGNumber121, g3cartypeCab1CarDType=g3cartypeCab1CarDType, g3atmportpg3SGNumber238=g3atmportpg3SGNumber238, g3dmoduleTretrieve=g3dmoduleTretrieve, g3pkatmlatencyCount1B=g3pkatmlatencyCount1B, g3atmportpg3TGNumber196=g3atmportpg3TGNumber196, g3filterMediaGateway=g3filterMediaGateway, g3ipregion=g3ipregion, g3loadtanTage=g3loadtanTage, g3ds1Name=g3ds1Name, g3routepatternTGNumber9=g3routepatternTGNumber9, g3atmportpg2SGNumber119=g3atmportpg2SGNumber119, g3nodenameIP1=g3nodenameIP1, g3atmportpg2Location=g3atmportpg2Location, g3atmportpg1TGNumber60=g3atmportpg1TGNumber60, g3huntTdelay=g3huntTdelay, g3ipinterfaceNodeName83=g3ipinterfaceNodeName83, g3busybrdObject=g3busybrdObject, g3secviolateEntry=g3secviolateEntry, g3tonerecsumCCTTRTReq=g3tonerecsumCCTTRTReq, g3busytrkPort=g3busytrkPort, g3pkvoicesumVoiceUsage=g3pkvoicesumVoiceUsage, g3deftimeTintvl=g3deftimeTintvl, g3atmportpg3TGNumber243=g3atmportpg3TGNumber243, g3pkannallMaxCall=g3pkannallMaxCall, g3statstaSerialNbr=g3statstaSerialNbr, g3annallAnnNbr=g3annallAnnNbr, g3loadtanTanIncomingPeg=g3loadtanTanIncomingPeg, g3gatewayG700ModTypeV2=g3gatewayG700ModTypeV2, g3fiberlinkE2ABoard=g3fiberlinkE2ABoard, g3bulletinMessage41=g3bulletinMessage41, g3esparmsNetCommunity62=g3esparmsNetCommunity62, g3routepatternEntry=g3routepatternEntry, g3callratetotalBsyIntScYesterday2=g3callratetotalBsyIntScYesterday2, g3pkannallMeasHour=g3pkannallMeasHour, g3stamedlistTintvl=g3stamedlistTintvl, g3loadtotalTintvl=g3loadtotalTintvl, g3atmportpg1SGNumber34=g3atmportpg1SGNumber34, g3atmportpg2SGNumber144=g3atmportpg2SGNumber144, g3secviolateYear=g3secviolateYear, g3esmsumMonth=g3esmsumMonth, g3statmedproDSPChanStatus7=g3statmedproDSPChanStatus7, g3filterPortNetwork=g3filterPortNetwork, g3pkvoicesumTotalDenials=g3pkvoicesumTotalDenials, g3ipserverTretrieve=g3ipserverTretrieve, g3agentCLANIP=g3agentCLANIP, g3bulletinMessage40=g3bulletinMessage40, g3pkrpatCallsBlocked=g3pkrpatCallsBlocked, directory=directory, g3stamediaGatewayStatus52=g3stamediaGatewayStatus52, g3atmportpg1SGNumber7=g3atmportpg1SGNumber7, g3atmportpg1Tretrieve=g3atmportpg1Tretrieve, g3atmportpg2SGNumber113=g3atmportpg2SGNumber113, g3pkrpatTretrieve=g3pkrpatTretrieve, g3_products=g3_products, g3portId=g3portId, g3vintageOSSNumber2=g3vintageOSSNumber2, g3siggroupGrpNbr=g3siggroupGrpNbr, g3routepatternTGNumber2=g3routepatternTGNumber2, g3trunksumQueAbd=g3trunksumQueAbd, g3vintageTage=g3vintageTage, g3atmportpg3SGNumber214=g3atmportpg3SGNumber214, g3commlinkEntry=g3commlinkEntry, g3snblockEntry=g3snblockEntry, g3ipcodecsumRegion=g3ipcodecsumRegion, g3callratesrvBsyIntMnYesterday=g3callratesrvBsyIntMnYesterday, g3clientState=g3clientState, g3principalTintvl=g3principalTintvl, g3atmportpg2SGNumber130=g3atmportpg2SGNumber130, g3pkloadtanTanIncomingUse=g3pkloadtanTanIncomingUse, g3atmportpg1SGNumber82=g3atmportpg1SGNumber82, g3atmportpg2SGNumber101=g3atmportpg2SGNumber101, g3atmportpg3SGNumber182=g3atmportpg3SGNumber182, g3trunksumRunYear=g3trunksumRunYear, g3servalmSource=g3servalmSource, g3busybrd=g3busybrd, g3ipnetregionTdelay=g3ipnetregionTdelay)
