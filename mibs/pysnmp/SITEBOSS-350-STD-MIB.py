#
# PySNMP MIB module SITEBOSS-350-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SITEBOSS-350-STD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:56:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
asentria, = mibBuilder.importSymbols("ASENTRIA-ROOT-MIB", "asentria")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, ModuleIdentity, NotificationType, Bits, IpAddress, Counter64, Counter32, TimeTicks, iso, Gauge32, Unsigned32, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Bits", "IpAddress", "Counter64", "Counter32", "TimeTicks", "iso", "Gauge32", "Unsigned32", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
s350 = ModuleIdentity((1, 3, 6, 1, 4, 1, 3052, 18))
s350.setRevisions(('2014-12-11 04:11', '2014-10-16 04:10', '2014-10-03 04:09', '2014-08-14 04:08', '2014-07-03 04:07', '2014-06-24 04:06', '2014-06-17 04:05', '2014-04-11 04:04', '2014-01-17 04:03', '2013-12-04 04:02', '2013-10-16 04:01', '2013-08-19 04:00',))
if mibBuilder.loadTexts: s350.setLastUpdated('201412110411Z')
if mibBuilder.loadTexts: s350.setOrganization('Asentria Corporation')
s350Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 0))
status = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1))
eventSensorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1))
dataEventStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 2))
powerDistributionStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5))
pdNextGen = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4))
pdSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 5))
fuelSensorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6))
wirelessModemStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7))
acPowerMonitorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8))
batteryMonitorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10))
config = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2))
eventSensorBasics = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1))
eventSensorPointConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2))
serialPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3))
network = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4))
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1))
ethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1))
ethernet1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1))
eth1VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5))
eth1VLAN1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 1))
eth1VLAN2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 2))
eth1VLAN3 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 3))
eth1VLAN4 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 4))
eth1VLAN5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 5))
eth1VLAN6 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 6))
eth1IPv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7))
eth1IPv6Static = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 2))
eth1IPv6Auto = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 3))
ethernet2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2))
eth2VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5))
eth2VLAN1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 1))
eth2VLAN2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 2))
eth2VLAN3 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 3))
eth2VLAN4 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 4))
eth2VLAN5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 5))
eth2VLAN6 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 6))
eth2IPv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7))
eth2IPv6Static = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 2))
eth2IPv6Auto = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 3))
snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8))
snmpNotificationTx = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 7))
snmpProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8))
snmpPoll = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9))
ftpPush = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9))
routing = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 11))
netSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 12))
ipRestriction = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 12, 1))
trap = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14))
trapInclude = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14, 1))
wireless = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16))
wirelessConnectivity = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 20))
email = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 17))
netAdvanced = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 18))
web = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 19))
ipv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 21))
cpe = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22))
time = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 8))
console = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 10))
unitSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11))
secCore = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 1))
secFactory = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 3))
event = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12))
evCore = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1))
evLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 3))
evMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 4))
evSched1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5))
evSched2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6))
evNoSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 9))
fuelSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11))
acPowerMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12))
batteryMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14))
evLocation = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15))
evReset = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 16))
evSleep = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 17))
evGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 18))
accessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21))
action = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14))
actionSched = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 3))
actionAsentria = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 4))
sys = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16))
sysTime = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1))
sysTimeNet = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 4))
sysPT = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 2))
sysTimeStamp = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 8))
sysLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 9))
sysCRDB = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10))
sysLoc = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 14))
sysSleep = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16))
sysSleepSleep = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 2))
sysSleepWake = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 3))
sysSleepPowerDetectCC = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 4))
sysFileTransfer = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 17))
sysUpdate = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 18))
auditLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17))
scripting = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18))
generator = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19))
genSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1))
genSetRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2))
genSetCC = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 3))
genRun = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2))
genRunNonstartEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 7))
calendar = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20))
productIds = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 18, 3))
esPointTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1), )
if mibBuilder.loadTexts: esPointTable.setStatus('current')
esPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "esIndexES"), (0, "SITEBOSS-350-STD-MIB", "esIndexPC"), (0, "SITEBOSS-350-STD-MIB", "esIndexPoint"))
if mibBuilder.loadTexts: esPointEntry.setStatus('current')
esIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexES.setStatus('current')
esIndexPC = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexPC.setStatus('current')
esIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexPoint.setStatus('current')
esPointName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointName.setStatus('current')
esPointInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointInEventState.setStatus('current')
esPointValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointValueInt.setStatus('current')
esPointValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointValueStr.setStatus('current')
esPointTimeLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointTimeLastChange.setStatus('current')
esPointTimetickLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointTimetickLastChange.setStatus('current')
esPointAliasValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointAliasValueStr.setStatus('current')
deStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 1, 2, 1), )
if mibBuilder.loadTexts: deStatusTable.setStatus('current')
deStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 1, 2, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "deStatusIndex"))
if mibBuilder.loadTexts: deStatusEntry.setStatus('current')
deStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deStatusIndex.setStatus('current')
deStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deStatusName.setStatus('current')
deStatusCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deStatusCounter.setStatus('current')
deStatusThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deStatusThreshold.setStatus('current')
pdConfig = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdConfig.setStatus('current')
pdnTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1), )
if mibBuilder.loadTexts: pdnTable.setStatus('current')
pdnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "pdnIndexPD"), (0, "SITEBOSS-350-STD-MIB", "pdnIndexOutput"))
if mibBuilder.loadTexts: pdnEntry.setStatus('current')
pdnIndexPD = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIndexPD.setStatus('current')
pdnIndexOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIndexOutput.setStatus('current')
pdnConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnConfig.setStatus('current')
pdnMainCurrentInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentInEventState.setStatus('current')
pdnMainCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentValue.setStatus('current')
pdnMainCurrentValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentValueStr.setStatus('current')
pdnMainCurrentDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentDeadband.setStatus('current')
pdnMainCurrentVHighCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentVHighCurrent.setStatus('current')
pdnMainCurrentHighCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentHighCurrent.setStatus('current')
pdnMainCurrentLowCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentLowCurrent.setStatus('current')
pdnMainCurrentVLowCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentVLowCurrent.setStatus('current')
pdnMainVoltageInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageInEventState.setStatus('current')
pdnMainVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageValue.setStatus('current')
pdnMainVoltageValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageValueStr.setStatus('current')
pdnMainVoltageDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageDeadband.setStatus('current')
pdnMainVoltageVHighVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageVHighVoltage.setStatus('current')
pdnMainVoltageHighVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageHighVoltage.setStatus('current')
pdnMainVoltageLowVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageLowVoltage.setStatus('current')
pdnMainVoltageVLowVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageVLowVoltage.setStatus('current')
pdnMainPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainPowerValue.setStatus('current')
pdnMainPowerValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainPowerValueStr.setStatus('current')
pdnOutputCurrentInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentInEventState.setStatus('current')
pdnOutputCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentValue.setStatus('current')
pdnOutputCurrentValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentValueStr.setStatus('current')
pdnOutputCurrentDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentDeadband.setStatus('current')
pdnOutputCurrentVHighCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentVHighCurrent.setStatus('current')
pdnOutputCurrentHighCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentHighCurrent.setStatus('current')
pdnOutputCurrentLowCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentLowCurrent.setStatus('current')
pdnOutputCurrentVLowCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentVLowCurrent.setStatus('current')
pdnOutputFuseInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputFuseInEventState.setStatus('current')
pdnOutputFuseValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputFuseValueStr.setStatus('current')
pdnMainCombinedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCombinedStatus.setStatus('current')
pdnOutputCombinedStatusBlock1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCombinedStatusBlock1.setStatus('current')
pdnOutputCombinedStatusBlock2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCombinedStatusBlock2.setStatus('current')
pdnDeviceCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDeviceCurrentValue.setStatus('current')
pdnDeviceCurrentValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 4, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDeviceCurrentValueStr.setStatus('current')
pdSystemCurrent = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdSystemCurrent.setStatus('current')
pdSystemPower = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 5, 5, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdSystemPower.setStatus('current')
fsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1), )
if mibBuilder.loadTexts: fsStatusTable.setStatus('current')
fsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsStatusIndex"))
if mibBuilder.loadTexts: fsStatusEntry.setStatus('current')
fsStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusIndex.setStatus('current')
fsStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusName.setStatus('current')
fsStatusDeviceState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusDeviceState.setStatus('current')
fsStatusVolumeValueString = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusVolumeValueString.setStatus('current')
fsStatusVolumePercentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusVolumePercentLevel.setStatus('current')
fsStatusVolumeInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusVolumeInEventState.setStatus('current')
fsStatusCombined = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 6, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusCombined.setStatus('current')
wmsStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsStatus.setStatus('current')
wmsSignal = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsSignal.setStatus('current')
wmsRSSI = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsRSSI.setStatus('current')
wmsBER = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsBER.setStatus('current')
wmsUpdated = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsUpdated.setStatus('current')
wmsRegistration = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsRegistration.setStatus('current')
wmsLAC = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsLAC.setStatus('current')
wmsCellID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCellID.setStatus('current')
wmsIMSI = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsIMSI.setStatus('current')
wmsPhnum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPhnum.setStatus('current')
wmsLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsLocalIP.setStatus('current')
wmsMgfID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsMgfID.setStatus('current')
wmsModelID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsModelID.setStatus('current')
wmsIMEI = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsIMEI.setStatus('current')
wmsRevID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsRevID.setStatus('current')
wmsNetName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsNetName.setStatus('current')
wmsGPRSStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsGPRSStatus.setStatus('current')
wmsBand = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsBand.setStatus('current')
wmsChannel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsChannel.setStatus('current')
wmsCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCountryCode.setStatus('current')
wmsNetCode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsNetCode.setStatus('current')
wmsPLMNColor = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPLMNColor.setStatus('current')
wmsBScolor = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsBScolor.setStatus('current')
wmsMpRACH = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsMpRACH.setStatus('current')
wmsMinRxLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsMinRxLevel.setStatus('current')
wmsBaseCoeff = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsBaseCoeff.setStatus('current')
wmsSIMStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsSIMStatus.setStatus('current')
wmsICCID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsICCID.setStatus('current')
wmsModemType = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 1, 7, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsModemType.setStatus('current')
acpmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1), )
if mibBuilder.loadTexts: acpmStatusTable.setStatus('current')
acpmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acpmsIndex"))
if mibBuilder.loadTexts: acpmStatusEntry.setStatus('current')
acpmsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsIndex.setStatus('current')
acpmsName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsName.setStatus('current')
acpmsAvgVoltageValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageValueStr.setStatus('current')
acpmsAvgVoltageMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageMinStr.setStatus('current')
acpmsAvgVoltageMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageMaxStr.setStatus('current')
acpmsAvgVoltageAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageAvgStr.setStatus('current')
acpmsAvgVoltageInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageInEventState.setStatus('current')
acpmsVoltagePhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsVoltagePhaseAValueStr.setStatus('current')
acpmsVoltagePhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsVoltagePhaseBValueStr.setStatus('current')
acpmsVoltagePhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsVoltagePhaseCValueStr.setStatus('current')
acpmsAvgCurrentValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentValueStr.setStatus('current')
acpmsAvgCurrentMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentMinStr.setStatus('current')
acpmsAvgCurrentMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentMaxStr.setStatus('current')
acpmsAvgCurrentAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentAvgStr.setStatus('current')
acpmsAvgCurrentInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentInEventState.setStatus('current')
acpmsCurrentPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsCurrentPhaseAValueStr.setStatus('current')
acpmsCurrentPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsCurrentPhaseBValueStr.setStatus('current')
acpmsCurrentPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsCurrentPhaseCValueStr.setStatus('current')
acpmsAvgFreqValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqValueStr.setStatus('current')
acpmsAvgFreqMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqMinStr.setStatus('current')
acpmsAvgFreqMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqMaxStr.setStatus('current')
acpmsAvgFreqAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqAvgStr.setStatus('current')
acpmsAvgFreqInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqInEventState.setStatus('current')
acpmsTRPValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPValueStr.setStatus('current')
acpmsTRPMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPMinStr.setStatus('current')
acpmsTRPMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPMaxStr.setStatus('current')
acpmsTRPAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPAvgStr.setStatus('current')
acpmsTRPInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPInEventState.setStatus('current')
acpmsRPPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRPPhaseAValueStr.setStatus('current')
acpmsRPPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRPPhaseBValueStr.setStatus('current')
acpmsRPPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRPPhaseCValueStr.setStatus('current')
acpmsCombined = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsCombined.setStatus('current')
acpmsTPFValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFValueStr.setStatus('current')
acpmsTPFMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFMinStr.setStatus('current')
acpmsTPFMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFMaxStr.setStatus('current')
acpmsTPFAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFAvgStr.setStatus('current')
acpmsTPFInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFInEventState.setStatus('current')
acpmsPFPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsPFPhaseAValueStr.setStatus('current')
acpmsPFPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsPFPhaseBValueStr.setStatus('current')
acpmsPFPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsPFPhaseCValueStr.setStatus('current')
acpmsTRcPValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRcPValueStr.setStatus('current')
acpmsTRcPMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 42), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRcPMinStr.setStatus('current')
acpmsTRcPMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRcPMaxStr.setStatus('current')
acpmsTRcPAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRcPAvgStr.setStatus('current')
acpmsRcPPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRcPPhaseAValueStr.setStatus('current')
acpmsRcPPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRcPPhaseBValueStr.setStatus('current')
acpmsRcPPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRcPPhaseCValueStr.setStatus('current')
acpmsTAPValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTAPValueStr.setStatus('current')
acpmsTAPMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTAPMinStr.setStatus('current')
acpmsTAPMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTAPMaxStr.setStatus('current')
acpmsTAPAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTAPAvgStr.setStatus('current')
acpmsAPPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAPPhaseAValueStr.setStatus('current')
acpmsAPPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAPPhaseBValueStr.setStatus('current')
acpmsAPPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 54), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAPPhaseCValueStr.setStatus('current')
acpmsTotalEnergyWh = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTotalEnergyWh.setStatus('current')
acpmsTotalEnergyVAR = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTotalEnergyVAR.setStatus('current')
acpmsTotalEnergyVA = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 8, 1, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTotalEnergyVA.setStatus('current')
bmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1), )
if mibBuilder.loadTexts: bmStatusTable.setStatus('current')
bmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmsIndex"))
if mibBuilder.loadTexts: bmStatusEntry.setStatus('current')
bmsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsIndex.setStatus('current')
bmsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsEnable.setStatus('current')
bmsName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsName.setStatus('current')
bmsState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsState.setStatus('current')
bmsStringState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsStringState.setStatus('current')
bmsTempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsTempValue.setStatus('current')
bmsTempValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsTempValueStr.setStatus('current')
bmsTempEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsTempEvent.setStatus('current')
bmsDiffTempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsDiffTempValue.setStatus('current')
bmsDiffTempValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsDiffTempValueStr.setStatus('current')
bmsDiffTempEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsDiffTempEvent.setStatus('current')
bmsVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsVoltageValue.setStatus('current')
bmsVoltageEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsVoltageEvent.setStatus('current')
bmsDiffVoltValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsDiffVoltValue.setStatus('current')
bmsDiffVoltEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsDiffVoltEvent.setStatus('current')
bmsCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsCurrentValue.setStatus('current')
bmsChargingCurrentEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsChargingCurrentEvent.setStatus('current')
bmsDischargingCurrentEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsDischargingCurrentEvent.setStatus('current')
bmsChargeLevelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsChargeLevelValue.setStatus('current')
bmsChargeLevelEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsChargeLevelEvent.setStatus('current')
bmsJarHealthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsJarHealthValue.setStatus('current')
bmsJarHealthEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsJarHealthEvent.setStatus('current')
bmsCombined = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmsCombined.setStatus('current')
bmsJarStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 2), )
if mibBuilder.loadTexts: bmsJarStatusTable.setStatus('current')
bmJarStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmjsIndexBM"), (0, "SITEBOSS-350-STD-MIB", "bmjsIndexJar"))
if mibBuilder.loadTexts: bmJarStatusEntry.setStatus('current')
bmjsIndexBM = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmjsIndexBM.setStatus('current')
bmjsIndexJar = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmjsIndexJar.setStatus('current')
bmjsVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmjsVoltageValue.setStatus('current')
bmjsTempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmjsTempValue.setStatus('current')
bmjsAdmittanceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmjsAdmittanceValue.setStatus('current')
bmjsAdmittanceChangeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 1, 10, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmjsAdmittanceChangeValue.setStatus('current')
esNumberEventSensors = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberEventSensors.setStatus('current')
esTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2), )
if mibBuilder.loadTexts: esTable.setStatus('current')
esEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "esIndex"))
if mibBuilder.loadTexts: esEntry.setStatus('current')
esIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndex.setStatus('current')
esName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esName.setStatus('current')
esID = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esID.setStatus('current')
esNumberTempSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberTempSensors.setStatus('current')
esTempReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esTempReportingMode.setStatus('current')
esNumberCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberCCs.setStatus('current')
esCCReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCReportingMode.setStatus('current')
esNumberHumidSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberHumidSensors.setStatus('current')
esHumidReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esHumidReportingMode.setStatus('current')
esNumberNoiseSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberNoiseSensors.setStatus('current')
esNoiseReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNoiseReportingMode.setStatus('current')
esNumberAirflowSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberAirflowSensors.setStatus('current')
esAirflowReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAirflowReportingMode.setStatus('current')
esNumberAnalog = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberAnalog.setStatus('current')
esAnalogReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogReportingMode.setStatus('current')
esNumberOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberOutputs.setStatus('current')
esOutputReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esOutputReportingMode.setStatus('current')
esTempCombinedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esTempCombinedStatus.setStatus('current')
esCCCombinedStatusBlock1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock1.setStatus('current')
esCCCombinedStatusBlock2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock2.setStatus('current')
esCCCombinedStatusBlock3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock3.setStatus('current')
esCCCombinedStatusBlock4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock4.setStatus('current')
esCCCombinedStatusBlock5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock5.setStatus('current')
esCCCombinedStatusBlock6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock6.setStatus('current')
esCCCombinedStatusBlock7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock7.setStatus('current')
esCCCombinedStatusBlock8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock8.setStatus('current')
esHumidCombinedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esHumidCombinedStatus.setStatus('current')
esAnalogCombinedStatusBlock1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock1.setStatus('current')
esAnalogCombinedStatusBlock2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock2.setStatus('current')
esAnalogCombinedStatusBlock3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock3.setStatus('current')
esAnalogCombinedStatusBlock4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock4.setStatus('current')
esAnalogCombinedStatusBlock5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock5.setStatus('current')
esAnalogCombinedStatusBlock6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock6.setStatus('current')
esOutputCombinedStatusBlock1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esOutputCombinedStatusBlock1.setStatus('current')
esOutputCombinedStatusBlock2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 2, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esOutputCombinedStatusBlock2.setStatus('current')
esNewSensors = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNewSensors.setStatus('current')
esPointConfigTempTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1), )
if mibBuilder.loadTexts: esPointConfigTempTable.setStatus('current')
esPointConfigTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "espcTempIndexES"), (0, "SITEBOSS-350-STD-MIB", "espcTempIndexPoint"))
if mibBuilder.loadTexts: esPointConfigTempEntry.setStatus('current')
espcTempIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcTempIndexES.setStatus('current')
espcTempIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcTempIndexPoint.setStatus('current')
espcTempEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempEnable.setStatus('current')
espcTempScale = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempScale.setStatus('current')
espcTempDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempDeadband.setStatus('current')
espcTempVHighTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVHighTemp.setStatus('current')
espcTempVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVHighActions.setStatus('current')
espcTempVHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVHighTrapnum.setStatus('current')
espcTempVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVHighClass.setStatus('current')
espcTempHighTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempHighTemp.setStatus('current')
espcTempHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempHighActions.setStatus('current')
espcTempHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempHighTrapnum.setStatus('current')
espcTempHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempHighClass.setStatus('current')
espcTempNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempNormalActions.setStatus('current')
espcTempNormalTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempNormalTrapnum.setStatus('current')
espcTempNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempNormalClass.setStatus('current')
espcTempLowTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempLowTemp.setStatus('current')
espcTempLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempLowActions.setStatus('current')
espcTempLowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempLowTrapnum.setStatus('current')
espcTempLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempLowClass.setStatus('current')
espcTempVLowTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVLowTemp.setStatus('current')
espcTempVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVLowActions.setStatus('current')
espcTempVLowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVLowTrapnum.setStatus('current')
espcTempVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 1, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVLowClass.setStatus('current')
esPointConfigCCTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2), )
if mibBuilder.loadTexts: esPointConfigCCTable.setStatus('current')
esPointConfigCCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "espcCCIndexES"), (0, "SITEBOSS-350-STD-MIB", "espcCCIndexPoint"))
if mibBuilder.loadTexts: esPointConfigCCEntry.setStatus('current')
espcCCIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcCCIndexES.setStatus('current')
espcCCIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcCCIndexPoint.setStatus('current')
espcCCEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEnable.setStatus('current')
espcCCName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCName.setStatus('current')
espcCCEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEventState.setStatus('current')
espcCCThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCThreshold.setStatus('current')
espcCCEventActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEventActions.setStatus('current')
espcCCEventTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEventTrapnum.setStatus('current')
espcCCEventClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEventClass.setStatus('current')
espcCCNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalActions.setStatus('current')
espcCCNormalTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalTrapnum.setStatus('current')
espcCCNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalClass.setStatus('current')
espcCCAlarmAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCAlarmAlias.setStatus('current')
espcCCNormalAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalAlias.setStatus('current')
espcCCNormalThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalThreshold.setStatus('current')
espcCCOverrideGlobalReminder = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCOverrideGlobalReminder.setStatus('current')
espcCCReminderInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCReminderInterval.setStatus('current')
esPointConfigHumidTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3), )
if mibBuilder.loadTexts: esPointConfigHumidTable.setStatus('current')
esPointConfigHumidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "espcHumidIndexES"), (0, "SITEBOSS-350-STD-MIB", "espcHumidIndexPoint"))
if mibBuilder.loadTexts: esPointConfigHumidEntry.setStatus('current')
espcHumidIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcHumidIndexES.setStatus('current')
espcHumidIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcHumidIndexPoint.setStatus('current')
espcHumidEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidEnable.setStatus('current')
espcHumidDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidDeadband.setStatus('current')
espcHumidVHighHumid = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVHighHumid.setStatus('current')
espcHumidVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVHighActions.setStatus('current')
espcHumidVHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVHighTrapnum.setStatus('current')
espcHumidVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVHighClass.setStatus('current')
espcHumidHighHumid = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidHighHumid.setStatus('current')
espcHumidHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidHighActions.setStatus('current')
espcHumidHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidHighTrapnum.setStatus('current')
espcHumidHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidHighClass.setStatus('current')
espcHumidNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidNormalActions.setStatus('current')
espcHumidNormalTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidNormalTrapnum.setStatus('current')
espcHumidNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidNormalClass.setStatus('current')
espcHumidLowHumid = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidLowHumid.setStatus('current')
espcHumidLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidLowActions.setStatus('current')
espcHumidLowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidLowTrapnum.setStatus('current')
espcHumidLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidLowClass.setStatus('current')
espcHumidVLowHumid = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVLowHumid.setStatus('current')
espcHumidVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVLowActions.setStatus('current')
espcHumidVLowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVLowTrapnum.setStatus('current')
espcHumidVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 3, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVLowClass.setStatus('current')
esPointConfigAITable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5), )
if mibBuilder.loadTexts: esPointConfigAITable.setStatus('current')
esPointConfigAIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "espcHumidIndexES"), (0, "SITEBOSS-350-STD-MIB", "espcHumidIndexPoint"))
if mibBuilder.loadTexts: esPointConfigAIEntry.setStatus('current')
espcAIIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcAIIndexES.setStatus('current')
espcAIIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcAIIndexPoint.setStatus('current')
espcAIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIEnable.setStatus('current')
espcAIDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIDeadband.setStatus('current')
espcAIVhighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVhighValue.setStatus('current')
espcAIVhighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVhighActions.setStatus('current')
espcAIVhighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVhighTrapnum.setStatus('current')
espcAIVhighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVhighClass.setStatus('current')
espcAIHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIHighValue.setStatus('current')
espcAIHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIHighActions.setStatus('current')
espcAIHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIHighTrapnum.setStatus('current')
espcAIHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIHighClass.setStatus('current')
espcAINormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAINormalActions.setStatus('current')
espcAINormalTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAINormalTrapnum.setStatus('current')
espcAINormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAINormalClass.setStatus('current')
espcAILowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAILowValue.setStatus('current')
espcAILowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAILowActions.setStatus('current')
espcAILowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAILowTrapnum.setStatus('current')
espcAILowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAILowClass.setStatus('current')
espcAIVlowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVlowValue.setStatus('current')
espcAIVlowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVlowActions.setStatus('current')
espcAIVlowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVlowTrapnum.setStatus('current')
espcAIVlowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVlowClass.setStatus('current')
espcAIConvUnitName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvUnitName.setStatus('current')
espcAIConvHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvHighValue.setStatus('current')
espcAIConvHighUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvHighUnit.setStatus('current')
espcAIConvLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvLowValue.setStatus('current')
espcAIConvLowUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvLowUnit.setStatus('current')
espcAIDisplayFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 5, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIDisplayFormat.setStatus('current')
esPointConfigOutputTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6), )
if mibBuilder.loadTexts: esPointConfigOutputTable.setStatus('current')
esPointConfigOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "espcOutputIndexES"), (0, "SITEBOSS-350-STD-MIB", "espcOutputIndexPoint"))
if mibBuilder.loadTexts: esPointConfigOutputEntry.setStatus('current')
espcOutputIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputIndexES.setStatus('current')
espcOutputIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputIndexPoint.setStatus('current')
espcOutputEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputEnable.setStatus('current')
espcOutputActiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveState.setStatus('current')
espcOutputType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputType.setStatus('current')
espcOutputAliasValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputAliasValue.setStatus('current')
espcOutputAliasColor = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputAliasColor.setStatus('current')
espcOutputActiveAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveAlias.setStatus('current')
espcOutputActiveColor = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveColor.setStatus('current')
espcOutputActiveActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveActions.setStatus('current')
espcOutputActiveTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(150, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveTrapnum.setStatus('current')
espcOutputActiveClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveClass.setStatus('current')
espcOutputInactiveAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveAlias.setStatus('current')
espcOutputInactiveColor = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveColor.setStatus('current')
espcOutputInactiveActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveActions.setStatus('current')
espcOutputInactiveTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(150, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveTrapnum.setStatus('current')
espcOutputInactiveClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 2, 6, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveClass.setStatus('current')
numberPorts = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberPorts.setStatus('current')
portConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2), )
if mibBuilder.loadTexts: portConfigTable.setStatus('current')
portConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "portConfigIndex"))
if mibBuilder.loadTexts: portConfigEntry.setStatus('current')
portConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portConfigIndex.setStatus('current')
portConfigBaud = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigBaud.setStatus('current')
portConfigDataFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigDataFormat.setStatus('current')
portConfigStripPtOutputLfs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigStripPtOutputLfs.setStatus('current')
portConfigStripPtInputLfs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigStripPtInputLfs.setStatus('current')
portConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigId.setStatus('current')
portConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMode.setStatus('current')
portConfigHsk = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 3, 2, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigHsk.setStatus('current')
eth1Mode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1Mode.setStatus('current')
eth1Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1Address.setStatus('current')
eth1SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1SubnetMask.setStatus('current')
eth1Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1Router.setStatus('current')
eth1VLAN1ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN1ID.setStatus('current')
eth1VLAN1Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN1Priority.setStatus('current')
eth1VLAN1Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN1Address.setStatus('current')
eth1VLAN1SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN1SubnetMask.setStatus('current')
eth1VLAN1Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN1Router.setStatus('current')
eth1VLAN2ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN2ID.setStatus('current')
eth1VLAN2Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN2Priority.setStatus('current')
eth1VLAN2Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN2Address.setStatus('current')
eth1VLAN2SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN2SubnetMask.setStatus('current')
eth1VLAN2Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 2, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN2Router.setStatus('current')
eth1VLAN3ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN3ID.setStatus('current')
eth1VLAN3Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN3Priority.setStatus('current')
eth1VLAN3Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN3Address.setStatus('current')
eth1VLAN3SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN3SubnetMask.setStatus('current')
eth1VLAN3Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 3, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN3Router.setStatus('current')
eth1VLAN4ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN4ID.setStatus('current')
eth1VLAN4Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN4Priority.setStatus('current')
eth1VLAN4Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 4, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN4Address.setStatus('current')
eth1VLAN4SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 4, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN4SubnetMask.setStatus('current')
eth1VLAN4Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 4, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN4Router.setStatus('current')
eth1VLAN5ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN5ID.setStatus('current')
eth1VLAN5Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN5Priority.setStatus('current')
eth1VLAN5Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 5, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN5Address.setStatus('current')
eth1VLAN5SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN5SubnetMask.setStatus('current')
eth1VLAN5Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 5, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN5Router.setStatus('current')
eth1VLAN6ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN6ID.setStatus('current')
eth1VLAN6Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN6Priority.setStatus('current')
eth1VLAN6Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 6, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN6Address.setStatus('current')
eth1VLAN6SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 6, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN6SubnetMask.setStatus('current')
eth1VLAN6Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 5, 6, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1VLAN6Router.setStatus('current')
eth1MAC = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1MAC.setStatus('current')
eth1IPv6Mode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1IPv6Mode.setStatus('current')
eth1IPv6StaticAddress = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1IPv6StaticAddress.setStatus('current')
eth1IPv6StaticRouter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1IPv6StaticRouter.setStatus('current')
eth1IPv6AutoAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1IPv6AutoAddress1.setStatus('current')
eth1IPv6AutoAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1IPv6AutoAddress2.setStatus('current')
eth1IPv6AutoAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1IPv6AutoAddress3.setStatus('current')
eth1IPv6AutoAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1IPv6AutoAddress4.setStatus('current')
eth1IPv6LinkLocalAddress = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 1, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1IPv6LinkLocalAddress.setStatus('current')
eth2Mode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2Mode.setStatus('current')
eth2Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2Address.setStatus('current')
eth2SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2SubnetMask.setStatus('current')
eth2Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2Router.setStatus('current')
eth2VLAN1ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN1ID.setStatus('current')
eth2VLAN1Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN1Priority.setStatus('current')
eth2VLAN1Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN1Address.setStatus('current')
eth2VLAN1SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN1SubnetMask.setStatus('current')
eth2VLAN1Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN1Router.setStatus('current')
eth2VLAN2ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN2ID.setStatus('current')
eth2VLAN2Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN2Priority.setStatus('current')
eth2VLAN2Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN2Address.setStatus('current')
eth2VLAN2SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN2SubnetMask.setStatus('current')
eth2VLAN2Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 2, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN2Router.setStatus('current')
eth2VLAN3ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN3ID.setStatus('current')
eth2VLAN3Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN3Priority.setStatus('current')
eth2VLAN3Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN3Address.setStatus('current')
eth2VLAN3SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN3SubnetMask.setStatus('current')
eth2VLAN3Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 3, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN3Router.setStatus('current')
eth2VLAN4ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN4ID.setStatus('current')
eth2VLAN4Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN4Priority.setStatus('current')
eth2VLAN4Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 4, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN4Address.setStatus('current')
eth2VLAN4SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 4, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN4SubnetMask.setStatus('current')
eth2VLAN4Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 4, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN4Router.setStatus('current')
eth2VLAN5ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN5ID.setStatus('current')
eth2VLAN5Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN5Priority.setStatus('current')
eth2VLAN5Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 5, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN5Address.setStatus('current')
eth2VLAN5SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN5SubnetMask.setStatus('current')
eth2VLAN5Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 5, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN5Router.setStatus('current')
eth2VLAN6ID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN6ID.setStatus('current')
eth2VLAN6Priority = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN6Priority.setStatus('current')
eth2VLAN6Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 6, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN6Address.setStatus('current')
eth2VLAN6SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 6, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN6SubnetMask.setStatus('current')
eth2VLAN6Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 5, 6, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2VLAN6Router.setStatus('current')
eth2MAC = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2MAC.setStatus('current')
eth2IPv6Mode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2IPv6Mode.setStatus('current')
eth2IPv6StaticAddress = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2IPv6StaticAddress.setStatus('current')
eth2IPv6StaticRouter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2IPv6StaticRouter.setStatus('current')
eth2IPv6AutoAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2IPv6AutoAddress1.setStatus('current')
eth2IPv6AutoAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2IPv6AutoAddress2.setStatus('current')
eth2IPv6AutoAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2IPv6AutoAddress3.setStatus('current')
eth2IPv6AutoAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2IPv6AutoAddress4.setStatus('current')
eth2IPv6LinkLocalAddress = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 1, 1, 2, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2IPv6LinkLocalAddress.setStatus('current')
defaultRouter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultRouter.setStatus('current')
dnsTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 3), )
if mibBuilder.loadTexts: dnsTable.setStatus('current')
dnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 3, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "dnsIndex"))
if mibBuilder.loadTexts: dnsEntry.setStatus('current')
dnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIndex.setStatus('current')
dnsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsAddress.setStatus('current')
hostname = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostname.setStatus('current')
hostTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 5), )
if mibBuilder.loadTexts: hostTable.setStatus('current')
hostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 5, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "hostIndex"))
if mibBuilder.loadTexts: hostEntry.setStatus('current')
hostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostIndex.setStatus('current')
hostDeclaration = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostDeclaration.setStatus('current')
ncpDuplex = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncpDuplex.setStatus('current')
ncpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncpTimeout.setStatus('current')
snmpAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentEnable.setStatus('current')
snmpNtfnAttempts = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 7, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNtfnAttempts.setStatus('current')
snmpNtfnTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNtfnTimeout.setStatus('current')
snmpNtfnCycles = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 7, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNtfnCycles.setStatus('current')
snmpNtfnSnooze = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 7, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNtfnSnooze.setStatus('current')
snmpProxyTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8, 1), )
if mibBuilder.loadTexts: snmpProxyTable.setStatus('current')
snmpProxyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "snmpProxyIndex"))
if mibBuilder.loadTexts: snmpProxyEntry.setStatus('current')
snmpProxyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpProxyIndex.setStatus('current')
snmpProxyEgressOIDBranch = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpProxyEgressOIDBranch.setStatus('current')
snmpProxyIP = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpProxyIP.setStatus('current')
snmpProxyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpProxyPort.setStatus('current')
snmpProxyIngressOIDBranch = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpProxyIngressOIDBranch.setStatus('current')
snmpProxyName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 8, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpProxyName.setStatus('current')
snmpPMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpPMode.setStatus('current')
snmpPRequestTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4), )
if mibBuilder.loadTexts: snmpPRequestTable.setStatus('current')
snmpPRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "snmpPRequestIndex"))
if mibBuilder.loadTexts: snmpPRequestEntry.setStatus('current')
snmpPRequestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpPRequestIndex.setStatus('current')
snmpPRequestDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpPRequestDescription.setStatus('current')
snmpPRequestAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpPRequestAgent.setStatus('current')
snmpPRequestReadcom = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpPRequestReadcom.setStatus('current')
snmpPRequestOID = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpPRequestOID.setStatus('current')
snmpPRequestPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpPRequestPeriod.setStatus('current')
snmpPRequestResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpPRequestResultStatus.setStatus('current')
snmpPRequestResultValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpPRequestResultValue.setStatus('current')
snmpPRequestResultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpPRequestResultTime.setStatus('current')
snmpPRequestResultType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 8, 9, 4, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpPRequestResultType.setStatus('current')
ftpPushEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushEnable.setStatus('current')
ftpPushServer = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushServer.setStatus('current')
ftpPushAccount = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushAccount.setStatus('current')
ftpPushDirectory = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushDirectory.setStatus('current')
ftpPushperiod = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushperiod.setStatus('current')
ftpPushPushFileTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 8), )
if mibBuilder.loadTexts: ftpPushPushFileTable.setStatus('current')
ftpPushPushFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 8, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "ftpPushPushFileIndex"))
if mibBuilder.loadTexts: ftpPushPushFileEntry.setStatus('current')
ftpPushPushFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpPushPushFileIndex.setStatus('current')
ftpPushPushFile = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 8, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPushFile.setStatus('current')
ftpPushPushAudit = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPushAudit.setStatus('current')
ftpPushPushAlarms = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPushAlarms.setStatus('current')
ftpPushRemoteFileTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 11), )
if mibBuilder.loadTexts: ftpPushRemoteFileTable.setStatus('current')
ftpPushRemoteFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 11, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "ftpPushRemoteFileIndex"))
if mibBuilder.loadTexts: ftpPushRemoteFileEntry.setStatus('current')
ftpPushRemoteFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpPushRemoteFileIndex.setStatus('current')
ftpPushRemoteFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 11, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushRemoteFileName.setStatus('current')
ftpPushRemoteAlarmName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushRemoteAlarmName.setStatus('current')
ftpPushPassive = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPassive.setStatus('current')
ftpPushIncludeDate = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushIncludeDate.setStatus('current')
ftpPushIncludeTime = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushIncludeTime.setStatus('current')
ftpPushIncludeSeq = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushIncludeSeq.setStatus('current')
ftpPushPermissions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 9, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPermissions.setStatus('current')
ethRoutingEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 11, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethRoutingEnable.setStatus('current')
ethRoutingNATEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 11, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethRoutingNATEnable.setStatus('current')
ipRestrictionTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 12, 1, 1), )
if mibBuilder.loadTexts: ipRestrictionTable.setStatus('current')
ipRestrictionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 12, 1, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "ipRestrictionIndex"))
if mibBuilder.loadTexts: ipRestrictionEntry.setStatus('current')
ipRestrictionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 12, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipRestrictionIndex.setStatus('current')
ipRestrictionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipRestrictionEnable.setStatus('current')
ipRestrictionMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 12, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipRestrictionMask.setStatus('current')
trapIncludeDateTime = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeDateTime.setStatus('current')
trapIncludeSiteName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeSiteName.setStatus('current')
trapIncludeSensorID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeSensorID.setStatus('current')
trapIncludeUDName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeUDName.setStatus('current')
trapIncludeUDState = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeUDState.setStatus('current')
trapIncludeSourceAddress = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeSourceAddress.setStatus('current')
trapAuthFailEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 14, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapAuthFailEnable.setStatus('current')
wirelessMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMode.setStatus('current')
wirelessAPN = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessAPN.setStatus('current')
wirelessIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIdleTimeout.setStatus('current')
wirelessPIN = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessPIN.setStatus('current')
wirelessDRE = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessDRE.setStatus('current')
wirelessPPPUsername = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessPPPUsername.setStatus('current')
wirelessFirewall = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessFirewall.setStatus('current')
wirelessKeepaliveThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessKeepaliveThreshold.setStatus('current')
wirelessPPPDebug = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessPPPDebug.setStatus('current')
wirelessConnEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 20, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnEnable.setStatus('current')
wirelessConnCheckInterval = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 20, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnCheckInterval.setStatus('current')
wirelessConnFailThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 20, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnFailThreshold.setStatus('current')
wirelessConnIP1 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 20, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnIP1.setStatus('current')
wirelessConnIP2 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 16, 20, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnIP2.setStatus('current')
emailServer = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 17, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailServer.setStatus('current')
emailDomain = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 17, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailDomain.setStatus('current')
emailAuthEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 17, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailAuthEnable.setStatus('current')
arpFilter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 18, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arpFilter.setStatus('current')
webEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 19, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webEnable.setStatus('current')
webPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 19, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webPort.setStatus('current')
webTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 19, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webTimeout.setStatus('current')
ipv6DefaultRouter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 21, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6DefaultRouter.setStatus('current')
cpeTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1), )
if mibBuilder.loadTexts: cpeTable.setStatus('current')
cpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "cpeIndex"))
if mibBuilder.loadTexts: cpeEntry.setStatus('current')
cpeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeIndex.setStatus('current')
cpeHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeHost.setStatus('current')
cpeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeName.setStatus('current')
cpeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeDescription.setStatus('current')
cpeKeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeKeepalive.setStatus('current')
cpeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeThreshold.setStatus('current')
cpeEventReminderInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeEventReminderInterval.setStatus('current')
cpeKeepaliveTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeKeepaliveTicks.setStatus('current')
cpePingSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpePingSize.setStatus('current')
cpeInfoReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeInfoReset.setStatus('current')
cpeInfoNumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoNumReq.setStatus('current')
cpeInfoNumGoodResp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoNumGoodResp.setStatus('current')
cpeInfoNumBadResp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoNumBadResp.setStatus('current')
cpeInfoNumLostResp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoNumLostResp.setStatus('current')
cpeInfoPercentLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoPercentLoss.setStatus('current')
cpeInfoPercentBad = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 4, 22, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoPercentBad.setStatus('current')
clock = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clock.setStatus('current')
consoleDuplex = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 10, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleDuplex.setStatus('current')
consoleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 10, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleTimeout.setStatus('current')
consoleConfirm = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 10, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleConfirm.setStatus('current')
scShowPasswordPrompt = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scShowPasswordPrompt.setStatus('current')
scConsoleLoginRequired = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scConsoleLoginRequired.setStatus('current')
scAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scAuthMode.setStatus('current')
scRightsGroup = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scRightsGroup.setStatus('current')
scSecret = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scSecret.setStatus('current')
secUserTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2), )
if mibBuilder.loadTexts: secUserTable.setStatus('current')
secUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "secUserIndex"))
if mibBuilder.loadTexts: secUserEntry.setStatus('current')
secUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secUserIndex.setStatus('current')
secUserEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserEnable.setStatus('current')
secUserConnectVia = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserConnectVia.setStatus('current')
secUserLoginTo = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserLoginTo.setStatus('current')
secUserAccessFile = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserAccessFile.setStatus('current')
secUserPTEscapeTo = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserPTEscapeTo.setStatus('current')
secUserRights = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserRights.setStatus('current')
secUserEventsReadAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserEventsReadAccess.setStatus('current')
secUserAuditReadAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserAuditReadAccess.setStatus('current')
secUserEventsWriteAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserEventsWriteAccess.setStatus('current')
secUserAuditWriteAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserAuditWriteAccess.setStatus('current')
secUserExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserExpiration.setStatus('current')
secUserChallengeConsoleMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserChallengeConsoleMode.setStatus('current')
secUserChallengeExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 180))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserChallengeExpiration.setStatus('current')
sfEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfEnable.setStatus('current')
sfSecret = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 11, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfSecret.setStatus('current')
evClassNameTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 1), )
if mibBuilder.loadTexts: evClassNameTable.setStatus('current')
evClassNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "evClassNameIndex"))
if mibBuilder.loadTexts: evClassNameEntry.setStatus('current')
evClassNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evClassNameIndex.setStatus('current')
evClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evClassName.setStatus('current')
evReminderInterval = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evReminderInterval.setStatus('current')
evLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogEnable.setStatus('current')
evLogStoreAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogStoreAlarm.setStatus('current')
evLogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogMaxSize.setStatus('current')
evLogStoreSensor = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogStoreSensor.setStatus('current')
evLogTimeStampAlarms = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogTimeStampAlarms.setStatus('current')
evLogPrependName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 3, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogPrependName.setStatus('current')
evMgmtReprocess = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 1, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evMgmtReprocess.setStatus('current')
evSched1Enable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Enable.setStatus('current')
evSched1Actions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Actions.setStatus('current')
evSched1Message = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Message.setStatus('current')
evSched1TrapNum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1TrapNum.setStatus('current')
evSched1Class = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Class.setStatus('current')
evSched1Sunday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Sunday.setStatus('current')
evSched1Monday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Monday.setStatus('current')
evSched1Tuesday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Tuesday.setStatus('current')
evSched1Wednesday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Wednesday.setStatus('current')
evSched1Thursday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Thursday.setStatus('current')
evSched1Friday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Friday.setStatus('current')
evSched1Saturday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Saturday.setStatus('current')
evSched1Exclusions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 5, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Exclusions.setStatus('current')
evSched2Enable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Enable.setStatus('current')
evSched2Actions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Actions.setStatus('current')
evSched2Message = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Message.setStatus('current')
evSched2TrapNum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2TrapNum.setStatus('current')
evSched2Class = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Class.setStatus('current')
evSched2Sunday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Sunday.setStatus('current')
evSched2Monday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Monday.setStatus('current')
evSched2Tuesday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Tuesday.setStatus('current')
evSched2Wednesday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Wednesday.setStatus('current')
evSched2Thursday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Thursday.setStatus('current')
evSched2Friday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Friday.setStatus('current')
evSched2Saturday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Saturday.setStatus('current')
evSched2Exclusions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 6, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Exclusions.setStatus('current')
evShskLowTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 7), )
if mibBuilder.loadTexts: evShskLowTable.setStatus('current')
evShskLowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 7, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "evShskLowIndex"))
if mibBuilder.loadTexts: evShskLowEntry.setStatus('current')
evShskLowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evShskLowIndex.setStatus('current')
evShskLowEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowEnable.setStatus('current')
evShskLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowActions.setStatus('current')
evShskLowMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowMessage.setStatus('current')
evShskLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowClass.setStatus('current')
evShskLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 7, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowTrapNum.setStatus('current')
evShskHighTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 8), )
if mibBuilder.loadTexts: evShskHighTable.setStatus('current')
evShskHighEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 8, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "evShskHighIndex"))
if mibBuilder.loadTexts: evShskHighEntry.setStatus('current')
evShskHighIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evShskHighIndex.setStatus('current')
evShskHighEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 8, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighEnable.setStatus('current')
evShskHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 8, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighActions.setStatus('current')
evShskHighMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 8, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighMessage.setStatus('current')
evShskHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighClass.setStatus('current')
evShskHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 8, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighTrapNum.setStatus('current')
evNoSensorTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoSensorTimeout.setStatus('current')
evNoSensorActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 9, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoSensorActions.setStatus('current')
evNoSensorTrapNum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 9, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoSensorTrapNum.setStatus('current')
evNoSensorClass = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 9, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoSensorClass.setStatus('current')
fuelSensorGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1), )
if mibBuilder.loadTexts: fuelSensorGeneralTable.setStatus('current')
fsGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsGenIndex"))
if mibBuilder.loadTexts: fsGenEntry.setStatus('current')
fsGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsGenIndex.setStatus('current')
fsGenName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenName.setStatus('current')
fsGenSensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSensorType.setStatus('current')
fsGenDistanceUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenDistanceUnit.setStatus('current')
fsGenRawValueTop = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenRawValueTop.setStatus('current')
fsGenTopOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenTopOffset.setStatus('current')
fsGenRawValueBottom = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenRawValueBottom.setStatus('current')
fsGenBottomOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenBottomOffset.setStatus('current')
fsGenInputES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenInputES.setStatus('current')
fsGenInputPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenInputPoint.setStatus('current')
fsGenFilterAveraging = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenFilterAveraging.setStatus('current')
fsGenSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepEnable.setStatus('current')
fsGenSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepThreshold.setStatus('current')
fsGenSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepLimit.setStatus('current')
fsGenSysrepPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepPackage.setStatus('current')
fsGenSysrepType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepType.setStatus('current')
fsGenEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenEnable.setStatus('current')
fuelSensorTankTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2), )
if mibBuilder.loadTexts: fuelSensorTankTable.setStatus('current')
fsTankEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsTankIndex"))
if mibBuilder.loadTexts: fsTankEntry.setStatus('current')
fsTankIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsTankIndex.setStatus('current')
fsTankHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankHeight.setStatus('current')
fsTankDimA = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankDimA.setStatus('current')
fsTankDimB = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankDimB.setStatus('current')
fsTankVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankVolume.setStatus('current')
fsTankVolumeUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankVolumeUnit.setStatus('current')
fsTankShape = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankShape.setStatus('current')
fuelSensorCustomTankTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 3), )
if mibBuilder.loadTexts: fuelSensorCustomTankTable.setStatus('current')
fsCustomTankEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 3, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsCustomTankIndexFS"), (0, "SITEBOSS-350-STD-MIB", "fsCustomTankIndexDatum"))
if mibBuilder.loadTexts: fsCustomTankEntry.setStatus('current')
fsCustomTankIndexFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsCustomTankIndexFS.setStatus('current')
fsCustomTankIndexDatum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsCustomTankIndexDatum.setStatus('current')
fsCustomTankHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsCustomTankHeight.setStatus('current')
fsCustomTankVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsCustomTankVolume.setStatus('current')
fuelSensorVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4), )
if mibBuilder.loadTexts: fuelSensorVolumeTable.setStatus('current')
fsVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsVolumeIndex"))
if mibBuilder.loadTexts: fsVolumeEntry.setStatus('current')
fsVolumeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsVolumeIndex.setStatus('current')
fsVolumeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeEnable.setStatus('current')
fsVolumeDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeDeadband.setStatus('current')
fsVolumeVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVHighValue.setStatus('current')
fsVolumeVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVHighActions.setStatus('current')
fsVolumeVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVHighTrapNum.setStatus('current')
fsVolumeVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVHighClass.setStatus('current')
fsVolumeHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeHighValue.setStatus('current')
fsVolumeHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeHighActions.setStatus('current')
fsVolumeHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeHighTrapNum.setStatus('current')
fsVolumeHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeHighClass.setStatus('current')
fsVolumeNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeNormalActions.setStatus('current')
fsVolumeNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeNormalTrapNum.setStatus('current')
fsVolumeNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeNormalClass.setStatus('current')
fsVolumeLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeLowValue.setStatus('current')
fsVolumeLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeLowActions.setStatus('current')
fsVolumeLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeLowTrapNum.setStatus('current')
fsVolumeLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeLowClass.setStatus('current')
fsVolumeVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVLowValue.setStatus('current')
fsVolumeVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVLowActions.setStatus('current')
fsVolumeVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVLowTrapNum.setStatus('current')
fsVolumeVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 4, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVLowClass.setStatus('current')
fuelSensorDisconnectTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5), )
if mibBuilder.loadTexts: fuelSensorDisconnectTable.setStatus('current')
fsDiscEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsDiscIndex"))
if mibBuilder.loadTexts: fsDiscEntry.setStatus('current')
fsDiscIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsDiscIndex.setStatus('current')
fsDiscEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscEnable.setStatus('current')
fsDiscHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscHighValue.setStatus('current')
fsDiscLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscLowValue.setStatus('current')
fsDiscActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscActions.setStatus('current')
fsDiscTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(515, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscTrapNum.setStatus('current')
fsDiscClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscClass.setStatus('current')
fsDiscNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscNormalActions.setStatus('current')
fsDiscNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(515, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscNormalTrapNum.setStatus('current')
fsDiscNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 5, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscNormalClass.setStatus('current')
fuelSensorSuddenChangeTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6), )
if mibBuilder.loadTexts: fuelSensorSuddenChangeTable.setStatus('current')
fsSuddenChangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsSuddenChangeIndex"))
if mibBuilder.loadTexts: fsSuddenChangeEntry.setStatus('current')
fsSuddenChangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsSuddenChangeIndex.setStatus('current')
fsSuddenChangeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSuddenChangeEnable.setStatus('current')
fsSuddenChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 360))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSuddenChangeTime.setStatus('current')
fsSuddenChangeAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSuddenChangeAmplitude.setStatus('current')
fsSuddenChangeActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSuddenChangeActions.setStatus('current')
fsSuddenChangeTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(527, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSuddenChangeTrapNum.setStatus('current')
fsSuddenChangeClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 6, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSuddenChangeClass.setStatus('current')
fuelSensorSlowChangeTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7), )
if mibBuilder.loadTexts: fuelSensorSlowChangeTable.setStatus('current')
fsSlowChangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsSlowChangeIndex"))
if mibBuilder.loadTexts: fsSlowChangeEntry.setStatus('current')
fsSlowChangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsSlowChangeIndex.setStatus('current')
fsSlowChangeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSlowChangeEnable.setStatus('current')
fsSlowChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 168))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSlowChangeTime.setStatus('current')
fsSlowChangeAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSlowChangeAmplitude.setStatus('current')
fsSlowChangeActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSlowChangeActions.setStatus('current')
fsSlowChangeTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(528, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSlowChangeTrapNum.setStatus('current')
fsSlowChangeClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 7, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsSlowChangeClass.setStatus('current')
fuelSensorLevelsAutoAdjustTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8), )
if mibBuilder.loadTexts: fuelSensorLevelsAutoAdjustTable.setStatus('current')
fsLAAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "fsLAAIndex"))
if mibBuilder.loadTexts: fsLAAEntry.setStatus('current')
fsLAAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsLAAIndex.setStatus('current')
fsLAAEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLAAEnable.setStatus('current')
fsLAAEventEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLAAEventEnable.setStatus('current')
fsLAAEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLAAEventThreshold.setStatus('current')
fsLAAEventActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLAAEventActions.setStatus('current')
fsLAAEventClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLAAEventClass.setStatus('current')
fsLAAEventTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 11, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(544, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLAAEventTrapNum.setStatus('current')
acpmGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1), )
if mibBuilder.loadTexts: acpmGeneralTable.setStatus('current')
acpmGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acpmGenIndex"))
if mibBuilder.loadTexts: acpmGenEntry.setStatus('current')
acpmGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmGenIndex.setStatus('current')
acpmGenDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenDevice.setStatus('current')
acpmGenName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenName.setStatus('current')
acpmGenAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 247))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenAddress.setStatus('current')
acpmGenPtRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenPtRatio.setStatus('current')
acpmGenCtRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenCtRatio.setStatus('current')
acpmGenPowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenPowerType.setStatus('current')
acpmGenSysrepPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenSysrepPackage.setStatus('current')
acpmGenSysrepType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenSysrepType.setStatus('current')
acpmGenEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenEnable.setStatus('current')
acpmAvgVoltageTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2), )
if mibBuilder.loadTexts: acpmAvgVoltageTable.setStatus('current')
acpmAvgVoltageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acpmAvgVoltageIndex"))
if mibBuilder.loadTexts: acpmAvgVoltageEntry.setStatus('current')
acpmAvgVoltageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmAvgVoltageIndex.setStatus('current')
acpmAvgVoltageEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageEnable.setStatus('current')
acpmAvgVoltageDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageDeadband.setStatus('current')
acpmAvgVoltageVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVHighValue.setStatus('current')
acpmAvgVoltageVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVHighActions.setStatus('current')
acpmAvgVoltageVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVHighTrapNum.setStatus('current')
acpmAvgVoltageVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVHighClass.setStatus('current')
acpmAvgVoltageHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageHighValue.setStatus('current')
acpmAvgVoltageHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageHighActions.setStatus('current')
acpmAvgVoltageHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageHighTrapNum.setStatus('current')
acpmAvgVoltageHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageHighClass.setStatus('current')
acpmAvgVoltageNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageNormalActions.setStatus('current')
acpmAvgVoltageNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageNormalTrapNum.setStatus('current')
acpmAvgVoltageNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageNormalClass.setStatus('current')
acpmAvgVoltageLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageLowValue.setStatus('current')
acpmAvgVoltageLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageLowActions.setStatus('current')
acpmAvgVoltageLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageLowTrapNum.setStatus('current')
acpmAvgVoltageLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageLowClass.setStatus('current')
acpmAvgVoltageVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVLowValue.setStatus('current')
acpmAvgVoltageVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVLowActions.setStatus('current')
acpmAvgVoltageVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVLowTrapNum.setStatus('current')
acpmAvgVoltageVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVLowClass.setStatus('current')
acpmAvgVoltageSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageSysrepEnable.setStatus('current')
acpmAvgVoltageSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageSysrepThreshold.setStatus('current')
acpmAvgVoltageSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 2, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageSysrepLimit.setStatus('current')
acpmAvgCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3), )
if mibBuilder.loadTexts: acpmAvgCurrentTable.setStatus('current')
acpmAvgCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acpmAvgCurrentIndex"))
if mibBuilder.loadTexts: acpmAvgCurrentEntry.setStatus('current')
acpmAvgCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmAvgCurrentIndex.setStatus('current')
acpmAvgCurrentEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentEnable.setStatus('current')
acpmAvgCurrentDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentDeadband.setStatus('current')
acpmAvgCurrentVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVHighValue.setStatus('current')
acpmAvgCurrentVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVHighActions.setStatus('current')
acpmAvgCurrentVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVHighTrapNum.setStatus('current')
acpmAvgCurrentVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVHighClass.setStatus('current')
acpmAvgCurrentHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentHighValue.setStatus('current')
acpmAvgCurrentHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentHighActions.setStatus('current')
acpmAvgCurrentHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentHighTrapNum.setStatus('current')
acpmAvgCurrentHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentHighClass.setStatus('current')
acpmAvgCurrentNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentNormalActions.setStatus('current')
acpmAvgCurrentNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentNormalTrapNum.setStatus('current')
acpmAvgCurrentNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentNormalClass.setStatus('current')
acpmAvgCurrentLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentLowValue.setStatus('current')
acpmAvgCurrentLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentLowActions.setStatus('current')
acpmAvgCurrentLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentLowTrapNum.setStatus('current')
acpmAvgCurrentLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentLowClass.setStatus('current')
acpmAvgCurrentVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVLowValue.setStatus('current')
acpmAvgCurrentVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVLowActions.setStatus('current')
acpmAvgCurrentVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVLowTrapNum.setStatus('current')
acpmAvgCurrentVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVLowClass.setStatus('current')
acpmAvgCurrentSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentSysrepEnable.setStatus('current')
acpmAvgCurrentSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentSysrepThreshold.setStatus('current')
acpmAvgCurrentSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 3, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentSysrepLimit.setStatus('current')
acpmFreqTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4), )
if mibBuilder.loadTexts: acpmFreqTable.setStatus('current')
acpmFreqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acpmFreqIndex"))
if mibBuilder.loadTexts: acpmFreqEntry.setStatus('current')
acpmFreqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmFreqIndex.setStatus('current')
acpmFreqEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqEnable.setStatus('current')
acpmFreqDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqDeadband.setStatus('current')
acpmFreqVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVHighValue.setStatus('current')
acpmFreqVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVHighActions.setStatus('current')
acpmFreqVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVHighTrapNum.setStatus('current')
acpmFreqVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVHighClass.setStatus('current')
acpmFreqHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqHighValue.setStatus('current')
acpmFreqHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqHighActions.setStatus('current')
acpmFreqHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqHighTrapNum.setStatus('current')
acpmFreqHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqHighClass.setStatus('current')
acpmFreqNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqNormalActions.setStatus('current')
acpmFreqNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqNormalTrapNum.setStatus('current')
acpmFreqNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqNormalClass.setStatus('current')
acpmFreqLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqLowValue.setStatus('current')
acpmFreqLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqLowActions.setStatus('current')
acpmFreqLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqLowTrapNum.setStatus('current')
acpmFreqLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqLowClass.setStatus('current')
acpmFreqVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVLowValue.setStatus('current')
acpmFreqVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVLowActions.setStatus('current')
acpmFreqVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVLowTrapNum.setStatus('current')
acpmFreqVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVLowClass.setStatus('current')
acpmFreqSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqSysrepEnable.setStatus('current')
acpmFreqSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqSysrepThreshold.setStatus('current')
acpmFreqSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 4, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqSysrepLimit.setStatus('current')
acpmTotalRealPowerTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5), )
if mibBuilder.loadTexts: acpmTotalRealPowerTable.setStatus('current')
acpmTRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acpmTRPIndex"))
if mibBuilder.loadTexts: acpmTRPEntry.setStatus('current')
acpmTRPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmTRPIndex.setStatus('current')
acpmTRPEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPEnable.setStatus('current')
acpmTRPDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPDeadband.setStatus('current')
acpmTRPVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVHighValue.setStatus('current')
acpmTRPVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVHighActions.setStatus('current')
acpmTRPVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVHighTrapNum.setStatus('current')
acpmTRPVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVHighClass.setStatus('current')
acpmTRPHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPHighValue.setStatus('current')
acpmTRPHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPHighActions.setStatus('current')
acpmTRPHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPHighTrapNum.setStatus('current')
acpmTRPHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPHighClass.setStatus('current')
acpmTRPNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPNormalActions.setStatus('current')
acpmTRPNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPNormalTrapNum.setStatus('current')
acpmTRPNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPNormalClass.setStatus('current')
acpmTRPLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPLowValue.setStatus('current')
acpmTRPLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPLowActions.setStatus('current')
acpmTRPLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPLowTrapNum.setStatus('current')
acpmTRPLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPLowClass.setStatus('current')
acpmTRPVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVLowValue.setStatus('current')
acpmTRPVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVLowActions.setStatus('current')
acpmTRPVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVLowTrapNum.setStatus('current')
acpmTRPVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVLowClass.setStatus('current')
acpmTRPSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPSysrepEnable.setStatus('current')
acpmTRPSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPSysrepThreshold.setStatus('current')
acpmTRPSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 5, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPSysrepLimit.setStatus('current')
acpmDisconnectTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6), )
if mibBuilder.loadTexts: acpmDisconnectTable.setStatus('current')
acpmDisconnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acpmDisconnectIndex"))
if mibBuilder.loadTexts: acpmDisconnectEntry.setStatus('current')
acpmDisconnectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmDisconnectIndex.setStatus('current')
acpmDisconnectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectEnable.setStatus('current')
acpmDisconnectActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectActions.setStatus('current')
acpmDisconnectTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(524, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectTrapNum.setStatus('current')
acpmDisconnectClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectClass.setStatus('current')
acpmDisconnectNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectNormalActions.setStatus('current')
acpmDisconnectNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(524, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectNormalTrapNum.setStatus('current')
acpmDisconnectNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 6, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectNormalClass.setStatus('current')
acpmTotalPowerFactorTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7), )
if mibBuilder.loadTexts: acpmTotalPowerFactorTable.setStatus('current')
acpmTPFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acpmTPFIndex"))
if mibBuilder.loadTexts: acpmTPFEntry.setStatus('current')
acpmTPFIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmTPFIndex.setStatus('current')
acpmTPFEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFEnable.setStatus('current')
acpmTPFDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFDeadband.setStatus('current')
acpmTPFNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFNormalActions.setStatus('current')
acpmTPFNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFNormalTrapNum.setStatus('current')
acpmTPFNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFNormalClass.setStatus('current')
acpmTPFLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFLowValue.setStatus('current')
acpmTPFLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFLowActions.setStatus('current')
acpmTPFLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFLowTrapNum.setStatus('current')
acpmTPFLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFLowClass.setStatus('current')
acpmTPFVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFVLowValue.setStatus('current')
acpmTPFVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFVLowActions.setStatus('current')
acpmTPFVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFVLowTrapNum.setStatus('current')
acpmTPFVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFVLowClass.setStatus('current')
acpmTPFSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFSysrepEnable.setStatus('current')
acpmTPFSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFSysrepThreshold.setStatus('current')
acpmTPFSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 12, 7, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFSysrepLimit.setStatus('current')
batteryMonitorGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1), )
if mibBuilder.loadTexts: batteryMonitorGeneralTable.setStatus('current')
bmGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmGenIndex"))
if mibBuilder.loadTexts: bmGenEntry.setStatus('current')
bmGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmGenIndex.setStatus('current')
bmGenEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmGenEnable.setStatus('current')
bmGenName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmGenName.setStatus('current')
bmGenBatteryQuantity = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmGenBatteryQuantity.setStatus('current')
bmGenBatteryCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmGenBatteryCapacity.setStatus('current')
bmGenBatteryNominalVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmGenBatteryNominalVoltage.setStatus('current')
bmGenSysrepPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmGenSysrepPackage.setStatus('current')
bmGenSysrepType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmGenSysrepType.setStatus('current')
batteryMonitorDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2), )
if mibBuilder.loadTexts: batteryMonitorDeviceTable.setStatus('current')
bmDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmDeviceIndex"))
if mibBuilder.loadTexts: bmDeviceEntry.setStatus('current')
bmDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmDeviceIndex.setStatus('current')
bmDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDeviceType.setStatus('current')
bmDeviceES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDeviceES.setStatus('current')
bmDeviceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDeviceIP.setStatus('current')
bmDeviceReadcom = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDeviceReadcom.setStatus('current')
bmDeviceInputString = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDeviceInputString.setStatus('current')
bmDeviceCTSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDeviceCTSize.setStatus('current')
batteryMonitorTempTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3), )
if mibBuilder.loadTexts: batteryMonitorTempTable.setStatus('current')
bmTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmTempIndex"))
if mibBuilder.loadTexts: bmTempEntry.setStatus('current')
bmTempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmTempIndex.setStatus('current')
bmTempEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempEnable.setStatus('current')
bmTempDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempDeadband.setStatus('current')
bmTempScale = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempScale.setStatus('current')
bmTempHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempHighValue.setStatus('current')
bmTempHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempHighActions.setStatus('current')
bmTempHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(530, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempHighTrapNum.setStatus('current')
bmTempHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempHighClass.setStatus('current')
bmTempNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempNormalActions.setStatus('current')
bmTempNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(530, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempNormalTrapNum.setStatus('current')
bmTempNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempNormalClass.setStatus('current')
bmTempLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempLowValue.setStatus('current')
bmTempLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempLowActions.setStatus('current')
bmTempLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(530, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempLowTrapNum.setStatus('current')
bmTempLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempLowClass.setStatus('current')
bmTempSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempSysrepEnable.setStatus('current')
bmTempSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempSysrepThreshold.setStatus('current')
bmTempSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 3, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmTempSysrepLimit.setStatus('current')
batteryMonitorDiffTempTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4), )
if mibBuilder.loadTexts: batteryMonitorDiffTempTable.setStatus('current')
bmDiffTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmDiffTempIndex"))
if mibBuilder.loadTexts: bmDiffTempEntry.setStatus('current')
bmDiffTempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmDiffTempIndex.setStatus('current')
bmDiffTempEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempEnable.setStatus('current')
bmDiffTempDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempDeadband.setStatus('current')
bmDiffTempVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempVHighValue.setStatus('current')
bmDiffTempVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempVHighActions.setStatus('current')
bmDiffTempVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempVHighTrapNum.setStatus('current')
bmDiffTempVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempVHighClass.setStatus('current')
bmDiffTempHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempHighValue.setStatus('current')
bmDiffTempHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempHighActions.setStatus('current')
bmDiffTempHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempHighTrapNum.setStatus('current')
bmDiffTempHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempHighClass.setStatus('current')
bmDiffTempNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempNormalActions.setStatus('current')
bmDiffTempNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempNormalTrapNum.setStatus('current')
bmDiffTempNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempNormalClass.setStatus('current')
bmDiffTempSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempSysrepEnable.setStatus('current')
bmDiffTempSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempSysrepThreshold.setStatus('current')
bmDiffTempSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 4, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffTempSysrepLimit.setStatus('current')
batteryMonitorVoltageTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5), )
if mibBuilder.loadTexts: batteryMonitorVoltageTable.setStatus('current')
bmVoltageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmVoltageIndex"))
if mibBuilder.loadTexts: bmVoltageEntry.setStatus('current')
bmVoltageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmVoltageIndex.setStatus('current')
bmVoltageEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageEnable.setStatus('current')
bmVoltageDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageDeadband.setStatus('current')
bmVoltageVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageVHighValue.setStatus('current')
bmVoltageVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageVHighActions.setStatus('current')
bmVoltageVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageVHighTrapNum.setStatus('current')
bmVoltageVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageVHighClass.setStatus('current')
bmVoltageHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageHighValue.setStatus('current')
bmVoltageHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageHighActions.setStatus('current')
bmVoltageHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageHighTrapNum.setStatus('current')
bmVoltageHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageHighClass.setStatus('current')
bmVoltageNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageNormalActions.setStatus('current')
bmVoltageNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageNormalTrapNum.setStatus('current')
bmVoltageNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageNormalClass.setStatus('current')
bmVoltageLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageLowValue.setStatus('current')
bmVoltageLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageLowActions.setStatus('current')
bmVoltageLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageLowTrapNum.setStatus('current')
bmVoltageLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageLowClass.setStatus('current')
bmVoltageVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageVLowValue.setStatus('current')
bmVoltageVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageVLowActions.setStatus('current')
bmVoltageVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageVLowTrapNum.setStatus('current')
bmVoltageVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageVLowClass.setStatus('current')
bmVoltageSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageSysrepEnable.setStatus('current')
bmVoltageSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageSysrepThreshold.setStatus('current')
bmVoltageSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 5, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmVoltageSysrepLimit.setStatus('current')
batteryMonitorDiffVoltTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6), )
if mibBuilder.loadTexts: batteryMonitorDiffVoltTable.setStatus('current')
bmDiffVoltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmDiffVoltIndex"))
if mibBuilder.loadTexts: bmDiffVoltEntry.setStatus('current')
bmDiffVoltIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmDiffVoltIndex.setStatus('current')
bmDiffVoltEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltEnable.setStatus('current')
bmDiffVoltDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltDeadband.setStatus('current')
bmDiffVoltVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltVHighValue.setStatus('current')
bmDiffVoltVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltVHighActions.setStatus('current')
bmDiffVoltVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltVHighTrapNum.setStatus('current')
bmDiffVoltVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltVHighClass.setStatus('current')
bmDiffVoltHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltHighValue.setStatus('current')
bmDiffVoltHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltHighActions.setStatus('current')
bmDiffVoltHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltHighTrapNum.setStatus('current')
bmDiffVoltHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltHighClass.setStatus('current')
bmDiffVoltNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltNormalActions.setStatus('current')
bmDiffVoltNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltNormalTrapNum.setStatus('current')
bmDiffVoltNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltNormalClass.setStatus('current')
bmDiffVoltSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltSysrepEnable.setStatus('current')
bmDiffVoltSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltSysrepThreshold.setStatus('current')
bmDiffVoltSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 6, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDiffVoltSysrepLimit.setStatus('current')
batteryMonitorChargingCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7), )
if mibBuilder.loadTexts: batteryMonitorChargingCurrentTable.setStatus('current')
bmChargingCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmChargingCurrentIndex"))
if mibBuilder.loadTexts: bmChargingCurrentEntry.setStatus('current')
bmChargingCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmChargingCurrentIndex.setStatus('current')
bmChargingCurrentEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentEnable.setStatus('current')
bmChargingCurrentDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentDeadband.setStatus('current')
bmChargingCurrentVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentVHighValue.setStatus('current')
bmChargingCurrentVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentVHighActions.setStatus('current')
bmChargingCurrentVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentVHighTrapNum.setStatus('current')
bmChargingCurrentVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentVHighClass.setStatus('current')
bmChargingCurrentHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentHighValue.setStatus('current')
bmChargingCurrentHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentHighActions.setStatus('current')
bmChargingCurrentHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentHighTrapNum.setStatus('current')
bmChargingCurrentHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentHighClass.setStatus('current')
bmChargingCurrentNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentNormalActions.setStatus('current')
bmChargingCurrentNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentNormalTrapNum.setStatus('current')
bmChargingCurrentNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentNormalClass.setStatus('current')
bmChargingCurrentSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentSysrepEnable.setStatus('current')
bmChargingCurrentSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentSysrepThreshold.setStatus('current')
bmChargingCurrentSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 7, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargingCurrentSysrepLimit.setStatus('current')
batteryMonitorDischargingCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8), )
if mibBuilder.loadTexts: batteryMonitorDischargingCurrentTable.setStatus('current')
bmDischargingCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmDischargingCurrentIndex"))
if mibBuilder.loadTexts: bmDischargingCurrentEntry.setStatus('current')
bmDischargingCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmDischargingCurrentIndex.setStatus('current')
bmDischargingCurrentEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentEnable.setStatus('current')
bmDischargingCurrentDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentDeadband.setStatus('current')
bmDischargingCurrentVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentVHighValue.setStatus('current')
bmDischargingCurrentVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentVHighActions.setStatus('current')
bmDischargingCurrentVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentVHighTrapNum.setStatus('current')
bmDischargingCurrentVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentVHighClass.setStatus('current')
bmDischargingCurrentHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentHighValue.setStatus('current')
bmDischargingCurrentHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentHighActions.setStatus('current')
bmDischargingCurrentHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentHighTrapNum.setStatus('current')
bmDischargingCurrentHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentHighClass.setStatus('current')
bmDischargingCurrentNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentNormalActions.setStatus('current')
bmDischargingCurrentNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentNormalTrapNum.setStatus('current')
bmDischargingCurrentNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentNormalClass.setStatus('current')
bmDischargingCurrentSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentSysrepEnable.setStatus('current')
bmDischargingCurrentSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentSysrepThreshold.setStatus('current')
bmDischargingCurrentSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 8, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmDischargingCurrentSysrepLimit.setStatus('current')
batteryMonitorChargeLevelTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9), )
if mibBuilder.loadTexts: batteryMonitorChargeLevelTable.setStatus('current')
bmChargeLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmChargeLevelIndex"))
if mibBuilder.loadTexts: bmChargeLevelEntry.setStatus('current')
bmChargeLevelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmChargeLevelIndex.setStatus('current')
bmChargeLevelEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelEnable.setStatus('current')
bmChargeLevelNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelNormalActions.setStatus('current')
bmChargeLevelNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelNormalTrapNum.setStatus('current')
bmChargeLevelNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelNormalClass.setStatus('current')
bmChargeLevelLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelLowActions.setStatus('current')
bmChargeLevelLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelLowTrapNum.setStatus('current')
bmChargeLevelLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelLowClass.setStatus('current')
bmChargeLevelVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelVLowActions.setStatus('current')
bmChargeLevelVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelVLowTrapNum.setStatus('current')
bmChargeLevelVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelVLowClass.setStatus('current')
bmChargeLevelSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 9, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmChargeLevelSysrepEnable.setStatus('current')
batteryMonitorJarHealthTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10), )
if mibBuilder.loadTexts: batteryMonitorJarHealthTable.setStatus('current')
bmJarHealthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "bmJarHealthIndex"))
if mibBuilder.loadTexts: bmJarHealthEntry.setStatus('current')
bmJarHealthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bmJarHealthIndex.setStatus('current')
bmJarHealthEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthEnable.setStatus('current')
bmJarHealthNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthNormalActions.setStatus('current')
bmJarHealthNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthNormalTrapNum.setStatus('current')
bmJarHealthNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthNormalClass.setStatus('current')
bmJarHealthLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthLowActions.setStatus('current')
bmJarHealthLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthLowTrapNum.setStatus('current')
bmJarHealthLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthLowClass.setStatus('current')
bmJarHealthVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthVLowActions.setStatus('current')
bmJarHealthVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthVLowTrapNum.setStatus('current')
bmJarHealthVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthVLowClass.setStatus('current')
bmJarHealthSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 14, 10, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bmJarHealthSysrepEnable.setStatus('current')
evLocationEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLocationEnable.setStatus('current')
evLocationTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLocationTimeout.setStatus('current')
evLocationActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLocationActions.setStatus('current')
evLocationMsgSuccess = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLocationMsgSuccess.setStatus('current')
evLocationMsgFail = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLocationMsgFail.setStatus('current')
evLocationIncludeLocation = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLocationIncludeLocation.setStatus('current')
evLocationTrapnum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(541, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLocationTrapnum.setStatus('current')
evLocationClass = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 15, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLocationClass.setStatus('current')
evResetEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 16, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetEnable.setStatus('current')
evResetDelay = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 16, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetDelay.setStatus('current')
evResetActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 16, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetActions.setStatus('current')
evResetMessage = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 16, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetMessage.setStatus('current')
evResetTrapnum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 16, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(543, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetTrapnum.setStatus('current')
evResetClass = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 16, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetClass.setStatus('current')
evSleepEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 17, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSleepEnable.setStatus('current')
evSleepActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 17, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSleepActions.setStatus('current')
evSleepMessage = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 17, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSleepMessage.setStatus('current')
evSleepTrapnum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 17, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(542, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSleepTrapnum.setStatus('current')
evSleepClass = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 17, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSleepClass.setStatus('current')
evGlobalActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 18, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evGlobalActions.setStatus('current')
evGlobalTrapnum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 18, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evGlobalTrapnum.setStatus('current')
acActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acActions.setStatus('current')
acTrapnum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acTrapnum.setStatus('current')
acClass = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acClass.setStatus('current')
accessControlDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10), )
if mibBuilder.loadTexts: accessControlDeviceTable.setStatus('current')
accessControlDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acdIndex"))
if mibBuilder.loadTexts: accessControlDeviceEntry.setStatus('current')
acdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdIndex.setStatus('current')
acdEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdEnable.setStatus('current')
acdName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdName.setStatus('current')
acdReader = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdReader.setStatus('current')
acdWiegandES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdWiegandES.setStatus('current')
acdRelayType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdRelayType.setStatus('current')
acdRelayES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdRelayES.setStatus('current')
acdRelayPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdRelayPoint.setStatus('current')
acdOpenTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdOpenTime.setStatus('current')
acdUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 10, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdUserGroup.setStatus('current')
accessControlUserTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11), )
if mibBuilder.loadTexts: accessControlUserTable.setStatus('current')
accessControlUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "acuIndexUserGroup"), (0, "SITEBOSS-350-STD-MIB", "acuIndexUser"))
if mibBuilder.loadTexts: accessControlUserEntry.setStatus('current')
acuIndexUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acuIndexUserGroup.setStatus('current')
acuIndexUser = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acuIndexUser.setStatus('current')
acuEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuEnable.setStatus('current')
acuName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuName.setStatus('current')
acuSn = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuSn.setStatus('current')
acuSunBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuSunBegin.setStatus('current')
acuSunEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuSunEnd.setStatus('current')
acuMonBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuMonBegin.setStatus('current')
acuMonEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuMonEnd.setStatus('current')
acuTueBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuTueBegin.setStatus('current')
acuTueEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuTueEnd.setStatus('current')
acuWedBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuWedBegin.setStatus('current')
acuWedEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuWedEnd.setStatus('current')
acuThuBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuThuBegin.setStatus('current')
acuThuEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuThuEnd.setStatus('current')
acuFriBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuFriBegin.setStatus('current')
acuFriEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuFriEnd.setStatus('current')
acuSatBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuSatBegin.setStatus('current')
acuSatEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 12, 21, 11, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acuSatEnd.setStatus('current')
actionSchedEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionSchedEnable.setStatus('current')
actionSchedBegin = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionSchedBegin.setStatus('current')
actionSchedEnd = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionSchedEnd.setStatus('current')
actionSchedWeekdaysOnly = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionSchedWeekdaysOnly.setStatus('current')
actionAsentriaRequireAck = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionAsentriaRequireAck.setStatus('current')
actionAsentriaVersion = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionAsentriaVersion.setStatus('current')
actionAsentriaTCPPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionAsentriaTCPPort.setStatus('current')
actionHostTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 6), )
if mibBuilder.loadTexts: actionHostTable.setStatus('current')
actionHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 6, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "actionHostIndex"))
if mibBuilder.loadTexts: actionHostEntry.setStatus('current')
actionHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: actionHostIndex.setStatus('current')
actionHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionHost.setStatus('current')
actionEmailTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 7), )
if mibBuilder.loadTexts: actionEmailTable.setStatus('current')
actionEmailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 7, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "actionEmailIndex"))
if mibBuilder.loadTexts: actionEmailEntry.setStatus('current')
actionEmailIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: actionEmailIndex.setStatus('current')
actionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionEmail.setStatus('current')
actionParseError = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 14, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: actionParseError.setStatus('current')
sysTimeAutoDST = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeAutoDST.setStatus('current')
sysTimeGMTOffset = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeGMTOffset.setStatus('current')
sysTimeGMTDirection = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeGMTDirection.setStatus('current')
sysTimeNetEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeNetEnable.setStatus('current')
sysTimeNetHostTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 4, 2), )
if mibBuilder.loadTexts: sysTimeNetHostTable.setStatus('current')
sysTimeNetHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 4, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "sysTimeNetHostIndex"))
if mibBuilder.loadTexts: sysTimeNetHostEntry.setStatus('current')
sysTimeNetHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTimeNetHostIndex.setStatus('current')
sysTimeNetHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeNetHost.setStatus('current')
sysPTTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPTTimeout.setStatus('current')
sysPTEndPause = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPTEndPause.setStatus('current')
sysPTJoinable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPTJoinable.setStatus('current')
sysMTU = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMTU.setStatus('current')
sysAnswerString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysAnswerString.setStatus('current')
sysEventFileID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysEventFileID.setStatus('current')
sysEscapeCharacter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysEscapeCharacter.setStatus('current')
sysTimeStampTimeFormat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeStampTimeFormat.setStatus('current')
sysTimeStampDateFormat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 8, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeStampDateFormat.setStatus('current')
sysTimeStampSpaceAfter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 8, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeStampSpaceAfter.setStatus('current')
sysLogMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 9, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogMode.setStatus('current')
sysLoghost = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 9, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLoghost.setStatus('current')
sysLogFilter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 9, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogFilter.setStatus('current')
sysLogFileSize = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 9, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogFileSize.setStatus('current')
sysLogFileCount = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 9, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogFileCount.setStatus('current')
sysLogListenPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 9, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogListenPort.setStatus('current')
sysCRDBCapacity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCRDBCapacity.setStatus('current')
sysCRDBPercentFull = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCRDBPercentFull.setStatus('current')
sysCRDBFileIDTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 3), )
if mibBuilder.loadTexts: sysCRDBFileIDTable.setStatus('current')
sysCRDBFileIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 3, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "sysCRDBFileIDIndex"))
if mibBuilder.loadTexts: sysCRDBFileIDEntry.setStatus('current')
sysCRDBFileIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCRDBFileIDIndex.setStatus('current')
sysCRDBFileID = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCRDBFileID.setStatus('current')
sysCRDBFileEnforceMinTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 4), )
if mibBuilder.loadTexts: sysCRDBFileEnforceMinTable.setStatus('current')
sysCRDBFileEnforceMinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 4, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "sysCRDBFileEnforceMinIndex"))
if mibBuilder.loadTexts: sysCRDBFileEnforceMinEntry.setStatus('current')
sysCRDBFileEnforceMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCRDBFileEnforceMinIndex.setStatus('current')
sysCRDBFileEnforceMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 10, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCRDBFileEnforceMin.setStatus('current')
sysCharMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCharMask.setStatus('current')
sysPrompt = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPrompt.setStatus('current')
sysBootStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBootStatus.setStatus('current')
sysLocLatitude = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 14, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocLatitude.setStatus('current')
sysLocLongitude = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 14, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocLongitude.setStatus('current')
sysLocXOffset = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 14, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocXOffset.setStatus('current')
sysLocYOffset = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 14, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocYOffset.setStatus('current')
sysLocAngle = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 14, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocAngle.setStatus('current')
sysLocAltitude = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 14, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocAltitude.setStatus('current')
sysSleepEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepEnable.setStatus('current')
sysSleepForceSleep = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepForceSleep.setStatus('current')
sysSleepSleepTimer = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepSleepTimer.setStatus('current')
sysSleepWakeTimerNormal = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepWakeTimerNormal.setStatus('current')
sysSleepWakeTimerMotion = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepWakeTimerMotion.setStatus('current')
sysSleepWakeMotionEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepWakeMotionEnable.setStatus('current')
sysSleepWakeScheduledEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepWakeScheduledEnable.setStatus('current')
sysSleepWakeScheduledTimeOfDay = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepWakeScheduledTimeOfDay.setStatus('current')
sysSleepPowerDetectCCEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepPowerDetectCCEnable.setStatus('current')
sysSleepPowerDetectCCPowerOnState = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepPowerDetectCCPowerOnState.setStatus('current')
sysSleepPowerDetectCCThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 16, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSleepPowerDetectCCThreshold.setStatus('current')
sysFileTransferStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 17, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysFileTransferStatus.setStatus('current')
sysFileTransferURL = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 17, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysFileTransferURL.setStatus('current')
sysFileTransferUsername = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 17, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysFileTransferUsername.setStatus('current')
sysFileTransferPassword = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 17, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysFileTransferPassword.setStatus('current')
sysUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 16, 18, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysUpdateStatus.setStatus('current')
auditLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogEnable.setStatus('current')
auditLogStoreResets = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreResets.setStatus('current')
auditLogStoreCommands = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreCommands.setStatus('current')
auditLogStoreOutputs = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreOutputs.setStatus('current')
auditLogStoreAlarmActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreAlarmActions.setStatus('current')
auditLogStorePwdFailures = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStorePwdFailures.setStatus('current')
auditLogStoreLogins = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreLogins.setStatus('current')
auditLogStoreSHSK = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreSHSK.setStatus('current')
auditLogStorePassthrough = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStorePassthrough.setStatus('current')
auditLogStoreInactivity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreInactivity.setStatus('current')
auditLogStorePolling = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStorePolling.setStatus('current')
auditLogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogMaxSize.setStatus('current')
auditLogSoreSleepActivity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 17, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogSoreSleepActivity.setStatus('current')
scrGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrGlobalEnable.setStatus('current')
scrDTRCtrlPortEnableTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 2), )
if mibBuilder.loadTexts: scrDTRCtrlPortEnableTable.setStatus('current')
scrDTRCtrlPortEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 2, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "scrDTRCtrlPortEnableIndex"))
if mibBuilder.loadTexts: scrDTRCtrlPortEnableEntry.setStatus('current')
scrDTRCtrlPortEnableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scrDTRCtrlPortEnableIndex.setStatus('current')
scrDTRCtrlPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrDTRCtrlPortEnable.setStatus('current')
scrTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3), )
if mibBuilder.loadTexts: scrTable.setStatus('current')
scrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "scrIndex"))
if mibBuilder.loadTexts: scrEntry.setStatus('current')
scrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scrIndex.setStatus('current')
scrEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrEnable.setStatus('current')
scrName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrName.setStatus('current')
scrFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrFilename.setStatus('current')
scrRunAlways = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrRunAlways.setStatus('current')
scrRunAtStartup = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrRunAtStartup.setStatus('current')
scrRunScheduled = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrRunScheduled.setStatus('current')
scrScheduleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrScheduleTime.setStatus('current')
scrArguments = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrArguments.setStatus('current')
scrRepeatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 3, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrRepeatInterval.setStatus('current')
scrVolatileStringTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 4), )
if mibBuilder.loadTexts: scrVolatileStringTable.setStatus('current')
scrVolatileStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 4, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "scrVolatileStringIndex"))
if mibBuilder.loadTexts: scrVolatileStringEntry.setStatus('current')
scrVolatileStringIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scrVolatileStringIndex.setStatus('current')
scrVolatileString = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrVolatileString.setStatus('current')
scrVolatileIntTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 5), )
if mibBuilder.loadTexts: scrVolatileIntTable.setStatus('current')
scrVolatileIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 5, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "scrVolatileIntIndex"))
if mibBuilder.loadTexts: scrVolatileIntEntry.setStatus('current')
scrVolatileIntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scrVolatileIntIndex.setStatus('current')
scrVolatileInt = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrVolatileInt.setStatus('current')
scrNonVolatileStringTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 6), )
if mibBuilder.loadTexts: scrNonVolatileStringTable.setStatus('current')
scrNonVolatileStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 6, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "scrNonVolatileStringIndex"))
if mibBuilder.loadTexts: scrNonVolatileStringEntry.setStatus('current')
scrNonVolatileStringIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scrNonVolatileStringIndex.setStatus('current')
scrNonVolatileString = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrNonVolatileString.setStatus('current')
scrNonVolatileIntTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 7), )
if mibBuilder.loadTexts: scrNonVolatileIntTable.setStatus('current')
scrNonVolatileIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 7, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "scrNonVolatileIntIndex"))
if mibBuilder.loadTexts: scrNonVolatileIntEntry.setStatus('current')
scrNonVolatileIntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: scrNonVolatileIntIndex.setStatus('current')
scrNonVolatileInt = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 18, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scrNonVolatileInt.setStatus('current')
genSetEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetEnable.setStatus('current')
genSetRelayEs = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetRelayEs.setStatus('current')
genSetRelayPoint = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetRelayPoint.setStatus('current')
genSetRelayRunningstate = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetRelayRunningstate.setStatus('current')
genSetRelayTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 5), )
if mibBuilder.loadTexts: genSetRelayTable.setStatus('current')
genSetRelayTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 5, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "genSetRelayTableIndex"))
if mibBuilder.loadTexts: genSetRelayTableEntry.setStatus('current')
genSetRelayTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genSetRelayTableIndex.setStatus('current')
genSetRelayTableEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetRelayTableEnable.setStatus('current')
genSetRelayTableEs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetRelayTableEs.setStatus('current')
genSetRelayTablePoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetRelayTablePoint.setStatus('current')
genSetRelayTableRunningstate = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 2, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetRelayTableRunningstate.setStatus('current')
genSetCCEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetCCEnable.setStatus('current')
genSetCCEs = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetCCEs.setStatus('current')
genSetCCPoint = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetCCPoint.setStatus('current')
genSetCCRunningState = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetCCRunningState.setStatus('current')
genSetCCDelay = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSetCCDelay.setStatus('current')
genRunMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunMode.setStatus('current')
genRunSched = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunSched.setStatus('current')
genRunDuration = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunDuration.setStatus('current')
genRunForce = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunForce.setStatus('current')
genRunReqasm = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunReqasm.setStatus('current')
genRunStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genRunStatus.setStatus('current')
genRunNonstartEventEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunNonstartEventEnable.setStatus('current')
genRunNonstartEventActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 7, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunNonstartEventActions.setStatus('current')
genRunNonstartEventTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(536, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunNonstartEventTrap.setStatus('current')
genRunNonstartEventClass = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 2, 19, 2, 7, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genRunNonstartEventClass.setStatus('current')
schedTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1), )
if mibBuilder.loadTexts: schedTable.setStatus('current')
schedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1), ).setIndexNames((0, "SITEBOSS-350-STD-MIB", "schedIndex"))
if mibBuilder.loadTexts: schedEntry.setStatus('current')
schedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: schedIndex.setStatus('current')
schedEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedEnable.setStatus('current')
schedStart = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedStart.setStatus('current')
schedRepeatMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatMode.setStatus('current')
schedRepeatFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatFreq.setStatus('current')
schedRepeatEndMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatEndMode.setStatus('current')
schedRepeatEndAfter = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatEndAfter.setStatus('current')
schedRepeatEndOn = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatEndOn.setStatus('current')
schedRepeatWeeklySun = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatWeeklySun.setStatus('current')
schedRepeatWeeklyMon = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatWeeklyMon.setStatus('current')
schedRepeatWeeklyTue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatWeeklyTue.setStatus('current')
schedRepeatWeeklyWed = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatWeeklyWed.setStatus('current')
schedRepeatWeeklyThu = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatWeeklyThu.setStatus('current')
schedRepeatWeeklyFri = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatWeeklyFri.setStatus('current')
schedRepeatWeeklySat = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatWeeklySat.setStatus('current')
schedRepeatMonthlyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatMonthlyMode.setStatus('current')
schedRepeatMonthlyDates = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatMonthlyDates.setStatus('current')
schedRepeatMonthlyOnThe = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatMonthlyOnThe.setStatus('current')
schedRepeatMonthlyOnDay = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatMonthlyOnDay.setStatus('current')
schedRepeatYearlyJan = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyJan.setStatus('current')
schedRepeatYearlyFeb = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyFeb.setStatus('current')
schedRepeatYearlyMar = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyMar.setStatus('current')
schedRepeatYearlyApr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyApr.setStatus('current')
schedRepeatYearlyMay = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyMay.setStatus('current')
schedRepeatYearlyJun = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyJun.setStatus('current')
schedRepeatYearlyJul = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyJul.setStatus('current')
schedRepeatYearlyAug = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyAug.setStatus('current')
schedRepeatYearlySep = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlySep.setStatus('current')
schedRepeatYearlyOct = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyOct.setStatus('current')
schedRepeatYearlyNov = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyNov.setStatus('current')
schedRepeatYearlyDec = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyDec.setStatus('current')
schedRepeatYearlyOnThe = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyOnThe.setStatus('current')
schedRepeatYearlyOnDay = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: schedRepeatYearlyOnDay.setStatus('current')
schedNextTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 18, 2, 20, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: schedNextTrigger.setStatus('current')
siteName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteName.setStatus('current')
thisProduct = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thisProduct.setStatus('current')
stockTrapString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stockTrapString.setStatus('current')
trapEventTypeNumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventTypeNumber.setStatus('current')
trapEventTypeName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventTypeName.setStatus('current')
trapIncludedValue = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapIncludedValue.setStatus('current')
trapIncludedString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapIncludedString.setStatus('current')
trapTypeString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapTypeString.setStatus('current')
trapEventClassNumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventClassNumber.setStatus('current')
trapEventClassName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 3, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventClassName.setStatus('current')
keyInterface = MibScalar((1, 3, 6, 1, 4, 1, 3052, 18, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keyInterface.setStatus('current')
s350StockContactClosureTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 110)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockContactClosureTrap.setStatus('current')
s350StockTempTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 120)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockTempTrap.setStatus('current')
s350StockHumidityTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 130)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockHumidityTrap.setStatus('current')
s350StockAnalogTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 140)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockAnalogTrap.setStatus('current')
s350StockOutputTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 150)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockOutputTrap.setStatus('current')
s350StockPDCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 180)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockPDCurrentTrap.setStatus('current')
s350StockPDVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 190)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockPDVoltageTrap.setStatus('current')
s350StockPDFuseTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 210)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockPDFuseTrap.setStatus('current')
s350StockSchedTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 506)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockSchedTrap.setStatus('current')
s350StockImmediateTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 507)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockImmediateTrap.setStatus('current')
s350StockCTSTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 510)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockCTSTrap.setStatus('current')
s350CPEDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 511)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350CPEDownTrap.setStatus('current')
s350FuelSensorDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 515)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350FuelSensorDisconnectTrap.setStatus('current')
s350FuelSensorVolumeTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 519)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350FuelSensorVolumeTrap.setStatus('current')
s350ACPowerMonitorAvgVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 520)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350ACPowerMonitorAvgVoltageTrap.setStatus('current')
s350ACPowerMonitorAvgCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 521)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350ACPowerMonitorAvgCurrentTrap.setStatus('current')
s350ACPowerMonitorFrequencyTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 522)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350ACPowerMonitorFrequencyTrap.setStatus('current')
s350ACPowerMonitorTRPTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 523)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350ACPowerMonitorTRPTrap.setStatus('current')
s350ACPowerMonitorDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 524)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350ACPowerMonitorDisconnectTrap.setStatus('current')
s350StockScriptTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 526)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350StockScriptTrap.setStatus('current')
s350FuelSensorVolumeSuddenChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 527)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350FuelSensorVolumeSuddenChangeTrap.setStatus('current')
s350FuelSensorVolumeSlowChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 528)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350FuelSensorVolumeSlowChangeTrap.setStatus('current')
s350BattMonStringTemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 530)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350BattMonStringTemperatureTrap.setStatus('current')
s350BattMonStringDiffTemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 531)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350BattMonStringDiffTemperatureTrap.setStatus('current')
s350BattMonStringVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 532)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350BattMonStringVoltageTrap.setStatus('current')
s350BattMonStringChargeLevelTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 533)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350BattMonStringChargeLevelTrap.setStatus('current')
s350BattMonStringChargingCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 534)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350BattMonStringChargingCurrentTrap.setStatus('current')
s350BattMonStringDischargingCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 535)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350BattMonStringDischargingCurrentTrap.setStatus('current')
s350GeneratorNonStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 536)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350GeneratorNonStartTrap.setStatus('current')
s350BattMonStringDifferentialVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 537)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350BattMonStringDifferentialVoltageTrap.setStatus('current')
s350BattMonStringJarHealthTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 538)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350BattMonStringJarHealthTrap.setStatus('current')
s350CameraTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 539)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350CameraTrap.setStatus('current')
s350ACTotalPowerFactorTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 540)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350ACTotalPowerFactorTrap.setStatus('current')
s350LocationTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 541)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350LocationTrap.setStatus('current')
s350SleepTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 542)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350SleepTrap.setStatus('current')
s350ResetTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 543)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350ResetTrap.setStatus('current')
s350FuelSensorLevelsAutoAdjustTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 544)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350FuelSensorLevelsAutoAdjustTrap.setStatus('current')
s350AccessControlTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 547)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "stockTrapString"), ("SITEBOSS-350-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s350AccessControlTrap.setStatus('current')
s350UserTrap1000 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1000)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1000.setStatus('current')
s350UserTrap1001 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1001)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1001.setStatus('current')
s350UserTrap1002 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1002)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1002.setStatus('current')
s350UserTrap1003 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1003)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1003.setStatus('current')
s350UserTrap1004 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1004)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1004.setStatus('current')
s350UserTrap1005 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1005)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1005.setStatus('current')
s350UserTrap1006 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1006)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1006.setStatus('current')
s350UserTrap1007 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1007)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1007.setStatus('current')
s350UserTrap1008 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1008)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1008.setStatus('current')
s350UserTrap1009 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1009)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1009.setStatus('current')
s350UserTrap1010 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1010)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1010.setStatus('current')
s350UserTrap1011 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1011)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1011.setStatus('current')
s350UserTrap1012 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1012)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1012.setStatus('current')
s350UserTrap1013 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1013)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1013.setStatus('current')
s350UserTrap1014 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1014)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1014.setStatus('current')
s350UserTrap1015 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1015)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1015.setStatus('current')
s350UserTrap1016 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1016)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1016.setStatus('current')
s350UserTrap1017 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1017)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1017.setStatus('current')
s350UserTrap1018 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1018)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1018.setStatus('current')
s350UserTrap1019 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1019)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1019.setStatus('current')
s350UserTrap1020 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1020)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1020.setStatus('current')
s350UserTrap1021 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1021)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1021.setStatus('current')
s350UserTrap1022 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1022)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1022.setStatus('current')
s350UserTrap1023 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1023)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1023.setStatus('current')
s350UserTrap1024 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1024)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1024.setStatus('current')
s350UserTrap1025 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1025)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1025.setStatus('current')
s350UserTrap1026 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1026)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1026.setStatus('current')
s350UserTrap1027 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1027)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1027.setStatus('current')
s350UserTrap1028 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1028)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1028.setStatus('current')
s350UserTrap1029 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1029)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1029.setStatus('current')
s350UserTrap1030 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1030)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1030.setStatus('current')
s350UserTrap1031 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1031)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1031.setStatus('current')
s350UserTrap1032 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1032)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1032.setStatus('current')
s350UserTrap1033 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1033)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1033.setStatus('current')
s350UserTrap1034 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1034)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1034.setStatus('current')
s350UserTrap1035 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1035)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1035.setStatus('current')
s350UserTrap1036 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1036)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1036.setStatus('current')
s350UserTrap1037 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1037)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1037.setStatus('current')
s350UserTrap1038 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1038)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1038.setStatus('current')
s350UserTrap1039 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1039)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1039.setStatus('current')
s350UserTrap1040 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1040)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1040.setStatus('current')
s350UserTrap1041 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1041)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1041.setStatus('current')
s350UserTrap1042 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1042)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1042.setStatus('current')
s350UserTrap1043 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1043)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1043.setStatus('current')
s350UserTrap1044 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1044)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1044.setStatus('current')
s350UserTrap1045 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1045)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1045.setStatus('current')
s350UserTrap1046 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1046)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1046.setStatus('current')
s350UserTrap1047 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1047)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1047.setStatus('current')
s350UserTrap1048 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1048)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1048.setStatus('current')
s350UserTrap1049 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1049)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1049.setStatus('current')
s350UserTrap1050 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1050)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1050.setStatus('current')
s350UserTrap1051 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1051)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1051.setStatus('current')
s350UserTrap1052 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1052)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1052.setStatus('current')
s350UserTrap1053 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1053)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1053.setStatus('current')
s350UserTrap1054 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1054)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1054.setStatus('current')
s350UserTrap1055 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1055)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1055.setStatus('current')
s350UserTrap1056 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1056)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1056.setStatus('current')
s350UserTrap1057 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1057)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1057.setStatus('current')
s350UserTrap1058 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1058)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1058.setStatus('current')
s350UserTrap1059 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1059)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1059.setStatus('current')
s350UserTrap1060 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1060)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1060.setStatus('current')
s350UserTrap1061 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1061)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1061.setStatus('current')
s350UserTrap1062 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1062)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1062.setStatus('current')
s350UserTrap1063 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1063)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1063.setStatus('current')
s350UserTrap1064 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1064)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1064.setStatus('current')
s350UserTrap1065 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1065)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1065.setStatus('current')
s350UserTrap1066 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1066)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1066.setStatus('current')
s350UserTrap1067 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1067)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1067.setStatus('current')
s350UserTrap1068 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1068)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1068.setStatus('current')
s350UserTrap1069 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1069)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1069.setStatus('current')
s350UserTrap1070 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1070)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1070.setStatus('current')
s350UserTrap1071 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1071)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1071.setStatus('current')
s350UserTrap1072 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1072)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1072.setStatus('current')
s350UserTrap1073 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1073)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1073.setStatus('current')
s350UserTrap1074 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1074)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1074.setStatus('current')
s350UserTrap1075 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1075)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1075.setStatus('current')
s350UserTrap1076 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1076)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1076.setStatus('current')
s350UserTrap1077 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1077)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1077.setStatus('current')
s350UserTrap1078 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1078)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1078.setStatus('current')
s350UserTrap1079 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1079)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1079.setStatus('current')
s350UserTrap1080 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1080)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1080.setStatus('current')
s350UserTrap1081 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1081)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1081.setStatus('current')
s350UserTrap1082 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1082)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1082.setStatus('current')
s350UserTrap1083 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1083)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1083.setStatus('current')
s350UserTrap1084 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1084)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1084.setStatus('current')
s350UserTrap1085 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1085)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1085.setStatus('current')
s350UserTrap1086 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1086)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1086.setStatus('current')
s350UserTrap1087 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1087)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1087.setStatus('current')
s350UserTrap1088 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1088)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1088.setStatus('current')
s350UserTrap1089 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1089)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1089.setStatus('current')
s350UserTrap1090 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1090)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1090.setStatus('current')
s350UserTrap1091 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1091)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1091.setStatus('current')
s350UserTrap1092 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1092)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1092.setStatus('current')
s350UserTrap1093 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1093)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1093.setStatus('current')
s350UserTrap1094 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1094)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1094.setStatus('current')
s350UserTrap1095 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1095)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1095.setStatus('current')
s350UserTrap1096 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1096)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1096.setStatus('current')
s350UserTrap1097 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1097)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1097.setStatus('current')
s350UserTrap1098 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1098)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1098.setStatus('current')
s350UserTrap1099 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1099)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1099.setStatus('current')
s350UserTrap1100 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1100)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1100.setStatus('current')
s350UserTrap1101 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1101)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1101.setStatus('current')
s350UserTrap1102 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1102)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1102.setStatus('current')
s350UserTrap1103 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1103)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1103.setStatus('current')
s350UserTrap1104 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1104)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1104.setStatus('current')
s350UserTrap1105 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1105)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1105.setStatus('current')
s350UserTrap1106 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1106)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1106.setStatus('current')
s350UserTrap1107 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1107)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1107.setStatus('current')
s350UserTrap1108 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1108)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1108.setStatus('current')
s350UserTrap1109 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1109)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1109.setStatus('current')
s350UserTrap1110 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1110)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1110.setStatus('current')
s350UserTrap1111 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1111)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1111.setStatus('current')
s350UserTrap1112 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1112)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1112.setStatus('current')
s350UserTrap1113 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1113)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1113.setStatus('current')
s350UserTrap1114 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1114)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1114.setStatus('current')
s350UserTrap1115 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1115)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1115.setStatus('current')
s350UserTrap1116 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1116)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1116.setStatus('current')
s350UserTrap1117 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1117)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1117.setStatus('current')
s350UserTrap1118 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1118)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1118.setStatus('current')
s350UserTrap1119 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1119)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1119.setStatus('current')
s350UserTrap1120 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1120)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1120.setStatus('current')
s350UserTrap1121 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1121)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1121.setStatus('current')
s350UserTrap1122 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1122)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1122.setStatus('current')
s350UserTrap1123 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1123)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1123.setStatus('current')
s350UserTrap1124 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1124)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1124.setStatus('current')
s350UserTrap1125 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1125)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1125.setStatus('current')
s350UserTrap1126 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1126)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1126.setStatus('current')
s350UserTrap1127 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1127)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1127.setStatus('current')
s350UserTrap1128 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1128)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1128.setStatus('current')
s350UserTrap1129 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1129)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1129.setStatus('current')
s350UserTrap1130 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1130)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1130.setStatus('current')
s350UserTrap1131 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1131)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1131.setStatus('current')
s350UserTrap1132 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1132)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1132.setStatus('current')
s350UserTrap1133 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1133)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1133.setStatus('current')
s350UserTrap1134 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1134)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1134.setStatus('current')
s350UserTrap1135 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1135)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1135.setStatus('current')
s350UserTrap1136 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1136)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1136.setStatus('current')
s350UserTrap1137 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1137)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1137.setStatus('current')
s350UserTrap1138 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1138)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1138.setStatus('current')
s350UserTrap1139 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1139)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1139.setStatus('current')
s350UserTrap1140 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1140)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1140.setStatus('current')
s350UserTrap1141 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1141)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1141.setStatus('current')
s350UserTrap1142 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1142)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1142.setStatus('current')
s350UserTrap1143 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1143)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1143.setStatus('current')
s350UserTrap1144 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1144)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1144.setStatus('current')
s350UserTrap1145 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1145)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1145.setStatus('current')
s350UserTrap1146 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1146)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1146.setStatus('current')
s350UserTrap1147 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1147)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1147.setStatus('current')
s350UserTrap1148 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1148)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1148.setStatus('current')
s350UserTrap1149 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1149)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1149.setStatus('current')
s350UserTrap1150 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1150)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1150.setStatus('current')
s350UserTrap1151 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1151)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1151.setStatus('current')
s350UserTrap1152 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1152)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1152.setStatus('current')
s350UserTrap1153 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1153)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1153.setStatus('current')
s350UserTrap1154 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1154)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1154.setStatus('current')
s350UserTrap1155 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1155)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1155.setStatus('current')
s350UserTrap1156 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1156)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1156.setStatus('current')
s350UserTrap1157 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1157)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1157.setStatus('current')
s350UserTrap1158 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1158)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1158.setStatus('current')
s350UserTrap1159 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1159)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1159.setStatus('current')
s350UserTrap1160 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1160)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1160.setStatus('current')
s350UserTrap1161 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1161)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1161.setStatus('current')
s350UserTrap1162 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1162)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1162.setStatus('current')
s350UserTrap1163 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1163)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1163.setStatus('current')
s350UserTrap1164 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1164)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1164.setStatus('current')
s350UserTrap1165 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1165)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1165.setStatus('current')
s350UserTrap1166 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1166)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1166.setStatus('current')
s350UserTrap1167 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1167)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1167.setStatus('current')
s350UserTrap1168 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1168)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1168.setStatus('current')
s350UserTrap1169 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1169)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1169.setStatus('current')
s350UserTrap1170 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1170)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1170.setStatus('current')
s350UserTrap1171 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1171)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1171.setStatus('current')
s350UserTrap1172 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1172)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1172.setStatus('current')
s350UserTrap1173 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1173)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1173.setStatus('current')
s350UserTrap1174 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1174)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1174.setStatus('current')
s350UserTrap1175 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1175)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1175.setStatus('current')
s350UserTrap1176 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1176)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1176.setStatus('current')
s350UserTrap1177 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1177)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1177.setStatus('current')
s350UserTrap1178 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1178)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1178.setStatus('current')
s350UserTrap1179 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1179)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1179.setStatus('current')
s350UserTrap1180 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1180)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1180.setStatus('current')
s350UserTrap1181 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1181)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1181.setStatus('current')
s350UserTrap1182 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1182)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1182.setStatus('current')
s350UserTrap1183 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1183)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1183.setStatus('current')
s350UserTrap1184 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1184)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1184.setStatus('current')
s350UserTrap1185 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1185)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1185.setStatus('current')
s350UserTrap1186 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1186)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1186.setStatus('current')
s350UserTrap1187 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1187)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1187.setStatus('current')
s350UserTrap1188 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1188)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1188.setStatus('current')
s350UserTrap1189 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1189)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1189.setStatus('current')
s350UserTrap1190 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1190)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1190.setStatus('current')
s350UserTrap1191 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1191)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1191.setStatus('current')
s350UserTrap1192 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1192)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1192.setStatus('current')
s350UserTrap1193 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1193)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1193.setStatus('current')
s350UserTrap1194 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1194)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1194.setStatus('current')
s350UserTrap1195 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1195)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1195.setStatus('current')
s350UserTrap1196 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1196)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1196.setStatus('current')
s350UserTrap1197 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1197)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1197.setStatus('current')
s350UserTrap1198 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1198)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1198.setStatus('current')
s350UserTrap1199 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 18, 0, 1199)).setObjects(("SITEBOSS-350-STD-MIB", "siteName"), ("SITEBOSS-350-STD-MIB", "esIndex"), ("SITEBOSS-350-STD-MIB", "esName"), ("SITEBOSS-350-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-350-STD-MIB", "trapEventTypeName"), ("SITEBOSS-350-STD-MIB", "esIndexPoint"), ("SITEBOSS-350-STD-MIB", "esPointName"), ("SITEBOSS-350-STD-MIB", "esID"), ("SITEBOSS-350-STD-MIB", "clock"), ("SITEBOSS-350-STD-MIB", "trapIncludedValue"), ("SITEBOSS-350-STD-MIB", "trapIncludedString"), ("SITEBOSS-350-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-350-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s350UserTrap1199.setStatus('current')
mibBuilder.exportSymbols("SITEBOSS-350-STD-MIB", pdnMainCurrentInEventState=pdnMainCurrentInEventState, s350UserTrap1019=s350UserTrap1019, sysTimeNetHostTable=sysTimeNetHostTable, s350UserTrap1018=s350UserTrap1018, eth1VLAN4=eth1VLAN4, bmTempLowActions=bmTempLowActions, acpmsAvgCurrentAvgStr=acpmsAvgCurrentAvgStr, sysSleepWakeScheduledEnable=sysSleepWakeScheduledEnable, s350BattMonStringChargingCurrentTrap=s350BattMonStringChargingCurrentTrap, eth2VLAN3ID=eth2VLAN3ID, secUserIndex=secUserIndex, scrDTRCtrlPortEnable=scrDTRCtrlPortEnable, fsVolumeLowTrapNum=fsVolumeLowTrapNum, bmChargingCurrentHighValue=bmChargingCurrentHighValue, s350UserTrap1189=s350UserTrap1189, esPointTimeLastChange=esPointTimeLastChange, esPointValueStr=esPointValueStr, evLocationTimeout=evLocationTimeout, s350UserTrap1198=s350UserTrap1198, s350UserTrap1009=s350UserTrap1009, fsVolumeVLowActions=fsVolumeVLowActions, acpmTPFLowValue=acpmTPFLowValue, bmVoltageDeadband=bmVoltageDeadband, esPointConfigTempTable=esPointConfigTempTable, bmDiffVoltEntry=bmDiffVoltEntry, esCCCombinedStatusBlock3=esCCCombinedStatusBlock3, evSched1Exclusions=evSched1Exclusions, acpmStatusTable=acpmStatusTable, acpmGenAddress=acpmGenAddress, acpmTRPVHighActions=acpmTRPVHighActions, fsGenTopOffset=fsGenTopOffset, acpmsAvgCurrentValueStr=acpmsAvgCurrentValueStr, evLogStoreAlarm=evLogStoreAlarm, evShskLowActions=evShskLowActions, eth2VLAN=eth2VLAN, fsLAAEventEnable=fsLAAEventEnable, keyInterface=keyInterface, scrName=scrName, acpmAvgCurrentVLowValue=acpmAvgCurrentVLowValue, espcTempVLowClass=espcTempVLowClass, batteryMonitorChargeLevelTable=batteryMonitorChargeLevelTable, fsSlowChangeActions=fsSlowChangeActions, wirelessMode=wirelessMode, trapAuthFailEnable=trapAuthFailEnable, bmjsAdmittanceChangeValue=bmjsAdmittanceChangeValue, sysCRDBFileIDTable=sysCRDBFileIDTable, eth2IPv6Auto=eth2IPv6Auto, acpmsAvgFreqMinStr=acpmsAvgFreqMinStr, wirelessConnIP1=wirelessConnIP1, bmChargeLevelLowClass=bmChargeLevelLowClass, acpmsRcPPhaseCValueStr=acpmsRcPPhaseCValueStr, accessControl=accessControl, eth1VLAN3SubnetMask=eth1VLAN3SubnetMask, s350UserTrap1184=s350UserTrap1184, espcHumidHighActions=espcHumidHighActions, bmChargingCurrentVHighValue=bmChargingCurrentVHighValue, wirelessConnectivity=wirelessConnectivity, eth1VLAN6ID=eth1VLAN6ID, s350UserTrap1132=s350UserTrap1132, trap=trap, s350UserTrap1031=s350UserTrap1031, pdnMainVoltageHighVoltage=pdnMainVoltageHighVoltage, eth2SubnetMask=eth2SubnetMask, secUserEntry=secUserEntry, schedRepeatYearlyJul=schedRepeatYearlyJul, espcTempNormalClass=espcTempNormalClass, acuIndexUser=acuIndexUser, fsVolumeEnable=fsVolumeEnable, bmVoltageSysrepLimit=bmVoltageSysrepLimit, snmpPRequestReadcom=snmpPRequestReadcom, fsDiscTrapNum=fsDiscTrapNum, acpmGeneralTable=acpmGeneralTable, s350UserTrap1024=s350UserTrap1024, s350UserTrap1088=s350UserTrap1088, acpmTRPLowTrapNum=acpmTRPLowTrapNum, wmsNetCode=wmsNetCode, acpmTRPHighValue=acpmTRPHighValue, eth1VLAN6Priority=eth1VLAN6Priority, thisProduct=thisProduct, acpmsTAPMaxStr=acpmsTAPMaxStr, s350=s350, evSched1Enable=evSched1Enable, s350UserTrap1120=s350UserTrap1120, acpmAvgVoltageHighClass=acpmAvgVoltageHighClass, bmDeviceReadcom=bmDeviceReadcom, acpmTPFVLowValue=acpmTPFVLowValue, fsGenBottomOffset=fsGenBottomOffset, esEntry=esEntry, espcAIConvUnitName=espcAIConvUnitName, eth1VLAN2Address=eth1VLAN2Address, bmChargingCurrentHighActions=bmChargingCurrentHighActions, espcAIVhighClass=espcAIVhighClass, s350UserTrap1020=s350UserTrap1020, bmChargeLevelVLowActions=bmChargeLevelVLowActions, scrVolatileIntTable=scrVolatileIntTable, espcTempLowTrapnum=espcTempLowTrapnum, secUserRights=secUserRights, s350UserTrap1078=s350UserTrap1078, acpmsVoltagePhaseAValueStr=acpmsVoltagePhaseAValueStr, s350UserTrap1147=s350UserTrap1147, sysPTTimeout=sysPTTimeout, eth1IPv6AutoAddress4=eth1IPv6AutoAddress4, acTrapnum=acTrapnum, s350UserTrap1097=s350UserTrap1097, bmVoltageVLowActions=bmVoltageVLowActions, acpmsTotalEnergyVA=acpmsTotalEnergyVA, esPointConfigCCEntry=esPointConfigCCEntry, schedIndex=schedIndex, bmDiffTempVHighTrapNum=bmDiffTempVHighTrapNum, acpmFreqVLowActions=acpmFreqVLowActions, bmDiffVoltVHighTrapNum=bmDiffVoltVHighTrapNum, accessControlDeviceEntry=accessControlDeviceEntry, scrRunScheduled=scrRunScheduled, acpmsAvgVoltageInEventState=acpmsAvgVoltageInEventState, fsSlowChangeEnable=fsSlowChangeEnable, fsVolumeDeadband=fsVolumeDeadband, s350UserTrap1081=s350UserTrap1081, pdnMainVoltageLowVoltage=pdnMainVoltageLowVoltage, sysSleepForceSleep=sysSleepForceSleep, evShskHighEntry=evShskHighEntry, wirelessFirewall=wirelessFirewall, cpeEntry=cpeEntry, espcCCNormalAlias=espcCCNormalAlias, eventSensorStatus=eventSensorStatus, s350UserTrap1152=s350UserTrap1152, s350UserTrap1170=s350UserTrap1170, trapInclude=trapInclude, pdnMainVoltageValueStr=pdnMainVoltageValueStr, sysCRDBFileEnforceMinEntry=sysCRDBFileEnforceMinEntry, acpmAvgVoltageTable=acpmAvgVoltageTable, sysMTU=sysMTU, evSched2Sunday=evSched2Sunday, s350FuelSensorLevelsAutoAdjustTrap=s350FuelSensorLevelsAutoAdjustTrap, schedRepeatYearlyAug=schedRepeatYearlyAug, s350UserTrap1021=s350UserTrap1021, fsStatusName=fsStatusName, esName=esName, bmVoltageVLowValue=bmVoltageVLowValue, auditLogStoreLogins=auditLogStoreLogins, s350UserTrap1156=s350UserTrap1156, acpmsTPFMaxStr=acpmsTPFMaxStr, esIndex=esIndex, productIds=productIds, acpmsTAPAvgStr=acpmsTAPAvgStr, s350ACTotalPowerFactorTrap=s350ACTotalPowerFactorTrap, acpmsTAPMinStr=acpmsTAPMinStr, portConfigDataFormat=portConfigDataFormat, evSleepClass=evSleepClass, eth1VLAN4SubnetMask=eth1VLAN4SubnetMask, pdnMainVoltageVLowVoltage=pdnMainVoltageVLowVoltage, schedRepeatYearlyOct=schedRepeatYearlyOct, acpmsVoltagePhaseCValueStr=acpmsVoltagePhaseCValueStr, s350UserTrap1114=s350UserTrap1114, s350UserTrap1036=s350UserTrap1036, espcTempHighActions=espcTempHighActions, acpmTPFVLowClass=acpmTPFVLowClass, actionSched=actionSched, fsGenSysrepPackage=fsGenSysrepPackage, eth2VLAN5ID=eth2VLAN5ID, schedRepeatYearlyJan=schedRepeatYearlyJan, espcCCEventState=espcCCEventState, scrNonVolatileIntEntry=scrNonVolatileIntEntry, fsSuddenChangeTrapNum=fsSuddenChangeTrapNum, espcAILowClass=espcAILowClass, ftpPushServer=ftpPushServer, bmTempLowClass=bmTempLowClass, bmDiffVoltVHighClass=bmDiffVoltVHighClass, espcCCEventClass=espcCCEventClass, s350UserTrap1187=s350UserTrap1187, s350UserTrap1050=s350UserTrap1050, s350UserTrap1061=s350UserTrap1061, fuelSensorDisconnectTable=fuelSensorDisconnectTable, acpmsAvgCurrentMinStr=acpmsAvgCurrentMinStr, pdnMainCurrentValueStr=pdnMainCurrentValueStr, espcHumidHighHumid=espcHumidHighHumid, pdnIndexPD=pdnIndexPD, pdnMainPowerValue=pdnMainPowerValue, bmChargeLevelIndex=bmChargeLevelIndex, eth1VLAN1Address=eth1VLAN1Address, bmDiffTempVHighActions=bmDiffTempVHighActions, acpmsPFPhaseAValueStr=acpmsPFPhaseAValueStr, evGlobal=evGlobal, bmDischargingCurrentVHighActions=bmDischargingCurrentVHighActions, esPointConfigHumidEntry=esPointConfigHumidEntry, fsSlowChangeTrapNum=fsSlowChangeTrapNum, wmsUpdated=wmsUpdated, cpeName=cpeName, fsDiscEntry=fsDiscEntry, acpmTPFNormalClass=acpmTPFNormalClass, acpmFreqNormalTrapNum=acpmFreqNormalTrapNum, bmJarHealthVLowClass=bmJarHealthVLowClass, fsVolumeLowValue=fsVolumeLowValue, bmVoltageVHighClass=bmVoltageVHighClass, scrRepeatInterval=scrRepeatInterval, s350UserTrap1153=s350UserTrap1153, eth1IPv6LinkLocalAddress=eth1IPv6LinkLocalAddress, espcHumidLowTrapnum=espcHumidLowTrapnum, acpmFreqEnable=acpmFreqEnable, eth2VLAN4Router=eth2VLAN4Router, fuelSensor=fuelSensor, bmJarHealthLowActions=bmJarHealthLowActions, espcTempLowActions=espcTempLowActions, espcTempVHighTemp=espcTempVHighTemp, sysCRDBFileIDEntry=sysCRDBFileIDEntry, bmDiffVoltEnable=bmDiffVoltEnable, espcOutputInactiveColor=espcOutputInactiveColor, esOutputCombinedStatusBlock2=esOutputCombinedStatusBlock2, bmjsIndexJar=bmjsIndexJar, evShskLowTable=evShskLowTable, espcAIVlowActions=espcAIVlowActions, eth2VLAN4Address=eth2VLAN4Address, schedRepeatMode=schedRepeatMode, eth2IPv6Mode=eth2IPv6Mode, genSetCCPoint=genSetCCPoint, evClassNameTable=evClassNameTable, wmsSIMStatus=wmsSIMStatus, wmsRegistration=wmsRegistration, sysLocLongitude=sysLocLongitude, bmVoltageVLowTrapNum=bmVoltageVLowTrapNum, fsSuddenChangeAmplitude=fsSuddenChangeAmplitude, s350StockPDVoltageTrap=s350StockPDVoltageTrap, pdnOutputFuseInEventState=pdnOutputFuseInEventState, acpmTRPDeadband=acpmTRPDeadband, genSetRelayRunningstate=genSetRelayRunningstate, acpmAvgCurrentSysrepEnable=acpmAvgCurrentSysrepEnable, batteryMonitorChargingCurrentTable=batteryMonitorChargingCurrentTable, pdnOutputCurrentValueStr=pdnOutputCurrentValueStr, eth2VLAN3=eth2VLAN3, pdnMainVoltageDeadband=pdnMainVoltageDeadband, acpmFreqLowClass=acpmFreqLowClass, ftpPushRemoteFileName=ftpPushRemoteFileName, portConfigMode=portConfigMode, bmGenBatteryQuantity=bmGenBatteryQuantity, acpmsTotalEnergyWh=acpmsTotalEnergyWh, fsCustomTankEntry=fsCustomTankEntry, acpmTRPSysrepEnable=acpmTRPSysrepEnable, ftpPushPushAudit=ftpPushPushAudit, acuName=acuName, s350UserTrap1159=s350UserTrap1159, acpmGenEntry=acpmGenEntry, acpmDisconnectNormalClass=acpmDisconnectNormalClass, acpmDisconnectTable=acpmDisconnectTable, s350UserTrap1051=s350UserTrap1051, ipv6DefaultRouter=ipv6DefaultRouter, snmpPRequestResultTime=snmpPRequestResultTime, calendar=calendar, acpmsAPPhaseBValueStr=acpmsAPPhaseBValueStr, eth1VLAN5ID=eth1VLAN5ID, fsVolumeVLowClass=fsVolumeVLowClass, acpmGenDevice=acpmGenDevice, sysPrompt=sysPrompt, sysCharMask=sysCharMask, acpmGenPtRatio=acpmGenPtRatio, snmpPoll=snmpPoll)
mibBuilder.exportSymbols("SITEBOSS-350-STD-MIB", espcHumidVLowActions=espcHumidVLowActions, bmGenIndex=bmGenIndex, evSched1Actions=evSched1Actions, genSetRelayTableIndex=genSetRelayTableIndex, espcTempVHighClass=espcTempVHighClass, espcAIConvHighUnit=espcAIConvHighUnit, acpmDisconnectTrapNum=acpmDisconnectTrapNum, esCCCombinedStatusBlock2=esCCCombinedStatusBlock2, evSched1=evSched1, bmsJarHealthValue=bmsJarHealthValue, acpmFreqLowValue=acpmFreqLowValue, fsVolumeNormalClass=fsVolumeNormalClass, scrDTRCtrlPortEnableEntry=scrDTRCtrlPortEnableEntry, eth1VLAN3Router=eth1VLAN3Router, sysLogMode=sysLogMode, s350UserTrap1015=s350UserTrap1015, bmsDischargingCurrentEvent=bmsDischargingCurrentEvent, evResetTrapnum=evResetTrapnum, wmsBand=wmsBand, trapEventTypeNumber=trapEventTypeNumber, portConfigHsk=portConfigHsk, fuelSensorGeneralTable=fuelSensorGeneralTable, sysCRDBFileIDIndex=sysCRDBFileIDIndex, s350UserTrap1128=s350UserTrap1128, secUserEventsReadAccess=secUserEventsReadAccess, bmDeviceType=bmDeviceType, deStatusCounter=deStatusCounter, wmsBER=wmsBER, eth2VLAN2Address=eth2VLAN2Address, scrVolatileIntIndex=scrVolatileIntIndex, wirelessConnIP2=wirelessConnIP2, evSched2Friday=evSched2Friday, fsVolumeNormalTrapNum=fsVolumeNormalTrapNum, eth2VLAN5Router=eth2VLAN5Router, bmDischargingCurrentSysrepLimit=bmDischargingCurrentSysrepLimit, espcAIVlowTrapnum=espcAIVlowTrapnum, snmp=snmp, secUserAccessFile=secUserAccessFile, consoleConfirm=consoleConfirm, acpmAvgCurrentSysrepThreshold=acpmAvgCurrentSysrepThreshold, schedRepeatMonthlyOnDay=schedRepeatMonthlyOnDay, acpmTPFDeadband=acpmTPFDeadband, eth1Router=eth1Router, bmTempHighClass=bmTempHighClass, bmTempHighValue=bmTempHighValue, pdnConfig=pdnConfig, wmsMpRACH=wmsMpRACH, acpmFreqLowActions=acpmFreqLowActions, espcOutputActiveAlias=espcOutputActiveAlias, bmDiffVoltIndex=bmDiffVoltIndex, acpmFreqNormalActions=acpmFreqNormalActions, espcAIHighClass=espcAIHighClass, acuTueBegin=acuTueBegin, wireless=wireless, espcCCEventTrapnum=espcCCEventTrapnum, eth2Mode=eth2Mode, eth1VLAN2=eth1VLAN2, acpmsAvgVoltageValueStr=acpmsAvgVoltageValueStr, trapEventTypeName=trapEventTypeName, ftpPushIncludeTime=ftpPushIncludeTime, s350UserTrap1196=s350UserTrap1196, bmDiffTempSysrepEnable=bmDiffTempSysrepEnable, eth2VLAN5Priority=eth2VLAN5Priority, espcTempLowClass=espcTempLowClass, acuMonBegin=acuMonBegin, esAnalogCombinedStatusBlock5=esAnalogCombinedStatusBlock5, eth2VLAN6ID=eth2VLAN6ID, bmDiffVoltSysrepEnable=bmDiffVoltSysrepEnable, ethernet2=ethernet2, esHumidCombinedStatus=esHumidCombinedStatus, bmJarHealthLowClass=bmJarHealthLowClass, s350UserTrap1048=s350UserTrap1048, sysPT=sysPT, s350UserTrap1052=s350UserTrap1052, bmJarHealthVLowTrapNum=bmJarHealthVLowTrapNum, auditLogStoreAlarmActions=auditLogStoreAlarmActions, actionHostTable=actionHostTable, ftpPushDirectory=ftpPushDirectory, bmDiffTempEntry=bmDiffTempEntry, bmJarStatusEntry=bmJarStatusEntry, s350UserTrap1182=s350UserTrap1182, evLocationMsgSuccess=evLocationMsgSuccess, s350UserTrap1055=s350UserTrap1055, wmsBScolor=wmsBScolor, eth2IPv6StaticRouter=eth2IPv6StaticRouter, s350UserTrap1011=s350UserTrap1011, espcTempNormalTrapnum=espcTempNormalTrapnum, bmChargeLevelEnable=bmChargeLevelEnable, bmJarHealthEntry=bmJarHealthEntry, s350UserTrap1101=s350UserTrap1101, pdnMainVoltageInEventState=pdnMainVoltageInEventState, s350UserTrap1059=s350UserTrap1059, evNoSensorClass=evNoSensorClass, bmVoltageHighTrapNum=bmVoltageHighTrapNum, actionEmailTable=actionEmailTable, espcHumidNormalTrapnum=espcHumidNormalTrapnum, bmDiffVoltHighActions=bmDiffVoltHighActions, s350UserTrap1057=s350UserTrap1057, espcHumidLowClass=espcHumidLowClass, s350StockScriptTrap=s350StockScriptTrap, eth2IPv6AutoAddress4=eth2IPv6AutoAddress4, evShskHighClass=evShskHighClass, acpmAvgVoltageVLowTrapNum=acpmAvgVoltageVLowTrapNum, actionAsentriaVersion=actionAsentriaVersion, scrNonVolatileString=scrNonVolatileString, genRunDuration=genRunDuration, genRunNonstartEvent=genRunNonstartEvent, s350UserTrap1173=s350UserTrap1173, espcCCEventActions=espcCCEventActions, eth2VLAN3Priority=eth2VLAN3Priority, ethernet1=ethernet1, schedRepeatYearlyOnDay=schedRepeatYearlyOnDay, scrVolatileString=scrVolatileString, sysTimeNetHostEntry=sysTimeNetHostEntry, arpFilter=arpFilter, acpmFreqSysrepLimit=acpmFreqSysrepLimit, fsTankHeight=fsTankHeight, genRunNonstartEventActions=genRunNonstartEventActions, acpmAvgVoltageVHighTrapNum=acpmAvgVoltageVHighTrapNum, fuelSensorSuddenChangeTable=fuelSensorSuddenChangeTable, snmpProxyEgressOIDBranch=snmpProxyEgressOIDBranch, eth2VLAN1=eth2VLAN1, s350UserTrap1087=s350UserTrap1087, accessControlUserTable=accessControlUserTable, espcTempDeadband=espcTempDeadband, scrScheduleTime=scrScheduleTime, acpmTRPNormalActions=acpmTRPNormalActions, espcHumidNormalActions=espcHumidNormalActions, ipRestrictionEnable=ipRestrictionEnable, acdOpenTime=acdOpenTime, espcAIConvLowValue=espcAIConvLowValue, fsVolumeVHighClass=fsVolumeVHighClass, acpmsAvgFreqValueStr=acpmsAvgFreqValueStr, acuWedBegin=acuWedBegin, eth2VLAN1ID=eth2VLAN1ID, s350UserTrap1122=s350UserTrap1122, fsTankDimB=fsTankDimB, genRun=genRun, ftpPushPushFileEntry=ftpPushPushFileEntry, espcCCReminderInterval=espcCCReminderInterval, espcHumidVHighTrapnum=espcHumidVHighTrapnum, scrNonVolatileInt=scrNonVolatileInt, scrVolatileStringEntry=scrVolatileStringEntry, eth2VLAN6Address=eth2VLAN6Address, acpmAvgVoltageEntry=acpmAvgVoltageEntry, evShskLowTrapNum=evShskLowTrapNum, wirelessModemStatus=wirelessModemStatus, pdnEntry=pdnEntry, wmsChannel=wmsChannel, sysFileTransferPassword=sysFileTransferPassword, sysSleepSleepTimer=sysSleepSleepTimer, eventSensorBasics=eventSensorBasics, evSched2Actions=evSched2Actions, cpeInfoReset=cpeInfoReset, bmsChargeLevelEvent=bmsChargeLevelEvent, ethRoutingNATEnable=ethRoutingNATEnable, trapIncludeSourceAddress=trapIncludeSourceAddress, s350UserTrap1086=s350UserTrap1086, acpmTRPVLowActions=acpmTRPVLowActions, evSched2Exclusions=evSched2Exclusions, actionHostEntry=actionHostEntry, s350UserTrap1105=s350UserTrap1105, evReminderInterval=evReminderInterval, interface=interface, eth2VLAN1Address=eth2VLAN1Address, emailDomain=emailDomain, pdnMainCurrentDeadband=pdnMainCurrentDeadband, s350AccessControlTrap=s350AccessControlTrap, bmChargingCurrentHighClass=bmChargingCurrentHighClass, espcAIVlowClass=espcAIVlowClass, s350UserTrap1171=s350UserTrap1171, acpmDisconnectNormalActions=acpmDisconnectNormalActions, genSetCC=genSetCC, fsVolumeHighValue=fsVolumeHighValue, acpmsTPFValueStr=acpmsTPFValueStr, acpmsAvgCurrentMaxStr=acpmsAvgCurrentMaxStr, auditLogStoreSHSK=auditLogStoreSHSK, espcCCEnable=espcCCEnable, hostIndex=hostIndex, s350UserTrap1056=s350UserTrap1056, schedRepeatFreq=schedRepeatFreq, s350FuelSensorDisconnectTrap=s350FuelSensorDisconnectTrap, bmDiffTempHighValue=bmDiffTempHighValue, acpmAvgCurrentVHighValue=acpmAvgCurrentVHighValue, espcOutputAliasColor=espcOutputAliasColor, s350UserTrap1029=s350UserTrap1029, s350BattMonStringChargeLevelTrap=s350BattMonStringChargeLevelTrap, pdnIndexOutput=pdnIndexOutput, portConfigId=portConfigId, scrNonVolatileStringTable=scrNonVolatileStringTable, pdnMainCurrentValue=pdnMainCurrentValue, unitSecurity=unitSecurity, s350UserTrap1138=s350UserTrap1138, fsDiscActions=fsDiscActions, s350UserTrap1023=s350UserTrap1023, s350UserTrap1038=s350UserTrap1038, eth1VLAN6Router=eth1VLAN6Router, wmsBaseCoeff=wmsBaseCoeff, acpmAvgVoltageVLowActions=acpmAvgVoltageVLowActions, acpmsCombined=acpmsCombined, actionSchedEnable=actionSchedEnable, fsDiscNormalClass=fsDiscNormalClass, s350UserTrap1054=s350UserTrap1054, s350UserTrap1111=s350UserTrap1111, cpeDescription=cpeDescription, fsGenDistanceUnit=fsGenDistanceUnit, sysTime=sysTime, scShowPasswordPrompt=scShowPasswordPrompt, eth1Mode=eth1Mode, bmDischargingCurrentHighValue=bmDischargingCurrentHighValue, ethRoutingEnable=ethRoutingEnable, s350UserTrap1181=s350UserTrap1181, acpmTRPSysrepThreshold=acpmTRPSysrepThreshold, generator=generator, s350UserTrap1115=s350UserTrap1115, acpmFreqVHighClass=acpmFreqVHighClass, evClassNameEntry=evClassNameEntry, s350UserTrap1082=s350UserTrap1082, s350UserTrap1058=s350UserTrap1058, esAnalogCombinedStatusBlock2=esAnalogCombinedStatusBlock2, sysCRDB=sysCRDB, acuSunBegin=acuSunBegin, wmsPhnum=wmsPhnum, evSched1Wednesday=evSched1Wednesday, acpmAvgVoltageHighTrapNum=acpmAvgVoltageHighTrapNum, sysAnswerString=sysAnswerString, esAnalogCombinedStatusBlock4=esAnalogCombinedStatusBlock4, espcAIDisplayFormat=espcAIDisplayFormat, acpmsAvgFreqMaxStr=acpmsAvgFreqMaxStr, fsTankIndex=fsTankIndex, ipRestrictionIndex=ipRestrictionIndex, acpmAvgCurrentLowClass=acpmAvgCurrentLowClass, bmTempLowValue=bmTempLowValue, s350UserTrap1065=s350UserTrap1065, sysLocXOffset=sysLocXOffset, eth2VLAN5=eth2VLAN5, numberPorts=numberPorts, s350UserTrap1049=s350UserTrap1049, bmChargingCurrentEntry=bmChargingCurrentEntry, auditLogStoreOutputs=auditLogStoreOutputs, fsSlowChangeEntry=fsSlowChangeEntry, sysEventFileID=sysEventFileID, fsStatusEntry=fsStatusEntry, bmjsVoltageValue=bmjsVoltageValue, bmTempSysrepEnable=bmTempSysrepEnable, acpmsAvgVoltageMaxStr=acpmsAvgVoltageMaxStr, PYSNMP_MODULE_ID=s350, eth2IPv6LinkLocalAddress=eth2IPv6LinkLocalAddress, pdnOutputCurrentVLowCurrent=pdnOutputCurrentVLowCurrent, actionAsentriaTCPPort=actionAsentriaTCPPort, esNumberEventSensors=esNumberEventSensors, acpmGenIndex=acpmGenIndex, esIndexES=esIndexES, s350UserTrap1199=s350UserTrap1199)
mibBuilder.exportSymbols("SITEBOSS-350-STD-MIB", fsDiscClass=fsDiscClass, bmDiffTempNormalClass=bmDiffTempNormalClass, actionSchedBegin=actionSchedBegin, bmDischargingCurrentNormalClass=bmDischargingCurrentNormalClass, pdnOutputCombinedStatusBlock2=pdnOutputCombinedStatusBlock2, s350UserTrap1043=s350UserTrap1043, evLocation=evLocation, secUserEnable=secUserEnable, esNumberAirflowSensors=esNumberAirflowSensors, fsStatusTable=fsStatusTable, auditLogStoreCommands=auditLogStoreCommands, esIndexPC=esIndexPC, esOutputReportingMode=esOutputReportingMode, s350StockCTSTrap=s350StockCTSTrap, scrArguments=scrArguments, sysFileTransferURL=sysFileTransferURL, esAnalogCombinedStatusBlock3=esAnalogCombinedStatusBlock3, espcCCOverrideGlobalReminder=espcCCOverrideGlobalReminder, s350UserTrap1062=s350UserTrap1062, eth1IPv6StaticAddress=eth1IPv6StaticAddress, accessControlUserEntry=accessControlUserEntry, s350UserTrap1075=s350UserTrap1075, sysFileTransferUsername=sysFileTransferUsername, wirelessPPPUsername=wirelessPPPUsername, evLocationActions=evLocationActions, acpmTPFEntry=acpmTPFEntry, evSched1Tuesday=evSched1Tuesday, esPointTimetickLastChange=esPointTimetickLastChange, portConfigEntry=portConfigEntry, s350UserTrap1053=s350UserTrap1053, s350UserTrap1026=s350UserTrap1026, bmDiffTempSysrepThreshold=bmDiffTempSysrepThreshold, s350UserTrap1003=s350UserTrap1003, bmChargingCurrentDeadband=bmChargingCurrentDeadband, s350UserTrap1194=s350UserTrap1194, scrFilename=scrFilename, pdnMainCurrentVLowCurrent=pdnMainCurrentVLowCurrent, fsSlowChangeTime=fsSlowChangeTime, acpmsName=acpmsName, evShskHighTrapNum=evShskHighTrapNum, fsSuddenChangeClass=fsSuddenChangeClass, acpmAvgCurrentVHighClass=acpmAvgCurrentVHighClass, sysFileTransfer=sysFileTransfer, acpmAvgCurrentHighActions=acpmAvgCurrentHighActions, genSetRelay=genSetRelay, genSetRelayTableEs=genSetRelayTableEs, fsLAAEntry=fsLAAEntry, bmJarHealthSysrepEnable=bmJarHealthSysrepEnable, espcOutputIndexPoint=espcOutputIndexPoint, evResetMessage=evResetMessage, dnsIndex=dnsIndex, s350UserTrap1179=s350UserTrap1179, sysTimeNetEnable=sysTimeNetEnable, evSched1Friday=evSched1Friday, acpmTRPHighTrapNum=acpmTRPHighTrapNum, evLogStoreSensor=evLogStoreSensor, emailAuthEnable=emailAuthEnable, action=action, acpmTPFVLowTrapNum=acpmTPFVLowTrapNum, s350UserTrap1145=s350UserTrap1145, fsDiscLowValue=fsDiscLowValue, espcHumidLowActions=espcHumidLowActions, schedRepeatYearlySep=schedRepeatYearlySep, s350UserTrap1068=s350UserTrap1068, s350UserTrap1192=s350UserTrap1192, acpmTPFSysrepLimit=acpmTPFSysrepLimit, sysTimeStampTimeFormat=sysTimeStampTimeFormat, fsCustomTankIndexDatum=fsCustomTankIndexDatum, bmsChargingCurrentEvent=bmsChargingCurrentEvent, ftpPushPushFile=ftpPushPushFile, ftpPushRemoteFileIndex=ftpPushRemoteFileIndex, bmGenBatteryCapacity=bmGenBatteryCapacity, ipRestrictionMask=ipRestrictionMask, bmChargingCurrentSysrepEnable=bmChargingCurrentSysrepEnable, s350UserTrap1169=s350UserTrap1169, esNumberTempSensors=esNumberTempSensors, acpmStatusEntry=acpmStatusEntry, s350StockImmediateTrap=s350StockImmediateTrap, acpmTRPLowActions=acpmTRPLowActions, acpmFreqDeadband=acpmFreqDeadband, sysSleepWakeTimerMotion=sysSleepWakeTimerMotion, deStatusTable=deStatusTable, acpmGenEnable=acpmGenEnable, s350UserTrap1103=s350UserTrap1103, bmChargingCurrentNormalActions=bmChargingCurrentNormalActions, acpmsRPPhaseBValueStr=acpmsRPPhaseBValueStr, esPointConfigAIEntry=esPointConfigAIEntry, acpmDisconnectIndex=acpmDisconnectIndex, esPointConfigAITable=esPointConfigAITable, webTimeout=webTimeout, s350UserTrap1193=s350UserTrap1193, actionEmailEntry=actionEmailEntry, acpmAvgCurrentNormalTrapNum=acpmAvgCurrentNormalTrapNum, eth2VLAN4Priority=eth2VLAN4Priority, espcAINormalClass=espcAINormalClass, bmGenEnable=bmGenEnable, acpmsIndex=acpmsIndex, acpmsVoltagePhaseBValueStr=acpmsVoltagePhaseBValueStr, eth2VLAN1Router=eth2VLAN1Router, evShskLowEnable=evShskLowEnable, s350UserTrap1149=s350UserTrap1149, snmpProxyTable=snmpProxyTable, fsSuddenChangeEnable=fsSuddenChangeEnable, s350UserTrap1010=s350UserTrap1010, fsGenEnable=fsGenEnable, esTempCombinedStatus=esTempCombinedStatus, s350UserTrap1130=s350UserTrap1130, espcCCThreshold=espcCCThreshold, bmTempSysrepThreshold=bmTempSysrepThreshold, s350UserTrap1037=s350UserTrap1037, ethernet=ethernet, espcOutputActiveActions=espcOutputActiveActions, espcHumidIndexES=espcHumidIndexES, bmTempNormalTrapNum=bmTempNormalTrapNum, batteryMonitor=batteryMonitor, bmChargingCurrentNormalClass=bmChargingCurrentNormalClass, evSched2Tuesday=evSched2Tuesday, wmsICCID=wmsICCID, fsStatusVolumeInEventState=fsStatusVolumeInEventState, evShskLowClass=evShskLowClass, acpmAvgCurrentHighValue=acpmAvgCurrentHighValue, s350UserTrap1116=s350UserTrap1116, pdConfig=pdConfig, evSched1Saturday=evSched1Saturday, acpmAvgCurrentLowValue=acpmAvgCurrentLowValue, wirelessAPN=wirelessAPN, fsVolumeVLowValue=fsVolumeVLowValue, s350UserTrap1071=s350UserTrap1071, snmpPRequestResultType=snmpPRequestResultType, fsCustomTankHeight=fsCustomTankHeight, eth2IPv6Static=eth2IPv6Static, trapIncludeSiteName=trapIncludeSiteName, fuelSensorTankTable=fuelSensorTankTable, actionHostIndex=actionHostIndex, s350UserTrap1180=s350UserTrap1180, time=time, fsDiscEnable=fsDiscEnable, s350BattMonStringTemperatureTrap=s350BattMonStringTemperatureTrap, acpmAvgCurrentLowActions=acpmAvgCurrentLowActions, schedRepeatWeeklySun=schedRepeatWeeklySun, schedRepeatEndAfter=schedRepeatEndAfter, bmsVoltageEvent=bmsVoltageEvent, s350UserTrap1080=s350UserTrap1080, wmsLAC=wmsLAC, hostEntry=hostEntry, bmTempScale=bmTempScale, snmpProxyIndex=snmpProxyIndex, trapTypeString=trapTypeString, s350UserTrap1000=s350UserTrap1000, acuEnable=acuEnable, batteryMonitorTempTable=batteryMonitorTempTable, bmTempEnable=bmTempEnable, scrNonVolatileIntTable=scrNonVolatileIntTable, eth2VLAN6Router=eth2VLAN6Router, acpmAvgVoltageHighActions=acpmAvgVoltageHighActions, ftpPushIncludeDate=ftpPushIncludeDate, espcHumidVHighHumid=espcHumidVHighHumid, acpmFreqVLowClass=acpmFreqVLowClass, bmChargingCurrentHighTrapNum=bmChargingCurrentHighTrapNum, espcCCNormalThreshold=espcCCNormalThreshold, acpmTRPLowClass=acpmTRPLowClass, snmpProxyPort=snmpProxyPort, espcTempHighTemp=espcTempHighTemp, bmJarHealthIndex=bmJarHealthIndex, secUserEventsWriteAccess=secUserEventsWriteAccess, wirelessConnCheckInterval=wirelessConnCheckInterval, s350UserTrap1001=s350UserTrap1001, acpmTRPVLowTrapNum=acpmTRPVLowTrapNum, batteryMonitorVoltageTable=batteryMonitorVoltageTable, deStatusName=deStatusName, auditLogStorePwdFailures=auditLogStorePwdFailures, bmDiffTempSysrepLimit=bmDiffTempSysrepLimit, eth1VLAN5=eth1VLAN5, trapIncludeSensorID=trapIncludeSensorID, pdnMainVoltageVHighVoltage=pdnMainVoltageVHighVoltage, eth2IPv6AutoAddress2=eth2IPv6AutoAddress2, eth1VLAN1Router=eth1VLAN1Router, sysLogFileSize=sysLogFileSize, evResetEnable=evResetEnable, wmsCellID=wmsCellID, evGlobalTrapnum=evGlobalTrapnum, bmDeviceInputString=bmDeviceInputString, wmsMgfID=wmsMgfID, auditLogStorePassthrough=auditLogStorePassthrough, s350UserTrap1012=s350UserTrap1012, bmTempEntry=bmTempEntry, cpeEventReminderInterval=cpeEventReminderInterval, bmVoltageNormalTrapNum=bmVoltageNormalTrapNum, eth2VLAN2SubnetMask=eth2VLAN2SubnetMask, s350UserTrap1136=s350UserTrap1136, sfEnable=sfEnable, sysLogListenPort=sysLogListenPort, s350ACPowerMonitorTRPTrap=s350ACPowerMonitorTRPTrap, sysBootStatus=sysBootStatus, acpmGenSysrepPackage=acpmGenSysrepPackage, s350BattMonStringJarHealthTrap=s350BattMonStringJarHealthTrap, eth1IPv6AutoAddress3=eth1IPv6AutoAddress3, fsGenRawValueTop=fsGenRawValueTop, espcHumidHighClass=espcHumidHighClass, esHumidReportingMode=esHumidReportingMode, ftpPushIncludeSeq=ftpPushIncludeSeq, acpmFreqVHighActions=acpmFreqVHighActions, bmVoltageHighActions=bmVoltageHighActions, eth2VLAN1SubnetMask=eth2VLAN1SubnetMask, acuSatBegin=acuSatBegin, s350UserTrap1002=s350UserTrap1002, genSetCCRunningState=genSetCCRunningState, acpmsTRcPValueStr=acpmsTRcPValueStr, acpmDisconnectEnable=acpmDisconnectEnable, pdnOutputFuseValueStr=pdnOutputFuseValueStr, s350UserTrap1007=s350UserTrap1007, acpmsAvgFreqInEventState=acpmsAvgFreqInEventState, acpmAvgVoltageNormalTrapNum=acpmAvgVoltageNormalTrapNum, acpmAvgVoltageLowActions=acpmAvgVoltageLowActions, eth1VLAN1ID=eth1VLAN1ID, hostTable=hostTable, esNoiseReportingMode=esNoiseReportingMode, fsVolumeLowActions=fsVolumeLowActions, eth2VLAN4ID=eth2VLAN4ID, sysUpdateStatus=sysUpdateStatus, sfSecret=sfSecret, acpmFreqHighActions=acpmFreqHighActions, wmsLocalIP=wmsLocalIP, netSecurity=netSecurity, acpmAvgCurrentVHighTrapNum=acpmAvgCurrentVHighTrapNum, esPointConfigOutputTable=esPointConfigOutputTable, acpmAvgCurrentNormalClass=acpmAvgCurrentNormalClass, s350UserTrap1073=s350UserTrap1073, s350UserTrap1137=s350UserTrap1137, ftpPushRemoteFileEntry=ftpPushRemoteFileEntry, fsTankShape=fsTankShape, acpmsPFPhaseBValueStr=acpmsPFPhaseBValueStr, eth2IPv6AutoAddress1=eth2IPv6AutoAddress1, ftpPushPushFileIndex=ftpPushPushFileIndex, web=web, batteryMonitorStatus=batteryMonitorStatus, bmVoltageLowClass=bmVoltageLowClass, s350UserTrap1174=s350UserTrap1174, espcOutputInactiveTrapnum=espcOutputInactiveTrapnum, acpmTRPSysrepLimit=acpmTRPSysrepLimit, sysTimeStampSpaceAfter=sysTimeStampSpaceAfter, bmDischargingCurrentDeadband=bmDischargingCurrentDeadband, actionSchedWeekdaysOnly=actionSchedWeekdaysOnly, acpmsTAPValueStr=acpmsTAPValueStr, snmpPRequestOID=snmpPRequestOID, genSetCCEs=genSetCCEs, webPort=webPort, evSched1Sunday=evSched1Sunday, fuelSensorStatus=fuelSensorStatus, cpeKeepaliveTicks=cpeKeepaliveTicks, bmDeviceEntry=bmDeviceEntry, bmDiffTempDeadband=bmDiffTempDeadband, fuelSensorCustomTankTable=fuelSensorCustomTankTable, s350UserTrap1025=s350UserTrap1025)
mibBuilder.exportSymbols("SITEBOSS-350-STD-MIB", acpmsRcPPhaseAValueStr=acpmsRcPPhaseAValueStr, bmTempNormalClass=bmTempNormalClass, bmsTempEvent=bmsTempEvent, accessControlDeviceTable=accessControlDeviceTable, bmsCurrentValue=bmsCurrentValue, esNumberAnalog=esNumberAnalog, genRunNonstartEventTrap=genRunNonstartEventTrap, acpmsTRPMaxStr=acpmsTRPMaxStr, scSecret=scSecret, snmpProxyIngressOIDBranch=snmpProxyIngressOIDBranch, fsGenFilterAveraging=fsGenFilterAveraging, esTempReportingMode=esTempReportingMode, acpmAvgCurrentSysrepLimit=acpmAvgCurrentSysrepLimit, s350UserTrap1108=s350UserTrap1108, bmTempDeadband=bmTempDeadband, esNewSensors=esNewSensors, espcTempVHighActions=espcTempVHighActions, eth1VLAN3ID=eth1VLAN3ID, acpmTPFEnable=acpmTPFEnable, scrGlobalEnable=scrGlobalEnable, acpmTRPEntry=acpmTRPEntry, acpmTotalPowerFactorTable=acpmTotalPowerFactorTable, acuThuEnd=acuThuEnd, sysTimeGMTOffset=sysTimeGMTOffset, bmDischargingCurrentEnable=bmDischargingCurrentEnable, eth1VLAN4Address=eth1VLAN4Address, acpmTPFSysrepThreshold=acpmTPFSysrepThreshold, trapIncludeDateTime=trapIncludeDateTime, ftpPush=ftpPush, acpmAvgCurrentHighClass=acpmAvgCurrentHighClass, pdnOutputCurrentVHighCurrent=pdnOutputCurrentVHighCurrent, s350FuelSensorVolumeSlowChangeTrap=s350FuelSensorVolumeSlowChangeTrap, trapIncludedString=trapIncludedString, bmsStringState=bmsStringState, evSched2Saturday=evSched2Saturday, bmJarHealthNormalTrapNum=bmJarHealthNormalTrapNum, sysCRDBFileID=sysCRDBFileID, ftpPushAccount=ftpPushAccount, acdRelayPoint=acdRelayPoint, bmJarHealthEnable=bmJarHealthEnable, scrTable=scrTable, genSetCCDelay=genSetCCDelay, acpmAvgCurrentDeadband=acpmAvgCurrentDeadband, bmsName=bmsName, sysSleepWakeScheduledTimeOfDay=sysSleepWakeScheduledTimeOfDay, acpmAvgVoltageNormalActions=acpmAvgVoltageNormalActions, s350ACPowerMonitorAvgVoltageTrap=s350ACPowerMonitorAvgVoltageTrap, fsGenIndex=fsGenIndex, eth2VLAN2ID=eth2VLAN2ID, s350UserTrap1104=s350UserTrap1104, acuFriBegin=acuFriBegin, bmChargingCurrentVHighActions=bmChargingCurrentVHighActions, dnsAddress=dnsAddress, bmsTempValue=bmsTempValue, auditLogEnable=auditLogEnable, sysPTJoinable=sysPTJoinable, wmsIMEI=wmsIMEI, acpmTPFLowClass=acpmTPFLowClass, bmDeviceCTSize=bmDeviceCTSize, sysLocAltitude=sysLocAltitude, sysCRDBFileEnforceMinTable=sysCRDBFileEnforceMinTable, s350ACPowerMonitorFrequencyTrap=s350ACPowerMonitorFrequencyTrap, cpeTable=cpeTable, scrEntry=scrEntry, evLocationEnable=evLocationEnable, esPointInEventState=esPointInEventState, sysSleepWakeMotionEnable=sysSleepWakeMotionEnable, snmpPRequestPeriod=snmpPRequestPeriod, s350StockContactClosureTrap=s350StockContactClosureTrap, acpmFreqVLowValue=acpmFreqVLowValue, pdnMainPowerValueStr=pdnMainPowerValueStr, scrDTRCtrlPortEnableIndex=scrDTRCtrlPortEnableIndex, fsStatusDeviceState=fsStatusDeviceState, bmVoltageNormalClass=bmVoltageNormalClass, genSetRelayEs=genSetRelayEs, fsLAAEventTrapNum=fsLAAEventTrapNum, bmVoltageSysrepEnable=bmVoltageSysrepEnable, scrEnable=scrEnable, schedRepeatWeeklyThu=schedRepeatWeeklyThu, ftpPushperiod=ftpPushperiod, secUserChallengeExpiration=secUserChallengeExpiration, acpmsTRPMinStr=acpmsTRPMinStr, s350UserTrap1064=s350UserTrap1064, wmsRSSI=wmsRSSI, espcTempEnable=espcTempEnable, cpeKeepalive=cpeKeepalive, acdName=acdName, fsStatusVolumePercentLevel=fsStatusVolumePercentLevel, acdWiegandES=acdWiegandES, acpmDisconnectNormalTrapNum=acpmDisconnectNormalTrapNum, defaultRouter=defaultRouter, s350UserTrap1008=s350UserTrap1008, s350UserTrap1046=s350UserTrap1046, eth2VLAN1Priority=eth2VLAN1Priority, acpmAvgVoltageLowValue=acpmAvgVoltageLowValue, bmChargeLevelLowActions=bmChargeLevelLowActions, s350UserTrap1143=s350UserTrap1143, ipRestriction=ipRestriction, pdnDeviceCurrentValue=pdnDeviceCurrentValue, eth1VLAN3Priority=eth1VLAN3Priority, acpmTRPIndex=acpmTRPIndex, bmChargeLevelNormalActions=bmChargeLevelNormalActions, s350UserTrap1094=s350UserTrap1094, s350UserTrap1096=s350UserTrap1096, scrNonVolatileStringEntry=scrNonVolatileStringEntry, espcHumidHighTrapnum=espcHumidHighTrapnum, genSetRelayTableEntry=genSetRelayTableEntry, acpmsTRPInEventState=acpmsTRPInEventState, acpmAvgCurrentNormalActions=acpmAvgCurrentNormalActions, acuMonEnd=acuMonEnd, acpmTRPVHighValue=acpmTRPVHighValue, genSetRelayTable=genSetRelayTable, snmpNotificationTx=snmpNotificationTx, secUserAuditWriteAccess=secUserAuditWriteAccess, s350BattMonStringDischargingCurrentTrap=s350BattMonStringDischargingCurrentTrap, s350UserTrap1154=s350UserTrap1154, s350UserTrap1014=s350UserTrap1014, evSleepEnable=evSleepEnable, routing=routing, espcAIVhighActions=espcAIVhighActions, evShskLowIndex=evShskLowIndex, fsGenSensorType=fsGenSensorType, scrRunAtStartup=scrRunAtStartup, trapIncludedValue=trapIncludedValue, fsLAAEventThreshold=fsLAAEventThreshold, eth1VLAN3Address=eth1VLAN3Address, acpmAvgVoltageVHighValue=acpmAvgVoltageVHighValue, evSleepTrapnum=evSleepTrapnum, espcOutputActiveColor=espcOutputActiveColor, evShskLowEntry=evShskLowEntry, emailServer=emailServer, eth2Router=eth2Router, snmpPRequestTable=snmpPRequestTable, espcTempIndexPoint=espcTempIndexPoint, s350StockTempTrap=s350StockTempTrap, acpmAvgCurrentVLowClass=acpmAvgCurrentVLowClass, s350UserTrap1165=s350UserTrap1165, espcHumidDeadband=espcHumidDeadband, wmsGPRSStatus=wmsGPRSStatus, evSched1Thursday=evSched1Thursday, acpmAvgVoltageEnable=acpmAvgVoltageEnable, s350UserTrap1134=s350UserTrap1134, fsTankEntry=fsTankEntry, schedEntry=schedEntry, acpmAvgVoltageVLowValue=acpmAvgVoltageVLowValue, eth1VLAN5Address=eth1VLAN5Address, evShskHighEnable=evShskHighEnable, cpe=cpe, fsGenEntry=fsGenEntry, fsGenName=fsGenName, cpeInfoNumLostResp=cpeInfoNumLostResp, evLogPrependName=evLogPrependName, fsSuddenChangeActions=fsSuddenChangeActions, evShskHighTable=evShskHighTable, s350UserTrap1150=s350UserTrap1150, network=network, acPowerMonitor=acPowerMonitor, bmVoltageVHighValue=bmVoltageVHighValue, sysSleepWake=sysSleepWake, pdnOutputCurrentInEventState=pdnOutputCurrentInEventState, eth2Address=eth2Address, scRightsGroup=scRightsGroup, acpmAvgVoltageLowClass=acpmAvgVoltageLowClass, wmsStatus=wmsStatus, eth1VLAN4Priority=eth1VLAN4Priority, wmsCountryCode=wmsCountryCode, genSet=genSet, s350UserTrap1089=s350UserTrap1089, esAnalogCombinedStatusBlock1=esAnalogCombinedStatusBlock1, esCCCombinedStatusBlock8=esCCCombinedStatusBlock8, evSleepMessage=evSleepMessage, espcAINormalActions=espcAINormalActions, bmChargingCurrentEnable=bmChargingCurrentEnable, acpmTRPHighActions=acpmTRPHighActions, sysTimeAutoDST=sysTimeAutoDST, acpmsCurrentPhaseAValueStr=acpmsCurrentPhaseAValueStr, acpmFreqEntry=acpmFreqEntry, evSched2Thursday=evSched2Thursday, esAnalogCombinedStatusBlock6=esAnalogCombinedStatusBlock6, snmpProxy=snmpProxy, espcTempNormalActions=espcTempNormalActions, sysSleepPowerDetectCCThreshold=sysSleepPowerDetectCCThreshold, fsLAAEventActions=fsLAAEventActions, eth2VLAN2Priority=eth2VLAN2Priority, eth1VLAN1=eth1VLAN1, bmChargeLevelEntry=bmChargeLevelEntry, fsVolumeEntry=fsVolumeEntry, genSetRelayPoint=genSetRelayPoint, acpmsTRcPAvgStr=acpmsTRcPAvgStr, consoleDuplex=consoleDuplex, schedRepeatWeeklyMon=schedRepeatWeeklyMon, esPointAliasValueStr=esPointAliasValueStr, s350CameraTrap=s350CameraTrap, actionEmail=actionEmail, snmpPRequestDescription=snmpPRequestDescription, s350UserTrap1042=s350UserTrap1042, acpmsRcPPhaseBValueStr=acpmsRcPPhaseBValueStr, pdnOutputCurrentLowCurrent=pdnOutputCurrentLowCurrent, pdnMainCurrentHighCurrent=pdnMainCurrentHighCurrent, batteryMonitorDischargingCurrentTable=batteryMonitorDischargingCurrentTable, acpmFreqTable=acpmFreqTable, acClass=acClass, acpmFreqHighValue=acpmFreqHighValue, sysSleepPowerDetectCC=sysSleepPowerDetectCC, acpmAvgCurrentHighTrapNum=acpmAvgCurrentHighTrapNum, bmJarHealthNormalClass=bmJarHealthNormalClass, acpmAvgVoltageSysrepEnable=acpmAvgVoltageSysrepEnable, esAirflowReportingMode=esAirflowReportingMode, schedRepeatEndOn=schedRepeatEndOn, eth2VLAN3Address=eth2VLAN3Address, acpmAvgVoltageVHighClass=acpmAvgVoltageVHighClass, schedRepeatWeeklyTue=schedRepeatWeeklyTue, wmsNetName=wmsNetName, secUserAuditReadAccess=secUserAuditReadAccess, bmDiffVoltHighTrapNum=bmDiffVoltHighTrapNum, sysSleepSleep=sysSleepSleep, acpmTPFNormalTrapNum=acpmTPFNormalTrapNum, acpmFreqIndex=acpmFreqIndex, s350UserTrap1164=s350UserTrap1164, espcAIDeadband=espcAIDeadband, fsDiscNormalActions=fsDiscNormalActions, batteryMonitorJarHealthTable=batteryMonitorJarHealthTable, espcAIConvLowUnit=espcAIConvLowUnit, evLocationIncludeLocation=evLocationIncludeLocation, fsTankDimA=fsTankDimA, scConsoleLoginRequired=scConsoleLoginRequired, bmDiffVoltVHighActions=bmDiffVoltVHighActions, esCCCombinedStatusBlock1=esCCCombinedStatusBlock1, espcHumidVLowTrapnum=espcHumidVLowTrapnum, s350UserTrap1033=s350UserTrap1033, eth1IPv6Static=eth1IPv6Static, s350UserTrap1110=s350UserTrap1110, espcTempVLowActions=espcTempVLowActions, ipv6=ipv6, s350UserTrap1030=s350UserTrap1030, bmChargingCurrentVHighTrapNum=bmChargingCurrentVHighTrapNum, fsVolumeIndex=fsVolumeIndex, snmpProxyEntry=snmpProxyEntry, dnsEntry=dnsEntry, bmGenName=bmGenName, fsSuddenChangeEntry=fsSuddenChangeEntry, acpmTRPVHighClass=acpmTRPVHighClass, s350UserTrap1070=s350UserTrap1070, bmDischargingCurrentVHighClass=bmDischargingCurrentVHighClass, s350UserTrap1091=s350UserTrap1091, esPointConfigTempEntry=esPointConfigTempEntry, eth1IPv6StaticRouter=eth1IPv6StaticRouter, genSetRelayTableRunningstate=genSetRelayTableRunningstate, s350UserTrap1022=s350UserTrap1022, eth2VLAN4=eth2VLAN4, portConfigStripPtInputLfs=portConfigStripPtInputLfs, bmDischargingCurrentSysrepEnable=bmDischargingCurrentSysrepEnable, evReset=evReset, eth1VLAN1SubnetMask=eth1VLAN1SubnetMask)
mibBuilder.exportSymbols("SITEBOSS-350-STD-MIB", s350UserTrap1119=s350UserTrap1119, s350UserTrap1129=s350UserTrap1129, acpmsAPPhaseAValueStr=acpmsAPPhaseAValueStr, sysLocLatitude=sysLocLatitude, bmChargeLevelVLowTrapNum=bmChargeLevelVLowTrapNum, bmDiffTempVHighValue=bmDiffTempVHighValue, bmTempNormalActions=bmTempNormalActions, cpePingSize=cpePingSize, acpmTPFVLowActions=acpmTPFVLowActions, s350UserTrap1072=s350UserTrap1072, evNoSensorTrapNum=evNoSensorTrapNum, bmsTempValueStr=bmsTempValueStr, fsTankVolume=fsTankVolume, schedRepeatMonthlyOnThe=schedRepeatMonthlyOnThe, secUserPTEscapeTo=secUserPTEscapeTo, bmDiffVoltNormalClass=bmDiffVoltNormalClass, acpmGenPowerType=acpmGenPowerType, portConfigStripPtOutputLfs=portConfigStripPtOutputLfs, bmDiffVoltHighClass=bmDiffVoltHighClass, espcTempScale=espcTempScale, espcCCIndexPoint=espcCCIndexPoint, espcAIIndexES=espcAIIndexES, bmTempHighTrapNum=bmTempHighTrapNum, bmDiffVoltNormalTrapNum=bmDiffVoltNormalTrapNum, evNoSensor=evNoSensor, schedRepeatMonthlyMode=schedRepeatMonthlyMode, s350UserTrap1197=s350UserTrap1197, esNumberHumidSensors=esNumberHumidSensors, schedRepeatYearlyMay=schedRepeatYearlyMay, fsSlowChangeAmplitude=fsSlowChangeAmplitude, evSched1Class=evSched1Class, bmsCombined=bmsCombined, evNoSensorActions=evNoSensorActions, eth2IPv6=eth2IPv6, s350UserTrap1155=s350UserTrap1155, eth1Address=eth1Address, webEnable=webEnable, genSetRelayTablePoint=genSetRelayTablePoint, acpmsCurrentPhaseCValueStr=acpmsCurrentPhaseCValueStr, espcCCNormalClass=espcCCNormalClass, snmpAgentEnable=snmpAgentEnable, espcHumidVHighClass=espcHumidVHighClass, fsSuddenChangeIndex=fsSuddenChangeIndex, esCCCombinedStatusBlock5=esCCCombinedStatusBlock5, s350UserTrap1035=s350UserTrap1035, eth1IPv6Mode=eth1IPv6Mode, pdnTable=pdnTable, acuSn=acuSn, acpmAvgVoltageSysrepThreshold=acpmAvgVoltageSysrepThreshold, acpmAvgVoltageDeadband=acpmAvgVoltageDeadband, evSched2Class=evSched2Class, evShskHighMessage=evShskHighMessage, s350StockPDFuseTrap=s350StockPDFuseTrap, secCore=secCore, s350BattMonStringDifferentialVoltageTrap=s350BattMonStringDifferentialVoltageTrap, bmsJarHealthEvent=bmsJarHealthEvent, fsCustomTankIndexFS=fsCustomTankIndexFS, pdNextGen=pdNextGen, acdReader=acdReader, bmDiffVoltSysrepThreshold=bmDiffVoltSysrepThreshold, secUserConnectVia=secUserConnectVia, bmJarHealthNormalActions=bmJarHealthNormalActions, scrVolatileStringIndex=scrVolatileStringIndex, bmVoltageHighClass=bmVoltageHighClass, acpmAvgCurrentTable=acpmAvgCurrentTable, sysEscapeCharacter=sysEscapeCharacter, s350UserTrap1005=s350UserTrap1005, acpmAvgCurrentVHighActions=acpmAvgCurrentVHighActions, espcAIHighValue=espcAIHighValue, bmVoltageNormalActions=bmVoltageNormalActions, espcAILowTrapnum=espcAILowTrapnum, genSetRelayTableEnable=genSetRelayTableEnable, bmsDiffVoltValue=bmsDiffVoltValue, bmDischargingCurrentSysrepThreshold=bmDischargingCurrentSysrepThreshold, acPowerMonitorStatus=acPowerMonitorStatus, eth2VLAN2=eth2VLAN2, s350UserTrap1044=s350UserTrap1044, espcCCNormalTrapnum=espcCCNormalTrapnum, sysCRDBFileEnforceMin=sysCRDBFileEnforceMin, s350UserTrap1162=s350UserTrap1162, cpeIndex=cpeIndex, ncpDuplex=ncpDuplex, auditLogMaxSize=auditLogMaxSize, schedRepeatYearlyOnThe=schedRepeatYearlyOnThe, trapEventClassNumber=trapEventClassNumber, wirelessPIN=wirelessPIN, espcHumidNormalClass=espcHumidNormalClass, hostname=hostname, esPointConfigOutputEntry=esPointConfigOutputEntry, esPointConfigCCTable=esPointConfigCCTable, bmVoltageLowActions=bmVoltageLowActions, fsStatusVolumeValueString=fsStatusVolumeValueString, fsDiscNormalTrapNum=fsDiscNormalTrapNum, esTable=esTable, genRunNonstartEventEnable=genRunNonstartEventEnable, s350UserTrap1069=s350UserTrap1069, sysCRDBCapacity=sysCRDBCapacity, s350UserTrap1178=s350UserTrap1178, batteryMonitorGeneralTable=batteryMonitorGeneralTable, sysSleepPowerDetectCCEnable=sysSleepPowerDetectCCEnable, s350UserTrap1004=s350UserTrap1004, actionSchedEnd=actionSchedEnd, auditLog=auditLog, espcTempHighTrapnum=espcTempHighTrapnum, wmsModemType=wmsModemType, s350StockAnalogTrap=s350StockAnalogTrap, eth1VLAN4Router=eth1VLAN4Router, snmpNtfnSnooze=snmpNtfnSnooze, esPointValueInt=esPointValueInt, evLocationMsgFail=evLocationMsgFail, acpmFreqLowTrapNum=acpmFreqLowTrapNum, bmDiffTempNormalTrapNum=bmDiffTempNormalTrapNum, evSched1TrapNum=evSched1TrapNum, acpmsAvgVoltageAvgStr=acpmsAvgVoltageAvgStr, acpmsRPPhaseCValueStr=acpmsRPPhaseCValueStr, cpeInfoNumGoodResp=cpeInfoNumGoodResp, acpmGenCtRatio=acpmGenCtRatio, sysPTEndPause=sysPTEndPause, evLog=evLog, s350UserTrap1027=s350UserTrap1027, espcAILowActions=espcAILowActions, acpmTPFLowTrapNum=acpmTPFLowTrapNum, s350UserTrap1123=s350UserTrap1123, evResetActions=evResetActions, wmsRevID=wmsRevID, schedRepeatWeeklyWed=schedRepeatWeeklyWed, wirelessIdleTimeout=wirelessIdleTimeout, acuIndexUserGroup=acuIndexUserGroup, bmVoltageEnable=bmVoltageEnable, espcAIIndexPoint=espcAIIndexPoint, bmChargeLevelLowTrapNum=bmChargeLevelLowTrapNum, eventSensorPointConfig=eventSensorPointConfig, espcAIVhighValue=espcAIVhighValue, s350UserTrap1142=s350UserTrap1142, config=config, genRunForce=genRunForce, espcHumidVLowClass=espcHumidVLowClass, esIndexPoint=esIndexPoint, acpmsAvgVoltageMinStr=acpmsAvgVoltageMinStr, bmDiffVoltNormalActions=bmDiffVoltNormalActions, eth1IPv6=eth1IPv6, s350UserTrap1106=s350UserTrap1106, esOutputCombinedStatusBlock1=esOutputCombinedStatusBlock1, espcHumidVLowHumid=espcHumidVLowHumid, esID=esID, wmsPLMNColor=wmsPLMNColor, dnsTable=dnsTable, schedRepeatMonthlyDates=schedRepeatMonthlyDates, s350UserTrap1117=s350UserTrap1117, sysLoghost=sysLoghost, acpmTRPHighClass=acpmTRPHighClass, sysCRDBFileEnforceMinIndex=sysCRDBFileEnforceMinIndex, bmsDiffVoltEvent=bmsDiffVoltEvent, acpmAvgCurrentEntry=acpmAvgCurrentEntry, bmVoltageLowTrapNum=bmVoltageLowTrapNum, s350StockOutputTrap=s350StockOutputTrap, acpmFreqVHighValue=acpmFreqVHighValue, espcAIHighActions=espcAIHighActions, s350UserTrap1131=s350UserTrap1131, eth1IPv6AutoAddress1=eth1IPv6AutoAddress1, fsGenSysrepType=fsGenSysrepType, evSched1Message=evSched1Message, espcOutputInactiveActions=espcOutputInactiveActions, pdnMainCombinedStatus=pdnMainCombinedStatus, evMgmtReprocess=evMgmtReprocess, sysSleepPowerDetectCCPowerOnState=sysSleepPowerDetectCCPowerOnState, evLogTimeStampAlarms=evLogTimeStampAlarms, esCCCombinedStatusBlock6=esCCCombinedStatusBlock6, eth1IPv6AutoAddress2=eth1IPv6AutoAddress2, bmChargingCurrentNormalTrapNum=bmChargingCurrentNormalTrapNum, eth1VLAN3=eth1VLAN3, acuWedEnd=acuWedEnd, bmsVoltageValue=bmsVoltageValue, bmTempLowTrapNum=bmTempLowTrapNum, s350UserTrap1167=s350UserTrap1167, s350UserTrap1160=s350UserTrap1160, espcCCIndexES=espcCCIndexES, bmDiffTempNormalActions=bmDiffTempNormalActions, evClassName=evClassName, scrNonVolatileStringIndex=scrNonVolatileStringIndex, espcAIHighTrapnum=espcAIHighTrapnum, s350UserTrap1077=s350UserTrap1077, acpmAvgVoltageVLowClass=acpmAvgVoltageVLowClass, acpmTRPVHighTrapNum=acpmTRPVHighTrapNum, eth2VLAN3SubnetMask=eth2VLAN3SubnetMask, pdnOutputCurrentDeadband=pdnOutputCurrentDeadband, eth1VLAN5Priority=eth1VLAN5Priority, snmpPRequestResultStatus=snmpPRequestResultStatus, acpmAvgVoltageNormalClass=acpmAvgVoltageNormalClass, s350UserTrap1118=s350UserTrap1118, eth2VLAN5Address=eth2VLAN5Address, acpmTRPEnable=acpmTRPEnable, actionEmailIndex=actionEmailIndex, acpmAvgVoltageLowTrapNum=acpmAvgVoltageLowTrapNum, evShskHighActions=evShskHighActions, bmsState=bmsState, acuSunEnd=acuSunEnd, console=console, espcAINormalTrapnum=espcAINormalTrapnum, fsVolumeVHighValue=fsVolumeVHighValue, s350UserTrap1148=s350UserTrap1148, acuSatEnd=acuSatEnd, esCCCombinedStatusBlock4=esCCCombinedStatusBlock4, hostDeclaration=hostDeclaration, s350UserTrap1028=s350UserTrap1028, sysTimeNetHostIndex=sysTimeNetHostIndex, eth1VLAN2SubnetMask=eth1VLAN2SubnetMask, eth2VLAN2Router=eth2VLAN2Router, evLogEnable=evLogEnable, s350UserTrap1195=s350UserTrap1195, acpmTotalRealPowerTable=acpmTotalRealPowerTable, acpmsCurrentPhaseBValueStr=acpmsCurrentPhaseBValueStr, eth2VLAN3Router=eth2VLAN3Router, espcOutputActiveClass=espcOutputActiveClass, fsVolumeHighClass=fsVolumeHighClass, fsDiscIndex=fsDiscIndex, bmChargeLevelSysrepEnable=bmChargeLevelSysrepEnable, espcHumidLowHumid=espcHumidLowHumid, snmpPRequestResultValue=snmpPRequestResultValue, acpmsTPFInEventState=acpmsTPFInEventState, scrNonVolatileIntIndex=scrNonVolatileIntIndex, pdnMainCurrentLowCurrent=pdnMainCurrentLowCurrent, evLogMaxSize=evLogMaxSize, genRunSched=genRunSched, schedRepeatWeeklySat=schedRepeatWeeklySat, portConfigTable=portConfigTable, fsStatusCombined=fsStatusCombined, clock=clock, pdSystem=pdSystem, acpmAvgCurrentIndex=acpmAvgCurrentIndex, acpmFreqSysrepThreshold=acpmFreqSysrepThreshold, event=event, eth2VLAN5SubnetMask=eth2VLAN5SubnetMask, bmGenSysrepPackage=bmGenSysrepPackage, email=email, sysUpdate=sysUpdate, fsGenInputES=fsGenInputES, espcTempHighClass=espcTempHighClass, acpmsTPFAvgStr=acpmsTPFAvgStr, wmsSignal=wmsSignal, evSched1Monday=evSched1Monday, ipRestrictionTable=ipRestrictionTable, s350UserTrap1168=s350UserTrap1168, evSleepActions=evSleepActions, s350UserTrap1109=s350UserTrap1109, eth2VLAN4SubnetMask=eth2VLAN4SubnetMask, actionAsentria=actionAsentria, bmChargingCurrentSysrepLimit=bmChargingCurrentSysrepLimit, espcOutputActiveState=espcOutputActiveState, s350UserTrap1098=s350UserTrap1098, s350UserTrap1172=s350UserTrap1172, sysSleepWakeTimerNormal=sysSleepWakeTimerNormal, batteryMonitorDiffTempTable=batteryMonitorDiffTempTable, bmVoltageVHighActions=bmVoltageVHighActions)
mibBuilder.exportSymbols("SITEBOSS-350-STD-MIB", schedNextTrigger=schedNextTrigger, evShskLowMessage=evShskLowMessage, bmDischargingCurrentHighClass=bmDischargingCurrentHighClass, s350UserTrap1063=s350UserTrap1063, espcOutputType=espcOutputType, acuThuBegin=acuThuBegin, cpeHost=cpeHost, espcTempVLowTemp=espcTempVLowTemp, s350UserTrap1125=s350UserTrap1125, s350UserTrap1040=s350UserTrap1040, s350UserTrap1102=s350UserTrap1102, espcCCAlarmAlias=espcCCAlarmAlias, fuelSensorLevelsAutoAdjustTable=fuelSensorLevelsAutoAdjustTable, schedRepeatYearlyApr=schedRepeatYearlyApr, acpmAvgVoltageHighValue=acpmAvgVoltageHighValue, s350StockSchedTrap=s350StockSchedTrap, pdnOutputCurrentValue=pdnOutputCurrentValue, acpmsRPPhaseAValueStr=acpmsRPPhaseAValueStr, auditLogStorePolling=auditLogStorePolling, esCCCombinedStatusBlock7=esCCCombinedStatusBlock7, pdSystemCurrent=pdSystemCurrent, espcAIVlowValue=espcAIVlowValue, acpmAvgCurrentLowTrapNum=acpmAvgCurrentLowTrapNum, acpmTRPNormalTrapNum=acpmTRPNormalTrapNum, s350UserTrap1041=s350UserTrap1041, cpeInfoPercentLoss=cpeInfoPercentLoss, bmVoltageVLowClass=bmVoltageVLowClass, acpmTRPNormalClass=acpmTRPNormalClass, deStatusThreshold=deStatusThreshold, acdUserGroup=acdUserGroup, schedTable=schedTable, acpmsTRPValueStr=acpmsTRPValueStr, esPointName=esPointName, s350UserTrap1124=s350UserTrap1124, acpmDisconnectClass=acpmDisconnectClass, bmStatusTable=bmStatusTable, s350UserTrap1076=s350UserTrap1076, eth1MAC=eth1MAC, evClassNameIndex=evClassNameIndex, pdnMainCurrentVHighCurrent=pdnMainCurrentVHighCurrent, acdRelayType=acdRelayType, esAnalogReportingMode=esAnalogReportingMode, evGlobalActions=evGlobalActions, s350UserTrap1163=s350UserTrap1163, s350UserTrap1034=s350UserTrap1034, portConfigIndex=portConfigIndex, pdnOutputCombinedStatusBlock1=pdnOutputCombinedStatusBlock1, espcOutputInactiveClass=espcOutputInactiveClass, esCCReportingMode=esCCReportingMode, s350UserTrap1121=s350UserTrap1121, esPointTable=esPointTable, wirelessConnFailThreshold=wirelessConnFailThreshold, evResetClass=evResetClass, eth1VLAN2Priority=eth1VLAN2Priority, fsSuddenChangeTime=fsSuddenChangeTime, s350Notifications=s350Notifications, acpmsAPPhaseCValueStr=acpmsAPPhaseCValueStr, genRunStatus=genRunStatus, bmDiffVoltSysrepLimit=bmDiffVoltSysrepLimit, s350UserTrap1095=s350UserTrap1095, s350UserTrap1039=s350UserTrap1039, fsLAAIndex=fsLAAIndex, acpmTPFIndex=acpmTPFIndex, sysLoc=sysLoc, ftpPushPassive=ftpPushPassive, s350UserTrap1183=s350UserTrap1183, bmsJarStatusTable=bmsJarStatusTable, secUserExpiration=secUserExpiration, bmGenBatteryNominalVoltage=bmGenBatteryNominalVoltage, acpmDisconnectEntry=acpmDisconnectEntry, bmJarHealthLowTrapNum=bmJarHealthLowTrapNum, schedRepeatYearlyDec=schedRepeatYearlyDec, acpmFreqNormalClass=acpmFreqNormalClass, s350UserTrap1151=s350UserTrap1151, powerDistributionStatus=powerDistributionStatus, fsTankVolumeUnit=fsTankVolumeUnit, snmpNtfnCycles=snmpNtfnCycles, secUserTable=secUserTable, acpmFreqHighClass=acpmFreqHighClass, trapIncludeUDName=trapIncludeUDName, schedStart=schedStart, bmDischargingCurrentNormalActions=bmDischargingCurrentNormalActions, actionAsentriaRequireAck=actionAsentriaRequireAck, bmChargingCurrentVHighClass=bmChargingCurrentVHighClass, scAuthMode=scAuthMode, auditLogStoreInactivity=auditLogStoreInactivity, fsVolumeVLowTrapNum=fsVolumeVLowTrapNum, evLocationClass=evLocationClass, fuelSensorSlowChangeTable=fuelSensorSlowChangeTable, acdEnable=acdEnable, s350UserTrap1158=s350UserTrap1158, bmDiffTempHighClass=bmDiffTempHighClass, bmChargeLevelNormalTrapNum=bmChargeLevelNormalTrapNum, acuFriEnd=acuFriEnd, evMgmt=evMgmt, fsVolumeLowClass=fsVolumeLowClass, evSched2=evSched2, wmsModelID=wmsModelID, bmDischargingCurrentVHighTrapNum=bmDischargingCurrentVHighTrapNum, eth2IPv6StaticAddress=eth2IPv6StaticAddress, bmDiffTempHighActions=bmDiffTempHighActions, s350UserTrap1074=s350UserTrap1074, acpmsTRPAvgStr=acpmsTRPAvgStr, espcOutputActiveTrapnum=espcOutputActiveTrapnum, s350BattMonStringVoltageTrap=s350BattMonStringVoltageTrap, s350UserTrap1067=s350UserTrap1067, scrVolatileStringTable=scrVolatileStringTable, bmGenEntry=bmGenEntry, bmDiffVoltHighValue=bmDiffVoltHighValue, bmsDiffTempEvent=bmsDiffTempEvent, fsVolumeVHighTrapNum=fsVolumeVHighTrapNum, eth1IPv6Auto=eth1IPv6Auto, s350BattMonStringDiffTemperatureTrap=s350BattMonStringDiffTemperatureTrap, s350UserTrap1085=s350UserTrap1085, scrVolatileIntEntry=scrVolatileIntEntry, eth1VLAN5SubnetMask=eth1VLAN5SubnetMask, s350UserTrap1161=s350UserTrap1161, espcCCNormalActions=espcCCNormalActions, sysLocYOffset=sysLocYOffset, acpmDisconnectActions=acpmDisconnectActions, evShskHighIndex=evShskHighIndex, cpeInfoNumBadResp=cpeInfoNumBadResp, s350UserTrap1045=s350UserTrap1045, s350UserTrap1146=s350UserTrap1146, evSleep=evSleep, espcTempLowTemp=espcTempLowTemp, fsSlowChangeIndex=fsSlowChangeIndex, espcOutputInactiveAlias=espcOutputInactiveAlias, s350UserTrap1099=s350UserTrap1099, bmDiffTempEnable=bmDiffTempEnable, trapIncludeUDState=trapIncludeUDState, s350UserTrap1140=s350UserTrap1140, s350UserTrap1113=s350UserTrap1113, eth1SubnetMask=eth1SubnetMask, serialPorts=serialPorts, eth2MAC=eth2MAC, sysTimeStampDateFormat=sysTimeStampDateFormat, pdnMainVoltageValue=pdnMainVoltageValue, schedRepeatYearlyJun=schedRepeatYearlyJun, s350UserTrap1176=s350UserTrap1176, bmTempIndex=bmTempIndex, actionHost=actionHost, status=status, s350UserTrap1092=s350UserTrap1092, acpmAvgCurrentEnable=acpmAvgCurrentEnable, bmDischargingCurrentHighTrapNum=bmDischargingCurrentHighTrapNum, eth1VLAN6=eth1VLAN6, cpeInfoPercentBad=cpeInfoPercentBad, acpmGenName=acpmGenName, bmDeviceIP=bmDeviceIP, acpmsAvgFreqAvgStr=acpmsAvgFreqAvgStr, bmTempSysrepLimit=bmTempSysrepLimit, ftpPushRemoteFileTable=ftpPushRemoteFileTable, wirelessConnEnable=wirelessConnEnable, bmDiffTempHighTrapNum=bmDiffTempHighTrapNum, evResetDelay=evResetDelay, s350UserTrap1090=s350UserTrap1090, sysTimeGMTDirection=sysTimeGMTDirection, fsGenSysrepLimit=fsGenSysrepLimit, sysTimeNetHost=sysTimeNetHost, acpmAvgVoltageSysrepLimit=acpmAvgVoltageSysrepLimit, fsGenSysrepEnable=fsGenSysrepEnable, s350GeneratorNonStartTrap=s350GeneratorNonStartTrap, acpmFreqSysrepEnable=acpmFreqSysrepEnable, bmChargingCurrentIndex=bmChargingCurrentIndex, bmDischargingCurrentHighActions=bmDischargingCurrentHighActions, genRunMode=genRunMode, bmjsIndexBM=bmjsIndexBM, fsVolumeVHighActions=fsVolumeVHighActions, eth1VLAN6SubnetMask=eth1VLAN6SubnetMask, sysTimeNet=sysTimeNet, siteName=siteName, snmpPRequestEntry=snmpPRequestEntry, snmpPMode=snmpPMode, secUserLoginTo=secUserLoginTo, evCore=evCore, bmChargeLevelNormalClass=bmChargeLevelNormalClass, sysSleep=sysSleep, s350ACPowerMonitorAvgCurrentTrap=s350ACPowerMonitorAvgCurrentTrap, esNumberNoiseSensors=esNumberNoiseSensors, s350UserTrap1006=s350UserTrap1006, secFactory=secFactory, bmsEnable=bmsEnable, bmJarHealthVLowActions=bmJarHealthVLowActions, bmDischargingCurrentNormalTrapNum=bmDischargingCurrentNormalTrapNum, bmVoltageVHighTrapNum=bmVoltageVHighTrapNum, acpmsTPFMinStr=acpmsTPFMinStr, esPointEntry=esPointEntry, sysFileTransferStatus=sysFileTransferStatus, s350UserTrap1066=s350UserTrap1066, evNoSensorTimeout=evNoSensorTimeout, bmjsTempValue=bmjsTempValue, eth1VLAN1Priority=eth1VLAN1Priority, s350UserTrap1107=s350UserTrap1107, ipRestrictionEntry=ipRestrictionEntry, bmVoltageSysrepThreshold=bmVoltageSysrepThreshold, sysLocAngle=sysLocAngle, fsVolumeHighActions=fsVolumeHighActions, bmDischargingCurrentVHighValue=bmDischargingCurrentVHighValue, actionParseError=actionParseError, s350UserTrap1112=s350UserTrap1112, bmDischargingCurrentIndex=bmDischargingCurrentIndex, cpeThreshold=cpeThreshold, s350SleepTrap=s350SleepTrap, wmsIMSI=wmsIMSI, fsGenRawValueBottom=fsGenRawValueBottom, eth2IPv6AutoAddress3=eth2IPv6AutoAddress3, espcOutputEnable=espcOutputEnable, s350CPEDownTrap=s350CPEDownTrap, wirelessDRE=wirelessDRE, acActions=acActions, acpmFreqHighTrapNum=acpmFreqHighTrapNum, sys=sys, fsVolumeHighTrapNum=fsVolumeHighTrapNum, acpmTPFLowActions=acpmTPFLowActions, bmVoltageIndex=bmVoltageIndex, acdRelayES=acdRelayES, eth2VLAN6=eth2VLAN6, bmDischargingCurrentEntry=bmDischargingCurrentEntry, bmVoltageHighValue=bmVoltageHighValue, s350UserTrap1141=s350UserTrap1141, bmChargingCurrentSysrepThreshold=bmChargingCurrentSysrepThreshold, bmDeviceES=bmDeviceES, fsCustomTankVolume=fsCustomTankVolume, fsSlowChangeClass=fsSlowChangeClass, s350UserTrap1139=s350UserTrap1139, espcHumidEnable=espcHumidEnable, bmDeviceIndex=bmDeviceIndex, s350FuelSensorVolumeSuddenChangeTrap=s350FuelSensorVolumeSuddenChangeTrap, evSched2Monday=evSched2Monday, bmGenSysrepType=bmGenSysrepType, auditLogSoreSleepActivity=auditLogSoreSleepActivity, deStatusIndex=deStatusIndex, eth2VLAN6SubnetMask=eth2VLAN6SubnetMask, s350UserTrap1013=s350UserTrap1013, wirelessKeepaliveThreshold=wirelessKeepaliveThreshold, s350UserTrap1083=s350UserTrap1083, eth1VLAN=eth1VLAN, bmVoltageLowValue=bmVoltageLowValue, esPointConfigHumidTable=esPointConfigHumidTable, s350UserTrap1177=s350UserTrap1177, genSetCCEnable=genSetCCEnable, eth1VLAN4ID=eth1VLAN4ID, espcAIConvHighValue=espcAIConvHighValue, s350UserTrap1166=s350UserTrap1166, secUserChallengeConsoleMode=secUserChallengeConsoleMode, portConfigBaud=portConfigBaud, bmsDiffTempValue=bmsDiffTempValue, acpmsTotalEnergyVAR=acpmsTotalEnergyVAR, acpmTRPLowValue=acpmTRPLowValue, stockTrapString=stockTrapString, fsVolumeNormalActions=fsVolumeNormalActions, s350UserTrap1135=s350UserTrap1135, esNumberCCs=esNumberCCs)
mibBuilder.exportSymbols("SITEBOSS-350-STD-MIB", s350UserTrap1144=s350UserTrap1144, fuelSensorVolumeTable=fuelSensorVolumeTable, acpmsTRcPMinStr=acpmsTRcPMinStr, snmpNtfnTimeout=snmpNtfnTimeout, bmTempHighActions=bmTempHighActions, sysTimeStamp=sysTimeStamp, bmChargeLevelVLowClass=bmChargeLevelVLowClass, scrRunAlways=scrRunAlways, s350UserTrap1185=s350UserTrap1185, s350UserTrap1188=s350UserTrap1188, bmDiffTempIndex=bmDiffTempIndex, acpmAvgCurrentVLowActions=acpmAvgCurrentVLowActions, s350ACPowerMonitorDisconnectTrap=s350ACPowerMonitorDisconnectTrap, evLocationTrapnum=evLocationTrapnum, snmpPRequestIndex=snmpPRequestIndex, sysCRDBPercentFull=sysCRDBPercentFull, pdSystemPower=pdSystemPower, s350ResetTrap=s350ResetTrap, schedRepeatEndMode=schedRepeatEndMode, bmVoltageEntry=bmVoltageEntry, sysSleepEnable=sysSleepEnable, s350UserTrap1060=s350UserTrap1060, bmsDiffTempValueStr=bmsDiffTempValueStr, eth2VLAN6Priority=eth2VLAN6Priority, bmjsAdmittanceValue=bmjsAdmittanceValue, acpmTRPVLowClass=acpmTRPVLowClass, auditLogStoreResets=auditLogStoreResets, fsStatusIndex=fsStatusIndex, s350UserTrap1186=s350UserTrap1186, scrDTRCtrlPortEnableTable=scrDTRCtrlPortEnableTable, ftpPushEnable=ftpPushEnable, espcOutputAliasValue=espcOutputAliasValue, wirelessPPPDebug=wirelessPPPDebug, genRunNonstartEventClass=genRunNonstartEventClass, acpmAvgVoltageIndex=acpmAvgVoltageIndex, s350UserTrap1126=s350UserTrap1126, acpmsAvgCurrentInEventState=acpmsAvgCurrentInEventState, acpmsTRcPMaxStr=acpmsTRcPMaxStr, s350UserTrap1084=s350UserTrap1084, ftpPushPushAlarms=ftpPushPushAlarms, s350UserTrap1032=s350UserTrap1032, s350UserTrap1157=s350UserTrap1157, scrIndex=scrIndex, snmpProxyName=snmpProxyName, cpeInfoNumReq=cpeInfoNumReq, sysLogFilter=sysLogFilter, s350UserTrap1175=s350UserTrap1175, ftpPushPushFileTable=ftpPushPushFileTable, s350UserTrap1191=s350UserTrap1191, acpmFreqVHighTrapNum=acpmFreqVHighTrapNum, genSetEnable=genSetEnable, s350UserTrap1079=s350UserTrap1079, schedRepeatYearlyFeb=schedRepeatYearlyFeb, bmStatusEntry=bmStatusEntry, bmDiffVoltDeadband=bmDiffVoltDeadband, ncpTimeout=ncpTimeout, eth1VLAN5Router=eth1VLAN5Router, deStatusEntry=deStatusEntry, consoleTimeout=consoleTimeout, s350LocationTrap=s350LocationTrap, batteryMonitorDiffVoltTable=batteryMonitorDiffVoltTable, snmpPRequestAgent=snmpPRequestAgent, espcHumidVHighActions=espcHumidVHighActions, acpmTPFSysrepEnable=acpmTPFSysrepEnable, fsGenInputPoint=fsGenInputPoint, s350UserTrap1093=s350UserTrap1093, s350StockPDCurrentTrap=s350StockPDCurrentTrap, espcAILowValue=espcAILowValue, espcCCName=espcCCName, espcOutputIndexES=espcOutputIndexES, fsLAAEventClass=fsLAAEventClass, scrVolatileInt=scrVolatileInt, bmDiffTempVHighClass=bmDiffTempVHighClass, evSched2Message=evSched2Message, snmpNtfnAttempts=snmpNtfnAttempts, sysLogFileCount=sysLogFileCount, ftpPushPermissions=ftpPushPermissions, espcHumidIndexPoint=espcHumidIndexPoint, s350StockHumidityTrap=s350StockHumidityTrap, espcAIEnable=espcAIEnable, trapEventClassName=trapEventClassName, eth1VLAN2Router=eth1VLAN2Router, evSched2Wednesday=evSched2Wednesday, scripting=scripting, espcTempVHighTrapnum=espcTempVHighTrapnum, fsLAAEnable=fsLAAEnable, ftpPushRemoteAlarmName=ftpPushRemoteAlarmName, s350UserTrap1127=s350UserTrap1127, acpmGenSysrepType=acpmGenSysrepType, fsDiscHighValue=fsDiscHighValue, wmsMinRxLevel=wmsMinRxLevel, s350UserTrap1017=s350UserTrap1017, bmsChargeLevelValue=bmsChargeLevelValue, s350UserTrap1047=s350UserTrap1047, evSched2Enable=evSched2Enable, espcAIVhighTrapnum=espcAIVhighTrapnum, bmDiffVoltVHighValue=bmDiffVoltVHighValue, esNumberOutputs=esNumberOutputs, s350UserTrap1100=s350UserTrap1100, acpmAvgCurrentVLowTrapNum=acpmAvgCurrentVLowTrapNum, sysLog=sysLog, snmpProxyIP=snmpProxyIP, schedRepeatYearlyMar=schedRepeatYearlyMar, acdIndex=acdIndex, evSched2TrapNum=evSched2TrapNum, acpmTRPVLowValue=acpmTRPVLowValue, fsGenSysrepThreshold=fsGenSysrepThreshold, schedRepeatWeeklyFri=schedRepeatWeeklyFri, netAdvanced=netAdvanced, bmsIndex=bmsIndex, acuTueEnd=acuTueEnd, acpmsPFPhaseCValueStr=acpmsPFPhaseCValueStr, acpmAvgVoltageVHighActions=acpmAvgVoltageVHighActions, s350UserTrap1133=s350UserTrap1133, genRunReqasm=genRunReqasm, batteryMonitorDeviceTable=batteryMonitorDeviceTable, espcTempVLowTrapnum=espcTempVLowTrapnum, schedRepeatYearlyNov=schedRepeatYearlyNov, s350FuelSensorVolumeTrap=s350FuelSensorVolumeTrap, dataEventStatus=dataEventStatus, eth1VLAN6Address=eth1VLAN6Address, espcTempIndexES=espcTempIndexES, acpmFreqVLowTrapNum=acpmFreqVLowTrapNum, pdnOutputCurrentHighCurrent=pdnOutputCurrentHighCurrent, eth1VLAN2ID=eth1VLAN2ID, pdnDeviceCurrentValueStr=pdnDeviceCurrentValueStr, schedEnable=schedEnable, s350UserTrap1016=s350UserTrap1016, s350UserTrap1190=s350UserTrap1190, acpmTPFNormalActions=acpmTPFNormalActions)
