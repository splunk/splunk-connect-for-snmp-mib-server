#
# PySNMP MIB module Fore-FileXfr-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-FileXfr-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:03:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
fileXfr, EntryStatus = mibBuilder.importSymbols("Fore-Common-MIB", "fileXfr", "EntryStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, TimeTicks, Integer32, Bits, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, MibIdentifier, IpAddress, NotificationType, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "Integer32", "Bits", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "MibIdentifier", "IpAddress", "NotificationType", "iso", "Gauge32")
TextualConvention, DisplayString, TestAndIncr = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TestAndIncr")
foreFileXfrModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 1, 6, 1))
if mibBuilder.loadTexts: foreFileXfrModule.setLastUpdated('9512071530-0500')
if mibBuilder.loadTexts: foreFileXfrModule.setOrganization('FORE')
fXfrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 326, 1, 6, 2))
fXfrNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 1), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fXfrNextIndex.setStatus('current')
fXfrTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2), )
if mibBuilder.loadTexts: fXfrTable.setStatus('current')
fXfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1), ).setIndexNames((0, "Fore-FileXfr-MIB", "fXfrIndex"))
if mibBuilder.loadTexts: fXfrEntry.setStatus('current')
fXfrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fXfrIndex.setStatus('current')
fXfrRemoteFileUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrRemoteFileUrl.setStatus('current')
fXfrLocalFile = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrLocalFile.setStatus('current')
fXfrDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("get", 1), ("put", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrDirection.setStatus('current')
fXfrEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 5), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrEntryStatus.setStatus('current')
fXfrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 1), ("go", 2), ("inQueue", 3), ("inProgress", 4), ("succeeded", 5), ("failed", 6), ("busy", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrStatus.setStatus('current')
fXfrStatusText = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fXfrStatusText.setStatus('current')
fXfrOwnerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fXfrOwnerIpAddress.setStatus('current')
fXfrOwnerSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrOwnerSignature.setStatus('current')
fXfrTransferType = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("binary", 1), ("ascii", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrTransferType.setStatus('current')
fXfrUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrUserId.setStatus('current')
fXfrPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 6, 2, 2, 1, 12), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fXfrPassword.setStatus('current')
mibBuilder.exportSymbols("Fore-FileXfr-MIB", fXfrPassword=fXfrPassword, fXfrOwnerIpAddress=fXfrOwnerIpAddress, fXfrNextIndex=fXfrNextIndex, fXfrUserId=fXfrUserId, fXfrRemoteFileUrl=fXfrRemoteFileUrl, PYSNMP_MODULE_ID=foreFileXfrModule, fXfrEntry=fXfrEntry, fXfrLocalFile=fXfrLocalFile, fXfrDirection=fXfrDirection, fXfrStatus=fXfrStatus, fXfrGroup=fXfrGroup, fXfrTransferType=fXfrTransferType, fXfrIndex=fXfrIndex, fXfrOwnerSignature=fXfrOwnerSignature, fXfrEntryStatus=fXfrEntryStatus, foreFileXfrModule=foreFileXfrModule, fXfrStatusText=fXfrStatusText, fXfrTable=fXfrTable)
