#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
mscTrkPaIndex, mscTrkPa = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-PorsTrunksMIB", "mscTrkPaIndex", "mscTrkPa")
StorageType, RowStatus, DisplayString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "StorageType", "RowStatus", "DisplayString")
Link, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link", "NonReplicated")
mscTrkIndex, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TrunksMIB", "mscTrkIndex")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, Gauge32, IpAddress, Counter64, ModuleIdentity, iso, NotificationType, Integer32, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "Gauge32", "IpAddress", "Counter64", "ModuleIdentity", "iso", "NotificationType", "Integer32", "TimeTicks", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
porsAtmTrunksMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137))
mscTrkPaAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3))
mscTrkPaAtmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1), )
if mibBuilder.loadTexts: mscTrkPaAtmRowStatusTable.setStatus('mandatory')
mscTrkPaAtmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TrunksMIB", "mscTrkIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsTrunksMIB", "mscTrkPaIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB", "mscTrkPaAtmIndex"))
if mibBuilder.loadTexts: mscTrkPaAtmRowStatusEntry.setStatus('mandatory')
mscTrkPaAtmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTrkPaAtmRowStatus.setStatus('mandatory')
mscTrkPaAtmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrkPaAtmComponentName.setStatus('mandatory')
mscTrkPaAtmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrkPaAtmStorageType.setStatus('mandatory')
mscTrkPaAtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTrkPaAtmIndex.setStatus('mandatory')
mscTrkPaAtmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 10), )
if mibBuilder.loadTexts: mscTrkPaAtmProvTable.setStatus('mandatory')
mscTrkPaAtmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TrunksMIB", "mscTrkIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsTrunksMIB", "mscTrkPaIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB", "mscTrkPaAtmIndex"))
if mibBuilder.loadTexts: mscTrkPaAtmProvEntry.setStatus('mandatory')
mscTrkPaAtmAtmConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTrkPaAtmAtmConnection.setStatus('mandatory')
mscTrkPaAtmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("multiplexing", 0), ("mapping", 1))).clone('multiplexing')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTrkPaAtmMode.setStatus('mandatory')
porsAtmTrunksGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 1))
porsAtmTrunksGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 1, 1))
porsAtmTrunksGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 1, 1, 3))
porsAtmTrunksGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 1, 1, 3, 2))
porsAtmTrunksCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 3))
porsAtmTrunksCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 3, 1))
porsAtmTrunksCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 3, 1, 3))
porsAtmTrunksCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB", mscTrkPaAtmAtmConnection=mscTrkPaAtmAtmConnection, porsAtmTrunksGroupCA02=porsAtmTrunksGroupCA02, porsAtmTrunksCapabilitiesCA=porsAtmTrunksCapabilitiesCA, porsAtmTrunksGroup=porsAtmTrunksGroup, porsAtmTrunksGroupCA=porsAtmTrunksGroupCA, mscTrkPaAtmIndex=mscTrkPaAtmIndex, mscTrkPaAtmRowStatusTable=mscTrkPaAtmRowStatusTable, mscTrkPaAtmProvTable=mscTrkPaAtmProvTable, porsAtmTrunksCapabilitiesCA02=porsAtmTrunksCapabilitiesCA02, porsAtmTrunksCapabilitiesCA02A=porsAtmTrunksCapabilitiesCA02A, mscTrkPaAtmStorageType=mscTrkPaAtmStorageType, porsAtmTrunksMIB=porsAtmTrunksMIB, mscTrkPaAtmProvEntry=mscTrkPaAtmProvEntry, mscTrkPaAtmMode=mscTrkPaAtmMode, mscTrkPaAtmRowStatus=mscTrkPaAtmRowStatus, mscTrkPaAtm=mscTrkPaAtm, porsAtmTrunksGroupCA02A=porsAtmTrunksGroupCA02A, porsAtmTrunksCapabilities=porsAtmTrunksCapabilities, mscTrkPaAtmComponentName=mscTrkPaAtmComponentName, mscTrkPaAtmRowStatusEntry=mscTrkPaAtmRowStatusEntry)
