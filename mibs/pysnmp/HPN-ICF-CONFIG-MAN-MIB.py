#
# PySNMP MIB module HPN-ICF-CONFIG-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-CONFIG-MAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, IpAddress, ModuleIdentity, Counter64, NotificationType, Bits, Unsigned32, TimeTicks, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "ModuleIdentity", "Counter64", "NotificationType", "Bits", "Unsigned32", "TimeTicks", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "Counter32")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
hpnicfConfig = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4))
hpnicfConfig.setRevisions(('2011-11-26 00:00',))
if mibBuilder.loadTexts: hpnicfConfig.setLastUpdated('201111260000Z')
if mibBuilder.loadTexts: hpnicfConfig.setOrganization('')
class ConfigOperationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("running2Startup", 1), ("startup2Running", 2), ("running2Net", 3), ("net2Running", 4), ("net2Startup", 5), ("startup2Net", 6))

class ConfigOperationStateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))
    namedValues = NamedValues(("opInProgress", 1), ("opSuccess", 2), ("opInvalidOperation", 3), ("opInvalidProtocol", 4), ("opInvalidSourceName", 5), ("opInvalidDestName", 6), ("opInvalidServerAddress", 7), ("opDeviceBusy", 8), ("opDeviceOpenError", 9), ("opDeviceError", 10), ("opDeviceNotProgrammable", 11), ("opDeviceFull", 12), ("opFileOpenError", 13), ("opFileTransferError", 14), ("opFileChecksumError", 15), ("opNoMemory", 16), ("opAuthFail", 17), ("opTimeOut", 18), ("opUnknownFailure", 19), ("opInvalidConfigFile", 20), ("opSlaveFull", 21), ("opCopyToSlaveFailure", 22))

hpnicfConfigManObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1))
hpnicfCfgLog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1))
hpnicfCfgRunModifiedLast = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgRunModifiedLast.setStatus('current')
hpnicfCfgRunSavedLast = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgRunSavedLast.setStatus('current')
hpnicfCfgStartModifiedLast = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgStartModifiedLast.setStatus('current')
hpnicfCfgLogLimitedEntries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogLimitedEntries.setStatus('current')
hpnicfCfgLogDeletedEntries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogDeletedEntries.setStatus('current')
hpnicfCfgLogWantBackup = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfCfgLogWantBackup.setStatus('current')
hpnicfCfgLogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7), )
if mibBuilder.loadTexts: hpnicfCfgLogTable.setStatus('current')
hpnicfCfgLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1), ).setIndexNames((0, "HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogIndex"))
if mibBuilder.loadTexts: hpnicfCfgLogEntry.setStatus('current')
hpnicfCfgLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfCfgLogIndex.setStatus('current')
hpnicfCfgLogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogTime.setStatus('current')
hpnicfCfgLogSrcCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cmdLine", 1), ("snmp", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogSrcCmd.setStatus('current')
hpnicfCfgLogSrcData = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("erase", 1), ("runningData", 2), ("commandSource", 3), ("startupData", 4), ("local", 5), ("netFtp", 6), ("hotPlugging", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogSrcData.setStatus('current')
hpnicfCfgLogDesData = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("runningData", 2), ("commandSource", 3), ("startupData", 4), ("local", 5), ("netFtp", 6), ("hotPlugging", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogDesData.setStatus('current')
hpnicfCfgLogTerminalType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 1), ("unknown", 2), ("console", 3), ("terminal", 4), ("virtual", 5), ("auxiliary", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogTerminalType.setStatus('current')
hpnicfCfgLogTerminalUser = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogTerminalUser.setStatus('current')
hpnicfCfgLogTerminalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogTerminalNum.setStatus('current')
hpnicfCfgLogTerminalLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogTerminalLocation.setStatus('current')
hpnicfCfgLogCmdSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogCmdSrcAddress.setStatus('deprecated')
hpnicfCfgLogVirHost = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogVirHost.setStatus('current')
hpnicfCfgLogUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogUserName.setStatus('current')
hpnicfCfgLogServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogServerAddress.setStatus('deprecated')
hpnicfCfgLogFile = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogFile.setStatus('current')
hpnicfCfgLogCmdSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 15), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogCmdSrcAddrType.setStatus('current')
hpnicfCfgLogCmdSrcAddrRev = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 16), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogCmdSrcAddrRev.setStatus('current')
hpnicfCfgLogCmdSrcAddrVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogCmdSrcAddrVPNName.setStatus('current')
hpnicfCfgLogServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 18), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogServerAddrType.setStatus('current')
hpnicfCfgLogServerAddrRev = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 19), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogServerAddrRev.setStatus('current')
hpnicfCfgLogServerAddrVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 7, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgLogServerAddrVPNName.setStatus('current')
hpnicfCfgFirstTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 1, 8), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfCfgFirstTrapTime.setStatus('current')
hpnicfCfgOperate = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2))
hpnicfCfgOperateGlobalEntryLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgOperateGlobalEntryLimit.setStatus('current')
hpnicfCfgOperateEntryAgeOutTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfCfgOperateEntryAgeOutTime.setStatus('current')
hpnicfCfgOperateResultGlobalEntryLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfCfgOperateResultGlobalEntryLimit.setStatus('current')
hpnicfCfgOperateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4), )
if mibBuilder.loadTexts: hpnicfCfgOperateTable.setStatus('current')
hpnicfCfgOperateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateIndex"))
if mibBuilder.loadTexts: hpnicfCfgOperateEntry.setStatus('current')
hpnicfCfgOperateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfCfgOperateIndex.setStatus('current')
hpnicfCfgOperateType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 2), ConfigOperationType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateType.setStatus('current')
hpnicfCfgOperateProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ftp", 1), ("tftp", 2), ("clusterftp", 3), ("clustertftp", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateProtocol.setStatus('current')
hpnicfCfgOperateFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateFileName.setStatus('current')
hpnicfCfgOperateServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateServerAddress.setStatus('deprecated')
hpnicfCfgOperateUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateUserName.setStatus('current')
hpnicfCfgOperateUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateUserPassword.setStatus('current')
hpnicfCfgOperateEndNotificationSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateEndNotificationSwitch.setStatus('current')
hpnicfCfgOperateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateRowStatus.setStatus('current')
hpnicfCfgOperateServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateServerPort.setStatus('current')
hpnicfCfgOperateSrvAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 11), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateSrvAddrType.setStatus('current')
hpnicfCfgOperateSrvAddrRev = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 12), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateSrvAddrRev.setStatus('current')
hpnicfCfgOperateSrvVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 4, 1, 13), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCfgOperateSrvVPNName.setStatus('current')
hpnicfCfgOperateResultTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5), )
if mibBuilder.loadTexts: hpnicfCfgOperateResultTable.setStatus('current')
hpnicfCfgOperateResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5, 1), ).setIndexNames((0, "HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateResultIndex"))
if mibBuilder.loadTexts: hpnicfCfgOperateResultEntry.setStatus('current')
hpnicfCfgOperateResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfCfgOperateResultIndex.setStatus('current')
hpnicfCfgOperateResultOptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgOperateResultOptIndex.setStatus('current')
hpnicfCfgOperateResultOpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5, 1, 3), ConfigOperationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgOperateResultOpType.setStatus('current')
hpnicfCfgOperateState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5, 1, 4), ConfigOperationStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgOperateState.setStatus('current')
hpnicfCfgOperateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgOperateTime.setStatus('current')
hpnicfCfgOperateEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgOperateEndTime.setStatus('current')
hpnicfCfgOperFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 5, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgOperFailReason.setStatus('current')
hpnicfCfgExecuteOperate = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6))
hpnicfCfgExecuteOperateResultEntryLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 20)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfCfgExecuteOperateResultEntryLimit.setStatus('current')
hpnicfCfgExecuteResultTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 2), )
if mibBuilder.loadTexts: hpnicfCfgExecuteResultTable.setStatus('current')
hpnicfCfgExecuteResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 2, 1), ).setIndexNames((0, "HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgExecuteResultIndex"))
if mibBuilder.loadTexts: hpnicfCfgExecuteResultEntry.setStatus('current')
hpnicfCfgExecuteResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfCfgExecuteResultIndex.setStatus('current')
hpnicfCfgExecuteResultOptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgExecuteResultOptIndex.setStatus('current')
hpnicfCfgExecuteResultOpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 2, 1, 3), ConfigOperationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgExecuteResultOpType.setStatus('current')
hpnicfCfgExecuteState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 2, 1, 4), ConfigOperationStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgExecuteState.setStatus('current')
hpnicfCfgExecuteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgExecuteTime.setStatus('current')
hpnicfCfgExecuteEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 6, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfCfgExecuteEndTime.setStatus('current')
hpnicfCfgReset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfCfgReset.setStatus('current')
hpnicfCfgReset2 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfCfgReset2.setStatus('current')
hpnicfConfigManNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 2))
hpnicfCfgManEventlog = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 2, 1)).setObjects(("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogSrcCmd"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogSrcData"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogDesData"))
if mibBuilder.loadTexts: hpnicfCfgManEventlog.setStatus('current')
hpnicfCfgOperateCompletion = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 2, 2)).setObjects(("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateType"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateTime"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateState"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateEndTime"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperFailReason"))
if mibBuilder.loadTexts: hpnicfCfgOperateCompletion.setStatus('current')
hpnicfCfgInvalidConfigFile = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 2, 3)).setObjects(("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateType"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateFileName"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgFirstTrapTime"))
if mibBuilder.loadTexts: hpnicfCfgInvalidConfigFile.setStatus('current')
hpnicfConfigManConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 3))
hpnicfConfigManCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 3, 1))
hpnicfConfigManCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 3, 1, 1)).setObjects(("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgManLogGroup"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateGroup"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgManNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfConfigManCompliance = hpnicfConfigManCompliance.setStatus('current')
hpnicfConfigManGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 3, 2))
hpnicfCfgManLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 3, 2, 1)).setObjects(("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgRunModifiedLast"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgRunSavedLast"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgStartModifiedLast"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogLimitedEntries"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogDeletedEntries"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogTime"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogSrcCmd"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogTerminalType"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogTerminalNum"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogTerminalUser"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogTerminalLocation"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogCmdSrcAddress"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogVirHost"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogServerAddress"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogFile"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogUserName"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogWantBackup"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogSrcData"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgLogDesData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfCfgManLogGroup = hpnicfCfgManLogGroup.setStatus('current')
hpnicfCfgOperateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 3, 2, 2)).setObjects(("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateGlobalEntryLimit"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateEntryAgeOutTime"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateType"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateProtocol"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateFileName"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateServerAddress"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateUserName"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateUserPassword"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateTime"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateEndNotificationSwitch"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateResultGlobalEntryLimit"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateState"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateRowStatus"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateResultOptIndex"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateResultOpType"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateEndTime"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperFailReason"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateServerPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfCfgOperateGroup = hpnicfCfgOperateGroup.setStatus('current')
hpnicfCfgManNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 4, 3, 2, 3)).setObjects(("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgManEventlog"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgOperateCompletion"), ("HPN-ICF-CONFIG-MAN-MIB", "hpnicfCfgInvalidConfigFile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfCfgManNotificationGroup = hpnicfCfgManNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-CONFIG-MAN-MIB", hpnicfCfgLogTerminalUser=hpnicfCfgLogTerminalUser, hpnicfCfgLogCmdSrcAddrVPNName=hpnicfCfgLogCmdSrcAddrVPNName, hpnicfCfgStartModifiedLast=hpnicfCfgStartModifiedLast, hpnicfCfgOperateTime=hpnicfCfgOperateTime, hpnicfCfgExecuteOperate=hpnicfCfgExecuteOperate, hpnicfCfgOperateProtocol=hpnicfCfgOperateProtocol, hpnicfCfgLogTerminalType=hpnicfCfgLogTerminalType, hpnicfCfgLogSrcCmd=hpnicfCfgLogSrcCmd, hpnicfCfgLogTerminalNum=hpnicfCfgLogTerminalNum, hpnicfCfgOperateResultGlobalEntryLimit=hpnicfCfgOperateResultGlobalEntryLimit, hpnicfCfgManNotificationGroup=hpnicfCfgManNotificationGroup, hpnicfConfig=hpnicfConfig, hpnicfCfgOperateUserPassword=hpnicfCfgOperateUserPassword, hpnicfCfgOperateEndTime=hpnicfCfgOperateEndTime, hpnicfCfgLogSrcData=hpnicfCfgLogSrcData, hpnicfCfgLogWantBackup=hpnicfCfgLogWantBackup, hpnicfCfgManLogGroup=hpnicfCfgManLogGroup, PYSNMP_MODULE_ID=hpnicfConfig, hpnicfCfgOperateResultIndex=hpnicfCfgOperateResultIndex, hpnicfCfgOperateUserName=hpnicfCfgOperateUserName, hpnicfConfigManConformance=hpnicfConfigManConformance, hpnicfCfgOperateSrvAddrType=hpnicfCfgOperateSrvAddrType, hpnicfCfgExecuteState=hpnicfCfgExecuteState, hpnicfCfgLogServerAddress=hpnicfCfgLogServerAddress, hpnicfCfgLogTime=hpnicfCfgLogTime, hpnicfCfgLog=hpnicfCfgLog, hpnicfCfgOperateFileName=hpnicfCfgOperateFileName, hpnicfConfigManNotifications=hpnicfConfigManNotifications, hpnicfCfgLogTerminalLocation=hpnicfCfgLogTerminalLocation, hpnicfCfgLogServerAddrType=hpnicfCfgLogServerAddrType, hpnicfCfgExecuteOperateResultEntryLimit=hpnicfCfgExecuteOperateResultEntryLimit, hpnicfCfgExecuteResultTable=hpnicfCfgExecuteResultTable, hpnicfCfgOperateRowStatus=hpnicfCfgOperateRowStatus, hpnicfCfgOperateResultOptIndex=hpnicfCfgOperateResultOptIndex, hpnicfCfgLogLimitedEntries=hpnicfCfgLogLimitedEntries, hpnicfCfgExecuteTime=hpnicfCfgExecuteTime, hpnicfCfgOperFailReason=hpnicfCfgOperFailReason, hpnicfCfgLogVirHost=hpnicfCfgLogVirHost, hpnicfCfgOperateSrvVPNName=hpnicfCfgOperateSrvVPNName, hpnicfCfgLogServerAddrVPNName=hpnicfCfgLogServerAddrVPNName, hpnicfCfgOperateState=hpnicfCfgOperateState, ConfigOperationStateType=ConfigOperationStateType, hpnicfCfgOperateEndNotificationSwitch=hpnicfCfgOperateEndNotificationSwitch, hpnicfCfgOperateServerAddress=hpnicfCfgOperateServerAddress, hpnicfConfigManCompliance=hpnicfConfigManCompliance, hpnicfCfgOperateSrvAddrRev=hpnicfCfgOperateSrvAddrRev, hpnicfCfgOperateType=hpnicfCfgOperateType, hpnicfCfgReset=hpnicfCfgReset, hpnicfCfgOperateGlobalEntryLimit=hpnicfCfgOperateGlobalEntryLimit, hpnicfCfgExecuteResultIndex=hpnicfCfgExecuteResultIndex, hpnicfCfgManEventlog=hpnicfCfgManEventlog, hpnicfCfgOperateIndex=hpnicfCfgOperateIndex, hpnicfCfgOperateEntry=hpnicfCfgOperateEntry, hpnicfCfgExecuteEndTime=hpnicfCfgExecuteEndTime, hpnicfCfgLogTable=hpnicfCfgLogTable, hpnicfCfgLogFile=hpnicfCfgLogFile, hpnicfCfgLogServerAddrRev=hpnicfCfgLogServerAddrRev, hpnicfCfgLogDesData=hpnicfCfgLogDesData, hpnicfCfgExecuteResultOptIndex=hpnicfCfgExecuteResultOptIndex, hpnicfConfigManObjects=hpnicfConfigManObjects, hpnicfCfgLogCmdSrcAddrRev=hpnicfCfgLogCmdSrcAddrRev, hpnicfCfgLogCmdSrcAddrType=hpnicfCfgLogCmdSrcAddrType, hpnicfCfgLogEntry=hpnicfCfgLogEntry, hpnicfCfgOperateResultTable=hpnicfCfgOperateResultTable, hpnicfCfgRunSavedLast=hpnicfCfgRunSavedLast, hpnicfCfgOperateGroup=hpnicfCfgOperateGroup, hpnicfConfigManCompliances=hpnicfConfigManCompliances, ConfigOperationType=ConfigOperationType, hpnicfCfgLogCmdSrcAddress=hpnicfCfgLogCmdSrcAddress, hpnicfCfgOperateTable=hpnicfCfgOperateTable, hpnicfCfgOperateResultOpType=hpnicfCfgOperateResultOpType, hpnicfCfgInvalidConfigFile=hpnicfCfgInvalidConfigFile, hpnicfCfgRunModifiedLast=hpnicfCfgRunModifiedLast, hpnicfCfgOperateEntryAgeOutTime=hpnicfCfgOperateEntryAgeOutTime, hpnicfCfgOperate=hpnicfCfgOperate, hpnicfCfgLogUserName=hpnicfCfgLogUserName, hpnicfConfigManGroups=hpnicfConfigManGroups, hpnicfCfgOperateCompletion=hpnicfCfgOperateCompletion, hpnicfCfgOperateServerPort=hpnicfCfgOperateServerPort, hpnicfCfgFirstTrapTime=hpnicfCfgFirstTrapTime, hpnicfCfgLogIndex=hpnicfCfgLogIndex, hpnicfCfgExecuteResultEntry=hpnicfCfgExecuteResultEntry, hpnicfCfgExecuteResultOpType=hpnicfCfgExecuteResultOpType, hpnicfCfgReset2=hpnicfCfgReset2, hpnicfCfgOperateResultEntry=hpnicfCfgOperateResultEntry, hpnicfCfgLogDeletedEntries=hpnicfCfgLogDeletedEntries)
