#
# PySNMP MIB module WINDOWS-NT-PERFORMANCE-EXCHANGE (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WINDOWS-NT-PERFORMANCE-EXCHANGE
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, Bits, Gauge32, ModuleIdentity, Integer32, NotificationType, enterprises, iso, MibIdentifier, Unsigned32, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "Bits", "Gauge32", "ModuleIdentity", "Integer32", "NotificationType", "enterprises", "iso", "MibIdentifier", "Unsigned32", "ObjectIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
microsoft = MibIdentifier((1, 3, 6, 1, 4, 1, 311))
software = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1))
systems = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1))
os = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3))
winnt = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1))
performance = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1))
mSExchangeMTA = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1))
mtaAdjacentMTAAssociations = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdjacentMTAAssociations.setStatus('mandatory')
mtaMessagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaMessagesPerSec.setStatus('mandatory')
mtaMessageBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaMessageBytesPerSec.setStatus('mandatory')
mtaFreeElements = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaFreeElements.setStatus('mandatory')
mtaFreeHeaders = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaFreeHeaders.setStatus('mandatory')
mtaAdminConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdminConnections.setStatus('mandatory')
mtaThreadsInUse = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaThreadsInUse.setStatus('mandatory')
mtaWorkQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaWorkQueueLength.setStatus('mandatory')
mtaXAPIGateways = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaXAPIGateways.setStatus('mandatory')
mtaXAPIClients = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaXAPIClients.setStatus('mandatory')
mtaDiskFileDeletesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaDiskFileDeletesPerSec.setStatus('mandatory')
mtaDiskFileSyncsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaDiskFileSyncsPerSec.setStatus('mandatory')
mtaDiskFileOpensPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaDiskFileOpensPerSec.setStatus('mandatory')
mtaDiskFileReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaDiskFileReadsPerSec.setStatus('mandatory')
mtaDiskFileWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaDiskFileWritesPerSec.setStatus('mandatory')
mtaExDSReadCallsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaExDSReadCallsPerSec.setStatus('mandatory')
mtaXAPIReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaXAPIReceiveBytesPerSec.setStatus('mandatory')
mtaXAPITransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaXAPITransmitBytesPerSec.setStatus('mandatory')
mtaAdminInterfaceReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdminInterfaceReceiveBytesPerSec.setStatus('mandatory')
mtaAdminInterfaceTransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaAdminInterfaceTransmitBytesPerSec.setStatus('mandatory')
mtaLANReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaLANReceiveBytesPerSec.setStatus('mandatory')
mtaLANTransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaLANTransmitBytesPerSec.setStatus('mandatory')
mtaRASReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaRASReceiveBytesPerSec.setStatus('mandatory')
mtaRASTransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaRASTransmitBytesPerSec.setStatus('mandatory')
mtaTCPPerIPReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTCPPerIPReceiveBytesPerSec.setStatus('mandatory')
mtaTCPPerIPTransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTCPPerIPTransmitBytesPerSec.setStatus('mandatory')
mtaTP4ReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTP4ReceiveBytesPerSec.setStatus('mandatory')
mtaTP4TransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTP4TransmitBytesPerSec.setStatus('mandatory')
mtaX25ReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaX25ReceiveBytesPerSec.setStatus('mandatory')
mtaX25TransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaX25TransmitBytesPerSec.setStatus('mandatory')
mtaDeferredDeliveryMsgs = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaDeferredDeliveryMsgs.setStatus('mandatory')
mtaTotalRecipientsQueued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalRecipientsQueued.setStatus('mandatory')
mtaTotalSuccessfulConversions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalSuccessfulConversions.setStatus('mandatory')
mtaTotalFailedConversions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalFailedConversions.setStatus('mandatory')
mtaTotalLoopsDetected = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalLoopsDetected.setStatus('mandatory')
mtaInboundMessagesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaInboundMessagesTotal.setStatus('mandatory')
mtaOutboundMessagesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOutboundMessagesTotal.setStatus('mandatory')
mtaInboundBytesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaInboundBytesTotal.setStatus('mandatory')
mtaWorkQueueBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaWorkQueueBytes.setStatus('mandatory')
mtaOutboundBytesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaOutboundBytesTotal.setStatus('mandatory')
mtaTotalRecipientsInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalRecipientsInbound.setStatus('mandatory')
mtaTotalRecipientsOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTotalRecipientsOutbound.setStatus('mandatory')
connmSExchangeMTA_ConnectionsTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2), ).setLabel("connmSExchangeMTA-ConnectionsTable")
if mibBuilder.loadTexts: connmSExchangeMTA_ConnectionsTable.setStatus('mandatory')
connmSExchangeMTA_ConnectionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1), ).setLabel("connmSExchangeMTA-ConnectionsEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE-EXCHANGE", "connmSExchangeMTA-ConnectionsIndex"))
if mibBuilder.loadTexts: connmSExchangeMTA_ConnectionsEntry.setStatus('mandatory')
connmSExchangeMTA_ConnectionsIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 1), Integer32()).setLabel("connmSExchangeMTA-ConnectionsIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: connmSExchangeMTA_ConnectionsIndex.setStatus('mandatory')
connmSExchangeMTA_ConnectionsInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 2), DisplayString()).setLabel("connmSExchangeMTA-ConnectionsInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: connmSExchangeMTA_ConnectionsInstance.setStatus('mandatory')
connAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connAssociations.setStatus('mandatory')
connReceiveBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connReceiveBytesPerSec.setStatus('mandatory')
connSendBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connSendBytesPerSec.setStatus('mandatory')
connReceiveMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connReceiveMessagesPerSec.setStatus('mandatory')
connSendMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connSendMessagesPerSec.setStatus('mandatory')
connQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connQueueLength.setStatus('mandatory')
connConnectorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connConnectorIndex.setStatus('mandatory')
connInboundRejectedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connInboundRejectedTotal.setStatus('mandatory')
connTotalRecipientsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connTotalRecipientsQueued.setStatus('mandatory')
connOldestMessageQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connOldestMessageQueued.setStatus('mandatory')
connCurrentInboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connCurrentInboundAssociations.setStatus('mandatory')
connCurrentOutboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connCurrentOutboundAssociations.setStatus('mandatory')
connCumulativeInboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connCumulativeInboundAssociations.setStatus('mandatory')
connCumulativeOutboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connCumulativeOutboundAssociations.setStatus('mandatory')
connLastInboundAssociation = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connLastInboundAssociation.setStatus('mandatory')
connLastOutboundAssociation = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connLastOutboundAssociation.setStatus('mandatory')
connRejectedInboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connRejectedInboundAssociations.setStatus('mandatory')
connFailedOutboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connFailedOutboundAssociations.setStatus('mandatory')
connNextAssociationRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connNextAssociationRetry.setStatus('mandatory')
connInboundRejectReason = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connInboundRejectReason.setStatus('mandatory')
connOutboundFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connOutboundFailureReason.setStatus('mandatory')
connInboundMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connInboundMessagesTotal.setStatus('mandatory')
connOutboundMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connOutboundMessagesTotal.setStatus('mandatory')
connInboundBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connInboundBytesTotal.setStatus('mandatory')
connQueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connQueuedBytes.setStatus('mandatory')
connOutboundBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connOutboundBytesTotal.setStatus('mandatory')
connTotalRecipientsInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connTotalRecipientsInbound.setStatus('mandatory')
connTotalRecipientsOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connTotalRecipientsOutbound.setStatus('mandatory')
mSExchangeIMC = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3))
imsQueuedMTS_IN = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1), Integer32()).setLabel("imsQueuedMTS-IN").setMaxAccess("readonly")
if mibBuilder.loadTexts: imsQueuedMTS_IN.setStatus('mandatory')
imsBytesQueuedMTS_IN = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 2), Integer32()).setLabel("imsBytesQueuedMTS-IN").setMaxAccess("readonly")
if mibBuilder.loadTexts: imsBytesQueuedMTS_IN.setStatus('mandatory')
imsMessagesEnteringMTS_IN = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 3), Integer32()).setLabel("imsMessagesEnteringMTS-IN").setMaxAccess("readonly")
if mibBuilder.loadTexts: imsMessagesEnteringMTS_IN.setStatus('mandatory')
imsQueuedMTS_OUT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 4), Integer32()).setLabel("imsQueuedMTS-OUT").setMaxAccess("readonly")
if mibBuilder.loadTexts: imsQueuedMTS_OUT.setStatus('mandatory')
imsBytesQueuedMTS_OUT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 5), Integer32()).setLabel("imsBytesQueuedMTS-OUT").setMaxAccess("readonly")
if mibBuilder.loadTexts: imsBytesQueuedMTS_OUT.setStatus('mandatory')
imsMessagesEnteringMTS_OUT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 6), Integer32()).setLabel("imsMessagesEnteringMTS-OUT").setMaxAccess("readonly")
if mibBuilder.loadTexts: imsMessagesEnteringMTS_OUT.setStatus('mandatory')
imsMessagesLeavingMTS_OUT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 7), Integer32()).setLabel("imsMessagesLeavingMTS-OUT").setMaxAccess("readonly")
if mibBuilder.loadTexts: imsMessagesLeavingMTS_OUT.setStatus('mandatory')
imsConnectionsInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsConnectionsInbound.setStatus('mandatory')
imsConnectionsOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsConnectionsOutbound.setStatus('mandatory')
imsConnectionsTotalOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsConnectionsTotalOutbound.setStatus('mandatory')
imsConnectionsTotalInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsConnectionsTotalInbound.setStatus('mandatory')
imsConnectionsTotalRejected = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsConnectionsTotalRejected.setStatus('mandatory')
imsConnectionsTotalFailed = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsConnectionsTotalFailed.setStatus('mandatory')
imsQueuedOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsQueuedOutbound.setStatus('mandatory')
imsQueuedInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsQueuedInbound.setStatus('mandatory')
imsNDRsTotalInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsNDRsTotalInbound.setStatus('mandatory')
imsNDRsTotalOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsNDRsTotalOutbound.setStatus('mandatory')
imsTotalInboundKilobytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalInboundKilobytes.setStatus('mandatory')
imsTotalOutboundKilobytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalOutboundKilobytes.setStatus('mandatory')
imsInboundMessagesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsInboundMessagesTotal.setStatus('mandatory')
imsOutboundMessagesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsOutboundMessagesTotal.setStatus('mandatory')
imsInboundBytesPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsInboundBytesPerHr.setStatus('mandatory')
imsOutboundBytesPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsOutboundBytesPerHr.setStatus('mandatory')
imsInboundMessagesPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsInboundMessagesPerHr.setStatus('mandatory')
imsOutboundMessagesPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsOutboundMessagesPerHr.setStatus('mandatory')
imsOutboundConnectionsPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsOutboundConnectionsPerHr.setStatus('mandatory')
imsInboundConnectionsPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsInboundConnectionsPerHr.setStatus('mandatory')
imsTotalMessagesQueued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalMessagesQueued.setStatus('mandatory')
imsTotalKilobytesQueued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalKilobytesQueued.setStatus('mandatory')
imsTotalInboundRecipients = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalInboundRecipients.setStatus('mandatory')
imsTotalOutboundRecipients = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalOutboundRecipients.setStatus('mandatory')
imsTotalRecipientsQueued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalRecipientsQueued.setStatus('mandatory')
imsTotalSuccessfulConversions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalSuccessfulConversions.setStatus('mandatory')
imsTotalFailedConversions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalFailedConversions.setStatus('mandatory')
imsTotalLoopsDetected = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imsTotalLoopsDetected.setStatus('mandatory')
mibBuilder.exportSymbols("WINDOWS-NT-PERFORMANCE-EXCHANGE", connTotalRecipientsQueued=connTotalRecipientsQueued, imsTotalLoopsDetected=imsTotalLoopsDetected, imsTotalKilobytesQueued=imsTotalKilobytesQueued, connFailedOutboundAssociations=connFailedOutboundAssociations, connInboundRejectedTotal=connInboundRejectedTotal, imsOutboundMessagesTotal=imsOutboundMessagesTotal, connOutboundFailureReason=connOutboundFailureReason, os=os, imsTotalFailedConversions=imsTotalFailedConversions, software=software, imsConnectionsTotalRejected=imsConnectionsTotalRejected, connLastOutboundAssociation=connLastOutboundAssociation, connReceiveMessagesPerSec=connReceiveMessagesPerSec, imsOutboundMessagesPerHr=imsOutboundMessagesPerHr, mtaX25TransmitBytesPerSec=mtaX25TransmitBytesPerSec, imsQueuedOutbound=imsQueuedOutbound, mtaX25ReceiveBytesPerSec=mtaX25ReceiveBytesPerSec, imsTotalOutboundKilobytes=imsTotalOutboundKilobytes, mtaTotalSuccessfulConversions=mtaTotalSuccessfulConversions, imsNDRsTotalInbound=imsNDRsTotalInbound, mtaInboundBytesTotal=mtaInboundBytesTotal, mtaWorkQueueLength=mtaWorkQueueLength, connQueueLength=connQueueLength, mtaDeferredDeliveryMsgs=mtaDeferredDeliveryMsgs, mtaRASReceiveBytesPerSec=mtaRASReceiveBytesPerSec, connAssociations=connAssociations, mtaThreadsInUse=mtaThreadsInUse, connInboundRejectReason=connInboundRejectReason, mtaDiskFileSyncsPerSec=mtaDiskFileSyncsPerSec, mtaTotalLoopsDetected=mtaTotalLoopsDetected, connOutboundMessagesTotal=connOutboundMessagesTotal, mtaTotalRecipientsOutbound=mtaTotalRecipientsOutbound, imsConnectionsTotalOutbound=imsConnectionsTotalOutbound, imsInboundConnectionsPerHr=imsInboundConnectionsPerHr, connRejectedInboundAssociations=connRejectedInboundAssociations, mtaFreeHeaders=mtaFreeHeaders, connOutboundBytesTotal=connOutboundBytesTotal, mtaTP4ReceiveBytesPerSec=mtaTP4ReceiveBytesPerSec, mtaTP4TransmitBytesPerSec=mtaTP4TransmitBytesPerSec, connSendBytesPerSec=connSendBytesPerSec, mtaTotalRecipientsInbound=mtaTotalRecipientsInbound, mtaXAPIClients=mtaXAPIClients, mtaDiskFileWritesPerSec=mtaDiskFileWritesPerSec, imsMessagesEnteringMTS_IN=imsMessagesEnteringMTS_IN, imsQueuedMTS_OUT=imsQueuedMTS_OUT, imsBytesQueuedMTS_OUT=imsBytesQueuedMTS_OUT, imsInboundBytesPerHr=imsInboundBytesPerHr, imsQueuedInbound=imsQueuedInbound, mtaTotalRecipientsQueued=mtaTotalRecipientsQueued, mtaXAPIGateways=mtaXAPIGateways, mtaExDSReadCallsPerSec=mtaExDSReadCallsPerSec, connmSExchangeMTA_ConnectionsTable=connmSExchangeMTA_ConnectionsTable, imsTotalSuccessfulConversions=imsTotalSuccessfulConversions, mtaAdminInterfaceReceiveBytesPerSec=mtaAdminInterfaceReceiveBytesPerSec, mtaDiskFileOpensPerSec=mtaDiskFileOpensPerSec, imsConnectionsTotalInbound=imsConnectionsTotalInbound, imsOutboundBytesPerHr=imsOutboundBytesPerHr, mtaTotalFailedConversions=mtaTotalFailedConversions, imsQueuedMTS_IN=imsQueuedMTS_IN, connmSExchangeMTA_ConnectionsInstance=connmSExchangeMTA_ConnectionsInstance, imsNDRsTotalOutbound=imsNDRsTotalOutbound, imsBytesQueuedMTS_IN=imsBytesQueuedMTS_IN, mtaTCPPerIPReceiveBytesPerSec=mtaTCPPerIPReceiveBytesPerSec, mtaAdminInterfaceTransmitBytesPerSec=mtaAdminInterfaceTransmitBytesPerSec, mtaLANTransmitBytesPerSec=mtaLANTransmitBytesPerSec, connCumulativeOutboundAssociations=connCumulativeOutboundAssociations, connReceiveBytesPerSec=connReceiveBytesPerSec, connQueuedBytes=connQueuedBytes, mtaDiskFileDeletesPerSec=mtaDiskFileDeletesPerSec, connConnectorIndex=connConnectorIndex, mtaFreeElements=mtaFreeElements, connCurrentInboundAssociations=connCurrentInboundAssociations, connTotalRecipientsOutbound=connTotalRecipientsOutbound, mtaMessageBytesPerSec=mtaMessageBytesPerSec, imsOutboundConnectionsPerHr=imsOutboundConnectionsPerHr, mtaOutboundMessagesTotal=mtaOutboundMessagesTotal, connOldestMessageQueued=connOldestMessageQueued, connmSExchangeMTA_ConnectionsEntry=connmSExchangeMTA_ConnectionsEntry, mtaXAPITransmitBytesPerSec=mtaXAPITransmitBytesPerSec, connCurrentOutboundAssociations=connCurrentOutboundAssociations, imsTotalInboundKilobytes=imsTotalInboundKilobytes, mtaAdminConnections=mtaAdminConnections, mtaTCPPerIPTransmitBytesPerSec=mtaTCPPerIPTransmitBytesPerSec, mtaXAPIReceiveBytesPerSec=mtaXAPIReceiveBytesPerSec, imsConnectionsOutbound=imsConnectionsOutbound, imsMessagesLeavingMTS_OUT=imsMessagesLeavingMTS_OUT, mSExchangeIMC=mSExchangeIMC, systems=systems, mtaDiskFileReadsPerSec=mtaDiskFileReadsPerSec, connInboundMessagesTotal=connInboundMessagesTotal, connInboundBytesTotal=connInboundBytesTotal, connCumulativeInboundAssociations=connCumulativeInboundAssociations, winnt=winnt, imsTotalMessagesQueued=imsTotalMessagesQueued, microsoft=microsoft, imsMessagesEnteringMTS_OUT=imsMessagesEnteringMTS_OUT, mtaAdjacentMTAAssociations=mtaAdjacentMTAAssociations, connNextAssociationRetry=connNextAssociationRetry, mSExchangeMTA=mSExchangeMTA, connSendMessagesPerSec=connSendMessagesPerSec, mtaOutboundBytesTotal=mtaOutboundBytesTotal, imsInboundMessagesPerHr=imsInboundMessagesPerHr, imsTotalOutboundRecipients=imsTotalOutboundRecipients, imsTotalRecipientsQueued=imsTotalRecipientsQueued, performance=performance, mtaRASTransmitBytesPerSec=mtaRASTransmitBytesPerSec, connTotalRecipientsInbound=connTotalRecipientsInbound, connmSExchangeMTA_ConnectionsIndex=connmSExchangeMTA_ConnectionsIndex, imsConnectionsTotalFailed=imsConnectionsTotalFailed, imsInboundMessagesTotal=imsInboundMessagesTotal, mtaMessagesPerSec=mtaMessagesPerSec, imsConnectionsInbound=imsConnectionsInbound, mtaWorkQueueBytes=mtaWorkQueueBytes, imsTotalInboundRecipients=imsTotalInboundRecipients, mtaInboundMessagesTotal=mtaInboundMessagesTotal, mtaLANReceiveBytesPerSec=mtaLANReceiveBytesPerSec, connLastInboundAssociation=connLastInboundAssociation)
