#
# PySNMP MIB module BRCD-FCIP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BRCD-FCIP-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:23:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
bcsi, = mibBuilder.importSymbols("Brocade-REG-MIB", "bcsi")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, ModuleIdentity, ObjectIdentity, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, mib_2, iso, Counter32, TimeTicks, NotificationType, Gauge32, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "ObjectIdentity", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "mib-2", "iso", "Counter32", "TimeTicks", "NotificationType", "Gauge32", "Counter64", "Unsigned32")
TruthValue, RowStatus, TimeStamp, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TimeStamp", "TextualConvention", "DisplayString")
fcipExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1588, 4))
fcipExtMIB.setRevisions(('2009-06-19 15:05', '2013-04-26 11:33',))
if mibBuilder.loadTexts: fcipExtMIB.setLastUpdated('201304261133Z')
if mibBuilder.loadTexts: fcipExtMIB.setOrganization('Brocade Communications Systems, Inc.')
class BrcdCompressionRatio(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

fcipExtendedLinkTable = MibTable((1, 3, 6, 1, 4, 1, 1588, 4, 1), )
if mibBuilder.loadTexts: fcipExtendedLinkTable.setStatus('current')
fcipExtendedLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1), ).setIndexNames((0, "BRCD-FCIP-EXT-MIB", "fcipExtendedLinkIfIndex"))
if mibBuilder.loadTexts: fcipExtendedLinkEntry.setStatus('current')
fcipExtendedLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkIfIndex.setStatus('current')
fcipExtendedLinkTcpRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkTcpRetransmits.setStatus('current')
fcipExtendedLinkTcpDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkTcpDroppedPackets.setStatus('current')
fcipExtendedLinkCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 4), BrcdCompressionRatio()).setUnits('compression ratio').setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkCompressionRatio.setStatus('current')
fcipExtendedLinkTcpSmoothedRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 5), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkTcpSmoothedRTT.setStatus('current')
fcipExtendedLinkRawBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkRawBytes.setStatus('current')
fcipExtendedLinkCompressedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkCompressedBytes.setStatus('current')
fcipExtendedLinkConnectedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkConnectedCount.setStatus('current')
fcipExtendedLinkRtxRtxTO = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkRtxRtxTO.setStatus('current')
fcipExtendedLinkRtxDupAck = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkRtxDupAck.setStatus('current')
fcipExtendedLinkDupAck = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkDupAck.setStatus('current')
fcipExtendedLinkRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 12), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkRtt.setStatus('current')
fcipExtendedLinkOoo = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkOoo.setStatus('current')
fcipExtendedLinkSlowStarts = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipExtendedLinkSlowStarts.setStatus('current')
fcipConnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1588, 4, 2), )
if mibBuilder.loadTexts: fcipConnStatsTable.setStatus('current')
fcipConnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1), ).setIndexNames((0, "BRCD-FCIP-EXT-MIB", "xfcipEntityId"), (0, "BRCD-FCIP-EXT-MIB", "xfcipLinkIndex"))
if mibBuilder.loadTexts: fcipConnStatsEntry.setStatus('current')
xfcipEntityId = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: xfcipEntityId.setStatus('current')
xfcipLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfcipLinkIfIndex.setStatus('current')
xfcipLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: xfcipLinkIndex.setStatus('current')
xfcipExtendedLinkTcpRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfcipExtendedLinkTcpRetransmits.setStatus('current')
xfcipExtendedLinkTcpDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfcipExtendedLinkTcpDroppedPackets.setStatus('current')
xfcipExtendedLinkCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 6), BrcdCompressionRatio()).setUnits('compression ratio').setMaxAccess("readonly")
if mibBuilder.loadTexts: xfcipExtendedLinkCompressionRatio.setStatus('current')
xfcipExtendedLinkTcpSmoothedRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 7), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xfcipExtendedLinkTcpSmoothedRTT.setStatus('current')
xfcipExtendedLinkRawBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfcipExtendedLinkRawBytes.setStatus('current')
xfcipExtendedLinkCompressedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1588, 4, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfcipExtendedLinkCompressedBytes.setStatus('current')
mibBuilder.exportSymbols("BRCD-FCIP-EXT-MIB", xfcipExtendedLinkCompressionRatio=xfcipExtendedLinkCompressionRatio, xfcipExtendedLinkTcpRetransmits=xfcipExtendedLinkTcpRetransmits, xfcipExtendedLinkRawBytes=xfcipExtendedLinkRawBytes, xfcipExtendedLinkTcpDroppedPackets=xfcipExtendedLinkTcpDroppedPackets, fcipExtendedLinkTcpSmoothedRTT=fcipExtendedLinkTcpSmoothedRTT, fcipExtendedLinkIfIndex=fcipExtendedLinkIfIndex, xfcipExtendedLinkTcpSmoothedRTT=xfcipExtendedLinkTcpSmoothedRTT, fcipExtendedLinkCompressionRatio=fcipExtendedLinkCompressionRatio, fcipExtendedLinkSlowStarts=fcipExtendedLinkSlowStarts, fcipExtendedLinkTable=fcipExtendedLinkTable, xfcipLinkIfIndex=xfcipLinkIfIndex, fcipExtendedLinkOoo=fcipExtendedLinkOoo, xfcipExtendedLinkCompressedBytes=xfcipExtendedLinkCompressedBytes, fcipExtMIB=fcipExtMIB, xfcipLinkIndex=xfcipLinkIndex, fcipExtendedLinkTcpDroppedPackets=fcipExtendedLinkTcpDroppedPackets, fcipExtendedLinkDupAck=fcipExtendedLinkDupAck, fcipExtendedLinkEntry=fcipExtendedLinkEntry, fcipExtendedLinkRawBytes=fcipExtendedLinkRawBytes, fcipConnStatsTable=fcipConnStatsTable, fcipExtendedLinkRtxDupAck=fcipExtendedLinkRtxDupAck, PYSNMP_MODULE_ID=fcipExtMIB, xfcipEntityId=xfcipEntityId, BrcdCompressionRatio=BrcdCompressionRatio, fcipExtendedLinkRtxRtxTO=fcipExtendedLinkRtxRtxTO, fcipExtendedLinkConnectedCount=fcipExtendedLinkConnectedCount, fcipConnStatsEntry=fcipConnStatsEntry, fcipExtendedLinkTcpRetransmits=fcipExtendedLinkTcpRetransmits, fcipExtendedLinkCompressedBytes=fcipExtendedLinkCompressedBytes, fcipExtendedLinkRtt=fcipExtendedLinkRtt)
