#
# PySNMP MIB module NMS-IF-APP-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-IF-APP-POLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
nmsMgmt, = mibBuilder.importSymbols("NMS-SMI", "nmsMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Unsigned32, MibIdentifier, iso, Integer32, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Counter64, NotificationType, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Unsigned32", "MibIdentifier", "iso", "Integer32", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Counter64", "NotificationType", "ModuleIdentity", "TimeTicks")
DisplayString, TextualConvention, PhysAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "PhysAddress", "RowStatus")
nmsIfAppPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65))
nmsIfAppPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1), )
if mibBuilder.loadTexts: nmsIfAppPolicyTable.setStatus('mandatory')
nmsIfAppPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1), ).setIndexNames((0, "NMS-IF-APP-POLICY-MIB", "ponIfIndex"))
if mibBuilder.loadTexts: nmsIfAppPolicyEntry.setStatus('mandatory')
nmsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsIfIndex.setStatus('mandatory')
nmsIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsIfDescr.setStatus('mandatory')
nmsIfInMacACL = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfInMacACL.setStatus('mandatory')
nmsIfOutMacACL = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfOutMacACL.setStatus('mandatory')
nmsIfInIpACL = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfInIpACL.setStatus('mandatory')
nmsIfOutIpACL = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfOutIpACL.setStatus('mandatory')
nmsIfInQosPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfInQosPolicyName.setStatus('mandatory')
nmsIfOutQosPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 9, 65, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsIfOutQosPolicyName.setStatus('mandatory')
mibBuilder.exportSymbols("NMS-IF-APP-POLICY-MIB", nmsIfDescr=nmsIfDescr, nmsIfOutQosPolicyName=nmsIfOutQosPolicyName, nmsIfOutIpACL=nmsIfOutIpACL, nmsIfIndex=nmsIfIndex, nmsIfOutMacACL=nmsIfOutMacACL, nmsIfAppPolicy=nmsIfAppPolicy, nmsIfInIpACL=nmsIfInIpACL, nmsIfInMacACL=nmsIfInMacACL, nmsIfAppPolicyEntry=nmsIfAppPolicyEntry, nmsIfAppPolicyTable=nmsIfAppPolicyTable, nmsIfInQosPolicyName=nmsIfInQosPolicyName)
