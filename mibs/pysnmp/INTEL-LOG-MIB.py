#
# PySNMP MIB module INTEL-LOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-LOG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, MibIdentifier, Unsigned32, Counter64, NotificationType, Integer32, Gauge32, iso, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "MibIdentifier", "Unsigned32", "Counter64", "NotificationType", "Integer32", "Gauge32", "iso", "Counter32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
log = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 8))
logInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 8, 1))
logListTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1), )
if mibBuilder.loadTexts: logListTable.setStatus('mandatory')
logListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1), ).setIndexNames((0, "INTEL-LOG-MIB", "logListSeqno"))
if mibBuilder.loadTexts: logListEntry.setStatus('mandatory')
logListSeqno = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListSeqno.setStatus('mandatory')
logListCode = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListCode.setStatus('mandatory')
logListSource = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("misc", 1), ("system", 2), ("syslogd", 3), ("ipx", 6), ("ip", 7), ("isdn", 8), ("callcontrol", 9), ("framerelay", 10), ("ppp", 11), ("link", 12), ("tunnel", 13), ("x25", 14), ("csu", 15), ("hdlc", 16), ("wanPort", 17), ("modem", 18), ("ipm", 19), ("rsvp", 20), ("l3l", 21), ("ipru", 22), ("gmrp", 23), ("lapb", 24), ("bridging", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListSource.setStatus('mandatory')
logListCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListCategory.setStatus('mandatory')
logListLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100, 70, 60, 50, 40, 30))).clone(namedValues=NamedValues(("fatalError", 100), ("error", 70), ("warning", 60), ("note", 50), ("info", 40), ("debug", 30)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListLevel.setStatus('mandatory')
logListTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListTimeStamp.setStatus('mandatory')
logListMulti = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListMulti.setStatus('mandatory')
logListText1 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(250, 250)).setFixedLength(250)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListText1.setStatus('mandatory')
logListText2 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(250, 250)).setFixedLength(250)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListText2.setStatus('mandatory')
logListText3 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(250, 250)).setFixedLength(250)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListText3.setStatus('mandatory')
logListText4 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(250, 250)).setFixedLength(250)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListText4.setStatus('mandatory')
logListChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListChassis.setStatus('mandatory')
logListModule = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListModule.setStatus('mandatory')
logListPort = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListPort.setStatus('mandatory')
logListExtFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logListExtFlags.setStatus('mandatory')
logListRepeats = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListRepeats.setStatus('mandatory')
logArgListTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 2), )
if mibBuilder.loadTexts: logArgListTable.setStatus('mandatory')
logArgListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 2, 1), ).setIndexNames((0, "INTEL-LOG-MIB", "logArgListSeqno"), (0, "INTEL-LOG-MIB", "logArgListArgNumber"))
if mibBuilder.loadTexts: logArgListEntry.setStatus('mandatory')
logArgListSeqno = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logArgListSeqno.setStatus('mandatory')
logArgListArgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logArgListArgNumber.setStatus('mandatory')
logArgListArg = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logArgListArg.setStatus('mandatory')
logMgmtTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 3), )
if mibBuilder.loadTexts: logMgmtTable.setStatus('mandatory')
logMgmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 3, 1), ).setIndexNames((0, "INTEL-LOG-MIB", "logMgmtIpAddress"))
if mibBuilder.loadTexts: logMgmtEntry.setStatus('mandatory')
logMgmtIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logMgmtIpAddress.setStatus('mandatory')
logMgmtSeqno = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logMgmtSeqno.setStatus('mandatory')
logListEntryCount = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logListEntryCount.setStatus('mandatory')
logListFirstSeqno = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListFirstSeqno.setStatus('mandatory')
logListLastSeqno = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListLastSeqno.setStatus('mandatory')
logListLastUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 8, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logListLastUpdateTime.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-LOG-MIB", logListExtFlags=logListExtFlags, logArgListEntry=logArgListEntry, logMgmtIpAddress=logMgmtIpAddress, logMgmtSeqno=logMgmtSeqno, logListLastSeqno=logListLastSeqno, logListText2=logListText2, logListCategory=logListCategory, logArgListSeqno=logArgListSeqno, logArgListArg=logArgListArg, logListEntry=logListEntry, logListFirstSeqno=logListFirstSeqno, logArgListTable=logArgListTable, logListText3=logListText3, logListText4=logListText4, logListTable=logListTable, logListCode=logListCode, logListTimeStamp=logListTimeStamp, logListRepeats=logListRepeats, logListEntryCount=logListEntryCount, logListLevel=logListLevel, log=log, logInfo=logInfo, logListText1=logListText1, logMgmtEntry=logMgmtEntry, logListLastUpdateTime=logListLastUpdateTime, logMgmtTable=logMgmtTable, logListMulti=logListMulti, logArgListArgNumber=logArgListArgNumber, logListPort=logListPort, logListSource=logListSource, logListChassis=logListChassis, logListSeqno=logListSeqno, logListModule=logListModule)
