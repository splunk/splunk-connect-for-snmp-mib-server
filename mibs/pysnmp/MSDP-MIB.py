#
# PySNMP MIB module MSDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MSDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:18:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, Unsigned32, NotificationType, Counter32, Integer32, Bits, IpAddress, Counter64, experimental, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, MibIdentifier, ObjectIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "NotificationType", "Counter32", "Integer32", "Bits", "IpAddress", "Counter64", "experimental", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "Gauge32")
TextualConvention, DisplayString, TimeStamp, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp", "TruthValue", "RowStatus")
msdpMIB = ModuleIdentity((1, 3, 6, 1, 3, 92))
msdpMIB.setRevisions(('2006-08-01 00:00',))
if mibBuilder.loadTexts: msdpMIB.setLastUpdated('200608010000Z')
if mibBuilder.loadTexts: msdpMIB.setOrganization('IETF MBONED Working Group')
msdpMIBobjects = MibIdentifier((1, 3, 6, 1, 3, 92, 1))
msdp = MibIdentifier((1, 3, 6, 1, 3, 92, 1, 1))
msdpEnabled = MibScalar((1, 3, 6, 1, 3, 92, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msdpEnabled.setStatus('current')
msdpCacheLifetime = MibScalar((1, 3, 6, 1, 3, 92, 1, 1, 2), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msdpCacheLifetime.setStatus('current')
msdpNumSACacheEntries = MibScalar((1, 3, 6, 1, 3, 92, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpNumSACacheEntries.setStatus('current')
msdpRPAddress = MibScalar((1, 3, 6, 1, 3, 92, 1, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msdpRPAddress.setStatus('current')
msdpRequestsTable = MibTable((1, 3, 6, 1, 3, 92, 1, 1, 4), )
if mibBuilder.loadTexts: msdpRequestsTable.setStatus('deprecated')
msdpRequestsEntry = MibTableRow((1, 3, 6, 1, 3, 92, 1, 1, 4, 1), ).setIndexNames((0, "MSDP-MIB", "msdpRequestsGroupAddress"), (0, "MSDP-MIB", "msdpRequestsGroupMask"))
if mibBuilder.loadTexts: msdpRequestsEntry.setStatus('deprecated')
msdpRequestsGroupAddress = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: msdpRequestsGroupAddress.setStatus('deprecated')
msdpRequestsGroupMask = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: msdpRequestsGroupMask.setStatus('deprecated')
msdpRequestsPeer = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 4, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpRequestsPeer.setStatus('deprecated')
msdpRequestsStatus = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpRequestsStatus.setStatus('deprecated')
msdpPeerTable = MibTable((1, 3, 6, 1, 3, 92, 1, 1, 5), )
if mibBuilder.loadTexts: msdpPeerTable.setStatus('current')
msdpPeerEntry = MibTableRow((1, 3, 6, 1, 3, 92, 1, 1, 5, 1), ).setIndexNames((0, "MSDP-MIB", "msdpPeerRemoteAddress"))
if mibBuilder.loadTexts: msdpPeerEntry.setStatus('current')
msdpPeerRemoteAddress = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: msdpPeerRemoteAddress.setStatus('current')
msdpPeerState = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inactive", 1), ("listen", 2), ("connecting", 3), ("established", 4), ("disabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerState.setStatus('current')
msdpPeerRPFFailures = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerRPFFailures.setStatus('current')
msdpPeerInSAs = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerInSAs.setStatus('current')
msdpPeerOutSAs = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerOutSAs.setStatus('current')
msdpPeerInSARequests = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerInSARequests.setStatus('current')
msdpPeerOutSARequests = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerOutSARequests.setStatus('current')
msdpPeerInSAResponses = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerInSAResponses.setStatus('deprecated')
msdpPeerOutSAResponses = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerOutSAResponses.setStatus('deprecated')
msdpPeerInControlMessages = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerInControlMessages.setStatus('current')
msdpPeerOutControlMessages = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerOutControlMessages.setStatus('current')
msdpPeerInDataPackets = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerInDataPackets.setStatus('current')
msdpPeerOutDataPackets = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerOutDataPackets.setStatus('current')
msdpPeerFsmEstablishedTransitions = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerFsmEstablishedTransitions.setStatus('current')
msdpPeerFsmEstablishedTime = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerFsmEstablishedTime.setStatus('current')
msdpPeerInMessageTime = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 17), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerInMessageTime.setStatus('current')
msdpPeerLocalAddress = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 18), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpPeerLocalAddress.setStatus('current')
msdpPeerConnectRetryInterval = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpPeerConnectRetryInterval.setStatus('current')
msdpPeerHoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), )).clone(75)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpPeerHoldTimeConfigured.setStatus('current')
msdpPeerKeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), )).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpPeerKeepAliveConfigured.setStatus('current')
msdpPeerDataTtl = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpPeerDataTtl.setStatus('current')
msdpPeerProcessRequestsFrom = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 24), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpPeerProcessRequestsFrom.setStatus('deprecated')
msdpPeerStatus = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpPeerStatus.setStatus('current')
msdpPeerRemotePort = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(639)).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerRemotePort.setStatus('current')
msdpPeerLocalPort = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(639)).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerLocalPort.setStatus('current')
msdpPeerEncapsulationType = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("tcp", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpPeerEncapsulationType.setStatus('current')
msdpPeerConnectionAttempts = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerConnectionAttempts.setStatus('current')
msdpPeerInNotifications = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerInNotifications.setStatus('deprecated')
msdpPeerOutNotifications = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerOutNotifications.setStatus('deprecated')
msdpPeerLastError = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="0000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerLastError.setStatus('deprecated')
msdpPeerDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 5, 1, 34), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpPeerDiscontinuityTime.setStatus('current')
msdpSACacheTable = MibTable((1, 3, 6, 1, 3, 92, 1, 1, 6), )
if mibBuilder.loadTexts: msdpSACacheTable.setStatus('current')
msdpSACacheEntry = MibTableRow((1, 3, 6, 1, 3, 92, 1, 1, 6, 1), ).setIndexNames((0, "MSDP-MIB", "msdpSACacheGroupAddr"), (0, "MSDP-MIB", "msdpSACacheSourceAddr"), (0, "MSDP-MIB", "msdpSACacheOriginRP"))
if mibBuilder.loadTexts: msdpSACacheEntry.setStatus('current')
msdpSACacheGroupAddr = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: msdpSACacheGroupAddr.setStatus('current')
msdpSACacheSourceAddr = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 2), IpAddress())
if mibBuilder.loadTexts: msdpSACacheSourceAddr.setStatus('current')
msdpSACacheOriginRP = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 3), IpAddress())
if mibBuilder.loadTexts: msdpSACacheOriginRP.setStatus('current')
msdpSACachePeerLearnedFrom = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpSACachePeerLearnedFrom.setStatus('current')
msdpSACacheRPFPeer = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpSACacheRPFPeer.setStatus('current')
msdpSACacheInSAs = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpSACacheInSAs.setStatus('current')
msdpSACacheInDataPackets = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpSACacheInDataPackets.setStatus('current')
msdpSACacheUpTime = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpSACacheUpTime.setStatus('current')
msdpSACacheExpiryTime = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msdpSACacheExpiryTime.setStatus('current')
msdpSACacheStatus = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 6, 1, 10), RowStatus().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6))).clone(namedValues=NamedValues(("active", 1), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msdpSACacheStatus.setStatus('current')
msdpMeshGroupTable = MibTable((1, 3, 6, 1, 3, 92, 1, 1, 12), )
if mibBuilder.loadTexts: msdpMeshGroupTable.setStatus('current')
msdpMeshGroupEntry = MibTableRow((1, 3, 6, 1, 3, 92, 1, 1, 12, 1), ).setIndexNames((0, "MSDP-MIB", "msdpMeshGroupName"), (0, "MSDP-MIB", "msdpMeshGroupPeerAddress"))
if mibBuilder.loadTexts: msdpMeshGroupEntry.setStatus('current')
msdpMeshGroupName = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: msdpMeshGroupName.setStatus('current')
msdpMeshGroupPeerAddress = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 12, 1, 2), IpAddress())
if mibBuilder.loadTexts: msdpMeshGroupPeerAddress.setStatus('current')
msdpMeshGroupStatus = MibTableColumn((1, 3, 6, 1, 3, 92, 1, 1, 12, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: msdpMeshGroupStatus.setStatus('current')
msdpTraps = MibIdentifier((1, 3, 6, 1, 3, 92, 1, 1, 0))
msdpEstablished = NotificationType((1, 3, 6, 1, 3, 92, 1, 1, 0, 1)).setObjects(("MSDP-MIB", "msdpPeerFsmEstablishedTransitions"))
if mibBuilder.loadTexts: msdpEstablished.setStatus('current')
msdpBackwardTransition = NotificationType((1, 3, 6, 1, 3, 92, 1, 1, 0, 2)).setObjects(("MSDP-MIB", "msdpPeerState"))
if mibBuilder.loadTexts: msdpBackwardTransition.setStatus('current')
msdpMIBConformance = MibIdentifier((1, 3, 6, 1, 3, 92, 1, 1, 8))
msdpMIBCompliances = MibIdentifier((1, 3, 6, 1, 3, 92, 1, 1, 8, 1))
msdpMIBGroups = MibIdentifier((1, 3, 6, 1, 3, 92, 1, 1, 8, 2))
msdpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 3, 92, 1, 1, 8, 1, 1)).setObjects(("MSDP-MIB", "msdpMIBGlobalsGroup"), ("MSDP-MIB", "msdpMIBPeerGroup"), ("MSDP-MIB", "msdpMIBNotificationGroup"), ("MSDP-MIB", "msdpMIBEncapsulationGroup"), ("MSDP-MIB", "msdpMIBSACacheGroup"), ("MSDP-MIB", "msdpMIBRequestsGroup"), ("MSDP-MIB", "msdpMIBRPGroup"), ("MSDP-MIB", "msdpMIBMeshGroupGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBCompliance = msdpMIBCompliance.setStatus('deprecated')
msdpMIBFullCompliance = ModuleCompliance((1, 3, 6, 1, 3, 92, 1, 1, 8, 1, 2)).setObjects(("MSDP-MIB", "msdpMIBGlobalsGroup"), ("MSDP-MIB", "msdpMIBPeerGroup2"), ("MSDP-MIB", "msdpMIBSACacheGroup"), ("MSDP-MIB", "msdpMIBEncapsulationGroup"), ("MSDP-MIB", "msdpMIBRPGroup"), ("MSDP-MIB", "msdpMIBMeshGroupGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBFullCompliance = msdpMIBFullCompliance.setStatus('current')
msdpMIBReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 3, 92, 1, 1, 8, 1, 3)).setObjects(("MSDP-MIB", "msdpMIBGlobalsGroup"), ("MSDP-MIB", "msdpMIBPeerGroup2"), ("MSDP-MIB", "msdpMIBSACacheGroup"), ("MSDP-MIB", "msdpMIBEncapsulationGroup"), ("MSDP-MIB", "msdpMIBRPGroup"), ("MSDP-MIB", "msdpMIBMeshGroupGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBReadOnlyCompliance = msdpMIBReadOnlyCompliance.setStatus('current')
msdpMIBGlobalsGroup = ObjectGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 1)).setObjects(("MSDP-MIB", "msdpEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBGlobalsGroup = msdpMIBGlobalsGroup.setStatus('current')
msdpMIBPeerGroup = ObjectGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 2)).setObjects(("MSDP-MIB", "msdpPeerRPFFailures"), ("MSDP-MIB", "msdpPeerState"), ("MSDP-MIB", "msdpPeerInSAs"), ("MSDP-MIB", "msdpPeerOutSAs"), ("MSDP-MIB", "msdpPeerInSARequests"), ("MSDP-MIB", "msdpPeerOutSARequests"), ("MSDP-MIB", "msdpPeerInSAResponses"), ("MSDP-MIB", "msdpPeerOutSAResponses"), ("MSDP-MIB", "msdpPeerInNotifications"), ("MSDP-MIB", "msdpPeerOutNotifications"), ("MSDP-MIB", "msdpPeerInControlMessages"), ("MSDP-MIB", "msdpPeerOutControlMessages"), ("MSDP-MIB", "msdpPeerFsmEstablishedTransitions"), ("MSDP-MIB", "msdpPeerFsmEstablishedTime"), ("MSDP-MIB", "msdpPeerLocalAddress"), ("MSDP-MIB", "msdpPeerRemotePort"), ("MSDP-MIB", "msdpPeerLocalPort"), ("MSDP-MIB", "msdpPeerConnectRetryInterval"), ("MSDP-MIB", "msdpPeerHoldTimeConfigured"), ("MSDP-MIB", "msdpPeerKeepAliveConfigured"), ("MSDP-MIB", "msdpPeerInMessageTime"), ("MSDP-MIB", "msdpPeerProcessRequestsFrom"), ("MSDP-MIB", "msdpPeerConnectionAttempts"), ("MSDP-MIB", "msdpPeerLastError"), ("MSDP-MIB", "msdpPeerStatus"), ("MSDP-MIB", "msdpPeerDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBPeerGroup = msdpMIBPeerGroup.setStatus('deprecated')
msdpMIBEncapsulationGroup = ObjectGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 3)).setObjects(("MSDP-MIB", "msdpPeerInDataPackets"), ("MSDP-MIB", "msdpPeerOutDataPackets"), ("MSDP-MIB", "msdpPeerDataTtl"), ("MSDP-MIB", "msdpPeerEncapsulationType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBEncapsulationGroup = msdpMIBEncapsulationGroup.setStatus('current')
msdpMIBSACacheGroup = ObjectGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 4)).setObjects(("MSDP-MIB", "msdpCacheLifetime"), ("MSDP-MIB", "msdpNumSACacheEntries"), ("MSDP-MIB", "msdpSACachePeerLearnedFrom"), ("MSDP-MIB", "msdpSACacheRPFPeer"), ("MSDP-MIB", "msdpSACacheInSAs"), ("MSDP-MIB", "msdpSACacheInDataPackets"), ("MSDP-MIB", "msdpSACacheUpTime"), ("MSDP-MIB", "msdpSACacheExpiryTime"), ("MSDP-MIB", "msdpSACacheStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBSACacheGroup = msdpMIBSACacheGroup.setStatus('current')
msdpMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 5)).setObjects(("MSDP-MIB", "msdpEstablished"), ("MSDP-MIB", "msdpBackwardTransition"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBNotificationGroup = msdpMIBNotificationGroup.setStatus('current')
msdpMIBRequestsGroup = ObjectGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 6)).setObjects(("MSDP-MIB", "msdpRequestsPeer"), ("MSDP-MIB", "msdpRequestsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBRequestsGroup = msdpMIBRequestsGroup.setStatus('deprecated')
msdpMIBRPGroup = ObjectGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 7)).setObjects(("MSDP-MIB", "msdpRPAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBRPGroup = msdpMIBRPGroup.setStatus('current')
msdpMIBMeshGroupGroup = ObjectGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 8)).setObjects(("MSDP-MIB", "msdpMeshGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBMeshGroupGroup = msdpMIBMeshGroupGroup.setStatus('current')
msdpMIBPeerGroup2 = ObjectGroup((1, 3, 6, 1, 3, 92, 1, 1, 8, 2, 9)).setObjects(("MSDP-MIB", "msdpPeerRPFFailures"), ("MSDP-MIB", "msdpPeerState"), ("MSDP-MIB", "msdpPeerInSAs"), ("MSDP-MIB", "msdpPeerOutSAs"), ("MSDP-MIB", "msdpPeerInSARequests"), ("MSDP-MIB", "msdpPeerOutSARequests"), ("MSDP-MIB", "msdpPeerInControlMessages"), ("MSDP-MIB", "msdpPeerOutControlMessages"), ("MSDP-MIB", "msdpPeerFsmEstablishedTransitions"), ("MSDP-MIB", "msdpPeerFsmEstablishedTime"), ("MSDP-MIB", "msdpPeerLocalAddress"), ("MSDP-MIB", "msdpPeerRemotePort"), ("MSDP-MIB", "msdpPeerLocalPort"), ("MSDP-MIB", "msdpPeerConnectRetryInterval"), ("MSDP-MIB", "msdpPeerHoldTimeConfigured"), ("MSDP-MIB", "msdpPeerKeepAliveConfigured"), ("MSDP-MIB", "msdpPeerInMessageTime"), ("MSDP-MIB", "msdpPeerConnectionAttempts"), ("MSDP-MIB", "msdpPeerStatus"), ("MSDP-MIB", "msdpPeerDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msdpMIBPeerGroup2 = msdpMIBPeerGroup2.setStatus('current')
mibBuilder.exportSymbols("MSDP-MIB", msdpPeerStatus=msdpPeerStatus, msdpPeerDiscontinuityTime=msdpPeerDiscontinuityTime, msdpSACacheRPFPeer=msdpSACacheRPFPeer, msdpSACacheStatus=msdpSACacheStatus, msdpSACacheEntry=msdpSACacheEntry, msdpMeshGroupName=msdpMeshGroupName, msdpPeerOutDataPackets=msdpPeerOutDataPackets, msdpPeerTable=msdpPeerTable, msdpPeerInMessageTime=msdpPeerInMessageTime, msdpMIBCompliances=msdpMIBCompliances, msdpSACacheTable=msdpSACacheTable, msdpMIBFullCompliance=msdpMIBFullCompliance, msdpMIBConformance=msdpMIBConformance, msdpPeerConnectionAttempts=msdpPeerConnectionAttempts, msdpMIBobjects=msdpMIBobjects, msdpPeerEntry=msdpPeerEntry, msdpPeerRemoteAddress=msdpPeerRemoteAddress, msdpSACacheSourceAddr=msdpSACacheSourceAddr, msdpPeerConnectRetryInterval=msdpPeerConnectRetryInterval, msdpMeshGroupTable=msdpMeshGroupTable, msdpRequestsStatus=msdpRequestsStatus, msdpPeerHoldTimeConfigured=msdpPeerHoldTimeConfigured, msdpPeerInSAs=msdpPeerInSAs, msdpPeerLocalAddress=msdpPeerLocalAddress, msdpPeerDataTtl=msdpPeerDataTtl, msdpSACacheExpiryTime=msdpSACacheExpiryTime, msdpBackwardTransition=msdpBackwardTransition, msdpRequestsTable=msdpRequestsTable, msdpRequestsEntry=msdpRequestsEntry, msdpPeerOutNotifications=msdpPeerOutNotifications, msdpMIBNotificationGroup=msdpMIBNotificationGroup, msdpPeerRemotePort=msdpPeerRemotePort, msdpPeerKeepAliveConfigured=msdpPeerKeepAliveConfigured, msdpEnabled=msdpEnabled, msdpPeerFsmEstablishedTime=msdpPeerFsmEstablishedTime, msdpPeerProcessRequestsFrom=msdpPeerProcessRequestsFrom, msdpPeerFsmEstablishedTransitions=msdpPeerFsmEstablishedTransitions, msdpPeerInDataPackets=msdpPeerInDataPackets, msdpPeerInControlMessages=msdpPeerInControlMessages, msdpPeerInNotifications=msdpPeerInNotifications, msdpMIBRPGroup=msdpMIBRPGroup, msdpMIBMeshGroupGroup=msdpMIBMeshGroupGroup, msdpMIBSACacheGroup=msdpMIBSACacheGroup, msdpPeerLocalPort=msdpPeerLocalPort, msdpCacheLifetime=msdpCacheLifetime, msdpPeerOutSAs=msdpPeerOutSAs, msdpRequestsGroupAddress=msdpRequestsGroupAddress, msdpMIBRequestsGroup=msdpMIBRequestsGroup, msdpSACachePeerLearnedFrom=msdpSACachePeerLearnedFrom, msdpRequestsPeer=msdpRequestsPeer, msdpMeshGroupPeerAddress=msdpMeshGroupPeerAddress, msdpPeerLastError=msdpPeerLastError, PYSNMP_MODULE_ID=msdpMIB, msdpTraps=msdpTraps, msdpSACacheInSAs=msdpSACacheInSAs, msdpPeerState=msdpPeerState, msdpMIBPeerGroup2=msdpMIBPeerGroup2, msdpPeerOutSARequests=msdpPeerOutSARequests, msdpPeerEncapsulationType=msdpPeerEncapsulationType, msdpMeshGroupStatus=msdpMeshGroupStatus, msdpSACacheGroupAddr=msdpSACacheGroupAddr, msdpPeerInSARequests=msdpPeerInSARequests, msdpMIBEncapsulationGroup=msdpMIBEncapsulationGroup, msdpSACacheInDataPackets=msdpSACacheInDataPackets, msdp=msdp, msdpMIBReadOnlyCompliance=msdpMIBReadOnlyCompliance, msdpMeshGroupEntry=msdpMeshGroupEntry, msdpPeerOutControlMessages=msdpPeerOutControlMessages, msdpNumSACacheEntries=msdpNumSACacheEntries, msdpPeerInSAResponses=msdpPeerInSAResponses, msdpEstablished=msdpEstablished, msdpPeerRPFFailures=msdpPeerRPFFailures, msdpSACacheUpTime=msdpSACacheUpTime, msdpMIBGroups=msdpMIBGroups, msdpMIBPeerGroup=msdpMIBPeerGroup, msdpMIB=msdpMIB, msdpMIBGlobalsGroup=msdpMIBGlobalsGroup, msdpPeerOutSAResponses=msdpPeerOutSAResponses, msdpRequestsGroupMask=msdpRequestsGroupMask, msdpSACacheOriginRP=msdpSACacheOriginRP, msdpRPAddress=msdpRPAddress, msdpMIBCompliance=msdpMIBCompliance)
