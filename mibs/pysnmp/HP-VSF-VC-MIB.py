#
# PySNMP MIB module HP-VSF-VC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-VSF-VC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:24:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
hpSwitchBaseMACAddress, = mibBuilder.importSymbols("NETSWITCH-MIB", "hpSwitchBaseMACAddress")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, TimeTicks, IpAddress, MibIdentifier, Counter64, ModuleIdentity, Unsigned32, Gauge32, Bits, Counter32, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "TimeTicks", "IpAddress", "MibIdentifier", "Counter64", "ModuleIdentity", "Unsigned32", "Gauge32", "Bits", "Counter32", "NotificationType", "iso")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
hpicfVsfVCMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116))
hpicfVsfVCMIB.setRevisions(('2016-06-22 00:00', '2016-05-09 00:00', '2015-03-04 00:00',))
if mibBuilder.loadTexts: hpicfVsfVCMIB.setLastUpdated('201606220000Z')
if mibBuilder.loadTexts: hpicfVsfVCMIB.setOrganization('HP Networking')
hpicfVsfVCNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 0))
hpicfVsfVCObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1))
hpicfVsfVCConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1))
hpicfVsfVCStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2))
hpicfVsfVCDomainId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCDomainId.setStatus('current')
hpicfVsfVCOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unAvailable", 0), ("disabled", 1), ("active", 2), ("fragmentInactive", 3), ("fragmentActive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCOperStatus.setStatus('current')
hpicfVsfVCAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCAdminStatus.setStatus('current')
hpicfVsfVCTopology = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("chain", 1), ("ring", 2), ("mesh", 3), ("partialMesh", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCTopology.setStatus('current')
hpicfVsfVCTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCTrapEnable.setStatus('current')
hpicfVsfVCOobmMADEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCOobmMADEnable.setStatus('current')
hpicfVsfLldpMADEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfLldpMADEnable.setStatus('current')
hpicfVsfVCLldpMADDeviceIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADDeviceIpType.setStatus('current')
hpicfVsfVCLldpMADDeviceIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADDeviceIpAddr.setStatus('current')
hpicfVsfVCLldpMADSnmpVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("v2c", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADSnmpVersion.setStatus('current')
hpicfVsfVCLldpMADSnmpCommunity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADSnmpCommunity.setStatus('current')
hpicfVsfMADVlan = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfMADVlan.setStatus('current')
hpicfVsfMADVlanConnectivity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("full", 2), ("partial", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfMADVlanConnectivity.setStatus('current')
hpicfVsfVCPortSpeed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("oneGbps", 1), ("tenGbps", 2), ("fortyGbps", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCPortSpeed.setStatus('current')
hpicfVsfVCLldpMADReadinessStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADReadinessStatus.setStatus('current')
hpicfVsfVCLldpMADDeviceMAC = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 2), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADDeviceMAC.setStatus('current')
hpicfVsfVCLldpMADVlanId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADVlanId.setStatus('current')
hpicfVsfVCLldpMADTrunkIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADTrunkIfIndex.setStatus('current')
hpicfVsfVCLldpMADProbePortSet = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADProbePortSet.setStatus('current')
hpicfVsfVCLldpMADConnectivity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("full", 2), ("partial", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADConnectivity.setStatus('current')
hpicfVsfVCLldpMADSplitStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADSplitStatus.setStatus('current')
hpicfVsfVCLldpMADProbeOriginator = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADProbeOriginator.setStatus('current')
hpicfVsfVCLldpMADProbeRequestsSent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADProbeRequestsSent.setStatus('current')
hpicfVsfVCLldpMADProbeResponseRcvd = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADProbeResponseRcvd.setStatus('current')
hpicfVsfVCLldpMADActiveFragment = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLldpMADActiveFragment.setStatus('current')
hpicfVsfVCMemberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3), )
if mibBuilder.loadTexts: hpicfVsfVCMemberTable.setStatus('current')
hpicfVsfVCMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1), ).setIndexNames((0, "HP-VSF-VC-MIB", "hpicfVsfVCMemberId"))
if mibBuilder.loadTexts: hpicfVsfVCMemberEntry.setStatus('current')
hpicfVsfVCMemberId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfVsfVCMemberId.setStatus('current')
hpicfVsfVCMemberProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfVsfVCMemberProductId.setStatus('current')
hpicfVsfVCMemberMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfVsfVCMemberMacAddr.setStatus('current')
hpicfVsfVCMemberShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfVsfVCMemberShutdown.setStatus('current')
hpicfVsfVCMemberReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfVsfVCMemberReboot.setStatus('current')
hpicfVsfVCMemberAdminPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfVsfVCMemberAdminPriority.setStatus('current')
hpicfVsfVCMemberEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfVsfVCMemberEntryStatus.setStatus('current')
hpicfVsfVCMemberEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 8), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberEntPhysicalIndex.setStatus('current')
hpicfVsfVCMemberState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unusedId", 0), ("missing", 1), ("provision", 2), ("commander", 3), ("standby", 4), ("member", 5), ("shutdown", 6), ("booting", 7), ("communicationFailure", 8), ("incompatibleOS", 9), ("unknownState", 10), ("standbyBooting", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberState.setStatus('current')
hpicfVsfVCMemberProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberProductName.setStatus('current')
hpicfVsfVCMemberUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberUpTime.setStatus('current')
hpicfVsfVCMemberSysOid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 12), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberSysOid.setStatus('current')
hpicfVsfVCMemberIdForTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 13), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfVsfVCMemberIdForTrap.setStatus('current')
hpicfVsfVCMemberSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberSerialNum.setStatus('current')
hpicfVsfVCMemberBootRomVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberBootRomVersion.setStatus('current')
hpicfVsfVCMemberOsVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberOsVersion.setStatus('current')
hpicfVsfVCMemberBootImage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberBootImage.setStatus('current')
hpicfVsfVCMemberRenumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCMemberRenumber.setStatus('current')
hpicfVsfVCMemberCpuUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberCpuUtil.setStatus('current')
hpicfVsfVCMemberTotalMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberTotalMemory.setStatus('current')
hpicfVsfVCMemberFreeMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCMemberFreeMemory.setStatus('current')
hpicfVsfVCLinkTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4), )
if mibBuilder.loadTexts: hpicfVsfVCLinkTable.setStatus('current')
hpicfVsfVCLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1), ).setIndexNames((0, "HP-VSF-VC-MIB", "hpicfVsfVCLinkMemberId"), (0, "HP-VSF-VC-MIB", "hpicfVsfVCLinkId"))
if mibBuilder.loadTexts: hpicfVsfVCLinkEntry.setStatus('current')
hpicfVsfVCLinkMemberId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfVsfVCLinkMemberId.setStatus('current')
hpicfVsfVCLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: hpicfVsfVCLinkId.setStatus('current')
hpicfVsfVCLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCLinkName.setStatus('current')
hpicfVsfVCLinkOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCLinkOperStatus.setStatus('current')
hpicfVsfVCPeerMemberId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCPeerMemberId.setStatus('current')
hpicfVsfVCPeerLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCPeerLinkId.setStatus('current')
hpicfVsfVCLinkPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 7), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfVsfVCLinkPortList.setStatus('current')
hpicfVsfVCLinkEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfVsfVCLinkEntryStatus.setStatus('current')
hpicfVsfVCLinkIdForTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 9), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfVsfVCLinkIdForTrap.setStatus('current')
hpicfVsfVCLinkPortStartState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfVsfVCLinkPortStartState.setStatus('current')
hpicfVsfVCPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 5), )
if mibBuilder.loadTexts: hpicfVsfVCPortTable.setStatus('current')
hpicfVsfVCPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfVsfVCPortEntry.setStatus('current')
hpicfVsfVCPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("error", 3), ("disabled", 4), ("provisioned", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCPortOperStatus.setStatus('current')
hpicfVsfVCPortOperStatusErrorStr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 1, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVsfVCPortOperStatusErrorStr.setStatus('current')
hpicfVsfVCCommanderChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 0, 2)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCMemberIdForTrap"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberState"))
if mibBuilder.loadTexts: hpicfVsfVCCommanderChange.setStatus('current')
hpicfVsfVCMemberChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 0, 3)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCMemberIdForTrap"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberState"))
if mibBuilder.loadTexts: hpicfVsfVCMemberChange.setStatus('current')
hpicfVsfVCMemberStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 0, 4)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCMemberIdForTrap"), ("NETSWITCH-MIB", "hpSwitchBaseMACAddress"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberState"))
if mibBuilder.loadTexts: hpicfVsfVCMemberStatusChange.setStatus('current')
hpicfVsfVCConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2))
hpicfVsfVCCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 1))
hpicfVsfVCGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 2))
hpicfVsfVCConfigScalarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 2, 1)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCDomainId"), ("HP-VSF-VC-MIB", "hpicfVsfVCOperStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCAdminStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCTopology"), ("HP-VSF-VC-MIB", "hpicfVsfVCTrapEnable"), ("HP-VSF-VC-MIB", "hpicfVsfLldpMADEnable"), ("HP-VSF-VC-MIB", "hpicfVsfVCOobmMADEnable"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADDeviceIpType"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADDeviceIpAddr"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADSnmpVersion"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADSnmpCommunity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCConfigScalarGroup = hpicfVsfVCConfigScalarGroup.setStatus('deprecated')
hpicfVsfVCMemberTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 2, 2)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCMemberProductId"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberMacAddr"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberShutdown"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberReboot"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberAdminPriority"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberEntryStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberEntPhysicalIndex"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberState"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberProductName"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberUpTime"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberSysOid"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberIdForTrap"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberSerialNum"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberBootRomVersion"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberOsVersion"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberBootImage"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberRenumber"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberCpuUtil"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberTotalMemory"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberFreeMemory"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCMemberTableGroup = hpicfVsfVCMemberTableGroup.setStatus('current')
hpicfVsfVCLinkTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 2, 3)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCLinkName"), ("HP-VSF-VC-MIB", "hpicfVsfVCLinkOperStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCPeerMemberId"), ("HP-VSF-VC-MIB", "hpicfVsfVCPeerLinkId"), ("HP-VSF-VC-MIB", "hpicfVsfVCLinkPortList"), ("HP-VSF-VC-MIB", "hpicfVsfVCLinkEntryStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCLinkIdForTrap"), ("HP-VSF-VC-MIB", "hpicfVsfVCLinkPortStartState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCLinkTableGroup = hpicfVsfVCLinkTableGroup.setStatus('current')
hpicfVsfVCNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 2, 4)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCCommanderChange"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberChange"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCNotificationsGroup = hpicfVsfVCNotificationsGroup.setStatus('current')
hpicfVsfVCStatusScalarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 2, 5)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADReadinessStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADDeviceMAC"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADVlanId"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADTrunkIfIndex"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADProbePortSet"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADConnectivity"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADSplitStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADProbeOriginator"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADProbeRequestsSent"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADProbeResponseRcvd"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADActiveFragment"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCStatusScalarGroup = hpicfVsfVCStatusScalarGroup.setStatus('current')
hpicfVsfVCPortTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 2, 6)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCPortOperStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCPortOperStatusErrorStr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCPortTableGroup = hpicfVsfVCPortTableGroup.setStatus('current')
hpicfVsfVCConfigScalarGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 2, 7)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCDomainId"), ("HP-VSF-VC-MIB", "hpicfVsfVCOperStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCAdminStatus"), ("HP-VSF-VC-MIB", "hpicfVsfVCTopology"), ("HP-VSF-VC-MIB", "hpicfVsfVCTrapEnable"), ("HP-VSF-VC-MIB", "hpicfVsfLldpMADEnable"), ("HP-VSF-VC-MIB", "hpicfVsfVCOobmMADEnable"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADDeviceIpType"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADDeviceIpAddr"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADSnmpVersion"), ("HP-VSF-VC-MIB", "hpicfVsfVCLldpMADSnmpCommunity"), ("HP-VSF-VC-MIB", "hpicfVsfMADVlan"), ("HP-VSF-VC-MIB", "hpicfVsfMADVlanConnectivity"), ("HP-VSF-VC-MIB", "hpicfVsfVCPortSpeed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCConfigScalarGroup1 = hpicfVsfVCConfigScalarGroup1.setStatus('current')
hpicfVsfVCMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 1, 1)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCConfigScalarGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberTableGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCLinkTableGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCNotificationsGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCStatusScalarGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCPortTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCMibCompliance = hpicfVsfVCMibCompliance.setStatus('deprecated')
hpicfVsfVCMibCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116, 2, 1, 2)).setObjects(("HP-VSF-VC-MIB", "hpicfVsfVCConfigScalarGroup1"), ("HP-VSF-VC-MIB", "hpicfVsfVCMemberTableGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCLinkTableGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCNotificationsGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCStatusScalarGroup"), ("HP-VSF-VC-MIB", "hpicfVsfVCPortTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfVsfVCMibCompliance1 = hpicfVsfVCMibCompliance1.setStatus('current')
mibBuilder.exportSymbols("HP-VSF-VC-MIB", hpicfVsfVCGroups=hpicfVsfVCGroups, hpicfVsfVCPortTableGroup=hpicfVsfVCPortTableGroup, hpicfVsfVCMemberSerialNum=hpicfVsfVCMemberSerialNum, hpicfVsfVCLldpMADSplitStatus=hpicfVsfVCLldpMADSplitStatus, hpicfVsfVCLinkId=hpicfVsfVCLinkId, hpicfVsfVCMemberMacAddr=hpicfVsfVCMemberMacAddr, hpicfVsfVCMemberId=hpicfVsfVCMemberId, hpicfVsfVCMemberProductId=hpicfVsfVCMemberProductId, hpicfVsfVCMemberFreeMemory=hpicfVsfVCMemberFreeMemory, hpicfVsfVCLldpMADTrunkIfIndex=hpicfVsfVCLldpMADTrunkIfIndex, hpicfVsfVCLinkName=hpicfVsfVCLinkName, hpicfVsfVCLldpMADActiveFragment=hpicfVsfVCLldpMADActiveFragment, hpicfVsfVCMemberEntPhysicalIndex=hpicfVsfVCMemberEntPhysicalIndex, hpicfVsfVCMemberState=hpicfVsfVCMemberState, hpicfVsfVCMemberRenumber=hpicfVsfVCMemberRenumber, hpicfVsfVCPortOperStatus=hpicfVsfVCPortOperStatus, hpicfVsfVCMemberReboot=hpicfVsfVCMemberReboot, hpicfVsfVCLinkTable=hpicfVsfVCLinkTable, hpicfVsfLldpMADEnable=hpicfVsfLldpMADEnable, hpicfVsfVCMemberCpuUtil=hpicfVsfVCMemberCpuUtil, hpicfVsfVCConfig=hpicfVsfVCConfig, hpicfVsfVCMemberUpTime=hpicfVsfVCMemberUpTime, hpicfVsfVCLldpMADConnectivity=hpicfVsfVCLldpMADConnectivity, hpicfVsfVCLinkOperStatus=hpicfVsfVCLinkOperStatus, hpicfVsfVCStatusScalarGroup=hpicfVsfVCStatusScalarGroup, hpicfVsfVCPeerLinkId=hpicfVsfVCPeerLinkId, hpicfVsfVCMemberTableGroup=hpicfVsfVCMemberTableGroup, hpicfVsfVCLldpMADProbeOriginator=hpicfVsfVCLldpMADProbeOriginator, hpicfVsfVCMibCompliance1=hpicfVsfVCMibCompliance1, hpicfVsfVCPortOperStatusErrorStr=hpicfVsfVCPortOperStatusErrorStr, hpicfVsfVCPeerMemberId=hpicfVsfVCPeerMemberId, hpicfVsfMADVlanConnectivity=hpicfVsfMADVlanConnectivity, hpicfVsfVCLinkEntryStatus=hpicfVsfVCLinkEntryStatus, hpicfVsfVCMemberSysOid=hpicfVsfVCMemberSysOid, hpicfVsfVCMemberEntry=hpicfVsfVCMemberEntry, hpicfVsfVCConfigScalarGroup1=hpicfVsfVCConfigScalarGroup1, hpicfVsfVCPortSpeed=hpicfVsfVCPortSpeed, hpicfVsfVCLldpMADDeviceIpType=hpicfVsfVCLldpMADDeviceIpType, hpicfVsfVCLldpMADDeviceIpAddr=hpicfVsfVCLldpMADDeviceIpAddr, hpicfVsfVCMemberProductName=hpicfVsfVCMemberProductName, hpicfVsfVCLinkEntry=hpicfVsfVCLinkEntry, hpicfVsfVCMIB=hpicfVsfVCMIB, hpicfVsfVCLinkIdForTrap=hpicfVsfVCLinkIdForTrap, hpicfVsfVCMemberShutdown=hpicfVsfVCMemberShutdown, hpicfVsfVCLinkTableGroup=hpicfVsfVCLinkTableGroup, hpicfVsfVCAdminStatus=hpicfVsfVCAdminStatus, hpicfVsfVCLinkPortList=hpicfVsfVCLinkPortList, hpicfVsfVCLldpMADDeviceMAC=hpicfVsfVCLldpMADDeviceMAC, hpicfVsfVCMemberBootImage=hpicfVsfVCMemberBootImage, hpicfVsfVCTrapEnable=hpicfVsfVCTrapEnable, hpicfVsfVCLldpMADVlanId=hpicfVsfVCLldpMADVlanId, hpicfVsfVCMemberTable=hpicfVsfVCMemberTable, hpicfVsfVCConformance=hpicfVsfVCConformance, hpicfVsfVCMemberOsVersion=hpicfVsfVCMemberOsVersion, hpicfVsfVCOobmMADEnable=hpicfVsfVCOobmMADEnable, hpicfVsfVCLldpMADProbeResponseRcvd=hpicfVsfVCLldpMADProbeResponseRcvd, hpicfVsfVCDomainId=hpicfVsfVCDomainId, hpicfVsfVCNotifications=hpicfVsfVCNotifications, hpicfVsfVCOperStatus=hpicfVsfVCOperStatus, hpicfVsfVCMemberAdminPriority=hpicfVsfVCMemberAdminPriority, hpicfVsfVCMibCompliance=hpicfVsfVCMibCompliance, hpicfVsfVCLldpMADSnmpCommunity=hpicfVsfVCLldpMADSnmpCommunity, hpicfVsfVCCommanderChange=hpicfVsfVCCommanderChange, hpicfVsfVCMemberBootRomVersion=hpicfVsfVCMemberBootRomVersion, hpicfVsfVCMemberEntryStatus=hpicfVsfVCMemberEntryStatus, hpicfVsfVCLinkPortStartState=hpicfVsfVCLinkPortStartState, hpicfVsfVCConfigScalarGroup=hpicfVsfVCConfigScalarGroup, hpicfVsfVCLldpMADReadinessStatus=hpicfVsfVCLldpMADReadinessStatus, hpicfVsfVCLinkMemberId=hpicfVsfVCLinkMemberId, hpicfVsfVCTopology=hpicfVsfVCTopology, hpicfVsfVCStatus=hpicfVsfVCStatus, hpicfVsfVCCompliances=hpicfVsfVCCompliances, hpicfVsfVCMemberChange=hpicfVsfVCMemberChange, hpicfVsfVCLldpMADSnmpVersion=hpicfVsfVCLldpMADSnmpVersion, hpicfVsfVCMemberTotalMemory=hpicfVsfVCMemberTotalMemory, hpicfVsfMADVlan=hpicfVsfMADVlan, PYSNMP_MODULE_ID=hpicfVsfVCMIB, hpicfVsfVCMemberStatusChange=hpicfVsfVCMemberStatusChange, hpicfVsfVCMemberIdForTrap=hpicfVsfVCMemberIdForTrap, hpicfVsfVCLldpMADProbeRequestsSent=hpicfVsfVCLldpMADProbeRequestsSent, hpicfVsfVCPortEntry=hpicfVsfVCPortEntry, hpicfVsfVCObjects=hpicfVsfVCObjects, hpicfVsfVCNotificationsGroup=hpicfVsfVCNotificationsGroup, hpicfVsfVCLldpMADProbePortSet=hpicfVsfVCLldpMADProbePortSet, hpicfVsfVCPortTable=hpicfVsfVCPortTable)
