#
# PySNMP MIB module ZHONE-COM-IP-STATIC-ROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-COM-IP-STATIC-ROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:40:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, TimeTicks, Counter32, Gauge32, Unsigned32, iso, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "TimeTicks", "Counter32", "Gauge32", "Unsigned32", "iso", "NotificationType", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rdIndex, = mibBuilder.importSymbols("ZHONE-COM-IP-RD-MIB", "rdIndex")
zhoneModules, zhoneIp = mibBuilder.importSymbols("Zhone", "zhoneModules", "zhoneIp")
ZhoneRowStatus, = mibBuilder.importSymbols("Zhone-TC", "ZhoneRowStatus")
comIpStaticRoute = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 63))
comIpStaticRoute.setRevisions(('2006-07-14 15:50', '2005-04-29 14:10', '2000-09-12 10:23', '2000-09-29 16:34',))
if mibBuilder.loadTexts: comIpStaticRoute.setLastUpdated('200607141700Z')
if mibBuilder.loadTexts: comIpStaticRoute.setOrganization('Zhone Technologies, Inc.')
staticRoute = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13))
if mibBuilder.loadTexts: staticRoute.setStatus('current')
staticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1), )
if mibBuilder.loadTexts: staticRouteTable.setStatus('current')
staticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1), ).setIndexNames((0, "ZHONE-COM-IP-RD-MIB", "rdIndex"), (0, "ZHONE-COM-IP-STATIC-ROUTE-MIB", "staticRouteDest"), (0, "ZHONE-COM-IP-STATIC-ROUTE-MIB", "staticRouteNetMask"), (0, "ZHONE-COM-IP-STATIC-ROUTE-MIB", "staticRouteNextHop"), (0, "ZHONE-COM-IP-STATIC-ROUTE-MIB", "staticRouteIfNumber"), (0, "ZHONE-COM-IP-STATIC-ROUTE-MIB", "staticRouteType"))
if mibBuilder.loadTexts: staticRouteEntry.setStatus('current')
staticRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: staticRouteDest.setStatus('current')
staticRouteNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: staticRouteNetMask.setStatus('current')
staticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: staticRouteNextHop.setStatus('current')
staticRouteIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 4), InterfaceIndexOrZero())
if mibBuilder.loadTexts: staticRouteIfNumber.setStatus('current')
staticRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 5), Unsigned32().clone(2147483647)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticRouteMetric.setStatus('current')
staticRouteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticRouteEnable.setStatus('current')
staticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 7), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticRouteRowStatus.setStatus('current')
staticRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("destinationRoute", 1), ("sourceRoute", 2))))
if mibBuilder.loadTexts: staticRouteType.setStatus('current')
staticRouteFallbackMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 9), Integer32().clone(0)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticRouteFallbackMetric.setStatus('current')
staticRoutePingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticRoutePingInterval.setStatus('current')
staticRoutePingFailMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 13, 1, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: staticRoutePingFailMax.setStatus('current')
mibBuilder.exportSymbols("ZHONE-COM-IP-STATIC-ROUTE-MIB", staticRouteTable=staticRouteTable, PYSNMP_MODULE_ID=comIpStaticRoute, staticRouteDest=staticRouteDest, staticRouteRowStatus=staticRouteRowStatus, staticRouteEnable=staticRouteEnable, staticRouteFallbackMetric=staticRouteFallbackMetric, staticRouteMetric=staticRouteMetric, staticRoutePingInterval=staticRoutePingInterval, staticRouteIfNumber=staticRouteIfNumber, staticRoutePingFailMax=staticRoutePingFailMax, staticRouteEntry=staticRouteEntry, staticRouteType=staticRouteType, staticRouteNetMask=staticRouteNetMask, staticRoute=staticRoute, staticRouteNextHop=staticRouteNextHop, comIpStaticRoute=comIpStaticRoute)
