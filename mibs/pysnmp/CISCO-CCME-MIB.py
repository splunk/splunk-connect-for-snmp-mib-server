#
# PySNMP MIB module CISCO-CCME-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CCME-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:35:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, Bits, TimeTicks, MibIdentifier, ModuleIdentity, IpAddress, NotificationType, Counter32, iso, Integer32, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "Bits", "TimeTicks", "MibIdentifier", "ModuleIdentity", "IpAddress", "NotificationType", "Counter32", "iso", "Integer32", "Counter64", "Gauge32")
DisplayString, TextualConvention, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "MacAddress")
ciscoCcmeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 439))
ciscoCcmeMIB.setRevisions(('2010-10-13 00:00', '2010-04-01 00:00', '2005-05-31 00:00',))
if mibBuilder.loadTexts: ciscoCcmeMIB.setLastUpdated('201010130000Z')
if mibBuilder.loadTexts: ciscoCcmeMIB.setOrganization('Cisco Systems, Inc.')
ciscoCcmeMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 0))
ciscoCcmeMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 1))
ciscoCcmeMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 2))
ccmeConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1))
ccmeActiveStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2))
ccmeHistoryStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3))
class CcmeDigitPatternString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(32, 32), )
class CcmeNightServiceCodeString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), )
ccmeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEnabled.setStatus('current')
ccmeVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeVersion.setStatus('current')
ccmeIPAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeIPAddressType.setStatus('current')
ccmeIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeIPAddress.setStatus('current')
ccmePortNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 5), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(2000, 9999)).clone(2000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmePortNumber.setStatus('current')
ccmeMaxEphones = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMaxEphones.setStatus('current')
ccmeMaxDirectoryNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 288))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMaxDirectoryNumber.setStatus('current')
ccmeMaxConferences = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMaxConferences.setStatus('current')
ccmeMaxRedirect = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMaxRedirect.setStatus('current')
ccmeScriptName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeScriptName.setStatus('current')
ccmeVoiceMailNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeVoiceMailNumber.setStatus('current')
ccmeMwiRelay = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMwiRelay.setStatus('current')
ccmeMwiExpires = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 99999)).clone(86400)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMwiExpires.setStatus('current')
ccmeTransferSystem = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("blind", 1), ("localConsult", 2), ("fullBlind", 3), ("fullConsult", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeTransferSystem.setStatus('current')
ccmeTimeFormat = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("twelve", 1), ("twentyfour", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeTimeFormat.setStatus('current')
ccmeDateFormat = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("mmddyy", 1), ("ddmmyy", 2), ("yymmdd", 3), ("yyddmm", 4))).clone('mmddyy')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeDateFormat.setStatus('current')
ccmeUrlforServicesBtn = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeUrlforServicesBtn.setStatus('current')
ccmeUrlforDirectoriesBtn = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeUrlforDirectoriesBtn.setStatus('current')
ccmeMohFlashFile = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohFlashFile.setStatus('current')
ccmeMohMulticastFromFlashEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohMulticastFromFlashEnabled.setStatus('current')
ccmeMohFlashMulticastIPAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 66), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohFlashMulticastIPAddrType.setStatus('current')
ccmeMohFlashMulticastIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 21), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohFlashMulticastIPAddr.setStatus('current')
ccmeMohFlashMulticastPortNum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 22), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohFlashMulticastPortNum.setStatus('current')
ccmePhoneFirmwareTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 23), )
if mibBuilder.loadTexts: ccmePhoneFirmwareTable.setStatus('current')
ccmePhoneFirmwareEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 23, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmePhoneFirmwareIndex"))
if mibBuilder.loadTexts: ccmePhoneFirmwareEntry.setStatus('current')
ccmePhoneFirmwareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: ccmePhoneFirmwareIndex.setStatus('current')
ccmePhoneType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 23, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmePhoneType.setStatus('current')
ccmePhoneFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 23, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmePhoneFirmwareRev.setStatus('current')
ccmeTransferPatternTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 24), )
if mibBuilder.loadTexts: ccmeTransferPatternTable.setStatus('current')
ccmeTransferPatternEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 24, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeTransferPatternIndex"))
if mibBuilder.loadTexts: ccmeTransferPatternEntry.setStatus('current')
ccmeTransferPatternIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: ccmeTransferPatternIndex.setStatus('current')
ccmeTransferPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 24, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeTransferPattern.setStatus('current')
ccmeTransferPatternType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("blind", 1), ("h4502", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeTransferPatternType.setStatus('current')
ccmeWebGUIEditEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeWebGUIEditEnabled.setStatus('current')
ccmeWebGUITimeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeWebGUITimeEnabled.setStatus('current')
ccmeAfterHrsBlockPatternTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 27), )
if mibBuilder.loadTexts: ccmeAfterHrsBlockPatternTable.setStatus('current')
ccmeAfterHrsBlockPatternEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 27, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeAfterHrsBlockPatternTag"))
if mibBuilder.loadTexts: ccmeAfterHrsBlockPatternEntry.setStatus('current')
ccmeAfterHrsBlockPatternTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: ccmeAfterHrsBlockPatternTag.setStatus('current')
ccmeAfterHrsBlockPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 27, 1, 2), CcmeDigitPatternString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockPattern.setStatus('current')
ccmeAfterHrsBlockPatternAllTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 27, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockPatternAllTime.setStatus('current')
ccmeAfterHrsBlockDateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28), )
if mibBuilder.loadTexts: ccmeAfterHrsBlockDateTable.setStatus('current')
ccmeAfterHrsBlockDateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeAfterHrsBlockDateIndex"))
if mibBuilder.loadTexts: ccmeAfterHrsBlockDateEntry.setStatus('current')
ccmeAfterHrsBlockDateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: ccmeAfterHrsBlockDateIndex.setStatus('current')
ccmeAfterHrsBlockDateMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("jan", 1), ("feb", 2), ("mar", 3), ("apr", 4), ("may", 5), ("jun", 6), ("jul", 7), ("aug", 8), ("sep", 9), ("oct", 10), ("nov", 11), ("dec", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDateMonth.setStatus('current')
ccmeAfterHrsBlockDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDate.setStatus('current')
ccmeAfterHrsBlockDateStartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDateStartHour.setStatus('current')
ccmeAfterHrsBlockDateStartMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDateStartMin.setStatus('current')
ccmeAfterHrsBlockDateStopHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDateStopHour.setStatus('current')
ccmeAfterHrsBlockDateStopMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 28, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDateStopMin.setStatus('current')
ccmeAfterHrsBlockDayTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 29), )
if mibBuilder.loadTexts: ccmeAfterHrsBlockDayTable.setStatus('current')
ccmeAfterHrsBlockDayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 29, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeAfterHrsBlockDayIndex"))
if mibBuilder.loadTexts: ccmeAfterHrsBlockDayEntry.setStatus('current')
ccmeAfterHrsBlockDayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: ccmeAfterHrsBlockDayIndex.setStatus('current')
ccmeAfterHrsBlockDay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 29, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sun", 1), ("mon", 2), ("tue", 3), ("wed", 4), ("thu", 5), ("fri", 6), ("sat", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDay.setStatus('current')
ccmeAfterHrsBlockDayStartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDayStartHour.setStatus('current')
ccmeAfterHrsBlockDayStartMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 29, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDayStartMin.setStatus('current')
ccmeAfterHrsBlockDayStopHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDayStopHour.setStatus('current')
ccmeAfterHrsBlockDayStopMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 29, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAfterHrsBlockDayStopMin.setStatus('current')
ccmeNightServiceCode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 30), CcmeNightServiceCodeString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceCode.setStatus('current')
ccmeNightServiceDateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31), )
if mibBuilder.loadTexts: ccmeNightServiceDateTable.setStatus('current')
ccmeNightServiceDateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeNightServiceDateIndex"))
if mibBuilder.loadTexts: ccmeNightServiceDateEntry.setStatus('current')
ccmeNightServiceDateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: ccmeNightServiceDateIndex.setStatus('current')
ccmeNightServiceDateMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("jan", 1), ("feb", 2), ("mar", 3), ("apr", 4), ("may", 5), ("jun", 6), ("jul", 7), ("aug", 8), ("sep", 9), ("oct", 10), ("nov", 11), ("dec", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDateMonth.setStatus('current')
ccmeNightServiceDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDate.setStatus('current')
ccmeNightServiceDateStartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDateStartHour.setStatus('current')
ccmeNightServiceDateStartMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDateStartMin.setStatus('current')
ccmeNightServiceDateStopHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDateStopHour.setStatus('current')
ccmeNightServiceDateStopMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 31, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDateStopMin.setStatus('current')
ccmeNightServiceDayTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 32), )
if mibBuilder.loadTexts: ccmeNightServiceDayTable.setStatus('current')
ccmeNightServiceDayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 32, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeNightServiceDayIndex"))
if mibBuilder.loadTexts: ccmeNightServiceDayEntry.setStatus('current')
ccmeNightServiceDayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: ccmeNightServiceDayIndex.setStatus('current')
ccmeNightServiceDay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 32, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sun", 1), ("mon", 2), ("tue", 3), ("wed", 4), ("thu", 5), ("fri", 6), ("sat", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDay.setStatus('current')
ccmeNightServiceDayStartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 32, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDayStartHour.setStatus('current')
ccmeNightServiceDayStartMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 32, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDayStartMin.setStatus('current')
ccmeNightServiceDayStopHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 32, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDayStopHour.setStatus('current')
ccmeNightServiceDayStopMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 32, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceDayStopMin.setStatus('current')
ccmeFXOHookFlashEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeFXOHookFlashEnabled.setStatus('current')
ccmeSecondaryDialTonePrefix = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 34), CcmeDigitPatternString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeSecondaryDialTonePrefix.setStatus('current')
ccmeWebAdminSystemUser = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 35), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeWebAdminSystemUser.setStatus('current')
ccmeWebAdminCustomerUser = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 36), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeWebAdminCustomerUser.setStatus('current')
ccmeSystemMessage = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 37), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeSystemMessage.setStatus('current')
ccmeDialplanPatternTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 38), )
if mibBuilder.loadTexts: ccmeDialplanPatternTable.setStatus('current')
ccmeDialplanPatternEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 38, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeDialplanPatternIndex"))
if mibBuilder.loadTexts: ccmeDialplanPatternEntry.setStatus('current')
ccmeDialplanPatternIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 38, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: ccmeDialplanPatternIndex.setStatus('current')
ccmeDialplanPatternTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 38, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeDialplanPatternTag.setStatus('current')
ccmeDialplanExtLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 38, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeDialplanExtLength.setStatus('current')
ccmeDialplanPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 38, 1, 4), CcmeDigitPatternString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeDialplanPattern.setStatus('current')
ccmeDialplanExtPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 38, 1, 5), CcmeDigitPatternString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeDialplanExtPattern.setStatus('current')
ccmeDialplanAllowRegiEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 38, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeDialplanAllowRegiEnabled.setStatus('current')
ccmeKeepAliveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeKeepAliveTimeout.setStatus('current')
ccmeInterDigitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 120)).clone(10)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeInterDigitTimeout.setStatus('current')
ccmeBusyTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(10)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeBusyTimeout.setStatus('current')
ccmeAlertTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60000)).clone(180)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeAlertTimeout.setStatus('current')
ccmeEphoneConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43), )
if mibBuilder.loadTexts: ccmeEphoneConfTable.setStatus('current')
ccmeEphoneConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeEphoneTag"))
if mibBuilder.loadTexts: ccmeEphoneConfEntry.setStatus('current')
ccmeEphoneTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)))
if mibBuilder.loadTexts: ccmeEphoneTag.setStatus('current')
ccmeEphoneIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneIpAddressType.setStatus('current')
ccmeEphoneIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneIpAddress.setStatus('current')
ccmeEphoneMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneMacAddress.setStatus('current')
ccmeEphoneModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneModel.setStatus('current')
ccmeEphoneUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneUsername.setStatus('current')
ccmeEphoneKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneKeepAlive.setStatus('current')
ccmeEphoneAutoLineOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneAutoLineOut.setStatus('current')
ccmeEphonePagingDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 208))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphonePagingDn.setStatus('current')
ccmeEphoneAddon = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneAddon.setStatus('current')
ccmeEphoneTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneTemplate.setStatus('current')
ccmeEphonePagingPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unicast", 1), ("multicast", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphonePagingPolicy.setStatus('current')
ccmeEphoneKeyPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneKeyPhone.setStatus('current')
ccmeEphoneAutoLineInEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneAutoLineInEnabled.setStatus('current')
ccmeEphoneAftHrsBlkExmptEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneAftHrsBlkExmptEnabled.setStatus('current')
ccmeEphoneNightBellSvcEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneNightBellSvcEnabled.setStatus('current')
ccmeEphoneKeepConfEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneKeepConfEnabled.setStatus('current')
ccmeEphonePrimaryDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 208))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphonePrimaryDn.setStatus('current')
ccmeEMUserProfileTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEMUserProfileTag.setStatus('current')
ccmeEMLogOutProfileTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 43, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEMLogOutProfileTag.setStatus('current')
ccmeEphoneSpeedDialConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 44), )
if mibBuilder.loadTexts: ccmeEphoneSpeedDialConfTable.setStatus('current')
ccmeEphoneSpeedDialConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 44, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeEphoneTag"), (0, "CISCO-CCME-MIB", "ccmeEphoneSpeedDialTableIndex"))
if mibBuilder.loadTexts: ccmeEphoneSpeedDialConfEntry.setStatus('current')
ccmeEphoneSpeedDialTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 44, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 34)))
if mibBuilder.loadTexts: ccmeEphoneSpeedDialTableIndex.setStatus('current')
ccmeEphoneSpeedDialTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 44, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneSpeedDialTag.setStatus('current')
ccmeEphoneSpeedDialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 44, 1, 3), CcmeDigitPatternString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneSpeedDialNumber.setStatus('current')
ccmeEphoneSpeedDialLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 44, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneSpeedDialLabel.setStatus('current')
ccmeEphoneFastDialConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 45), )
if mibBuilder.loadTexts: ccmeEphoneFastDialConfTable.setStatus('current')
ccmeEphoneFastDialConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 45, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeEphoneTag"), (0, "CISCO-CCME-MIB", "ccmeEphoneFastDialTableIndex"))
if mibBuilder.loadTexts: ccmeEphoneFastDialConfEntry.setStatus('current')
ccmeEphoneFastDialTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 45, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: ccmeEphoneFastDialTableIndex.setStatus('current')
ccmeEphoneFastDialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 45, 1, 2), CcmeDigitPatternString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneFastDialNumber.setStatus('current')
ccmeEphoneFastDialName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 45, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneFastDialName.setStatus('current')
ccmeEphoneBtnDNAssocConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 46), )
if mibBuilder.loadTexts: ccmeEphoneBtnDNAssocConfTable.setStatus('current')
ccmeEphoneBtnDNAssocConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 46, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeEphoneTag"), (0, "CISCO-CCME-MIB", "ccmeEphoneButtonNumber"))
if mibBuilder.loadTexts: ccmeEphoneBtnDNAssocConfEntry.setStatus('current')
ccmeEphoneButtonNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 46, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: ccmeEphoneButtonNumber.setStatus('current')
ccmeEphoneOverlayDN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 46, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneOverlayDN.setStatus('current')
ccmeEphoneDnConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47), )
if mibBuilder.loadTexts: ccmeEphoneDnConfigTable.setStatus('current')
ccmeEphoneDnConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeEphoneDnTag"))
if mibBuilder.loadTexts: ccmeEphoneDnConfigEntry.setStatus('current')
ccmeEphoneDnTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 288)))
if mibBuilder.loadTexts: ccmeEphoneDnTag.setStatus('current')
ccmeEphoneDnType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("extension", 1), ("intercom", 2), ("paging", 3), ("moh", 4), ("mwi", 5), ("parkslot", 6), ("loopback", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnType.setStatus('current')
ccmeEphoneDnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("single", 1), ("dual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnMode.setStatus('current')
ccmeEphoneDnPriNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnPriNum.setStatus('current')
ccmeEphoneDnSecNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnSecNum.setStatus('current')
ccmeEphoneDnName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnName.setStatus('current')
ccmeEphoneDnLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnLabel.setStatus('current')
ccmeEphoneDnPriPref = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnPriPref.setStatus('current')
ccmeEphoneDnSecPref = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnSecPref.setStatus('current')
ccmeEphoneDnCFBusyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnCFBusyNum.setStatus('current')
ccmeEphoneDnCFAllNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnCFAllNum.setStatus('current')
ccmeEphoneDnCFNoAnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnCFNoAnNum.setStatus('current')
ccmeEphoneDnCFNoAnTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 60000))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnCFNoAnTo.setStatus('current')
ccmeEphoneDnMwiCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("mwiOn", 1), ("mwiOff", 2), ("mwiOnoff", 3), ("mwiDisabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnMwiCapability.setStatus('current')
ccmeEphoneDnHuntstop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnHuntstop.setStatus('current')
ccmeEphoneDnHuntstopCh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnHuntstopCh.setStatus('current')
ccmeEphoneDnHoldAltTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnHoldAltTo.setStatus('current')
ccmeEphoneDnHoldAltType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("originator", 2), ("shared", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnHoldAltType.setStatus('current')
ccmeEphoneDnMwiSipSubscrEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnMwiSipSubscrEnabled.setStatus('current')
ccmeEphoneDnScriptName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 47, 1, 20), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnScriptName.setStatus('current')
ccmeNotificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 48), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccmeNotificationEnable.setStatus('current')
ccmeSysTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("clear", 1), ("minor", 2), ("major", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeSysTrapSeverity.setStatus('current')
ccmeSysNotificationReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 50), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeSysNotificationReason.setStatus('current')
ccmeEphoneUnRegThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccmeEphoneUnRegThreshold.setStatus('current')
ccmeEphoneTrapReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 52), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneTrapReason.setStatus('current')
ccmeUserAutoLogoutTo = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeUserAutoLogoutTo.setStatus('current')
ccmeUserLoginDeactivateTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 54), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeUserLoginDeactivateTime.setStatus('current')
ccmeMwiSipServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 55), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMwiSipServerIpAddress.setStatus('current')
ccmeMwiSipServerTransportType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMwiSipServerTransportType.setStatus('current')
ccmeMwiSipServerPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 57), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(2000, 9999)).clone(5060)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMwiSipServerPortNumber.setStatus('current')
ccmeMwiSipServerRegE164Enabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 58), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMwiSipServerRegE164Enabled.setStatus('current')
ccmeMwiSipSvrUnsolicitedEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 59), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMwiSipSvrUnsolicitedEnabled.setStatus('current')
ccmeCorConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60), )
if mibBuilder.loadTexts: ccmeCorConfTable.setStatus('current')
ccmeCorConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeCorTableIndex"))
if mibBuilder.loadTexts: ccmeCorConfEntry.setStatus('current')
ccmeCorTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ccmeCorTableIndex.setStatus('current')
ccmeCorTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeCorTag.setStatus('current')
ccmeCorListName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeCorListName.setStatus('current')
ccmeCorScope = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ccme", 1), ("srstSccp", 2), ("srstSip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeCorScope.setStatus('current')
ccmeCorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeCorDirection.setStatus('current')
ccmeCorStartingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeCorStartingNumber.setStatus('current')
ccmeCorEndingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeCorEndingNumber.setStatus('current')
ccmeCorVoiceRegPoolNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeCorVoiceRegPoolNumber.setStatus('current')
ccmeCorListDefaultEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 60, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeCorListDefaultEnabled.setStatus('current')
ccmeLoopbackDnConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61), )
if mibBuilder.loadTexts: ccmeLoopbackDnConfTable.setStatus('current')
ccmeLoopbackDnConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeLoopbackDnTag"))
if mibBuilder.loadTexts: ccmeLoopbackDnConfEntry.setStatus('current')
ccmeLoopbackDnTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ccmeLoopbackDnTag.setStatus('current')
ccmeLoopbackDnforward = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeLoopbackDnforward.setStatus('current')
ccmeLoopbackDnStrip = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeLoopbackDnStrip.setStatus('current')
ccmeLoopbackDnPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeLoopbackDnPrefix.setStatus('current')
ccmeLoopbackDnSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeLoopbackDnSuffix.setStatus('current')
ccmeLoopbackDnRetryTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeLoopbackDnRetryTo.setStatus('current')
ccmeLoopbackDnAutoCon = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeLoopbackDnAutoCon.setStatus('current')
ccmeLoopbackDnCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 61, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("g711alaw", 1), ("g711ulaw", 2), ("default", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeLoopbackDnCodec.setStatus('current')
ccmeIntercomDnConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 62), )
if mibBuilder.loadTexts: ccmeIntercomDnConfTable.setStatus('current')
ccmeIntercomDnConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 62, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeIntercomDnTag"))
if mibBuilder.loadTexts: ccmeIntercomDnConfEntry.setStatus('current')
ccmeIntercomDnTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 62, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ccmeIntercomDnTag.setStatus('current')
ccmeIntercomDnExtensionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 62, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeIntercomDnExtensionNum.setStatus('current')
ccmeIntercomDnBargeInEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 62, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeIntercomDnBargeInEnabled.setStatus('current')
ccmeIntercomDnAutoAnsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 62, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeIntercomDnAutoAnsEnabled.setStatus('current')
ccmeIntercomDnLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 62, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeIntercomDnLabel.setStatus('current')
ccmeMohMulticastIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 67), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohMulticastIpAddressType.setStatus('current')
ccmeMohMulticastIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 63), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohMulticastIpAddress.setStatus('current')
ccmeMohMulticastPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 64), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohMulticastPortNumber.setStatus('current')
ccmeMohMulticastRoute = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 65), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohMulticastRoute.setStatus('current')
ccmeEMUserDirNumConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 68), )
if mibBuilder.loadTexts: ccmeEMUserDirNumConfTable.setStatus('current')
ccmeEMUserDirNumConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 68, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmEMUserProfileDirNumIndex"), (0, "CISCO-CCME-MIB", "ccmeEMUserDirNumTag"))
if mibBuilder.loadTexts: ccmeEMUserDirNumConfEntry.setStatus('current')
ccmEMUserProfileDirNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 68, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: ccmEMUserProfileDirNumIndex.setStatus('current')
ccmeEMUserDirNumTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 68, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: ccmeEMUserDirNumTag.setStatus('current')
ccmeEMUserDirNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 68, 1, 3), CcmeDigitPatternString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEMUserDirNum.setStatus('current')
ccmeEMUserDirNumOverlay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 68, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEMUserDirNumOverlay.setStatus('current')
ccmeEMLogoutDirNumConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 69), )
if mibBuilder.loadTexts: ccmeEMLogoutDirNumConfTable.setStatus('current')
ccmeEMLogoutDirNumConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 69, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmEMLogOutProfileDirNumIndex"), (0, "CISCO-CCME-MIB", "ccmeEMLogoutDirNumTag"))
if mibBuilder.loadTexts: ccmeEMLogoutDirNumConfEntry.setStatus('current')
ccmEMLogOutProfileDirNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 69, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: ccmEMLogOutProfileDirNumIndex.setStatus('current')
ccmeEMLogoutDirNumTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 69, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: ccmeEMLogoutDirNumTag.setStatus('current')
ccmeEMLogoutDirNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 69, 1, 3), CcmeDigitPatternString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEMLogoutDirNum.setStatus('current')
ccmeEMLogoutDirNumOverlay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 1, 69, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEMLogoutDirNumOverlay.setStatus('current')
ccmeEphoneCallLegs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneCallLegs.setStatus('current')
ccmeEphoneTot = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneTot.setStatus('current')
ccmeEphoneTotRegistered = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneTotRegistered.setStatus('current')
ccmeEphoneTotKeyPhConfigured = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneTotKeyPhConfigured.setStatus('current')
ccmeEphoneTotKeyPhRegistered = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneTotKeyPhRegistered.setStatus('current')
ccmeEphoneActTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6), )
if mibBuilder.loadTexts: ccmeEphoneActTable.setStatus('current')
ccmeEphoneActEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeEphoneTag"))
if mibBuilder.loadTexts: ccmeEphoneActEntry.setStatus('current')
ccmeEphoneDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDeviceName.setStatus('current')
ccmeEphoneRegState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("registered", 1), ("unregistered", 2), ("deceased", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneRegState.setStatus('current')
ccmeEphoneActiveDN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneActiveDN.setStatus('current')
ccmeEphoneActivityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("onhook", 1), ("offhook", 2), ("ringing", 3), ("paging", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneActivityStatus.setStatus('current')
ccmeEphoneKeepAliveCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneKeepAliveCnt.setStatus('current')
ccmeEphonePendingReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphonePendingReset.setStatus('current')
ccmeEphoneRegTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneRegTime.setStatus('current')
ccmeEphoneCurrentFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneCurrentFirmwareRev.setStatus('current')
ccmeEphonePreviousFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphonePreviousFirmwareRev.setStatus('current')
ccmeEphoneLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneLastError.setStatus('current')
ccmeEphoneObservedType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneObservedType.setStatus('current')
ccmeEphoneLoginStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneLoginStatus.setStatus('current')
ccmeEphoneDnDStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnDStatus.setStatus('current')
ccmeEphoneDebugStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDebugStatus.setStatus('current')
ccmeEphoneMediaActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneMediaActive.setStatus('current')
ccmeEphoneTAPIClient = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneTAPIClient.setStatus('current')
ccmeEphoneMediaCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("audioOnly", 1), ("audioVideo", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneMediaCapability.setStatus('current')
ccmeEphoneRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 6, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneRemote.setStatus('current')
ccmeMohSource = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flash", 1), ("liveFeed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeMohSource.setStatus('current')
ccmeNightServiceEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeNightServiceEnabled.setStatus('current')
ccmeEMphoneTot = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEMphoneTot.setStatus('current')
ccmeEMphoneTotRegistered = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 2, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEMphoneTotRegistered.setStatus('current')
ccmeEphoneDnChStatsHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1), )
if mibBuilder.loadTexts: ccmeEphoneDnChStatsHistoryTable.setStatus('current')
ccmeEphoneDnChStatsHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-CCME-MIB", "ccmeEphoneDnTag"), (0, "CISCO-CCME-MIB", "ccmeEphoneDnChNum"))
if mibBuilder.loadTexts: ccmeEphoneDnChStatsHistoryEntry.setStatus('current')
ccmeEphoneDnChNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: ccmeEphoneDnChNum.setStatus('current')
ccmeEphoneDnChIncoming = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChIncoming.setStatus('current')
ccmeEphoneDnChInAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChInAnswered.setStatus('current')
ccmeEphoneDnChOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChOutbound.setStatus('current')
ccmeEphoneDnChOutAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChOutAnswered.setStatus('current')
ccmeEphoneDnChOutBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChOutBusy.setStatus('current')
ccmeEphoneDnChDiscAtConn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChDiscAtConn.setStatus('current')
ccmeEphoneDnChDiscAtAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChDiscAtAlert.setStatus('current')
ccmeEphoneDnChDiscAtHold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChDiscAtHold.setStatus('current')
ccmeEphoneDnChDiscAtRing = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChDiscAtRing.setStatus('current')
ccmeEphoneDnChDiscCauseNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChDiscCauseNearEnd.setStatus('current')
ccmeEphoneDnChDiscCauseFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 439, 1, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccmeEphoneDnChDiscCauseFarEnd.setStatus('current')
ccmeMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0))
ccmeStatusChangeNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 1)).setObjects(("CISCO-CCME-MIB", "ccmeSysTrapSeverity"), ("CISCO-CCME-MIB", "ccmeEnabled"), ("CISCO-CCME-MIB", "ccmeSysNotificationReason"))
if mibBuilder.loadTexts: ccmeStatusChangeNotif.setStatus('current')
ccmeEphoneUnRegThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 2)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneUnRegThreshold"))
if mibBuilder.loadTexts: ccmeEphoneUnRegThresholdExceed.setStatus('current')
ccmeEPhoneDeceased = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 3)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneIpAddress"), ("CISCO-CCME-MIB", "ccmeEphoneRegState"))
if mibBuilder.loadTexts: ccmeEPhoneDeceased.setStatus('current')
ccmeEPhoneRegFailed = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 4)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneIpAddress"), ("CISCO-CCME-MIB", "ccmeEphoneTrapReason"))
if mibBuilder.loadTexts: ccmeEPhoneRegFailed.setStatus('current')
ccmeEphoneLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 5)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneIpAddress"), ("CISCO-CCME-MIB", "ccmeEphoneTrapReason"))
if mibBuilder.loadTexts: ccmeEphoneLoginFailed.setStatus('current')
ccmeNightServiceChangeNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 6)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneTrapReason"))
if mibBuilder.loadTexts: ccmeNightServiceChangeNotif.setStatus('current')
ccmeLivefeedMohFailedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 7)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneTrapReason"))
if mibBuilder.loadTexts: ccmeLivefeedMohFailedNotif.setStatus('current')
ccmeMaxConferenceNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 8)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneTrapReason"))
if mibBuilder.loadTexts: ccmeMaxConferenceNotif.setStatus('current')
ccmeKeyEphoneRegChangeNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 439, 0, 0, 9)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneIpAddress"), ("CISCO-CCME-MIB", "ccmeEphoneRegState"))
if mibBuilder.loadTexts: ccmeKeyEphoneRegChangeNotif.setStatus('current')
ciscoCcmeMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 1))
ciscoCcmeMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 2))
ciscoCcmeMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 1, 1)).setObjects(("CISCO-CCME-MIB", "ccmeConfigGroup"), ("CISCO-CCME-MIB", "ccmeActiveStatsGroup"), ("CISCO-CCME-MIB", "ccmeHistoryStatsGroup"), ("CISCO-CCME-MIB", "ccmeNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCcmeMIBCompliance = ciscoCcmeMIBCompliance.setStatus('deprecated')
ciscoCcmeMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 1, 2)).setObjects(("CISCO-CCME-MIB", "ccmeActiveStatsGroup"), ("CISCO-CCME-MIB", "ccmeHistoryStatsGroup"), ("CISCO-CCME-MIB", "ccmeNotifGroup"), ("CISCO-CCME-MIB", "ccmeConfigGroup"), ("CISCO-CCME-MIB", "ccmeConfigGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCcmeMIBComplianceRev1 = ciscoCcmeMIBComplianceRev1.setStatus('deprecated')
ciscoCcmeMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 1, 3)).setObjects(("CISCO-CCME-MIB", "ccmeConfigGroup"), ("CISCO-CCME-MIB", "ccmeActiveStatsGroup"), ("CISCO-CCME-MIB", "ccmeHistoryStatsGroup"), ("CISCO-CCME-MIB", "ccmeNotifGroup"), ("CISCO-CCME-MIB", "ccmeConfigGroup1"), ("CISCO-CCME-MIB", "ccmeConfigGroupEM"), ("CISCO-CCME-MIB", "ccmeActiveStatsGroupEM"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCcmeMIBComplianceRev2 = ciscoCcmeMIBComplianceRev2.setStatus('current')
ccmeConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 2, 1)).setObjects(("CISCO-CCME-MIB", "ccmeEnabled"), ("CISCO-CCME-MIB", "ccmeVersion"), ("CISCO-CCME-MIB", "ccmeIPAddressType"), ("CISCO-CCME-MIB", "ccmeIPAddress"), ("CISCO-CCME-MIB", "ccmePortNumber"), ("CISCO-CCME-MIB", "ccmeMaxEphones"), ("CISCO-CCME-MIB", "ccmeMaxDirectoryNumber"), ("CISCO-CCME-MIB", "ccmeMaxConferences"), ("CISCO-CCME-MIB", "ccmeMaxRedirect"), ("CISCO-CCME-MIB", "ccmeScriptName"), ("CISCO-CCME-MIB", "ccmeVoiceMailNumber"), ("CISCO-CCME-MIB", "ccmeMwiRelay"), ("CISCO-CCME-MIB", "ccmeMwiExpires"), ("CISCO-CCME-MIB", "ccmeTransferSystem"), ("CISCO-CCME-MIB", "ccmeTimeFormat"), ("CISCO-CCME-MIB", "ccmeDateFormat"), ("CISCO-CCME-MIB", "ccmeUrlforServicesBtn"), ("CISCO-CCME-MIB", "ccmeUrlforDirectoriesBtn"), ("CISCO-CCME-MIB", "ccmeMohFlashFile"), ("CISCO-CCME-MIB", "ccmeMohMulticastFromFlashEnabled"), ("CISCO-CCME-MIB", "ccmeMohFlashMulticastIPAddrType"), ("CISCO-CCME-MIB", "ccmeMohFlashMulticastIPAddr"), ("CISCO-CCME-MIB", "ccmeMohFlashMulticastPortNum"), ("CISCO-CCME-MIB", "ccmePhoneType"), ("CISCO-CCME-MIB", "ccmePhoneFirmwareRev"), ("CISCO-CCME-MIB", "ccmeTransferPattern"), ("CISCO-CCME-MIB", "ccmeTransferPatternType"), ("CISCO-CCME-MIB", "ccmeWebGUIEditEnabled"), ("CISCO-CCME-MIB", "ccmeWebGUITimeEnabled"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockPattern"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockPatternAllTime"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDateMonth"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDate"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDateStartHour"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDateStartMin"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDateStopHour"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDateStopMin"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDay"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDayStartHour"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDayStartMin"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDayStopHour"), ("CISCO-CCME-MIB", "ccmeAfterHrsBlockDayStopMin"), ("CISCO-CCME-MIB", "ccmeNightServiceCode"), ("CISCO-CCME-MIB", "ccmeNightServiceDateMonth"), ("CISCO-CCME-MIB", "ccmeNightServiceDate"), ("CISCO-CCME-MIB", "ccmeNightServiceDateStartHour"), ("CISCO-CCME-MIB", "ccmeNightServiceDateStartMin"), ("CISCO-CCME-MIB", "ccmeNightServiceDateStopHour"), ("CISCO-CCME-MIB", "ccmeNightServiceDateStopMin"), ("CISCO-CCME-MIB", "ccmeNightServiceDay"), ("CISCO-CCME-MIB", "ccmeNightServiceDayStartHour"), ("CISCO-CCME-MIB", "ccmeNightServiceDayStartMin"), ("CISCO-CCME-MIB", "ccmeNightServiceDayStopHour"), ("CISCO-CCME-MIB", "ccmeNightServiceDayStopMin"), ("CISCO-CCME-MIB", "ccmeFXOHookFlashEnabled"), ("CISCO-CCME-MIB", "ccmeSecondaryDialTonePrefix"), ("CISCO-CCME-MIB", "ccmeWebAdminSystemUser"), ("CISCO-CCME-MIB", "ccmeWebAdminCustomerUser"), ("CISCO-CCME-MIB", "ccmeSystemMessage"), ("CISCO-CCME-MIB", "ccmeDialplanPatternTag"), ("CISCO-CCME-MIB", "ccmeDialplanPattern"), ("CISCO-CCME-MIB", "ccmeDialplanExtLength"), ("CISCO-CCME-MIB", "ccmeDialplanExtPattern"), ("CISCO-CCME-MIB", "ccmeDialplanAllowRegiEnabled"), ("CISCO-CCME-MIB", "ccmeKeepAliveTimeout"), ("CISCO-CCME-MIB", "ccmeInterDigitTimeout"), ("CISCO-CCME-MIB", "ccmeBusyTimeout"), ("CISCO-CCME-MIB", "ccmeAlertTimeout"), ("CISCO-CCME-MIB", "ccmeEphoneIpAddressType"), ("CISCO-CCME-MIB", "ccmeEphoneIpAddress"), ("CISCO-CCME-MIB", "ccmeEphoneMacAddress"), ("CISCO-CCME-MIB", "ccmeEphoneModel"), ("CISCO-CCME-MIB", "ccmeEphoneDnType"), ("CISCO-CCME-MIB", "ccmeEphoneDnMode"), ("CISCO-CCME-MIB", "ccmeEphoneDnPriNum"), ("CISCO-CCME-MIB", "ccmeEphoneDnSecNum"), ("CISCO-CCME-MIB", "ccmeEphoneDnName"), ("CISCO-CCME-MIB", "ccmeEphoneDnLabel"), ("CISCO-CCME-MIB", "ccmeEphoneDnPriPref"), ("CISCO-CCME-MIB", "ccmeEphoneDnSecPref"), ("CISCO-CCME-MIB", "ccmeEphoneDnCFBusyNum"), ("CISCO-CCME-MIB", "ccmeEphoneDnCFAllNum"), ("CISCO-CCME-MIB", "ccmeEphoneDnCFNoAnNum"), ("CISCO-CCME-MIB", "ccmeEphoneDnCFNoAnTo"), ("CISCO-CCME-MIB", "ccmeEphoneDnMwiCapability"), ("CISCO-CCME-MIB", "ccmeEphoneDnHuntstop"), ("CISCO-CCME-MIB", "ccmeEphoneDnHuntstopCh"), ("CISCO-CCME-MIB", "ccmeEphoneDnHoldAltTo"), ("CISCO-CCME-MIB", "ccmeEphoneDnHoldAltType"), ("CISCO-CCME-MIB", "ccmeEphoneDnMwiSipSubscrEnabled"), ("CISCO-CCME-MIB", "ccmeEphoneDnScriptName"), ("CISCO-CCME-MIB", "ccmeEphoneUsername"), ("CISCO-CCME-MIB", "ccmeNotificationEnable"), ("CISCO-CCME-MIB", "ccmeSysTrapSeverity"), ("CISCO-CCME-MIB", "ccmeSysNotificationReason"), ("CISCO-CCME-MIB", "ccmeEphoneUnRegThreshold"), ("CISCO-CCME-MIB", "ccmeEphoneKeyPhone"), ("CISCO-CCME-MIB", "ccmeEphoneKeepAlive"), ("CISCO-CCME-MIB", "ccmeEphoneAutoLineInEnabled"), ("CISCO-CCME-MIB", "ccmeEphoneAutoLineOut"), ("CISCO-CCME-MIB", "ccmeEphonePagingDn"), ("CISCO-CCME-MIB", "ccmeEphonePagingPolicy"), ("CISCO-CCME-MIB", "ccmeEphoneTemplate"), ("CISCO-CCME-MIB", "ccmeEphoneAftHrsBlkExmptEnabled"), ("CISCO-CCME-MIB", "ccmeEphoneNightBellSvcEnabled"), ("CISCO-CCME-MIB", "ccmeEphoneAddon"), ("CISCO-CCME-MIB", "ccmeEphoneKeepConfEnabled"), ("CISCO-CCME-MIB", "ccmeEphoneTrapReason"), ("CISCO-CCME-MIB", "ccmeUserAutoLogoutTo"), ("CISCO-CCME-MIB", "ccmeUserLoginDeactivateTime"), ("CISCO-CCME-MIB", "ccmeMwiSipServerIpAddress"), ("CISCO-CCME-MIB", "ccmeMwiSipServerTransportType"), ("CISCO-CCME-MIB", "ccmeMwiSipServerPortNumber"), ("CISCO-CCME-MIB", "ccmeMwiSipServerRegE164Enabled"), ("CISCO-CCME-MIB", "ccmeMwiSipSvrUnsolicitedEnabled"), ("CISCO-CCME-MIB", "ccmeCorTag"), ("CISCO-CCME-MIB", "ccmeCorListName"), ("CISCO-CCME-MIB", "ccmeCorScope"), ("CISCO-CCME-MIB", "ccmeCorDirection"), ("CISCO-CCME-MIB", "ccmeCorStartingNumber"), ("CISCO-CCME-MIB", "ccmeCorEndingNumber"), ("CISCO-CCME-MIB", "ccmeCorVoiceRegPoolNumber"), ("CISCO-CCME-MIB", "ccmeCorListDefaultEnabled"), ("CISCO-CCME-MIB", "ccmeLoopbackDnforward"), ("CISCO-CCME-MIB", "ccmeLoopbackDnStrip"), ("CISCO-CCME-MIB", "ccmeLoopbackDnPrefix"), ("CISCO-CCME-MIB", "ccmeLoopbackDnSuffix"), ("CISCO-CCME-MIB", "ccmeLoopbackDnRetryTo"), ("CISCO-CCME-MIB", "ccmeLoopbackDnAutoCon"), ("CISCO-CCME-MIB", "ccmeLoopbackDnCodec"), ("CISCO-CCME-MIB", "ccmeIntercomDnExtensionNum"), ("CISCO-CCME-MIB", "ccmeIntercomDnBargeInEnabled"), ("CISCO-CCME-MIB", "ccmeIntercomDnAutoAnsEnabled"), ("CISCO-CCME-MIB", "ccmeIntercomDnLabel"), ("CISCO-CCME-MIB", "ccmeEphoneSpeedDialTag"), ("CISCO-CCME-MIB", "ccmeEphoneSpeedDialNumber"), ("CISCO-CCME-MIB", "ccmeEphoneSpeedDialLabel"), ("CISCO-CCME-MIB", "ccmeEphoneFastDialNumber"), ("CISCO-CCME-MIB", "ccmeEphoneFastDialName"), ("CISCO-CCME-MIB", "ccmeEphoneOverlayDN"), ("CISCO-CCME-MIB", "ccmeMohMulticastIpAddressType"), ("CISCO-CCME-MIB", "ccmeMohMulticastIpAddress"), ("CISCO-CCME-MIB", "ccmeMohMulticastPortNumber"), ("CISCO-CCME-MIB", "ccmeMohMulticastRoute"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmeConfigGroup = ccmeConfigGroup.setStatus('current')
ccmeActiveStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 2, 2)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneCallLegs"), ("CISCO-CCME-MIB", "ccmeEphoneTot"), ("CISCO-CCME-MIB", "ccmeEphoneTotRegistered"), ("CISCO-CCME-MIB", "ccmeEphoneTotKeyPhConfigured"), ("CISCO-CCME-MIB", "ccmeEphoneTotKeyPhRegistered"), ("CISCO-CCME-MIB", "ccmeEphoneDeviceName"), ("CISCO-CCME-MIB", "ccmeEphoneRegState"), ("CISCO-CCME-MIB", "ccmeEphoneActiveDN"), ("CISCO-CCME-MIB", "ccmeEphoneActivityStatus"), ("CISCO-CCME-MIB", "ccmeEphoneKeepAliveCnt"), ("CISCO-CCME-MIB", "ccmeEphonePendingReset"), ("CISCO-CCME-MIB", "ccmeEphoneRegTime"), ("CISCO-CCME-MIB", "ccmeEphoneCurrentFirmwareRev"), ("CISCO-CCME-MIB", "ccmeEphonePreviousFirmwareRev"), ("CISCO-CCME-MIB", "ccmeEphoneLastError"), ("CISCO-CCME-MIB", "ccmeEphoneObservedType"), ("CISCO-CCME-MIB", "ccmeEphoneLoginStatus"), ("CISCO-CCME-MIB", "ccmeEphoneDnDStatus"), ("CISCO-CCME-MIB", "ccmeEphoneDebugStatus"), ("CISCO-CCME-MIB", "ccmeEphoneMediaActive"), ("CISCO-CCME-MIB", "ccmeEphoneTAPIClient"), ("CISCO-CCME-MIB", "ccmeEphoneMediaCapability"), ("CISCO-CCME-MIB", "ccmeEphoneRemote"), ("CISCO-CCME-MIB", "ccmeMohSource"), ("CISCO-CCME-MIB", "ccmeNightServiceEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmeActiveStatsGroup = ccmeActiveStatsGroup.setStatus('current')
ccmeHistoryStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 2, 3)).setObjects(("CISCO-CCME-MIB", "ccmeEphoneDnChIncoming"), ("CISCO-CCME-MIB", "ccmeEphoneDnChInAnswered"), ("CISCO-CCME-MIB", "ccmeEphoneDnChOutbound"), ("CISCO-CCME-MIB", "ccmeEphoneDnChOutAnswered"), ("CISCO-CCME-MIB", "ccmeEphoneDnChOutBusy"), ("CISCO-CCME-MIB", "ccmeEphoneDnChDiscAtConn"), ("CISCO-CCME-MIB", "ccmeEphoneDnChDiscAtAlert"), ("CISCO-CCME-MIB", "ccmeEphoneDnChDiscAtHold"), ("CISCO-CCME-MIB", "ccmeEphoneDnChDiscAtRing"), ("CISCO-CCME-MIB", "ccmeEphoneDnChDiscCauseNearEnd"), ("CISCO-CCME-MIB", "ccmeEphoneDnChDiscCauseFarEnd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmeHistoryStatsGroup = ccmeHistoryStatsGroup.setStatus('current')
ccmeNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 2, 4)).setObjects(("CISCO-CCME-MIB", "ccmeStatusChangeNotif"), ("CISCO-CCME-MIB", "ccmeEphoneUnRegThresholdExceed"), ("CISCO-CCME-MIB", "ccmeEPhoneDeceased"), ("CISCO-CCME-MIB", "ccmeEPhoneRegFailed"), ("CISCO-CCME-MIB", "ccmeEphoneLoginFailed"), ("CISCO-CCME-MIB", "ccmeNightServiceChangeNotif"), ("CISCO-CCME-MIB", "ccmeLivefeedMohFailedNotif"), ("CISCO-CCME-MIB", "ccmeMaxConferenceNotif"), ("CISCO-CCME-MIB", "ccmeKeyEphoneRegChangeNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmeNotifGroup = ccmeNotifGroup.setStatus('current')
ccmeConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 2, 5)).setObjects(("CISCO-CCME-MIB", "ccmeEphonePrimaryDn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmeConfigGroup1 = ccmeConfigGroup1.setStatus('current')
ccmeConfigGroupEM = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 2, 6)).setObjects(("CISCO-CCME-MIB", "ccmeEMUserProfileTag"), ("CISCO-CCME-MIB", "ccmeEMLogOutProfileTag"), ("CISCO-CCME-MIB", "ccmeEMUserDirNum"), ("CISCO-CCME-MIB", "ccmeEMUserDirNumOverlay"), ("CISCO-CCME-MIB", "ccmeEMLogoutDirNum"), ("CISCO-CCME-MIB", "ccmeEMLogoutDirNumOverlay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmeConfigGroupEM = ccmeConfigGroupEM.setStatus('current')
ccmeActiveStatsGroupEM = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 439, 2, 2, 7)).setObjects(("CISCO-CCME-MIB", "ccmeEMphoneTot"), ("CISCO-CCME-MIB", "ccmeEMphoneTotRegistered"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccmeActiveStatsGroupEM = ccmeActiveStatsGroupEM.setStatus('current')
mibBuilder.exportSymbols("CISCO-CCME-MIB", ccmeIntercomDnConfEntry=ccmeIntercomDnConfEntry, ccmeLoopbackDnConfTable=ccmeLoopbackDnConfTable, ccmeEphoneDnChDiscCauseNearEnd=ccmeEphoneDnChDiscCauseNearEnd, ccmeIntercomDnBargeInEnabled=ccmeIntercomDnBargeInEnabled, ccmeCorConfTable=ccmeCorConfTable, ccmEMLogOutProfileDirNumIndex=ccmEMLogOutProfileDirNumIndex, ccmeLoopbackDnCodec=ccmeLoopbackDnCodec, ccmeEMLogoutDirNumConfTable=ccmeEMLogoutDirNumConfTable, ccmeEphoneConfTable=ccmeEphoneConfTable, ciscoCcmeMIBGroups=ciscoCcmeMIBGroups, ccmeMwiExpires=ccmeMwiExpires, ccmeHistoryStats=ccmeHistoryStats, ccmePhoneFirmwareIndex=ccmePhoneFirmwareIndex, ccmeMwiSipServerTransportType=ccmeMwiSipServerTransportType, ccmeNightServiceDateStopHour=ccmeNightServiceDateStopHour, ccmeEphoneDnChNum=ccmeEphoneDnChNum, ccmePhoneFirmwareRev=ccmePhoneFirmwareRev, ccmeEphoneTemplate=ccmeEphoneTemplate, ccmeDialplanPatternTable=ccmeDialplanPatternTable, ccmeEphoneFastDialTableIndex=ccmeEphoneFastDialTableIndex, ccmeAfterHrsBlockDayStopHour=ccmeAfterHrsBlockDayStopHour, ccmeEphonePreviousFirmwareRev=ccmeEphonePreviousFirmwareRev, ccmeLoopbackDnStrip=ccmeLoopbackDnStrip, ccmeLoopbackDnforward=ccmeLoopbackDnforward, ccmeActiveStats=ccmeActiveStats, ccmeEphoneDnCFNoAnNum=ccmeEphoneDnCFNoAnNum, ccmeTransferPatternIndex=ccmeTransferPatternIndex, ccmeEphoneDnSecPref=ccmeEphoneDnSecPref, ccmeSecondaryDialTonePrefix=ccmeSecondaryDialTonePrefix, ccmeNightServiceDateStartHour=ccmeNightServiceDateStartHour, ccmeWebAdminCustomerUser=ccmeWebAdminCustomerUser, ccmeEphonePagingDn=ccmeEphonePagingDn, ccmeDialplanPatternTag=ccmeDialplanPatternTag, ccmeEnabled=ccmeEnabled, ccmeTransferPattern=ccmeTransferPattern, ccmeKeepAliveTimeout=ccmeKeepAliveTimeout, ccmeCorStartingNumber=ccmeCorStartingNumber, ccmeIntercomDnLabel=ccmeIntercomDnLabel, ccmeNightServiceDayStartHour=ccmeNightServiceDayStartHour, ccmeAfterHrsBlockDateStartHour=ccmeAfterHrsBlockDateStartHour, ccmeEphoneDnName=ccmeEphoneDnName, ccmeEphoneDnHoldAltType=ccmeEphoneDnHoldAltType, ccmeHistoryStatsGroup=ccmeHistoryStatsGroup, ccmeEphoneKeepAliveCnt=ccmeEphoneKeepAliveCnt, ccmeMohFlashMulticastIPAddr=ccmeMohFlashMulticastIPAddr, ccmeDialplanPatternEntry=ccmeDialplanPatternEntry, ccmeEphoneSpeedDialNumber=ccmeEphoneSpeedDialNumber, ccmeSysNotificationReason=ccmeSysNotificationReason, ccmeEphoneDnDStatus=ccmeEphoneDnDStatus, ccmeAfterHrsBlockDayStartMin=ccmeAfterHrsBlockDayStartMin, ccmeEphoneSpeedDialConfEntry=ccmeEphoneSpeedDialConfEntry, ccmeEphoneRegState=ccmeEphoneRegState, ccmeEphoneOverlayDN=ccmeEphoneOverlayDN, ccmeEMLogoutDirNumConfEntry=ccmeEMLogoutDirNumConfEntry, ccmeEPhoneDeceased=ccmeEPhoneDeceased, ccmeMwiSipServerIpAddress=ccmeMwiSipServerIpAddress, ccmeEphoneMediaActive=ccmeEphoneMediaActive, ccmeEphoneRegTime=ccmeEphoneRegTime, ccmeEphoneAutoLineOut=ccmeEphoneAutoLineOut, ciscoCcmeMIBConform=ciscoCcmeMIBConform, ccmeNightServiceDate=ccmeNightServiceDate, ccmeEphoneBtnDNAssocConfEntry=ccmeEphoneBtnDNAssocConfEntry, ccmeMaxRedirect=ccmeMaxRedirect, ccmeInterDigitTimeout=ccmeInterDigitTimeout, ccmeCorListDefaultEnabled=ccmeCorListDefaultEnabled, ccmeEphoneFastDialNumber=ccmeEphoneFastDialNumber, ccmeEMUserDirNumOverlay=ccmeEMUserDirNumOverlay, ccmeEphoneDnChDiscAtAlert=ccmeEphoneDnChDiscAtAlert, ccmeAlertTimeout=ccmeAlertTimeout, PYSNMP_MODULE_ID=ciscoCcmeMIB, ccmePhoneType=ccmePhoneType, ccmeDialplanExtPattern=ccmeDialplanExtPattern, ccmeDialplanExtLength=ccmeDialplanExtLength, ccmeIntercomDnExtensionNum=ccmeIntercomDnExtensionNum, ccmeMohMulticastPortNumber=ccmeMohMulticastPortNumber, ccmeEphoneKeyPhone=ccmeEphoneKeyPhone, ccmePortNumber=ccmePortNumber, ccmeEphoneDnChDiscAtRing=ccmeEphoneDnChDiscAtRing, ccmeFXOHookFlashEnabled=ccmeFXOHookFlashEnabled, ccmeVersion=ccmeVersion, ccmeEphoneTotKeyPhRegistered=ccmeEphoneTotKeyPhRegistered, ccmeLoopbackDnAutoCon=ccmeLoopbackDnAutoCon, ccmeAfterHrsBlockDayEntry=ccmeAfterHrsBlockDayEntry, ccmeEphonePendingReset=ccmeEphonePendingReset, ccmeEMphoneTotRegistered=ccmeEMphoneTotRegistered, ccmeEphoneConfEntry=ccmeEphoneConfEntry, ccmeMaxConferenceNotif=ccmeMaxConferenceNotif, ccmeNightServiceDateIndex=ccmeNightServiceDateIndex, ccmeMaxEphones=ccmeMaxEphones, ccmeConfigGroup1=ccmeConfigGroup1, ccmeEphoneUnRegThreshold=ccmeEphoneUnRegThreshold, ccmeConfigGroup=ccmeConfigGroup, ccmeUrlforDirectoriesBtn=ccmeUrlforDirectoriesBtn, ccmeLoopbackDnSuffix=ccmeLoopbackDnSuffix, ccmeConfig=ccmeConfig, ccmeEMUserDirNumConfEntry=ccmeEMUserDirNumConfEntry, ciscoCcmeMIBObjects=ciscoCcmeMIBObjects, ccmeWebGUIEditEnabled=ccmeWebGUIEditEnabled, ccmeEphoneAddon=ccmeEphoneAddon, ccmeScriptName=ccmeScriptName, ccmeEphoneSpeedDialConfTable=ccmeEphoneSpeedDialConfTable, ccmeNightServiceEnabled=ccmeNightServiceEnabled, ccmeNightServiceCode=ccmeNightServiceCode, ccmeNightServiceDateMonth=ccmeNightServiceDateMonth, ccmeEphoneDeviceName=ccmeEphoneDeviceName, ccmeNightServiceDayIndex=ccmeNightServiceDayIndex, ccmeUserAutoLogoutTo=ccmeUserAutoLogoutTo, ccmeEPhoneRegFailed=ccmeEPhoneRegFailed, ccmeAfterHrsBlockDayStartHour=ccmeAfterHrsBlockDayStartHour, ccmeMwiRelay=ccmeMwiRelay, ccmeCorVoiceRegPoolNumber=ccmeCorVoiceRegPoolNumber, ccmeEphoneFastDialConfEntry=ccmeEphoneFastDialConfEntry, ccmeEphoneSpeedDialTableIndex=ccmeEphoneSpeedDialTableIndex, ccmeEphoneButtonNumber=ccmeEphoneButtonNumber, ccmeNotifGroup=ccmeNotifGroup, ccmeEphoneCurrentFirmwareRev=ccmeEphoneCurrentFirmwareRev, ccmeDialplanPattern=ccmeDialplanPattern, ccmeEphoneDnChOutBusy=ccmeEphoneDnChOutBusy, ccmeEphoneDnType=ccmeEphoneDnType, ccmeCorTag=ccmeCorTag, ccmeCorDirection=ccmeCorDirection, ccmeEphoneIpAddress=ccmeEphoneIpAddress, ccmeEphoneAutoLineInEnabled=ccmeEphoneAutoLineInEnabled, ccmeAfterHrsBlockDateMonth=ccmeAfterHrsBlockDateMonth, ccmeEphoneActEntry=ccmeEphoneActEntry, ccmeAfterHrsBlockPattern=ccmeAfterHrsBlockPattern, ccmeTransferPatternEntry=ccmeTransferPatternEntry, ccmeBusyTimeout=ccmeBusyTimeout, ccmeCorListName=ccmeCorListName, ccmeEMUserDirNumConfTable=ccmeEMUserDirNumConfTable, ccmeEphoneKeepAlive=ccmeEphoneKeepAlive, ccmeAfterHrsBlockDate=ccmeAfterHrsBlockDate, ccmeAfterHrsBlockDateStartMin=ccmeAfterHrsBlockDateStartMin, ccmeAfterHrsBlockDateIndex=ccmeAfterHrsBlockDateIndex, ccmeEphoneFastDialName=ccmeEphoneFastDialName, ccmeEphoneDnHuntstop=ccmeEphoneDnHuntstop, ccmeAfterHrsBlockDateStopHour=ccmeAfterHrsBlockDateStopHour, ccmeEphoneTotRegistered=ccmeEphoneTotRegistered, ccmeEphoneDnChOutbound=ccmeEphoneDnChOutbound, ccmeNightServiceDayTable=ccmeNightServiceDayTable, ccmeEphoneDebugStatus=ccmeEphoneDebugStatus, ccmeNightServiceDateTable=ccmeNightServiceDateTable, ccmeUrlforServicesBtn=ccmeUrlforServicesBtn, ccmeAfterHrsBlockDateEntry=ccmeAfterHrsBlockDateEntry, ccmeEphoneDnPriPref=ccmeEphoneDnPriPref, ccmeEphoneCallLegs=ccmeEphoneCallLegs, ccmeEphoneTrapReason=ccmeEphoneTrapReason, ccmeEphoneDnChInAnswered=ccmeEphoneDnChInAnswered, ccmeTransferPatternType=ccmeTransferPatternType, ccmeAfterHrsBlockPatternTag=ccmeAfterHrsBlockPatternTag, ccmeEphoneDnChIncoming=ccmeEphoneDnChIncoming, ccmeMohMulticastIpAddressType=ccmeMohMulticastIpAddressType, ccmEMUserProfileDirNumIndex=ccmEMUserProfileDirNumIndex, ccmeNightServiceDateStartMin=ccmeNightServiceDateStartMin, ccmeAfterHrsBlockPatternEntry=ccmeAfterHrsBlockPatternEntry, ccmeIntercomDnAutoAnsEnabled=ccmeIntercomDnAutoAnsEnabled, ccmeEphoneTAPIClient=ccmeEphoneTAPIClient, ccmeEphoneActiveDN=ccmeEphoneActiveDN, ccmeEphoneDnChDiscCauseFarEnd=ccmeEphoneDnChDiscCauseFarEnd, ccmeDialplanPatternIndex=ccmeDialplanPatternIndex, ccmeLoopbackDnPrefix=ccmeLoopbackDnPrefix, ccmeEphoneRemote=ccmeEphoneRemote, ccmeMohMulticastIpAddress=ccmeMohMulticastIpAddress, ccmeEphoneDnTag=ccmeEphoneDnTag, ccmeEphoneSpeedDialLabel=ccmeEphoneSpeedDialLabel, ccmeEphoneDnCFAllNum=ccmeEphoneDnCFAllNum, ccmeEphoneLoginStatus=ccmeEphoneLoginStatus, ccmeEphoneAftHrsBlkExmptEnabled=ccmeEphoneAftHrsBlkExmptEnabled, ccmeEMLogOutProfileTag=ccmeEMLogOutProfileTag, ccmeCorConfEntry=ccmeCorConfEntry, ccmeNightServiceDay=ccmeNightServiceDay, ccmeEphoneObservedType=ccmeEphoneObservedType, ccmeAfterHrsBlockDay=ccmeAfterHrsBlockDay, ccmeMaxConferences=ccmeMaxConferences, ccmeLoopbackDnTag=ccmeLoopbackDnTag, ccmeKeyEphoneRegChangeNotif=ccmeKeyEphoneRegChangeNotif, ccmeLoopbackDnConfEntry=ccmeLoopbackDnConfEntry, ccmePhoneFirmwareEntry=ccmePhoneFirmwareEntry, ccmeNightServiceDateEntry=ccmeNightServiceDateEntry, ccmeEphoneDnCFBusyNum=ccmeEphoneDnCFBusyNum, ccmeNightServiceDayStopHour=ccmeNightServiceDayStopHour, ccmeEMUserDirNumTag=ccmeEMUserDirNumTag, ccmeEphoneUnRegThresholdExceed=ccmeEphoneUnRegThresholdExceed, ccmeEphonePagingPolicy=ccmeEphonePagingPolicy, ccmeEphoneDnChDiscAtHold=ccmeEphoneDnChDiscAtHold, ccmeConfigGroupEM=ccmeConfigGroupEM, ccmeEphoneLoginFailed=ccmeEphoneLoginFailed, ccmeEphoneTag=ccmeEphoneTag, ccmeEphonePrimaryDn=ccmeEphonePrimaryDn, ccmeEphoneNightBellSvcEnabled=ccmeEphoneNightBellSvcEnabled, ccmeEphoneBtnDNAssocConfTable=ccmeEphoneBtnDNAssocConfTable, ccmeMohFlashFile=ccmeMohFlashFile, ccmeMwiSipServerRegE164Enabled=ccmeMwiSipServerRegE164Enabled, ccmeEMLogoutDirNumOverlay=ccmeEMLogoutDirNumOverlay, ciscoCcmeMIBCompliances=ciscoCcmeMIBCompliances, ccmeActiveStatsGroup=ccmeActiveStatsGroup, ccmeMaxDirectoryNumber=ccmeMaxDirectoryNumber, ccmeAfterHrsBlockPatternTable=ccmeAfterHrsBlockPatternTable, ccmeDateFormat=ccmeDateFormat, ccmeWebAdminSystemUser=ccmeWebAdminSystemUser, ccmeNightServiceDateStopMin=ccmeNightServiceDateStopMin, ccmeAfterHrsBlockDateTable=ccmeAfterHrsBlockDateTable, ccmeEMUserProfileTag=ccmeEMUserProfileTag, ccmeWebGUITimeEnabled=ccmeWebGUITimeEnabled, ccmeMohFlashMulticastIPAddrType=ccmeMohFlashMulticastIPAddrType, ccmeTimeFormat=ccmeTimeFormat, ccmeEphoneDnHuntstopCh=ccmeEphoneDnHuntstopCh, ccmeSystemMessage=ccmeSystemMessage, ccmeMohMulticastFromFlashEnabled=ccmeMohMulticastFromFlashEnabled, ccmeIntercomDnConfTable=ccmeIntercomDnConfTable, ccmeUserLoginDeactivateTime=ccmeUserLoginDeactivateTime, ccmeEphoneFastDialConfTable=ccmeEphoneFastDialConfTable, ccmeEphoneDnMwiSipSubscrEnabled=ccmeEphoneDnMwiSipSubscrEnabled, ccmeEMLogoutDirNum=ccmeEMLogoutDirNum, ccmeCorScope=ccmeCorScope, ccmeEMphoneTot=ccmeEMphoneTot, ccmeEphoneDnChOutAnswered=ccmeEphoneDnChOutAnswered, ccmeEphoneUsername=ccmeEphoneUsername, ccmeEphoneDnMwiCapability=ccmeEphoneDnMwiCapability, ccmeLivefeedMohFailedNotif=ccmeLivefeedMohFailedNotif, ccmeVoiceMailNumber=ccmeVoiceMailNumber, ccmeIPAddressType=ccmeIPAddressType, ccmeAfterHrsBlockDayStopMin=ccmeAfterHrsBlockDayStopMin, ccmeStatusChangeNotif=ccmeStatusChangeNotif, ccmeCorTableIndex=ccmeCorTableIndex, ccmeTransferPatternTable=ccmeTransferPatternTable, ccmeNightServiceDayStopMin=ccmeNightServiceDayStopMin, ccmeEphoneDnConfigEntry=ccmeEphoneDnConfigEntry, ccmeLoopbackDnRetryTo=ccmeLoopbackDnRetryTo, ccmeMohMulticastRoute=ccmeMohMulticastRoute, ccmeEphoneDnCFNoAnTo=ccmeEphoneDnCFNoAnTo, ccmeEphoneDnChDiscAtConn=ccmeEphoneDnChDiscAtConn, CcmeNightServiceCodeString=CcmeNightServiceCodeString, ciscoCcmeMIBCompliance=ciscoCcmeMIBCompliance, ccmeEphoneLastError=ccmeEphoneLastError, ccmeIntercomDnTag=ccmeIntercomDnTag, ccmeMohSource=ccmeMohSource, ccmeEphoneDnLabel=ccmeEphoneDnLabel, ccmeMohFlashMulticastPortNum=ccmeMohFlashMulticastPortNum, ccmeEphoneModel=ccmeEphoneModel, ccmeMwiSipSvrUnsolicitedEnabled=ccmeMwiSipSvrUnsolicitedEnabled, ccmeEphoneTot=ccmeEphoneTot, ciscoCcmeMIBComplianceRev1=ciscoCcmeMIBComplianceRev1, ccmeEphoneMacAddress=ccmeEphoneMacAddress, ccmeEphoneIpAddressType=ccmeEphoneIpAddressType, ccmeEphoneActivityStatus=ccmeEphoneActivityStatus, ccmeActiveStatsGroupEM=ccmeActiveStatsGroupEM, ccmeCorEndingNumber=ccmeCorEndingNumber, ccmeNightServiceDayStartMin=ccmeNightServiceDayStartMin, ccmeTransferSystem=ccmeTransferSystem, ccmeAfterHrsBlockDateStopMin=ccmeAfterHrsBlockDateStopMin, ccmeDialplanAllowRegiEnabled=ccmeDialplanAllowRegiEnabled, ccmeEphoneDnPriNum=ccmeEphoneDnPriNum, ccmeAfterHrsBlockDayIndex=ccmeAfterHrsBlockDayIndex)
mibBuilder.exportSymbols("CISCO-CCME-MIB", ccmeEphoneDnHoldAltTo=ccmeEphoneDnHoldAltTo, ccmeEphoneDnConfigTable=ccmeEphoneDnConfigTable, ccmeNightServiceDayEntry=ccmeNightServiceDayEntry, ccmeEphoneTotKeyPhConfigured=ccmeEphoneTotKeyPhConfigured, ccmeMIBNotifications=ccmeMIBNotifications, ciscoCcmeMIBComplianceRev2=ciscoCcmeMIBComplianceRev2, ccmeAfterHrsBlockDayTable=ccmeAfterHrsBlockDayTable, ccmeEphoneKeepConfEnabled=ccmeEphoneKeepConfEnabled, ccmeNotificationEnable=ccmeNotificationEnable, ccmeEphoneMediaCapability=ccmeEphoneMediaCapability, ccmeAfterHrsBlockPatternAllTime=ccmeAfterHrsBlockPatternAllTime, ccmeEphoneSpeedDialTag=ccmeEphoneSpeedDialTag, CcmeDigitPatternString=CcmeDigitPatternString, ccmeEMUserDirNum=ccmeEMUserDirNum, ciscoCcmeMIB=ciscoCcmeMIB, ccmeIPAddress=ccmeIPAddress, ciscoCcmeMIBNotifs=ciscoCcmeMIBNotifs, ccmeEphoneDnMode=ccmeEphoneDnMode, ccmeEphoneDnSecNum=ccmeEphoneDnSecNum, ccmeSysTrapSeverity=ccmeSysTrapSeverity, ccmeEMLogoutDirNumTag=ccmeEMLogoutDirNumTag, ccmeEphoneDnChStatsHistoryTable=ccmeEphoneDnChStatsHistoryTable, ccmeMwiSipServerPortNumber=ccmeMwiSipServerPortNumber, ccmeEphoneDnChStatsHistoryEntry=ccmeEphoneDnChStatsHistoryEntry, ccmeEphoneDnScriptName=ccmeEphoneDnScriptName, ccmePhoneFirmwareTable=ccmePhoneFirmwareTable, ccmeNightServiceChangeNotif=ccmeNightServiceChangeNotif, ccmeEphoneActTable=ccmeEphoneActTable)
