#
# PySNMP MIB module CYCLADES-ACS-SYS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYCLADES-ACS-SYS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:18:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
cyACSMgmt, = mibBuilder.importSymbols("CYCLADES-ACS-MIB", "cyACSMgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, ObjectIdentity, NotificationType, IpAddress, TimeTicks, Bits, iso, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "NotificationType", "IpAddress", "TimeTicks", "Bits", "iso", "Integer32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyACSSys = ModuleIdentity((1, 3, 6, 1, 4, 1, 2925, 4, 1))
cyACSSys.setRevisions(('2005-08-29 00:00', '2005-08-29 00:00', '2003-06-30 00:00', '2002-10-10 00:00', '2002-09-20 00:00',))
if mibBuilder.loadTexts: cyACSSys.setLastUpdated('200508290000Z')
if mibBuilder.loadTexts: cyACSSys.setOrganization('Cyclades Corporation')
cyACSpname = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSpname.setStatus('current')
cyACSversion = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSversion.setStatus('current')
cyACSPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 2925, 4, 1, 3))
if mibBuilder.loadTexts: cyACSPower.setStatus('current')
cyACSPwNum = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSPwNum.setStatus('current')
cyACSPw1 = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noinstalled", 0), ("powerON", 1), ("powerOFF", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSPw1.setStatus('current')
cyACSPw2 = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noinstalled", 0), ("powerON", 1), ("powerOFF", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSPw2.setStatus('current')
cyACSPcmcia = ObjectIdentity((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4))
if mibBuilder.loadTexts: cyACSPcmcia.setStatus('current')
cyACSNPcmcia = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSNPcmcia.setStatus('current')
cyCardIdentTable = MibTable((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 2), )
if mibBuilder.loadTexts: cyCardIdentTable.setStatus('current')
cyCardIdentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 2, 1), ).setIndexNames((0, "CYCLADES-ACS-SYS-MIB", "cyCardIdentIndex"))
if mibBuilder.loadTexts: cyCardIdentEntry.setStatus('current')
cyCardIdentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardIdentIndex.setStatus('current')
cyCardIdentProd = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardIdentProd.setStatus('current')
cyCardIdentMan = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardIdentMan.setStatus('current')
cyCardIdentFunc = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardIdentFunc.setStatus('current')
cyCardIdentPCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardIdentPCI.setStatus('current')
cyCardConfTable = MibTable((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3), )
if mibBuilder.loadTexts: cyCardConfTable.setStatus('current')
cyCardConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1), ).setIndexNames((0, "CYCLADES-ACS-SYS-MIB", "cyCardConfIndex"))
if mibBuilder.loadTexts: cyCardConfEntry.setStatus('current')
cyCardConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardConfIndex.setStatus('current')
cyCardConfPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardConfPower.setStatus('current')
cyCardConfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardConfType.setStatus('current')
cyCardConfInter = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardConfInter.setStatus('current')
cyCardConfFunc = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardConfFunc.setStatus('current')
cyCardConfCardv = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardConfCardv.setStatus('current')
cyCardConfPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardConfPort1.setStatus('current')
cyCardConfPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardConfPort2.setStatus('current')
cyCardStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 4), )
if mibBuilder.loadTexts: cyCardStatusTable.setStatus('current')
cyCardStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 4, 1), ).setIndexNames((0, "CYCLADES-ACS-SYS-MIB", "cyCardStatusIndex"))
if mibBuilder.loadTexts: cyCardStatusEntry.setStatus('current')
cyCardStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardStatusIndex.setStatus('current')
cyCardStatusCard = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardStatusCard.setStatus('current')
cyCardStatusFunc = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 1, 4, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyCardStatusFunc.setStatus('current')
cyACSFlashSize = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSFlashSize.setStatus('current')
cyACSRAMSize = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSRAMSize.setStatus('current')
cyACSCPUfreq = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSCPUfreq.setStatus('current')
cyACSDevId = MibScalar((1, 3, 6, 1, 4, 1, 2925, 4, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyACSDevId.setStatus('current')
mibBuilder.exportSymbols("CYCLADES-ACS-SYS-MIB", cyACSFlashSize=cyACSFlashSize, cyACSCPUfreq=cyACSCPUfreq, cyCardIdentProd=cyCardIdentProd, cyCardStatusEntry=cyCardStatusEntry, cyCardIdentIndex=cyCardIdentIndex, cyCardStatusCard=cyCardStatusCard, cyACSPwNum=cyACSPwNum, cyACSPower=cyACSPower, cyCardIdentFunc=cyCardIdentFunc, cyCardIdentEntry=cyCardIdentEntry, PYSNMP_MODULE_ID=cyACSSys, cyCardConfType=cyCardConfType, cyCardConfPort1=cyCardConfPort1, cyCardIdentPCI=cyCardIdentPCI, cyACSDevId=cyACSDevId, cyACSPcmcia=cyACSPcmcia, cyACSPw2=cyACSPw2, cyCardConfInter=cyCardConfInter, cyCardConfCardv=cyCardConfCardv, cyCardConfPort2=cyCardConfPort2, cyACSpname=cyACSpname, cyACSRAMSize=cyACSRAMSize, cyACSversion=cyACSversion, cyACSNPcmcia=cyACSNPcmcia, cyCardConfTable=cyCardConfTable, cyCardConfEntry=cyCardConfEntry, cyCardConfPower=cyCardConfPower, cyCardIdentTable=cyCardIdentTable, cyCardStatusFunc=cyCardStatusFunc, cyCardStatusIndex=cyCardStatusIndex, cyCardConfIndex=cyCardConfIndex, cyCardStatusTable=cyCardStatusTable, cyACSSys=cyACSSys, cyCardConfFunc=cyCardConfFunc, cyACSPw1=cyACSPw1, cyCardIdentMan=cyCardIdentMan)
