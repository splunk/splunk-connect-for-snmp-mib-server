#
# PySNMP MIB module SONUS-SONET-APS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-SONET-APS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:02:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Unsigned32, MibIdentifier, IpAddress, TimeTicks, iso, Bits, NotificationType, Integer32, ObjectIdentity, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Unsigned32", "MibIdentifier", "IpAddress", "TimeTicks", "iso", "Bits", "NotificationType", "Integer32", "ObjectIdentity", "Gauge32", "Counter64")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
sonusServicesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusServicesMIBs")
sonusSonetApsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9))
if mibBuilder.loadTexts: sonusSonetApsMIB.setLastUpdated('200102030000Z')
if mibBuilder.loadTexts: sonusSonetApsMIB.setOrganization('Sonus Networks, Inc.')
class ApsK1K2(TextualConvention, Integer32):
    reference = 'This Textual Convention describes an object that contains the K1 and K2 bytes in the SONET APS channel protocol message field. K1 is located in the first octet. Bits 1-4 of the K1 byte indicate a request. 1111 Lockout of Protection 1110 Forced Switch 1101 SF - High Priority 1100 SF - Low Priority 1011 SD - High Priority 1010 SD - Low Priority 1001 not used 1000 Manual Switch 0111 not used 0110 Wait-to-Restore 0101 not used 0100 Exercise 0011 not used 0010 Reverse Request 0001 Do Not Revert 0000 No Request Bits 5-8 of the K1 byte indicate the channel associated with the request defined in bits 1-4. 0 is the Null channel 1-14 are working channels. 15 is the extra traffic channel K2 is located in the second octet. Bits 1-4 of the K2 byte indicate a channel. The channel is defined with the same syntax as K1 Bits 5-8. Bits 5 of the K2 byte indicates the architecture. 0 if the architecture is 1+1 1 if the architecture is 1:n Bits 6-8 of the K2 byte indicates the mode. 000 - 011 are reserved for future use 100 indicates the mode is unidirectional 101 indicates the mode is bidirectional 110 RDI-L 111 AIS-L '
    status = 'current'

sonusSonetApsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1))
sonusApsGroupCount = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupCount.setStatus('current')
sonusApsGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2), )
if mibBuilder.loadTexts: sonusApsGroupTable.setStatus('current')
sonusApsGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1), ).setIndexNames((0, "SONUS-SONET-APS-MIB", "sonusApsGroupId"))
if mibBuilder.loadTexts: sonusApsGroupEntry.setStatus('current')
sonusApsGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: sonusApsGroupId.setStatus('current')
sonusApsGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupStatus.setStatus('current')
sonusApsGroupArchitecture = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onePlusOne", 1), ("oneToN", 2), ("resilientUNI", 3))).clone('onePlusOne')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupArchitecture.setStatus('current')
sonusApsGroupAdminDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unidirectional", 1), ("bidirectional", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupAdminDirection.setStatus('current')
sonusApsGroupAdminSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonrevertive", 1), ("revertive", 2))).clone('nonrevertive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupAdminSwitching.setStatus('current')
sonusApsGroupExtraTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupExtraTraffic.setStatus('current')
sonusApsGroupSignalFailBerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 5)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupSignalFailBerThreshold.setStatus('current')
sonusApsGroupSignalDegradeBerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 9)).clone(9)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupSignalDegradeBerThreshold.setStatus('current')
sonusApsGroupWaitToRestoreTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 12)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupWaitToRestoreTime.setStatus('current')
sonusApsGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsGroupName.setStatus('current')
sonusApsGroupSwitchedChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupSwitchedChannel.setStatus('current')
sonusApsGroupOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 12), Bits().clone(namedValues=NamedValues(("extraTraffic", 0), ("protectionSwitchingByteDefect", 1), ("channelMismatch", 2), ("apsModeMismatch", 3), ("farEndProtectionLineDefect", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupOperStatus.setStatus('current')
sonusApsGroupK1K2Received = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 13), ApsK1K2()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupK1K2Received.setStatus('current')
sonusApsGroupK1K2Transmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 14), ApsK1K2()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupK1K2Transmitted.setStatus('current')
sonusApsGroupProtectionSwitchingByteFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupProtectionSwitchingByteFailures.setStatus('current')
sonusApsGroupChannelMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupChannelMismatches.setStatus('current')
sonusApsGroupModeMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupModeMismatches.setStatus('current')
sonusApsGroupFarEndProtectionLineFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupFarEndProtectionLineFailures.setStatus('current')
sonusApsGroupCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 2, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsGroupCreationTime.setStatus('current')
sonusApsChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3), )
if mibBuilder.loadTexts: sonusApsChannelTable.setStatus('current')
sonusApsChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1), ).setIndexNames((0, "SONUS-SONET-APS-MIB", "sonusApsGroupId"), (0, "SONUS-SONET-APS-MIB", "sonusApsChannelNumber"))
if mibBuilder.loadTexts: sonusApsChannelEntry.setStatus('current')
sonusApsChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: sonusApsChannelNumber.setStatus('current')
sonusApsChannelLineId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsChannelLineId.setStatus('current')
sonusApsChannelPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("low", 1), ("high", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsChannelPriority.setStatus('current')
sonusApsChannelSwitchCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("clear", 1), ("lockoutOfProtection", 2), ("forcedSwitchOfWorking", 3), ("forcedSwitchOfProtection", 4), ("manualSwitchOfWorking", 5), ("manualSwitchOfProtection", 6), ("exercise", 7))).clone('clear')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsChannelSwitchCommand.setStatus('current')
sonusApsChannelControlCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lockoutWorkingChannel", 1), ("clearLockout", 2))).clone('clearLockout')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsChannelControlCommand.setStatus('current')
sonusApsChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 6), Bits().clone(namedValues=NamedValues(("sdCondition", 0), ("sfCondition", 1), ("lockedOut", 2), ("switched", 3), ("bothLinesFailed", 4), ("protectionLineBusy", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsChannelStatus.setStatus('current')
sonusApsChannelOperDirectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unidirectional", 1), ("bidirectional", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsChannelOperDirectionMode.setStatus('current')
sonusApsChannelSignalDegrades = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsChannelSignalDegrades.setStatus('current')
sonusApsChannelSignalFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsChannelSignalFails.setStatus('current')
sonusApsChannelSwitchovers = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsChannelSwitchovers.setStatus('current')
sonusApsChannelLastSwitchover = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsChannelLastSwitchover.setStatus('current')
sonusApsChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusApsChannelRowStatus.setStatus('current')
sonusApsLineTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 4), )
if mibBuilder.loadTexts: sonusApsLineTable.setStatus('current')
sonusApsLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sonusApsLineEntry.setStatus('current')
sonusApsLineGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 4, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsLineGroupId.setStatus('current')
sonusApsLineChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusApsLineChannelNumber.setStatus('current')
sonusSonetApsMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 2))
sonusSonetApsMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 2, 0))
sonusSonetApsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 3))
sonusSonetApsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 3, 1))
sonusSonetApsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 3, 2))
sonusApsTrapProtectionSwitchingByteFailure = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 2, 0, 1)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsGroupProtectionSwitchingByteFailures"), ("SONUS-SONET-APS-MIB", "sonusApsGroupOperStatus"))
if mibBuilder.loadTexts: sonusApsTrapProtectionSwitchingByteFailure.setStatus('current')
sonusApsTrapChannelMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 2, 0, 2)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsGroupChannelMismatches"), ("SONUS-SONET-APS-MIB", "sonusApsGroupOperStatus"))
if mibBuilder.loadTexts: sonusApsTrapChannelMismatch.setStatus('current')
sonusApsTrapModeMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 2, 0, 3)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsGroupModeMismatches"), ("SONUS-SONET-APS-MIB", "sonusApsGroupOperStatus"))
if mibBuilder.loadTexts: sonusApsTrapModeMismatch.setStatus('current')
sonusApsTrapFarEndProtectionLineFailure = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 2, 0, 4)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsGroupFarEndProtectionLineFailures"), ("SONUS-SONET-APS-MIB", "sonusApsGroupOperStatus"))
if mibBuilder.loadTexts: sonusApsTrapFarEndProtectionLineFailure.setStatus('current')
sonusApsTrapSwitchover = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 2, 0, 5)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsChannelSwitchovers"), ("SONUS-SONET-APS-MIB", "sonusApsChannelStatus"))
if mibBuilder.loadTexts: sonusApsTrapSwitchover.setStatus('current')
sonusApsGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 3, 1, 1)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsGroupCount"), ("SONUS-SONET-APS-MIB", "sonusApsGroupStatus"), ("SONUS-SONET-APS-MIB", "sonusApsGroupArchitecture"), ("SONUS-SONET-APS-MIB", "sonusApsGroupAdminDirection"), ("SONUS-SONET-APS-MIB", "sonusApsGroupAdminSwitching"), ("SONUS-SONET-APS-MIB", "sonusApsGroupExtraTraffic"), ("SONUS-SONET-APS-MIB", "sonusApsGroupSignalFailBerThreshold"), ("SONUS-SONET-APS-MIB", "sonusApsGroupSignalDegradeBerThreshold"), ("SONUS-SONET-APS-MIB", "sonusApsGroupWaitToRestoreTime"), ("SONUS-SONET-APS-MIB", "sonusApsGroupName"), ("SONUS-SONET-APS-MIB", "sonusApsGroupSwitchedChannel"), ("SONUS-SONET-APS-MIB", "sonusApsGroupOperStatus"), ("SONUS-SONET-APS-MIB", "sonusApsGroupK1K2Received"), ("SONUS-SONET-APS-MIB", "sonusApsGroupK1K2Transmitted"), ("SONUS-SONET-APS-MIB", "sonusApsGroupProtectionSwitchingByteFailures"), ("SONUS-SONET-APS-MIB", "sonusApsGroupChannelMismatches"), ("SONUS-SONET-APS-MIB", "sonusApsGroupModeMismatches"), ("SONUS-SONET-APS-MIB", "sonusApsGroupFarEndProtectionLineFailures"), ("SONUS-SONET-APS-MIB", "sonusApsGroupCreationTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sonusApsGroupGroup = sonusApsGroupGroup.setStatus('current')
sonusApsChannelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 3, 1, 2)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsChannelLineId"), ("SONUS-SONET-APS-MIB", "sonusApsChannelPriority"), ("SONUS-SONET-APS-MIB", "sonusApsChannelSwitchCommand"), ("SONUS-SONET-APS-MIB", "sonusApsChannelControlCommand"), ("SONUS-SONET-APS-MIB", "sonusApsChannelStatus"), ("SONUS-SONET-APS-MIB", "sonusApsChannelOperDirectionMode"), ("SONUS-SONET-APS-MIB", "sonusApsChannelSignalDegrades"), ("SONUS-SONET-APS-MIB", "sonusApsChannelSignalFails"), ("SONUS-SONET-APS-MIB", "sonusApsChannelSwitchovers"), ("SONUS-SONET-APS-MIB", "sonusApsChannelLastSwitchover"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sonusApsChannelGroup = sonusApsChannelGroup.setStatus('current')
sonusApsLineGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 3, 1, 3)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsLineGroupId"), ("SONUS-SONET-APS-MIB", "sonusApsLineChannelNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sonusApsLineGroup = sonusApsLineGroup.setStatus('current')
sonusApsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 3, 1, 4)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsTrapProtectionSwitchingByteFailure"), ("SONUS-SONET-APS-MIB", "sonusApsTrapChannelMismatch"), ("SONUS-SONET-APS-MIB", "sonusApsTrapModeMismatch"), ("SONUS-SONET-APS-MIB", "sonusApsTrapFarEndProtectionLineFailure"), ("SONUS-SONET-APS-MIB", "sonusApsTrapSwitchover"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sonusApsNotificationGroup = sonusApsNotificationGroup.setStatus('current')
sonusSonetApsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2879, 2, 5, 9, 3, 2, 1)).setObjects(("SONUS-SONET-APS-MIB", "sonusApsGroupGroup"), ("SONUS-SONET-APS-MIB", "sonusApsChannelGroup"), ("SONUS-SONET-APS-MIB", "sonusApsLineGroup"), ("SONUS-SONET-APS-MIB", "sonusApsNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sonusSonetApsCompliance = sonusSonetApsCompliance.setStatus('current')
mibBuilder.exportSymbols("SONUS-SONET-APS-MIB", sonusApsChannelEntry=sonusApsChannelEntry, sonusApsChannelSignalFails=sonusApsChannelSignalFails, sonusApsTrapProtectionSwitchingByteFailure=sonusApsTrapProtectionSwitchingByteFailure, sonusApsGroupK1K2Received=sonusApsGroupK1K2Received, sonusApsGroupModeMismatches=sonusApsGroupModeMismatches, sonusApsChannelSwitchCommand=sonusApsChannelSwitchCommand, sonusApsGroupOperStatus=sonusApsGroupOperStatus, sonusApsChannelOperDirectionMode=sonusApsChannelOperDirectionMode, sonusApsGroupCount=sonusApsGroupCount, sonusSonetApsMIBNotifications=sonusSonetApsMIBNotifications, sonusApsTrapFarEndProtectionLineFailure=sonusApsTrapFarEndProtectionLineFailure, sonusApsGroupCreationTime=sonusApsGroupCreationTime, sonusApsLineGroupId=sonusApsLineGroupId, sonusSonetApsCompliances=sonusSonetApsCompliances, sonusSonetApsCompliance=sonusSonetApsCompliance, sonusApsGroupAdminDirection=sonusApsGroupAdminDirection, sonusApsGroupSignalFailBerThreshold=sonusApsGroupSignalFailBerThreshold, sonusApsGroupFarEndProtectionLineFailures=sonusApsGroupFarEndProtectionLineFailures, sonusApsChannelLineId=sonusApsChannelLineId, ApsK1K2=ApsK1K2, sonusSonetApsGroups=sonusSonetApsGroups, sonusApsChannelLastSwitchover=sonusApsChannelLastSwitchover, sonusApsGroupSwitchedChannel=sonusApsGroupSwitchedChannel, sonusApsChannelPriority=sonusApsChannelPriority, sonusApsGroupSignalDegradeBerThreshold=sonusApsGroupSignalDegradeBerThreshold, sonusSonetApsConformance=sonusSonetApsConformance, sonusApsChannelGroup=sonusApsChannelGroup, sonusApsLineGroup=sonusApsLineGroup, sonusApsLineEntry=sonusApsLineEntry, sonusApsLineTable=sonusApsLineTable, sonusApsGroupId=sonusApsGroupId, PYSNMP_MODULE_ID=sonusSonetApsMIB, sonusApsGroupGroup=sonusApsGroupGroup, sonusApsGroupEntry=sonusApsGroupEntry, sonusApsTrapChannelMismatch=sonusApsTrapChannelMismatch, sonusApsGroupArchitecture=sonusApsGroupArchitecture, sonusApsGroupProtectionSwitchingByteFailures=sonusApsGroupProtectionSwitchingByteFailures, sonusApsGroupStatus=sonusApsGroupStatus, sonusApsChannelTable=sonusApsChannelTable, sonusApsChannelSignalDegrades=sonusApsChannelSignalDegrades, sonusSonetApsMIBNotificationsPrefix=sonusSonetApsMIBNotificationsPrefix, sonusApsChannelStatus=sonusApsChannelStatus, sonusApsChannelRowStatus=sonusApsChannelRowStatus, sonusApsTrapSwitchover=sonusApsTrapSwitchover, sonusApsLineChannelNumber=sonusApsLineChannelNumber, sonusApsTrapModeMismatch=sonusApsTrapModeMismatch, sonusApsGroupAdminSwitching=sonusApsGroupAdminSwitching, sonusApsChannelNumber=sonusApsChannelNumber, sonusApsGroupK1K2Transmitted=sonusApsGroupK1K2Transmitted, sonusApsChannelControlCommand=sonusApsChannelControlCommand, sonusSonetApsMIBObjects=sonusSonetApsMIBObjects, sonusApsNotificationGroup=sonusApsNotificationGroup, sonusApsGroupName=sonusApsGroupName, sonusSonetApsMIB=sonusSonetApsMIB, sonusApsGroupWaitToRestoreTime=sonusApsGroupWaitToRestoreTime, sonusApsChannelSwitchovers=sonusApsChannelSwitchovers, sonusApsGroupTable=sonusApsGroupTable, sonusApsGroupExtraTraffic=sonusApsGroupExtraTraffic, sonusApsGroupChannelMismatches=sonusApsGroupChannelMismatches)
