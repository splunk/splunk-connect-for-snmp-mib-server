#
# PySNMP MIB module CADANT-CMTS-LAYER2CMTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-CMTS-LAYER2CMTS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:27:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
Timeout, BridgeId = mibBuilder.importSymbols("BRIDGE-MIB", "Timeout", "BridgeId")
cadLayer2, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadLayer2")
CardId, DuplexStatus, CadBridgeGroupId, PortType, CadBridgePortType, PrimaryState, PortId, AdminState, CerCardSubType, MacPortId, CerCardType, MacPortIdWithInvalid, SecondaryState = mibBuilder.importSymbols("CADANT-TC", "CardId", "DuplexStatus", "CadBridgeGroupId", "PortType", "CadBridgePortType", "PrimaryState", "PortId", "AdminState", "CerCardSubType", "MacPortId", "CerCardType", "MacPortIdWithInvalid", "SecondaryState")
IfDirection, AttributeMask = mibBuilder.importSymbols("DOCS-IF3-MIB", "IfDirection", "AttributeMask")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetVersion, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetVersion")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter32, iso, Integer32, Bits, TimeTicks, IpAddress, NotificationType, MibIdentifier, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "iso", "Integer32", "Bits", "TimeTicks", "IpAddress", "NotificationType", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64")
TextualConvention, RowStatus, TimeInterval, MacAddress, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TimeInterval", "MacAddress", "DisplayString", "TruthValue")
cadLayer2Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1))
cadLayer2Mib.setRevisions(('2015-08-25 00:00', '2015-06-17 00:00', '2015-04-15 00:00', '2015-04-01 00:00', '2015-01-21 00:00', '2015-01-20 00:00', '2014-12-09 00:00', '2014-12-08 00:00', '2014-12-03 00:00', '2014-11-18 00:00', '2014-10-15 00:00', '2014-10-14 00:00', '2014-09-19 00:00', '2014-08-01 00:00', '2014-07-03 00:00', '2014-06-24 00:00', '2014-03-10 00:00', '2014-01-15 00:00', '2013-10-30 00:00', '2013-08-08 00:00', '2013-05-30 00:00', '2013-05-17 00:00', '2013-05-08 00:00', '2013-04-29 00:00', '2013-03-25 00:00', '2013-01-03 00:00', '2012-11-20 00:00', '2011-10-05 00:00', '2011-08-17 00:00', '2011-03-03 00:00', '2010-08-10 00:00', '2010-06-23 00:00', '2010-03-01 00:00', '2009-10-22 00:00', '2009-10-12 00:00', '2009-09-02 00:00', '2009-07-17 00:00', '2009-01-12 00:00', '2009-01-07 00:00', '2009-01-05 00:00', '2008-11-11 00:00', '2008-09-30 00:00', '2008-02-08 00:00', '2008-02-06 00:00', '2008-01-22 00:00', '2008-01-03 00:00', '2007-12-14 00:00', '2007-08-28 00:00', '2007-08-13 00:00', '2007-05-31 00:00', '2007-05-14 00:00', '2007-05-08 00:00', '2007-03-01 00:00', '2007-02-07 00:00', '2007-02-05 00:00', '2006-11-27 00:00', '2006-11-01 00:00', '2006-10-13 00:00', '2006-09-12 00:00', '2006-09-01 00:00', '2006-08-02 00:00', '2006-01-31 00:00', '2006-01-27 00:00', '2006-01-04 00:00', '2005-10-24 00:00', '2003-09-26 00:00', '2002-10-21 00:00', '2001-10-18 00:00', '2001-09-22 00:00',))
if mibBuilder.loadTexts: cadLayer2Mib.setLastUpdated('201508250000Z')
if mibBuilder.loadTexts: cadLayer2Mib.setOrganization('ARRIS Group, Inc.')
class CadTftpEnforceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("disabled", 0), ("enabled", 1), ("mark-only", 2), ("lock", 3), ("block", 4))

class CadDynamicSecretType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("disabled", 0), ("reject", 1), ("mark", 2), ("lock", 3), ("block", 4))

cadBridgeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1))
cadBridgeGroupGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 1))
cadBridgeGroupMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBridgeGroupMaxNum.setStatus('current')
cadBridgeGroupTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 2), )
if mibBuilder.loadTexts: cadBridgeGroupTable.setStatus('current')
cadBridgeGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 2, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgIndex"))
if mibBuilder.loadTexts: cadBridgeGroupEntry.setStatus('current')
cadBgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 2, 1, 1), CadBridgeGroupId())
if mibBuilder.loadTexts: cadBgIndex.setStatus('current')
cadBgName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBgName.setStatus('current')
cadBgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBgRowStatus.setStatus('current')
cadBridgeGroupStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 10), )
if mibBuilder.loadTexts: cadBridgeGroupStatsTable.setStatus('current')
cadBridgeGroupStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 10, 1), )
cadBridgeGroupEntry.registerAugmentions(("CADANT-CMTS-LAYER2CMTS-MIB", "cadBridgeGroupStatsEntry"))
cadBridgeGroupStatsEntry.setIndexNames(*cadBridgeGroupEntry.getIndexNames())
if mibBuilder.loadTexts: cadBridgeGroupStatsEntry.setStatus('current')
cadBgLeaderBgpId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 10, 1, 1), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgLeaderBgpId.setStatus('current')
cadBgMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 10, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgMacAddress.setStatus('current')
cadBridgePortTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11), )
if mibBuilder.loadTexts: cadBridgePortTable.setStatus('current')
cadBridgePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgpId"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgpType"))
if mibBuilder.loadTexts: cadBridgePortEntry.setStatus('current')
cadBgpGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1, 1), CadBridgeGroupId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBgpGroupId.setStatus('current')
cadBgpId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cadBgpId.setStatus('current')
cadBgpCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1, 3), CardId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpCardId.setStatus('current')
cadBgpCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1, 4), CerCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpCardType.setStatus('current')
cadBgpPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1, 5), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpPortId.setStatus('current')
cadBgpType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1, 6), CadBridgePortType())
if mibBuilder.loadTexts: cadBgpType.setStatus('current')
cadBgpBundleGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1, 10), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadBgpBundleGroupId.setStatus('current')
cadBgpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 11, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpMacAddress.setStatus('current')
cadBridgeGroupPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 12), )
if mibBuilder.loadTexts: cadBridgeGroupPortStatusTable.setStatus('current')
cadBridgeGroupPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 12, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgpStatGroupId"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgpStatMacIfIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadBgpStatPhyIfIndex"))
if mibBuilder.loadTexts: cadBridgeGroupPortStatusEntry.setStatus('current')
cadBgpStatGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 12, 1, 1), CadBridgeGroupId())
if mibBuilder.loadTexts: cadBgpStatGroupId.setStatus('current')
cadBgpStatMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 12, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cadBgpStatMacIfIndex.setStatus('current')
cadBgpStatPhyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 12, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: cadBgpStatPhyIfIndex.setStatus('current')
cadBgpStatPhyCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 12, 1, 4), CardId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpStatPhyCardId.setStatus('current')
cadBgpStatPhyPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 12, 1, 5), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadBgpStatPhyPortId.setStatus('current')
cadDot3adAggTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13), )
if mibBuilder.loadTexts: cadDot3adAggTable.setStatus('current')
cadDot3adAggEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadDot3adAggId"))
if mibBuilder.loadTexts: cadDot3adAggEntry.setStatus('current')
cadDot3adAggId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: cadDot3adAggId.setStatus('current')
cadDot3adAggIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDot3adAggIndex.setStatus('current')
cadDot3adAggMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDot3adAggMacAddress.setStatus('current')
cadDot3adAggLacpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDot3adAggLacpEnable.setStatus('current')
cadDot3adAggLacpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2))).clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDot3adAggLacpMode.setStatus('current')
cadDot3adAggLacpRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("slow", 1), ("fast", 2))).clone('slow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDot3adAggLacpRate.setStatus('current')
cadDot3adAggMinLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDot3adAggMinLinks.setStatus('current')
cadDot3adAggDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDot3adAggDescription.setStatus('current')
cadDot3adAggTrapInh = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 9), Bits().clone(namedValues=NamedValues(("primary", 0), ("secondary", 1), ("duplex", 2), ("linkUpLinkDown", 3))).clone(hexValue="e0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDot3adAggTrapInh.setStatus('current')
cadDot3adAggAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 10), AdminState().clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDot3adAggAdminState.setStatus('current')
cadDot3adAggPrState = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 11), PrimaryState().clone('oos')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDot3adAggPrState.setStatus('current')
cadDot3adAggSecState = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 12), SecondaryState().clone('manual')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDot3adAggSecState.setStatus('current')
cadDot3adAggRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDot3adAggRowStatus.setStatus('current')
cadDot3adAggSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 13, 1, 14), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDot3adAggSystemID.setStatus('current')
cadDot3adParams = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 14))
cadDot3adSystemPriority = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 1, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadDot3adSystemPriority.setStatus('current')
cadAging = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2))
cadAgingCPEAgingInterval = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 1), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(10, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingCPEAgingInterval.setStatus('current')
cadAgingSFAgingInterval = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 2), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(1, 1)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingSFAgingInterval.setStatus('current')
cadAgingStaleMACAgingInterval = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(604800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingStaleMACAgingInterval.setStatus('current')
cadAgingArpCacheAgingInterval = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(600, 360000), )).clone(1200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheAgingInterval.setStatus('current')
cadAgingIdleMACAgingInterval = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingIdleMACAgingInterval.setStatus('current')
cadAgingArpCacheSearchingRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 86400000)).clone(333)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheSearchingRateLimit.setStatus('current')
cadAgingArpCacheSearchingMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheSearchingMaxNumber.setStatus('current')
cadAgingArpCacheNotPresentRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 86400000)).clone(333)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheNotPresentRateLimit.setStatus('current')
cadAgingArpCacheNotPresentMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheNotPresentMaxNumber.setStatus('current')
cadAgingArpCacheNotPresentMaxTime = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheNotPresentMaxTime.setStatus('current')
cadAgingArpCacheNotPresentMinTime = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheNotPresentMinTime.setStatus('current')
cadAgingArpCacheSearchingGlobalMaxRate = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setUnits('packets/second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheSearchingGlobalMaxRate.setStatus('current')
cadAgingArpCacheNotPresentGlobalMaxRate = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setUnits('packets/second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheNotPresentGlobalMaxRate.setStatus('current')
cadAgingNDCacheAgingInterval = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(180, 360000), )).clone(1200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheAgingInterval.setStatus('current')
cadAgingNDCacheSearchingRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 86400000)).clone(333)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheSearchingRateLimit.setStatus('current')
cadAgingNDCacheSearchingMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheSearchingMaxNumber.setStatus('current')
cadAgingNDCacheNotPresentRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 86400000)).clone(333)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheNotPresentRateLimit.setStatus('current')
cadAgingNDCacheNotPresentMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheNotPresentMaxNumber.setStatus('current')
cadAgingNDCacheNotPresentMaxTime = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheNotPresentMaxTime.setStatus('current')
cadAgingNDCacheNotPresentMinTime = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheNotPresentMinTime.setStatus('current')
cadAgingNDCacheSearchingGlobalMaxRate = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setUnits('packets/second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheSearchingGlobalMaxRate.setStatus('current')
cadAgingNDCacheNotPresentGlobalMaxRate = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setUnits('packets/second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheNotPresentGlobalMaxRate.setStatus('current')
cadAgingArpCacheSearchingCableUnicast = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheSearchingCableUnicast.setStatus('current')
cadAgingArpCacheSearchingCableBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 24), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingArpCacheSearchingCableBroadcast.setStatus('current')
cadAgingNDCacheSearchingCableUnicast = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheSearchingCableUnicast.setStatus('current')
cadAgingNDCacheSearchingCableMulticast = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 2, 26), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAgingNDCacheSearchingCableMulticast.setStatus('current')
arrisCerIpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 5))
cerIpGratuitousArpPeriod = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 5, 1), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cerIpGratuitousArpPeriod.setStatus('current')
cadLayer2MibGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 3))
cadAgingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 3, 1)).setObjects(("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingCPEAgingInterval"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingSFAgingInterval"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingStaleMACAgingInterval"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingArpCacheAgingInterval"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheAgingInterval"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheSearchingRateLimit"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheSearchingMaxNumber"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheNotPresentRateLimit"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheNotPresentMaxNumber"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheNotPresentMaxTime"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheNotPresentMinTime"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheSearchingGlobalMaxRate"), ("CADANT-CMTS-LAYER2CMTS-MIB", "cadAgingNDCacheNotPresentGlobalMaxRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cadAgingGroup = cadAgingGroup.setStatus('current')
cerIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 3, 2)).setObjects(("CADANT-CMTS-LAYER2CMTS-MIB", "cerIpGratuitousArpPeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerIpGroup = cerIpGroup.setStatus('current')
cadMacPortMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4))
cadMacPortTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1), )
if mibBuilder.loadTexts: cadMacPortTable.setStatus('current')
cadMacPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadMacPortId"))
if mibBuilder.loadTexts: cadMacPortEntry.setStatus('current')
cadMacPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 1), MacPortId())
if mibBuilder.loadTexts: cadMacPortId.setStatus('current')
cadMacPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 4), AdminState().clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacPortAdminState.setStatus('current')
cadMacPortPrState = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 5), PrimaryState().clone('oos')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacPortPrState.setStatus('current')
cadMacPortSecState = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 6), SecondaryState().clone('manual')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacPortSecState.setStatus('current')
cadMacPortDplxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 7), DuplexStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacPortDplxStatus.setStatus('current')
cadMacPortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacPortMacAddress.setStatus('current')
cadMacPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 9), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacPortIfIndex.setStatus('current')
cadMacPortDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacPortDescription.setStatus('current')
cadMacPortTrapInh = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 11), Bits().clone(namedValues=NamedValues(("primary", 0), ("secondary", 1), ("duplex", 2), ("linkUpLinkDown", 3))).clone(hexValue="e0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacPortTrapInh.setStatus('current')
cadMacPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacPortRowStatus.setStatus('current')
cadMacPortOfdm = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacPortOfdm.setStatus('current')
cadIfMacDomainTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2), )
if mibBuilder.loadTexts: cadIfMacDomainTable.setStatus('current')
cadIfMacDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadIfMacDomainIfIndex"))
if mibBuilder.loadTexts: cadIfMacDomainEntry.setStatus('current')
cadIfMacDomainIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadIfMacDomainIfIndex.setStatus('current')
cadIfMacDomainCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 2), Bits().clone(namedValues=NamedValues(("atmCells", 0), ("concatentation", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfMacDomainCapabilities.setStatus('current')
cadIfMacDomainSyncInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(10)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainSyncInterval.setStatus('current')
cadIfMacDomainUcdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000)).clone(1600)).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainUcdInterval.setStatus('current')
cadIfMacDomainMaxServiceIds = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(8191)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfMacDomainMaxServiceIds.setStatus('current')
cadIfMacDomainInvitedRangingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainInvitedRangingAttempts.setStatus('current')
cadIfMacDomainInsertInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200)).clone(40)).setUnits('Centiseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainInsertInterval.setStatus('current')
cadIfMacDomainRangingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 8), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(500, 3500)).clone(2400)).setUnits('Centiseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainRangingInterval.setStatus('current')
cadIfMacDomainRangeOpportunityCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 9), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(100, 500)).clone(120)).setUnits('Centiseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainRangeOpportunityCycle.setStatus('current')
cadIfMacDomainTftpEnforce = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 10), CadTftpEnforceType().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainTftpEnforce.setStatus('current')
cadIfMacDomainDynamicSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 11), CadDynamicSecretType().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDynamicSecret.setStatus('current')
cadIfMacDomainAnnex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("annexA", 3), ("annexB", 4), ("annexC", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainAnnex.setStatus('current')
cadIfMacDomainMddInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000)).clone(2000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainMddInterval.setStatus('current')
cadIfMacDomainIpProvMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ipv4Only", 0), ("ipv6Only", 1), ("alternate", 2), ("dualStack", 3))).clone('ipv6Only')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainIpProvMode.setStatus('current')
cadIfMacDomainCmStatusEvCtlEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 18), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainCmStatusEvCtlEnabled.setStatus('current')
cadIfMacDomainUsFreqRange = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("extended", 1))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainUsFreqRange.setStatus('current')
cadIfMacDomainMcastDsidFwdEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 20), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainMcastDsidFwdEnabled.setStatus('current')
cadIfMacDomainDsBondingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 21), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDsBondingEnabled.setStatus('current')
cadIfMacDomainMultTxChModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 22), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainMultTxChModeEnabled.setStatus('current')
cadIfMacDomainEarlyAuthEncrCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disableEae", 1), ("enableEaeRangingBasedEnforcement", 2), ("enableEaeCapabilityBasedEnforcement", 3), ("enableEaeTotalEnforcement", 4))).clone('enableEaeRangingBasedEnforcement')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainEarlyAuthEncrCtrl.setStatus('current')
cadIfMacDomainTftpProxyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 24), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainTftpProxyEnabled.setStatus('current')
cadIfMacDomainSrcAddrVerifEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 25), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainSrcAddrVerifEnabled.setStatus('current')
cadIfMacDomainMulticastEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 26), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfMacDomainMulticastEncryption.setStatus('current')
cadIfMacDomainRcpReportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nonVerbose", 0), ("verbose", 1))).clone('nonVerbose')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainRcpReportMode.setStatus('current')
cadIfMacDomainRegRspToOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainRegRspToOverride.setStatus('current')
cadIfMacDomainMultRxChModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 29), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainMultRxChModeEnabled.setStatus('current')
cadIfMacDomainCmUdcEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 30), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainCmUdcEnabled.setStatus('current')
cadIfMacDomainSendUdcRulesEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 31), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainSendUdcRulesEnabled.setStatus('current')
cadIfMacDomainRccDynEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 32), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainRccDynEnable.setStatus('current')
cadIfMacDomainDsbgDynEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 33), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDsbgDynEnable.setStatus('current')
cadIfMacDomainDsbgReseqWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 34), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 180), ValueRangeConstraint(255, 255), )).clone(255)).setUnits('hundredMicroseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDsbgReseqWaitTime.setStatus('current')
cadIfMacDomainDsbgReseqWarnThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 35), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 179), ValueRangeConstraint(255, 255), )).clone(255)).setUnits('hundredMicroseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDsbgReseqWarnThrshld.setStatus('current')
cadIfMacDomainDpId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfMacDomainDpId.setStatus('current')
cadIfMacDomainUsbgDynEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 37), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainUsbgDynEnable.setStatus('current')
cadIfMacDomainDownChannelMaxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(858000000, 858000000), ValueRangeConstraint(867000000, 867000000), ValueRangeConstraint(999000000, 999000000), )).clone(867000000)).setUnits('hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDownChannelMaxFrequency.setStatus('current')
cadIfMacDomainDownChannelMinFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(57000000, 57000000), ValueRangeConstraint(85000000, 85000000), ValueRangeConstraint(91000000, 91000000), ValueRangeConstraint(112000000, 112000000), )).clone(91000000)).setUnits('hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDownChannelMinFrequency.setStatus('current')
cadIfMacDomainUpChannelMaxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(42000000, 42000000), ValueRangeConstraint(55000000, 55000000), ValueRangeConstraint(65000000, 65000000), ValueRangeConstraint(85000000, 85000000), )).clone(42000000)).setUnits('hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainUpChannelMaxFrequency.setStatus('current')
cadIfMacDomainBpi2Mandatory = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("bpi", 1), ("bpiPlus", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainBpi2Mandatory.setStatus('current')
cadIfMacDomainDSG30Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 43), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDSG30Enabled.setStatus('current')
cadIfMacDomainEnforceRulesEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 44), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainEnforceRulesEnabled.setStatus('current')
cadIfMacDomainCmTxPwrExtentionPreRegistrationEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 45), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainCmTxPwrExtentionPreRegistrationEnabled.setStatus('current')
cadIfMacDomainCmTxPwrExtentionPostRegistrationEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 46), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainCmTxPwrExtentionPostRegistrationEnabled.setStatus('current')
cadIfMacDomainT4TimeoutMultiplierEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 47), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainT4TimeoutMultiplierEnabled.setStatus('current')
cadIfMacDomainDynamicRccMultiTunerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 48), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDynamicRccMultiTunerEnabled.setStatus('current')
cadIfMacDomainTcsSizeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainTcsSizeLimit.setStatus('current')
cadIfMacDomainDocsis31Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 50), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDocsis31Enabled.setStatus('current')
cadIfMacDomainEnergyMgt1x1Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 51), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainEnergyMgt1x1Enabled.setStatus('current')
cadIfMacDomainDsOfdmProfileRecoveryGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainDsOfdmProfileRecoveryGuardTime.setStatus('current')
cadIfMacDomainGracefulTcsReductionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 2, 1, 53), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIfMacDomainGracefulTcsReductionEnabled.setStatus('current')
cadMacChlTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3), )
if mibBuilder.loadTexts: cadMacChlTable.setStatus('current')
cadMacChlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadMacChlMacDomainIfIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadMacChlChannelIfIndex"))
if mibBuilder.loadTexts: cadMacChlEntry.setStatus('current')
cadMacChlMacDomainIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadMacChlMacDomainIfIndex.setStatus('current')
cadMacChlChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cadMacChlChannelIfIndex.setStatus('current')
cadMacChlCardNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 3), CardId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacChlCardNumber.setStatus('current')
cadMacChlPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 4), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacChlPortId.setStatus('current')
cadMacChlPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 5), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacChlPortType.setStatus('current')
cadMacChlCardSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 6), CerCardSubType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacChlCardSubType.setStatus('current')
cadMacChlChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacChlChannelId.setStatus('current')
cadMacChlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacChlRowStatus.setStatus('current')
cadMacChlIsPriCapableDs = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacChlIsPriCapableDs.setStatus('current')
cadMacChlSfProvAttrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 10), AttributeMask().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMacChlSfProvAttrMask.setStatus('current')
cadMacChlDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 3, 1, 11), IfDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMacChlDirection.setStatus('current')
cadUpSupervisionCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 4), )
if mibBuilder.loadTexts: cadUpSupervisionCfgTable.setStatus('current')
cadUpSupervisionCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 4, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadMacChlMacDomainIfIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadUpSupervisionCfgUpChannelIfIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadUpSupervisionCfgDownChannelIfIndex"))
if mibBuilder.loadTexts: cadUpSupervisionCfgEntry.setStatus('current')
cadUpSupervisionCfgUpChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadUpSupervisionCfgUpChannelIfIndex.setStatus('current')
cadUpSupervisionCfgDownChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 4, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cadUpSupervisionCfgDownChannelIfIndex.setStatus('current')
cadUpSupervisionCfgAssign = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 4, 1, 3), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadUpSupervisionCfgAssign.setStatus('current')
cadUpSupervisionCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadUpSupervisionCfgRowStatus.setStatus('current')
cadUpSupervisionStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 5), )
if mibBuilder.loadTexts: cadUpSupervisionStatusTable.setStatus('current')
cadUpSupervisionStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 5, 1), ).setIndexNames((0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadMacChlMacDomainIfIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadUpSupervisionStatusUpChannelIfIndex"), (0, "CADANT-CMTS-LAYER2CMTS-MIB", "cadUpSupervisionStatusDownChannelIfIndex"))
if mibBuilder.loadTexts: cadUpSupervisionStatusEntry.setStatus('current')
cadUpSupervisionStatusUpChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadUpSupervisionStatusUpChannelIfIndex.setStatus('current')
cadUpSupervisionStatusDownChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 5, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cadUpSupervisionStatusDownChannelIfIndex.setStatus('current')
cadUpSupervisionStatusAssignmentMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20, 1, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("provisioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadUpSupervisionStatusAssignmentMethod.setStatus('current')
mibBuilder.exportSymbols("CADANT-CMTS-LAYER2CMTS-MIB", cadIfMacDomainUpChannelMaxFrequency=cadIfMacDomainUpChannelMaxFrequency, cadDot3adAggEntry=cadDot3adAggEntry, cadIfMacDomainEnforceRulesEnabled=cadIfMacDomainEnforceRulesEnabled, cadBridgeGroupTable=cadBridgeGroupTable, cadIfMacDomainEnergyMgt1x1Enabled=cadIfMacDomainEnergyMgt1x1Enabled, cadAgingArpCacheSearchingGlobalMaxRate=cadAgingArpCacheSearchingGlobalMaxRate, cadBridgeGroupStatsEntry=cadBridgeGroupStatsEntry, cadLayer2MibGroup=cadLayer2MibGroup, cadMacPortOfdm=cadMacPortOfdm, cadIfMacDomainRangingInterval=cadIfMacDomainRangingInterval, cadAging=cadAging, cadAgingNDCacheNotPresentMaxNumber=cadAgingNDCacheNotPresentMaxNumber, cadIfMacDomainGracefulTcsReductionEnabled=cadIfMacDomainGracefulTcsReductionEnabled, cadMacChlRowStatus=cadMacChlRowStatus, cadAgingArpCacheNotPresentGlobalMaxRate=cadAgingArpCacheNotPresentGlobalMaxRate, cadIfMacDomainAnnex=cadIfMacDomainAnnex, cadDot3adSystemPriority=cadDot3adSystemPriority, cadIfMacDomainRegRspToOverride=cadIfMacDomainRegRspToOverride, cadAgingArpCacheSearchingRateLimit=cadAgingArpCacheSearchingRateLimit, cadDot3adAggId=cadDot3adAggId, cadIfMacDomainRangeOpportunityCycle=cadIfMacDomainRangeOpportunityCycle, cadMacPortIfIndex=cadMacPortIfIndex, cadMacPortMIBObjects=cadMacPortMIBObjects, cadIfMacDomainCmTxPwrExtentionPreRegistrationEnabled=cadIfMacDomainCmTxPwrExtentionPreRegistrationEnabled, cadUpSupervisionStatusUpChannelIfIndex=cadUpSupervisionStatusUpChannelIfIndex, cadBgRowStatus=cadBgRowStatus, cadAgingStaleMACAgingInterval=cadAgingStaleMACAgingInterval, cadDot3adAggMacAddress=cadDot3adAggMacAddress, cadAgingArpCacheAgingInterval=cadAgingArpCacheAgingInterval, cadMacChlChannelIfIndex=cadMacChlChannelIfIndex, cadDot3adAggTable=cadDot3adAggTable, cadMacPortSecState=cadMacPortSecState, cadMacChlDirection=cadMacChlDirection, cadAgingArpCacheNotPresentRateLimit=cadAgingArpCacheNotPresentRateLimit, cadIfMacDomainDsbgDynEnable=cadIfMacDomainDsbgDynEnable, cadMacChlEntry=cadMacChlEntry, cadAgingNDCacheSearchingRateLimit=cadAgingNDCacheSearchingRateLimit, cadMacPortMacAddress=cadMacPortMacAddress, cadIfMacDomainTftpProxyEnabled=cadIfMacDomainTftpProxyEnabled, cadMacPortPrState=cadMacPortPrState, cadMacPortId=cadMacPortId, cadBgpStatPhyCardId=cadBgpStatPhyCardId, cadAgingArpCacheSearchingMaxNumber=cadAgingArpCacheSearchingMaxNumber, cadIfMacDomainEntry=cadIfMacDomainEntry, cadIfMacDomainMulticastEncryption=cadIfMacDomainMulticastEncryption, cadUpSupervisionCfgAssign=cadUpSupervisionCfgAssign, cadIfMacDomainIfIndex=cadIfMacDomainIfIndex, cadIfMacDomainSyncInterval=cadIfMacDomainSyncInterval, cadAgingNDCacheSearchingGlobalMaxRate=cadAgingNDCacheSearchingGlobalMaxRate, cadMacPortDescription=cadMacPortDescription, cadUpSupervisionCfgUpChannelIfIndex=cadUpSupervisionCfgUpChannelIfIndex, cadIfMacDomainDsBondingEnabled=cadIfMacDomainDsBondingEnabled, PYSNMP_MODULE_ID=cadLayer2Mib, cadBgpStatGroupId=cadBgpStatGroupId, cadIfMacDomainMultTxChModeEnabled=cadIfMacDomainMultTxChModeEnabled, cadBridgeGroupStatsTable=cadBridgeGroupStatsTable, cadBridgeGroupMaxNum=cadBridgeGroupMaxNum, cadAgingArpCacheNotPresentMaxTime=cadAgingArpCacheNotPresentMaxTime, cadAgingNDCacheNotPresentMaxTime=cadAgingNDCacheNotPresentMaxTime, cadBgpStatPhyPortId=cadBgpStatPhyPortId, cadMacPortRowStatus=cadMacPortRowStatus, cadIfMacDomainRccDynEnable=cadIfMacDomainRccDynEnable, cadBgpBundleGroupId=cadBgpBundleGroupId, cadUpSupervisionCfgRowStatus=cadUpSupervisionCfgRowStatus, cadBridgeGroupPortStatusTable=cadBridgeGroupPortStatusTable, cadMacChlCardSubType=cadMacChlCardSubType, cadBgpCardType=cadBgpCardType, cadBgpStatPhyIfIndex=cadBgpStatPhyIfIndex, cadMacChlChannelId=cadMacChlChannelId, cadBgName=cadBgName, cadDot3adAggLacpMode=cadDot3adAggLacpMode, cadMacChlPortType=cadMacChlPortType, cadBgpMacAddress=cadBgpMacAddress, cadBgLeaderBgpId=cadBgLeaderBgpId, cadAgingSFAgingInterval=cadAgingSFAgingInterval, cerIpGratuitousArpPeriod=cerIpGratuitousArpPeriod, cadIfMacDomainTcsSizeLimit=cadIfMacDomainTcsSizeLimit, cadLayer2Mib=cadLayer2Mib, cadDot3adAggTrapInh=cadDot3adAggTrapInh, cadAgingArpCacheNotPresentMinTime=cadAgingArpCacheNotPresentMinTime, cadMacChlPortId=cadMacChlPortId, cadIfMacDomainCapabilities=cadIfMacDomainCapabilities, cadAgingNDCacheNotPresentGlobalMaxRate=cadAgingNDCacheNotPresentGlobalMaxRate, cadMacPortTrapInh=cadMacPortTrapInh, cadDot3adAggLacpRate=cadDot3adAggLacpRate, cadBgIndex=cadBgIndex, cadIfMacDomainBpi2Mandatory=cadIfMacDomainBpi2Mandatory, CadDynamicSecretType=CadDynamicSecretType, cadMacChlSfProvAttrMask=cadMacChlSfProvAttrMask, cadMacPortEntry=cadMacPortEntry, cadBridgePortEntry=cadBridgePortEntry, cadUpSupervisionStatusAssignmentMethod=cadUpSupervisionStatusAssignmentMethod, cadIfMacDomainCmTxPwrExtentionPostRegistrationEnabled=cadIfMacDomainCmTxPwrExtentionPostRegistrationEnabled, cadIfMacDomainSendUdcRulesEnabled=cadIfMacDomainSendUdcRulesEnabled, cadUpSupervisionStatusTable=cadUpSupervisionStatusTable, cadDot3adAggPrState=cadDot3adAggPrState, cadIfMacDomainCmUdcEnabled=cadIfMacDomainCmUdcEnabled, cadMacChlCardNumber=cadMacChlCardNumber, cadIfMacDomainTable=cadIfMacDomainTable, cadAgingCPEAgingInterval=cadAgingCPEAgingInterval, cadAgingNDCacheSearchingMaxNumber=cadAgingNDCacheSearchingMaxNumber, cadIfMacDomainIpProvMode=cadIfMacDomainIpProvMode, cadIfMacDomainDocsis31Enabled=cadIfMacDomainDocsis31Enabled, arrisCerIpGroup=arrisCerIpGroup, cadBridgeGroupEntry=cadBridgeGroupEntry, cadIfMacDomainUsbgDynEnable=cadIfMacDomainUsbgDynEnable, cadMacPortDplxStatus=cadMacPortDplxStatus, cadDot3adAggRowStatus=cadDot3adAggRowStatus, CadTftpEnforceType=CadTftpEnforceType, cadIfMacDomainMcastDsidFwdEnabled=cadIfMacDomainMcastDsidFwdEnabled, cadBgpStatMacIfIndex=cadBgpStatMacIfIndex, cadIfMacDomainUsFreqRange=cadIfMacDomainUsFreqRange, cadIfMacDomainMaxServiceIds=cadIfMacDomainMaxServiceIds, cadMacChlMacDomainIfIndex=cadMacChlMacDomainIfIndex, cadIfMacDomainDSG30Enabled=cadIfMacDomainDSG30Enabled, cadDot3adAggSystemID=cadDot3adAggSystemID, cadDot3adAggIndex=cadDot3adAggIndex, cadIfMacDomainTftpEnforce=cadIfMacDomainTftpEnforce, cadIfMacDomainInsertInterval=cadIfMacDomainInsertInterval, cadAgingArpCacheSearchingCableBroadcast=cadAgingArpCacheSearchingCableBroadcast, cadMacPortTable=cadMacPortTable, cadIfMacDomainMultRxChModeEnabled=cadIfMacDomainMultRxChModeEnabled, cadUpSupervisionCfgTable=cadUpSupervisionCfgTable, cadUpSupervisionCfgEntry=cadUpSupervisionCfgEntry, cadAgingNDCacheNotPresentRateLimit=cadAgingNDCacheNotPresentRateLimit, cadIfMacDomainDownChannelMinFrequency=cadIfMacDomainDownChannelMinFrequency, cadIfMacDomainEarlyAuthEncrCtrl=cadIfMacDomainEarlyAuthEncrCtrl, cadAgingNDCacheSearchingCableMulticast=cadAgingNDCacheSearchingCableMulticast, cadIfMacDomainUcdInterval=cadIfMacDomainUcdInterval, cadIfMacDomainDsbgReseqWaitTime=cadIfMacDomainDsbgReseqWaitTime, cadIfMacDomainDownChannelMaxFrequency=cadIfMacDomainDownChannelMaxFrequency, cadIfMacDomainMddInterval=cadIfMacDomainMddInterval, cadDot3adAggDescription=cadDot3adAggDescription, cadIfMacDomainDpId=cadIfMacDomainDpId, cadDot3adAggMinLinks=cadDot3adAggMinLinks, cadAgingNDCacheSearchingCableUnicast=cadAgingNDCacheSearchingCableUnicast, cadUpSupervisionCfgDownChannelIfIndex=cadUpSupervisionCfgDownChannelIfIndex, cadBgpCardId=cadBgpCardId, cadAgingArpCacheSearchingCableUnicast=cadAgingArpCacheSearchingCableUnicast, cadIfMacDomainDynamicSecret=cadIfMacDomainDynamicSecret, cadBgMacAddress=cadBgMacAddress, cadAgingNDCacheNotPresentMinTime=cadAgingNDCacheNotPresentMinTime, cadBgpId=cadBgpId, cadBridgeGroupGeneral=cadBridgeGroupGeneral, cadAgingArpCacheNotPresentMaxNumber=cadAgingArpCacheNotPresentMaxNumber, cadMacPortAdminState=cadMacPortAdminState, cadIfMacDomainDynamicRccMultiTunerEnabled=cadIfMacDomainDynamicRccMultiTunerEnabled, cadAgingNDCacheAgingInterval=cadAgingNDCacheAgingInterval, cadMacChlTable=cadMacChlTable, cadIfMacDomainInvitedRangingAttempts=cadIfMacDomainInvitedRangingAttempts, cadIfMacDomainRcpReportMode=cadIfMacDomainRcpReportMode, cadAgingIdleMACAgingInterval=cadAgingIdleMACAgingInterval, cadBgpType=cadBgpType, cadDot3adParams=cadDot3adParams, cadIfMacDomainDsOfdmProfileRecoveryGuardTime=cadIfMacDomainDsOfdmProfileRecoveryGuardTime, cadMacChlIsPriCapableDs=cadMacChlIsPriCapableDs, cadBridgeGroupPortStatusEntry=cadBridgeGroupPortStatusEntry, cadDot3adAggSecState=cadDot3adAggSecState, cadIfMacDomainSrcAddrVerifEnabled=cadIfMacDomainSrcAddrVerifEnabled, cadBridgeGroup=cadBridgeGroup, cadIfMacDomainT4TimeoutMultiplierEnabled=cadIfMacDomainT4TimeoutMultiplierEnabled, cadUpSupervisionStatusEntry=cadUpSupervisionStatusEntry, cadAgingGroup=cadAgingGroup, cadBgpPortId=cadBgpPortId, cerIpGroup=cerIpGroup, cadBgpGroupId=cadBgpGroupId, cadIfMacDomainDsbgReseqWarnThrshld=cadIfMacDomainDsbgReseqWarnThrshld, cadUpSupervisionStatusDownChannelIfIndex=cadUpSupervisionStatusDownChannelIfIndex, cadIfMacDomainCmStatusEvCtlEnabled=cadIfMacDomainCmStatusEvCtlEnabled, cadDot3adAggAdminState=cadDot3adAggAdminState, cadBridgePortTable=cadBridgePortTable, cadDot3adAggLacpEnable=cadDot3adAggLacpEnable)
