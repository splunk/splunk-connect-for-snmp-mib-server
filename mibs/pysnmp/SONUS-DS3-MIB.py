#
# PySNMP MIB module SONUS-DS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-DS3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter32, MibIdentifier, NotificationType, iso, Unsigned32, Bits, TimeTicks, IpAddress, Integer32, Counter64, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "MibIdentifier", "NotificationType", "iso", "Unsigned32", "Bits", "TimeTicks", "IpAddress", "Integer32", "Counter64", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
sonusDs3Index, sonusEventDescription, sonusEventClass, sonusSlotIndex, sonusShelfIndex, sonusEventLevel, sonusPortIndex = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusDs3Index", "sonusEventDescription", "sonusEventClass", "sonusSlotIndex", "sonusShelfIndex", "sonusEventLevel", "sonusPortIndex")
sonusCircuitMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusCircuitMIBs")
SonusAdminState, SonusAdminAction, SonusServiceState, SonusName = mibBuilder.importSymbols("SONUS-TC", "SonusAdminState", "SonusAdminAction", "SonusServiceState", "SonusName")
sonusDsx3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2))
if mibBuilder.loadTexts: sonusDsx3MIB.setLastUpdated('200102030000Z')
if mibBuilder.loadTexts: sonusDsx3MIB.setOrganization('Sonus Networks, Inc.')
sonusDsx3MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1))
sonusDsx3Admn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1))
sonusDsx3AdmnNextIndex = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 1))
sonusDsx3AdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2), )
if mibBuilder.loadTexts: sonusDsx3AdmnTable.setStatus('current')
sonusDsx3AdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-DS3-MIB", "sonusDsx3AdmnShelfIndex"), (0, "SONUS-DS3-MIB", "sonusDsx3AdmnSlotIndex"), (0, "SONUS-DS3-MIB", "sonusDsx3AdmnPortIndex"), (0, "SONUS-DS3-MIB", "sonusDsx3AdmnDs3Index"))
if mibBuilder.loadTexts: sonusDsx3AdmnEntry.setStatus('current')
sonusDsx3AdmnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnRowStatus.setStatus('current')
sonusDsx3AdmnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnName.setStatus('current')
sonusDsx3AdmnShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3AdmnShelfIndex.setStatus('current')
sonusDsx3AdmnSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3AdmnSlotIndex.setStatus('current')
sonusDsx3AdmnPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3AdmnPortIndex.setStatus('current')
sonusDsx3AdmnDs3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3AdmnDs3Index.setStatus('current')
sonusDsx3AdmnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3AdmnIfIndex.setStatus('current')
sonusDsx3AdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 8), SonusAdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnState.setStatus('current')
sonusDsx3AdmnTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnTimeout.setStatus('current')
sonusDsx3AdmnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 10), SonusServiceState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnMode.setStatus('current')
sonusDsx3AdmnAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 11), SonusAdminAction().clone('dryUp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnAction.setStatus('current')
sonusDsx3AdmnAvailDs1s = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 12), Bits().clone(namedValues=NamedValues(("ds1x1", 0), ("ds1x2", 1), ("ds1x3", 2), ("ds1x4", 3), ("ds1x5", 4), ("ds1x6", 5), ("ds1x7", 6), ("ds1x8", 7), ("ds1x9", 8), ("ds1x10", 9), ("ds1x11", 10), ("ds1x12", 11), ("ds1x13", 12), ("ds1x14", 13), ("ds1x15", 14), ("ds1x16", 15), ("ds1x17", 16), ("ds1x18", 17), ("ds1x19", 18), ("ds1x20", 19), ("ds1x21", 20), ("ds1x22", 21), ("ds1x23", 22), ("ds1x24", 23), ("ds1x25", 24), ("ds1x26", 25), ("ds1x27", 26), ("ds1x28", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnAvailDs1s.setStatus('current')
sonusDsx3AdmnDs1ModeOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 13), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnDs1ModeOverride.setStatus('current')
sonusDsx3AdmnInitCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 14), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnInitCounters.setStatus('current')
sonusDsx3AdmnCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 1, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx3AdmnCircuitId.setStatus('current')
sonusDsx3StatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2), )
if mibBuilder.loadTexts: sonusDsx3StatTable.setStatus('current')
sonusDsx3StatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1), ).setIndexNames((0, "SONUS-DS3-MIB", "sonusDsx3StatShelfIndex"), (0, "SONUS-DS3-MIB", "sonusDsx3StatSlotIndex"), (0, "SONUS-DS3-MIB", "sonusDsx3StatPortIndex"), (0, "SONUS-DS3-MIB", "sonusDsx3StatDs3Index"))
if mibBuilder.loadTexts: sonusDsx3StatEntry.setStatus('current')
sonusDsx3StatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatShelfIndex.setStatus('current')
sonusDsx3StatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatSlotIndex.setStatus('current')
sonusDsx3StatPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatPortIndex.setStatus('current')
sonusDsx3StatDs3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3Index.setStatus('current')
sonusDsx3StatValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatValidIntervals.setStatus('current')
sonusDsx3StatDs3LCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3LCV.setStatus('current')
sonusDsx3StatDs3FERR = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3FERR.setStatus('current')
sonusDsx3StatDs3EXZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3EXZS.setStatus('current')
sonusDsx3StatDs3PERR = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3PERR.setStatus('current')
sonusDsx3StatDs3CPERR = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3CPERR.setStatus('current')
sonusDsx3StatDs3FEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3FEBE.setStatus('current')
sonusDsx3StatDs3AIS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3AIS.setStatus('current')
sonusDsx3StatDs3LOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatDs3LOS.setStatus('current')
sonusDsx3StatLineStatStr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatLineStatStr.setStatus('current')
sonusDsx3StatLoopbackStr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatLoopbackStr.setStatus('current')
sonusDsx3StatOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("dryingUp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx3StatOperStatus.setStatus('current')
sonusDsx3MIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2))
sonusDsx3MIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 0))
sonusDsx3MIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 1))
sonusDs3OutOfServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("maintenance", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs3OutOfServiceReason.setStatus('current')
sonusDs3OutOfServiceType = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("admin", 1), ("hwFailure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs3OutOfServiceType.setStatus('current')
sonusDs3ThresholdType = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("currentLineCodeViolation", 1), ("currentPbitParity", 2), ("currentCbitParity", 3), ("currentSeverelyErroredFramingSecs", 4), ("currentLineErrorSeconds", 5), ("currentPbitParityErroredSeconds", 6), ("currentCbitParityErroredSeconds", 7), ("currentPbitSeverelyErroredSeconds", 8), ("currentLineSeverelyErroredSeconds", 9), ("currentUnavailableSeconds", 10), ("totalLineCodeViolation", 11), ("totalPbitParity", 12), ("totalCbitParity", 13), ("totalSeverelyErroredFramingSecs", 14), ("totalLineErrorSeconds", 15), ("totalPbitParityErroredSeconds", 16), ("totalCbitParityErroredSeconds", 17), ("totalPbitSeverelyErroredSeconds", 18), ("totalLineSeverelyErroredSeconds", 19), ("totalUnavailableSeconds", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs3ThresholdType.setStatus('current')
sonusDs3LineState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("green", 1), ("red", 2), ("rai", 3), ("ais", 4), ("hwfailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs3LineState.setStatus('current')
sonusDs3AdmnState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("deleted", 3), ("inservice", 4), ("dryingUp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs3AdmnState.setStatus('current')
sonusDsx3AdminChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 0, 1)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusPortIndex"), ("SONUS-COMMON-MIB", "sonusDs3Index"), ("SONUS-DS3-MIB", "sonusDs3AdmnState"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusDsx3AdminChangeNotification.setStatus('current')
sonusDsx3OutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 0, 2)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusPortIndex"), ("SONUS-COMMON-MIB", "sonusDs3Index"), ("SONUS-DS3-MIB", "sonusDs3OutOfServiceReason"), ("SONUS-DS3-MIB", "sonusDs3OutOfServiceType"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusDsx3OutOfServiceNotification.setStatus('current')
sonusDsx3ThresholdCrossingNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 0, 3)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusPortIndex"), ("SONUS-COMMON-MIB", "sonusDs3Index"), ("SONUS-DS3-MIB", "sonusDs3ThresholdType"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusDsx3ThresholdCrossingNotification.setStatus('current')
sonusDsx3LineStatusChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 4, 2, 2, 0, 4)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusPortIndex"), ("SONUS-COMMON-MIB", "sonusDs3Index"), ("SONUS-DS3-MIB", "sonusDs3LineState"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusDsx3LineStatusChangeNotification.setStatus('current')
mibBuilder.exportSymbols("SONUS-DS3-MIB", sonusDsx3StatLineStatStr=sonusDsx3StatLineStatStr, sonusDsx3MIBObjects=sonusDsx3MIBObjects, sonusDsx3AdmnState=sonusDsx3AdmnState, sonusDsx3AdmnEntry=sonusDsx3AdmnEntry, sonusDsx3AdmnName=sonusDsx3AdmnName, sonusDsx3MIBNotificationsObjects=sonusDsx3MIBNotificationsObjects, sonusDsx3AdmnIfIndex=sonusDsx3AdmnIfIndex, sonusDsx3StatShelfIndex=sonusDsx3StatShelfIndex, sonusDsx3AdminChangeNotification=sonusDsx3AdminChangeNotification, sonusDsx3AdmnMode=sonusDsx3AdmnMode, sonusDsx3StatDs3FERR=sonusDsx3StatDs3FERR, PYSNMP_MODULE_ID=sonusDsx3MIB, sonusDsx3StatOperStatus=sonusDsx3StatOperStatus, sonusDsx3ThresholdCrossingNotification=sonusDsx3ThresholdCrossingNotification, sonusDsx3StatDs3Index=sonusDsx3StatDs3Index, sonusDsx3AdmnTimeout=sonusDsx3AdmnTimeout, sonusDsx3StatValidIntervals=sonusDsx3StatValidIntervals, sonusDsx3AdmnAvailDs1s=sonusDsx3AdmnAvailDs1s, sonusDsx3StatDs3EXZS=sonusDsx3StatDs3EXZS, sonusDsx3AdmnTable=sonusDsx3AdmnTable, sonusDsx3AdmnAction=sonusDsx3AdmnAction, sonusDsx3StatEntry=sonusDsx3StatEntry, sonusDs3ThresholdType=sonusDs3ThresholdType, sonusDsx3AdmnDs1ModeOverride=sonusDsx3AdmnDs1ModeOverride, sonusDsx3StatLoopbackStr=sonusDsx3StatLoopbackStr, sonusDsx3StatDs3CPERR=sonusDsx3StatDs3CPERR, sonusDsx3AdmnShelfIndex=sonusDsx3AdmnShelfIndex, sonusDsx3StatDs3LCV=sonusDsx3StatDs3LCV, sonusDs3OutOfServiceType=sonusDs3OutOfServiceType, sonusDsx3StatDs3AIS=sonusDsx3StatDs3AIS, sonusDsx3AdmnPortIndex=sonusDsx3AdmnPortIndex, sonusDsx3AdmnCircuitId=sonusDsx3AdmnCircuitId, sonusDsx3StatDs3PERR=sonusDsx3StatDs3PERR, sonusDs3OutOfServiceReason=sonusDs3OutOfServiceReason, sonusDsx3MIBNotifications=sonusDsx3MIBNotifications, sonusDsx3AdmnInitCounters=sonusDsx3AdmnInitCounters, sonusDsx3Admn=sonusDsx3Admn, sonusDsx3OutOfServiceNotification=sonusDsx3OutOfServiceNotification, sonusDsx3MIBNotificationsPrefix=sonusDsx3MIBNotificationsPrefix, sonusDsx3StatDs3LOS=sonusDsx3StatDs3LOS, sonusDs3LineState=sonusDs3LineState, sonusDsx3AdmnNextIndex=sonusDsx3AdmnNextIndex, sonusDsx3AdmnSlotIndex=sonusDsx3AdmnSlotIndex, sonusDsx3StatSlotIndex=sonusDsx3StatSlotIndex, sonusDsx3LineStatusChangeNotification=sonusDsx3LineStatusChangeNotification, sonusDs3AdmnState=sonusDs3AdmnState, sonusDsx3StatTable=sonusDsx3StatTable, sonusDsx3AdmnDs3Index=sonusDsx3AdmnDs3Index, sonusDsx3StatDs3FEBE=sonusDsx3StatDs3FEBE, sonusDsx3MIB=sonusDsx3MIB, sonusDsx3StatPortIndex=sonusDsx3StatPortIndex, sonusDsx3AdmnRowStatus=sonusDsx3AdmnRowStatus)
