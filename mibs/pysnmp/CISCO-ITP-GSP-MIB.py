#
# PySNMP MIB module CISCO-ITP-GSP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-GSP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:46:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
CItpTcAclId, CItpTcLinkType, CItpTcPointCode, CItpTcDisplayPC, CItpTcPointCodeType, CItpTcNetworkIndicator, CItpTcCLLI, CItpTcQos, CItpTcLinkSLC, CItpTcLinksetId, CItpTcInstanceNumber, CItpTcNetworkName, CItpTcRouteTableName, CItpTcServiceIndicator = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcAclId", "CItpTcLinkType", "CItpTcPointCode", "CItpTcDisplayPC", "CItpTcPointCodeType", "CItpTcNetworkIndicator", "CItpTcCLLI", "CItpTcQos", "CItpTcLinkSLC", "CItpTcLinksetId", "CItpTcInstanceNumber", "CItpTcNetworkName", "CItpTcRouteTableName", "CItpTcServiceIndicator")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetPortNumber, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Counter64, Counter32, TimeTicks, IpAddress, Gauge32, NotificationType, Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "Counter32", "TimeTicks", "IpAddress", "Gauge32", "NotificationType", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "ModuleIdentity", "ObjectIdentity")
TimeStamp, RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
ciscoGspMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 336))
ciscoGspMIB.setRevisions(('2009-12-31 00:00', '2009-09-12 00:00', '2009-05-25 00:00', '2008-05-07 00:00', '2005-10-21 00:00', '2005-02-24 00:00', '2003-07-16 00:00', '2003-03-03 00:00',))
if mibBuilder.loadTexts: ciscoGspMIB.setLastUpdated('201003050000Z')
if mibBuilder.loadTexts: ciscoGspMIB.setOrganization('Cisco Systems, Inc.')
ciscoGspMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 0))
ciscoGspMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1))
ciscoGspMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 2))
cgspScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 1))
cgspProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2))
cgspInstance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3))
cgspPointCode = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 4))
cgspLinkset = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5))
cgspLink = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6))
cgspNotificationsEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 7))
cgspNotificationsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 8))
class CgspSequenceNumber(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class CgspSampleInterval(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(60, 3600)

class CgspPercentThreshold(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 100)

class CgspLinkTestResults(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("noErrors", 0), ("undefinedOpc", 1), ("incorrectOpc", 2), ("undefinedSlc", 3), ("incorrectSlc", 4), ("incorrectNi", 5), ("badPattern", 6), ("nonAdjacent", 7), ("failed", 8))

class CgspLinkUtilization(TextualConvention, Gauge32):
    status = 'current'
    subtypeSpec = Gauge32.subtypeSpec + ValueRangeConstraint(0, 999)

class CgspLinkCapacity(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(56000, 2147483647), )
class CgspProfileName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 19)

class CgspLinkUtilizationState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unMonitored", 0), ("underThreshold", 1), ("overThreshold", 2))

class CgspTimerNumbers(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45))
    namedValues = NamedValues(("timerMtp3T01", 1), ("timerMtp3T02", 2), ("timerMtp3T03", 3), ("timerMtp3T04", 4), ("timerMtp3T05", 5), ("timerMtp3T06", 6), ("timerMtp3T07", 7), ("timerMtp3T08", 8), ("timerMtp3T09", 9), ("timerMtp3T10", 10), ("timerMtp3T11", 11), ("timerMtp3T12", 12), ("timerMtp3T13", 13), ("timerMtp3T14", 14), ("timerMtp3T15", 15), ("timerMtp3T16", 16), ("timerMtp3T17", 17), ("timerMtp3T18", 18), ("timerMtp3T19", 19), ("timerMtp3T20", 20), ("timerMtp3T21", 21), ("timerMtp3T22", 22), ("timerMtp3T23", 23), ("timerMtp3T24", 24), ("timerMtp3T25", 25), ("timerMtp3T26", 26), ("timerMtp3T27", 27), ("timerMtp3T28", 28), ("timerMtp3T29", 29), ("timerMtp3T30", 30), ("timerMtp3T31", 31), ("timerMtp3T32", 32), ("timerMtp3T33", 33), ("timerMtp3T34", 34), ("timerLinkTest", 35), ("timerLinkMessag1", 36), ("timerLinkActRetry", 37), ("timerMtp2T01", 38), ("timerMtp2T02", 39), ("timerMtp2T03", 40), ("timerMtp2T04N", 41), ("timerMtp2T04E", 42), ("timerMtp2T05", 43), ("timerMtp2T06", 44), ("timerMtp2T07", 45))

class CgspTimerValue(TextualConvention, Unsigned32):
    reference = 'ITU Q.703 Signalling Link. ANSI T1.111.3 Telecommunications - signalling system No. 7 (SS7)-Message Transfer Part (MTP).'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), )
class CgspSS7Variant(TextualConvention, Integer32):
    reference = 'GF 001-9001 - Technical Specifications of Signalling System No. 7 for National Telephone Network of China.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 0), ("ansi", 1), ("itu", 2), ("china", 3), ("ntt", 4), ("ttc", 5))

class CgspDisplayInstanceUserPart(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 40)

class CItpTcSccpWrrOption(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("sls", 0), ("cgpaSls", 1), ("opcSls", 2), ("opc", 3))

cgspCLLICode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 1, 1), CItpTcCLLI()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspCLLICode.setStatus('current')
cgspUtilSampleInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 1, 2), CgspSampleInterval().clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspUtilSampleInterval.setStatus('current')
cgspUtilThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 1, 3), CgspPercentThreshold().clone(40)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspUtilThreshold.setStatus('current')
cgspUtilAbateDelta = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 1, 4), CgspPercentThreshold()).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspUtilAbateDelta.setStatus('current')
cgspPlanCapacityDefault = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 1, 5), CgspLinkCapacity()).setUnits('bits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspPlanCapacityDefault.setStatus('current')
cgspEventSequenceNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 1, 6), Counter32()).setUnits('events').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspEventSequenceNumber.setStatus('current')
cgspUPUNotifWindowTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(900)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspUPUNotifWindowTime.setStatus('current')
cgspProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 1), )
if mibBuilder.loadTexts: cgspProfileTable.setStatus('current')
cgspProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspProfileName"))
if mibBuilder.loadTexts: cgspProfileTableEntry.setStatus('current')
cgspProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 1, 1, 1), CgspProfileName())
if mibBuilder.loadTexts: cgspProfileName.setStatus('current')
cgspProfileVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 1, 1, 2), CgspSS7Variant()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspProfileVariant.setStatus('current')
cgspProfileMtp2BundleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 10000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspProfileMtp2BundleTimer.setStatus('current')
cgspProfileMtp2SendQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 32000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspProfileMtp2SendQueueDepth.setStatus('current')
cgspProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspProfileRowStatus.setStatus('current')
cgspProfileTimerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 2), )
if mibBuilder.loadTexts: cgspProfileTimerTable.setStatus('current')
cgspProfileTimerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspProfileTimerNumber"))
if mibBuilder.loadTexts: cgspProfileTimerTableEntry.setStatus('current')
cgspProfileTimerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 2, 1, 1), CgspTimerNumbers())
if mibBuilder.loadTexts: cgspProfileTimerNumber.setStatus('current')
cgspProfileTimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 2, 1, 2), CgspTimerValue()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspProfileTimerValue.setStatus('current')
cgspProfileTimerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspProfileTimerRowStatus.setStatus('current')
cgspInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1), )
if mibBuilder.loadTexts: cgspInstanceTable.setStatus('current')
cgspInstanceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"))
if mibBuilder.loadTexts: cgspInstanceTableEntry.setStatus('current')
cgspInstNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 1), CItpTcNetworkName())
if mibBuilder.loadTexts: cgspInstNetwork.setStatus('current')
cgspInstNetworkIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 2), CItpTcNetworkIndicator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstNetworkIndicator.setStatus('current')
cgspInstVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 3), CgspSS7Variant()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstVariant.setStatus('current')
cgspInstDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstDisplayName.setStatus('current')
cgspInstDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstDescription.setStatus('current')
cgspInstTFR = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstTFR.setStatus('current')
cgspInstCongestionsLevels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstCongestionsLevels.setStatus('current')
cgspInstFastRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstFastRestart.setStatus('current')
cgspInstDistSccpUnseq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstDistSccpUnseq.setStatus('current')
cgspInstSummaryRoutingException = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 10), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstSummaryRoutingException.setStatus('current')
cgspInstNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 11), CItpTcInstanceNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspInstNumber.setStatus('current')
cgspInstRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 12), CItpTcRouteTableName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstRouteTableName.setStatus('current')
cgspInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstRowStatus.setStatus('current')
cgspInstSccpWrrOpcShift = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstSccpWrrOpcShift.setStatus('current')
cgspInstSccpWrrOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 1, 1, 15), CItpTcSccpWrrOption()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstSccpWrrOption.setStatus('current')
cgspInstTimerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 2), )
if mibBuilder.loadTexts: cgspInstTimerTable.setStatus('current')
cgspInstTimerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspInstTimerNumber"))
if mibBuilder.loadTexts: cgspInstTimerTableEntry.setStatus('current')
cgspInstTimerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 2, 1, 1), CgspTimerNumbers())
if mibBuilder.loadTexts: cgspInstTimerNumber.setStatus('current')
cgspInstTimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 2, 1, 2), CgspTimerValue()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstTimerValue.setStatus('current')
cgspInstTimerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspInstTimerRowStatus.setStatus('current')
cgspInstUPUTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 3), )
if mibBuilder.loadTexts: cgspInstUPUTable.setStatus('current')
cgspInstUPUTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspMtp3SI"))
if mibBuilder.loadTexts: cgspInstUPUTableEntry.setStatus('current')
cgspMtp3SI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 3, 1, 1), CItpTcServiceIndicator())
if mibBuilder.loadTexts: cgspMtp3SI.setStatus('current')
cgspInstSIUPUReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 3, 1, 2), Counter32()).setUnits('MSUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspInstSIUPUReceived.setStatus('current')
cgspInstSIUPUTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 3, 1, 3), Counter32()).setUnits('MSUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspInstSIUPUTransmitted.setStatus('current')
cgspInstUserPartDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 3, 3, 1, 4), CgspDisplayInstanceUserPart()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspInstUserPartDisplay.setStatus('current')
cgspPointCodeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 4, 1), )
if mibBuilder.loadTexts: cgspPointCodeTable.setStatus('current')
cgspPointCodeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspPointCodeNi"), (0, "CISCO-ITP-GSP-MIB", "cgspPointCodeBin"))
if mibBuilder.loadTexts: cgspPointCodeTableEntry.setStatus('current')
cgspPointCodeNi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 4, 1, 1, 1), CItpTcNetworkIndicator())
if mibBuilder.loadTexts: cgspPointCodeNi.setStatus('current')
cgspPointCodeBin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 4, 1, 1, 2), CItpTcPointCode())
if mibBuilder.loadTexts: cgspPointCodeBin.setStatus('current')
cgspPointCodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 4, 1, 1, 3), CItpTcPointCodeType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspPointCodeType.setStatus('current')
cgspPointCodeDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 4, 1, 1, 4), CItpTcDisplayPC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspPointCodeDisplay.setStatus('current')
cgspPointCodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 4, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspPointCodeRowStatus.setStatus('current')
cgspLinksetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1), )
if mibBuilder.loadTexts: cgspLinksetTable.setStatus('current')
cgspLinksetTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspLinksetName"))
if mibBuilder.loadTexts: cgspLinksetTableEntry.setStatus('current')
cgspLinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 1), CItpTcLinksetId())
if mibBuilder.loadTexts: cgspLinksetName.setStatus('current')
cgspLinksetSourcePointCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 2), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetSourcePointCode.setStatus('current')
cgspLinksetSourceDisplayPC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 3), CItpTcDisplayPC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinksetSourceDisplayPC.setStatus('current')
cgspLinksetAdjacentPointCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 4), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetAdjacentPointCode.setStatus('current')
cgspLinksetAdjacentDisplayPC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 5), CItpTcDisplayPC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinksetAdjacentDisplayPC.setStatus('current')
cgspLinksetState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("available", 1), ("shutdown", 2), ("unavailable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinksetState.setStatus('current')
cgspLinksetInboundAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 7), CItpTcAclId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetInboundAcl.setStatus('current')
cgspLinksetOutboundAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 8), CItpTcAclId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetOutboundAcl.setStatus('current')
cgspLinksetAccountingMtp3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetAccountingMtp3.setStatus('current')
cgspLinksetAccountingGtt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetAccountingGtt.setStatus('current')
cgspLinksetNumLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinksetNumLinks.setStatus('current')
cgspLinksetDurationInService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 12), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinksetDurationInService.setStatus('current')
cgspLinksetDurationOutService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 13), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinksetDurationOutService.setStatus('current')
cgspLinksetActPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetActPriority.setStatus('current')
cgspLinksetDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetDisplayName.setStatus('current')
cgspLinksetDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetDescription.setStatus('current')
cgspLinksetRotateSlsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetRotateSlsEnable.setStatus('current')
cgspLinksetRotateSlsShift = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetRotateSlsShift.setStatus('current')
cgspLinksetProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 19), CgspProfileName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetProfileName.setStatus('current')
cgspLinksetAdjacentInst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 20), CItpTcNetworkName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinksetAdjacentInst.setStatus('current')
cgspLinksetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 1, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetRowStatus.setStatus('current')
cgspLinksetTimerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 2), )
if mibBuilder.loadTexts: cgspLinksetTimerTable.setStatus('current')
cgspLinksetTimerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspLinksetName"), (0, "CISCO-ITP-GSP-MIB", "cgspLinksetTimerNumber"))
if mibBuilder.loadTexts: cgspLinksetTimerTableEntry.setStatus('current')
cgspLinksetTimerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 2, 1, 1), CgspTimerNumbers())
if mibBuilder.loadTexts: cgspLinksetTimerNumber.setStatus('current')
cgspLinksetTimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 2, 1, 2), CgspTimerValue()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetTimerValue.setStatus('current')
cgspLinksetTimerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 5, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinksetTimerRowStatus.setStatus('current')
cgspLinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1), )
if mibBuilder.loadTexts: cgspLinkTable.setStatus('current')
cgspLinkTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspLinksetName"), (0, "CISCO-ITP-GSP-MIB", "cgspLinkSlc"))
if mibBuilder.loadTexts: cgspLinkTableEntry.setStatus('current')
cgspLinkSlc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 1), CItpTcLinkSLC())
if mibBuilder.loadTexts: cgspLinkSlc.setStatus('current')
cgspLinkDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkDescription.setStatus('current')
cgspLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("available", 1), ("failed", 2), ("shutdown", 3), ("unavailable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkState.setStatus('current')
cgspLinkReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35))).clone(namedValues=NamedValues(("unknown", 0), ("changeOverInProgress", 1), ("mgmtDisconnectRequest", 2), ("linkAlignmentLost", 3), ("connectionLost", 4), ("localDisconnect", 5), ("remoteDisconnect", 6), ("suermFailure", 7), ("t1Timeout", 8), ("t2Timeout", 9), ("t3Timeout", 10), ("t6Timeout", 11), ("t7Timeout", 12), ("provingFailure", 13), ("protocolErrorBsn", 14), ("protocolErrorFib", 15), ("protocolErrorSin", 16), ("protocolErrorLssu", 17), ("peerNotReady", 18), ("communicationLost", 19), ("noListenPosted", 20), ("bufferNotAvailable", 21), ("cardRemoved", 22), ("cardInserted", 23), ("falseLinkCongestion", 24), ("configDownload", 25), ("localInhibit", 26), ("localUninhibit", 27), ("remoteInhibit", 28), ("remoteUninhibit", 29), ("localBlocked", 30), ("localUnBlocked", 31), ("remoteBlocked", 32), ("remoteUnblocked", 33), ("linkRestored", 34), ("linkTestFailure", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkReason.setStatus('current')
cgspLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 5), CItpTcLinkType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkType.setStatus('current')
cgspLinkifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkifIndex.setStatus('current')
cgspLinkSctpAssociation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkSctpAssociation.setStatus('deprecated')
cgspLinkXmitQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkXmitQueueDepth.setStatus('current')
cgspLinkXmitQueueDepthHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkXmitQueueDepthHigh.setStatus('current')
cgspLinkXmitQueueDepthHighRT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkXmitQueueDepthHighRT.setStatus('current')
cgspLinkCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkCongestionState.setStatus('current')
cgspLinkCongestionAbate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkCongestionAbate1.setStatus('current')
cgspLinkCongestionAbate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkCongestionAbate2.setStatus('current')
cgspLinkCongestionAbate3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkCongestionAbate3.setStatus('current')
cgspLinkCongestionOnset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkCongestionOnset1.setStatus('current')
cgspLinkCongestionOnset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkCongestionOnset2.setStatus('current')
cgspLinkCongestionOnset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkCongestionOnset3.setStatus('current')
cgspLinkSigLinkTest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 18), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkSigLinkTest.setStatus('current')
cgspLinkQ752T1E1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 19), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E1.setStatus('current')
cgspLinkQ752T1E2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E2.setStatus('current')
cgspLinkQ752T1E3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 21), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E3.setStatus('current')
cgspLinkQ752T1E5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 22), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E5.setStatus('current')
cgspLinkQ752T1E7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 23), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E7.setStatus('current')
cgspLinkQ752T1E8 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 24), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E8.setStatus('current')
cgspLinkQ752T1E9 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 25), Counter32()).setUnits('negative acknowledgements').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E9.setStatus('current')
cgspLinkQ752T1E10 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 26), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E10.setStatus('current')
cgspLinkQ752T1E11 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 27), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E11.setStatus('current')
cgspLinkQ752T2E1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 28), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E1.setStatus('current')
cgspLinkQ752T2E5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 29), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E5.setStatus('current')
cgspLinkQ752T2E6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 30), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E6.setStatus('current')
cgspLinkQ752T2E7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 31), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E7.setStatus('current')
cgspLinkQ752T2E9 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 32), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E9.setStatus('current')
cgspLinkQ752T2E10 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 33), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E10.setStatus('current')
cgspLinkQ752T2E15 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 34), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E15.setStatus('current')
cgspLinkQ752T2E16 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 35), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E16.setStatus('current')
cgspLinkQ752T2E18 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 36), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E18.setStatus('current')
cgspLinkQ752T3E1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 37), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E1.setStatus('current')
cgspLinkQ752T3E2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 38), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E2Bytes.setStatus('current')
cgspLinkQ752T3E2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 39), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E2Packets.setStatus('current')
cgspLinkQ752T3E3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 40), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E3.setStatus('current')
cgspLinkQ752T3E4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 41), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E4.setStatus('current')
cgspLinkQ752T3E5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 42), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E5.setStatus('current')
cgspLinkQ752T3E6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 43), Counter32()).setUnits('events').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E6.setStatus('current')
cgspLinkQ752T3E7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 44), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E7.setStatus('current')
cgspLinkQ752T3E10L1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 45), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E10L1.setStatus('current')
cgspLinkQ752T3E10L2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 46), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E10L2.setStatus('current')
cgspLinkQ752T3E10L3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 47), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E10L3.setStatus('current')
cgspLinkQ752T3E11L1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 48), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E11L1.setStatus('current')
cgspLinkQ752T3E11L2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 49), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E11L2.setStatus('current')
cgspLinkQ752T3E11L3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 50), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T3E11L3.setStatus('current')
cgspLinkLocalPeerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 51), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkLocalPeerPort.setStatus('current')
cgspLinkRemotePeerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 52), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkRemotePeerPort.setStatus('current')
cgspLinkQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 53), CItpTcQos()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkQosClass.setStatus('current')
cgspLinkDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 54), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkDisplayName.setStatus('current')
cgspLinkDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 55), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkDroppedPkts.setStatus('current')
cgspLinkTransmittedLSSUs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 56), Counter32()).setUnits('LSSU').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkTransmittedLSSUs.setStatus('current')
cgspLinkReceivedLSSUs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 57), Counter32()).setUnits('LSSU').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkReceivedLSSUs.setStatus('current')
cgspLinkProtocolDetails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 58), Bits().clone(namedValues=NamedValues(("tcbcBuffering", 0), ("tcocBuffering", 1), ("tlacAdjacentSpRestarting", 2), ("tlacEmergencyCoInProgress", 3), ("tlacChangebackInProgress", 4), ("tlacChangeoverInProgress", 5), ("tlacChangeoverFailed", 6), ("tlacInhibitRetry", 7), ("tlacManagementRequest", 8), ("tlacSpRestarting", 9), ("tsrcChangeOverComplete", 10), ("tsrcAdjacentSpRestart", 11), ("tlacLocalInhibit", 12), ("tlacRemoteInhibit", 13), ("tlacLocalBlocked", 14), ("tlacRemoteBlocked", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkProtocolDetails.setStatus('current')
cgspLinkLsacState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("undefined", 1), ("inactive", 2), ("active", 3), ("activatingRestoring", 4), ("failed", 5), ("actT17wait", 6), ("actAnsiWaitDeloaded", 7), ("actItuWaitStmReady", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkLsacState.setStatus('current')
cgspLinkTsrcState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("idle", 2), ("wait5", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkTsrcState.setStatus('current')
cgspLinkTcocState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("undefined", 1), ("idle", 2), ("wait2", 3), ("waitForAck", 4), ("retrieving", 5), ("wait5", 6), ("wait7", 7), ("wait8", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkTcocState.setStatus('current')
cgspLinkTcocLocalBSNT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 62), CgspSequenceNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkTcocLocalBSNT.setStatus('current')
cgspLinkTcocRemoteBSNT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 63), CgspSequenceNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkTcocRemoteBSNT.setStatus('current')
cgspLinkTcbcState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("idle", 2), ("firstAttempt", 3), ("secondAttempt", 4), ("timeControlledDiversion", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkTcbcState.setStatus('current')
cgspLinkReceivedSIBs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkReceivedSIBs.setStatus('current')
cgspLinkTransmittedSIBs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkTransmittedSIBs.setStatus('current')
cgspLinkMtp2T01Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkMtp2T01Counts.setStatus('current')
cgspLinkMtp2T02Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkMtp2T02Counts.setStatus('current')
cgspLinkMtp2T03Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkMtp2T03Counts.setStatus('current')
cgspLinkMtp2T04Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkMtp2T04Counts.setStatus('current')
cgspLinkMtp2T05Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkMtp2T05Counts.setStatus('current')
cgspLinkMtp2T06Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkMtp2T06Counts.setStatus('current')
cgspLinkMtp2T07Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkMtp2T07Counts.setStatus('current')
cgspLinkOMAERMCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkOMAERMCounts.setStatus('current')
cgspLinkOMAERMFailCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkOMAERMFailCounts.setStatus('current')
cgspLinkOMSURMCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkOMSURMCounts.setStatus('current')
cgspLinkOMSURMFailCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkOMSURMFailCounts.setStatus('current')
cgspLinkPlanCapacityRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 78), CgspLinkCapacity()).setUnits('bits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkPlanCapacityRcvd.setStatus('current')
cgspLinkUtilThresholdRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 79), CgspPercentThreshold()).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkUtilThresholdRcvd.setStatus('current')
cgspLinkUtilizationRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 80), CgspLinkUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkUtilizationRcvd.setStatus('current')
cgspLinkUtilStateRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 81), CgspLinkUtilizationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkUtilStateRcvd.setStatus('current')
cgspLinkL2BytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkL2BytesRcvd.setStatus('current')
cgspLinkPlanCapacitySent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 83), CgspLinkCapacity()).setUnits('bits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkPlanCapacitySent.setStatus('current')
cgspLinkUtilThresholdSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 84), CgspPercentThreshold()).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkUtilThresholdSent.setStatus('current')
cgspLinkUtilizationSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 85), CgspLinkUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkUtilizationSent.setStatus('current')
cgspLinkUtilStateSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 86), CgspLinkUtilizationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkUtilStateSent.setStatus('current')
cgspLinkL2BytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkL2BytesSent.setStatus('current')
cgspLinkTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 88), CgspLinkTestResults()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkTestResult.setStatus('current')
cgspLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 89), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkRowStatus.setStatus('current')
cgspLinkSctpAssociationId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 90), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkSctpAssociationId.setStatus('current')
cgspLinkQ752T1E12 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 91), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E12.setStatus('current')
cgspLinkQ752T1E12Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 92), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T1E12Errors.setStatus('current')
cgspLinkQ752T2E11 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 93), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E11.setStatus('current')
cgspLinkQ752T2E17 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 94), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E17.setStatus('current')
cgspLinkQ752T2E19 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 95), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkQ752T2E19.setStatus('current')
cgspLinkRxCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 1, 1, 96), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkRxCongestionState.setStatus('current')
cgspLinkTimerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 2), )
if mibBuilder.loadTexts: cgspLinkTimerTable.setStatus('current')
cgspLinkTimerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 2, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspLinksetName"), (0, "CISCO-ITP-GSP-MIB", "cgspLinkSlc"), (0, "CISCO-ITP-GSP-MIB", "cgspLinkTimerNumber"))
if mibBuilder.loadTexts: cgspLinkTimerTableEntry.setStatus('current')
cgspLinkTimerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 2, 1, 1), CgspTimerNumbers())
if mibBuilder.loadTexts: cgspLinkTimerNumber.setStatus('current')
cgspLinkTimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 2, 1, 2), CgspTimerValue()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkTimerValue.setStatus('current')
cgspLinkTimerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkTimerRowStatus.setStatus('current')
cgspLinkRemoteIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 3), )
if mibBuilder.loadTexts: cgspLinkRemoteIpAddrTable.setStatus('current')
cgspLinkRemoteIpAddrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 3, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspLinksetName"), (0, "CISCO-ITP-GSP-MIB", "cgspLinkSlc"), (0, "CISCO-ITP-GSP-MIB", "cgspLinkRemoteIpAddrNumber"))
if mibBuilder.loadTexts: cgspLinkRemoteIpAddrTableEntry.setStatus('current')
cgspLinkRemoteIpAddrNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cgspLinkRemoteIpAddrNumber.setStatus('current')
cgspLinkRemoteIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 3, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkRemoteIpAddrType.setStatus('current')
cgspLinkRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 3, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkRemoteIpAddress.setStatus('current')
cgspLinkRemoteIpAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgspLinkRemoteIpAddrRowStatus.setStatus('current')
cgspLinkUtilTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 4), )
if mibBuilder.loadTexts: cgspLinkUtilTable.setStatus('current')
cgspLinkUtilTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 4, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GSP-MIB", "cgspLinksetName"), (0, "CISCO-ITP-GSP-MIB", "cgspLinkSlc"), (0, "CISCO-ITP-GSP-MIB", "cgspLinkUtilIndex"))
if mibBuilder.loadTexts: cgspLinkUtilTableEntry.setStatus('current')
cgspLinkUtilIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)))
if mibBuilder.loadTexts: cgspLinkUtilIndex.setStatus('current')
cgspLinkUtilRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 4, 1, 2), CgspLinkUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkUtilRcvd.setStatus('current')
cgspLinkUtilSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 4, 1, 3), CgspLinkUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkUtilSent.setStatus('current')
cgspLinkUtilEndTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 6, 4, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgspLinkUtilEndTimestamp.setStatus('current')
cgspLsStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 7, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspLsStateChangeNotifEnabled.setStatus('current')
cgspLnkStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 7, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspLnkStateChangeNotifEnabled.setStatus('current')
cgspCongestionNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 7, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspCongestionNotifEnabled.setStatus('current')
cgspLinkUtilNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 7, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspLinkUtilNotifEnabled.setStatus('current')
cgspIsolationNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 7, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspIsolationNotifEnabled.setStatus('current')
cgspUPUNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 7, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgspUPUNotifEnabled.setStatus('current')
cgspUPUIntervalDuration = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 8, 1), Unsigned32()).setUnits('seconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgspUPUIntervalDuration.setStatus('current')
cgspIntervalUPUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 336, 1, 8, 2), Unsigned32()).setUnits('MSUs').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgspIntervalUPUs.setStatus('current')
ciscoGspLinksetStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 1)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspLinksetDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinksetSourceDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetState"))
if mibBuilder.loadTexts: ciscoGspLinksetStateChange.setStatus('current')
ciscoGspLinkStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 2)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspLinksetSourceDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinkDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinkState"), ("CISCO-ITP-GSP-MIB", "cgspLinkReason"), ("CISCO-ITP-GSP-MIB", "cgspLinkTestResult"))
if mibBuilder.loadTexts: ciscoGspLinkStateChange.setStatus('current')
ciscoGspCongestionChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 3)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspLinksetSourceDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinkDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionState"))
if mibBuilder.loadTexts: ciscoGspCongestionChange.setStatus('current')
ciscoGspLinkRcvdUtilChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 4)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspLinksetSourceDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinkDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilStateRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilizationRcvd"))
if mibBuilder.loadTexts: ciscoGspLinkRcvdUtilChange.setStatus('current')
ciscoGspLinkSentUtilChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 5)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspLinksetSourceDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinkDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilStateSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilizationSent"))
if mibBuilder.loadTexts: ciscoGspLinkSentUtilChange.setStatus('current')
ciscoGspIsolation = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 6)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspInstDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspInstDescription"))
if mibBuilder.loadTexts: ciscoGspIsolation.setStatus('current')
ciscoGspUPUReceived = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 8)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspInstUserPartDisplay"), ("CISCO-ITP-GSP-MIB", "cgspUPUIntervalDuration"), ("CISCO-ITP-GSP-MIB", "cgspIntervalUPUs"))
if mibBuilder.loadTexts: ciscoGspUPUReceived.setStatus('current')
ciscoGspUPUTransmitted = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 9)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspInstUserPartDisplay"), ("CISCO-ITP-GSP-MIB", "cgspUPUIntervalDuration"), ("CISCO-ITP-GSP-MIB", "cgspIntervalUPUs"))
if mibBuilder.loadTexts: ciscoGspUPUTransmitted.setStatus('current')
ciscoGspRxCongestionChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 336, 0, 10)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspLinksetSourceDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinkDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinkRxCongestionState"))
if mibBuilder.loadTexts: ciscoGspRxCongestionChange.setStatus('current')
ciscoGspMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 1))
ciscoGspMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2))
ciscoGspMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 1, 1)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspProfileGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstanceGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspPointCodeGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkRemoteIpGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkUtilGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspMIBCompliance = ciscoGspMIBCompliance.setStatus('deprecated')
ciscoGspMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 1, 2)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspProfileGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstanceGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspPointCodeGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkRemoteIpGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkUtilGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspMIBComplianceRev1 = ciscoGspMIBComplianceRev1.setStatus('deprecated')
ciscoGspMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 1, 3)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspProfileGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstanceGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspPointCodeGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkRemoteIpGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkUtilGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroupRev1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspMIBComplianceRev2 = ciscoGspMIBComplianceRev2.setStatus('deprecated')
ciscoGspMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 1, 4)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspProfileGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstanceGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspPointCodeGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkRemoteIpGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkUtilGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroupRev1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstUPUGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsInfoGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroupSup2"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroupSup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspMIBComplianceRev3 = ciscoGspMIBComplianceRev3.setStatus('deprecated')
ciscoGspMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 1, 5)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspProfileGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstanceGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspPointCodeGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkRemoteIpGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkUtilGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroupRev1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstUPUGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsInfoGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroupSup2"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroupSup2"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstSccpWrrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspMIBComplianceRev4 = ciscoGspMIBComplianceRev4.setStatus('deprecated')
ciscoGspMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 1, 6)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspProfileGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstanceGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspPointCodeGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinksetTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkTimerGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkRemoteIpGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkUtilGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroupRev1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspScalarsGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstUPUGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsInfoGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsEnableGroupSup2"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroupSup2"), ("CISCO-ITP-GSP-MIB", "ciscoGspInstSccpWrrGroup"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkTableEntryGroupSup1"), ("CISCO-ITP-GSP-MIB", "ciscoGspNotificationsGroupSup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspMIBComplianceRev5 = ciscoGspMIBComplianceRev5.setStatus('current')
ciscoGspScalarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 1)).setObjects(("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-GSP-MIB", "cgspUtilSampleInterval"), ("CISCO-ITP-GSP-MIB", "cgspUtilThreshold"), ("CISCO-ITP-GSP-MIB", "cgspUtilAbateDelta"), ("CISCO-ITP-GSP-MIB", "cgspPlanCapacityDefault"), ("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspScalarsGroup = ciscoGspScalarsGroup.setStatus('current')
ciscoGspProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 2)).setObjects(("CISCO-ITP-GSP-MIB", "cgspProfileVariant"), ("CISCO-ITP-GSP-MIB", "cgspProfileMtp2BundleTimer"), ("CISCO-ITP-GSP-MIB", "cgspProfileMtp2SendQueueDepth"), ("CISCO-ITP-GSP-MIB", "cgspProfileRowStatus"), ("CISCO-ITP-GSP-MIB", "cgspProfileTimerValue"), ("CISCO-ITP-GSP-MIB", "cgspProfileTimerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspProfileGroup = ciscoGspProfileGroup.setStatus('current')
ciscoGspInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 3)).setObjects(("CISCO-ITP-GSP-MIB", "cgspInstNetworkIndicator"), ("CISCO-ITP-GSP-MIB", "cgspInstVariant"), ("CISCO-ITP-GSP-MIB", "cgspInstDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspInstDescription"), ("CISCO-ITP-GSP-MIB", "cgspInstTFR"), ("CISCO-ITP-GSP-MIB", "cgspInstCongestionsLevels"), ("CISCO-ITP-GSP-MIB", "cgspInstFastRestart"), ("CISCO-ITP-GSP-MIB", "cgspInstDistSccpUnseq"), ("CISCO-ITP-GSP-MIB", "cgspInstSummaryRoutingException"), ("CISCO-ITP-GSP-MIB", "cgspInstNumber"), ("CISCO-ITP-GSP-MIB", "cgspInstRouteTableName"), ("CISCO-ITP-GSP-MIB", "cgspInstRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspInstanceGroup = ciscoGspInstanceGroup.setStatus('current')
ciscoGspInstTimerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 4)).setObjects(("CISCO-ITP-GSP-MIB", "cgspInstTimerValue"), ("CISCO-ITP-GSP-MIB", "cgspInstTimerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspInstTimerGroup = ciscoGspInstTimerGroup.setStatus('current')
ciscoGspPointCodeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 5)).setObjects(("CISCO-ITP-GSP-MIB", "cgspPointCodeType"), ("CISCO-ITP-GSP-MIB", "cgspPointCodeDisplay"), ("CISCO-ITP-GSP-MIB", "cgspPointCodeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspPointCodeGroup = ciscoGspPointCodeGroup.setStatus('current')
ciscoGspLinksetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 6)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinksetSourcePointCode"), ("CISCO-ITP-GSP-MIB", "cgspLinksetSourceDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentPointCode"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentDisplayPC"), ("CISCO-ITP-GSP-MIB", "cgspLinksetState"), ("CISCO-ITP-GSP-MIB", "cgspLinksetInboundAcl"), ("CISCO-ITP-GSP-MIB", "cgspLinksetOutboundAcl"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAccountingMtp3"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAccountingGtt"), ("CISCO-ITP-GSP-MIB", "cgspLinksetNumLinks"), ("CISCO-ITP-GSP-MIB", "cgspLinksetDurationInService"), ("CISCO-ITP-GSP-MIB", "cgspLinksetDurationOutService"), ("CISCO-ITP-GSP-MIB", "cgspLinksetActPriority"), ("CISCO-ITP-GSP-MIB", "cgspLinksetDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinksetDescription"), ("CISCO-ITP-GSP-MIB", "cgspLinksetRotateSlsEnable"), ("CISCO-ITP-GSP-MIB", "cgspLinksetRotateSlsShift"), ("CISCO-ITP-GSP-MIB", "cgspLinksetProfileName"), ("CISCO-ITP-GSP-MIB", "cgspLinksetAdjacentInst"), ("CISCO-ITP-GSP-MIB", "cgspLinksetRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinksetGroup = ciscoGspLinksetGroup.setStatus('current')
ciscoGspLinksetTimerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 7)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinksetTimerValue"), ("CISCO-ITP-GSP-MIB", "cgspLinksetTimerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinksetTimerGroup = ciscoGspLinksetTimerGroup.setStatus('current')
ciscoGspLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 8)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinkDescription"), ("CISCO-ITP-GSP-MIB", "cgspLinkState"), ("CISCO-ITP-GSP-MIB", "cgspLinkReason"), ("CISCO-ITP-GSP-MIB", "cgspLinkType"), ("CISCO-ITP-GSP-MIB", "cgspLinkifIndex"), ("CISCO-ITP-GSP-MIB", "cgspLinkSctpAssociation"), ("CISCO-ITP-GSP-MIB", "cgspLinkXmitQueueDepth"), ("CISCO-ITP-GSP-MIB", "cgspLinkXmitQueueDepthHigh"), ("CISCO-ITP-GSP-MIB", "cgspLinkXmitQueueDepthHighRT"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionState"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionAbate1"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionAbate2"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionAbate3"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionOnset1"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionOnset2"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionOnset3"), ("CISCO-ITP-GSP-MIB", "cgspLinkSigLinkTest"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E2"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E3"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E5"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E7"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E8"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E9"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E10"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E11"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E5"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E6"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E7"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E9"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E10"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E15"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E16"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E18"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E2Packets"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E2Bytes"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E3"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E4"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E5"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E6"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E7"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E10L1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E10L2"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E10L3"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E11L1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E11L2"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E11L3"), ("CISCO-ITP-GSP-MIB", "cgspLinkLocalPeerPort"), ("CISCO-ITP-GSP-MIB", "cgspLinkRemotePeerPort"), ("CISCO-ITP-GSP-MIB", "cgspLinkQosClass"), ("CISCO-ITP-GSP-MIB", "cgspLinkDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinkDroppedPkts"), ("CISCO-ITP-GSP-MIB", "cgspLinkTransmittedLSSUs"), ("CISCO-ITP-GSP-MIB", "cgspLinkReceivedLSSUs"), ("CISCO-ITP-GSP-MIB", "cgspLinkProtocolDetails"), ("CISCO-ITP-GSP-MIB", "cgspLinkLsacState"), ("CISCO-ITP-GSP-MIB", "cgspLinkTsrcState"), ("CISCO-ITP-GSP-MIB", "cgspLinkTcocState"), ("CISCO-ITP-GSP-MIB", "cgspLinkTcocLocalBSNT"), ("CISCO-ITP-GSP-MIB", "cgspLinkTcocRemoteBSNT"), ("CISCO-ITP-GSP-MIB", "cgspLinkTcbcState"), ("CISCO-ITP-GSP-MIB", "cgspLinkReceivedSIBs"), ("CISCO-ITP-GSP-MIB", "cgspLinkTransmittedSIBs"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T01Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T02Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T03Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T04Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T05Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T06Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T07Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkOMAERMCounts"), ("CISCO-ITP-GSP-MIB", "cgspLinkOMAERMFailCounts"), ("CISCO-ITP-GSP-MIB", "cgspLinkOMSURMCounts"), ("CISCO-ITP-GSP-MIB", "cgspLinkOMSURMFailCounts"), ("CISCO-ITP-GSP-MIB", "cgspLinkPlanCapacityRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilThresholdRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilizationRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilStateRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkL2BytesRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkPlanCapacitySent"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilThresholdSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilizationSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilStateSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkL2BytesSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkTestResult"), ("CISCO-ITP-GSP-MIB", "cgspLinkRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinkGroup = ciscoGspLinkGroup.setStatus('deprecated')
ciscoGspLinkTimerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 9)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinkTimerValue"), ("CISCO-ITP-GSP-MIB", "cgspLinkTimerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinkTimerGroup = ciscoGspLinkTimerGroup.setStatus('current')
ciscoGspLinkRemoteIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 10)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinkRemoteIpAddrType"), ("CISCO-ITP-GSP-MIB", "cgspLinkRemoteIpAddress"), ("CISCO-ITP-GSP-MIB", "cgspLinkRemoteIpAddrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinkRemoteIpGroup = ciscoGspLinkRemoteIpGroup.setStatus('current')
ciscoGspLinkUtilGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 11)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinkUtilRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilEndTimestamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinkUtilGroup = ciscoGspLinkUtilGroup.setStatus('current')
ciscoGspNotificationsEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 12)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLsStateChangeNotifEnabled"), ("CISCO-ITP-GSP-MIB", "cgspLnkStateChangeNotifEnabled"), ("CISCO-ITP-GSP-MIB", "cgspCongestionNotifEnabled"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspNotificationsEnableGroup = ciscoGspNotificationsEnableGroup.setStatus('current')
ciscoGspNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 13)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspLinksetStateChange"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkStateChange"), ("CISCO-ITP-GSP-MIB", "ciscoGspCongestionChange"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkRcvdUtilChange"), ("CISCO-ITP-GSP-MIB", "ciscoGspLinkSentUtilChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspNotificationsGroup = ciscoGspNotificationsGroup.setStatus('current')
ciscoGspLinkGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 14)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinkDescription"), ("CISCO-ITP-GSP-MIB", "cgspLinkState"), ("CISCO-ITP-GSP-MIB", "cgspLinkReason"), ("CISCO-ITP-GSP-MIB", "cgspLinkType"), ("CISCO-ITP-GSP-MIB", "cgspLinkifIndex"), ("CISCO-ITP-GSP-MIB", "cgspLinkXmitQueueDepth"), ("CISCO-ITP-GSP-MIB", "cgspLinkXmitQueueDepthHigh"), ("CISCO-ITP-GSP-MIB", "cgspLinkXmitQueueDepthHighRT"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionState"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionAbate1"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionAbate2"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionAbate3"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionOnset1"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionOnset2"), ("CISCO-ITP-GSP-MIB", "cgspLinkCongestionOnset3"), ("CISCO-ITP-GSP-MIB", "cgspLinkSigLinkTest"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E2"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E3"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E5"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E7"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E8"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E9"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E10"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E11"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E5"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E6"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E7"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E9"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E10"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E15"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E16"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E18"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E2Packets"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E2Bytes"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E3"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E4"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E5"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E6"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E7"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E10L1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E10L2"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E10L3"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E11L1"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E11L2"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T3E11L3"), ("CISCO-ITP-GSP-MIB", "cgspLinkLocalPeerPort"), ("CISCO-ITP-GSP-MIB", "cgspLinkRemotePeerPort"), ("CISCO-ITP-GSP-MIB", "cgspLinkQosClass"), ("CISCO-ITP-GSP-MIB", "cgspLinkDisplayName"), ("CISCO-ITP-GSP-MIB", "cgspLinkDroppedPkts"), ("CISCO-ITP-GSP-MIB", "cgspLinkTransmittedLSSUs"), ("CISCO-ITP-GSP-MIB", "cgspLinkReceivedLSSUs"), ("CISCO-ITP-GSP-MIB", "cgspLinkProtocolDetails"), ("CISCO-ITP-GSP-MIB", "cgspLinkLsacState"), ("CISCO-ITP-GSP-MIB", "cgspLinkTsrcState"), ("CISCO-ITP-GSP-MIB", "cgspLinkTcocState"), ("CISCO-ITP-GSP-MIB", "cgspLinkTcocLocalBSNT"), ("CISCO-ITP-GSP-MIB", "cgspLinkTcocRemoteBSNT"), ("CISCO-ITP-GSP-MIB", "cgspLinkTcbcState"), ("CISCO-ITP-GSP-MIB", "cgspLinkReceivedSIBs"), ("CISCO-ITP-GSP-MIB", "cgspLinkTransmittedSIBs"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T01Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T02Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T03Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T04Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T05Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T06Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkMtp2T07Counts"), ("CISCO-ITP-GSP-MIB", "cgspLinkOMAERMCounts"), ("CISCO-ITP-GSP-MIB", "cgspLinkOMAERMFailCounts"), ("CISCO-ITP-GSP-MIB", "cgspLinkOMSURMCounts"), ("CISCO-ITP-GSP-MIB", "cgspLinkOMSURMFailCounts"), ("CISCO-ITP-GSP-MIB", "cgspLinkPlanCapacityRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilThresholdRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilizationRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilStateRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkL2BytesRcvd"), ("CISCO-ITP-GSP-MIB", "cgspLinkPlanCapacitySent"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilThresholdSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilizationSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkUtilStateSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkL2BytesSent"), ("CISCO-ITP-GSP-MIB", "cgspLinkTestResult"), ("CISCO-ITP-GSP-MIB", "cgspLinkRowStatus"), ("CISCO-ITP-GSP-MIB", "cgspLinkSctpAssociationId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinkGroupRev1 = ciscoGspLinkGroupRev1.setStatus('current')
ciscoGspNotificationsEnableGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 15)).setObjects(("CISCO-ITP-GSP-MIB", "cgspIsolationNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspNotificationsEnableGroupSup1 = ciscoGspNotificationsEnableGroupSup1.setStatus('current')
ciscoGspNotificationsGroupSup1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 16)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspIsolation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspNotificationsGroupSup1 = ciscoGspNotificationsGroupSup1.setStatus('current')
ciscoGspLinkGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 17)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E12"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T1E12Errors"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E11"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E17"), ("CISCO-ITP-GSP-MIB", "cgspLinkQ752T2E19"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinkGroupSup1 = ciscoGspLinkGroupSup1.setStatus('current')
ciscoGspScalarsGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 18)).setObjects(("CISCO-ITP-GSP-MIB", "cgspUPUNotifWindowTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspScalarsGroupSup1 = ciscoGspScalarsGroupSup1.setStatus('current')
ciscoGspInstUPUGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 20)).setObjects(("CISCO-ITP-GSP-MIB", "cgspInstSIUPUReceived"), ("CISCO-ITP-GSP-MIB", "cgspInstSIUPUTransmitted"), ("CISCO-ITP-GSP-MIB", "cgspInstUserPartDisplay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspInstUPUGroup = ciscoGspInstUPUGroup.setStatus('current')
ciscoGspNotificationsInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 21)).setObjects(("CISCO-ITP-GSP-MIB", "cgspUPUIntervalDuration"), ("CISCO-ITP-GSP-MIB", "cgspIntervalUPUs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspNotificationsInfoGroup = ciscoGspNotificationsInfoGroup.setStatus('current')
ciscoGspNotificationsEnableGroupSup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 22)).setObjects(("CISCO-ITP-GSP-MIB", "cgspUPUNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspNotificationsEnableGroupSup2 = ciscoGspNotificationsEnableGroupSup2.setStatus('current')
ciscoGspNotificationsGroupSup2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 23)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspUPUReceived"), ("CISCO-ITP-GSP-MIB", "ciscoGspUPUTransmitted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspNotificationsGroupSup2 = ciscoGspNotificationsGroupSup2.setStatus('current')
ciscoGspInstSccpWrrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 24)).setObjects(("CISCO-ITP-GSP-MIB", "cgspInstSccpWrrOpcShift"), ("CISCO-ITP-GSP-MIB", "cgspInstSccpWrrOption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspInstSccpWrrGroup = ciscoGspInstSccpWrrGroup.setStatus('current')
ciscoGspLinkTableEntryGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 25)).setObjects(("CISCO-ITP-GSP-MIB", "cgspLinkRxCongestionState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspLinkTableEntryGroupSup1 = ciscoGspLinkTableEntryGroupSup1.setStatus('current')
ciscoGspNotificationsGroupSup3 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 336, 2, 2, 26)).setObjects(("CISCO-ITP-GSP-MIB", "ciscoGspRxCongestionChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGspNotificationsGroupSup3 = ciscoGspNotificationsGroupSup3.setStatus('current')
mibBuilder.exportSymbols("CISCO-ITP-GSP-MIB", cgspLinksetDurationOutService=cgspLinksetDurationOutService, cgspLinkQ752T3E11L2=cgspLinkQ752T3E11L2, ciscoGspMIBGroups=ciscoGspMIBGroups, cgspUPUIntervalDuration=cgspUPUIntervalDuration, cgspLinksetTimerValue=cgspLinksetTimerValue, cgspInstTimerTable=cgspInstTimerTable, cgspLinkUtilTable=cgspLinkUtilTable, ciscoGspLinksetTimerGroup=ciscoGspLinksetTimerGroup, ciscoGspNotificationsEnableGroupSup2=ciscoGspNotificationsEnableGroupSup2, cgspLinkCongestionAbate3=cgspLinkCongestionAbate3, cgspLinkTable=cgspLinkTable, ciscoGspMIBComplianceRev4=ciscoGspMIBComplianceRev4, CgspLinkUtilizationState=CgspLinkUtilizationState, cgspLinksetProfileName=cgspLinksetProfileName, ciscoGspNotificationsEnableGroupSup1=ciscoGspNotificationsEnableGroupSup1, cgspNotificationsEnable=cgspNotificationsEnable, cgspProfileMtp2BundleTimer=cgspProfileMtp2BundleTimer, CgspTimerValue=CgspTimerValue, cgspLinkQ752T1E2=cgspLinkQ752T1E2, cgspLinkQ752T2E9=cgspLinkQ752T2E9, cgspPlanCapacityDefault=cgspPlanCapacityDefault, cgspLinksetRotateSlsEnable=cgspLinksetRotateSlsEnable, CItpTcSccpWrrOption=CItpTcSccpWrrOption, cgspInstDisplayName=cgspInstDisplayName, cgspLinkXmitQueueDepthHigh=cgspLinkXmitQueueDepthHigh, cgspLinkMtp2T07Counts=cgspLinkMtp2T07Counts, ciscoGspLinkRemoteIpGroup=ciscoGspLinkRemoteIpGroup, cgspPointCodeType=cgspPointCodeType, cgspLinkQosClass=cgspLinkQosClass, ciscoGspIsolation=ciscoGspIsolation, ciscoGspMIBComplianceRev1=ciscoGspMIBComplianceRev1, cgspLinkRemoteIpAddress=cgspLinkRemoteIpAddress, cgspLinkDroppedPkts=cgspLinkDroppedPkts, CgspSampleInterval=CgspSampleInterval, cgspLinkPlanCapacityRcvd=cgspLinkPlanCapacityRcvd, cgspLinkUtilThresholdSent=cgspLinkUtilThresholdSent, cgspInstSummaryRoutingException=cgspInstSummaryRoutingException, cgspInstFastRestart=cgspInstFastRestart, cgspLinkDescription=cgspLinkDescription, cgspLinkQ752T3E2Packets=cgspLinkQ752T3E2Packets, cgspLinkQ752T3E4=cgspLinkQ752T3E4, cgspLinkTsrcState=cgspLinkTsrcState, cgspLinkOMAERMCounts=cgspLinkOMAERMCounts, ciscoGspMIBCompliances=ciscoGspMIBCompliances, cgspUPUNotifWindowTime=cgspUPUNotifWindowTime, ciscoGspUPUTransmitted=ciscoGspUPUTransmitted, ciscoGspMIB=ciscoGspMIB, cgspProfileTimerNumber=cgspProfileTimerNumber, cgspLinksetDisplayName=cgspLinksetDisplayName, cgspLinkXmitQueueDepth=cgspLinkXmitQueueDepth, cgspLinkCongestionOnset3=cgspLinkCongestionOnset3, cgspLinkQ752T3E5=cgspLinkQ752T3E5, cgspInstUPUTableEntry=cgspInstUPUTableEntry, cgspLinkUtilStateRcvd=cgspLinkUtilStateRcvd, cgspLinkPlanCapacitySent=cgspLinkPlanCapacitySent, ciscoGspMIBComplianceRev5=ciscoGspMIBComplianceRev5, ciscoGspLinkGroup=ciscoGspLinkGroup, ciscoGspNotificationsGroupSup3=ciscoGspNotificationsGroupSup3, cgspLinkQ752T1E8=cgspLinkQ752T1E8, cgspLinkReceivedLSSUs=cgspLinkReceivedLSSUs, cgspLinkMtp2T06Counts=cgspLinkMtp2T06Counts, cgspLinkQ752T3E11L3=cgspLinkQ752T3E11L3, ciscoGspNotificationsGroupSup1=ciscoGspNotificationsGroupSup1, cgspLinkMtp2T05Counts=cgspLinkMtp2T05Counts, cgspLinkQ752T1E7=cgspLinkQ752T1E7, cgspLinkQ752T3E6=cgspLinkQ752T3E6, ciscoGspLinkStateChange=ciscoGspLinkStateChange, cgspLinkL2BytesSent=cgspLinkL2BytesSent, cgspPointCodeNi=cgspPointCodeNi, cgspLinksetActPriority=cgspLinksetActPriority, cgspLinkSigLinkTest=cgspLinkSigLinkTest, CgspPercentThreshold=CgspPercentThreshold, cgspLinkRemoteIpAddrRowStatus=cgspLinkRemoteIpAddrRowStatus, cgspInstRouteTableName=cgspInstRouteTableName, cgspLinkTimerNumber=cgspLinkTimerNumber, CgspTimerNumbers=CgspTimerNumbers, cgspLinkSctpAssociation=cgspLinkSctpAssociation, ciscoGspLinkGroupRev1=ciscoGspLinkGroupRev1, cgspInstUPUTable=cgspInstUPUTable, cgspLinkTimerRowStatus=cgspLinkTimerRowStatus, cgspProfile=cgspProfile, cgspLinkQ752T2E10=cgspLinkQ752T2E10, ciscoGspMIBCompliance=ciscoGspMIBCompliance, cgspLinksetAdjacentInst=cgspLinksetAdjacentInst, cgspLinkXmitQueueDepthHighRT=cgspLinkXmitQueueDepthHighRT, ciscoGspMIBComplianceRev3=ciscoGspMIBComplianceRev3, cgspLinkCongestionOnset1=cgspLinkCongestionOnset1, ciscoGspScalarsGroup=ciscoGspScalarsGroup, cgspLinkMtp2T01Counts=cgspLinkMtp2T01Counts, ciscoGspLinkTimerGroup=ciscoGspLinkTimerGroup, ciscoGspLinkTableEntryGroupSup1=ciscoGspLinkTableEntryGroupSup1, ciscoGspMIBNotifs=ciscoGspMIBNotifs, cgspLinksetAdjacentPointCode=cgspLinksetAdjacentPointCode, CgspSequenceNumber=CgspSequenceNumber, cgspLinkset=cgspLinkset, cgspLinkOMAERMFailCounts=cgspLinkOMAERMFailCounts, cgspLinkReason=cgspLinkReason, cgspLinkTimerValue=cgspLinkTimerValue, cgspPointCodeBin=cgspPointCodeBin, cgspLinkUtilIndex=cgspLinkUtilIndex, ciscoGspRxCongestionChange=ciscoGspRxCongestionChange, cgspLinksetState=cgspLinksetState, ciscoGspNotificationsGroup=ciscoGspNotificationsGroup, cgspUtilAbateDelta=cgspUtilAbateDelta, cgspInstNetworkIndicator=cgspInstNetworkIndicator, cgspScalars=cgspScalars, cgspLinkDisplayName=cgspLinkDisplayName, cgspProfileTimerValue=cgspProfileTimerValue, cgspLinkCongestionState=cgspLinkCongestionState, cgspLinkCongestionOnset2=cgspLinkCongestionOnset2, cgspLinkQ752T1E11=cgspLinkQ752T1E11, cgspLinkOMSURMFailCounts=cgspLinkOMSURMFailCounts, cgspLnkStateChangeNotifEnabled=cgspLnkStateChangeNotifEnabled, ciscoGspPointCodeGroup=ciscoGspPointCodeGroup, cgspLinkTcbcState=cgspLinkTcbcState, ciscoGspInstUPUGroup=ciscoGspInstUPUGroup, cgspLinkL2BytesRcvd=cgspLinkL2BytesRcvd, cgspLinkQ752T2E1=cgspLinkQ752T2E1, ciscoGspCongestionChange=ciscoGspCongestionChange, cgspLinkQ752T3E2Bytes=cgspLinkQ752T3E2Bytes, cgspPointCodeTable=cgspPointCodeTable, cgspInstSIUPUReceived=cgspInstSIUPUReceived, cgspInstDescription=cgspInstDescription, cgspLinkRemoteIpAddrNumber=cgspLinkRemoteIpAddrNumber, cgspLinkQ752T3E10L3=cgspLinkQ752T3E10L3, cgspLinksetOutboundAcl=cgspLinksetOutboundAcl, ciscoGspLinkUtilGroup=ciscoGspLinkUtilGroup, cgspLinkTableEntry=cgspLinkTableEntry, cgspLinkSlc=cgspLinkSlc, cgspLinkTcocRemoteBSNT=cgspLinkTcocRemoteBSNT, cgspInstNumber=cgspInstNumber, cgspLinkUtilStateSent=cgspLinkUtilStateSent, cgspUtilThreshold=cgspUtilThreshold, cgspLinkLsacState=cgspLinkLsacState, cgspLinksetTimerTable=cgspLinksetTimerTable, cgspLinksetTimerTableEntry=cgspLinksetTimerTableEntry, cgspLinkMtp2T03Counts=cgspLinkMtp2T03Counts, ciscoGspInstTimerGroup=ciscoGspInstTimerGroup, CgspDisplayInstanceUserPart=CgspDisplayInstanceUserPart, cgspInstanceTable=cgspInstanceTable, cgspInstNetwork=cgspInstNetwork, cgspInstTimerTableEntry=cgspInstTimerTableEntry, cgspLinkReceivedSIBs=cgspLinkReceivedSIBs, cgspLinkLocalPeerPort=cgspLinkLocalPeerPort, cgspLinkUtilRcvd=cgspLinkUtilRcvd, cgspLinkType=cgspLinkType, cgspCongestionNotifEnabled=cgspCongestionNotifEnabled, cgspLinkTimerTable=cgspLinkTimerTable, cgspLinkQ752T1E1=cgspLinkQ752T1E1, cgspInstTimerValue=cgspInstTimerValue, ciscoGspInstSccpWrrGroup=ciscoGspInstSccpWrrGroup, ciscoGspUPUReceived=ciscoGspUPUReceived, cgspLinkRowStatus=cgspLinkRowStatus, cgspLinkUtilizationSent=cgspLinkUtilizationSent, cgspInstDistSccpUnseq=cgspInstDistSccpUnseq, cgspLinkQ752T3E7=cgspLinkQ752T3E7, cgspInstTimerRowStatus=cgspInstTimerRowStatus, cgspInstSIUPUTransmitted=cgspInstSIUPUTransmitted, cgspLinksetName=cgspLinksetName, cgspLinkQ752T1E5=cgspLinkQ752T1E5, ciscoGspLinkGroupSup1=ciscoGspLinkGroupSup1, cgspLinksetDescription=cgspLinksetDescription, cgspLinkQ752T2E5=cgspLinkQ752T2E5, ciscoGspLinksetStateChange=ciscoGspLinksetStateChange, ciscoGspInstanceGroup=ciscoGspInstanceGroup, ciscoGspMIBConform=ciscoGspMIBConform, cgspInstCongestionsLevels=cgspInstCongestionsLevels, cgspPointCodeTableEntry=cgspPointCodeTableEntry, cgspLinkQ752T1E9=cgspLinkQ752T1E9, cgspLinksetTable=cgspLinksetTable, cgspLinkTcocLocalBSNT=cgspLinkTcocLocalBSNT, cgspLinkMtp2T04Counts=cgspLinkMtp2T04Counts, cgspInstance=cgspInstance, cgspInstRowStatus=cgspInstRowStatus, cgspLinksetRotateSlsShift=cgspLinksetRotateSlsShift, cgspLinkifIndex=cgspLinkifIndex, cgspLinkOMSURMCounts=cgspLinkOMSURMCounts, cgspInstUserPartDisplay=cgspInstUserPartDisplay, cgspLinkUtilSent=cgspLinkUtilSent, cgspIntervalUPUs=cgspIntervalUPUs, cgspLinksetAccountingGtt=cgspLinksetAccountingGtt, cgspLinksetTableEntry=cgspLinksetTableEntry, ciscoGspLinksetGroup=ciscoGspLinksetGroup, cgspLinkCongestionAbate1=cgspLinkCongestionAbate1, cgspLinkQ752T1E3=cgspLinkQ752T1E3, cgspPointCodeRowStatus=cgspPointCodeRowStatus, cgspInstTFR=cgspInstTFR, cgspLinkRemoteIpAddrTable=cgspLinkRemoteIpAddrTable, CgspProfileName=CgspProfileName, cgspLinkUtilizationRcvd=cgspLinkUtilizationRcvd, cgspLinksetAccountingMtp3=cgspLinksetAccountingMtp3, CgspLinkCapacity=CgspLinkCapacity, cgspProfileTableEntry=cgspProfileTableEntry, cgspLinkQ752T2E6=cgspLinkQ752T2E6, cgspLinkMtp2T02Counts=cgspLinkMtp2T02Counts, cgspPointCode=cgspPointCode, cgspUtilSampleInterval=cgspUtilSampleInterval, cgspLink=cgspLink, cgspLinkTransmittedLSSUs=cgspLinkTransmittedLSSUs, cgspLinksetNumLinks=cgspLinksetNumLinks, cgspInstTimerNumber=cgspInstTimerNumber, cgspLinkQ752T3E3=cgspLinkQ752T3E3, cgspLinksetRowStatus=cgspLinksetRowStatus, cgspLinkUtilThresholdRcvd=cgspLinkUtilThresholdRcvd, cgspProfileRowStatus=cgspProfileRowStatus, cgspLinkQ752T2E17=cgspLinkQ752T2E17, cgspLinkUtilNotifEnabled=cgspLinkUtilNotifEnabled, cgspNotificationsInfo=cgspNotificationsInfo, cgspInstVariant=cgspInstVariant, cgspLinksetAdjacentDisplayPC=cgspLinksetAdjacentDisplayPC, cgspLinkState=cgspLinkState, cgspLinkQ752T3E10L2=cgspLinkQ752T3E10L2, cgspLinkQ752T2E19=cgspLinkQ752T2E19, cgspIsolationNotifEnabled=cgspIsolationNotifEnabled, cgspLinkSctpAssociationId=cgspLinkSctpAssociationId, cgspProfileTimerTableEntry=cgspProfileTimerTableEntry, cgspLinkCongestionAbate2=cgspLinkCongestionAbate2, cgspLinkRxCongestionState=cgspLinkRxCongestionState, ciscoGspLinkRcvdUtilChange=ciscoGspLinkRcvdUtilChange, cgspLinkQ752T2E16=cgspLinkQ752T2E16, cgspUPUNotifEnabled=cgspUPUNotifEnabled, cgspLinkQ752T1E10=cgspLinkQ752T1E10, cgspLinksetDurationInService=cgspLinksetDurationInService, cgspLinkQ752T3E11L1=cgspLinkQ752T3E11L1, ciscoGspMIBObjects=ciscoGspMIBObjects, cgspCLLICode=cgspCLLICode, cgspLinkTestResult=cgspLinkTestResult, cgspLinkQ752T2E15=cgspLinkQ752T2E15, ciscoGspNotificationsInfoGroup=ciscoGspNotificationsInfoGroup, cgspLinkTransmittedSIBs=cgspLinkTransmittedSIBs, cgspProfileTimerRowStatus=cgspProfileTimerRowStatus, ciscoGspMIBComplianceRev2=ciscoGspMIBComplianceRev2, CgspLinkTestResults=CgspLinkTestResults, cgspInstSccpWrrOption=cgspInstSccpWrrOption, cgspLinkQ752T1E12Errors=cgspLinkQ752T1E12Errors, PYSNMP_MODULE_ID=ciscoGspMIB, cgspEventSequenceNumber=cgspEventSequenceNumber, cgspLinksetTimerNumber=cgspLinksetTimerNumber, cgspLinkRemoteIpAddrTableEntry=cgspLinkRemoteIpAddrTableEntry, cgspLinkQ752T2E18=cgspLinkQ752T2E18, cgspLinkUtilTableEntry=cgspLinkUtilTableEntry, ciscoGspProfileGroup=ciscoGspProfileGroup, CgspLinkUtilization=CgspLinkUtilization, cgspProfileVariant=cgspProfileVariant, cgspProfileTimerTable=cgspProfileTimerTable, cgspProfileName=cgspProfileName, cgspLinksetInboundAcl=cgspLinksetInboundAcl, cgspProfileTable=cgspProfileTable, ciscoGspNotificationsGroupSup2=ciscoGspNotificationsGroupSup2, CgspSS7Variant=CgspSS7Variant, cgspLinkTimerTableEntry=cgspLinkTimerTableEntry, cgspLinkRemotePeerPort=cgspLinkRemotePeerPort, cgspLinkProtocolDetails=cgspLinkProtocolDetails, cgspLinksetSourceDisplayPC=cgspLinksetSourceDisplayPC)
mibBuilder.exportSymbols("CISCO-ITP-GSP-MIB", cgspLinkQ752T2E7=cgspLinkQ752T2E7, cgspLinkRemoteIpAddrType=cgspLinkRemoteIpAddrType, cgspLinkUtilEndTimestamp=cgspLinkUtilEndTimestamp, ciscoGspNotificationsEnableGroup=ciscoGspNotificationsEnableGroup, ciscoGspScalarsGroupSup1=ciscoGspScalarsGroupSup1, cgspLinkQ752T3E10L1=cgspLinkQ752T3E10L1, cgspMtp3SI=cgspMtp3SI, cgspLinkQ752T1E12=cgspLinkQ752T1E12, cgspLinksetTimerRowStatus=cgspLinksetTimerRowStatus, cgspInstanceTableEntry=cgspInstanceTableEntry, cgspLinkTcocState=cgspLinkTcocState, cgspLinkQ752T3E1=cgspLinkQ752T3E1, cgspLsStateChangeNotifEnabled=cgspLsStateChangeNotifEnabled, cgspInstSccpWrrOpcShift=cgspInstSccpWrrOpcShift, cgspLinkQ752T2E11=cgspLinkQ752T2E11, cgspProfileMtp2SendQueueDepth=cgspProfileMtp2SendQueueDepth, cgspLinksetSourcePointCode=cgspLinksetSourcePointCode, ciscoGspLinkSentUtilChange=ciscoGspLinkSentUtilChange, cgspPointCodeDisplay=cgspPointCodeDisplay)
