#
# PySNMP MIB module WWP-LEOS-DHCP-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-DHCP-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter32, Bits, ObjectIdentity, ModuleIdentity, iso, NotificationType, IpAddress, Gauge32, Counter64, Unsigned32, Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Bits", "ObjectIdentity", "ModuleIdentity", "iso", "NotificationType", "IpAddress", "Gauge32", "Counter64", "Unsigned32", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosDhcpClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17))
wwpLeosDhcpClientMIB.setRevisions(('2006-04-18 17:00', '2002-11-01 17:00',))
if mibBuilder.loadTexts: wwpLeosDhcpClientMIB.setLastUpdated('200604181700Z')
if mibBuilder.loadTexts: wwpLeosDhcpClientMIB.setOrganization('Ciena, Inc')
wwpLeosDhcpClientMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1))
wwpLeosDhcpClient = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1))
wwpLeosDhcpRelayAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2))
wwpLeosDhcpRelayAgentGlobalAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 1))
wwpLeosDhcpClientMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 2))
wwpLeosDhcpClientMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 2, 0))
wwpLeosDhcpClientMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 3))
wwpLeosDhcpClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 3, 1))
wwpLeosDhcpClientMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 3, 2))
wwpLeosDhcpIfName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpIfName.setStatus('current')
wwpLeosDhcpStatus = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpStatus.setStatus('current')
wwpLeosDhcpState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("bound", 1), ("disabled", 2), ("inform", 3), ("init", 4), ("rebinding", 5), ("renewing", 6), ("requesting", 7), ("selecting", 8), ("unknown", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpState.setStatus('current')
wwpLeosDhcpLeaseOffered = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpLeaseOffered.setStatus('current')
wwpLeosDhcpLeaseRemaining = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpLeaseRemaining.setStatus('current')
wwpLeosDhcpDiscoveryMsgInterval = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpDiscoveryMsgInterval.setStatus('current')
wwpLeosDhcpRenewalTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRenewalTime.setStatus('current')
wwpLeosDhcpRebindingTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRebindingTime.setStatus('current')
wwpLeosDhcpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpServerAddress.setStatus('current')
wwpLeosDhcpRenewLease = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpRenewLease.setStatus('current')
wwpLeosDhcpReleaseLease = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpReleaseLease.setStatus('current')
wwpLeosDhcpClientOptionTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 13), )
if mibBuilder.loadTexts: wwpLeosDhcpClientOptionTable.setStatus('current')
wwpLeosDhcpClientOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 13, 1), ).setIndexNames((0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpOptionCodeIndex"))
if mibBuilder.loadTexts: wwpLeosDhcpClientOptionEntry.setStatus('current')
wwpLeosDhcpOptionCodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpOptionCodeIndex.setStatus('current')
wwpLeosDhcpOptionDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpOptionDesc.setStatus('current')
wwpLeosDhcpOptionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpOptionCode.setStatus('current')
wwpLeosDhcpOptionState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpOptionState.setStatus('current')
wwpLeosDhcpRelayAgentCircuitId = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("slotAndPort", 1), ("slotAndPortAndVlan", 2), ("cidString", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentCircuitId.setStatus('current')
wwpLeosDhcpRelayAgentRemoteId = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("macAddress", 1), ("hostName", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentRemoteId.setStatus('current')
wwpLeosDhcpRelayAgentL2State = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2State.setStatus('current')
wwpLeosDhcpRelayAgentL3State = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL3State.setStatus('current')
wwpLeosDhcpRelayAgentL2StateTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 2), )
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2StateTable.setStatus('current')
wwpLeosDhcpRelayAgentL2StateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 2, 1), ).setIndexNames((0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpRelayAgentVlan"))
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2StateEntry.setStatus('current')
wwpLeosDhcpRelayAgentVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24576))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentVlan.setStatus('current')
wwpLeosDhcpRelayAgentL2AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2AdminState.setStatus('current')
wwpLeosDhcpRelayAgentL2OperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2OperState.setStatus('current')
wwpLeosDhcpRelayAgentL2StatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2StatsClear.setStatus('current')
wwpLeosDhcpRelayAgentL2RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2RowStatus.setStatus('current')
wwpLeosDhcpRelayAgentL3StateTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 3), )
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL3StateTable.setStatus('current')
wwpLeosDhcpRelayAgentL3StateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 3, 1), ).setIndexNames((0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpRelayAgentInterfaceIndex"))
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL3StateEntry.setStatus('current')
wwpLeosDhcpRelayAgentInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentInterfaceIndex.setStatus('current')
wwpLeosDhcpRelayAgentL3AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL3AdminState.setStatus('current')
wwpLeosDhcpRelayAgentL3OperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL3OperState.setStatus('current')
wwpLeosDhcpRelayAgentL3RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL3RowStatus.setStatus('current')
wwpLeosDhcpRelayAgentInterfaceIpTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 4), )
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentInterfaceIpTable.setStatus('current')
wwpLeosDhcpRelayAgentInterfaceIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 4, 1), ).setIndexNames((0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpRelayAgentInterfaceIpIndex"))
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentInterfaceIpEntry.setStatus('current')
wwpLeosDhcpRelayAgentInterfaceIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentInterfaceIpIndex.setStatus('current')
wwpLeosDhcpRelayAgentInterfaceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 4, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentInterfaceIpAddr.setStatus('current')
wwpLeosDhcpRelayAgentInterfaceIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentInterfaceIpRowStatus.setStatus('current')
wwpLeosDhcpRelayAgentTrustTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 5), )
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentTrustTable.setStatus('current')
wwpLeosDhcpRelayAgentTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 5, 1), ).setIndexNames((0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpRelayAgentVlan"), (0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpRelayAgentPort"))
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentTrustEntry.setStatus('current')
wwpLeosDhcpRelayAgentPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentPort.setStatus('current')
wwpLeosDhcpRelayAgentTrustMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("clientTrust", 1), ("serverTrust", 2), ("dualRoleTrust", 3), ("unTrust", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentTrustMode.setStatus('current')
wwpLeosDhcpRelayAgentL2StatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6), )
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2StatsTable.setStatus('current')
wwpLeosDhcpRelayAgentL2StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1), ).setIndexNames((0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpRelayAgentVlan"))
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2StatsEntry.setStatus('current')
wwpLeosDhcpRelayAgentL2IpSecHeaders = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2IpSecHeaders.setStatus('current')
wwpLeosDhcpRelayAgentL2Option82Added = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2Option82Added.setStatus('current')
wwpLeosDhcpRelayAgentL2Option82Removed = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2Option82Removed.setStatus('current')
wwpLeosDhcpRelayAgentL2UntrustedClientPortPktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2UntrustedClientPortPktsRx.setStatus('current')
wwpLeosDhcpRelayAgentL2UntrustedServerPortPktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2UntrustedServerPortPktsRx.setStatus('current')
wwpLeosDhcpRelayAgentL2SpoofedDhcpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2SpoofedDhcpPkts.setStatus('current')
wwpLeosDhcpRelayAgentL2Option82ExceedMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2Option82ExceedMTU.setStatus('current')
wwpLeosDhcpRelayAgentL2NoTrustedServerPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2NoTrustedServerPktDrop.setStatus('current')
wwpLeosDhcpRelayAgentL2NoTrustedClientPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentL2NoTrustedClientPktDrop.setStatus('current')
wwpLeosDhcpRelayAgentCidStringTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 7), )
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentCidStringTable.setStatus('current')
wwpLeosDhcpRelayAgentCidStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 7, 1), ).setIndexNames((0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpRelayAgentVlan"), (0, "WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpRelayAgentCidStringPort"))
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentCidStringEntry.setStatus('current')
wwpLeosDhcpRelayAgentCidStringPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentCidStringPort.setStatus('current')
wwpLeosDhcpRelayAgentCidString = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 7, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentCidString.setStatus('current')
wwpLeosDhcpRelayAgentCidStringRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 1, 2, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDhcpRelayAgentCidStringRowStatus.setStatus('current')
wwpLeosDhcpClientOptionDisabledNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 17, 2, 0, 1)).setObjects(("WWP-LEOS-DHCP-CLIENT-MIB", "wwpLeosDhcpOptionCode"))
if mibBuilder.loadTexts: wwpLeosDhcpClientOptionDisabledNotification.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-DHCP-CLIENT-MIB", PYSNMP_MODULE_ID=wwpLeosDhcpClientMIB, wwpLeosDhcpRelayAgentPort=wwpLeosDhcpRelayAgentPort, wwpLeosDhcpRelayAgentL3RowStatus=wwpLeosDhcpRelayAgentL3RowStatus, wwpLeosDhcpRelayAgentL2IpSecHeaders=wwpLeosDhcpRelayAgentL2IpSecHeaders, wwpLeosDhcpRelayAgentCidString=wwpLeosDhcpRelayAgentCidString, wwpLeosDhcpRebindingTime=wwpLeosDhcpRebindingTime, wwpLeosDhcpDiscoveryMsgInterval=wwpLeosDhcpDiscoveryMsgInterval, wwpLeosDhcpState=wwpLeosDhcpState, wwpLeosDhcpLeaseRemaining=wwpLeosDhcpLeaseRemaining, wwpLeosDhcpRelayAgentCircuitId=wwpLeosDhcpRelayAgentCircuitId, wwpLeosDhcpRelayAgentTrustEntry=wwpLeosDhcpRelayAgentTrustEntry, wwpLeosDhcpRelayAgentL2NoTrustedClientPktDrop=wwpLeosDhcpRelayAgentL2NoTrustedClientPktDrop, wwpLeosDhcpClient=wwpLeosDhcpClient, wwpLeosDhcpClientOptionTable=wwpLeosDhcpClientOptionTable, wwpLeosDhcpRelayAgentL2UntrustedClientPortPktsRx=wwpLeosDhcpRelayAgentL2UntrustedClientPortPktsRx, wwpLeosDhcpClientOptionEntry=wwpLeosDhcpClientOptionEntry, wwpLeosDhcpRelayAgentL3OperState=wwpLeosDhcpRelayAgentL3OperState, wwpLeosDhcpClientMIBCompliances=wwpLeosDhcpClientMIBCompliances, wwpLeosDhcpRelayAgentL2NoTrustedServerPktDrop=wwpLeosDhcpRelayAgentL2NoTrustedServerPktDrop, wwpLeosDhcpOptionState=wwpLeosDhcpOptionState, wwpLeosDhcpRelayAgentL2StateTable=wwpLeosDhcpRelayAgentL2StateTable, wwpLeosDhcpRelayAgentCidStringEntry=wwpLeosDhcpRelayAgentCidStringEntry, wwpLeosDhcpRelayAgentL3State=wwpLeosDhcpRelayAgentL3State, wwpLeosDhcpRelayAgentCidStringRowStatus=wwpLeosDhcpRelayAgentCidStringRowStatus, wwpLeosDhcpRelayAgent=wwpLeosDhcpRelayAgent, wwpLeosDhcpLeaseOffered=wwpLeosDhcpLeaseOffered, wwpLeosDhcpRelayAgentInterfaceIndex=wwpLeosDhcpRelayAgentInterfaceIndex, wwpLeosDhcpRelayAgentInterfaceIpTable=wwpLeosDhcpRelayAgentInterfaceIpTable, wwpLeosDhcpServerAddress=wwpLeosDhcpServerAddress, wwpLeosDhcpStatus=wwpLeosDhcpStatus, wwpLeosDhcpRelayAgentL2StatsClear=wwpLeosDhcpRelayAgentL2StatsClear, wwpLeosDhcpClientMIBGroups=wwpLeosDhcpClientMIBGroups, wwpLeosDhcpRelayAgentL2Option82Removed=wwpLeosDhcpRelayAgentL2Option82Removed, wwpLeosDhcpRelayAgentL2State=wwpLeosDhcpRelayAgentL2State, wwpLeosDhcpRelayAgentRemoteId=wwpLeosDhcpRelayAgentRemoteId, wwpLeosDhcpOptionCode=wwpLeosDhcpOptionCode, wwpLeosDhcpIfName=wwpLeosDhcpIfName, wwpLeosDhcpRelayAgentInterfaceIpAddr=wwpLeosDhcpRelayAgentInterfaceIpAddr, wwpLeosDhcpRelayAgentL2StatsTable=wwpLeosDhcpRelayAgentL2StatsTable, wwpLeosDhcpClientMIB=wwpLeosDhcpClientMIB, wwpLeosDhcpRelayAgentInterfaceIpRowStatus=wwpLeosDhcpRelayAgentInterfaceIpRowStatus, wwpLeosDhcpRelayAgentL2Option82ExceedMTU=wwpLeosDhcpRelayAgentL2Option82ExceedMTU, wwpLeosDhcpRelayAgentL2StatsEntry=wwpLeosDhcpRelayAgentL2StatsEntry, wwpLeosDhcpRenewLease=wwpLeosDhcpRenewLease, wwpLeosDhcpRelayAgentGlobalAttrs=wwpLeosDhcpRelayAgentGlobalAttrs, wwpLeosDhcpRelayAgentInterfaceIpIndex=wwpLeosDhcpRelayAgentInterfaceIpIndex, wwpLeosDhcpOptionCodeIndex=wwpLeosDhcpOptionCodeIndex, wwpLeosDhcpRelayAgentVlan=wwpLeosDhcpRelayAgentVlan, wwpLeosDhcpClientOptionDisabledNotification=wwpLeosDhcpClientOptionDisabledNotification, wwpLeosDhcpClientMIBObjects=wwpLeosDhcpClientMIBObjects, wwpLeosDhcpOptionDesc=wwpLeosDhcpOptionDesc, wwpLeosDhcpRelayAgentL2OperState=wwpLeosDhcpRelayAgentL2OperState, wwpLeosDhcpRelayAgentL2RowStatus=wwpLeosDhcpRelayAgentL2RowStatus, wwpLeosDhcpRelayAgentCidStringTable=wwpLeosDhcpRelayAgentCidStringTable, wwpLeosDhcpClientMIBNotificationPrefix=wwpLeosDhcpClientMIBNotificationPrefix, wwpLeosDhcpRelayAgentCidStringPort=wwpLeosDhcpRelayAgentCidStringPort, wwpLeosDhcpRelayAgentL2AdminState=wwpLeosDhcpRelayAgentL2AdminState, wwpLeosDhcpReleaseLease=wwpLeosDhcpReleaseLease, wwpLeosDhcpRelayAgentTrustTable=wwpLeosDhcpRelayAgentTrustTable, wwpLeosDhcpClientMIBConformance=wwpLeosDhcpClientMIBConformance, wwpLeosDhcpRenewalTime=wwpLeosDhcpRenewalTime, wwpLeosDhcpRelayAgentL2SpoofedDhcpPkts=wwpLeosDhcpRelayAgentL2SpoofedDhcpPkts, wwpLeosDhcpClientMIBNotifications=wwpLeosDhcpClientMIBNotifications, wwpLeosDhcpRelayAgentL2UntrustedServerPortPktsRx=wwpLeosDhcpRelayAgentL2UntrustedServerPortPktsRx, wwpLeosDhcpRelayAgentL3AdminState=wwpLeosDhcpRelayAgentL3AdminState, wwpLeosDhcpRelayAgentTrustMode=wwpLeosDhcpRelayAgentTrustMode, wwpLeosDhcpRelayAgentInterfaceIpEntry=wwpLeosDhcpRelayAgentInterfaceIpEntry, wwpLeosDhcpRelayAgentL3StateEntry=wwpLeosDhcpRelayAgentL3StateEntry, wwpLeosDhcpRelayAgentL2Option82Added=wwpLeosDhcpRelayAgentL2Option82Added, wwpLeosDhcpRelayAgentL2StateEntry=wwpLeosDhcpRelayAgentL2StateEntry, wwpLeosDhcpRelayAgentL3StateTable=wwpLeosDhcpRelayAgentL3StateTable)
