#
# PySNMP MIB module NETSCREEN-NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-NAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
netscreenNAT, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenNAT")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, ObjectIdentity, iso, ModuleIdentity, Bits, MibIdentifier, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "ObjectIdentity", "iso", "ModuleIdentity", "Bits", "MibIdentifier", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "TimeTicks", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
netscreenNATMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 11, 0))
netscreenNATMibModule.setRevisions(('2005-03-03 00:00', '2004-05-03 00:00', '2004-03-03 00:00', '2003-06-03 00:00', '2001-05-27 00:00',))
if mibBuilder.loadTexts: netscreenNATMibModule.setLastUpdated('200503032022Z')
if mibBuilder.loadTexts: netscreenNATMibModule.setOrganization('Juniper Networks, Inc.')
nsNatMipTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 11, 1), )
if mibBuilder.loadTexts: nsNatMipTable.setStatus('current')
nsNatMipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 11, 1, 1), ).setIndexNames((0, "NETSCREEN-NAT-MIB", "nsNatMipIndex"))
if mibBuilder.loadTexts: nsNatMipEntry.setStatus('current')
nsNatMipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatMipIndex.setStatus('current')
nsNatMipIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatMipIp.setStatus('current')
nsNatMipNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatMipNetmask.setStatus('current')
nsNatMipHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatMipHost.setStatus('current')
nsNatMipIfIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatMipIfIp.setStatus('current')
nsNatMipIfNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatMipIfNetmask.setStatus('current')
nsNatMipVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatMipVsys.setStatus('current')
nsNatDipTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 11, 2), )
if mibBuilder.loadTexts: nsNatDipTable.setStatus('current')
nsNatDipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1), ).setIndexNames((0, "NETSCREEN-NAT-MIB", "nsNatDipIndex"))
if mibBuilder.loadTexts: nsNatDipEntry.setStatus('current')
nsNatDipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipIndex.setStatus('current')
nsNatDipId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipId.setStatus('current')
nsNatDipLow = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipLow.setStatus('current')
nsNatDipHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipHigh.setStatus('current')
nsNatDipIfIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipIfIp.setStatus('current')
nsNatDipIfNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipIfNetmask.setStatus('current')
nsNatDipPTEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipPTEnable.setStatus('current')
nsNatDipVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipVsys.setStatus('current')
nsNatDipUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatDipUtil.setStatus('current')
nsNatVip = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 11, 3))
nsNatVipCfgTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 11, 3, 1), )
if mibBuilder.loadTexts: nsNatVipCfgTable.setStatus('current')
nsNatVipCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 11, 3, 1, 1), ).setIndexNames((0, "NETSCREEN-NAT-MIB", "nsNatVipCfgIndex"))
if mibBuilder.loadTexts: nsNatVipCfgEntry.setStatus('current')
nsNatVipCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipCfgIndex.setStatus('current')
nsNatVipCfgIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipCfgIp.setStatus('current')
nsNatVipCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipCfgPort.setStatus('current')
nsNatVipCfgService = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipCfgService.setStatus('current')
nsNatVipCfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-available", 0), ("available", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipCfgStatus.setStatus('current')
nsNatVipCfgLoadBalance = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("null", 0), ("round-robin", 1), ("weighted-round-robin", 2), ("least-conns", 3), ("weighted-least-conns", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipCfgLoadBalance.setStatus('current')
nsNatVipServerTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2), )
if mibBuilder.loadTexts: nsNatVipServerTable.setStatus('current')
nsNatVipServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2, 1), ).setIndexNames((0, "NETSCREEN-NAT-MIB", "nsNatVipServerIndex"))
if mibBuilder.loadTexts: nsNatVipServerEntry.setStatus('current')
nsNatVipServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipServerIndex.setStatus('current')
nsNatVipServerVIP = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipServerVIP.setStatus('current')
nsNatVipServerService = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipServerService.setStatus('current')
nsNatVipServerLoadBalance = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("null", 0), ("round-robin", 1), ("weighted-round-robin", 2), ("least-conns", 3), ("weighted-least-conns", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipServerLoadBalance.setStatus('current')
nsNatVipServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipServerIp.setStatus('current')
nsNatVipServerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipServerWeight.setStatus('current')
nsNatVipServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 11, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsNatVipServerStatus.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-NAT-MIB", nsNatMipNetmask=nsNatMipNetmask, nsNatDipTable=nsNatDipTable, nsNatDipIfIp=nsNatDipIfIp, nsNatMipIfIp=nsNatMipIfIp, nsNatDipPTEnable=nsNatDipPTEnable, netscreenNATMibModule=netscreenNATMibModule, nsNatDipVsys=nsNatDipVsys, nsNatVipServerStatus=nsNatVipServerStatus, nsNatDipId=nsNatDipId, nsNatVipCfgIndex=nsNatVipCfgIndex, nsNatDipIfNetmask=nsNatDipIfNetmask, PYSNMP_MODULE_ID=netscreenNATMibModule, nsNatVipServerVIP=nsNatVipServerVIP, nsNatDipIndex=nsNatDipIndex, nsNatVipServerLoadBalance=nsNatVipServerLoadBalance, nsNatVipServerWeight=nsNatVipServerWeight, nsNatMipVsys=nsNatMipVsys, nsNatVipCfgLoadBalance=nsNatVipCfgLoadBalance, nsNatVipServerTable=nsNatVipServerTable, nsNatMipHost=nsNatMipHost, nsNatVipServerEntry=nsNatVipServerEntry, nsNatVip=nsNatVip, nsNatDipLow=nsNatDipLow, nsNatVipCfgPort=nsNatVipCfgPort, nsNatMipIfNetmask=nsNatMipIfNetmask, nsNatDipHigh=nsNatDipHigh, nsNatMipEntry=nsNatMipEntry, nsNatMipIp=nsNatMipIp, nsNatVipServerIndex=nsNatVipServerIndex, nsNatVipCfgService=nsNatVipCfgService, nsNatVipCfgEntry=nsNatVipCfgEntry, nsNatVipServerService=nsNatVipServerService, nsNatMipTable=nsNatMipTable, nsNatVipCfgTable=nsNatVipCfgTable, nsNatVipCfgIp=nsNatVipCfgIp, nsNatDipUtil=nsNatDipUtil, nsNatMipIndex=nsNatMipIndex, nsNatDipEntry=nsNatDipEntry, nsNatVipCfgStatus=nsNatVipCfgStatus, nsNatVipServerIp=nsNatVipServerIp)
