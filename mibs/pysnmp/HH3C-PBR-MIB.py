#
# PySNMP MIB module HH3C-PBR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-PBR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:16:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, TimeTicks, MibIdentifier, Counter64, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Gauge32, Unsigned32, IpAddress, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "MibIdentifier", "Counter64", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Gauge32", "Unsigned32", "IpAddress", "Counter32", "ObjectIdentity")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
hh3cPBR = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 113))
hh3cPBR.setRevisions(('2010-12-10 15:58',))
if mibBuilder.loadTexts: hh3cPBR.setLastUpdated('201012101558Z')
if mibBuilder.loadTexts: hh3cPBR.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cPBRObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1))
hh3cPBRGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 1))
hh3cPBRMibTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 2))
hh3cPBRNexthopTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cPBRNexthopTrapEnabled.setStatus('current')
hh3cPBRTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 2, 1))
hh3cPBRNexthopAddrType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 2, 1, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPBRNexthopAddrType.setStatus('current')
hh3cPBRNexthopAddr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 2, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cPBRNexthopAddr.setStatus('current')
hh3cPBRTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 2, 2))
hh3cPBRTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 2, 2, 0))
hh3cPBRNexthopFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 113, 1, 2, 2, 0, 1)).setObjects(("HH3C-PBR-MIB", "hh3cPBRNexthopAddrType"), ("HH3C-PBR-MIB", "hh3cPBRNexthopAddr"))
if mibBuilder.loadTexts: hh3cPBRNexthopFailedTrap.setStatus('current')
mibBuilder.exportSymbols("HH3C-PBR-MIB", hh3cPBRNexthopFailedTrap=hh3cPBRNexthopFailedTrap, hh3cPBRGlobal=hh3cPBRGlobal, hh3cPBR=hh3cPBR, PYSNMP_MODULE_ID=hh3cPBR, hh3cPBRNexthopTrapEnabled=hh3cPBRNexthopTrapEnabled, hh3cPBRTraps=hh3cPBRTraps, hh3cPBRNexthopAddrType=hh3cPBRNexthopAddrType, hh3cPBRTrapObjects=hh3cPBRTrapObjects, hh3cPBRObjects=hh3cPBRObjects, hh3cPBRTrapsPrefix=hh3cPBRTrapsPrefix, hh3cPBRNexthopAddr=hh3cPBRNexthopAddr, hh3cPBRMibTrap=hh3cPBRMibTrap)
