#
# PySNMP MIB module Wellfleet-BB-MIB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-BB-MIB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Opaque, enterprises, NotificationType, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, mgmt, Bits, Unsigned32, NotificationType, mib_2, Counter32, MibIdentifier, ObjectIdentity, TimeTicks, Gauge32, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Opaque", "enterprises", "NotificationType", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "mgmt", "Bits", "Unsigned32", "NotificationType", "mib-2", "Counter32", "MibIdentifier", "ObjectIdentity", "TimeTicks", "Gauge32", "ModuleIdentity", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfGameGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfGameGroup")
wfBackboneTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4), )
if mibBuilder.loadTexts: wfBackboneTable.setStatus('mandatory')
wfBackboneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1), ).setIndexNames((0, "Wellfleet-BB-MIB-MIB", "wfBackboneSlot"))
if mibBuilder.loadTexts: wfBackboneEntry.setStatus('mandatory')
wfBackboneSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBackboneSlot.setStatus('mandatory')
wfTxDropCtrSlotMask0 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDropCtrSlotMask0.setStatus('mandatory')
wfTxDropCtrNoGrant = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDropCtrNoGrant.setStatus('mandatory')
wfTxDropCtrFlowCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDropCtrFlowCtrl.setStatus('mandatory')
wfTxDied = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDied.setStatus('mandatory')
wfTxDramDied = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDramDied.setStatus('mandatory')
wfTxIdleErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxIdleErrors.setStatus('mandatory')
wfTxNoSomErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxNoSomErrors.setStatus('mandatory')
wfTxPktSomErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxPktSomErrors.setStatus('mandatory')
wfTxDropEomErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDropEomErrors.setStatus('mandatory')
wfTxOverflowErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxOverflowErrors.setStatus('mandatory')
wfTxSofErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxSofErrors.setStatus('mandatory')
wfTxDataptrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDataptrErrors.setStatus('mandatory')
wfTxEndptrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxEndptrErrors.setStatus('mandatory')
wfTxBoardSpeedMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxBoardSpeedMask.setStatus('mandatory')
wfTxErrorEnableMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTxErrorEnableMask.setStatus('mandatory')
wfTxBusRequestTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxBusRequestTimeout.setStatus('mandatory')
wfTxDeadlockTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDeadlockTimeout.setStatus('mandatory')
wfTxIgnoreFlowCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxIgnoreFlowCtrl.setStatus('mandatory')
wfTxBackboneSelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTxBackboneSelectMode.setStatus('mandatory')
wfTxEnableSlotMask0 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxEnableSlotMask0.setStatus('mandatory')
wfTxFifoSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxFifoSize.setStatus('mandatory')
wfTxVisControl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTxVisControl.setStatus('mandatory')
wfRxPktNumErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxPktNumErrors.setStatus('mandatory')
wfRxAddrOvrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxAddrOvrErrors.setStatus('mandatory')
wfRxSomErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxSomErrors.setStatus('mandatory')
wfRxDied = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxDied.setStatus('mandatory')
wfRxUnloadErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxUnloadErrors.setStatus('mandatory')
wfRxDropCtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxDropCtr.setStatus('mandatory')
wfRxSofErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxSofErrors.setStatus('mandatory')
wfRxCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxCrcErrors.setStatus('mandatory')
wfRxOvrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxOvrErrors.setStatus('mandatory')
wfRxForceEomErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxForceEomErrors.setStatus('mandatory')
wfRxMaxEofErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxMaxEofErrors.setStatus('mandatory')
wfRxFifoSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxFifoSize.setStatus('mandatory')
wfRxReceiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRxReceiveMode.setStatus('mandatory')
wfRxIgnorePktNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxIgnorePktNum.setStatus('mandatory')
wfRxVisControl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRxVisControl.setStatus('mandatory')
wfRxErrorEnableMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRxErrorEnableMask.setStatus('mandatory')
wfRxMaxEof = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxMaxEof.setStatus('mandatory')
wfRxParitySense = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxParitySense.setStatus('mandatory')
wfRxDeadlockTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxDeadlockTimeout.setStatus('mandatory')
wfTxDropWB = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDropWB.setStatus('mandatory')
wfTxDiedNoPg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDiedNoPg.setStatus('mandatory')
wfTxDtbErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxDtbErrors.setStatus('mandatory')
wfTxPagePtrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTxPagePtrErrors.setStatus('mandatory')
wfRxWBCtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxWBCtr.setStatus('mandatory')
wfRxLinkList0Ctr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxLinkList0Ctr.setStatus('mandatory')
wfRxArbErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 4, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRxArbErrors.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-BB-MIB-MIB", wfRxPktNumErrors=wfRxPktNumErrors, wfTxDropEomErrors=wfTxDropEomErrors, wfBackboneSlot=wfBackboneSlot, wfTxPktSomErrors=wfTxPktSomErrors, wfTxVisControl=wfTxVisControl, wfRxReceiveMode=wfRxReceiveMode, wfTxPagePtrErrors=wfTxPagePtrErrors, wfTxIdleErrors=wfTxIdleErrors, wfRxMaxEof=wfRxMaxEof, wfRxUnloadErrors=wfRxUnloadErrors, wfRxVisControl=wfRxVisControl, wfTxBoardSpeedMask=wfTxBoardSpeedMask, wfBackboneEntry=wfBackboneEntry, wfRxFifoSize=wfRxFifoSize, wfTxFifoSize=wfTxFifoSize, wfRxCrcErrors=wfRxCrcErrors, wfTxNoSomErrors=wfTxNoSomErrors, wfRxOvrErrors=wfRxOvrErrors, wfTxBackboneSelectMode=wfTxBackboneSelectMode, wfRxMaxEofErrors=wfRxMaxEofErrors, wfTxSofErrors=wfTxSofErrors, wfRxParitySense=wfRxParitySense, wfTxDtbErrors=wfTxDtbErrors, wfTxDataptrErrors=wfTxDataptrErrors, wfTxDropWB=wfTxDropWB, wfTxDropCtrFlowCtrl=wfTxDropCtrFlowCtrl, wfTxDropCtrNoGrant=wfTxDropCtrNoGrant, wfTxEndptrErrors=wfTxEndptrErrors, wfTxDeadlockTimeout=wfTxDeadlockTimeout, wfRxDropCtr=wfRxDropCtr, wfRxArbErrors=wfRxArbErrors, wfTxIgnoreFlowCtrl=wfTxIgnoreFlowCtrl, wfTxErrorEnableMask=wfTxErrorEnableMask, wfRxAddrOvrErrors=wfRxAddrOvrErrors, wfTxDiedNoPg=wfTxDiedNoPg, wfRxLinkList0Ctr=wfRxLinkList0Ctr, wfTxOverflowErrors=wfTxOverflowErrors, wfRxDied=wfRxDied, wfTxEnableSlotMask0=wfTxEnableSlotMask0, wfRxDeadlockTimeout=wfRxDeadlockTimeout, wfTxBusRequestTimeout=wfTxBusRequestTimeout, wfRxSomErrors=wfRxSomErrors, wfRxSofErrors=wfRxSofErrors, wfRxIgnorePktNum=wfRxIgnorePktNum, wfRxWBCtr=wfRxWBCtr, wfRxErrorEnableMask=wfRxErrorEnableMask, wfRxForceEomErrors=wfRxForceEomErrors, wfBackboneTable=wfBackboneTable, wfTxDied=wfTxDied, wfTxDramDied=wfTxDramDied, wfTxDropCtrSlotMask0=wfTxDropCtrSlotMask0)
