#
# PySNMP MIB module H320TERMINAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H320TERMINAL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:07:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
IsdnSignalingProtocol, = mibBuilder.importSymbols("ISDN-MIB", "IsdnSignalingProtocol")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter64, IpAddress, MibIdentifier, experimental, Gauge32, TimeTicks, Unsigned32, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "IpAddress", "MibIdentifier", "experimental", "Gauge32", "TimeTicks", "Unsigned32", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "Integer32", "Bits")
DisplayString, DateAndTime, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "RowStatus", "TextualConvention")
h320TerminalMIB = ModuleIdentity((1, 3, 6, 1, 3, 320, 3))
h320TerminalMIB.setRevisions(('1998-08-01 14:00',))
if mibBuilder.loadTexts: h320TerminalMIB.setLastUpdated('9808011400Z')
if mibBuilder.loadTexts: h320TerminalMIB.setOrganization('VTEL Corp.')
class LineRates(TextualConvention, Integer32):
    status = 'current'

class VideoFormats(TextualConvention, Integer32):
    status = 'current'

class AudioTypes(TextualConvention, Integer32):
    status = 'current'

system = MibIdentifier((1, 3, 6, 1, 3, 320, 3, 1))
configuration = MibIdentifier((1, 3, 6, 1, 3, 320, 3, 2))
callSites = MibIdentifier((1, 3, 6, 1, 3, 320, 3, 3))
control = MibIdentifier((1, 3, 6, 1, 3, 320, 3, 4))
sysDescr = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDescr.setStatus('current')
sysContact = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysContact.setStatus('current')
syst35CountryCode = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syst35CountryCode.setStatus('current')
syst35CountryCodeExtention = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syst35CountryCodeExtention.setStatus('current')
syst35ManufacturerCode = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syst35ManufacturerCode.setStatus('current')
sysLocation = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLocation.setStatus('current')
sysH320TerminalUptime = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysH320TerminalUptime.setStatus('current')
sysH320TerminalLocalTime = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 8), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysH320TerminalLocalTime.setStatus('current')
sysH320TerminalDiagnostics = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noResults", 1), ("passed", 2), ("hardwareFault", 3), ("softwareFault", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysH320TerminalDiagnostics.setStatus('current')
sysH320TerminalStatus = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("callSetup", 1), ("callinProgress", 2), ("callHangUp", 3), ("idle", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysH320TerminalStatus.setStatus('current')
sysH320TerminalIfType = MibScalar((1, 3, 6, 1, 3, 320, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysH320TerminalIfType.setStatus('current')
configH320TerminalSiteName = MibScalar((1, 3, 6, 1, 3, 320, 3, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configH320TerminalSiteName.setStatus('current')
configH320TerminalVideoSystem = MibScalar((1, 3, 6, 1, 3, 320, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ntsc", 1), ("pal", 2), ("secam", 3), ("others", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configH320TerminalVideoSystem.setStatus('current')
configH320TerminalIPAddress = MibScalar((1, 3, 6, 1, 3, 320, 3, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configH320TerminalIPAddress.setStatus('current')
configH320ISDNSwitchType = MibScalar((1, 3, 6, 1, 3, 320, 3, 2, 4), IsdnSignalingProtocol()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configH320ISDNSwitchType.setStatus('current')
configH320ISDNAddrNumber = MibScalar((1, 3, 6, 1, 3, 320, 3, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configH320ISDNAddrNumber.setStatus('current')
configISDNAddrTable = MibTable((1, 3, 6, 1, 3, 320, 3, 2, 6), )
if mibBuilder.loadTexts: configISDNAddrTable.setStatus('current')
configISDNAddrEntry = MibTableRow((1, 3, 6, 1, 3, 320, 3, 2, 6, 1), ).setIndexNames((0, "H320TERMINAL-MIB", "configH320AddrIndex"))
if mibBuilder.loadTexts: configISDNAddrEntry.setStatus('current')
configH320AddrIndex = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: configH320AddrIndex.setStatus('current')
configH320ISDNAddress = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configH320ISDNAddress.setStatus('current')
configH320ISDNSPID = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 2, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configH320ISDNSPID.setStatus('current')
h320CallSiteNumber = MibScalar((1, 3, 6, 1, 3, 320, 3, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h320CallSiteNumber.setStatus('current')
h320XferNextIndex = MibScalar((1, 3, 6, 1, 3, 320, 3, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h320XferNextIndex.setStatus('current')
h320CallSiteTable = MibTable((1, 3, 6, 1, 3, 320, 3, 3, 3), )
if mibBuilder.loadTexts: h320CallSiteTable.setStatus('current')
h320CallSiteEntry = MibTableRow((1, 3, 6, 1, 3, 320, 3, 3, 3, 1), ).setIndexNames((0, "H320TERMINAL-MIB", "h320SiteIndex"))
if mibBuilder.loadTexts: h320CallSiteEntry.setStatus('current')
h320SiteIndex = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h320SiteIndex.setStatus('current')
h320SiteName = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320SiteName.setStatus('current')
h320SiteIfType = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320SiteIfType.setStatus('current')
h320SiteLineRate = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 4), LineRates()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320SiteLineRate.setStatus('current')
h320CallMode = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manualConfig", 1), ("autoConfig", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320CallMode.setStatus('current')
h320VideoMode = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 6), VideoFormats()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320VideoMode.setStatus('current')
h320AudioMode = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 7), AudioTypes()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320AudioMode.setStatus('current')
h320ISDNAddrNumber = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320ISDNAddrNumber.setStatus('current')
h320SiteRowStatus = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 3, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320SiteRowStatus.setStatus('current')
h320ISDNAddrTable = MibTable((1, 3, 6, 1, 3, 320, 3, 3, 4), )
if mibBuilder.loadTexts: h320ISDNAddrTable.setStatus('current')
h320ISDNAddrEntry = MibTableRow((1, 3, 6, 1, 3, 320, 3, 3, 4, 1), ).setIndexNames((0, "H320TERMINAL-MIB", "h320SiteIndex"), (0, "H320TERMINAL-MIB", "h320AddrIndex"))
if mibBuilder.loadTexts: h320ISDNAddrEntry.setStatus('current')
h320AddrIndex = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: h320AddrIndex.setStatus('current')
h320ISDNAddress = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320ISDNAddress.setStatus('current')
h320AddrRowStatus = MibTableColumn((1, 3, 6, 1, 3, 320, 3, 3, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h320AddrRowStatus.setStatus('current')
controlH320TerminalAdmin = MibScalar((1, 3, 6, 1, 3, 320, 3, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("run", 1), ("reset", 2), ("diagnose", 3), ("stop", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: controlH320TerminalAdmin.setStatus('current')
controlH320TerminalCallSetUp = MibScalar((1, 3, 6, 1, 3, 320, 3, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: controlH320TerminalCallSetUp.setStatus('current')
controlH320TerminalCallHangup = MibScalar((1, 3, 6, 1, 3, 320, 3, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: controlH320TerminalCallHangup.setStatus('current')
controlH320EnableLocalLoopback = MibScalar((1, 3, 6, 1, 3, 320, 3, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: controlH320EnableLocalLoopback.setStatus('current')
controlH320EnableRemoteLoopback = MibScalar((1, 3, 6, 1, 3, 320, 3, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: controlH320EnableRemoteLoopback.setStatus('current')
h320TerminalMIBConfs = MibIdentifier((1, 3, 6, 1, 3, 320, 3, 5))
h320TerminalMIIBGroups = MibIdentifier((1, 3, 6, 1, 3, 320, 3, 5, 1))
h320TerminalMIBCompl = MibIdentifier((1, 3, 6, 1, 3, 320, 3, 5, 2))
h320TerminalDesrGroup = ObjectGroup((1, 3, 6, 1, 3, 320, 3, 5, 1, 1)).setObjects(("H320TERMINAL-MIB", "sysDescr"), ("H320TERMINAL-MIB", "sysContact"), ("H320TERMINAL-MIB", "syst35CountryCode"), ("H320TERMINAL-MIB", "syst35CountryCodeExtention"), ("H320TERMINAL-MIB", "syst35ManufacturerCode"), ("H320TERMINAL-MIB", "sysLocation"), ("H320TERMINAL-MIB", "sysH320TerminalUptime"), ("H320TERMINAL-MIB", "sysH320TerminalLocalTime"), ("H320TERMINAL-MIB", "sysH320TerminalDiagnostics"), ("H320TERMINAL-MIB", "sysH320TerminalStatus"), ("H320TERMINAL-MIB", "sysH320TerminalIfType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h320TerminalDesrGroup = h320TerminalDesrGroup.setStatus('current')
h320TerminalConfgGroup = ObjectGroup((1, 3, 6, 1, 3, 320, 3, 5, 1, 2)).setObjects(("H320TERMINAL-MIB", "configH320TerminalSiteName"), ("H320TERMINAL-MIB", "configH320TerminalVideoSystem"), ("H320TERMINAL-MIB", "configH320TerminalIPAddress"), ("H320TERMINAL-MIB", "configH320ISDNSwitchType"), ("H320TERMINAL-MIB", "configH320ISDNAddrNumber"), ("H320TERMINAL-MIB", "configH320ISDNAddress"), ("H320TERMINAL-MIB", "configH320ISDNSPID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h320TerminalConfgGroup = h320TerminalConfgGroup.setStatus('current')
h320TerminalCallSitesGroup = ObjectGroup((1, 3, 6, 1, 3, 320, 3, 5, 1, 3)).setObjects(("H320TERMINAL-MIB", "h320CallSiteNumber"), ("H320TERMINAL-MIB", "h320XferNextIndex"), ("H320TERMINAL-MIB", "h320SiteName"), ("H320TERMINAL-MIB", "h320SiteIfType"), ("H320TERMINAL-MIB", "h320SiteLineRate"), ("H320TERMINAL-MIB", "h320CallMode"), ("H320TERMINAL-MIB", "h320VideoMode"), ("H320TERMINAL-MIB", "h320AudioMode"), ("H320TERMINAL-MIB", "h320ISDNAddrNumber"), ("H320TERMINAL-MIB", "h320SiteRowStatus"), ("H320TERMINAL-MIB", "h320ISDNAddress"), ("H320TERMINAL-MIB", "h320AddrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h320TerminalCallSitesGroup = h320TerminalCallSitesGroup.setStatus('current')
h320TerminalControlGroup = ObjectGroup((1, 3, 6, 1, 3, 320, 3, 5, 1, 4)).setObjects(("H320TERMINAL-MIB", "controlH320TerminalAdmin"), ("H320TERMINAL-MIB", "controlH320TerminalCallSetUp"), ("H320TERMINAL-MIB", "controlH320TerminalCallHangup"), ("H320TERMINAL-MIB", "controlH320EnableLocalLoopback"), ("H320TERMINAL-MIB", "controlH320EnableRemoteLoopback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h320TerminalControlGroup = h320TerminalControlGroup.setStatus('current')
h320TErminalCompliance = ModuleCompliance((1, 3, 6, 1, 3, 320, 3, 5, 2, 1)).setObjects(("H320TERMINAL-MIB", "h320TerminalDesrGroup"), ("H320TERMINAL-MIB", "h320TerminalConfgGroup"), ("H320TERMINAL-MIB", "h320TerminalCallSitesGroup"), ("H320TERMINAL-MIB", "h320TerminalControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h320TErminalCompliance = h320TErminalCompliance.setStatus('current')
mibBuilder.exportSymbols("H320TERMINAL-MIB", h320CallSiteTable=h320CallSiteTable, h320SiteRowStatus=h320SiteRowStatus, sysH320TerminalLocalTime=sysH320TerminalLocalTime, syst35CountryCodeExtention=syst35CountryCodeExtention, h320TerminalConfgGroup=h320TerminalConfgGroup, configH320TerminalVideoSystem=configH320TerminalVideoSystem, h320TerminalControlGroup=h320TerminalControlGroup, AudioTypes=AudioTypes, h320ISDNAddrEntry=h320ISDNAddrEntry, VideoFormats=VideoFormats, h320ISDNAddress=h320ISDNAddress, controlH320EnableRemoteLoopback=controlH320EnableRemoteLoopback, h320VideoMode=h320VideoMode, sysLocation=sysLocation, h320SiteIfType=h320SiteIfType, configH320ISDNSPID=configH320ISDNSPID, h320TerminalMIBCompl=h320TerminalMIBCompl, h320AudioMode=h320AudioMode, system=system, sysDescr=sysDescr, configISDNAddrTable=configISDNAddrTable, sysH320TerminalDiagnostics=sysH320TerminalDiagnostics, syst35ManufacturerCode=syst35ManufacturerCode, configH320TerminalIPAddress=configH320TerminalIPAddress, h320SiteIndex=h320SiteIndex, controlH320TerminalCallSetUp=controlH320TerminalCallSetUp, sysContact=sysContact, h320AddrRowStatus=h320AddrRowStatus, h320TerminalDesrGroup=h320TerminalDesrGroup, LineRates=LineRates, syst35CountryCode=syst35CountryCode, configuration=configuration, h320SiteName=h320SiteName, configH320AddrIndex=configH320AddrIndex, configH320ISDNAddrNumber=configH320ISDNAddrNumber, h320ISDNAddrTable=h320ISDNAddrTable, sysH320TerminalUptime=sysH320TerminalUptime, h320AddrIndex=h320AddrIndex, h320CallSiteEntry=h320CallSiteEntry, h320TerminalCallSitesGroup=h320TerminalCallSitesGroup, configH320ISDNAddress=configH320ISDNAddress, PYSNMP_MODULE_ID=h320TerminalMIB, h320CallMode=h320CallMode, h320SiteLineRate=h320SiteLineRate, h320TerminalMIIBGroups=h320TerminalMIIBGroups, h320CallSiteNumber=h320CallSiteNumber, controlH320EnableLocalLoopback=controlH320EnableLocalLoopback, configH320TerminalSiteName=configH320TerminalSiteName, h320ISDNAddrNumber=h320ISDNAddrNumber, sysH320TerminalStatus=sysH320TerminalStatus, controlH320TerminalCallHangup=controlH320TerminalCallHangup, h320TErminalCompliance=h320TErminalCompliance, controlH320TerminalAdmin=controlH320TerminalAdmin, h320TerminalMIB=h320TerminalMIB, sysH320TerminalIfType=sysH320TerminalIfType, callSites=callSites, h320TerminalMIBConfs=h320TerminalMIBConfs, control=control, configISDNAddrEntry=configISDNAddrEntry, h320XferNextIndex=h320XferNextIndex, configH320ISDNSwitchType=configH320ISDNSwitchType)
