#
# PySNMP MIB module ERI-DNX-PERF-MONT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ERI-DNX-PERF-MONT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:51:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
LinkPortAddress, dnx = mibBuilder.importSymbols("ERI-DNX-SMC-MIB", "LinkPortAddress", "dnx")
eriMibs, = mibBuilder.importSymbols("ERI-ROOT-SMI", "eriMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, NotificationType, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, ModuleIdentity, TimeTicks, Counter64, Gauge32, Counter32, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "ModuleIdentity", "TimeTicks", "Counter64", "Gauge32", "Counter32", "IpAddress", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
eriDNXLinkPMStatsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 644, 3, 7))
if mibBuilder.loadTexts: eriDNXLinkPMStatsMIB.setLastUpdated('200204110000Z')
if mibBuilder.loadTexts: eriDNXLinkPMStatsMIB.setOrganization('Eastern Research, Inc.')
performanceMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 4))
dsx1Esf = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1))
dsx1G826 = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2))
dsx1EsfCurrTable = MibTable((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1), )
if mibBuilder.loadTexts: dsx1EsfCurrTable.setStatus('current')
dsx1EsfCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1), ).setIndexNames((0, "ERI-DNX-PERF-MONT-MIB", "dsx1EsfCurrLinkAddr"))
if mibBuilder.loadTexts: dsx1EsfCurrEntry.setStatus('current')
dsx1EsfCurrLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 1), LinkPortAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrLinkAddr.setStatus('current')
dsx1EsfCurrResrcId = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrResrcId.setStatus('current')
dsx1EsfCurrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrESs.setStatus('current')
dsx1EsfCurrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrUASs.setStatus('current')
dsx1EsfCurrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrSESs.setStatus('current')
dsx1EsfCurrBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrBESs.setStatus('current')
dsx1EsfCurrLOFs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrLOFs.setStatus('current')
dsx1EsfCurrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrSeconds.setStatus('current')
dsx1EsfCurrIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrIntervals.setStatus('current')
dsx1EsfCurrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1EsfCurrStatus.setStatus('current')
dsx1Esf24HrTable = MibTable((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2), )
if mibBuilder.loadTexts: dsx1Esf24HrTable.setStatus('current')
dsx1Esf24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2, 1), ).setIndexNames((0, "ERI-DNX-PERF-MONT-MIB", "dsx1Esf24HrLinkAddr"))
if mibBuilder.loadTexts: dsx1Esf24HrEntry.setStatus('current')
dsx1Esf24HrLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2, 1, 1), LinkPortAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf24HrLinkAddr.setStatus('current')
dsx1Esf24HrResrcId = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf24HrResrcId.setStatus('current')
dsx1Esf24HrESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf24HrESs.setStatus('current')
dsx1Esf24HrUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf24HrUASs.setStatus('current')
dsx1Esf24HrSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf24HrSESs.setStatus('current')
dsx1Esf24HrBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf24HrBESs.setStatus('current')
dsx1Esf24HrLOFs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 2, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf24HrLOFs.setStatus('current')
dsx1Esf96RegTable = MibTable((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 3), )
if mibBuilder.loadTexts: dsx1Esf96RegTable.setStatus('current')
dsx1Esf96RegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 3, 1), ).setIndexNames((0, "ERI-DNX-PERF-MONT-MIB", "dsx1Esf96RegLinkAddr"), (0, "ERI-DNX-PERF-MONT-MIB", "dsx1Esf96RegInterval"))
if mibBuilder.loadTexts: dsx1Esf96RegEntry.setStatus('current')
dsx1Esf96RegLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 3, 1, 1), LinkPortAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf96RegLinkAddr.setStatus('current')
dsx1Esf96RegInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf96RegInterval.setStatus('current')
dsx1Esf96RegESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 3, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf96RegESs.setStatus('current')
dsx1Esf96RegUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 3, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf96RegUASs.setStatus('current')
dsx1Esf96RegSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 3, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf96RegSESs.setStatus('current')
dsx1Esf96RegBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 1, 3, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1Esf96RegBESs.setStatus('current')
dsx1G826Table = MibTable((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1), )
if mibBuilder.loadTexts: dsx1G826Table.setStatus('current')
dsx1G826Entry = MibTableRow((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1), ).setIndexNames((0, "ERI-DNX-PERF-MONT-MIB", "dsx1G826LinkAddr"))
if mibBuilder.loadTexts: dsx1G826Entry.setStatus('current')
dsx1G826LinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 1), LinkPortAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826LinkAddr.setStatus('current')
dsx1G826ResrcId = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826ResrcId.setStatus('current')
dsx1G826TotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx1G826TotalTime.setStatus('current')
dsx1G826ESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826ESs.setStatus('current')
dsx1G826ErrFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826ErrFSs.setStatus('current')
dsx1G826SESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826SESs.setStatus('current')
dsx1G826ConsecSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826ConsecSESs.setStatus('current')
dsx1G826ConsecErrFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826ConsecErrFSs.setStatus('current')
dsx1G826BGErrBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826BGErrBlocks.setStatus('current')
dsx1G826ESRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826ESRatio.setStatus('current')
dsx1G826SESRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826SESRatio.setStatus('current')
dsx1G826BgBERRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826BgBERRatio.setStatus('current')
dsx1G826UASs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 4, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1G826UASs.setStatus('current')
mibBuilder.exportSymbols("ERI-DNX-PERF-MONT-MIB", dsx1G826Table=dsx1G826Table, dsx1EsfCurrStatus=dsx1EsfCurrStatus, eriDNXLinkPMStatsMIB=eriDNXLinkPMStatsMIB, dsx1G826ESs=dsx1G826ESs, dsx1EsfCurrLOFs=dsx1EsfCurrLOFs, dsx1Esf96RegLinkAddr=dsx1Esf96RegLinkAddr, dsx1G826ConsecSESs=dsx1G826ConsecSESs, dsx1EsfCurrEntry=dsx1EsfCurrEntry, dsx1Esf24HrResrcId=dsx1Esf24HrResrcId, dsx1EsfCurrTable=dsx1EsfCurrTable, dsx1G826BGErrBlocks=dsx1G826BGErrBlocks, dsx1EsfCurrESs=dsx1EsfCurrESs, dsx1Esf24HrSESs=dsx1Esf24HrSESs, dsx1Esf=dsx1Esf, dsx1Esf96RegSESs=dsx1Esf96RegSESs, performanceMonitoring=performanceMonitoring, dsx1Esf24HrLOFs=dsx1Esf24HrLOFs, dsx1G826ESRatio=dsx1G826ESRatio, dsx1G826LinkAddr=dsx1G826LinkAddr, dsx1EsfCurrSESs=dsx1EsfCurrSESs, dsx1EsfCurrSeconds=dsx1EsfCurrSeconds, dsx1Esf24HrTable=dsx1Esf24HrTable, dsx1Esf24HrLinkAddr=dsx1Esf24HrLinkAddr, dsx1G826ErrFSs=dsx1G826ErrFSs, dsx1G826UASs=dsx1G826UASs, dsx1EsfCurrResrcId=dsx1EsfCurrResrcId, dsx1G826Entry=dsx1G826Entry, dsx1G826SESRatio=dsx1G826SESRatio, dsx1EsfCurrBESs=dsx1EsfCurrBESs, dsx1Esf96RegEntry=dsx1Esf96RegEntry, dsx1G826=dsx1G826, dsx1Esf96RegTable=dsx1Esf96RegTable, dsx1Esf96RegInterval=dsx1Esf96RegInterval, dsx1Esf96RegESs=dsx1Esf96RegESs, dsx1EsfCurrIntervals=dsx1EsfCurrIntervals, dsx1EsfCurrUASs=dsx1EsfCurrUASs, dsx1G826ConsecErrFSs=dsx1G826ConsecErrFSs, dsx1Esf24HrESs=dsx1Esf24HrESs, dsx1G826TotalTime=dsx1G826TotalTime, dsx1Esf96RegUASs=dsx1Esf96RegUASs, PYSNMP_MODULE_ID=eriDNXLinkPMStatsMIB, dsx1EsfCurrLinkAddr=dsx1EsfCurrLinkAddr, dsx1Esf24HrBESs=dsx1Esf24HrBESs, dsx1G826ResrcId=dsx1G826ResrcId, dsx1Esf24HrEntry=dsx1Esf24HrEntry, dsx1G826SESs=dsx1G826SESs, dsx1Esf24HrUASs=dsx1Esf24HrUASs, dsx1G826BgBERRatio=dsx1G826BgBERRatio, dsx1Esf96RegBESs=dsx1Esf96RegBESs)
