#
# PySNMP MIB module SM10-R2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SM10-R2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:59:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibIdentifier, Counter32, ObjectIdentity, IpAddress, iso, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, enterprises, Counter64, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "Counter32", "ObjectIdentity", "IpAddress", "iso", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "enterprises", "Counter64", "Integer32", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
engenio_information_technologies = MibIdentifier((1, 3, 6, 1, 4, 1, 1123)).setLabel("engenio-information-technologies")
wichita = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 1))
ftcollins = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 2))
cosprings = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 3))
austin = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 4))
tucson = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 5))
reston = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 6))
boulder = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 7))
sm10_R2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1123, 4, 500)).setLabel("sm10-R2")
infoTable = MibTable((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1), )
if mibBuilder.loadTexts: infoTable.setStatus('current')
infoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1), ).setIndexNames((0, "SM10-R2-MIB", "deviceHostIPType"))
if mibBuilder.loadTexts: infoEntry.setStatus('current')
deviceHostIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceHostIPType.setStatus('current')
deviceHostIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceHostIPAddr.setStatus('current')
deviceHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceHostName.setStatus('current')
deviceUserLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceUserLabel.setStatus('current')
deviceErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceErrorCode.setStatus('current')
eventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventTime.setStatus('current')
trapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 69))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapDescription.setStatus('current')
componentType = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 59))).setMaxAccess("readonly")
if mibBuilder.loadTexts: componentType.setStatus('current')
componentLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1123, 4, 500, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: componentLocation.setStatus('current')
storageArrayCritical = NotificationType((1, 3, 6, 1, 4, 1, 1123, 4, 500, 2)).setObjects(("SM10-R2-MIB", "deviceHostIPType"), ("SM10-R2-MIB", "deviceHostIPAddr"), ("SM10-R2-MIB", "deviceHostName"), ("SM10-R2-MIB", "deviceUserLabel"), ("SM10-R2-MIB", "deviceErrorCode"), ("SM10-R2-MIB", "eventTime"), ("SM10-R2-MIB", "trapDescription"), ("SM10-R2-MIB", "componentType"), ("SM10-R2-MIB", "componentLocation"))
if mibBuilder.loadTexts: storageArrayCritical.setStatus('current')
mibBuilder.exportSymbols("SM10-R2-MIB", boulder=boulder, tucson=tucson, wichita=wichita, engenio_information_technologies=engenio_information_technologies, componentType=componentType, deviceHostName=deviceHostName, sm10_R2=sm10_R2, reston=reston, deviceUserLabel=deviceUserLabel, cosprings=cosprings, ftcollins=ftcollins, deviceHostIPType=deviceHostIPType, austin=austin, componentLocation=componentLocation, deviceHostIPAddr=deviceHostIPAddr, storageArrayCritical=storageArrayCritical, trapDescription=trapDescription, eventTime=eventTime, deviceErrorCode=deviceErrorCode, infoTable=infoTable, infoEntry=infoEntry)
