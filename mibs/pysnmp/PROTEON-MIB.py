#
# PySNMP MIB module PROTEON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PROTEON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:59:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter32, iso, Gauge32, ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, enterprises, NotificationType, NotificationType, TimeTicks, MibIdentifier, ObjectIdentity, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "iso", "Gauge32", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "enterprises", "NotificationType", "NotificationType", "TimeTicks", "MibIdentifier", "ObjectIdentity", "Unsigned32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
proteon = MibIdentifier((1, 3, 6, 1, 4, 1, 1))
proAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1))
proSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6))
proSysObjId = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1))
proStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 2))
proPriv = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 5))
proResource = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 1))
proEls = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 2))
proTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 3))
proConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 4))
proResMemory = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 1, 1))
proResBuffers = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 1, 2))
proResMemHeap = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 1))
proResMemBuf = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 2))
proResBufGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 1))
proElsTrapSeqs = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsTrapSeqs.setStatus('deprecated')
proElsTrapSubSystem = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsTrapSubSystem.setStatus('deprecated')
proElsTrapEvent = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsTrapEvent.setStatus('deprecated')
proElsTrapVar1 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 5))
proElsTrapVar2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 6))
proElsTrapVar3 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 7))
proElsTrapVar4 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 8))
proElsTrapVar5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 9))
proElsTrapVar6 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 10))
proElsTrapVar7 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 11))
proElsTrapVar8 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 12))
proElsTrapVar9 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 13))
proElsGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 2, 1))
class ProElsMsgLogLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("other", 1), ("proMsgLevelUIError", 2), ("proMsgLevelCIError", 3), ("proMsgLevelUEError", 4), ("proMsgLevelCEError", 5), ("proMsgLevelError", 6), ("proMsgLevelUInfo", 7), ("proMsgLevelCInfo", 8), ("proMsgLevelInfo", 9), ("proMsgLevelPTrace", 10), ("proMsgLevelUTrace", 11), ("proMsgLevelCTrace", 12), ("proMsgLevelTrace", 13), ("proMsgLevelAlways", 14), ("proMsgLevelStandard", 15), ("proMsgLevelAll", 16))

class ProElsLogStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("proElsLogDisabled", 1), ("proElsLogEnabled", 2))

proSysObjIdP4100 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 41))
proSysObjIdP4200 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 42))
proSysObjIdDNX300 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 43))
proSysObjIdCNX400 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 44))
proSysObjIdCNX600 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 46))
proSysObjIdRBX200 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 47))
proSysObjIdCNX500 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 49))
proSysObjIdRBX250 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 50))
proSysObjIdBOSS3Slot = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 53))
proSysObjIdBOSSs90 = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 54))
proActionReset = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proActionReset.setStatus('mandatory')
proActionReload = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proActionReload.setStatus('mandatory')
proStatusReloadTime = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 2, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proStatusReloadTime.setStatus('mandatory')
proStatusStarts = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proStatusStarts.setStatus('mandatory')
proStatusCrashes = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proStatusCrashes.setStatus('mandatory')
proStatusCrashMsg = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proStatusCrashMsg.setStatus('mandatory')
proResMemHeapTotal = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemHeapTotal.setStatus('mandatory')
proResMemHeapReserve = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemHeapReserve.setStatus('mandatory')
proResMemHeapNeverAlloc = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemHeapNeverAlloc.setStatus('mandatory')
proResMemHeapPermAlloc = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemHeapPermAlloc.setStatus('mandatory')
proResMemHeapTempAlloc = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemHeapTempAlloc.setStatus('mandatory')
proResMemHeapPrevAlloc = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemHeapPrevAlloc.setStatus('mandatory')
proResMemBufTotal = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemBufTotal.setStatus('mandatory')
proResMemBufReserve = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemBufReserve.setStatus('mandatory')
proResMemBufNeverAlloc = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemBufNeverAlloc.setStatus('mandatory')
proResMemBufPermAlloc = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResMemBufPermAlloc.setStatus('mandatory')
proResBufGlobalTotal = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResBufGlobalTotal.setStatus('mandatory')
proResBufGlobalFree = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResBufGlobalFree.setStatus('mandatory')
proResBufGlobalFair = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResBufGlobalFair.setStatus('mandatory')
proResBufGlobalLow = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResBufGlobalLow.setStatus('mandatory')
proResBufTable = MibTable((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 2), )
if mibBuilder.loadTexts: proResBufTable.setStatus('mandatory')
proResBufTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: proResBufTableEntry.setStatus('mandatory')
proResInputBufsReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResInputBufsReq.setStatus('mandatory')
proResInputBufsAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResInputBufsAlloc.setStatus('mandatory')
proResInputBufsLow = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResInputBufsLow.setStatus('mandatory')
proResInputBufsCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResInputBufsCurrent.setStatus('mandatory')
proResInputBufsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResInputBufsSize.setStatus('mandatory')
proResInputBufsTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 1, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proResInputBufsTotalBytes.setStatus('mandatory')
proElsPin = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsPin.setStatus('mandatory')
proElsDropped = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsDropped.setStatus('mandatory')
proElsTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("proTSOff", 1), ("proTSSysUpTime", 2), ("proTSTimeOfDay", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsTimestamp.setStatus('mandatory')
proElsAction = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("proElsActionClear", 2), ("proElsActionDefault", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsAction.setStatus('mandatory')
proElsTrapVersion = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("proElsTrapVersionV1", 1), ("proElsTrapVersionV2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsTrapVersion.setStatus('mandatory')
proElsSubSysTable = MibTable((1, 3, 6, 1, 4, 1, 1, 6, 2, 2), )
if mibBuilder.loadTexts: proElsSubSysTable.setStatus('mandatory')
proElsSubSysTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1), ).setIndexNames((0, "PROTEON-MIB", "proElsSubSysIndex"))
if mibBuilder.loadTexts: proElsSubSysTableEntry.setStatus('mandatory')
proElsSubSysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 25, 30, 35, 40, 41, 42, 43, 53, 54, 56, 60, 72, 73, 74, 75, 81, 83, 84, 85, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154))).clone(namedValues=NamedValues(("proElsSubSysIndexGw", 1), ("proElsSubSysIndexFlt", 2), ("proElsSubSysIndexBrs", 3), ("proElsSubSysIndexArp", 5), ("proElsSubSysIndexIp", 10), ("proElsSubSysIndexIcmp", 11), ("proElsSubSysIndexTcp", 12), ("proElsSubSysIndexUdp", 13), ("proElsSubSysIndexBtp", 14), ("proElsSubSysIndexRip", 15), ("proElsSubSysIndexSpf", 17), ("proElsSubSysIndexMspf", 18), ("proElsSubSysIndexTftp", 19), ("proElsSubSysIndexSnmp", 21), ("proElsSubSysIndexDvm", 22), ("proElsSubSysIndexDn", 25), ("proElsSubSysIndexXn", 30), ("proElsSubSysIndexIpx", 35), ("proElsSubSysIndexIso", 40), ("proElsSubSysIndexEsis", 41), ("proElsSubSysIndexIsis", 42), ("proElsSubSysIndexDnav", 43), ("proElsSubSysIndexAp2", 53), ("proElsSubSysIndexZip2", 54), ("proElsSubSysIndexR2mp", 56), ("proElsSubSysIndexVin", 60), ("proElsSubSysIndexSrt", 72), ("proElsSubSysIndexStp", 73), ("proElsSubSysIndexBr", 74), ("proElsSubSysIndexSrly", 75), ("proElsSubSysIndexEth", 81), ("proElsSubSysIndexSl", 83), ("proElsSubSysIndexTkr", 84), ("proElsSubSysIndexX25", 85), ("proElsSubSysIndexFddi", 88), ("proElsSubSysIndexSdlc", 90), ("proElsSubSysIndexFr", 92), ("proElsSubSysIndexPpp", 95), ("proElsSubSysIndexX251", 96), ("proElsSubSysIndexX252", 97), ("proElsSubSysIndexX253", 98), ("proElsSubSysIndexIsdn", 99), ("proElsSubSysIndexIppn", 100), ("proElsSubSysIndexWrs", 101), ("proElsSubSysIndexLnm", 102), ("proElsSubSysIndexLlc", 103), ("proElsSubSysIndexBgp", 104), ("proElsSubSysIndexMcf", 105), ("proElsSubSysIndexDls", 107), ("proElsSubSysIndexV25b", 108), ("proElsSubSysIndexEzstrt", 109), ("proElsSubSysIndexAi", 110), ("proElsSubSysIndexBan", 111), ("proElsSubSysIndexEnv", 112), ("proElsSubSysIndexCmp", 113), ("proElsSubSysIndexNbs", 114), ("proElsSubSysIndexAtm", 115), ("proElsSubSysIndexLec", 116), ("proElsSubSysIndexAppn", 117), ("proElsSubSysIndexIlmi", 119), ("proElsSubSysIndexSaal", 120), ("proElsSubSysIndexSvc", 121), ("proElsSubSysIndexLes", 123), ("proElsSubSysIndexLecs", 124), ("proElsSubSysIndexEvlog", 126), ("proElsSubSysIndexNot", 127), ("proElsSubSysIndexMars", 128), ("proElsSubSysIndexMcs", 129), ("proElsSubSysIndexIlec", 130), ("proElsSubSysIndexNhrp", 131), ("proElsSubSysIndexXtp", 132), ("proElsSubSysIndexEsc", 133), ("proElsSubSysIndexBbcm", 134), ("proElsSubSysIndexLcs", 135), ("proElsSubSysIndexLsa", 136), ("proElsSubSysIndexMpc", 137), ("proElsSubSysIndexRsvp", 138), ("proElsSubSysIndexVcrm", 139), ("proElsSubSysIndexScsp", 140), ("proElsSubSysIndexAllc", 141), ("proElsSubSysIndexNdr", 142), ("proElsSubSysIndexV34", 143), ("proElsSubSysIndexDout", 144), ("proElsSubSysIndexMlp", 145), ("proElsSubSysIndexDhcp", 146), ("proElsSubSysIndexSec", 147), ("proElsSubSysIndexEncr", 148), ("proElsSubSysIndexPm", 149), ("proElsSubSysIndexVlan", 150), ("proElsSubSysIndexDgw", 151), ("proElsSubSysIndexQllc", 152), ("proElsSubSysIndexAris", 153), ("proElsSubSysIndexGsmp", 154)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysIndex.setStatus('mandatory')
proElsSubSysDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysDescr.setStatus('mandatory')
proElsSubSysNumEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysNumEvents.setStatus('mandatory')
proElsSubSysDisplayEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 4), ProElsMsgLogLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsSubSysDisplayEnable.setStatus('mandatory')
proElsSubSysDisplayDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 5), ProElsMsgLogLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsSubSysDisplayDisable.setStatus('mandatory')
proElsSubSysTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 6), ProElsMsgLogLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsSubSysTrapEnable.setStatus('mandatory')
proElsSubSysTrapDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 7), ProElsMsgLogLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsSubSysTrapDisable.setStatus('mandatory')
proElsSubSysCurrDisplayLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysCurrDisplayLevel.setStatus('mandatory')
proElsSubSysCurrTrapLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysCurrTrapLevel.setStatus('mandatory')
proElsSubSysEventTable = MibTable((1, 3, 6, 1, 4, 1, 1, 6, 2, 3), )
if mibBuilder.loadTexts: proElsSubSysEventTable.setStatus('mandatory')
proElsSubSysEventTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1, 6, 2, 3, 1), ).setIndexNames((0, "PROTEON-MIB", "proElsSubSysIndex"), (0, "PROTEON-MIB", "proElsSubSysEventIndex"))
if mibBuilder.loadTexts: proElsSubSysEventTableEntry.setStatus('mandatory')
proElsSubSysEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysEventIndex.setStatus('mandatory')
proElsSubSysEventMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysEventMsg.setStatus('mandatory')
proElsSubSysEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysEventCount.setStatus('mandatory')
proElsSubSysEventLogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 3, 1, 4), ProElsMsgLogLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proElsSubSysEventLogLevel.setStatus('mandatory')
proElsSubSysEventLogToConsole = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 3, 1, 5), ProElsLogStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsSubSysEventLogToConsole.setStatus('mandatory')
proElsSubSysEventLogToTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 6, 2, 3, 1, 6), ProElsLogStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proElsSubSysEventLogToTrap.setStatus('mandatory')
proElsTrapV1 = NotificationType((1, 3, 6, 1, 4, 1, 1) + (0,1)).setObjects(("PROTEON-MIB", "proElsTrapSeqs"), ("PROTEON-MIB", "proElsTrapSubSystem"), ("PROTEON-MIB", "proElsTrapEvent"))
proElsTrapV2 = NotificationType((1, 3, 6, 1, 4, 1, 1) + (0,2)).setObjects(("PROTEON-MIB", "proElsSubSysEventMsg"))
proTempScale = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("celsius", 1), ("fahrenheit", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proTempScale.setStatus('mandatory')
proMaxHwTemp = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proMaxHwTemp.setStatus('mandatory')
proMinHwTemp = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proMinHwTemp.setStatus('mandatory')
proTempPollPeriod = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: proTempPollPeriod.setStatus('mandatory')
proCurrentTemp = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proCurrentTemp.setStatus('mandatory')
proLowTempThreshold = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proLowTempThreshold.setStatus('mandatory')
proHighTempThreshold = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proHighTempThreshold.setStatus('mandatory')
proTempHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 8), Integer32().clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: proTempHysteresis.setStatus('mandatory')
proHighTempCondition = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proHighTempCondition.setStatus('mandatory')
proLowTempCondition = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proLowTempCondition.setStatus('mandatory')
proHighestTemp = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proHighestTemp.setStatus('mandatory')
proHighTempTime = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proHighTempTime.setStatus('mandatory')
proLowestTemp = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proLowestTemp.setStatus('mandatory')
proLowTempTime = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 3, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: proLowTempTime.setStatus('mandatory')
proCfgLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 6, 4, 1))
proCfgProtocols = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proCfgProtocols.setStatus('mandatory')
proCfgDatalinks = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proCfgDatalinks.setStatus('mandatory')
proCfgFeatures = MibScalar((1, 3, 6, 1, 4, 1, 1, 6, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: proCfgFeatures.setStatus('mandatory')
mibBuilder.exportSymbols("PROTEON-MIB", proResBufGlobal=proResBufGlobal, proResMemBufPermAlloc=proResMemBufPermAlloc, proResMemBufReserve=proResMemBufReserve, proResBuffers=proResBuffers, ProElsMsgLogLevel=ProElsMsgLogLevel, proResMemBufTotal=proResMemBufTotal, proResource=proResource, proElsSubSysTable=proElsSubSysTable, proElsTrapVar9=proElsTrapVar9, proCfgFeatures=proCfgFeatures, proElsSubSysEventLogToConsole=proElsSubSysEventLogToConsole, proTempPollPeriod=proTempPollPeriod, proResMemHeapTempAlloc=proResMemHeapTempAlloc, proResInputBufsSize=proResInputBufsSize, proResMemBuf=proResMemBuf, proTempScale=proTempScale, proResBufGlobalFree=proResBufGlobalFree, proElsTrapVar6=proElsTrapVar6, proElsSubSysDisplayDisable=proElsSubSysDisplayDisable, proElsSubSysEventIndex=proElsSubSysEventIndex, proHighestTemp=proHighestTemp, proSysObjIdRBX200=proSysObjIdRBX200, proElsTrapVar3=proElsTrapVar3, proCurrentTemp=proCurrentTemp, proSysObjIdBOSS3Slot=proSysObjIdBOSS3Slot, proElsTimestamp=proElsTimestamp, proElsTrapEvent=proElsTrapEvent, proStatusReloadTime=proStatusReloadTime, proSystem=proSystem, proResBufTableEntry=proResBufTableEntry, proResMemHeapPermAlloc=proResMemHeapPermAlloc, proElsSubSysEventLogLevel=proElsSubSysEventLogLevel, proHighTempThreshold=proHighTempThreshold, proSysObjIdP4200=proSysObjIdP4200, proMaxHwTemp=proMaxHwTemp, proElsDropped=proElsDropped, proElsSubSysTrapEnable=proElsSubSysTrapEnable, proElsSubSysCurrDisplayLevel=proElsSubSysCurrDisplayLevel, proElsSubSysEventCount=proElsSubSysEventCount, proSysObjIdCNX400=proSysObjIdCNX400, proResInputBufsLow=proResInputBufsLow, proElsTrapVersion=proElsTrapVersion, proActionReset=proActionReset, proHighTempCondition=proHighTempCondition, proCfgProtocols=proCfgProtocols, proteon=proteon, proElsTrapVar1=proElsTrapVar1, proResBufGlobalFair=proResBufGlobalFair, proElsTrapV1=proElsTrapV1, proElsTrapSeqs=proElsTrapSeqs, proElsSubSysDescr=proElsSubSysDescr, proElsAction=proElsAction, proResBufGlobalTotal=proResBufGlobalTotal, proMinHwTemp=proMinHwTemp, proLowTempThreshold=proLowTempThreshold, proLowTempTime=proLowTempTime, proCfgLoad=proCfgLoad, proResInputBufsReq=proResInputBufsReq, proResInputBufsTotalBytes=proResInputBufsTotalBytes, proLowTempCondition=proLowTempCondition, proSysObjIdP4100=proSysObjIdP4100, proResMemHeapPrevAlloc=proResMemHeapPrevAlloc, ProElsLogStatus=ProElsLogStatus, proSysObjIdDNX300=proSysObjIdDNX300, proElsTrapVar4=proElsTrapVar4, proResMemHeap=proResMemHeap, proElsSubSysTrapDisable=proElsSubSysTrapDisable, proElsSubSysIndex=proElsSubSysIndex, proActionReload=proActionReload, proConfig=proConfig, proSysObjIdCNX600=proSysObjIdCNX600, proTempHysteresis=proTempHysteresis, proResMemHeapTotal=proResMemHeapTotal, proElsTrapV2=proElsTrapV2, proStatusStarts=proStatusStarts, proElsSubSysDisplayEnable=proElsSubSysDisplayEnable, proSysObjId=proSysObjId, proSysObjIdBOSSs90=proSysObjIdBOSSs90, proTemp=proTemp, proElsGeneric=proElsGeneric, proAdmin=proAdmin, proResMemBufNeverAlloc=proResMemBufNeverAlloc, proElsPin=proElsPin, proElsTrapSubSystem=proElsTrapSubSystem, proSysObjIdRBX250=proSysObjIdRBX250, proStatusCrashMsg=proStatusCrashMsg, proElsSubSysEventLogToTrap=proElsSubSysEventLogToTrap, proElsTrapVar2=proElsTrapVar2, proStatusCrashes=proStatusCrashes, proElsSubSysTableEntry=proElsSubSysTableEntry, proElsSubSysCurrTrapLevel=proElsSubSysCurrTrapLevel, proElsTrapVar7=proElsTrapVar7, proEls=proEls, proSysObjIdCNX500=proSysObjIdCNX500, proResMemHeapReserve=proResMemHeapReserve, proElsSubSysEventTable=proElsSubSysEventTable, proPriv=proPriv, proResInputBufsCurrent=proResInputBufsCurrent, proResBufGlobalLow=proResBufGlobalLow, proResMemory=proResMemory, proResBufTable=proResBufTable, proElsSubSysEventTableEntry=proElsSubSysEventTableEntry, proElsTrapVar8=proElsTrapVar8, proElsSubSysNumEvents=proElsSubSysNumEvents, proCfgDatalinks=proCfgDatalinks, proLowestTemp=proLowestTemp, proElsTrapVar5=proElsTrapVar5, proHighTempTime=proHighTempTime, proElsSubSysEventMsg=proElsSubSysEventMsg, proResMemHeapNeverAlloc=proResMemHeapNeverAlloc, proStatus=proStatus, proResInputBufsAlloc=proResInputBufsAlloc)
