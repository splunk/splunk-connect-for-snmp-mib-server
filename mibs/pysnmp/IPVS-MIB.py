#
# PySNMP MIB module IPVS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPVS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:45:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
one4net, = mibBuilder.importSymbols("ONE4NET-MIB", "one4net")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter64, NotificationType, iso, Integer32, Counter32, Bits, Unsigned32, Opaque, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, MibIdentifier, Gauge32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "NotificationType", "iso", "Integer32", "Counter32", "Bits", "Unsigned32", "Opaque", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "MibIdentifier", "Gauge32", "ObjectIdentity")
TimeInterval, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TextualConvention", "TruthValue", "DisplayString")
ipvs = ModuleIdentity((1, 3, 6, 1, 4, 1, 12196, 12))
ipvs.setRevisions(('2011-12-01 00:00',))
if mibBuilder.loadTexts: ipvs.setLastUpdated('201112010000Z')
if mibBuilder.loadTexts: ipvs.setOrganization('KEMP Technologies')
ipvsVSTable = MibTable((1, 3, 6, 1, 4, 1, 12196, 12, 1), )
if mibBuilder.loadTexts: ipvsVSTable.setStatus('current')
ipvsRSTable = MibTable((1, 3, 6, 1, 4, 1, 12196, 12, 2), )
if mibBuilder.loadTexts: ipvsRSTable.setStatus('current')
ipvsRSTotalTable = MibTable((1, 3, 6, 1, 4, 1, 12196, 12, 8), )
if mibBuilder.loadTexts: ipvsRSTotalTable.setStatus('current')
rsTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1), ).setIndexNames((0, "IPVS-MIB", "totRSidx"))
if mibBuilder.loadTexts: rsTotalEntry.setStatus('current')
totRSidx = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: totRSidx.setStatus('current')
totRSDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024)))
if mibBuilder.loadTexts: totRSDesc.setStatus('current')
totRSConns = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totRSConns.setStatus('current')
totRSInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totRSInPkts.setStatus('current')
totRSOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totRSOutPkts.setStatus('current')
totRSInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totRSInBytes.setStatus('current')
totRSOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totRSOutBytes.setStatus('current')
totRSActiveConns = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totRSActiveConns.setStatus('current')
totRSInactiveConns = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totRSInactiveConns.setStatus('current')
vsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1), ).setIndexNames((0, "IPVS-MIB", "vSidx"))
if mibBuilder.loadTexts: vsEntry.setStatus('current')
vSidx = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vSidx.setStatus('current')
vSDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vSDesc.setStatus('current')
vSConns = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vSConns.setStatus('current')
vSInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vSInPkts.setStatus('current')
vSOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vSOutPkts.setStatus('current')
vSInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vSInBytes.setStatus('current')
vSOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vSOutBytes.setStatus('current')
vSActivConns = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vSActivConns.setStatus('current')
rsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1), ).setIndexNames((0, "IPVS-MIB", "rSidx"))
if mibBuilder.loadTexts: rsEntry.setStatus('current')
rSidx = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)))
if mibBuilder.loadTexts: rSidx.setStatus('current')
rSVSidx = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSVSidx.setStatus('current')
rSDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSDesc.setStatus('current')
rSConns = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSConns.setStatus('current')
rSInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSInPkts.setStatus('current')
rSOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSOutPkts.setStatus('current')
rSInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSInBytes.setStatus('current')
rSOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSOutBytes.setStatus('current')
rSActiveConns = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSActiveConns.setStatus('current')
rSInactiveConns = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSInactiveConns.setStatus('current')
rSWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 12196, 12, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rSWeight.setStatus('current')
conns = MibScalar((1, 3, 6, 1, 4, 1, 12196, 12, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: conns.setStatus('current')
inPkts = MibScalar((1, 3, 6, 1, 4, 1, 12196, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inPkts.setStatus('current')
outPkts = MibScalar((1, 3, 6, 1, 4, 1, 12196, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outPkts.setStatus('current')
inBytes = MibScalar((1, 3, 6, 1, 4, 1, 12196, 12, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inBytes.setStatus('current')
outBytes = MibScalar((1, 3, 6, 1, 4, 1, 12196, 12, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outBytes.setStatus('current')
mibBuilder.exportSymbols("IPVS-MIB", totRSOutBytes=totRSOutBytes, vSOutBytes=vSOutBytes, rSOutPkts=rSOutPkts, outBytes=outBytes, ipvsRSTotalTable=ipvsRSTotalTable, vSInPkts=vSInPkts, vSInBytes=vSInBytes, ipvsVSTable=ipvsVSTable, rSidx=rSidx, totRSActiveConns=totRSActiveConns, rSActiveConns=rSActiveConns, rsTotalEntry=rsTotalEntry, totRSConns=totRSConns, totRSInPkts=totRSInPkts, conns=conns, vSOutPkts=vSOutPkts, rSWeight=rSWeight, outPkts=outPkts, totRSInactiveConns=totRSInactiveConns, ipvsRSTable=ipvsRSTable, rsEntry=rsEntry, rSInPkts=rSInPkts, vSConns=vSConns, inPkts=inPkts, rSOutBytes=rSOutBytes, vsEntry=vsEntry, PYSNMP_MODULE_ID=ipvs, rSVSidx=rSVSidx, vSDesc=vSDesc, totRSDesc=totRSDesc, inBytes=inBytes, rSInactiveConns=rSInactiveConns, totRSInBytes=totRSInBytes, rSConns=rSConns, vSActivConns=vSActivConns, totRSidx=totRSidx, totRSOutPkts=totRSOutPkts, vSidx=vSidx, ipvs=ipvs, rSDesc=rSDesc, rSInBytes=rSInBytes)
