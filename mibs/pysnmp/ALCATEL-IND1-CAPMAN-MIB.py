#
# PySNMP MIB module ALCATEL-IND1-CAPMAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-CAPMAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:01:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1CapMan, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1CapMan")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, Unsigned32, ModuleIdentity, Integer32, iso, NotificationType, IpAddress, Bits, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "ModuleIdentity", "Integer32", "iso", "NotificationType", "IpAddress", "Bits", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "TimeTicks")
RowStatus, DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "MacAddress")
alcatelIND1CapManMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1))
alcatelIND1CapManMIB.setRevisions(('2009-11-23 00:00',))
if mibBuilder.loadTexts: alcatelIND1CapManMIB.setLastUpdated('200911230000Z')
if mibBuilder.loadTexts: alcatelIND1CapManMIB.setOrganization('Alcatel-Lucent')
alcatelIND1CapManMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1))
if mibBuilder.loadTexts: alcatelIND1CapManMIBObjects.setStatus('current')
alaCapabilityManager = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1))
alaCapManConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2))
alaCapManVrfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1), )
if mibBuilder.loadTexts: alaCapManVrfTable.setStatus('deprecated')
alaCapManVrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityVrfContext"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityVrfCapability"))
if mibBuilder.loadTexts: alaCapManVrfEntry.setStatus('deprecated')
alaCapabilityVrfContext = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("global", 1), ("primary", 2), ("subsidiary", 3))))
if mibBuilder.loadTexts: alaCapabilityVrfContext.setStatus('deprecated')
alaCapabilityVrfCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("ipv4Routes", 1), ("ipv6Routes", 2), ("ipv4Interfaces", 3), ("ipv6Interfaces", 4), ("mcastInterfaces", 5), ("pimRPS", 6), ("bgpPeers", 7), ("bgpRoutes", 8), ("ripRoutes", 9), ("routingProtocols", 10), ("maxOSPF", 11))))
if mibBuilder.loadTexts: alaCapabilityVrfCapability.setStatus('deprecated')
alaCapabilityVrfLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 524288))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilityVrfLimit.setStatus('deprecated')
alaCapManTcamTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2), )
if mibBuilder.loadTexts: alaCapManTcamTable.setStatus('deprecated')
alaCapManTcamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityTcamContext"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityTcamCapability"))
if mibBuilder.loadTexts: alaCapManTcamEntry.setStatus('deprecated')
alaCapabilityTcamContext = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("global", 1))))
if mibBuilder.loadTexts: alaCapabilityTcamContext.setStatus('deprecated')
alaCapabilityTcamCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mode", 1))))
if mibBuilder.loadTexts: alaCapabilityTcamCapability.setStatus('deprecated')
alaCapabilityTcamMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilityTcamMode.setStatus('deprecated')
alaCapManMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3), )
if mibBuilder.loadTexts: alaCapManMirrorTable.setStatus('deprecated')
alaCapManMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityMirrorContext"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityMirrorCapability"))
if mibBuilder.loadTexts: alaCapManMirrorEntry.setStatus('deprecated')
alaCapabilityMirrorContext = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("global", 1))))
if mibBuilder.loadTexts: alaCapabilityMirrorContext.setStatus('deprecated')
alaCapabilityMirrorCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("maxMonitorSess", 1))))
if mibBuilder.loadTexts: alaCapabilityMirrorCapability.setStatus('deprecated')
alaCapabilityMirrorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilityMirrorLimit.setStatus('deprecated')
alaCapManSourceLearningTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4), )
if mibBuilder.loadTexts: alaCapManSourceLearningTable.setStatus('deprecated')
alaCapManSourceLearningEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilitySourceLearningContext"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilitySourceLearningCapability"))
if mibBuilder.loadTexts: alaCapManSourceLearningEntry.setStatus('deprecated')
alaCapabilitySourceLearningContext = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("global", 1))))
if mibBuilder.loadTexts: alaCapabilitySourceLearningContext.setStatus('deprecated')
alaCapabilitySourceLearningCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mode", 1))))
if mibBuilder.loadTexts: alaCapabilitySourceLearningCapability.setStatus('deprecated')
alaCapabilitySourceLearningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("centralized", 1), ("distributed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilitySourceLearningMode.setStatus('deprecated')
alaCapManHashControlCommands = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 5))
if mibBuilder.loadTexts: alaCapManHashControlCommands.setStatus('current')
alaCapManHashMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("brief", 1), ("extended", 2))).clone('extended')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManHashMode.setStatus('current')
alaCapManUdpTcpPortMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManUdpTcpPortMode.setStatus('current')
alaCapManNonUCHashControl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManNonUCHashControl.setStatus('current')
alaCapManSwLicensingConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6))
alaCapManSwLicensingAction = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("applyFile", 1), ("applyKey", 2), ("deactivate", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManSwLicensingAction.setStatus('current')
alaCapManSwLicensingActionArg = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManSwLicensingActionArg.setStatus('current')
alaCapManVcSwLicensingAction = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("applyFile", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManVcSwLicensingAction.setStatus('current')
alaCapManVcSwLicensingActionArg = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManVcSwLicensingActionArg.setStatus('current')
alaCapManSwLicensingInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7), )
if mibBuilder.loadTexts: alaCapManSwLicensingInfoTable.setStatus('current')
alaCapManSwLicensingInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaLicenseId"))
if mibBuilder.loadTexts: alaCapManSwLicensingInfoEntry.setStatus('current')
alaLicenseId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaLicenseId.setStatus('current')
alaLicensedApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaLicensedApplication.setStatus('current')
alaLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("demo", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaLicenseType.setStatus('current')
alaLicenseTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaLicenseTimeRemaining.setStatus('current')
alaCapManVcSwLicensingInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10), )
if mibBuilder.loadTexts: alaCapManVcSwLicensingInfoTable.setStatus('current')
alaCapManVcSwLicensingInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaVcLicensedSerialNum"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaVcLicensedMacAddress"))
if mibBuilder.loadTexts: alaCapManVcSwLicensingInfoEntry.setStatus('current')
alaVcLicensedSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(25, 25)).setFixedLength(25))
if mibBuilder.loadTexts: alaVcLicensedSerialNum.setStatus('current')
alaVcLicensedMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaVcLicensedMacAddress.setStatus('current')
alaVcLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("demo", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseType.setStatus('current')
alaVcLicenseVcSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseVcSlot.setStatus('current')
alaVcLicenseBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseBitMap.setStatus('current')
alaVcLicenseTimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseTimeRemain.setStatus('current')
alaCapabilityIpmcMaxLimits = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 8))
alaCapabilityIpmcMaxAdminLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilityIpmcMaxAdminLimit.setStatus('current')
alaCapabilityIpmcMaxOperLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCapabilityIpmcMaxOperLimit.setStatus('current')
alaCapManFeatureControlCommands = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 9))
alaCapManDcbCfgMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCapManDcbCfgMode.setStatus('current')
alaCapManDcbOprMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCapManDcbOprMode.setStatus('current')
alaCapManGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1))
alaCapManCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 2))
alaCapManVrfTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityVrfLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManVrfTableGroup = alaCapManVrfTableGroup.setStatus('current')
alaCapManTcamTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityTcamMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManTcamTableGroup = alaCapManTcamTableGroup.setStatus('current')
alaCapManMirrorTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityMirrorLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManMirrorTableGroup = alaCapManMirrorTableGroup.setStatus('current')
alaCapManSourceLearningTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilitySourceLearningMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManSourceLearningTableGroup = alaCapManSourceLearningTableGroup.setStatus('current')
alaCapManHashControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapManHashMode"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManUdpTcpPortMode"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManNonUCHashControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManHashControlGroup = alaCapManHashControlGroup.setStatus('current')
alaCapManSwLicensingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSwLicensingAction"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSwLicensingActionArg"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManVcSwLicensingAction"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManVcSwLicensingActionArg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManSwLicensingGroup = alaCapManSwLicensingGroup.setStatus('current')
alaCapManSwLicensingInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaLicensedApplication"), ("ALCATEL-IND1-CAPMAN-MIB", "alaLicenseType"), ("ALCATEL-IND1-CAPMAN-MIB", "alaLicenseTimeRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManSwLicensingInfoGroup = alaCapManSwLicensingInfoGroup.setStatus('current')
alaCapabilityIpmcMaxLimitsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityIpmcMaxAdminLimit"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityIpmcMaxOperLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapabilityIpmcMaxLimitsGroup = alaCapabilityIpmcMaxLimitsGroup.setStatus('current')
alaCapManDcbCfgModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapManDcbCfgMode"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManDcbOprMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManDcbCfgModeGroup = alaCapManDcbCfgModeGroup.setStatus('current')
alaVcLicenseCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseBitMap"), ("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseTimeRemain"), ("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseType"), ("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseVcSlot"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVcLicenseCfgGroup = alaVcLicenseCfgGroup.setStatus('current')
alaCapManCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapManVrfTableGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManTcamTableGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManMirrorTableGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSourceLearningTableGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManHashControlGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSwLicensingGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSwLicensingInfoGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityIpmcMaxLimitsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManCompliance = alaCapManCompliance.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-CAPMAN-MIB", alcatelIND1CapManMIB=alcatelIND1CapManMIB, alaCapabilityVrfContext=alaCapabilityVrfContext, alaCapManMirrorEntry=alaCapManMirrorEntry, alaCapManSwLicensingInfoTable=alaCapManSwLicensingInfoTable, alaCapManTcamEntry=alaCapManTcamEntry, alaCapabilityTcamMode=alaCapabilityTcamMode, alaLicenseType=alaLicenseType, alaLicenseId=alaLicenseId, alaVcLicensedSerialNum=alaVcLicensedSerialNum, alaCapabilityIpmcMaxAdminLimit=alaCapabilityIpmcMaxAdminLimit, alaCapManFeatureControlCommands=alaCapManFeatureControlCommands, alaCapManCompliances=alaCapManCompliances, alaCapManMirrorTable=alaCapManMirrorTable, alaCapManHashControlGroup=alaCapManHashControlGroup, alaCapManVcSwLicensingInfoEntry=alaCapManVcSwLicensingInfoEntry, alaCapManCompliance=alaCapManCompliance, alaCapManHashControlCommands=alaCapManHashControlCommands, alaCapManSourceLearningEntry=alaCapManSourceLearningEntry, alaCapManDcbOprMode=alaCapManDcbOprMode, alaCapManConformance=alaCapManConformance, alaCapManVrfEntry=alaCapManVrfEntry, alaCapManSwLicensingActionArg=alaCapManSwLicensingActionArg, alaCapabilityIpmcMaxOperLimit=alaCapabilityIpmcMaxOperLimit, alaLicensedApplication=alaLicensedApplication, alaCapManDcbCfgMode=alaCapManDcbCfgMode, alaCapManSwLicensingInfoEntry=alaCapManSwLicensingInfoEntry, alaVcLicenseCfgGroup=alaVcLicenseCfgGroup, alaVcLicensedMacAddress=alaVcLicensedMacAddress, alaCapabilityVrfLimit=alaCapabilityVrfLimit, alaCapManDcbCfgModeGroup=alaCapManDcbCfgModeGroup, alaCapManVrfTable=alaCapManVrfTable, alaCapabilitySourceLearningMode=alaCapabilitySourceLearningMode, alaCapabilityIpmcMaxLimits=alaCapabilityIpmcMaxLimits, alaCapManTcamTableGroup=alaCapManTcamTableGroup, alaCapManSourceLearningTableGroup=alaCapManSourceLearningTableGroup, alaCapManUdpTcpPortMode=alaCapManUdpTcpPortMode, alaCapManSwLicensingGroup=alaCapManSwLicensingGroup, alaCapManSourceLearningTable=alaCapManSourceLearningTable, alaCapManVcSwLicensingInfoTable=alaCapManVcSwLicensingInfoTable, alcatelIND1CapManMIBObjects=alcatelIND1CapManMIBObjects, alaLicenseTimeRemaining=alaLicenseTimeRemaining, alaCapManTcamTable=alaCapManTcamTable, alaCapManNonUCHashControl=alaCapManNonUCHashControl, alaCapabilitySourceLearningContext=alaCapabilitySourceLearningContext, alaCapManVrfTableGroup=alaCapManVrfTableGroup, alaCapabilityMirrorContext=alaCapabilityMirrorContext, alaVcLicenseType=alaVcLicenseType, alaCapManGroups=alaCapManGroups, alaCapabilityTcamCapability=alaCapabilityTcamCapability, alaCapabilityIpmcMaxLimitsGroup=alaCapabilityIpmcMaxLimitsGroup, alaCapabilityVrfCapability=alaCapabilityVrfCapability, alaCapabilitySourceLearningCapability=alaCapabilitySourceLearningCapability, alaCapabilityMirrorCapability=alaCapabilityMirrorCapability, alaCapManVcSwLicensingActionArg=alaCapManVcSwLicensingActionArg, alaCapManSwLicensingAction=alaCapManSwLicensingAction, alaCapManSwLicensingConfig=alaCapManSwLicensingConfig, alaVcLicenseTimeRemain=alaVcLicenseTimeRemain, alaCapManMirrorTableGroup=alaCapManMirrorTableGroup, alaCapManSwLicensingInfoGroup=alaCapManSwLicensingInfoGroup, alaCapabilityTcamContext=alaCapabilityTcamContext, alaVcLicenseBitMap=alaVcLicenseBitMap, alaVcLicenseVcSlot=alaVcLicenseVcSlot, alaCapabilityMirrorLimit=alaCapabilityMirrorLimit, alaCapManVcSwLicensingAction=alaCapManVcSwLicensingAction, alaCapManHashMode=alaCapManHashMode, alaCapabilityManager=alaCapabilityManager, PYSNMP_MODULE_ID=alcatelIND1CapManMIB)
