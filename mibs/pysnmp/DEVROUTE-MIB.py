#
# PySNMP MIB module DEVROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DEVROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
device, = mibBuilder.importSymbols("ANIROOT-MIB", "device")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, TimeTicks, Bits, NotificationType, ModuleIdentity, IpAddress, Counter32, Gauge32, Unsigned32, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "TimeTicks", "Bits", "NotificationType", "ModuleIdentity", "IpAddress", "Counter32", "Gauge32", "Unsigned32", "Counter64", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aniDevRoute = ModuleIdentity((1, 3, 6, 1, 4, 1, 4325, 2, 9))
if mibBuilder.loadTexts: aniDevRoute.setLastUpdated('0105091130Z')
if mibBuilder.loadTexts: aniDevRoute.setOrganization('Aperto Networks')
aniDevRouteTable = MibTable((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1), )
if mibBuilder.loadTexts: aniDevRouteTable.setStatus('current')
aniDevRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1), ).setIndexNames((0, "DEVROUTE-MIB", "aniDevRouteDest"), (0, "DEVROUTE-MIB", "aniDevRouteNextHop"), (0, "DEVROUTE-MIB", "aniDevRouteMask"))
if mibBuilder.loadTexts: aniDevRouteEntry.setStatus('current')
aniDevRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aniDevRouteDest.setStatus('current')
aniDevRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteIfIndex.setStatus('current')
aniDevRouteMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteMetric1.setStatus('current')
aniDevRouteMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteMetric2.setStatus('current')
aniDevRouteMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteMetric3.setStatus('current')
aniDevRouteMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteMetric4.setStatus('current')
aniDevRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aniDevRouteNextHop.setStatus('current')
aniDevRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("indirect", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aniDevRouteType.setStatus('current')
aniDevRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("is-is", 9), ("es-is", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteProto.setStatus('current')
aniDevRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteAge.setStatus('current')
aniDevRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aniDevRouteMask.setStatus('current')
aniDevRouteMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteMetric5.setStatus('current')
aniDevRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 13), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevRouteInfo.setStatus('current')
aniDevRouteFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 9, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("host", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aniDevRouteFlag.setStatus('current')
mibBuilder.exportSymbols("DEVROUTE-MIB", aniDevRouteInfo=aniDevRouteInfo, PYSNMP_MODULE_ID=aniDevRoute, aniDevRouteProto=aniDevRouteProto, aniDevRouteDest=aniDevRouteDest, aniDevRouteIfIndex=aniDevRouteIfIndex, aniDevRouteEntry=aniDevRouteEntry, aniDevRouteTable=aniDevRouteTable, aniDevRoute=aniDevRoute, aniDevRouteMetric1=aniDevRouteMetric1, aniDevRouteMetric4=aniDevRouteMetric4, aniDevRouteMetric2=aniDevRouteMetric2, aniDevRouteMetric3=aniDevRouteMetric3, aniDevRouteNextHop=aniDevRouteNextHop, aniDevRouteAge=aniDevRouteAge, aniDevRouteType=aniDevRouteType, aniDevRouteMask=aniDevRouteMask, aniDevRouteMetric5=aniDevRouteMetric5, aniDevRouteFlag=aniDevRouteFlag)
