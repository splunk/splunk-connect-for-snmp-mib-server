#
# PySNMP MIB module BAS-TRAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAS-TRAPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:18:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
basTrapCmtsCmGwAddress, basTrapIclClass, basTrapCmtsCmIpAddress, basTrapChassis, basTrapIf, basTrapMgmtTwoIpAddress, basTrapCardType, basTrapSubnetType, basTrapMgmtOneIpAddress, basTrapChassisNumber, basTrapSlot, basTrapCmtsCmMacAddress, basTraps, basTrapLPort, basTrapCraftIpAddress = mibBuilder.importSymbols("BAS-MIB", "basTrapCmtsCmGwAddress", "basTrapIclClass", "basTrapCmtsCmIpAddress", "basTrapChassis", "basTrapIf", "basTrapMgmtTwoIpAddress", "basTrapCardType", "basTrapSubnetType", "basTrapMgmtOneIpAddress", "basTrapChassisNumber", "basTrapSlot", "basTrapCmtsCmMacAddress", "basTraps", "basTrapLPort", "basTrapCraftIpAddress")
basTraceLogLevel, basTraceLogNotifyComponentId, basTraceLogNotifyString = mibBuilder.importSymbols("BAS-TRACE-MIB", "basTraceLogLevel", "basTraceLogNotifyComponentId", "basTraceLogNotifyString")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, iso, ObjectIdentity, IpAddress, Bits, MibIdentifier, TimeTicks, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "iso", "ObjectIdentity", "IpAddress", "Bits", "MibIdentifier", "TimeTicks", "ModuleIdentity", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
basTrapsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1))
if mibBuilder.loadTexts: basTrapsMIB.setLastUpdated('9812080000Z')
if mibBuilder.loadTexts: basTrapsMIB.setOrganization('Broadband Access Systems, Inc.')
basCardDown = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 1)).setObjects(("BAS-MIB", "basTrapChassis"), ("BAS-MIB", "basTrapSlot"), ("BAS-MIB", "basTrapIf"), ("BAS-MIB", "basTrapLPort"), ("BAS-MIB", "basTrapCardType"))
if mibBuilder.loadTexts: basCardDown.setStatus('current')
basCardUp = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 2)).setObjects(("BAS-MIB", "basTrapChassis"), ("BAS-MIB", "basTrapSlot"), ("BAS-MIB", "basTrapIf"), ("BAS-MIB", "basTrapLPort"), ("BAS-MIB", "basTrapCardType"))
if mibBuilder.loadTexts: basCardUp.setStatus('current')
basTraceLogTrap = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 3)).setObjects(("BAS-MIB", "basTrapChassis"), ("BAS-MIB", "basTrapSlot"), ("BAS-MIB", "basTrapIf"), ("BAS-MIB", "basTrapLPort"), ("BAS-TRACE-MIB", "basTraceLogNotifyComponentId"), ("BAS-TRACE-MIB", "basTraceLogLevel"), ("BAS-TRACE-MIB", "basTraceLogNotifyString"))
if mibBuilder.loadTexts: basTraceLogTrap.setStatus('current')
basCmtsCmUp = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 4)).setObjects(("IF-MIB", "ifIndex"), ("BAS-MIB", "basTrapCmtsCmMacAddress"), ("BAS-MIB", "basTrapCmtsCmIpAddress"))
if mibBuilder.loadTexts: basCmtsCmUp.setStatus('current')
basCmtsCmDown = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 5)).setObjects(("IF-MIB", "ifIndex"), ("BAS-MIB", "basTrapCmtsCmMacAddress"), ("BAS-MIB", "basTrapCmtsCmIpAddress"))
if mibBuilder.loadTexts: basCmtsCmDown.setStatus('current')
basBcmStateChange = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 6)).setObjects(("BAS-MIB", "basTrapChassis"), ("BAS-MIB", "basTrapSlot"), ("BAS-MIB", "basTrapIf"), ("BAS-MIB", "basTrapLPort"), ("BAS-MIB", "basTrapMgmtOneIpAddress"), ("BAS-MIB", "basTrapMgmtTwoIpAddress"), ("BAS-MIB", "basTrapCraftIpAddress"))
if mibBuilder.loadTexts: basBcmStateChange.setStatus('current')
basIclStateChange = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 7)).setObjects(("IF-MIB", "ifIndex"), ("BAS-MIB", "basTrapIclClass"), ("BAS-MIB", "basTrapChassisNumber"), ("BAS-MIB", "basTrapChassis"), ("BAS-MIB", "basTrapSlot"), ("BAS-MIB", "basTrapIf"), ("BAS-MIB", "basTrapLPort"))
if mibBuilder.loadTexts: basIclStateChange.setStatus('current')
basSoftwareComponentUp = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 8)).setObjects(("BAS-MIB", "basTrapChassis"), ("BAS-MIB", "basTrapSlot"), ("BAS-MIB", "basTrapIf"), ("BAS-MIB", "basTrapLPort"), ("BAS-TRACE-MIB", "basTraceLogNotifyComponentId"))
if mibBuilder.loadTexts: basSoftwareComponentUp.setStatus('current')
basSoftwareComponentDown = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 9)).setObjects(("BAS-MIB", "basTrapChassis"), ("BAS-MIB", "basTrapSlot"), ("BAS-MIB", "basTrapIf"), ("BAS-MIB", "basTrapLPort"), ("BAS-TRACE-MIB", "basTraceLogNotifyComponentId"))
if mibBuilder.loadTexts: basSoftwareComponentDown.setStatus('current')
basCmtsCmAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 10)).setObjects(("BAS-MIB", "basTrapCmtsCmMacAddress"), ("BAS-MIB", "basTrapCmtsCmGwAddress"))
if mibBuilder.loadTexts: basCmtsCmAuthFailure.setStatus('current')
basDhcpRelayNotConfigured = NotificationType((1, 3, 6, 1, 4, 1, 3493, 3, 2, 1, 11)).setObjects(("BAS-MIB", "basTrapChassis"), ("BAS-MIB", "basTrapSlot"), ("BAS-MIB", "basTrapIf"), ("BAS-MIB", "basTrapLPort"), ("BAS-MIB", "basTrapSubnetType"))
if mibBuilder.loadTexts: basDhcpRelayNotConfigured.setStatus('current')
mibBuilder.exportSymbols("BAS-TRAPS-MIB", basDhcpRelayNotConfigured=basDhcpRelayNotConfigured, basCmtsCmUp=basCmtsCmUp, basSoftwareComponentUp=basSoftwareComponentUp, PYSNMP_MODULE_ID=basTrapsMIB, basSoftwareComponentDown=basSoftwareComponentDown, basTrapsMIB=basTrapsMIB, basTraceLogTrap=basTraceLogTrap, basCardUp=basCardUp, basCardDown=basCardDown, basCmtsCmDown=basCmtsCmDown, basIclStateChange=basIclStateChange, basCmtsCmAuthFailure=basCmtsCmAuthFailure, basBcmStateChange=basBcmStateChange)
