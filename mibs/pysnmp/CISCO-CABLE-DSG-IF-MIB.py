#
# PySNMP MIB module CISCO-CABLE-DSG-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CABLE-DSG-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Bits, Gauge32, Counter64, IpAddress, Unsigned32, iso, Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "Gauge32", "Counter64", "IpAddress", "Unsigned32", "iso", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "NotificationType", "Integer32")
DisplayString, MacAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention", "RowStatus")
ciscoCableDsgIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 999))
ciscoCableDsgIfMIB.setRevisions(('2004-03-29 00:00',))
if mibBuilder.loadTexts: ciscoCableDsgIfMIB.setLastUpdated('200403290000Z')
if mibBuilder.loadTexts: ciscoCableDsgIfMIB.setOrganization('Cisco Systems, Inc.')
ccdsgIfCaVendor = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 1))
ccdsgIfTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 2))
ccdsgIfDownstream = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 3))
ccdsgIfCaVendorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 1), )
if mibBuilder.loadTexts: ccdsgIfCaVendorTable.setStatus('current')
ccdsgIfCaVendorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 1, 1), ).setIndexNames((0, "CISCO-CABLE-DSG-IF-MIB", "ccdsgIfCaVendorIndex"))
if mibBuilder.loadTexts: ccdsgIfCaVendorEntry.setStatus('current')
ccdsgIfCaVendorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ccdsgIfCaVendorIndex.setStatus('current')
ccdsgIfCaVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfCaVendorName.setStatus('current')
ccdsgIfCaVendorTunnelCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccdsgIfCaVendorTunnelCnt.setStatus('current')
ccdsgIfCaVendorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfCaVendorRowStatus.setStatus('current')
ccdsgIfTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1), )
if mibBuilder.loadTexts: ccdsgIfTunnelTable.setStatus('current')
ccdsgIfTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1, 1), ).setIndexNames((0, "CISCO-CABLE-DSG-IF-MIB", "ccdsgIfTunnelIndex"))
if mibBuilder.loadTexts: ccdsgIfTunnelEntry.setStatus('current')
ccdsgIfTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ccdsgIfTunnelIndex.setStatus('current')
ccdsgIfTunnelInAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfTunnelInAddressType.setStatus('current')
ccdsgIfTunnelInIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfTunnelInIpAddress.setStatus('current')
ccdsgIfTunnelMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfTunnelMacAddress.setStatus('current')
ccdsgIfTunnelCaVendorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfTunnelCaVendorIndex.setStatus('current')
ccdsgIfTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfTunnelRowStatus.setStatus('current')
ccdsgIfDownstreamTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999, 3, 1), )
if mibBuilder.loadTexts: ccdsgIfDownstreamTable.setStatus('current')
ccdsgIfDownstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999, 3, 1, 1), ).setIndexNames((0, "CISCO-CABLE-DSG-IF-MIB", "ccdsgIfDownDsgIndex"))
if mibBuilder.loadTexts: ccdsgIfDownstreamEntry.setStatus('current')
ccdsgIfDownDsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ccdsgIfDownDsgIndex.setStatus('current')
ccdsgIfDownTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfDownTunnelIndex.setStatus('current')
ccdsgIfDownIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 3, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfDownIfIndex.setStatus('current')
ccdsgIfDownRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999, 3, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccdsgIfDownRowStatus.setStatus('current')
ciscoCableDsgIfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 4))
ciscoCableDsgIfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 4, 1))
ciscoCableDsgIfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999, 4, 2))
ccdsgIfBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 999, 4, 1, 1)).setObjects(("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfCaVendorGroup"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfTunnelGroup"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfDownstreamGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccdsgIfBasicCompliance = ccdsgIfBasicCompliance.setStatus('current')
ccdsgIfCaVendorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999, 4, 2, 1)).setObjects(("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfCaVendorName"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfCaVendorTunnelCnt"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfCaVendorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccdsgIfCaVendorGroup = ccdsgIfCaVendorGroup.setStatus('current')
ccdsgIfTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999, 4, 2, 2)).setObjects(("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfTunnelInAddressType"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfTunnelInIpAddress"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfTunnelMacAddress"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfTunnelCaVendorIndex"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfTunnelRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccdsgIfTunnelGroup = ccdsgIfTunnelGroup.setStatus('current')
ccdsgIfDownstreamGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999, 4, 2, 3)).setObjects(("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfDownTunnelIndex"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfDownIfIndex"), ("CISCO-CABLE-DSG-IF-MIB", "ccdsgIfDownRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccdsgIfDownstreamGroup = ccdsgIfDownstreamGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CABLE-DSG-IF-MIB", ciscoCableDsgIfConformance=ciscoCableDsgIfConformance, ccdsgIfTunnelMacAddress=ccdsgIfTunnelMacAddress, ccdsgIfCaVendorGroup=ccdsgIfCaVendorGroup, ccdsgIfCaVendorTunnelCnt=ccdsgIfCaVendorTunnelCnt, ccdsgIfTunnelCaVendorIndex=ccdsgIfTunnelCaVendorIndex, ccdsgIfTunnelGroup=ccdsgIfTunnelGroup, ccdsgIfTunnelTable=ccdsgIfTunnelTable, PYSNMP_MODULE_ID=ciscoCableDsgIfMIB, ccdsgIfDownstreamTable=ccdsgIfDownstreamTable, ccdsgIfCaVendorRowStatus=ccdsgIfCaVendorRowStatus, ccdsgIfTunnel=ccdsgIfTunnel, ccdsgIfCaVendorEntry=ccdsgIfCaVendorEntry, ccdsgIfDownRowStatus=ccdsgIfDownRowStatus, ccdsgIfTunnelInAddressType=ccdsgIfTunnelInAddressType, ccdsgIfTunnelRowStatus=ccdsgIfTunnelRowStatus, ccdsgIfDownIfIndex=ccdsgIfDownIfIndex, ccdsgIfDownstreamEntry=ccdsgIfDownstreamEntry, ccdsgIfTunnelInIpAddress=ccdsgIfTunnelInIpAddress, ccdsgIfCaVendorIndex=ccdsgIfCaVendorIndex, ccdsgIfCaVendorTable=ccdsgIfCaVendorTable, ccdsgIfDownstreamGroup=ccdsgIfDownstreamGroup, ccdsgIfCaVendorName=ccdsgIfCaVendorName, ccdsgIfTunnelEntry=ccdsgIfTunnelEntry, ccdsgIfBasicCompliance=ccdsgIfBasicCompliance, ccdsgIfTunnelIndex=ccdsgIfTunnelIndex, ciscoCableDsgIfGroups=ciscoCableDsgIfGroups, ccdsgIfDownTunnelIndex=ccdsgIfDownTunnelIndex, ccdsgIfDownstream=ccdsgIfDownstream, ciscoCableDsgIfMIB=ciscoCableDsgIfMIB, ccdsgIfCaVendor=ccdsgIfCaVendor, ciscoCableDsgIfCompliances=ciscoCableDsgIfCompliances, ccdsgIfDownDsgIndex=ccdsgIfDownDsgIndex)
