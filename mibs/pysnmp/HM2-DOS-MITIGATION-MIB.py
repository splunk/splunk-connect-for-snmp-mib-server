#
# PySNMP MIB module HM2-DOS-MITIGATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-DOS-MITIGATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:18:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
HmEnabledStatus, hm2ConfigurationMibs = mibBuilder.importSymbols("HM2-TC-MIB", "HmEnabledStatus", "hm2ConfigurationMibs")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, IpAddress, Unsigned32, ModuleIdentity, Counter32, Counter64, MibIdentifier, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "Unsigned32", "ModuleIdentity", "Counter32", "Counter64", "MibIdentifier", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "NotificationType", "ObjectIdentity")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hm2DosMitigationMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 11, 82))
hm2DosMitigationMib.setRevisions(('2012-09-18 00:00', '2012-08-20 00:00', '2012-06-06 00:00', '2012-03-19 00:00',))
if mibBuilder.loadTexts: hm2DosMitigationMib.setLastUpdated('201209180000Z')
if mibBuilder.loadTexts: hm2DosMitigationMib.setOrganization('Hirschmann Automation and Control GmbH')
class DosFeatureValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("hw", 1), ("sw", 2), ("noSup", 3))

hm2DosMitigationNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 0))
hm2DosMitigationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1))
hm2DosMitigationConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 2))
hm2DosMitigationGeneralSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1))
hm2DosMitigationTcpHdrChecks = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1))
hm2DosMitigationTcpNullScan = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationTcpNullScan.setStatus('current')
hm2DosMitigationTcpXmasScan = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 4), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationTcpXmasScan.setStatus('current')
hm2DosMitigationTcpSynFinScan = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 7), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationTcpSynFinScan.setStatus('current')
hm2DosMitigationTcpMinimalHeader = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 10), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationTcpMinimalHeader.setStatus('current')
hm2DosMitigationTcpMinimalHeaderSize = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 255)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationTcpMinimalHeaderSize.setStatus('current')
hm2DosMitigationLandAttack = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 13), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationLandAttack.setStatus('current')
hm2DosMitigationTcpOffsetEqu1 = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 14), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationTcpOffsetEqu1.setStatus('current')
hm2DosMitigationTcpPrivilegedSrcPort = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 15), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationTcpPrivilegedSrcPort.setStatus('current')
hm2DosMitigationTcpSrcDstPortEqu = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 1, 16), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationTcpSrcDstPortEqu.setStatus('current')
hm2DosMitigationIcmpChecks = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 2))
hm2DosMitigationIcmpFrags = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 2, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationIcmpFrags.setStatus('current')
hm2DosMitigationIcmpPacketSize = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1472)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationIcmpPacketSize.setStatus('current')
hm2DosMitigationIcmpPacketSizeMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 2, 5), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationIcmpPacketSizeMode.setStatus('current')
hm2DosMitigationIcmpSmurfAttack = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 2, 6), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationIcmpSmurfAttack.setStatus('current')
hm2DosMitigationL2Checks = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 3))
hm2DosMitigationSMacDMac = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 3, 7), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2DosMitigationSMacDMac.setStatus('current')
hm2DosMitigationCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 0))
hm2DosMitigationTcpHdrChecksSup = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 0, 1), DosFeatureValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2DosMitigationTcpHdrChecksSup.setStatus('current')
hm2DosMitigationIcmpChecksSup = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 0, 2), DosFeatureValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2DosMitigationIcmpChecksSup.setStatus('current')
hm2DosMitigationTcpSynLimitSup = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 0, 3), DosFeatureValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2DosMitigationTcpSynLimitSup.setStatus('current')
hm2DosMitigationArpLimitSup = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 0, 4), DosFeatureValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2DosMitigationArpLimitSup.setStatus('current')
hm2DosMitigationTcpNullScanSup = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 0, 5), DosFeatureValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2DosMitigationTcpNullScanSup.setStatus('current')
hm2DosMitigationTcpXmasSup = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 0, 6), DosFeatureValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2DosMitigationTcpXmasSup.setStatus('current')
hm2DosMitigationTcpLandSup = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 1, 0, 7), DosFeatureValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2DosMitigationTcpLandSup.setStatus('current')
hm2DosMitigationLimiter = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2))
hm2DosMitigationLimiterObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2, 1))
hm2DosMitigationLimiterRules = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2, 2))
hm2DosMitigationLimiterRuleTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2, 2, 1), )
if mibBuilder.loadTexts: hm2DosMitigationLimiterRuleTable.setStatus('current')
hm2DosMitigationLimiterRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2, 2, 1, 1), ).setIndexNames((0, "HM2-DOS-MITIGATION-MIB", "hm2DosMitigationLimiterInterface"))
if mibBuilder.loadTexts: hm2DosMitigationLimiterRuleEntry.setStatus('current')
hm2DosMitigationLimiterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2, 2, 1, 1, 1), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hm2DosMitigationLimiterInterface.setStatus('current')
hm2DosMitigationLimiterTcpSynLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2DosMitigationLimiterTcpSynLimit.setStatus('current')
hm2DosMitigationLimiterArpLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2DosMitigationLimiterArpLimit.setStatus('current')
hm2DosMitigationLimiterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 82, 1, 2, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2DosMitigationLimiterRowStatus.setStatus('current')
hm2DosMitigationCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 2, 1))
hm2DosMitigationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 82, 2, 2))
hm2DosMitigationCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 248, 11, 82, 2, 1, 1)).setObjects(("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationGeneralGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hm2DosMitigationCompliance = hm2DosMitigationCompliance.setStatus('current')
hm2DosMitigationGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 248, 11, 82, 2, 2, 1)).setObjects(("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpSynFinScan"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpNullScan"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpXmasScan"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpMinimalHeader"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpMinimalHeaderSize"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationLandAttack"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpOffsetEqu1"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpPrivilegedSrcPort"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpSrcDstPortEqu"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationIcmpFrags"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationIcmpPacketSize"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationIcmpPacketSizeMode"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationSMacDMac"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpHdrChecksSup"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationIcmpChecksSup"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpSynLimitSup"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationArpLimitSup"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationLimiterInterface"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationLimiterTcpSynLimit"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationLimiterArpLimit"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationLimiterRowStatus"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpXmasSup"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpNullScanSup"), ("HM2-DOS-MITIGATION-MIB", "hm2DosMitigationTcpLandSup"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hm2DosMitigationGeneralGroup = hm2DosMitigationGeneralGroup.setStatus('current')
mibBuilder.exportSymbols("HM2-DOS-MITIGATION-MIB", hm2DosMitigationLimiterInterface=hm2DosMitigationLimiterInterface, hm2DosMitigationLimiterArpLimit=hm2DosMitigationLimiterArpLimit, hm2DosMitigationTcpHdrChecks=hm2DosMitigationTcpHdrChecks, hm2DosMitigationIcmpPacketSizeMode=hm2DosMitigationIcmpPacketSizeMode, hm2DosMitigationSMacDMac=hm2DosMitigationSMacDMac, hm2DosMitigationLimiterTcpSynLimit=hm2DosMitigationLimiterTcpSynLimit, hm2DosMitigationIcmpFrags=hm2DosMitigationIcmpFrags, hm2DosMitigationLimiterRowStatus=hm2DosMitigationLimiterRowStatus, hm2DosMitigationCompliance=hm2DosMitigationCompliance, hm2DosMitigationLimiterRuleEntry=hm2DosMitigationLimiterRuleEntry, hm2DosMitigationLandAttack=hm2DosMitigationLandAttack, hm2DosMitigationTcpXmasScan=hm2DosMitigationTcpXmasScan, hm2DosMitigationTcpNullScanSup=hm2DosMitigationTcpNullScanSup, hm2DosMitigationLimiter=hm2DosMitigationLimiter, hm2DosMitigationTcpSynLimitSup=hm2DosMitigationTcpSynLimitSup, hm2DosMitigationGeneralGroup=hm2DosMitigationGeneralGroup, hm2DosMitigationTcpLandSup=hm2DosMitigationTcpLandSup, hm2DosMitigationObjects=hm2DosMitigationObjects, hm2DosMitigationLimiterRuleTable=hm2DosMitigationLimiterRuleTable, hm2DosMitigationCapabilities=hm2DosMitigationCapabilities, hm2DosMitigationTcpSynFinScan=hm2DosMitigationTcpSynFinScan, hm2DosMitigationTcpHdrChecksSup=hm2DosMitigationTcpHdrChecksSup, hm2DosMitigationGeneralSettings=hm2DosMitigationGeneralSettings, hm2DosMitigationNotifications=hm2DosMitigationNotifications, hm2DosMitigationIcmpSmurfAttack=hm2DosMitigationIcmpSmurfAttack, hm2DosMitigationTcpMinimalHeaderSize=hm2DosMitigationTcpMinimalHeaderSize, hm2DosMitigationConformance=hm2DosMitigationConformance, hm2DosMitigationTcpXmasSup=hm2DosMitigationTcpXmasSup, hm2DosMitigationLimiterRules=hm2DosMitigationLimiterRules, hm2DosMitigationCompliances=hm2DosMitigationCompliances, hm2DosMitigationTcpMinimalHeader=hm2DosMitigationTcpMinimalHeader, hm2DosMitigationTcpNullScan=hm2DosMitigationTcpNullScan, DosFeatureValue=DosFeatureValue, hm2DosMitigationL2Checks=hm2DosMitigationL2Checks, hm2DosMitigationTcpOffsetEqu1=hm2DosMitigationTcpOffsetEqu1, hm2DosMitigationTcpSrcDstPortEqu=hm2DosMitigationTcpSrcDstPortEqu, hm2DosMitigationGroups=hm2DosMitigationGroups, hm2DosMitigationLimiterObjects=hm2DosMitigationLimiterObjects, hm2DosMitigationArpLimitSup=hm2DosMitigationArpLimitSup, hm2DosMitigationTcpPrivilegedSrcPort=hm2DosMitigationTcpPrivilegedSrcPort, hm2DosMitigationIcmpChecksSup=hm2DosMitigationIcmpChecksSup, hm2DosMitigationMib=hm2DosMitigationMib, hm2DosMitigationIcmpChecks=hm2DosMitigationIcmpChecks, hm2DosMitigationIcmpPacketSize=hm2DosMitigationIcmpPacketSize, PYSNMP_MODULE_ID=hm2DosMitigationMib)
