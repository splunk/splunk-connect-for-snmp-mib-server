#
# PySNMP MIB module CISCO-IETF-BFD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-BFD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:42:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetPortNumber, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, MibIdentifier, Counter64, iso, NotificationType, TimeTicks, Counter32, Integer32, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "Counter64", "iso", "NotificationType", "TimeTicks", "Counter32", "Integer32", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "ModuleIdentity")
TruthValue, StorageType, TimeStamp, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "StorageType", "TimeStamp", "RowStatus", "DisplayString", "TextualConvention")
ciscoIetfBfdMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 137))
ciscoIetfBfdMIB.setRevisions(('2011-03-14 00:00', '2010-02-18 00:00', '2008-04-24 00:00', '2007-06-04 00:00',))
if mibBuilder.loadTexts: ciscoIetfBfdMIB.setLastUpdated('201104160000Z')
if mibBuilder.loadTexts: ciscoIetfBfdMIB.setOrganization('IETF')
ciscoBfdNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 137, 0))
ciscoBfdObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 137, 1))
ciscoBfdConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 137, 3))
ciscoBfdScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 1))
class CiscoBfdSessIndexTC(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class CiscoBfdInterval(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class CiscoBfdDiag(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("noDiagnostic", 0), ("controlDetectionTimeExpired", 1), ("echoFunctionFailed", 2), ("neighborSignaledSessionDown", 3), ("forwardingPlaneReset", 4), ("pathDown", 5), ("concatenatedPathDown", 6), ("administrativelyDown", 7), ("reverseConcatenatedPathDown", 8))

ciscoBfdAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoBfdAdminStatus.setStatus('current')
ciscoBfdVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdVersionNumber.setStatus('current')
ciscoBfdSessTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2), )
if mibBuilder.loadTexts: ciscoBfdSessTable.setStatus('current')
ciscoBfdSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1), ).setIndexNames((0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessIndex"))
if mibBuilder.loadTexts: ciscoBfdSessEntry.setStatus('current')
ciscoBfdSessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 1), CiscoBfdSessIndexTC())
if mibBuilder.loadTexts: ciscoBfdSessIndex.setStatus('current')
ciscoBfdSessApplicationId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessApplicationId.setStatus('current')
ciscoBfdSessDiscriminator = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessDiscriminator.setStatus('current')
ciscoBfdSessRemoteDiscr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessRemoteDiscr.setStatus('current')
ciscoBfdSessUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 5), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessUdpPort.setStatus('current')
ciscoBfdSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("adminDown", 1), ("down", 2), ("init", 3), ("up", 4), ("failing", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessState.setStatus('current')
ciscoBfdSessRemoteHeardFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessRemoteHeardFlag.setStatus('current')
ciscoBfdSessDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 8), CiscoBfdDiag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessDiag.setStatus('current')
ciscoBfdSessOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("asyncModeWEchoFun", 1), ("asynchModeWOEchoFun", 2), ("demandModeWEchoFunction", 3), ("demandModeWOEchoFunction", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessOperMode.setStatus('current')
ciscoBfdSessDemandModeDesiredFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessDemandModeDesiredFlag.setStatus('current')
ciscoBfdSessEchoFuncModeDesiredFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessEchoFuncModeDesiredFlag.setStatus('current')
ciscoBfdSessControlPlanIndepFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessControlPlanIndepFlag.setStatus('current')
ciscoBfdSessAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 13), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessAddrType.setStatus('current')
ciscoBfdSessAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 14), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessAddr.setStatus('current')
ciscoBfdSessDesiredMinTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 15), CiscoBfdInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessDesiredMinTxInterval.setStatus('current')
ciscoBfdSessReqMinRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 16), CiscoBfdInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessReqMinRxInterval.setStatus('current')
ciscoBfdSessReqMinEchoRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 17), CiscoBfdInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessReqMinEchoRxInterval.setStatus('current')
ciscoBfdSessDetectMult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 18), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessDetectMult.setStatus('current')
ciscoBfdSessStorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 19), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessStorType.setStatus('current')
ciscoBfdSessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessRowStatus.setStatus('current')
ciscoBfdSessAuthPresFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessAuthPresFlag.setStatus('current')
ciscoBfdSessAuthenticationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("simplePassword", 1), ("keyedMD5", 2), ("meticulousKeyedMD5", 3), ("keyedSHA1", 4), ("meticulousKeyedSHA1", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoBfdSessAuthenticationType.setStatus('current')
ciscoBfdSessVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessVersionNumber.setStatus('current')
ciscoBfdSessType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleHop", 1), ("multiHop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessType.setStatus('current')
ciscoBfdSessInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 2, 1, 25), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessInterface.setStatus('current')
ciscoBfdSessPerfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3), )
if mibBuilder.loadTexts: ciscoBfdSessPerfTable.setStatus('current')
ciscoBfdSessPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1), )
ciscoBfdSessEntry.registerAugmentions(("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfEntry"))
ciscoBfdSessPerfEntry.setIndexNames(*ciscoBfdSessEntry.getIndexNames())
if mibBuilder.loadTexts: ciscoBfdSessPerfEntry.setStatus('current')
ciscoBfdSessPerfPktIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessPerfPktIn.setStatus('current')
ciscoBfdSessPerfPktOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessPerfPktOut.setStatus('current')
ciscoBfdSessUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessUpTime.setStatus('current')
ciscoBfdSessPerfLastSessDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessPerfLastSessDownTime.setStatus('current')
ciscoBfdSessPerfLastCommLostDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 5), CiscoBfdDiag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessPerfLastCommLostDiag.setStatus('current')
ciscoBfdSessPerfSessUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessPerfSessUpCount.setStatus('current')
ciscoBfdSessPerfDiscTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessPerfDiscTime.setStatus('current')
ciscoBfdSessPerfPktInHC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessPerfPktInHC.setStatus('current')
ciscoBfdSessPerfPktOutHC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessPerfPktOutHC.setStatus('current')
ciscoBfdSessMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 4), )
if mibBuilder.loadTexts: ciscoBfdSessMapTable.setStatus('current')
ciscoBfdSessMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 4, 1), ).setIndexNames((0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessApplicationId"), (0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessDiscriminator"), (0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessAddrType"), (0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessAddr"))
if mibBuilder.loadTexts: ciscoBfdSessMapEntry.setStatus('current')
ciscoBfdSessMapBfdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 4, 1, 1), CiscoBfdSessIndexTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessMapBfdIndex.setStatus('current')
ciscoBfdSessDiscMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 5), )
if mibBuilder.loadTexts: ciscoBfdSessDiscMapTable.setStatus('current')
ciscoBfdSessDiscMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 5, 1), ).setIndexNames((0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessDiscriminator"))
if mibBuilder.loadTexts: ciscoBfdSessDiscMapEntry.setStatus('current')
ciscoBfdSessDiscMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 5, 1, 1), CiscoBfdSessIndexTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessDiscMapIndex.setStatus('current')
ciscoBfdSessIpMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 6), )
if mibBuilder.loadTexts: ciscoBfdSessIpMapTable.setStatus('current')
ciscoBfdSessIpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 6, 1), ).setIndexNames((0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessInterface"), (0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessAddrType"), (0, "CISCO-IETF-BFD-MIB", "ciscoBfdSessAddr"))
if mibBuilder.loadTexts: ciscoBfdSessIpMapEntry.setStatus('current')
ciscoBfdSessIpMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 6, 1, 1), CiscoBfdSessIndexTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoBfdSessIpMapIndex.setStatus('current')
ciscoBfdSessNotificationsEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 137, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoBfdSessNotificationsEnable.setStatus('current')
ciscoBfdSessUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 137, 0, 1)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiag"))
if mibBuilder.loadTexts: ciscoBfdSessUp.setStatus('current')
ciscoBfdSessDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 137, 0, 2)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiag"))
if mibBuilder.loadTexts: ciscoBfdSessDown.setStatus('current')
ciscoBfdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 1))
ciscoBfdCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 2))
ciscoBfdModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 2, 1)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessionGroup"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessionPerfGroup"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessionPerfHCGroup"), ("CISCO-IETF-BFD-MIB", "ciscoBfdNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdModuleFullCompliance = ciscoBfdModuleFullCompliance.setStatus('deprecated')
ciscoBfdModuleFullComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 2, 2)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSession0304Group"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessionPerfGroup"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessionPerfHCGroup"), ("CISCO-IETF-BFD-MIB", "ciscoBfdNotificationGroup"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSession03Group"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSession04Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdModuleFullComplianceRev2 = ciscoBfdModuleFullComplianceRev2.setStatus('current')
ciscoBfdSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 1, 1)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessNotificationsEnable"), ("CISCO-IETF-BFD-MIB", "ciscoBfdAdminStatus"), ("CISCO-IETF-BFD-MIB", "ciscoBfdVersionNumber"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessApplicationId"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiscriminator"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessAddrType"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessAddr"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessRemoteDiscr"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessUdpPort"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessState"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessRemoteHeardFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessOperMode"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDemandModeDesiredFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessEchoFuncModeDesiredFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessControlPlanIndepFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDesiredMinTxInterval"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessReqMinRxInterval"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessReqMinEchoRxInterval"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDetectMult"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessStorType"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessRowStatus"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessMapBfdIndex"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessAuthPresFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessAuthenticationType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdSessionGroup = ciscoBfdSessionGroup.setStatus('deprecated')
ciscoBfdSessionPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 1, 2)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfPktIn"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfPktOut"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessUpTime"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfLastSessDownTime"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfLastCommLostDiag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfSessUpCount"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfDiscTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdSessionPerfGroup = ciscoBfdSessionPerfGroup.setStatus('current')
ciscoBfdSessionPerfHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 1, 3)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfPktInHC"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessPerfPktOutHC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdSessionPerfHCGroup = ciscoBfdSessionPerfHCGroup.setStatus('current')
ciscoBfdNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 1, 4)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessUp"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdNotificationGroup = ciscoBfdNotificationGroup.setStatus('current')
ciscoBfdSession0304Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 1, 5)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessNotificationsEnable"), ("CISCO-IETF-BFD-MIB", "ciscoBfdAdminStatus"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiscriminator"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessAddrType"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessAddr"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessRemoteDiscr"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessUdpPort"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessState"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessRemoteHeardFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessOperMode"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDemandModeDesiredFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessEchoFuncModeDesiredFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessControlPlanIndepFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDesiredMinTxInterval"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessReqMinRxInterval"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessReqMinEchoRxInterval"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDetectMult"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessStorType"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessRowStatus"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessAuthPresFlag"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessAuthenticationType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdSession0304Group = ciscoBfdSession0304Group.setStatus('current')
ciscoBfdSession03Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 1, 6)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdVersionNumber"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessApplicationId"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessMapBfdIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdSession03Group = ciscoBfdSession03Group.setStatus('current')
ciscoBfdSession04Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 137, 3, 1, 7)).setObjects(("CISCO-IETF-BFD-MIB", "ciscoBfdSessVersionNumber"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessType"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessInterface"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessDiscMapIndex"), ("CISCO-IETF-BFD-MIB", "ciscoBfdSessIpMapIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBfdSession04Group = ciscoBfdSession04Group.setStatus('current')
mibBuilder.exportSymbols("CISCO-IETF-BFD-MIB", ciscoIetfBfdMIB=ciscoIetfBfdMIB, ciscoBfdSessAuthenticationType=ciscoBfdSessAuthenticationType, ciscoBfdSessDiscMapIndex=ciscoBfdSessDiscMapIndex, ciscoBfdSessEchoFuncModeDesiredFlag=ciscoBfdSessEchoFuncModeDesiredFlag, ciscoBfdSessUdpPort=ciscoBfdSessUdpPort, CiscoBfdInterval=CiscoBfdInterval, ciscoBfdSessState=ciscoBfdSessState, ciscoBfdSessRemoteDiscr=ciscoBfdSessRemoteDiscr, ciscoBfdSessMapBfdIndex=ciscoBfdSessMapBfdIndex, CiscoBfdSessIndexTC=CiscoBfdSessIndexTC, ciscoBfdSessTable=ciscoBfdSessTable, ciscoBfdScalarObjects=ciscoBfdScalarObjects, ciscoBfdSession04Group=ciscoBfdSession04Group, ciscoBfdSessIndex=ciscoBfdSessIndex, ciscoBfdConformance=ciscoBfdConformance, ciscoBfdAdminStatus=ciscoBfdAdminStatus, ciscoBfdSessDiscMapTable=ciscoBfdSessDiscMapTable, ciscoBfdSessIpMapEntry=ciscoBfdSessIpMapEntry, ciscoBfdSessIpMapTable=ciscoBfdSessIpMapTable, ciscoBfdSessReqMinEchoRxInterval=ciscoBfdSessReqMinEchoRxInterval, ciscoBfdSessApplicationId=ciscoBfdSessApplicationId, ciscoBfdSessionGroup=ciscoBfdSessionGroup, ciscoBfdSessMapEntry=ciscoBfdSessMapEntry, ciscoBfdSessDiscriminator=ciscoBfdSessDiscriminator, ciscoBfdGroups=ciscoBfdGroups, ciscoBfdModuleFullComplianceRev2=ciscoBfdModuleFullComplianceRev2, ciscoBfdSessVersionNumber=ciscoBfdSessVersionNumber, ciscoBfdObjects=ciscoBfdObjects, ciscoBfdSessPerfDiscTime=ciscoBfdSessPerfDiscTime, ciscoBfdVersionNumber=ciscoBfdVersionNumber, ciscoBfdSessDemandModeDesiredFlag=ciscoBfdSessDemandModeDesiredFlag, ciscoBfdSessIpMapIndex=ciscoBfdSessIpMapIndex, ciscoBfdSessAddrType=ciscoBfdSessAddrType, ciscoBfdNotifications=ciscoBfdNotifications, ciscoBfdSessType=ciscoBfdSessType, ciscoBfdSessPerfEntry=ciscoBfdSessPerfEntry, CiscoBfdDiag=CiscoBfdDiag, ciscoBfdSessPerfLastSessDownTime=ciscoBfdSessPerfLastSessDownTime, ciscoBfdSessPerfLastCommLostDiag=ciscoBfdSessPerfLastCommLostDiag, ciscoBfdSessDiscMapEntry=ciscoBfdSessDiscMapEntry, ciscoBfdCompliances=ciscoBfdCompliances, ciscoBfdModuleFullCompliance=ciscoBfdModuleFullCompliance, ciscoBfdSessDetectMult=ciscoBfdSessDetectMult, ciscoBfdSessOperMode=ciscoBfdSessOperMode, ciscoBfdSessStorType=ciscoBfdSessStorType, ciscoBfdSessDesiredMinTxInterval=ciscoBfdSessDesiredMinTxInterval, ciscoBfdSessPerfSessUpCount=ciscoBfdSessPerfSessUpCount, ciscoBfdSessRowStatus=ciscoBfdSessRowStatus, ciscoBfdSessUp=ciscoBfdSessUp, ciscoBfdSessionPerfHCGroup=ciscoBfdSessionPerfHCGroup, ciscoBfdSessPerfPktInHC=ciscoBfdSessPerfPktInHC, PYSNMP_MODULE_ID=ciscoIetfBfdMIB, ciscoBfdNotificationGroup=ciscoBfdNotificationGroup, ciscoBfdSessPerfPktOut=ciscoBfdSessPerfPktOut, ciscoBfdSessAddr=ciscoBfdSessAddr, ciscoBfdSessReqMinRxInterval=ciscoBfdSessReqMinRxInterval, ciscoBfdSessControlPlanIndepFlag=ciscoBfdSessControlPlanIndepFlag, ciscoBfdSessDiag=ciscoBfdSessDiag, ciscoBfdSessAuthPresFlag=ciscoBfdSessAuthPresFlag, ciscoBfdSessMapTable=ciscoBfdSessMapTable, ciscoBfdSessNotificationsEnable=ciscoBfdSessNotificationsEnable, ciscoBfdSessPerfTable=ciscoBfdSessPerfTable, ciscoBfdSessEntry=ciscoBfdSessEntry, ciscoBfdSessInterface=ciscoBfdSessInterface, ciscoBfdSessPerfPktIn=ciscoBfdSessPerfPktIn, ciscoBfdSessPerfPktOutHC=ciscoBfdSessPerfPktOutHC, ciscoBfdSessionPerfGroup=ciscoBfdSessionPerfGroup, ciscoBfdSessRemoteHeardFlag=ciscoBfdSessRemoteHeardFlag, ciscoBfdSessDown=ciscoBfdSessDown, ciscoBfdSessUpTime=ciscoBfdSessUpTime, ciscoBfdSession0304Group=ciscoBfdSession0304Group, ciscoBfdSession03Group=ciscoBfdSession03Group)
