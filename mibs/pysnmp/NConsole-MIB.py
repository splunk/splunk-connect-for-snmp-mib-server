#
# PySNMP MIB module NConsole-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NConsole-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:08:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, TimeTicks, NotificationType, IpAddress, Counter32, ModuleIdentity, enterprises, Gauge32, ObjectIdentity, Unsigned32, Integer32, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "TimeTicks", "NotificationType", "IpAddress", "Counter32", "ModuleIdentity", "enterprises", "Gauge32", "ObjectIdentity", "Unsigned32", "Integer32", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
avanti = MibIdentifier((1, 3, 6, 1, 4, 1, 1117))
nconsolemib = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1))
serverinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 1))
configinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 2))
memoryinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 3))
moduleinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 4))
netinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 5))
nicstats = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 6))
setparminfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 7))
serverstats = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 8))
servertrends = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 9))
volinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 10))
voltrends = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 11))
driveinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 12))
drivetrends = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 13))
nictrends = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 14))
protocolinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 15))
protocoltrends = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 16))
sftserverinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 17))
sftmemoryinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 18))
sftmoduleinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 19))
sftnetinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 20))
sftsetparminfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 21))
sftservertrends = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 22))
smpinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 23))
smptrends = MibIdentifier((1, 3, 6, 1, 4, 1, 1117, 1, 24))
serverName = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverName.setStatus('mandatory')
serverNwRevInfo = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverNwRevInfo.setStatus('mandatory')
serverNwSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverNwSerialNumber.setStatus('mandatory')
serverTimeLocal = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTimeLocal.setStatus('mandatory')
serverTimeUTC = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTimeUTC.setStatus('mandatory')
serverUpTime = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverUpTime.setStatus('mandatory')
serverCpuUtil = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCpuUtil.setStatus('mandatory')
serverCpuCount = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCpuCount.setStatus('mandatory')
serverCpuSpeed = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCpuSpeed.setStatus('mandatory')
serverCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCacheHits.setStatus('mandatory')
serverCacheLRU = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCacheLRU.setStatus('mandatory')
serverCacheRatio = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCacheRatio.setStatus('mandatory')
serverLicenses = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverLicenses.setStatus('mandatory')
serverConns = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverConns.setStatus('mandatory')
serverUsers = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverUsers.setStatus('mandatory')
serverAllowUnencryptedPwds = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAllowUnencryptedPwds.setStatus('mandatory')
serverDOSPresent = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverDOSPresent.setStatus('mandatory')
serverLoginStatus = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverLoginStatus.setStatus('mandatory')
serverRemoteStatus = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverRemoteStatus.setStatus('mandatory')
serverSecurityRestrictionLevel = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSecurityRestrictionLevel.setStatus('mandatory')
serverNumOfActiveDrives = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverNumOfActiveDrives.setStatus('mandatory')
serverNumOfMountedVols = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverNumOfMountedVols.setStatus('mandatory')
serverStartupFilePath = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverStartupFilePath.setStatus('mandatory')
serverAutoexecFilePath = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAutoexecFilePath.setStatus('mandatory')
configVersion = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configVersion.setStatus('mandatory')
configCycleLength = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configCycleLength.setStatus('mandatory')
configStartTime = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configStartTime.setStatus('mandatory')
configStopTime = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configStopTime.setStatus('mandatory')
configKeyboardStatus = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configKeyboardStatus.setStatus('mandatory')
configKeyboardAutoLock = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configKeyboardAutoLock.setStatus('mandatory')
configScreenSaverTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configScreenSaverTimeout.setStatus('mandatory')
configArchiveStatus = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configArchiveStatus.setStatus('mandatory')
configArchiveMaxDays = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configArchiveMaxDays.setStatus('mandatory')
configDataFileName = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configDataFileName.setStatus('mandatory')
configDataFileFormat = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configDataFileFormat.setStatus('mandatory')
configLogFileName = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configLogFileName.setStatus('mandatory')
configTrendFileName = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configTrendFileName.setStatus('mandatory')
configTrendMaxDays = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configTrendMaxDays.setStatus('mandatory')
memoryTotalRAM = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryTotalRAM.setStatus('mandatory')
memoryServerWorkRAM = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryServerWorkRAM.setStatus('mandatory')
memoryDOS = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryDOS.setStatus('mandatory')
memoryBaseRAM = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryBaseRAM.setStatus('mandatory')
memoryAllocPoolTotal = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryAllocPoolTotal.setStatus('mandatory')
memoryAllocPoolInUse = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryAllocPoolInUse.setStatus('mandatory')
memoryCacheBufferPool = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheBufferPool.setStatus('mandatory')
memoryCacheMovablePool = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheMovablePool.setStatus('mandatory')
memoryCacheNonMovablePool = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheNonMovablePool.setStatus('mandatory')
memoryNw3PermMemoryPoolTotal = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryNw3PermMemoryPoolTotal.setStatus('mandatory')
memoryNw3PermMemoryPoolInUse = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryNw3PermMemoryPoolInUse.setStatus('mandatory')
memoryNw4CodeDataPool = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryNw4CodeDataPool.setStatus('mandatory')
moduleCount = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleCount.setStatus('mandatory')
moduleTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2), )
if mibBuilder.loadTexts: moduleTable.setStatus('mandatory')
moduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1), ).setIndexNames((0, "NConsole-MIB", "moduleIndex"))
if mibBuilder.loadTexts: moduleEntry.setStatus('mandatory')
moduleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleIndex.setStatus('mandatory')
moduleName = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleName.setStatus('mandatory')
moduleDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleDesc.setStatus('mandatory')
moduleCopyright = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleCopyright.setStatus('mandatory')
moduleVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleVersion.setStatus('mandatory')
moduleCompileDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleCompileDate.setStatus('mandatory')
moduleCodeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleCodeSize.setStatus('mandatory')
moduleDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleDataSize.setStatus('mandatory')
moduleSmallMemoryAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleSmallMemoryAlloc.setStatus('mandatory')
moduleMediumMemoryAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleMediumMemoryAlloc.setStatus('mandatory')
moduleLargeMemoryAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleLargeMemoryAlloc.setStatus('mandatory')
moduleActiveProcesses = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleActiveProcesses.setStatus('mandatory')
moduleActiveScreens = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 4, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moduleActiveScreens.setStatus('mandatory')
netCount = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netCount.setStatus('mandatory')
netTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2), )
if mibBuilder.loadTexts: netTable.setStatus('mandatory')
netEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1), ).setIndexNames((0, "NConsole-MIB", "netIndex"))
if mibBuilder.loadTexts: netEntry.setStatus('mandatory')
netIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netIndex.setStatus('mandatory')
netDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netDriverName.setStatus('mandatory')
netDriverDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netDriverDesc.setStatus('mandatory')
netFrameDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netFrameDesc.setStatus('mandatory')
netLogicalName = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netLogicalName.setStatus('mandatory')
netProtocolDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netProtocolDesc.setStatus('mandatory')
netNodeID = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: netNodeID.setStatus('mandatory')
netLineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netLineSpeed.setStatus('mandatory')
netMaxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netMaxPacketSize.setStatus('mandatory')
netMaxRecvSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netMaxRecvSize.setStatus('mandatory')
netMaxProtocolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netMaxProtocolSize.setStatus('mandatory')
netPrimaryIOPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPrimaryIOPort.setStatus('mandatory')
netPrimaryMemoryDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPrimaryMemoryDecode.setStatus('mandatory')
netPrimaryInterrupt = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPrimaryInterrupt.setStatus('mandatory')
netPrimaryDMA = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPrimaryDMA.setStatus('mandatory')
netSecondaryIOPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netSecondaryIOPort.setStatus('mandatory')
netSecondaryMemoryDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netSecondaryMemoryDecode.setStatus('mandatory')
netSecondaryInterrupt = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netSecondaryInterrupt.setStatus('mandatory')
netSecondaryDMA = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netSecondaryDMA.setStatus('mandatory')
netTotalRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netTotalRxPacketCount.setStatus('mandatory')
netPacketRxOverflowCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketRxOverflowCount.setStatus('mandatory')
netPacketRxTooBigCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketRxTooBigCount.setStatus('mandatory')
netPacketRxTooSmallCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketRxTooSmallCount.setStatus('mandatory')
netPacketRxMiscErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketRxMiscErrorCount.setStatus('mandatory')
netChecksumErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netChecksumErrorCount.setStatus('mandatory')
netHardwareRxMismatchCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netHardwareRxMismatchCount.setStatus('mandatory')
netTotalTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netTotalTxPacketCount.setStatus('mandatory')
netNoECBAvailableCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netNoECBAvailableCount.setStatus('mandatory')
netPacketTxTooBigCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketTxTooBigCount.setStatus('mandatory')
netPacketTxTooSmallCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketTxTooSmallCount.setStatus('mandatory')
netPacketTxMiscErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketTxMiscErrorCount.setStatus('mandatory')
netRetryTxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 5, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netRetryTxCount.setStatus('mandatory')
nicCount = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicCount.setStatus('mandatory')
nicTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2), )
if mibBuilder.loadTexts: nicTable.setStatus('mandatory')
nicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1), ).setIndexNames((0, "NConsole-MIB", "nicIndex"))
if mibBuilder.loadTexts: nicEntry.setStatus('mandatory')
nicIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicIndex.setStatus('mandatory')
nicNodeID = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicNodeID.setStatus('mandatory')
nicCurrRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicCurrRxPacketCount.setStatus('mandatory')
nicAvgRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicAvgRxPacketCount.setStatus('mandatory')
nicPeakRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicPeakRxPacketCount.setStatus('mandatory')
nicCumlRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicCumlRxPacketCount.setStatus('mandatory')
nicCurrTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicCurrTxPacketCount.setStatus('mandatory')
nicAvgTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicAvgTxPacketCount.setStatus('mandatory')
nicPeakTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicPeakTxPacketCount.setStatus('mandatory')
nicCumlTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 6, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicCumlTxPacketCount.setStatus('mandatory')
setparmTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1), )
if mibBuilder.loadTexts: setparmTable.setStatus('mandatory')
setparmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1), ).setIndexNames((0, "NConsole-MIB", "setparmIndex"))
if mibBuilder.loadTexts: setparmEntry.setStatus('mandatory')
setparmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setparmIndex.setStatus('mandatory')
setparmName = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setparmName.setStatus('mandatory')
setparmDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 576))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setparmDesc.setStatus('mandatory')
setparmCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setparmCategory.setStatus('mandatory')
setparmFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setparmFlags.setStatus('mandatory')
setparmCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setparmCurrent.setStatus('mandatory')
setparmMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setparmMinimum.setStatus('mandatory')
setparmMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 7, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setparmMaximum.setStatus('mandatory')
serverCycleStartTime = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCycleStartTime.setStatus('mandatory')
serverCycleStartUTC = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCycleStartUTC.setStatus('mandatory')
serverCycleElapsedTicks = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCycleElapsedTicks.setStatus('mandatory')
serverCycleLengthTicks = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCycleLengthTicks.setStatus('mandatory')
serverCurrUtil = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrUtil.setStatus('mandatory')
serverAvgUtil = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgUtil.setStatus('mandatory')
serverPeakUtil = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakUtil.setStatus('mandatory')
serverCurrCacheRatio = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrCacheRatio.setStatus('mandatory')
serverAvgCacheRatio = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgCacheRatio.setStatus('mandatory')
serverMinCacheRatio = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverMinCacheRatio.setStatus('mandatory')
serverCurrCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrCacheHits.setStatus('mandatory')
serverAvgCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgCacheHits.setStatus('mandatory')
serverMinCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverMinCacheHits.setStatus('mandatory')
serverCurrFSPs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrFSPs.setStatus('mandatory')
serverAvgFSPs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgFSPs.setStatus('mandatory')
serverPeakFSPs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakFSPs.setStatus('mandatory')
serverCurrProcs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrProcs.setStatus('mandatory')
serverAvgProcs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgProcs.setStatus('mandatory')
serverPeakProcs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakProcs.setStatus('mandatory')
serverCurrConns = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrConns.setStatus('mandatory')
serverAvgConns = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgConns.setStatus('mandatory')
serverPeakConns = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakConns.setStatus('mandatory')
serverCurrUsers = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrUsers.setStatus('mandatory')
serverAvgUsers = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgUsers.setStatus('mandatory')
serverPeakUsers = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakUsers.setStatus('mandatory')
serverCurrRecvBuffs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrRecvBuffs.setStatus('mandatory')
serverAvgRecvBuffs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgRecvBuffs.setStatus('mandatory')
serverPeakRecvBuffs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakRecvBuffs.setStatus('mandatory')
serverCurrDirBuffs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrDirBuffs.setStatus('mandatory')
serverAvgDirBuffs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgDirBuffs.setStatus('mandatory')
serverPeakDirBuffs = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakDirBuffs.setStatus('mandatory')
serverCurrOpenFiles = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrOpenFiles.setStatus('mandatory')
serverAvgOpenFiles = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgOpenFiles.setStatus('mandatory')
serverPeakOpenFiles = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakOpenFiles.setStatus('mandatory')
serverCurrIOsPending = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrIOsPending.setStatus('mandatory')
serverAvgIOsPending = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgIOsPending.setStatus('mandatory')
serverPeakIOsPending = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakIOsPending.setStatus('mandatory')
serverCumlIOsPending = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlIOsPending.setStatus('mandatory')
serverCurrDirtyBlocks = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrDirtyBlocks.setStatus('mandatory')
serverAvgDirtyBlocks = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgDirtyBlocks.setStatus('mandatory')
serverPeakDirtyBlocks = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakDirtyBlocks.setStatus('mandatory')
serverCumlDirtyBlocks = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlDirtyBlocks.setStatus('mandatory')
serverCurrDiskReads = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrDiskReads.setStatus('mandatory')
serverAvgDiskReads = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgDiskReads.setStatus('mandatory')
serverPeakDiskReads = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakDiskReads.setStatus('mandatory')
serverCumlDiskReads = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlDiskReads.setStatus('mandatory')
serverCurrDiskReadBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrDiskReadBytes.setStatus('mandatory')
serverAvgDiskReadBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgDiskReadBytes.setStatus('mandatory')
serverPeakDiskReadBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakDiskReadBytes.setStatus('mandatory')
serverCumlDiskReadBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlDiskReadBytes.setStatus('mandatory')
serverCurrDiskWrites = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrDiskWrites.setStatus('mandatory')
serverAvgDiskWrites = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgDiskWrites.setStatus('mandatory')
serverPeakDiskWrites = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakDiskWrites.setStatus('mandatory')
serverCumlDiskWrites = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlDiskWrites.setStatus('mandatory')
serverCurrDiskWriteBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrDiskWriteBytes.setStatus('mandatory')
serverAvgDiskWriteBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgDiskWriteBytes.setStatus('mandatory')
serverPeakDiskWriteBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakDiskWriteBytes.setStatus('mandatory')
serverCumlDiskWriteBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlDiskWriteBytes.setStatus('mandatory')
serverCurrRoutedPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrRoutedPkts.setStatus('mandatory')
serverAvgRoutedPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgRoutedPkts.setStatus('mandatory')
serverPeakRoutedPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakRoutedPkts.setStatus('mandatory')
serverCumlRoutedPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlRoutedPkts.setStatus('mandatory')
serverCurrRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrRxPkts.setStatus('mandatory')
serverAvgRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgRxPkts.setStatus('mandatory')
serverPeakRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakRxPkts.setStatus('mandatory')
serverCumlRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlRxPkts.setStatus('mandatory')
serverCurrRxBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrRxBytes.setStatus('mandatory')
serverAvgRxBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgRxBytes.setStatus('mandatory')
serverPeakRxBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakRxBytes.setStatus('mandatory')
serverCumlRxBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlRxBytes.setStatus('mandatory')
serverCurrTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrTxPkts.setStatus('mandatory')
serverAvgTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgTxPkts.setStatus('mandatory')
serverPeakTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakTxPkts.setStatus('mandatory')
serverCumlTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlTxPkts.setStatus('mandatory')
serverCurrTxBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrTxBytes.setStatus('mandatory')
serverAvgTxBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgTxBytes.setStatus('mandatory')
serverPeakTxBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakTxBytes.setStatus('mandatory')
serverCumlTxBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlTxBytes.setStatus('mandatory')
serverCurrDirSearch = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrDirSearch.setStatus('mandatory')
serverAvgDirSearch = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgDirSearch.setStatus('mandatory')
serverPeakDirSearch = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakDirSearch.setStatus('mandatory')
serverCumlDirSearch = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlDirSearch.setStatus('mandatory')
serverCurrFileCreates = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrFileCreates.setStatus('mandatory')
serverAvgFileCreates = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgFileCreates.setStatus('mandatory')
serverPeakFileCreates = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakFileCreates.setStatus('mandatory')
serverCumlFileCreates = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlFileCreates.setStatus('mandatory')
serverCurrFileOpens = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrFileOpens.setStatus('mandatory')
serverAvgFileOpens = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgFileOpens.setStatus('mandatory')
serverPeakFileOpens = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakFileOpens.setStatus('mandatory')
serverCumlFileOpens = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlFileOpens.setStatus('mandatory')
serverCurrFileDeletes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrFileDeletes.setStatus('mandatory')
serverAvgFileDeletes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgFileDeletes.setStatus('mandatory')
serverPeakFileDeletes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakFileDeletes.setStatus('mandatory')
serverCumlFileDeletes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlFileDeletes.setStatus('mandatory')
serverCurrFileReads = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrFileReads.setStatus('mandatory')
serverAvgFileReads = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgFileReads.setStatus('mandatory')
serverPeakFileReads = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakFileReads.setStatus('mandatory')
serverCumlFileReads = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlFileReads.setStatus('mandatory')
serverCurrFileReadBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrFileReadBytes.setStatus('mandatory')
serverAvgFileReadBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgFileReadBytes.setStatus('mandatory')
serverPeakFileReadBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakFileReadBytes.setStatus('mandatory')
serverCumlFileReadBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlFileReadBytes.setStatus('mandatory')
serverCurrFileWrites = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrFileWrites.setStatus('mandatory')
serverAvgFileWrites = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgFileWrites.setStatus('mandatory')
serverPeakFileWrites = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakFileWrites.setStatus('mandatory')
serverCumlFileWrites = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlFileWrites.setStatus('mandatory')
serverCurrFileWriteBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCurrFileWriteBytes.setStatus('mandatory')
serverAvgFileWriteBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverAvgFileWriteBytes.setStatus('mandatory')
serverPeakFileWriteBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPeakFileWriteBytes.setStatus('mandatory')
serverCumlFileWriteBytes = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 8, 110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverCumlFileWriteBytes.setStatus('mandatory')
serverTrendTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1), )
if mibBuilder.loadTexts: serverTrendTable.setStatus('mandatory')
serverTrendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1), ).setIndexNames((0, "NConsole-MIB", "serverTrendIndex"))
if mibBuilder.loadTexts: serverTrendEntry.setStatus('mandatory')
serverTrendIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendIndex.setStatus('mandatory')
serverTrendStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendStartTime.setStatus('mandatory')
serverTrendStartUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendStartUTC.setStatus('mandatory')
serverTrendStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendStopTime.setStatus('mandatory')
serverTrendStopUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendStopUTC.setStatus('mandatory')
serverTrendUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendUpTime.setStatus('mandatory')
serverTrendCacheLRU = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCacheLRU.setStatus('mandatory')
serverTrendAvgUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgUtil.setStatus('mandatory')
serverTrendPeakUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakUtil.setStatus('mandatory')
serverTrendAvgConns = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgConns.setStatus('mandatory')
serverTrendPeakConns = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakConns.setStatus('mandatory')
serverTrendAvgUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgUsers.setStatus('mandatory')
serverTrendPeakUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakUsers.setStatus('mandatory')
serverTrendAvgFSPs = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgFSPs.setStatus('mandatory')
serverTrendPeakFSPs = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakFSPs.setStatus('mandatory')
serverTrendAvgProcs = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgProcs.setStatus('mandatory')
serverTrendPeakProcs = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakProcs.setStatus('mandatory')
serverTrendAvgCacheRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgCacheRatio.setStatus('mandatory')
serverTrendMinCacheRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMinCacheRatio.setStatus('mandatory')
serverTrendAvgCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgCacheHits.setStatus('mandatory')
serverTrendMinCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMinCacheHits.setStatus('mandatory')
serverTrendAvgDirBuffs = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgDirBuffs.setStatus('mandatory')
serverTrendPeakDirBuffs = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakDirBuffs.setStatus('mandatory')
serverTrendAvgRecvBuffs = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgRecvBuffs.setStatus('mandatory')
serverTrendPeakRecvBuffs = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakRecvBuffs.setStatus('mandatory')
serverTrendAvgOpenFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgOpenFiles.setStatus('mandatory')
serverTrendPeakOpenFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakOpenFiles.setStatus('mandatory')
serverTrendAvgIOsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgIOsPending.setStatus('mandatory')
serverTrendPeakIOsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakIOsPending.setStatus('mandatory')
serverTrendCumlIOsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlIOsPending.setStatus('mandatory')
serverTrendAvgDirtyBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgDirtyBlocks.setStatus('mandatory')
serverTrendPeakDirtyBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakDirtyBlocks.setStatus('mandatory')
serverTrendCumlDirtyBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlDirtyBlocks.setStatus('mandatory')
serverTrendAvgDiskReads = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgDiskReads.setStatus('mandatory')
serverTrendPeakDiskReads = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakDiskReads.setStatus('mandatory')
serverTrendCumlDiskReads = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlDiskReads.setStatus('mandatory')
serverTrendAvgDiskReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgDiskReadBytes.setStatus('mandatory')
serverTrendPeakDiskReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakDiskReadBytes.setStatus('mandatory')
serverTrendCumlDiskReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlDiskReadBytes.setStatus('mandatory')
serverTrendAvgDiskWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgDiskWrites.setStatus('mandatory')
serverTrendPeakDiskWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakDiskWrites.setStatus('mandatory')
serverTrendCumlDiskWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlDiskWrites.setStatus('mandatory')
serverTrendAvgDiskWriteBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgDiskWriteBytes.setStatus('mandatory')
serverTrendPeakDiskWriteBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakDiskWriteBytes.setStatus('mandatory')
serverTrendCumlDiskWriteBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlDiskWriteBytes.setStatus('mandatory')
serverTrendAvgRoutedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgRoutedPkts.setStatus('mandatory')
serverTrendPeakRoutedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakRoutedPkts.setStatus('mandatory')
serverTrendCumlRoutedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlRoutedPkts.setStatus('mandatory')
serverTrendAvgRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgRxPkts.setStatus('mandatory')
serverTrendPeakRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakRxPkts.setStatus('mandatory')
serverTrendCumlRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlRxPkts.setStatus('mandatory')
serverTrendAvgRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgRxBytes.setStatus('mandatory')
serverTrendPeakRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakRxBytes.setStatus('mandatory')
serverTrendCumlRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlRxBytes.setStatus('mandatory')
serverTrendAvgTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgTxPkts.setStatus('mandatory')
serverTrendPeakTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakTxPkts.setStatus('mandatory')
serverTrendCumlTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlTxPkts.setStatus('mandatory')
serverTrendAvgTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgTxBytes.setStatus('mandatory')
serverTrendPeakTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakTxBytes.setStatus('mandatory')
serverTrendCumlTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlTxBytes.setStatus('mandatory')
serverTrendAvgDirSearch = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgDirSearch.setStatus('mandatory')
serverTrendPeakDirSearch = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakDirSearch.setStatus('mandatory')
serverTrendCumlDirSearch = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlDirSearch.setStatus('mandatory')
serverTrendAvgFileCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgFileCreates.setStatus('mandatory')
serverTrendPeakFileCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakFileCreates.setStatus('mandatory')
serverTrendCumlFileCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlFileCreates.setStatus('mandatory')
serverTrendAvgFileOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgFileOpens.setStatus('mandatory')
serverTrendPeakFileOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakFileOpens.setStatus('mandatory')
serverTrendCumlFileOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlFileOpens.setStatus('mandatory')
serverTrendAvgFileDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgFileDeletes.setStatus('mandatory')
serverTrendPeakFileDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakFileDeletes.setStatus('mandatory')
serverTrendCumlFileDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlFileDeletes.setStatus('mandatory')
serverTrendAvgFileReads = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgFileReads.setStatus('mandatory')
serverTrendPeakFileReads = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakFileReads.setStatus('mandatory')
serverTrendCumlFileReads = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlFileReads.setStatus('mandatory')
serverTrendAvgFileReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgFileReadBytes.setStatus('mandatory')
serverTrendPeakFileReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakFileReadBytes.setStatus('mandatory')
serverTrendCumlFileReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlFileReadBytes.setStatus('mandatory')
serverTrendAvgFileWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgFileWrites.setStatus('mandatory')
serverTrendPeakFileWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakFileWrites.setStatus('mandatory')
serverTrendCumlFileWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlFileWrites.setStatus('mandatory')
serverTrendAvgFileWriteBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendAvgFileWriteBytes.setStatus('mandatory')
serverTrendPeakFileWriteBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendPeakFileWriteBytes.setStatus('mandatory')
serverTrendCumlFileWriteBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendCumlFileWriteBytes.setStatus('mandatory')
serverTrendMemoryAllocPoolTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMemoryAllocPoolTotal.setStatus('mandatory')
serverTrendMemoryAllocPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMemoryAllocPoolInUse.setStatus('mandatory')
serverTrendMemoryCacheBufferPool = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMemoryCacheBufferPool.setStatus('mandatory')
serverTrendMemoryCacheMovablePool = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMemoryCacheMovablePool.setStatus('mandatory')
serverTrendMemoryCacheNonMovablePool = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMemoryCacheNonMovablePool.setStatus('mandatory')
serverTrendMemoryNw3PermMemoryPoolTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMemoryNw3PermMemoryPoolTotal.setStatus('mandatory')
serverTrendMemoryNw3PermMemoryPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMemoryNw3PermMemoryPoolInUse.setStatus('mandatory')
serverTrendMemoryNw4CodeDataPool = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 9, 1, 1, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverTrendMemoryNw4CodeDataPool.setStatus('mandatory')
volCount = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volCount.setStatus('mandatory')
volTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2), )
if mibBuilder.loadTexts: volTable.setStatus('mandatory')
volEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1), ).setIndexNames((0, "NConsole-MIB", "volIndex"))
if mibBuilder.loadTexts: volEntry.setStatus('mandatory')
volIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volIndex.setStatus('mandatory')
volName = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volName.setStatus('mandatory')
volDriveNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volDriveNumber.setStatus('mandatory')
volBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volBlockSize.setStatus('mandatory')
volDirSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volDirSlots.setStatus('mandatory')
volDirSlotsFree = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volDirSlotsFree.setStatus('mandatory')
volDiskSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volDiskSpace.setStatus('mandatory')
volDiskSpaceFree = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volDiskSpaceFree.setStatus('mandatory')
volDiskSpacePurgable = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volDiskSpacePurgable.setStatus('mandatory')
volDiskSpaceNotYetPurgable = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 10, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volDiskSpaceNotYetPurgable.setStatus('mandatory')
volTrendTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1), )
if mibBuilder.loadTexts: volTrendTable.setStatus('mandatory')
volTrendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1), ).setIndexNames((0, "NConsole-MIB", "volTrendCycleIndex"), (0, "NConsole-MIB", "volTrendVolumeIndex"))
if mibBuilder.loadTexts: volTrendEntry.setStatus('mandatory')
volTrendCycleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendCycleIndex.setStatus('mandatory')
volTrendVolumeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendVolumeIndex.setStatus('mandatory')
volTrendStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendStartTime.setStatus('mandatory')
volTrendStartUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendStartUTC.setStatus('mandatory')
volTrendStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendStopTime.setStatus('mandatory')
volTrendStopUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendStopUTC.setStatus('mandatory')
volTrendName = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendName.setStatus('mandatory')
volTrendDirSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendDirSlots.setStatus('mandatory')
volTrendDirSlotsFree = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendDirSlotsFree.setStatus('mandatory')
volTrendDiskSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendDiskSpace.setStatus('mandatory')
volTrendDiskSpaceFree = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendDiskSpaceFree.setStatus('mandatory')
volTrendDiskSpacePurgable = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendDiskSpacePurgable.setStatus('mandatory')
volTrendDiskSpaceNotYetPurgable = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 11, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volTrendDiskSpaceNotYetPurgable.setStatus('mandatory')
driveCount = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveCount.setStatus('mandatory')
driveTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2), )
if mibBuilder.loadTexts: driveTable.setStatus('mandatory')
driveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1), ).setIndexNames((0, "NConsole-MIB", "driveIndex"))
if mibBuilder.loadTexts: driveEntry.setStatus('mandatory')
driveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveIndex.setStatus('mandatory')
driveDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveDesc.setStatus('mandatory')
driveType = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveType.setStatus('mandatory')
driveControllerCardID = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveControllerCardID.setStatus('mandatory')
driveControllerDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveControllerDeviceID.setStatus('mandatory')
driveControllerDriveID = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveControllerDriveID.setStatus('mandatory')
driveCylinderCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveCylinderCount.setStatus('mandatory')
driveHeadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveHeadCount.setStatus('mandatory')
driveSectorsPerTrack = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveSectorsPerTrack.setStatus('mandatory')
driveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveSize.setStatus('mandatory')
driveNumberOfPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveNumberOfPartitions.setStatus('mandatory')
driveNetWarePartitionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveNetWarePartitionStatus.setStatus('mandatory')
driveNetWarePartitionType = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveNetWarePartitionType.setStatus('mandatory')
driveNetWarePartitionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveNetWarePartitionSize.setStatus('mandatory')
driveMirrorFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveMirrorFlag.setStatus('mandatory')
driveMirrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveMirrorStatus.setStatus('mandatory')
driveRemirrorPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveRemirrorPercentage.setStatus('mandatory')
driveRedirectionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveRedirectionSize.setStatus('mandatory')
driveRedirectedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveRedirectedSize.setStatus('mandatory')
driveRedirectionReservedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 12, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveRedirectionReservedSize.setStatus('mandatory')
driveTrendsTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1), )
if mibBuilder.loadTexts: driveTrendsTable.setStatus('mandatory')
driveTrendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1), ).setIndexNames((0, "NConsole-MIB", "driveTrendCycleIndex"), (0, "NConsole-MIB", "driveTrendDriveIndex"))
if mibBuilder.loadTexts: driveTrendEntry.setStatus('mandatory')
driveTrendCycleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendCycleIndex.setStatus('mandatory')
driveTrendDriveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendDriveIndex.setStatus('mandatory')
driveTrendStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendStartTime.setStatus('mandatory')
driveTrendStartUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendStartUTC.setStatus('mandatory')
driveTrendStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendStopTime.setStatus('mandatory')
driveTrendStopUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendStopUTC.setStatus('mandatory')
driveTrendDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendDesc.setStatus('mandatory')
driveTrendSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendSize.setStatus('mandatory')
driveTrendRedirectionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendRedirectionSize.setStatus('mandatory')
driveTrendRedirectedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendRedirectedSize.setStatus('mandatory')
driveTrendRedirectionReservedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 13, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveTrendRedirectionReservedSize.setStatus('mandatory')
nicTrendsTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1), )
if mibBuilder.loadTexts: nicTrendsTable.setStatus('mandatory')
nicTrendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1), ).setIndexNames((0, "NConsole-MIB", "nicTrendCycleIndex"), (0, "NConsole-MIB", "nicTrendNICIndex"))
if mibBuilder.loadTexts: nicTrendEntry.setStatus('mandatory')
nicTrendCycleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendCycleIndex.setStatus('mandatory')
nicTrendNICIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendNICIndex.setStatus('mandatory')
nicTrendStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendStartTime.setStatus('mandatory')
nicTrendStartUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendStartUTC.setStatus('mandatory')
nicTrendStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendStopTime.setStatus('mandatory')
nicTrendStopUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendStopUTC.setStatus('mandatory')
nicTrendNodeID = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendNodeID.setStatus('mandatory')
nicTrendAvgRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendAvgRxPacketCount.setStatus('mandatory')
nicTrendPeakRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendPeakRxPacketCount.setStatus('mandatory')
nicTrendCumlRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendCumlRxPacketCount.setStatus('mandatory')
nicTrendAvgTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendAvgTxPacketCount.setStatus('mandatory')
nicTrendPeakTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendPeakTxPacketCount.setStatus('mandatory')
nicTrendCumlTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 14, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nicTrendCumlTxPacketCount.setStatus('mandatory')
protocolCount = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolCount.setStatus('mandatory')
protocolTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2), )
if mibBuilder.loadTexts: protocolTable.setStatus('mandatory')
protocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1), ).setIndexNames((0, "NConsole-MIB", "protocolIndex"))
if mibBuilder.loadTexts: protocolEntry.setStatus('mandatory')
protocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolIndex.setStatus('mandatory')
protocolDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDesc.setStatus('mandatory')
protocolCurrRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolCurrRxPacketCount.setStatus('mandatory')
protocolAvgRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolAvgRxPacketCount.setStatus('mandatory')
protocolPeakRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolPeakRxPacketCount.setStatus('mandatory')
protocolCumlRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolCumlRxPacketCount.setStatus('mandatory')
protocolCurrTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolCurrTxPacketCount.setStatus('mandatory')
protocolAvgTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolAvgTxPacketCount.setStatus('mandatory')
protocolPeakTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolPeakTxPacketCount.setStatus('mandatory')
protocolCumlTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 15, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolCumlTxPacketCount.setStatus('mandatory')
protocolTrendsTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1), )
if mibBuilder.loadTexts: protocolTrendsTable.setStatus('mandatory')
protocolTrendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1), ).setIndexNames((0, "NConsole-MIB", "protocolTrendCycleIndex"), (0, "NConsole-MIB", "protocolTrendProtocolIndex"))
if mibBuilder.loadTexts: protocolTrendEntry.setStatus('mandatory')
protocolTrendCycleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendCycleIndex.setStatus('mandatory')
protocolTrendProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendProtocolIndex.setStatus('mandatory')
protocolTrendStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendStartTime.setStatus('mandatory')
protocolTrendStartUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendStartUTC.setStatus('mandatory')
protocolTrendStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendStopTime.setStatus('mandatory')
protocolTrendStopUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendStopUTC.setStatus('mandatory')
protocolTrendDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendDesc.setStatus('mandatory')
protocolTrendAvgRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendAvgRxPacketCount.setStatus('mandatory')
protocolTrendPeakRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendPeakRxPacketCount.setStatus('mandatory')
protocolTrendCumlRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendCumlRxPacketCount.setStatus('mandatory')
protocolTrendAvgTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendAvgTxPacketCount.setStatus('mandatory')
protocolTrendPeakTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendPeakTxPacketCount.setStatus('mandatory')
protocolTrendCumlTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 16, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolTrendCumlTxPacketCount.setStatus('mandatory')
smpCount = MibScalar((1, 3, 6, 1, 4, 1, 1117, 1, 23, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpCount.setStatus('mandatory')
smpTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 23, 2), )
if mibBuilder.loadTexts: smpTable.setStatus('mandatory')
smpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 23, 2, 1), ).setIndexNames((0, "NConsole-MIB", "smpIndex"))
if mibBuilder.loadTexts: smpEntry.setStatus('mandatory')
smpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 23, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpIndex.setStatus('mandatory')
smpCurrUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 23, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpCurrUtil.setStatus('mandatory')
smpAvgUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 23, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpAvgUtil.setStatus('mandatory')
smpPeakUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 23, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpPeakUtil.setStatus('mandatory')
smpTrendTable = MibTable((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1), )
if mibBuilder.loadTexts: smpTrendTable.setStatus('mandatory')
smpTrendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1), ).setIndexNames((0, "NConsole-MIB", "smpTrendCycleIndex"), (0, "NConsole-MIB", "smpTrendProcessorIndex"))
if mibBuilder.loadTexts: smpTrendEntry.setStatus('mandatory')
smpTrendCycleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpTrendCycleIndex.setStatus('mandatory')
smpTrendProcessorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpTrendProcessorIndex.setStatus('mandatory')
smpTrendStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpTrendStartTime.setStatus('mandatory')
smpTrendStartUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpTrendStartUTC.setStatus('mandatory')
smpTrendStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpTrendStopTime.setStatus('mandatory')
smpTrendStopUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpTrendStopUTC.setStatus('mandatory')
smpTrendAvgUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpTrendAvgUtil.setStatus('mandatory')
smpTrendPeakUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1117, 1, 24, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smpTrendPeakUtil.setStatus('mandatory')
mibBuilder.exportSymbols("NConsole-MIB", smpIndex=smpIndex, memoryNw3PermMemoryPoolTotal=memoryNw3PermMemoryPoolTotal, netIndex=netIndex, serverAutoexecFilePath=serverAutoexecFilePath, serverCurrRxBytes=serverCurrRxBytes, moduleCodeSize=moduleCodeSize, protocolPeakTxPacketCount=protocolPeakTxPacketCount, protocolTrendsTable=protocolTrendsTable, serverTrendCumlTxPkts=serverTrendCumlTxPkts, serverCurrFileDeletes=serverCurrFileDeletes, netTotalTxPacketCount=netTotalTxPacketCount, smpTrendStartTime=smpTrendStartTime, nicTrendCumlTxPacketCount=nicTrendCumlTxPacketCount, nicAvgTxPacketCount=nicAvgTxPacketCount, serverCumlFileCreates=serverCumlFileCreates, configKeyboardStatus=configKeyboardStatus, nicTrendEntry=nicTrendEntry, serverTrendAvgTxBytes=serverTrendAvgTxBytes, serverTrendAvgRoutedPkts=serverTrendAvgRoutedPkts, driveTrendCycleIndex=driveTrendCycleIndex, serverRemoteStatus=serverRemoteStatus, serverTrendAvgUtil=serverTrendAvgUtil, serverUpTime=serverUpTime, nicPeakTxPacketCount=nicPeakTxPacketCount, moduleDataSize=moduleDataSize, serverCpuSpeed=serverCpuSpeed, serverLoginStatus=serverLoginStatus, serverTrendAvgProcs=serverTrendAvgProcs, serverCumlDirSearch=serverCumlDirSearch, serverCumlDiskWriteBytes=serverCumlDiskWriteBytes, nicIndex=nicIndex, serverTrendCumlDiskWriteBytes=serverTrendCumlDiskWriteBytes, serverTrendAvgFileReadBytes=serverTrendAvgFileReadBytes, moduleDesc=moduleDesc, serverTrendAvgDirSearch=serverTrendAvgDirSearch, serverTimeUTC=serverTimeUTC, smpPeakUtil=smpPeakUtil, netFrameDesc=netFrameDesc, setparmName=setparmName, serverPeakFileWrites=serverPeakFileWrites, avanti=avanti, configScreenSaverTimeout=configScreenSaverTimeout, driveTable=driveTable, sftservertrends=sftservertrends, protocolTrendStopTime=protocolTrendStopTime, protocolTable=protocolTable, serverNumOfMountedVols=serverNumOfMountedVols, serverTrendAvgFileOpens=serverTrendAvgFileOpens, driveNetWarePartitionStatus=driveNetWarePartitionStatus, moduleEntry=moduleEntry, serverUsers=serverUsers, netTable=netTable, nicCurrRxPacketCount=nicCurrRxPacketCount, serverTrendAvgFileWrites=serverTrendAvgFileWrites, driveTrendStopUTC=driveTrendStopUTC, volTrendDiskSpaceNotYetPurgable=volTrendDiskSpaceNotYetPurgable, moduleVersion=moduleVersion, serverTrendAvgFileReads=serverTrendAvgFileReads, serverTrendMemoryNw3PermMemoryPoolTotal=serverTrendMemoryNw3PermMemoryPoolTotal, memoryAllocPoolInUse=memoryAllocPoolInUse, serverPeakUsers=serverPeakUsers, serverTrendUpTime=serverTrendUpTime, serverTrendPeakProcs=serverTrendPeakProcs, serverAvgFileWrites=serverAvgFileWrites, serverPeakFileWriteBytes=serverPeakFileWriteBytes, serverCacheHits=serverCacheHits, nicTrendAvgRxPacketCount=nicTrendAvgRxPacketCount, serverCumlIOsPending=serverCumlIOsPending, serverTrendPeakFSPs=serverTrendPeakFSPs, driveIndex=driveIndex, volTrendDiskSpacePurgable=volTrendDiskSpacePurgable, serverMinCacheRatio=serverMinCacheRatio, memoryDOS=memoryDOS, driveSectorsPerTrack=driveSectorsPerTrack, volDirSlots=volDirSlots, nicTrendPeakRxPacketCount=nicTrendPeakRxPacketCount, smpTrendAvgUtil=smpTrendAvgUtil, serverCurrDiskReadBytes=serverCurrDiskReadBytes, serverSecurityRestrictionLevel=serverSecurityRestrictionLevel, memoryAllocPoolTotal=memoryAllocPoolTotal, serverCurrUtil=serverCurrUtil, protocolTrendDesc=protocolTrendDesc, serverCurrDirBuffs=serverCurrDirBuffs, serverCpuUtil=serverCpuUtil, serverConns=serverConns, serverCacheRatio=serverCacheRatio, setparmEntry=setparmEntry, driveControllerCardID=driveControllerCardID, serverCurrFileReadBytes=serverCurrFileReadBytes, volDriveNumber=volDriveNumber, netPrimaryDMA=netPrimaryDMA, serverAvgTxPkts=serverAvgTxPkts, nconsolemib=nconsolemib, driveTrendEntry=driveTrendEntry, serverPeakDirSearch=serverPeakDirSearch, serverTrendMemoryCacheNonMovablePool=serverTrendMemoryCacheNonMovablePool, driveNetWarePartitionType=driveNetWarePartitionType, serverPeakDiskWrites=serverPeakDiskWrites, nicCount=nicCount, setparmTable=setparmTable, memoryinfo=memoryinfo, netLogicalName=netLogicalName, volTrendEntry=volTrendEntry, protocolTrendAvgRxPacketCount=protocolTrendAvgRxPacketCount, serverAllowUnencryptedPwds=serverAllowUnencryptedPwds, serverTrendPeakRxBytes=serverTrendPeakRxBytes, serverCurrFSPs=serverCurrFSPs, moduleSmallMemoryAlloc=moduleSmallMemoryAlloc, serverTrendPeakOpenFiles=serverTrendPeakOpenFiles, nicTrendNICIndex=nicTrendNICIndex, protocolIndex=protocolIndex, moduleMediumMemoryAlloc=moduleMediumMemoryAlloc, serverPeakRxBytes=serverPeakRxBytes, smpAvgUtil=smpAvgUtil, netProtocolDesc=netProtocolDesc, serverPeakFileOpens=serverPeakFileOpens, protocolCurrTxPacketCount=protocolCurrTxPacketCount, moduleActiveScreens=moduleActiveScreens, netLineSpeed=netLineSpeed, serverTrendPeakFileDeletes=serverTrendPeakFileDeletes, serverPeakIOsPending=serverPeakIOsPending, protocolTrendStartTime=protocolTrendStartTime, nicTrendStopTime=nicTrendStopTime, netPacketRxTooBigCount=netPacketRxTooBigCount, serverAvgUtil=serverAvgUtil, serverTrendMemoryAllocPoolTotal=serverTrendMemoryAllocPoolTotal, serverTrendMinCacheRatio=serverTrendMinCacheRatio, serverAvgOpenFiles=serverAvgOpenFiles, protocolPeakRxPacketCount=protocolPeakRxPacketCount, driveTrendRedirectionSize=driveTrendRedirectionSize, serverTrendCumlFileReadBytes=serverTrendCumlFileReadBytes, nicTrendStartUTC=nicTrendStartUTC, serverinfo=serverinfo, memoryBaseRAM=memoryBaseRAM, setparminfo=setparminfo, serverTrendAvgIOsPending=serverTrendAvgIOsPending, driveDesc=driveDesc, smpTrendCycleIndex=smpTrendCycleIndex, drivetrends=drivetrends, memoryCacheNonMovablePool=memoryCacheNonMovablePool, serverMinCacheHits=serverMinCacheHits, serverPeakRoutedPkts=serverPeakRoutedPkts, sftmoduleinfo=sftmoduleinfo, driveRedirectionReservedSize=driveRedirectionReservedSize, serverTrendCumlFileWrites=serverTrendCumlFileWrites, configLogFileName=configLogFileName, moduleinfo=moduleinfo, voltrends=voltrends, configKeyboardAutoLock=configKeyboardAutoLock, serverCumlDiskReads=serverCumlDiskReads, configCycleLength=configCycleLength, volIndex=volIndex, serverPeakUtil=serverPeakUtil, serverTrendMemoryAllocPoolInUse=serverTrendMemoryAllocPoolInUse, serverAvgDiskWriteBytes=serverAvgDiskWriteBytes, serverCurrFileWriteBytes=serverCurrFileWriteBytes, serverTrendCacheLRU=serverTrendCacheLRU, serverCurrFileReads=serverCurrFileReads, serverTrendEntry=serverTrendEntry, serverCurrCacheHits=serverCurrCacheHits, serverTrendPeakFileWriteBytes=serverTrendPeakFileWriteBytes, serverCumlDirtyBlocks=serverCumlDirtyBlocks, volTrendStopUTC=volTrendStopUTC, serverNwRevInfo=serverNwRevInfo, serverCumlFileReads=serverCumlFileReads, volTable=volTable, serverDOSPresent=serverDOSPresent, driveControllerDriveID=driveControllerDriveID, volEntry=volEntry, nicTrendStopUTC=nicTrendStopUTC, serverTrendAvgDirBuffs=serverTrendAvgDirBuffs, serverTrendMemoryNw4CodeDataPool=serverTrendMemoryNw4CodeDataPool, serverCurrFileCreates=serverCurrFileCreates, volCount=volCount, serverPeakFileCreates=serverPeakFileCreates, netDriverDesc=netDriverDesc, serverAvgConns=serverAvgConns, volTrendDirSlotsFree=volTrendDirSlotsFree, serverCumlRxBytes=serverCumlRxBytes, driveTrendsTable=driveTrendsTable, smpinfo=smpinfo, volDirSlotsFree=volDirSlotsFree, serverPeakFSPs=serverPeakFSPs, volDiskSpaceNotYetPurgable=volDiskSpaceNotYetPurgable, driveType=driveType, serverCurrConns=serverCurrConns, protocolCount=protocolCount, netMaxRecvSize=netMaxRecvSize, sftsetparminfo=sftsetparminfo, serverTrendTable=serverTrendTable, serverTrendAvgDirtyBlocks=serverTrendAvgDirtyBlocks, memoryNw4CodeDataPool=memoryNw4CodeDataPool, volTrendCycleIndex=volTrendCycleIndex, volDiskSpace=volDiskSpace, smpCount=smpCount, serverAvgDirBuffs=serverAvgDirBuffs, sftnetinfo=sftnetinfo, serverTrendCumlDirtyBlocks=serverTrendCumlDirtyBlocks, serverAvgCacheRatio=serverAvgCacheRatio, protocolCurrRxPacketCount=protocolCurrRxPacketCount, nicNodeID=nicNodeID, serverCurrTxBytes=serverCurrTxBytes, configDataFileFormat=configDataFileFormat, serverTrendPeakUsers=serverTrendPeakUsers, serverTrendCumlFileCreates=serverTrendCumlFileCreates, driveSize=driveSize, serverPeakOpenFiles=serverPeakOpenFiles, serverPeakDirtyBlocks=serverPeakDirtyBlocks, volDiskSpaceFree=volDiskSpaceFree, protocolTrendCumlRxPacketCount=protocolTrendCumlRxPacketCount, configVersion=configVersion, moduleCopyright=moduleCopyright, netPacketRxTooSmallCount=netPacketRxTooSmallCount, serverTrendStopTime=serverTrendStopTime, nicTrendAvgTxPacketCount=nicTrendAvgTxPacketCount, serverTrendCumlRxBytes=serverTrendCumlRxBytes, serverAvgRxBytes=serverAvgRxBytes, serverAvgTxBytes=serverAvgTxBytes, serverTrendAvgRxBytes=serverTrendAvgRxBytes, serverTrendPeakFileReadBytes=serverTrendPeakFileReadBytes, serverTrendPeakRoutedPkts=serverTrendPeakRoutedPkts, driveinfo=driveinfo, serverAvgCacheHits=serverAvgCacheHits, smpTrendEntry=smpTrendEntry, serverTrendMemoryCacheBufferPool=serverTrendMemoryCacheBufferPool, driveCylinderCount=driveCylinderCount, serverCumlDiskWrites=serverCumlDiskWrites, netPacketRxOverflowCount=netPacketRxOverflowCount, driveRedirectedSize=driveRedirectedSize, serverTrendPeakTxBytes=serverTrendPeakTxBytes, serverPeakConns=serverPeakConns, serverCurrRoutedPkts=serverCurrRoutedPkts, protocolTrendCumlTxPacketCount=protocolTrendCumlTxPacketCount, protocolTrendStartUTC=protocolTrendStartUTC, serverAvgFileDeletes=serverAvgFileDeletes, netNodeID=netNodeID, serverCumlTxBytes=serverCumlTxBytes, protocolinfo=protocolinfo, serverTrendCumlRoutedPkts=serverTrendCumlRoutedPkts, smpTable=smpTable, netMaxPacketSize=netMaxPacketSize, serverCurrProcs=serverCurrProcs, driveCount=driveCount, configStartTime=configStartTime, serverTrendAvgFileWriteBytes=serverTrendAvgFileWriteBytes, nicTrendCumlRxPacketCount=nicTrendCumlRxPacketCount, serverPeakRecvBuffs=serverPeakRecvBuffs, netSecondaryMemoryDecode=netSecondaryMemoryDecode, setparmMaximum=setparmMaximum, serverTrendPeakDirtyBlocks=serverTrendPeakDirtyBlocks, protocolTrendCycleIndex=protocolTrendCycleIndex, nicTrendCycleIndex=nicTrendCycleIndex, serverCurrIOsPending=serverCurrIOsPending, serverCycleStartTime=serverCycleStartTime)
mibBuilder.exportSymbols("NConsole-MIB", serverPeakFileReadBytes=serverPeakFileReadBytes, serverTrendCumlDiskReads=serverTrendCumlDiskReads, serverCurrDirtyBlocks=serverCurrDirtyBlocks, netSecondaryInterrupt=netSecondaryInterrupt, serverTrendStartTime=serverTrendStartTime, serverAvgFileReads=serverAvgFileReads, serverTrendPeakDiskReadBytes=serverTrendPeakDiskReadBytes, serverTrendCumlDiskWrites=serverTrendCumlDiskWrites, serverAvgFileWriteBytes=serverAvgFileWriteBytes, driveTrendSize=driveTrendSize, serverAvgFSPs=serverAvgFSPs, serverAvgFileCreates=serverAvgFileCreates, serverTrendCumlFileWriteBytes=serverTrendCumlFileWriteBytes, volDiskSpacePurgable=volDiskSpacePurgable, serverCurrDirSearch=serverCurrDirSearch, serverPeakFileDeletes=serverPeakFileDeletes, serverTrendPeakRxPkts=serverTrendPeakRxPkts, netPacketRxMiscErrorCount=netPacketRxMiscErrorCount, serverTrendAvgDiskReadBytes=serverTrendAvgDiskReadBytes, netPrimaryMemoryDecode=netPrimaryMemoryDecode, netPacketTxMiscErrorCount=netPacketTxMiscErrorCount, serverTrendAvgOpenFiles=serverTrendAvgOpenFiles, serverAvgDiskWrites=serverAvgDiskWrites, serverPeakTxPkts=serverPeakTxPkts, serverTrendAvgTxPkts=serverTrendAvgTxPkts, netEntry=netEntry, serverTrendCumlFileDeletes=serverTrendCumlFileDeletes, sftmemoryinfo=sftmemoryinfo, nicCumlTxPacketCount=nicCumlTxPacketCount, serverAvgFileOpens=serverAvgFileOpens, serverCurrRxPkts=serverCurrRxPkts, moduleName=moduleName, netMaxProtocolSize=netMaxProtocolSize, configArchiveMaxDays=configArchiveMaxDays, netPrimaryInterrupt=netPrimaryInterrupt, serverTrendCumlFileReads=serverTrendCumlFileReads, serverCumlFileDeletes=serverCumlFileDeletes, serverTrendMemoryCacheMovablePool=serverTrendMemoryCacheMovablePool, serverTrendPeakFileOpens=serverTrendPeakFileOpens, driveMirrorFlag=driveMirrorFlag, moduleCompileDate=moduleCompileDate, serverCumlRoutedPkts=serverCumlRoutedPkts, setparmMinimum=setparmMinimum, configTrendMaxDays=configTrendMaxDays, configDataFileName=configDataFileName, serverAvgIOsPending=serverAvgIOsPending, serverTrendPeakDiskWrites=serverTrendPeakDiskWrites, serverNumOfActiveDrives=serverNumOfActiveDrives, serverTrendPeakFileCreates=serverTrendPeakFileCreates, serverTrendPeakIOsPending=serverTrendPeakIOsPending, serverTrendAvgDiskWrites=serverTrendAvgDiskWrites, serverCurrOpenFiles=serverCurrOpenFiles, serverTrendStopUTC=serverTrendStopUTC, protocolEntry=protocolEntry, serverstats=serverstats, netDriverName=netDriverName, setparmFlags=setparmFlags, netRetryTxCount=netRetryTxCount, serverTrendCumlRxPkts=serverTrendCumlRxPkts, protocolTrendAvgTxPacketCount=protocolTrendAvgTxPacketCount, serverAvgRxPkts=serverAvgRxPkts, serverCurrDiskWrites=serverCurrDiskWrites, volTrendDiskSpaceFree=volTrendDiskSpaceFree, serverCycleStartUTC=serverCycleStartUTC, serverPeakRxPkts=serverPeakRxPkts, nicTrendStartTime=nicTrendStartTime, serverAvgDirtyBlocks=serverAvgDirtyBlocks, configTrendFileName=configTrendFileName, serverTrendPeakFileReads=serverTrendPeakFileReads, driveTrendDriveIndex=driveTrendDriveIndex, serverTrendCumlIOsPending=serverTrendCumlIOsPending, moduleCount=moduleCount, serverPeakDiskWriteBytes=serverPeakDiskWriteBytes, serverPeakFileReads=serverPeakFileReads, moduleIndex=moduleIndex, moduleActiveProcesses=moduleActiveProcesses, serverTrendPeakFileWrites=serverTrendPeakFileWrites, nicTrendPeakTxPacketCount=nicTrendPeakTxPacketCount, serverTrendStartUTC=serverTrendStartUTC, serverCumlRxPkts=serverCumlRxPkts, serverTrendMinCacheHits=serverTrendMinCacheHits, driveEntry=driveEntry, netSecondaryIOPort=netSecondaryIOPort, driveRemirrorPercentage=driveRemirrorPercentage, protocolDesc=protocolDesc, protocolAvgTxPacketCount=protocolAvgTxPacketCount, moduleLargeMemoryAlloc=moduleLargeMemoryAlloc, serverTrendAvgFSPs=serverTrendAvgFSPs, serverCurrDiskWriteBytes=serverCurrDiskWriteBytes, serverTrendAvgCacheHits=serverTrendAvgCacheHits, serverTrendPeakDirSearch=serverTrendPeakDirSearch, serverCumlFileReadBytes=serverCumlFileReadBytes, memoryTotalRAM=memoryTotalRAM, serverAvgRecvBuffs=serverAvgRecvBuffs, memoryServerWorkRAM=memoryServerWorkRAM, nicAvgRxPacketCount=nicAvgRxPacketCount, configStopTime=configStopTime, nictrends=nictrends, smpTrendPeakUtil=smpTrendPeakUtil, protocoltrends=protocoltrends, driveTrendRedirectionReservedSize=driveTrendRedirectionReservedSize, serverPeakDiskReads=serverPeakDiskReads, driveRedirectionSize=driveRedirectionSize, netTotalRxPacketCount=netTotalRxPacketCount, serverTrendAvgFileDeletes=serverTrendAvgFileDeletes, protocolTrendEntry=protocolTrendEntry, configArchiveStatus=configArchiveStatus, serverCurrFileOpens=serverCurrFileOpens, serverTrendCumlDirSearch=serverTrendCumlDirSearch, volTrendStartTime=volTrendStartTime, memoryCacheBufferPool=memoryCacheBufferPool, serverCurrCacheRatio=serverCurrCacheRatio, volTrendStartUTC=volTrendStartUTC, serverStartupFilePath=serverStartupFilePath, serverCumlFileWriteBytes=serverCumlFileWriteBytes, serverTrendPeakDirBuffs=serverTrendPeakDirBuffs, serverTrendPeakRecvBuffs=serverTrendPeakRecvBuffs, nicTrendNodeID=nicTrendNodeID, serverAvgUsers=serverAvgUsers, serverTrendIndex=serverTrendIndex, nicCumlRxPacketCount=nicCumlRxPacketCount, serverPeakTxBytes=serverPeakTxBytes, serverCycleLengthTicks=serverCycleLengthTicks, netPacketTxTooBigCount=netPacketTxTooBigCount, driveHeadCount=driveHeadCount, netNoECBAvailableCount=netNoECBAvailableCount, protocolCumlRxPacketCount=protocolCumlRxPacketCount, serverCacheLRU=serverCacheLRU, volinfo=volinfo, driveNumberOfPartitions=driveNumberOfPartitions, serverCumlFileOpens=serverCumlFileOpens, protocolTrendPeakTxPacketCount=protocolTrendPeakTxPacketCount, setparmIndex=setparmIndex, serverTrendMemoryNw3PermMemoryPoolInUse=serverTrendMemoryNw3PermMemoryPoolInUse, setparmCategory=setparmCategory, volTrendTable=volTrendTable, protocolTrendPeakRxPacketCount=protocolTrendPeakRxPacketCount, serverTrendCumlDiskReadBytes=serverTrendCumlDiskReadBytes, netPacketTxTooSmallCount=netPacketTxTooSmallCount, driveMirrorStatus=driveMirrorStatus, serverAvgFileReadBytes=serverAvgFileReadBytes, serverTrendAvgDiskWriteBytes=serverTrendAvgDiskWriteBytes, volTrendName=volTrendName, serverPeakProcs=serverPeakProcs, sftserverinfo=sftserverinfo, serverName=serverName, serverNwSerialNumber=serverNwSerialNumber, serverTrendAvgConns=serverTrendAvgConns, serverTrendAvgFileCreates=serverTrendAvgFileCreates, smpTrendStopTime=smpTrendStopTime, serverTrendAvgCacheRatio=serverTrendAvgCacheRatio, netPrimaryIOPort=netPrimaryIOPort, nicPeakRxPacketCount=nicPeakRxPacketCount, smpTrendProcessorIndex=smpTrendProcessorIndex, serverTrendAvgUsers=serverTrendAvgUsers, serverTimeLocal=serverTimeLocal, serverCurrDiskReads=serverCurrDiskReads, driveTrendRedirectedSize=driveTrendRedirectedSize, serverCumlTxPkts=serverCumlTxPkts, serverCycleElapsedTicks=serverCycleElapsedTicks, driveNetWarePartitionSize=driveNetWarePartitionSize, serverTrendPeakTxPkts=serverTrendPeakTxPkts, setparmDesc=setparmDesc, serverPeakDiskReadBytes=serverPeakDiskReadBytes, memoryCacheMovablePool=memoryCacheMovablePool, serverAvgDiskReads=serverAvgDiskReads, netCount=netCount, protocolTrendStopUTC=protocolTrendStopUTC, serverCumlFileWrites=serverCumlFileWrites, memoryNw3PermMemoryPoolInUse=memoryNw3PermMemoryPoolInUse, volTrendDiskSpace=volTrendDiskSpace, serverAvgRoutedPkts=serverAvgRoutedPkts, volTrendVolumeIndex=volTrendVolumeIndex, driveTrendStartTime=driveTrendStartTime, serverTrendPeakUtil=serverTrendPeakUtil, protocolTrendProtocolIndex=protocolTrendProtocolIndex, serverPeakDirBuffs=serverPeakDirBuffs, serverTrendPeakDiskReads=serverTrendPeakDiskReads, smpCurrUtil=smpCurrUtil, configinfo=configinfo, driveTrendStartUTC=driveTrendStartUTC, serverAvgProcs=serverAvgProcs, serverCurrTxPkts=serverCurrTxPkts, serverCumlDiskReadBytes=serverCumlDiskReadBytes, serverTrendAvgRxPkts=serverTrendAvgRxPkts, protocolCumlTxPacketCount=protocolCumlTxPacketCount, netSecondaryDMA=netSecondaryDMA, volTrendDirSlots=volTrendDirSlots, smptrends=smptrends, smpEntry=smpEntry, netinfo=netinfo, nicCurrTxPacketCount=nicCurrTxPacketCount, driveTrendDesc=driveTrendDesc, serverTrendAvgRecvBuffs=serverTrendAvgRecvBuffs, netChecksumErrorCount=netChecksumErrorCount, volName=volName, serverCurrRecvBuffs=serverCurrRecvBuffs, protocolAvgRxPacketCount=protocolAvgRxPacketCount, nicTable=nicTable, serverCurrUsers=serverCurrUsers, setparmCurrent=setparmCurrent, serverTrendCumlFileOpens=serverTrendCumlFileOpens, serverTrendPeakDiskWriteBytes=serverTrendPeakDiskWriteBytes, serverTrendCumlTxBytes=serverTrendCumlTxBytes, smpTrendStopUTC=smpTrendStopUTC, driveTrendStopTime=driveTrendStopTime, driveControllerDeviceID=driveControllerDeviceID, moduleTable=moduleTable, nicEntry=nicEntry, nicTrendsTable=nicTrendsTable, servertrends=servertrends, nicstats=nicstats, serverCurrFileWrites=serverCurrFileWrites, smpTrendTable=smpTrendTable, volBlockSize=volBlockSize, serverTrendPeakConns=serverTrendPeakConns, serverLicenses=serverLicenses, serverTrendAvgDiskReads=serverTrendAvgDiskReads, volTrendStopTime=volTrendStopTime, serverAvgDirSearch=serverAvgDirSearch, serverCpuCount=serverCpuCount, serverAvgDiskReadBytes=serverAvgDiskReadBytes, netHardwareRxMismatchCount=netHardwareRxMismatchCount, smpTrendStartUTC=smpTrendStartUTC)
