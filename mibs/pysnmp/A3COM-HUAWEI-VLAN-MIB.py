#
# PySNMP MIB module A3COM-HUAWEI-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:52:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
hwInternetProtocol, vrpProtocol, hwLocal = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "hwInternetProtocol", "vrpProtocol", "hwLocal")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, MibIdentifier, TimeTicks, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, NotificationType, ObjectIdentity, Unsigned32, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "MibIdentifier", "TimeTicks", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "NotificationType", "ObjectIdentity", "Unsigned32", "IpAddress", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
huawei_vlan = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3)).setLabel("huawei-vlan")
vLANMibRoutertCountTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1), )
if mibBuilder.loadTexts: vLANMibRoutertCountTable.setStatus('mandatory')
vLANMibRoutertCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-VLAN-MIB", "vLANMibRouterPort"))
if mibBuilder.loadTexts: vLANMibRoutertCountEntry.setStatus('mandatory')
vLANMibRouterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterPort.setStatus('mandatory')
vLANMibRouterPortPktDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterPortPktDisc.setStatus('mandatory')
vLANMibRouterPortPktTran = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterPortPktTran.setStatus('mandatory')
vLANMibClearRouterStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vLANMibClearRouterStatistics.setStatus('mandatory')
vLANMibRoutertVlanCountTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2), )
if mibBuilder.loadTexts: vLANMibRoutertVlanCountTable.setStatus('mandatory')
vLANMibRoutertVlanCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-VLAN-MIB", "vLANMibRouterVID"))
if mibBuilder.loadTexts: vLANMibRoutertVlanCountEntry.setStatus('mandatory')
vLANMibRouterVID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterVID.setStatus('mandatory')
vLANMibRouterVlanPacketTran = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterVlanPacketTran.setStatus('mandatory')
vLANMibRouterVlanPacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterVlanPacketSent.setStatus('mandatory')
vLANMibClearVidStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vLANMibClearVidStatistics.setStatus('mandatory')
vLANMibRouterMaxPkTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 9), )
if mibBuilder.loadTexts: vLANMibRouterMaxPkTable.setStatus('mandatory')
vLANMibRouterMaxPkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 9, 1), ).setIndexNames((0, "A3COM-HUAWEI-VLAN-MIB", "vLANMIbVID"))
if mibBuilder.loadTexts: vLANMibRouterMaxPkEntry.setStatus('mandatory')
vLANMIbVID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMIbVID.setStatus('mandatory')
vLANMibRouterMaxPktProcessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 9, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vLANMibRouterMaxPktProcessCount.setStatus('mandatory')
vLANMibSubIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11), )
if mibBuilder.loadTexts: vLANMibSubIfTable.setStatus('mandatory')
vLANMibSubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11, 1), ).setIndexNames((0, "A3COM-HUAWEI-VLAN-MIB", "vLANMibSubIfPortIndex"))
if mibBuilder.loadTexts: vLANMibSubIfEntry.setStatus('mandatory')
vLANMibSubIfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibSubIfPortIndex.setStatus('mandatory')
vLANMibSubIfEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("iSL", 1), ("dot1q", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vLANMibSubIfEncapsulation.setStatus('mandatory')
vLANMibSubIfVID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vLANMibSubIfVID.setStatus('mandatory')
mibBuilder.exportSymbols("A3COM-HUAWEI-VLAN-MIB", vLANMibRouterMaxPktProcessCount=vLANMibRouterMaxPktProcessCount, vLANMibRouterVID=vLANMibRouterVID, vLANMibSubIfTable=vLANMibSubIfTable, vLANMibRouterVlanPacketSent=vLANMibRouterVlanPacketSent, vLANMibRoutertCountTable=vLANMibRoutertCountTable, vLANMibRouterPort=vLANMibRouterPort, vLANMibRoutertCountEntry=vLANMibRoutertCountEntry, vLANMibClearRouterStatistics=vLANMibClearRouterStatistics, vLANMibRoutertVlanCountTable=vLANMibRoutertVlanCountTable, vLANMibSubIfEncapsulation=vLANMibSubIfEncapsulation, vLANMibSubIfPortIndex=vLANMibSubIfPortIndex, vLANMIbVID=vLANMIbVID, vLANMibSubIfEntry=vLANMibSubIfEntry, vLANMibRouterPortPktTran=vLANMibRouterPortPktTran, vLANMibRouterVlanPacketTran=vLANMibRouterVlanPacketTran, vLANMibRouterMaxPkEntry=vLANMibRouterMaxPkEntry, vLANMibClearVidStatistics=vLANMibClearVidStatistics, vLANMibRouterMaxPkTable=vLANMibRouterMaxPkTable, vLANMibSubIfVID=vLANMibSubIfVID, vLANMibRouterPortPktDisc=vLANMibRouterPortPktDisc, vLANMibRoutertVlanCountEntry=vLANMibRoutertVlanCountEntry, huawei_vlan=huawei_vlan)
