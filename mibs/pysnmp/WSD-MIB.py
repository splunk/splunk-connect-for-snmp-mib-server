#
# PySNMP MIB module WSD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WSD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ipAddrEntry, = mibBuilder.importSymbols("IP-MIB", "ipAddrEntry")
rndErrorDesc, rsWSDThresholdWarnings, rsServerDispatcher, rndErrorSeverity, rsNWSD = mibBuilder.importSymbols("RADWARE-MIB", "rndErrorDesc", "rsWSDThresholdWarnings", "rsServerDispatcher", "rndErrorSeverity", "rsNWSD")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, NotificationType, Bits, IpAddress, Counter32, ObjectIdentity, ModuleIdentity, MibIdentifier, Unsigned32, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "NotificationType", "Bits", "IpAddress", "Counter32", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Integer32", "Counter64")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))

class NetNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

rsWSDApplicationServersTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 11), )
if mibBuilder.loadTexts: rsWSDApplicationServersTable.setStatus('mandatory')
rsWSDApplicationServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDAddr"), (0, "WSD-MIB", "rsWSDServerAddr"))
if mibBuilder.loadTexts: rsWSDApplicationServerEntry.setStatus('mandatory')
rsWSDAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDAddr.setStatus('mandatory')
rsWSDServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDServerAddr.setStatus('mandatory')
rsWSDServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerName.setStatus('mandatory')
rsWSDServerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("noNewSessions", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDServerOperStatus.setStatus('mandatory')
rsWSDServerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerWeight.setStatus('mandatory')
rsWSDServerAttachedUsersNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDServerAttachedUsersNumber.setStatus('mandatory')
rsWSDServerPeakLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDServerPeakLoad.setStatus('mandatory')
rsWSDServerFramesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDServerFramesRate.setStatus('mandatory')
rsWSDServerFramesLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDServerFramesLoad.setStatus('mandatory')
rsWSDServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerStatus.setStatus('mandatory')
rsWSDServerOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("regular", 1), ("backup", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerOperMode.setStatus('mandatory')
rsWSDMultiplexedServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMultiplexedServerPort.setStatus('mandatory')
rsWSDServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("regular", 1), ("distributed", 2), ("remote", 3), ("loopback", 4), ("localFarm", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerType.setStatus('mandatory')
rsWSDServerConnectionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerConnectionLimit.setStatus('mandatory')
rsWSDServerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("shutdown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerAdminStatus.setStatus('mandatory')
rsWSDServerBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerBandWidth.setStatus('mandatory')
rsWSDServerCckID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerCckID.setStatus('mandatory')
rsWSDServerRedirectTo = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerRedirectTo.setStatus('mandatory')
rsWSDServerClientNATStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServerClientNATStatus.setStatus('mandatory')
rsWSDdummy1 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 11, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDdummy1.setStatus('mandatory')
rsWSDFarmTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 13), )
if mibBuilder.loadTexts: rsWSDFarmTable.setStatus('mandatory')
rsWSDFarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDFarmAddress"))
if mibBuilder.loadTexts: rsWSDFarmEntry.setStatus('mandatory')
rsWSDFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDFarmAddress.setStatus('mandatory')
rsWSDFarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmName.setStatus('mandatory')
rsWSDAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDAdminStatus.setStatus('mandatory')
rsWSDClientsLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDClientsLifeTime.setStatus('mandatory')
rsWSDDispatchMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("cyclic", 1), ("leastTraffic", 2), ("leastUsersNumber", 3), ("leastTrafficLocal", 4), ("leastUsersNumberLocal", 5), ("nt-1", 6), ("nt-2", 7), ("private-1", 8), ("private-2", 9), ("weightedCyclic", 10), ("static", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDDispatchMethod.setStatus('mandatory')
rsWSDCheckConnectivityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ping", 1), ("disable", 2), ("http", 3), ("tcp", 4), ("udp", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDCheckConnectivityStatus.setStatus('mandatory')
rsWSDCheckConnectivityMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDCheckConnectivityMethod.setStatus('mandatory')
rsWSDCheckConnectivityInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDCheckConnectivityInterval.setStatus('mandatory')
rsWSDCheckConnectivityRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDCheckConnectivityRetries.setStatus('mandatory')
rsWSDClientsConnectDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDClientsConnectDenials.setStatus('mandatory')
rsWSDFarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmStatus.setStatus('mandatory')
rsWSDMultiplexedFarmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMultiplexedFarmPort.setStatus('mandatory')
rsWSDFarmDistThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmDistThreshold.setStatus('mandatory')
rsWSDFarmTrafficThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmTrafficThreshold.setStatus('mandatory')
rsWSDFarmRedirectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("httpRedirection", 1), ("triangleRedirection", 2), ("noRedirection", 3), ("httpAndTriangleRedirection", 4), ("dnsRedirection", 5), ("dnsReevaluationRedirection", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmRedirectionMode.setStatus('mandatory')
rsNsdFarmRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsNsdFarmRegister.setStatus('mandatory')
rsWSDFarmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("regular", 1), ("backup", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmMode.setStatus('mandatory')
rsWSDExtendedConnectivityCheckInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDExtendedConnectivityCheckInterval.setStatus('mandatory')
rsWSDConnectivityCheckUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDConnectivityCheckUrl.setStatus('mandatory')
rsWSDFarmClientMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("regular", 1), ("entryPerSession", 2), ("serverPerSession", 3), ("removeEntryAtSessionEnd", 4), ("removeEntryAtSessionEndForServerPerSession", 5))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmClientMode.setStatus('mandatory')
rsWSDDNSRedir2ndMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("httpAndTriangle", 1), ("http", 2), ("triangulation", 3), ("dnsOnly", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDDNSRedir2ndMode.setStatus('mandatory')
rsWSDFarmHttpRedirectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipMode", 1), ("nameMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmHttpRedirectionMode.setStatus('mandatory')
rsWSDFarmOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDFarmOperStatus.setStatus('mandatory')
rsWSDFarmBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmBandWidth.setStatus('mandatory')
rsWSDFarmCookieKey = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmCookieKey.setStatus('mandatory')
rsWSDConnCheckUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDConnCheckUserName.setStatus('mandatory')
rsWSDConnCheckPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDConnCheckPassword.setStatus('mandatory')
rsWSDdummy3 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 13, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDdummy3.setStatus('mandatory')
rsWSDClientsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 14), )
if mibBuilder.loadTexts: rsWSDClientsTable.setStatus('mandatory')
rsWSDClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDFarmAddr"), (0, "WSD-MIB", "rsWSDClientAddr"))
if mibBuilder.loadTexts: rsWSDClientEntry.setStatus('mandatory')
rsWSDFarmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDFarmAddr.setStatus('mandatory')
rsWSDClientAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDClientAddr.setStatus('mandatory')
rsWSDAttachedServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDAttachedServerAddr.setStatus('mandatory')
rsWSDClientLastActivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDClientLastActivityTime.setStatus('mandatory')
rsWSDClientAttachmentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDClientAttachmentTime.setStatus('mandatory')
rsWSDClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2), ("nat", 3), ("clientnat", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDClientType.setStatus('mandatory')
rsWSDClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDClientStatus.setStatus('mandatory')
rsWSDdummy4 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 14, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDdummy4.setStatus('mandatory')
rsWSDLoadReportTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 17), )
if mibBuilder.loadTexts: rsWSDLoadReportTable.setStatus('mandatory')
rsWSDLoadReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDReportFarmAddress"), (0, "WSD-MIB", "rsWSDReportDstFarmAddress"), (0, "WSD-MIB", "rsWSDReportLclSuperFarmAddr"))
if mibBuilder.loadTexts: rsWSDLoadReportEntry.setStatus('mandatory')
rsWSDReportFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDReportFarmAddress.setStatus('mandatory')
rsWSDReportDstFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDReportDstFarmAddress.setStatus('mandatory')
rsWSDReportLclSuperFarmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDReportLclSuperFarmAddr.setStatus('mandatory')
rsWSDReportDstIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDReportDstIpAddress.setStatus('mandatory')
rsWSDReportMapFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDReportMapFarmAddress.setStatus('mandatory')
rsWSDReportStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDReportStatus.setStatus('mandatory')
rsWSDReportRdnDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDReportRdnDstIpAddr.setStatus('mandatory')
rsWSDReportDstSuperFarmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDReportDstSuperFarmAddr.setStatus('mandatory')
rsWSDdummy6 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 17, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDdummy6.setStatus('mandatory')
rsWSDFarmMappingTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 18), )
if mibBuilder.loadTexts: rsWSDFarmMappingTable.setStatus('mandatory')
rsWSDFarmMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 18, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDMappingAddress"))
if mibBuilder.loadTexts: rsWSDFarmMappingEntry.setStatus('mandatory')
rsWSDMappingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 18, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDMappingAddress.setStatus('mandatory')
rsWSDMappingFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 18, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMappingFarmAddress.setStatus('mandatory')
rsWSDOriginalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 18, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDOriginalAddress.setStatus('mandatory')
rsWSDMappingAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMappingAdminStatus.setStatus('mandatory')
rsWSDMappingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 18, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMappingStatus.setStatus('mandatory')
rsWSDdummy7 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 18, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDdummy7.setStatus('mandatory')
rsWSDLoadReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDLoadReportInterval.setStatus('mandatory')
rsWSDLoadReportTimeout = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDLoadReportTimeout.setStatus('mandatory')
rsWSDPortFarmTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 30), )
if mibBuilder.loadTexts: rsWSDPortFarmTable.setStatus('mandatory')
rsWSDPortFarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 30, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDPortMainAddress"), (0, "WSD-MIB", "rsWSDPortNumber"))
if mibBuilder.loadTexts: rsWSDPortFarmEntry.setStatus('mandatory')
rsWSDPortMainAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 30, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDPortMainAddress.setStatus('mandatory')
rsWSDPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 30, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDPortNumber.setStatus('mandatory')
rsWSDPortFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 30, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDPortFarmAddress.setStatus('mandatory')
rsWSDPortFarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 30, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDPortFarmStatus.setStatus('mandatory')
rsWSDPortFarmHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 30, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 62))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDPortFarmHeader.setStatus('mandatory')
rsWSDdummy10 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 30, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDdummy10.setStatus('mandatory')
rsWSDProximity = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 32))
rsWSDStaticProximityTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1), )
if mibBuilder.loadTexts: rsWSDStaticProximityTable.setStatus('mandatory')
rsWSDStaticProximityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDStaticProximityFarmAddress"), (0, "WSD-MIB", "rsWSDStaticProximityRangeFrom"))
if mibBuilder.loadTexts: rsWSDStaticProximityEntry.setStatus('mandatory')
rsWSDStaticProximityFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDStaticProximityFarmAddress.setStatus('mandatory')
rsWSDStaticProximityRangeFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDStaticProximityRangeFrom.setStatus('mandatory')
rsWSDStaticProximityRangeTo = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDStaticProximityRangeTo.setStatus('mandatory')
rsWSDStaticProximityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDStaticProximityStatus.setStatus('mandatory')
rsWSDStaticProximityServer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDStaticProximityServer1.setStatus('mandatory')
rsWSDStaticProximityServer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDStaticProximityServer2.setStatus('mandatory')
rsWSDStaticProximityServer3 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 1, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDStaticProximityServer3.setStatus('mandatory')
rsWSDProximityOperationMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noProximity", 1), ("staticProximity", 2), ("fullProximity", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityOperationMode.setStatus('mandatory')
rsWSDProximityMainDNS = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityMainDNS.setStatus('mandatory')
rsWSDProximityBackupDNS = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityBackupDNS.setStatus('mandatory')
rsWSDProximityAgingPeriod = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityAgingPeriod.setStatus('mandatory')
rsWSDProximityClientMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityClientMode.setStatus('mandatory')
rsWSDProximityRetries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityRetries.setStatus('mandatory')
rsWSDProximityTimeout = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityTimeout.setStatus('mandatory')
rsWSDProximityTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 9))
rsWSDMaxDynEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDMaxDynEntries.setStatus('mandatory')
rsWSDMaxDynEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 9, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMaxDynEntriesAfterReset.setStatus('mandatory')
rsWSDPrxBasicCheckMethod = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDPrxBasicCheckMethod.setStatus('mandatory')
rsWSDPrxAdvancedCheckMethod = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDPrxAdvancedCheckMethod.setStatus('mandatory')
rsWSDPrxApplIndpndCheckMethod = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDPrxApplIndpndCheckMethod.setStatus('mandatory')
rsWSDPrxApplAwareCheckMethod = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 32, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDPrxApplAwareCheckMethod.setStatus('mandatory')
rsNWSDProximity = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 1))
rsWSDProximityHopsWeight = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityHopsWeight.setStatus('mandatory')
rsWSDProximityLatencyWeight = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityLatencyWeight.setStatus('mandatory')
rsWSDProximityLoadWeight = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityLoadWeight.setStatus('mandatory')
rsWSDProximityMirrorPercentage = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityMirrorPercentage.setStatus('mandatory')
rsWSDProximityMirrorPollingTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityMirrorPollingTime.setStatus('mandatory')
rsWSDDNSttl = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDDNSttl.setStatus('mandatory')
rsWSDURLSuperFarmTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 3), )
if mibBuilder.loadTexts: rsWSDURLSuperFarmTable.setStatus('mandatory')
rsWSDURLSuperFarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 3, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDURL"))
if mibBuilder.loadTexts: rsWSDURLSuperFarmEntry.setStatus('mandatory')
rsWSDURLFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDURLFarmAddress.setStatus('mandatory')
rsWSDURL = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDURL.setStatus('mandatory')
rsWSDURLStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 3, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDURLStatus.setStatus('mandatory')
rsWSDMainVirtualDNS = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMainVirtualDNS.setStatus('mandatory')
rsWSDBackupVirtualDNS = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDBackupVirtualDNS.setStatus('mandatory')
rsWSDProximityMirrorProtocolMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDProximityMirrorProtocolMode.setStatus('mandatory')
rsWSDTwoDNSAnswers = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDTwoDNSAnswers.setStatus('mandatory')
rsWSDStatisticsDstIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDStatisticsDstIpAddr.setStatus('mandatory')
rsWSDStatisticsReportingMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("full", 1), ("disable", 2), ("general", 3), ("health", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDStatisticsReportingMode.setStatus('mandatory')
rsWSDGeneralStatisticsPollingTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDGeneralStatisticsPollingTime.setStatus('mandatory')
rsWSDHealthStatisticsPollingTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDHealthStatisticsPollingTime.setStatus('mandatory')
rsWSDAcceptableHTTPCodesTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 15), )
if mibBuilder.loadTexts: rsWSDAcceptableHTTPCodesTable.setStatus('mandatory')
rsWSDAcceptableHTTPCodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 15, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDAcceptableHTTPCodeFarm"), (0, "WSD-MIB", "rsWSDAcceptableHTTPCode"))
if mibBuilder.loadTexts: rsWSDAcceptableHTTPCodeEntry.setStatus('mandatory')
rsWSDAcceptableHTTPCodeFarm = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 15, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDAcceptableHTTPCodeFarm.setStatus('mandatory')
rsWSDAcceptableHTTPCode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 15, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDAcceptableHTTPCode.setStatus('mandatory')
rsWSDAcceptableHTTPCodeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 15, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDAcceptableHTTPCodeStatus.setStatus('mandatory')
rsWSDTotalNumberOfClients = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDTotalNumberOfClients.setStatus('mandatory')
rsWSDCurrentNumberOfClients = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDCurrentNumberOfClients.setStatus('mandatory')
rsWSDFramesLoadInBytes = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDFramesLoadInBytes.setStatus('mandatory')
rsWSDRedundancyFailed = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDRedundancyFailed.setStatus('mandatory')
rsWSDRedundancyTakeOver = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDRedundancyTakeOver.setStatus('mandatory')
rsWSDDynamicProximityTableFilledUp = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDDynamicProximityTableFilledUp.setStatus('mandatory')
rsWSDClientTableFilledUp = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDClientTableFilledUp.setStatus('mandatory')
rsWSDSSFTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23), )
if mibBuilder.loadTexts: rsWSDSSFTable.setStatus('mandatory')
rsWSDSSFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDSSFName"))
if mibBuilder.loadTexts: rsWSDSSFEntry.setStatus('mandatory')
rsWSDSSFName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFName.setStatus('mandatory')
rsWSDSSFStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFStatus.setStatus('mandatory')
rsWSDSSFCheckMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disable", 1), ("ping", 2), ("tcp", 3), ("oAS", 4), ("oDB", 5))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFCheckMethod.setStatus('mandatory')
rsWSDSSFCheckInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFCheckInterval.setStatus('mandatory')
rsWSDSSFCheckRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFCheckRetries.setStatus('mandatory')
rsWSDSSFCheckPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 6), Integer32().clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFCheckPort.setStatus('mandatory')
rsWSDSSFCheckCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFCheckCommunity.setStatus('mandatory')
rsWSDSSFMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inclusive", 1), ("singleFailure", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFMode.setStatus('mandatory')
rsWSDSSFOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDSSFOperStatus.setStatus('mandatory')
rsWSDSSFId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 23, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFId.setStatus('mandatory')
rsWSDSecondaryServerTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 24), )
if mibBuilder.loadTexts: rsWSDSecondaryServerTable.setStatus('mandatory')
rsWSDSecondaryServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 24, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDSecondaryServerSSFName"), (0, "WSD-MIB", "rsWSDSecondaryServerAddr"))
if mibBuilder.loadTexts: rsWSDSecondaryServerEntry.setStatus('mandatory')
rsWSDSecondaryServerSSFName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 24, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSecondaryServerSSFName.setStatus('mandatory')
rsWSDSecondaryServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 24, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSecondaryServerAddr.setStatus('mandatory')
rsWSDSecondaryServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSecondaryServerStatus.setStatus('mandatory')
rsWSDSecondaryServerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDSecondaryServerOperStatus.setStatus('mandatory')
rsWSDSecondaryServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 24, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSecondaryServerId.setStatus('mandatory')
rsWSDSSFFarmTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 25), )
if mibBuilder.loadTexts: rsWSDSSFFarmTable.setStatus('mandatory')
rsWSDSSFFarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 25, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDSSFFarmSSFName"), (0, "WSD-MIB", "rsWSDSSFFarmAddr"))
if mibBuilder.loadTexts: rsWSDSSFFarmEntry.setStatus('mandatory')
rsWSDSSFFarmSSFName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 25, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFFarmSSFName.setStatus('mandatory')
rsWSDSSFFarmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 25, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFFarmAddr.setStatus('mandatory')
rsWSDSSFFarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFFarmStatus.setStatus('mandatory')
rsWSDSSFFarmId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 25, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFFarmId.setStatus('mandatory')
rsWSDClientGroupingMask = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 26), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDClientGroupingMask.setStatus('mandatory')
rsWSDSSFServerTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 27), )
if mibBuilder.loadTexts: rsWSDSSFServerTable.setStatus('mandatory')
rsWSDSSFServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 27, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDSSFServerSSFName"), (0, "WSD-MIB", "rsWSDSSFServerFarmAddr"), (0, "WSD-MIB", "rsWSDSSFServerSrvrAddr"))
if mibBuilder.loadTexts: rsWSDSSFServerEntry.setStatus('mandatory')
rsWSDSSFServerSSFName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 27, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFServerSSFName.setStatus('mandatory')
rsWSDSSFServerFarmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 27, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFServerFarmAddr.setStatus('mandatory')
rsWSDSSFServerSrvrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 27, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFServerSrvrAddr.setStatus('mandatory')
rsWSDSSFServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 27, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFServerStatus.setStatus('mandatory')
rsWSDSSFServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 27, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSSFServerId.setStatus('mandatory')
rsWSDHTTPContentCheckTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 28), )
if mibBuilder.loadTexts: rsWSDHTTPContentCheckTable.setStatus('mandatory')
rsWSDHTTPContentCheckEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 28, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDHTTPContentCheckFarm"))
if mibBuilder.loadTexts: rsWSDHTTPContentCheckEntry.setStatus('mandatory')
rsWSDHTTPContentCheckFarm = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 28, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDHTTPContentCheckFarm.setStatus('mandatory')
rsWSDHTTPContentCheckString = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 28, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDHTTPContentCheckString.setStatus('mandatory')
rsWSDHTTPContentCheckMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 28, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stringExists", 1), ("stringIsAbsent", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDHTTPContentCheckMode.setStatus('mandatory')
rsWSDHTTPContentCheckStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 28, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDHTTPContentCheckStatus.setStatus('mandatory')
rsNWSDStats = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29))
rsWSDTotalDNSReqCounter = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDTotalDNSReqCounter.setStatus('mandatory')
rsWSDAnsweredDNSReqCounter = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDAnsweredDNSReqCounter.setStatus('mandatory')
rsWSDBadDNSReqCounter = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDBadDNSReqCounter.setStatus('mandatory')
rsWSDTotalDNSReqLastSecCounter = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDTotalDNSReqLastSecCounter.setStatus('mandatory')
rsWSDAnsweredDNSReqLastSecCounter = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDAnsweredDNSReqLastSecCounter.setStatus('mandatory')
rsWSDBadDNSReqLastSecCounter = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDBadDNSReqLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7), )
if mibBuilder.loadTexts: rsNWSDFarmStatisticsTable.setStatus('mandatory')
rsNWSDFarmStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1), ).setIndexNames((0, "WSD-MIB", "rsNWSDFarmStatisticsAddress"))
if mibBuilder.loadTexts: rsNWSDFarmStatisticsEntry.setStatus('mandatory')
rsNWSDFarmStatisticsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsAddress.setStatus('mandatory')
rsNWSDFarmStatisticsAttachedUsersNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsAttachedUsersNumber.setStatus('mandatory')
rsNWSDFarmStatisticsTotalAttachedUsersNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsTotalAttachedUsersNumber.setStatus('mandatory')
rsNWSDFarmStatisticsPeakLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsPeakLoad.setStatus('mandatory')
rsNWSDFarmStatisticsFramesLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsFramesLoad.setStatus('mandatory')
rsNWSDFarmStatisticsFramesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsFramesRate.setStatus('mandatory')
rsNWSDFarmStatisticsFramesLoadInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsFramesLoadInBytes.setStatus('mandatory')
rsNWSDFarmStatisticsFramesRateInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsFramesRateInBytes.setStatus('mandatory')
rsNWSDFarmStatisticsBackupServerUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsBackupServerUsed.setStatus('mandatory')
rsNWSDFarmStatisticsDistThresholdReached = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsDistThresholdReached.setStatus('mandatory')
rsNWSDFarmStatisticsCapacityThresholdReached = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsCapacityThresholdReached.setStatus('mandatory')
rsNWSDFarmStatisticsTotalDNSReqCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsTotalDNSReqCounter.setStatus('mandatory')
rsNWSDFarmStatisticsTotalDNSReqLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsTotalDNSReqLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsLocalyAnsweredDNSReqCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsLocalyAnsweredDNSReqCounter.setStatus('mandatory')
rsNWSDFarmStatisticsLocalyAnsweredDNSReqLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsLocalyAnsweredDNSReqLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsRedirectedDNSReqCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsRedirectedDNSReqCounter.setStatus('mandatory')
rsNWSDFarmStatisticsRedirectedDNSReqLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsRedirectedDNSReqLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsTotalHTTPSessionsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsTotalHTTPSessionsCounter.setStatus('mandatory')
rsNWSDFarmStatisticsTotalHTTPSessionsLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsTotalHTTPSessionsLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsLocalHTTPSessionsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsLocalHTTPSessionsCounter.setStatus('mandatory')
rsNWSDFarmStatisticsLocalHTTPSessionsLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsLocalHTTPSessionsLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsRedirectedHTTPSessionsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsRedirectedHTTPSessionsCounter.setStatus('mandatory')
rsNWSDFarmStatisticsRedirectedHTTPSessionsLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsRedirectedHTTPSessionsLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsTotalTriangSessionsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsTotalTriangSessionsCounter.setStatus('mandatory')
rsNWSDFarmStatisticsTotalTriangSessionsLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsTotalTriangSessionsLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsLocalTriangSessionsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsLocalTriangSessionsCounter.setStatus('mandatory')
rsNWSDFarmStatisticsLocalTriangSessionsLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsLocalTriangSessionsLastSecCounter.setStatus('mandatory')
rsNWSDFarmStatisticsRedirectedTriangSessionsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsRedirectedTriangSessionsCounter.setStatus('mandatory')
rsNWSDFarmStatisticsRedirectedTriangSessionsLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 7, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDFarmStatisticsRedirectedTriangSessionsLastSecCounter.setStatus('mandatory')
rsNWSDServerStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8), )
if mibBuilder.loadTexts: rsNWSDServerStatisticsTable.setStatus('mandatory')
rsNWSDServerStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1), ).setIndexNames((0, "WSD-MIB", "rsNWSDServerStatisticsFarmAddr"), (0, "WSD-MIB", "rsNWSDServerStatisticsServerAddr"))
if mibBuilder.loadTexts: rsNWSDServerStatisticsEntry.setStatus('mandatory')
rsNWSDServerStatisticsFarmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsFarmAddr.setStatus('mandatory')
rsNWSDServerStatisticsServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsServerAddr.setStatus('mandatory')
rsNWSDServerStatisticsAttachedUsersNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsAttachedUsersNumber.setStatus('mandatory')
rsNWSDServerStatisticsPeakLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsPeakLoad.setStatus('mandatory')
rsNWSDServerStatisticsFramesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsFramesRate.setStatus('mandatory')
rsNWSDServerStatisticsFramesLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsFramesLoad.setStatus('mandatory')
rsNWSDServerStatisticsTotalAttachedUsersNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsTotalAttachedUsersNumber.setStatus('mandatory')
rsNWSDServerStatisticsFramesLoadInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsFramesLoadInBytes.setStatus('mandatory')
rsNWSDServerStatisticsFramesRateInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsFramesRateInBytes.setStatus('mandatory')
rsNWSDServerStatisticsConnectivityCheckFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsConnectivityCheckFailed.setStatus('mandatory')
rsNWSDServerStatisticsConnectionLimitReached = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsConnectionLimitReached.setStatus('mandatory')
rsNWSDServerStatisticsAnsweredDNSReqCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsAnsweredDNSReqCounter.setStatus('mandatory')
rsNWSDServerStatisticsAnsweredDNSReqLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsAnsweredDNSReqLastSecCounter.setStatus('mandatory')
rsNWSDServerStatisticsRedirectedHTTPSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsRedirectedHTTPSessions.setStatus('mandatory')
rsNWSDServerStatisticsRedirectedHTTPSessionsLastSecCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsRedirectedHTTPSessionsLastSecCounter.setStatus('mandatory')
rsNWSDServerStatisticsRedirectedTriangSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsRedirectedTriangSessions.setStatus('mandatory')
rsNWSDServerStatisticsRedirectedTriangSessionsLastSecCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 29, 8, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNWSDServerStatisticsRedirectedTriangSessionsLastSecCount.setStatus('mandatory')
rsWSDCookieTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 30), )
if mibBuilder.loadTexts: rsWSDCookieTable.setStatus('mandatory')
rsWSDCookieTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 30, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDCookieFarm"), (0, "WSD-MIB", "rsWSDCookieValue"))
if mibBuilder.loadTexts: rsWSDCookieTableEntry.setStatus('mandatory')
rsWSDCookieFarm = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 30, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDCookieFarm.setStatus('mandatory')
rsWSDCookieValue = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 30, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDCookieValue.setStatus('mandatory')
rsWSDCookieServer = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 30, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDCookieServer.setStatus('mandatory')
rsWSDCookieStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 30, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDCookieStatus.setStatus('mandatory')
rsWSDTrackUDPSessionsMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDTrackUDPSessionsMode.setStatus('mandatory')
rsWSDTrackSSLIDinSelectServerMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDTrackSSLIDinSelectServerMode.setStatus('mandatory')
rsWSDTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33))
rsWSDMaxURLEntriesTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 1))
rsWSDMaxURLEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDMaxURLEntries.setStatus('mandatory')
rsWSDMaxURLEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMaxURLEntriesAfterReset.setStatus('mandatory')
rsWSDMaxRequestEntriesTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 2))
rsWSDMaxRequestEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDMaxRequestEntries.setStatus('mandatory')
rsWSDMaxRequestEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMaxRequestEntriesAfterReset.setStatus('mandatory')
rsWSDMaxSSLEntriesTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 3))
rsWSDMaxSSLEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDMaxSSLEntries.setStatus('mandatory')
rsWSDMaxSSLEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 33, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMaxSSLEntriesAfterReset.setStatus('mandatory')
rsWSDTweaks = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34))
rsWSDMaintainURLSFPersistency = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDMaintainURLSFPersistency.setStatus('mandatory')
rsWSDAllowAnyAppPortForCookies = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDAllowAnyAppPortForCookies.setStatus('mandatory')
rsWSDSrcPortInClientHash = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSrcPortInClientHash.setStatus('mandatory')
rsWSDUserDefinedTimeoutAfterTCPFailure = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDUserDefinedTimeoutAfterTCPFailure.setStatus('mandatory')
rsWSDNoSlashAfterGET = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNoSlashAfterGET.setStatus('mandatory')
rsWSDTimeoutForSYN = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDTimeoutForSYN.setStatus('mandatory')
rsWSDSpecificNATAddress = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSpecificNATAddress.setStatus('mandatory')
rsWSDExtendedCheckHostMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipMode", 1), ("nameMode", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDExtendedCheckHostMode.setStatus('mandatory')
rsWSDExtendedLRPSecurity = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDExtendedLRPSecurity.setStatus('mandatory')
rsWSDURLCookies = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDURLCookies.setStatus('mandatory')
rsWSDURLTableLookupPrecedence = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 34, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("url", 1), ("fileType", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDURLTableLookupPrecedence.setStatus('mandatory')
rsWSDClientTableSizeThresh = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 64, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDClientTableSizeThresh.setStatus('mandatory')
rsWSDLogicServConnectLimitThresh = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 64, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDLogicServConnectLimitThresh.setStatus('mandatory')
rsWSDPhysServConnectLimitThresh = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 64, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDPhysServConnectLimitThresh.setStatus('mandatory')
rsWSDFarmCapacityLimitThresh = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 64, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmCapacityLimitThresh.setStatus('mandatory')
rsWSDServBandwidthLimitThresh = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 64, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDServBandwidthLimitThresh.setStatus('mandatory')
rsWSDFarmBandwidthLimitThresh = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 64, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmBandwidthLimitThresh.setStatus('mandatory')
rsWSDExtendedFarmTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 35), )
if mibBuilder.loadTexts: rsWSDExtendedFarmTable.setStatus('mandatory')
rsWSDExtendedFarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 35, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDExtendedFarmAddress"))
if mibBuilder.loadTexts: rsWSDExtendedFarmEntry.setStatus('mandatory')
rsWSDExtendedFarmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 35, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDExtendedFarmAddress.setStatus('mandatory')
rsWSDExtendedFarmHttpsType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 35, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("regular", 1), ("httpsonly", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDExtendedFarmHttpsType.setStatus('mandatory')
rsWSDConnCheckSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 35, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDConnCheckSecret.setStatus('mandatory')
rsWSDOverLoadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 35, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDOverLoadStatus.setStatus('mandatory')
rsWSDFarmURLCookies = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 35, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDFarmURLCookies.setStatus('mandatory')
rsWSDExtendedFarmNATRangeIPFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 35, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDExtendedFarmNATRangeIPFrom.setStatus('mandatory')
rsWSDNHRTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36), )
if mibBuilder.loadTexts: rsWSDNHRTable.setStatus('mandatory')
rsWSDNHREntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDNHRNHRIP"))
if mibBuilder.loadTexts: rsWSDNHREntry.setStatus('mandatory')
rsWSDNHRNHRIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDNHRNHRIP.setStatus('mandatory')
rsWSDNHRDestinationMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDNHRDestinationMAC.setStatus('mandatory')
rsWSDNHRSourceMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDNHRSourceMAC.setStatus('mandatory')
rsWSDNHRPhysicalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDNHRPhysicalPortNumber.setStatus('mandatory')
rsWSDNHRAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNHRAdminStatus.setStatus('mandatory')
rsWSDNHROperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDNHROperStatus.setStatus('mandatory')
rsWSDNHRPathHealthCheckIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNHRPathHealthCheckIP.setStatus('mandatory')
rsWSDNHRCheckMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ping", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNHRCheckMethod.setStatus('mandatory')
rsWSDNHRCheckInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNHRCheckInterval.setStatus('mandatory')
rsWSDNRHCheckRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNRHCheckRetries.setStatus('mandatory')
rsWSDNHRRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNHRRowStatus.setStatus('mandatory')
rsWSDNHRTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 36, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNHRTag.setStatus('mandatory')
rsWSDVIPNHRTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37), )
if mibBuilder.loadTexts: rsWSDVIPNHRTable.setStatus('mandatory')
rsWSDVIPNHREntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDVIPNHRVIP"))
if mibBuilder.loadTexts: rsWSDVIPNHREntry.setStatus('mandatory')
rsWSDVIPNHRVIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDVIPNHRVIP.setStatus('mandatory')
rsWSDVIPNHRNHRIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVIPNHRNHRIP.setStatus('mandatory')
rsWSDVIPNHRBackupNHRIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVIPNHRBackupNHRIP.setStatus('mandatory')
rsWSDVIPNHRNoRouteAction = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("discard", 1), ("useFFT", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVIPNHRNoRouteAction.setStatus('mandatory')
rsWSDVIPNHRRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVIPNHRRowStatus.setStatus('mandatory')
rsWSDVIPNHRNHRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVIPNHRNHRWeight.setStatus('mandatory')
rsWSDVIPNHRBackupWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVIPNHRBackupWeight.setStatus('mandatory')
rsWSDVIPNHRAdminLoadSharing = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 37, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVIPNHRAdminLoadSharing.setStatus('mandatory')
rsWSDTokenTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 38), )
if mibBuilder.loadTexts: rsWSDTokenTable.setStatus('mandatory')
rsWSDTokenTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 38, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDToken"))
if mibBuilder.loadTexts: rsWSDTokenTableEntry.setStatus('mandatory')
rsWSDToken = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 38, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDToken.setStatus('mandatory')
rsWSDTokenFarmMap = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 38, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDTokenFarmMap.setStatus('mandatory')
rsWSDTokenFarm = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 38, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDTokenFarm.setStatus('mandatory')
rsWSDTokenDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 38, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notDefault", 1), ("noToken", 2), ("noHeaderField", 3), ("alwaysDefault", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDTokenDefault.setStatus('mandatory')
rsWSDTokenStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 38, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDTokenStatus.setStatus('mandatory')
rsWSDVirtualDNSTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 39), )
if mibBuilder.loadTexts: rsWSDVirtualDNSTable.setStatus('mandatory')
rsWSDVirtualDNSTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 39, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDVirtualDNSAddress"))
if mibBuilder.loadTexts: rsWSDVirtualDNSTableEntry.setStatus('mandatory')
rsWSDVirtualDNSAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 39, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDVirtualDNSAddress.setStatus('mandatory')
rsWSDVirtualDNSRedunType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 39, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("backup", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVirtualDNSRedunType.setStatus('mandatory')
rsWSDVirtualDNSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 39, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDVirtualDNSStatus.setStatus('mandatory')
rsWSDClientNAT = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40))
rsWSDClientNATRangeTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 1), )
if mibBuilder.loadTexts: rsWSDClientNATRangeTable.setStatus('mandatory')
rsWSDClientNATRangeIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 1, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDClientNATRangeIPFrom"))
if mibBuilder.loadTexts: rsWSDClientNATRangeIPEntry.setStatus('mandatory')
rsWSDClientNATRangeIPFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDClientNATRangeIPFrom.setStatus('mandatory')
rsWSDClientNATRangeIPTo = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDClientNATRangeIPTo.setStatus('mandatory')
rsWSDClientNATRangeIPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDClientNATRangeIPStatus.setStatus('mandatory')
rsWSDNATRangeTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 2), )
if mibBuilder.loadTexts: rsWSDNATRangeTable.setStatus('mandatory')
rsWSDNATRangeIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 2, 1), ).setIndexNames((0, "WSD-MIB", "rsWSDNATRangeIPFrom"))
if mibBuilder.loadTexts: rsWSDNATRangeIPEntry.setStatus('mandatory')
rsWSDNATRangeIPFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsWSDNATRangeIPFrom.setStatus('mandatory')
rsWSDNATRangeIPTo = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNATRangeIPTo.setStatus('mandatory')
rsWSDNATRangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDNATRangeStatus.setStatus('mandatory')
rsWSDClientNATStatus = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 40, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDClientNATStatus.setStatus('mandatory')
rsWSDSessionChaining = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 40, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsWSDSessionChaining.setStatus('mandatory')
rsWSDTWTClientTableSize = NotificationType((1, 3, 6, 1, 4, 1, 89, 35, 1, 40) + (0,1)).setObjects(("RADWARE-MIB", "rndErrorDesc"), ("RADWARE-MIB", "rndErrorSeverity"))
rsWSDTWTLogicServConnectLimit = NotificationType((1, 3, 6, 1, 4, 1, 89, 35, 1, 40) + (0,2)).setObjects(("RADWARE-MIB", "rndErrorDesc"), ("RADWARE-MIB", "rndErrorSeverity"))
rsWSDTWTPhyServConnectLimit = NotificationType((1, 3, 6, 1, 4, 1, 89, 35, 1, 40) + (0,3)).setObjects(("RADWARE-MIB", "rndErrorDesc"), ("RADWARE-MIB", "rndErrorSeverity"))
rsWSDTWTFarmCapacityLimit = NotificationType((1, 3, 6, 1, 4, 1, 89, 35, 1, 40) + (0,4)).setObjects(("RADWARE-MIB", "rndErrorDesc"), ("RADWARE-MIB", "rndErrorSeverity"))
rsWSDTWTServBandwidthLimit = NotificationType((1, 3, 6, 1, 4, 1, 89, 35, 1, 40) + (0,5)).setObjects(("RADWARE-MIB", "rndErrorDesc"), ("RADWARE-MIB", "rndErrorSeverity"))
rsWSDTWTFarmBandwidthLimit = NotificationType((1, 3, 6, 1, 4, 1, 89, 35, 1, 40) + (0,6)).setObjects(("RADWARE-MIB", "rndErrorDesc"), ("RADWARE-MIB", "rndErrorSeverity"))
mibBuilder.exportSymbols("WSD-MIB", rsWSDSSFServerSrvrAddr=rsWSDSSFServerSrvrAddr, rsWSDCookieTable=rsWSDCookieTable, rsNWSDServerStatisticsFramesLoad=rsNWSDServerStatisticsFramesLoad, rsNWSDFarmStatisticsAddress=rsNWSDFarmStatisticsAddress, rsWSDTWTFarmBandwidthLimit=rsWSDTWTFarmBandwidthLimit, rsWSDCheckConnectivityMethod=rsWSDCheckConnectivityMethod, rsWSDServerName=rsWSDServerName, rsWSDFarmStatus=rsWSDFarmStatus, rsWSDExtendedFarmTable=rsWSDExtendedFarmTable, rsWSDProximityAgingPeriod=rsWSDProximityAgingPeriod, rsWSDMappingStatus=rsWSDMappingStatus, rsNWSDFarmStatisticsFramesRate=rsNWSDFarmStatisticsFramesRate, rsWSDSSFTable=rsWSDSSFTable, rsWSDTokenTable=rsWSDTokenTable, rsWSDSSFCheckMethod=rsWSDSSFCheckMethod, rsWSDPortFarmHeader=rsWSDPortFarmHeader, rsWSDSecondaryServerEntry=rsWSDSecondaryServerEntry, rsWSDVirtualDNSStatus=rsWSDVirtualDNSStatus, rsWSDConnCheckSecret=rsWSDConnCheckSecret, rsWSDNHRCheckMethod=rsWSDNHRCheckMethod, rsWSDFarmBandWidth=rsWSDFarmBandWidth, rsWSDURLSuperFarmTable=rsWSDURLSuperFarmTable, rsWSDBackupVirtualDNS=rsWSDBackupVirtualDNS, rsWSDReportStatus=rsWSDReportStatus, rsWSDProximityMainDNS=rsWSDProximityMainDNS, rsWSDCurrentNumberOfClients=rsWSDCurrentNumberOfClients, NetNumber=NetNumber, rsWSDTotalDNSReqCounter=rsWSDTotalDNSReqCounter, rsWSDNoSlashAfterGET=rsWSDNoSlashAfterGET, rsNWSDFarmStatisticsEntry=rsNWSDFarmStatisticsEntry, rsNWSDServerStatisticsAnsweredDNSReqCounter=rsNWSDServerStatisticsAnsweredDNSReqCounter, rsWSDTokenFarmMap=rsWSDTokenFarmMap, rsWSDNHRPhysicalPortNumber=rsWSDNHRPhysicalPortNumber, rsWSDPrxApplAwareCheckMethod=rsWSDPrxApplAwareCheckMethod, rsWSDVIPNHREntry=rsWSDVIPNHREntry, rsWSDHealthStatisticsPollingTime=rsWSDHealthStatisticsPollingTime, rsWSDMappingAdminStatus=rsWSDMappingAdminStatus, rsWSDTwoDNSAnswers=rsWSDTwoDNSAnswers, rsWSDdummy1=rsWSDdummy1, rsWSDProximityTimeout=rsWSDProximityTimeout, rsWSDExtendedCheckHostMode=rsWSDExtendedCheckHostMode, rsWSDProximityHopsWeight=rsWSDProximityHopsWeight, rsWSDSecondaryServerAddr=rsWSDSecondaryServerAddr, rsWSDTuning=rsWSDTuning, rsNWSDFarmStatisticsTable=rsNWSDFarmStatisticsTable, rsWSDSSFServerEntry=rsWSDSSFServerEntry, rsNWSDFarmStatisticsCapacityThresholdReached=rsNWSDFarmStatisticsCapacityThresholdReached, rsWSDNHRSourceMAC=rsWSDNHRSourceMAC, rsNWSDServerStatisticsEntry=rsNWSDServerStatisticsEntry, rsWSDPrxAdvancedCheckMethod=rsWSDPrxAdvancedCheckMethod, rsNWSDFarmStatisticsLocalTriangSessionsCounter=rsNWSDFarmStatisticsLocalTriangSessionsCounter, rsWSDStaticProximityServer1=rsWSDStaticProximityServer1, rsWSDNRHCheckRetries=rsWSDNRHCheckRetries, rsNWSDServerStatisticsFarmAddr=rsNWSDServerStatisticsFarmAddr, rsWSDConnCheckPassword=rsWSDConnCheckPassword, rsWSDAcceptableHTTPCodeStatus=rsWSDAcceptableHTTPCodeStatus, rsWSDExtendedFarmNATRangeIPFrom=rsWSDExtendedFarmNATRangeIPFrom, rsWSDClientTableSizeThresh=rsWSDClientTableSizeThresh, rsWSDReportDstIpAddress=rsWSDReportDstIpAddress, rsWSDSSFServerTable=rsWSDSSFServerTable, rsWSDExtendedConnectivityCheckInterval=rsWSDExtendedConnectivityCheckInterval, rsWSDClientNATRangeIPTo=rsWSDClientNATRangeIPTo, rsNWSDServerStatisticsRedirectedHTTPSessions=rsNWSDServerStatisticsRedirectedHTTPSessions, rsWSDTokenDefault=rsWSDTokenDefault, rsWSDFarmEntry=rsWSDFarmEntry, rsWSDNATRangeIPFrom=rsWSDNATRangeIPFrom, rsWSDCheckConnectivityStatus=rsWSDCheckConnectivityStatus, rsNWSDFarmStatisticsLocalTriangSessionsLastSecCounter=rsNWSDFarmStatisticsLocalTriangSessionsLastSecCounter, rsWSDReportRdnDstIpAddr=rsWSDReportRdnDstIpAddr, rsWSDExtendedFarmHttpsType=rsWSDExtendedFarmHttpsType, rsWSDAcceptableHTTPCode=rsWSDAcceptableHTTPCode, rsWSDNHRTable=rsWSDNHRTable, rsWSDTrackUDPSessionsMode=rsWSDTrackUDPSessionsMode, rsWSDServerOperMode=rsWSDServerOperMode, rsWSDURLFarmAddress=rsWSDURLFarmAddress, rsNWSDServerStatisticsFramesRateInBytes=rsNWSDServerStatisticsFramesRateInBytes, rsWSDTWTServBandwidthLimit=rsWSDTWTServBandwidthLimit, rsWSDNHROperStatus=rsWSDNHROperStatus, rsWSDVirtualDNSTableEntry=rsWSDVirtualDNSTableEntry, rsWSDVIPNHRBackupWeight=rsWSDVIPNHRBackupWeight, rsWSDProximityClientMode=rsWSDProximityClientMode, rsWSDNHREntry=rsWSDNHREntry, rsWSDClientsLifeTime=rsWSDClientsLifeTime, rsWSDCookieStatus=rsWSDCookieStatus, rsWSDSSFOperStatus=rsWSDSSFOperStatus, rsWSDFarmMappingEntry=rsWSDFarmMappingEntry, rsWSDFarmBandwidthLimitThresh=rsWSDFarmBandwidthLimitThresh, rsWSDServerClientNATStatus=rsWSDServerClientNATStatus, rsWSDMaxURLEntriesAfterReset=rsWSDMaxURLEntriesAfterReset, rsWSDApplicationServerEntry=rsWSDApplicationServerEntry, rsWSDTotalDNSReqLastSecCounter=rsWSDTotalDNSReqLastSecCounter, rsWSDPortFarmEntry=rsWSDPortFarmEntry, rsWSDLoadReportInterval=rsWSDLoadReportInterval, rsWSDStaticProximityRangeFrom=rsWSDStaticProximityRangeFrom, rsWSDCookieValue=rsWSDCookieValue, rsWSDHTTPContentCheckString=rsWSDHTTPContentCheckString, rsWSDSSFEntry=rsWSDSSFEntry, rsWSDSSFFarmEntry=rsWSDSSFFarmEntry, rsWSDAdminStatus=rsWSDAdminStatus, rsWSDProximityMirrorPercentage=rsWSDProximityMirrorPercentage, rsWSDServerFramesLoad=rsWSDServerFramesLoad, rsWSDMappingFarmAddress=rsWSDMappingFarmAddress, rsWSDServerRedirectTo=rsWSDServerRedirectTo, rsWSDServerPeakLoad=rsWSDServerPeakLoad, rsWSDFarmCapacityLimitThresh=rsWSDFarmCapacityLimitThresh, rsWSDProximityLatencyWeight=rsWSDProximityLatencyWeight, rsWSDMaxRequestEntriesTuning=rsWSDMaxRequestEntriesTuning, rsWSDURLCookies=rsWSDURLCookies, rsWSDdummy6=rsWSDdummy6, rsWSDProximityLoadWeight=rsWSDProximityLoadWeight, rsWSDdummy4=rsWSDdummy4, rsWSDPortNumber=rsWSDPortNumber, rsWSDTWTFarmCapacityLimit=rsWSDTWTFarmCapacityLimit, rsNWSDFarmStatisticsTotalDNSReqLastSecCounter=rsNWSDFarmStatisticsTotalDNSReqLastSecCounter, rsWSDStatisticsDstIpAddr=rsWSDStatisticsDstIpAddr, rsWSDSSFFarmStatus=rsWSDSSFFarmStatus, rsWSDStaticProximityServer2=rsWSDStaticProximityServer2, rsWSDPhysServConnectLimitThresh=rsWSDPhysServConnectLimitThresh, rsWSDFramesLoadInBytes=rsWSDFramesLoadInBytes, rsWSDSSFServerId=rsWSDSSFServerId, rsNWSDFarmStatisticsRedirectedHTTPSessionsCounter=rsNWSDFarmStatisticsRedirectedHTTPSessionsCounter, rsWSDClientNATRangeIPStatus=rsWSDClientNATRangeIPStatus, rsNWSDFarmStatisticsRedirectedHTTPSessionsLastSecCounter=rsNWSDFarmStatisticsRedirectedHTTPSessionsLastSecCounter, rsWSDServerConnectionLimit=rsWSDServerConnectionLimit, rsWSDMaxURLEntries=rsWSDMaxURLEntries, rsWSDReportLclSuperFarmAddr=rsWSDReportLclSuperFarmAddr, rsNWSDFarmStatisticsLocalHTTPSessionsCounter=rsNWSDFarmStatisticsLocalHTTPSessionsCounter, rsWSDServerOperStatus=rsWSDServerOperStatus, rsWSDApplicationServersTable=rsWSDApplicationServersTable, rsNWSDFarmStatisticsAttachedUsersNumber=rsNWSDFarmStatisticsAttachedUsersNumber, rsWSDSSFFarmTable=rsWSDSSFFarmTable, rsWSDFarmTrafficThreshold=rsWSDFarmTrafficThreshold, rsWSDClientNATStatus=rsWSDClientNATStatus, rsWSDNHRRowStatus=rsWSDNHRRowStatus, rsWSDServerAddr=rsWSDServerAddr, rsNWSDFarmStatisticsBackupServerUsed=rsNWSDFarmStatisticsBackupServerUsed, rsWSDDispatchMethod=rsWSDDispatchMethod, rsWSDAnsweredDNSReqCounter=rsWSDAnsweredDNSReqCounter, rsWSDLoadReportTable=rsWSDLoadReportTable, rsWSDURLTableLookupPrecedence=rsWSDURLTableLookupPrecedence, rsWSDAddr=rsWSDAddr, rsWSDPrxApplIndpndCheckMethod=rsWSDPrxApplIndpndCheckMethod, rsNWSDProximity=rsNWSDProximity, rsWSDClientEntry=rsWSDClientEntry, rsWSDTWTClientTableSize=rsWSDTWTClientTableSize, rsWSDVirtualDNSTable=rsWSDVirtualDNSTable, rsWSDSecondaryServerOperStatus=rsWSDSecondaryServerOperStatus, rsWSDTokenFarm=rsWSDTokenFarm, rsWSDClientType=rsWSDClientType, rsWSDUserDefinedTimeoutAfterTCPFailure=rsWSDUserDefinedTimeoutAfterTCPFailure, rsNWSDStats=rsNWSDStats, rsNsdFarmRegister=rsNsdFarmRegister, rsWSDFarmHttpRedirectionMode=rsWSDFarmHttpRedirectionMode, rsWSDSSFCheckCommunity=rsWSDSSFCheckCommunity, rsWSDClientsTable=rsWSDClientsTable, rsWSDNHRTag=rsWSDNHRTag, rsWSDProximityTuning=rsWSDProximityTuning, rsWSDLoadReportTimeout=rsWSDLoadReportTimeout, rsNWSDFarmStatisticsDistThresholdReached=rsNWSDFarmStatisticsDistThresholdReached, rsWSDHTTPContentCheckMode=rsWSDHTTPContentCheckMode, rsWSDTWTLogicServConnectLimit=rsWSDTWTLogicServConnectLimit, rsNWSDFarmStatisticsTotalHTTPSessionsLastSecCounter=rsNWSDFarmStatisticsTotalHTTPSessionsLastSecCounter, rsWSDLoadReportEntry=rsWSDLoadReportEntry, rsWSDStaticProximityEntry=rsWSDStaticProximityEntry, rsWSDFarmDistThreshold=rsWSDFarmDistThreshold, rsWSDAllowAnyAppPortForCookies=rsWSDAllowAnyAppPortForCookies, rsWSDTotalNumberOfClients=rsWSDTotalNumberOfClients, rsWSDClientsConnectDenials=rsWSDClientsConnectDenials, rsWSDClientNATRangeIPEntry=rsWSDClientNATRangeIPEntry, rsWSDMaxSSLEntriesTuning=rsWSDMaxSSLEntriesTuning, rsWSDTweaks=rsWSDTweaks, rsWSDSSFServerSSFName=rsWSDSSFServerSSFName, rsWSDFarmOperStatus=rsWSDFarmOperStatus, rsWSDStatisticsReportingMode=rsWSDStatisticsReportingMode, rsNWSDFarmStatisticsLocalHTTPSessionsLastSecCounter=rsNWSDFarmStatisticsLocalHTTPSessionsLastSecCounter, rsWSDTokenTableEntry=rsWSDTokenTableEntry, rsWSDMaxDynEntries=rsWSDMaxDynEntries, rsWSDAttachedServerAddr=rsWSDAttachedServerAddr, rsWSDDNSttl=rsWSDDNSttl, rsWSDClientNATRangeTable=rsWSDClientNATRangeTable, rsWSDServerAdminStatus=rsWSDServerAdminStatus, rsWSDVIPNHRRowStatus=rsWSDVIPNHRRowStatus, rsNWSDServerStatisticsRedirectedTriangSessions=rsNWSDServerStatisticsRedirectedTriangSessions, rsWSDTWTPhyServConnectLimit=rsWSDTWTPhyServConnectLimit, rsWSDFarmMode=rsWSDFarmMode, rsWSDSecondaryServerTable=rsWSDSecondaryServerTable, rsWSDReportFarmAddress=rsWSDReportFarmAddress, rsWSDSSFStatus=rsWSDSSFStatus, rsNWSDServerStatisticsServerAddr=rsNWSDServerStatisticsServerAddr, rsWSDFarmClientMode=rsWSDFarmClientMode, rsWSDConnCheckUserName=rsWSDConnCheckUserName, rsWSDMaintainURLSFPersistency=rsWSDMaintainURLSFPersistency, rsWSDHTTPContentCheckTable=rsWSDHTTPContentCheckTable, rsNWSDServerStatisticsAnsweredDNSReqLastSecCounter=rsNWSDServerStatisticsAnsweredDNSReqLastSecCounter, rsNWSDFarmStatisticsRedirectedTriangSessionsCounter=rsNWSDFarmStatisticsRedirectedTriangSessionsCounter, rsWSDCheckConnectivityRetries=rsWSDCheckConnectivityRetries, rsWSDdummy3=rsWSDdummy3, rsWSDNHRNHRIP=rsWSDNHRNHRIP, rsNWSDServerStatisticsPeakLoad=rsNWSDServerStatisticsPeakLoad, rsWSDClientTableFilledUp=rsWSDClientTableFilledUp, rsWSDHTTPContentCheckStatus=rsWSDHTTPContentCheckStatus, rsWSDOverLoadStatus=rsWSDOverLoadStatus, rsWSDExtendedFarmAddress=rsWSDExtendedFarmAddress, rsWSDNATRangeIPEntry=rsWSDNATRangeIPEntry, rsWSDExtendedLRPSecurity=rsWSDExtendedLRPSecurity, rsWSDSSFFarmId=rsWSDSSFFarmId, rsNWSDServerStatisticsAttachedUsersNumber=rsNWSDServerStatisticsAttachedUsersNumber, rsWSDMaxDynEntriesAfterReset=rsWSDMaxDynEntriesAfterReset, rsWSDSSFName=rsWSDSSFName, rsWSDProximityMirrorPollingTime=rsWSDProximityMirrorPollingTime, rsWSDNHRDestinationMAC=rsWSDNHRDestinationMAC, rsWSDBadDNSReqLastSecCounter=rsWSDBadDNSReqLastSecCounter, rsWSDNATRangeStatus=rsWSDNATRangeStatus, rsNWSDFarmStatisticsTotalDNSReqCounter=rsNWSDFarmStatisticsTotalDNSReqCounter, rsWSDFarmName=rsWSDFarmName, rsWSDFarmRedirectionMode=rsWSDFarmRedirectionMode, rsWSDAcceptableHTTPCodeEntry=rsWSDAcceptableHTTPCodeEntry, rsWSDStaticProximityServer3=rsWSDStaticProximityServer3, rsWSDServerWeight=rsWSDServerWeight, rsWSDServerCckID=rsWSDServerCckID, rsWSDLogicServConnectLimitThresh=rsWSDLogicServConnectLimitThresh, rsWSDTokenStatus=rsWSDTokenStatus, rsNWSDFarmStatisticsTotalTriangSessionsLastSecCounter=rsNWSDFarmStatisticsTotalTriangSessionsLastSecCounter, rsWSDTimeoutForSYN=rsWSDTimeoutForSYN, rsWSDMappingAddress=rsWSDMappingAddress, rsWSDStaticProximityFarmAddress=rsWSDStaticProximityFarmAddress, rsNWSDFarmStatisticsTotalHTTPSessionsCounter=rsNWSDFarmStatisticsTotalHTTPSessionsCounter, rsWSDRedundancyTakeOver=rsWSDRedundancyTakeOver, rsWSDStaticProximityRangeTo=rsWSDStaticProximityRangeTo, rsWSDCheckConnectivityInterval=rsWSDCheckConnectivityInterval, rsNWSDServerStatisticsTable=rsNWSDServerStatisticsTable, rsWSDURLSuperFarmEntry=rsWSDURLSuperFarmEntry, rsWSDClientLastActivityTime=rsWSDClientLastActivityTime, rsWSDPrxBasicCheckMethod=rsWSDPrxBasicCheckMethod, rsWSDSSFCheckInterval=rsWSDSSFCheckInterval, rsWSDClientStatus=rsWSDClientStatus, rsWSDCookieFarm=rsWSDCookieFarm, rsWSDClientAttachmentTime=rsWSDClientAttachmentTime, rsNWSDServerStatisticsRedirectedTriangSessionsLastSecCount=rsNWSDServerStatisticsRedirectedTriangSessionsLastSecCount, rsWSDMaxSSLEntries=rsWSDMaxSSLEntries, RowStatus=RowStatus, rsWSDClientAddr=rsWSDClientAddr, TruthValue=TruthValue, rsNWSDServerStatisticsFramesRate=rsNWSDServerStatisticsFramesRate, rsWSDSrcPortInClientHash=rsWSDSrcPortInClientHash, rsWSDSSFCheckRetries=rsWSDSSFCheckRetries, rsWSDNHRAdminStatus=rsWSDNHRAdminStatus, rsWSDSecondaryServerId=rsWSDSecondaryServerId, rsWSDAcceptableHTTPCodesTable=rsWSDAcceptableHTTPCodesTable, rsWSDSpecificNATAddress=rsWSDSpecificNATAddress, rsWSDURLStatus=rsWSDURLStatus, rsWSDBadDNSReqCounter=rsWSDBadDNSReqCounter, rsWSDSSFServerFarmAddr=rsWSDSSFServerFarmAddr, rsWSDVIPNHRNHRWeight=rsWSDVIPNHRNHRWeight)
mibBuilder.exportSymbols("WSD-MIB", rsWSDNATRangeTable=rsWSDNATRangeTable, rsWSDExtendedFarmEntry=rsWSDExtendedFarmEntry, rsWSDNATRangeIPTo=rsWSDNATRangeIPTo, rsWSDDynamicProximityTableFilledUp=rsWSDDynamicProximityTableFilledUp, rsWSDSessionChaining=rsWSDSessionChaining, rsNWSDFarmStatisticsTotalAttachedUsersNumber=rsNWSDFarmStatisticsTotalAttachedUsersNumber, rsWSDPortFarmStatus=rsWSDPortFarmStatus, rsWSDMainVirtualDNS=rsWSDMainVirtualDNS, rsWSDNHRPathHealthCheckIP=rsWSDNHRPathHealthCheckIP, rsNWSDServerStatisticsConnectionLimitReached=rsNWSDServerStatisticsConnectionLimitReached, rsNWSDFarmStatisticsRedirectedTriangSessionsLastSecCounter=rsNWSDFarmStatisticsRedirectedTriangSessionsLastSecCounter, rsWSDReportDstSuperFarmAddr=rsWSDReportDstSuperFarmAddr, rsWSDProximity=rsWSDProximity, rsNWSDFarmStatisticsTotalTriangSessionsCounter=rsNWSDFarmStatisticsTotalTriangSessionsCounter, rsWSDMaxRequestEntries=rsWSDMaxRequestEntries, rsWSDPortFarmTable=rsWSDPortFarmTable, rsNWSDFarmStatisticsLocalyAnsweredDNSReqCounter=rsNWSDFarmStatisticsLocalyAnsweredDNSReqCounter, rsWSDHTTPContentCheckFarm=rsWSDHTTPContentCheckFarm, rsNWSDFarmStatisticsRedirectedDNSReqLastSecCounter=rsNWSDFarmStatisticsRedirectedDNSReqLastSecCounter, rsWSDClientGroupingMask=rsWSDClientGroupingMask, rsWSDMaxRequestEntriesAfterReset=rsWSDMaxRequestEntriesAfterReset, rsWSDVirtualDNSAddress=rsWSDVirtualDNSAddress, rsWSDClientNAT=rsWSDClientNAT, rsWSDCookieServer=rsWSDCookieServer, rsWSDConnectivityCheckUrl=rsWSDConnectivityCheckUrl, rsNWSDServerStatisticsFramesLoadInBytes=rsNWSDServerStatisticsFramesLoadInBytes, rsWSDReportDstFarmAddress=rsWSDReportDstFarmAddress, rsWSDToken=rsWSDToken, rsNWSDFarmStatisticsRedirectedDNSReqCounter=rsNWSDFarmStatisticsRedirectedDNSReqCounter, rsWSDSSFFarmSSFName=rsWSDSSFFarmSSFName, rsWSDServerType=rsWSDServerType, rsWSDSSFId=rsWSDSSFId, rsWSDSSFFarmAddr=rsWSDSSFFarmAddr, rsWSDHTTPContentCheckEntry=rsWSDHTTPContentCheckEntry, rsWSDVIPNHRBackupNHRIP=rsWSDVIPNHRBackupNHRIP, rsWSDStaticProximityTable=rsWSDStaticProximityTable, rsWSDFarmAddress=rsWSDFarmAddress, rsWSDClientNATRangeIPFrom=rsWSDClientNATRangeIPFrom, rsWSDAcceptableHTTPCodeFarm=rsWSDAcceptableHTTPCodeFarm, rsWSDServerBandWidth=rsWSDServerBandWidth, rsWSDProximityRetries=rsWSDProximityRetries, rsNWSDFarmStatisticsLocalyAnsweredDNSReqLastSecCounter=rsNWSDFarmStatisticsLocalyAnsweredDNSReqLastSecCounter, rsWSDOriginalAddress=rsWSDOriginalAddress, rsWSDVIPNHRNoRouteAction=rsWSDVIPNHRNoRouteAction, rsWSDVirtualDNSRedunType=rsWSDVirtualDNSRedunType, rsWSDMultiplexedServerPort=rsWSDMultiplexedServerPort, rsNWSDFarmStatisticsPeakLoad=rsNWSDFarmStatisticsPeakLoad, rsNWSDFarmStatisticsFramesLoad=rsNWSDFarmStatisticsFramesLoad, rsWSDdummy7=rsWSDdummy7, rsWSDDNSRedir2ndMode=rsWSDDNSRedir2ndMode, rsWSDMultiplexedFarmPort=rsWSDMultiplexedFarmPort, rsWSDFarmURLCookies=rsWSDFarmURLCookies, rsWSDFarmCookieKey=rsWSDFarmCookieKey, rsWSDMaxURLEntriesTuning=rsWSDMaxURLEntriesTuning, rsWSDSSFMode=rsWSDSSFMode, rsWSDSSFCheckPort=rsWSDSSFCheckPort, rsWSDSSFServerStatus=rsWSDSSFServerStatus, rsNWSDServerStatisticsTotalAttachedUsersNumber=rsNWSDServerStatisticsTotalAttachedUsersNumber, rsWSDPortFarmAddress=rsWSDPortFarmAddress, rsWSDCookieTableEntry=rsWSDCookieTableEntry, rsWSDServerFramesRate=rsWSDServerFramesRate, rsWSDPortMainAddress=rsWSDPortMainAddress, rsWSDTrackSSLIDinSelectServerMode=rsWSDTrackSSLIDinSelectServerMode, rsWSDRedundancyFailed=rsWSDRedundancyFailed, rsWSDAnsweredDNSReqLastSecCounter=rsWSDAnsweredDNSReqLastSecCounter, rsWSDURL=rsWSDURL, rsWSDServBandwidthLimitThresh=rsWSDServBandwidthLimitThresh, rsWSDMaxSSLEntriesAfterReset=rsWSDMaxSSLEntriesAfterReset, rsWSDSecondaryServerStatus=rsWSDSecondaryServerStatus, rsWSDProximityMirrorProtocolMode=rsWSDProximityMirrorProtocolMode, rsWSDFarmAddr=rsWSDFarmAddr, rsWSDFarmMappingTable=rsWSDFarmMappingTable, rsWSDGeneralStatisticsPollingTime=rsWSDGeneralStatisticsPollingTime, rsNWSDServerStatisticsConnectivityCheckFailed=rsNWSDServerStatisticsConnectivityCheckFailed, rsWSDServerAttachedUsersNumber=rsWSDServerAttachedUsersNumber, rsWSDStaticProximityStatus=rsWSDStaticProximityStatus, rsWSDReportMapFarmAddress=rsWSDReportMapFarmAddress, rsWSDFarmTable=rsWSDFarmTable, rsWSDProximityBackupDNS=rsWSDProximityBackupDNS, rsNWSDFarmStatisticsFramesRateInBytes=rsNWSDFarmStatisticsFramesRateInBytes, rsWSDNHRCheckInterval=rsWSDNHRCheckInterval, rsWSDVIPNHRNHRIP=rsWSDVIPNHRNHRIP, rsWSDVIPNHRAdminLoadSharing=rsWSDVIPNHRAdminLoadSharing, rsWSDdummy10=rsWSDdummy10, rsWSDProximityOperationMode=rsWSDProximityOperationMode, rsWSDServerStatus=rsWSDServerStatus, rsNWSDFarmStatisticsFramesLoadInBytes=rsNWSDFarmStatisticsFramesLoadInBytes, rsWSDSecondaryServerSSFName=rsWSDSecondaryServerSSFName, rsWSDVIPNHRTable=rsWSDVIPNHRTable, rsNWSDServerStatisticsRedirectedHTTPSessionsLastSecCounter=rsNWSDServerStatisticsRedirectedHTTPSessionsLastSecCounter, rsWSDVIPNHRVIP=rsWSDVIPNHRVIP)
