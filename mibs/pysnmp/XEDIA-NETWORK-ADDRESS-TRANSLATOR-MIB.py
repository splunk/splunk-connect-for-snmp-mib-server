#
# PySNMP MIB module XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:36:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, MibIdentifier, ObjectIdentity, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, Counter64, ModuleIdentity, Integer32, Unsigned32, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibIdentifier", "ObjectIdentity", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "Counter64", "ModuleIdentity", "Integer32", "Unsigned32", "iso", "Bits")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
xediaMibs, = mibBuilder.importSymbols("XEDIA-REG", "xediaMibs")
xediaNetworkAddressTranslatorMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 838, 3, 23))
if mibBuilder.loadTexts: xediaNetworkAddressTranslatorMIB.setLastUpdated('9805252155Z')
if mibBuilder.loadTexts: xediaNetworkAddressTranslatorMIB.setOrganization('Xedia Corp.')
xnatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 23, 1))
xnatConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 23, 2))
class XnatIpAddress(TextualConvention, IpAddress):
    status = 'current'

class XnatPort(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class XnatCounter(TextualConvention, Counter32):
    status = 'current'
    displayHint = 'd'

class XnatTimeout(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 86400)

class XnatProtocol(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'

class XnatSessionType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("inbound", 0), ("outbound", 1))

class XnatBindingType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("dynamic", 0), ("static", 1), ("loadshare", 2))

xnatGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 1))
xnatAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatAdminStatus.setStatus('current')
xnatMaxIboundSessions = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatMaxIboundSessions.setStatus('current')
xnatMaxOboundSessions = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatMaxOboundSessions.setStatus('current')
xnatCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2))
xnatOboundPackets = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 1), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatOboundPackets.setStatus('current')
xnatOboundIcmp = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 2), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatOboundIcmp.setStatus('current')
xnatOboundTcp = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 3), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatOboundTcp.setStatus('current')
xnatOboundUdp = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 4), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatOboundUdp.setStatus('current')
xnatOboundUntranslated = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 5), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatOboundUntranslated.setStatus('current')
xnatOboundDiscards = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 6), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatOboundDiscards.setStatus('current')
xnatIboundPackets = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 7), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatIboundPackets.setStatus('current')
xnatIboundIcmp = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 8), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatIboundIcmp.setStatus('current')
xnatIboundTcp = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 9), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatIboundTcp.setStatus('current')
xnatIboundUdp = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 10), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatIboundUdp.setStatus('current')
xnatIboundUntranslated = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 11), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatIboundUntranslated.setStatus('current')
xnatIboundDiscards = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 2, 12), XnatCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatIboundDiscards.setStatus('current')
xnatTimers = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 3))
xnatUdpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 3, 1), XnatTimeout().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatUdpTimeout.setStatus('current')
xnatDnsTimeout = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 3, 2), XnatTimeout().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatDnsTimeout.setStatus('current')
xnatTcpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 3, 3), XnatTimeout().clone(86400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatTcpTimeout.setStatus('current')
xnatFinRstTimeout = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 3, 4), XnatTimeout().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatFinRstTimeout.setStatus('current')
xnatSynTimeout = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 3, 5), XnatTimeout().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatSynTimeout.setStatus('current')
xnatIcmpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 3, 6), XnatTimeout().clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatIcmpTimeout.setStatus('current')
xnatSessionTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4), )
if mibBuilder.loadTexts: xnatSessionTable.setStatus('current')
xnatSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionPriAddr"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionPriPort"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionOutAddr"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionOutPort"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionProtocol"))
if mibBuilder.loadTexts: xnatSessionEntry.setStatus('current')
xnatSessionPriAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 1), XnatIpAddress())
if mibBuilder.loadTexts: xnatSessionPriAddr.setStatus('current')
xnatSessionPriPort = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 2), XnatPort())
if mibBuilder.loadTexts: xnatSessionPriPort.setStatus('current')
xnatSessionRegAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 3), XnatIpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatSessionRegAddr.setStatus('current')
xnatSessionRegPort = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 4), XnatPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatSessionRegPort.setStatus('current')
xnatSessionOutAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 5), XnatIpAddress())
if mibBuilder.loadTexts: xnatSessionOutAddr.setStatus('current')
xnatSessionOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 6), XnatPort())
if mibBuilder.loadTexts: xnatSessionOutPort.setStatus('current')
xnatSessionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 7), XnatProtocol())
if mibBuilder.loadTexts: xnatSessionProtocol.setStatus('current')
xnatSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 8), XnatSessionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatSessionType.setStatus('current')
xnatSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 4, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xnatSessionRowStatus.setStatus('current')
xnatBindingTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5), )
if mibBuilder.loadTexts: xnatBindingTable.setStatus('current')
xnatBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingPriAddr"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingPriPort"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingRegAddr"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingRegPort"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingProtocol"))
if mibBuilder.loadTexts: xnatBindingEntry.setStatus('current')
xnatBindingPriAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 1), XnatIpAddress())
if mibBuilder.loadTexts: xnatBindingPriAddr.setStatus('current')
xnatBindingPriPort = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 2), XnatPort())
if mibBuilder.loadTexts: xnatBindingPriPort.setStatus('current')
xnatBindingRegAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 3), XnatIpAddress())
if mibBuilder.loadTexts: xnatBindingRegAddr.setStatus('current')
xnatBindingRegPort = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 4), XnatPort())
if mibBuilder.loadTexts: xnatBindingRegPort.setStatus('current')
xnatBindingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 5), XnatProtocol())
if mibBuilder.loadTexts: xnatBindingProtocol.setStatus('current')
xnatBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 6), XnatBindingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatBindingType.setStatus('current')
xnatBindingInSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatBindingInSessions.setStatus('current')
xnatBindingOutSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatBindingOutSessions.setStatus('current')
xnatBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 5, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatBindingRowStatus.setStatus('current')
xnatPools = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6))
xnatDynamicNatPoolTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 1), )
if mibBuilder.loadTexts: xnatDynamicNatPoolTable.setStatus('current')
xnatDynamicNatPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 1, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolName"))
if mibBuilder.loadTexts: xnatDynamicNatPoolEntry.setStatus('current')
xnatDynNatPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 1, 1, 1), DisplayString())
if mibBuilder.loadTexts: xnatDynNatPoolName.setStatus('current')
xnatDynNatPoolRangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatDynNatPoolRangeCount.setStatus('current')
xnatDynNatPoolNetAssgns = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatDynNatPoolNetAssgns.setStatus('current')
xnatDynNatPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNatPoolRowStatus.setStatus('current')
xnatDynamicNatPoolRangeTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 2), )
if mibBuilder.loadTexts: xnatDynamicNatPoolRangeTable.setStatus('current')
xnatDynamicNatPoolRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 2, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolRangeName"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolRangeBeg"))
if mibBuilder.loadTexts: xnatDynamicNatPoolRangeEntry.setStatus('current')
xnatDynNatPoolRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 2, 1, 1), DisplayString())
if mibBuilder.loadTexts: xnatDynNatPoolRangeName.setStatus('current')
xnatDynNatPoolRangeBeg = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 2, 1, 2), XnatIpAddress())
if mibBuilder.loadTexts: xnatDynNatPoolRangeBeg.setStatus('current')
xnatDynNatPoolRangeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 2, 1, 3), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNatPoolRangeEnd.setStatus('current')
xnatDynNatPoolRangeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 2, 1, 4), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNatPoolRangeMask.setStatus('current')
xnatDynNatPoolRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNatPoolRangeRowStatus.setStatus('current')
xnatDynamicNaptPoolTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3), )
if mibBuilder.loadTexts: xnatDynamicNaptPoolTable.setStatus('current')
xnatDynamicNaptPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNaptPoolName"))
if mibBuilder.loadTexts: xnatDynamicNaptPoolEntry.setStatus('current')
xnatDynNaptPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3, 1, 1), DisplayString())
if mibBuilder.loadTexts: xnatDynNaptPoolName.setStatus('current')
xnatDynNaptPoolAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3, 1, 2), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNaptPoolAddr.setStatus('current')
xnatDynNaptPoolMask = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3, 1, 3), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNaptPoolMask.setStatus('current')
xnatDynNaptPoolRangeBeg = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3, 1, 4), XnatPort().clone(20000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNaptPoolRangeBeg.setStatus('current')
xnatDynNaptPoolRangeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3, 1, 5), XnatPort().clone(24095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNaptPoolRangeEnd.setStatus('current')
xnatDynNaptPoolNetAssgns = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatDynNaptPoolNetAssgns.setStatus('current')
xnatDynNaptPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatDynNaptPoolRowStatus.setStatus('current')
xnatLoadSharePoolTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4), )
if mibBuilder.loadTexts: xnatLoadSharePoolTable.setStatus('current')
xnatLoadSharePoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolName"))
if mibBuilder.loadTexts: xnatLoadSharePoolEntry.setStatus('current')
xnatLoadSharePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4, 1, 1), DisplayString())
if mibBuilder.loadTexts: xnatLoadSharePoolName.setStatus('current')
xnatLoadSharePoolAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4, 1, 2), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolAddr.setStatus('current')
xnatLoadSharePoolMask = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4, 1, 3), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolMask.setStatus('current')
xnatLoadSharePoolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4, 1, 4), XnatPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolPort.setStatus('current')
xnatLoadSharePoolProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4, 1, 5), XnatProtocol()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolProtocol.setStatus('current')
xnatLoadSharePoolRangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatLoadSharePoolRangeCount.setStatus('current')
xnatLoadSharePoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 4, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolRowStatus.setStatus('current')
xnatLoadSharePoolRangeTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5), )
if mibBuilder.loadTexts: xnatLoadSharePoolRangeTable.setStatus('current')
xnatLoadSharePoolRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRangeName"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRangeBeg"))
if mibBuilder.loadTexts: xnatLoadSharePoolRangeEntry.setStatus('current')
xnatLoadSharePoolRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5, 1, 1), DisplayString())
if mibBuilder.loadTexts: xnatLoadSharePoolRangeName.setStatus('current')
xnatLoadSharePoolRangeBeg = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5, 1, 2), XnatIpAddress())
if mibBuilder.loadTexts: xnatLoadSharePoolRangeBeg.setStatus('current')
xnatLoadSharePoolRangeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5, 1, 3), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolRangeEnd.setStatus('current')
xnatLoadSharePoolRangeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5, 1, 4), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolRangeMask.setStatus('current')
xnatLoadSharePoolRangePort = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5, 1, 5), XnatPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolRangePort.setStatus('current')
xnatLoadSharePoolRangeProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5, 1, 6), XnatProtocol()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolRangeProtocol.setStatus('current')
xnatLoadSharePoolRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 6, 5, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatLoadSharePoolRangeRowStatus.setStatus('current')
xnatPrivateNetTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 7), )
if mibBuilder.loadTexts: xnatPrivateNetTable.setStatus('current')
xnatPrivateNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 7, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPrivateNetAddr"))
if mibBuilder.loadTexts: xnatPrivateNetEntry.setStatus('current')
xnatPrivateNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 7, 1, 1), XnatIpAddress())
if mibBuilder.loadTexts: xnatPrivateNetAddr.setStatus('current')
xnatPrivateNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 7, 1, 2), XnatIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatPrivateNetMask.setStatus('current')
xnatPrivateNetPoolCount = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatPrivateNetPoolCount.setStatus('current')
xnatPrivateNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatPrivateNetRowStatus.setStatus('current')
xnatPriNetAssoPoolTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 8), )
if mibBuilder.loadTexts: xnatPriNetAssoPoolTable.setStatus('current')
xnatPriNetAssoPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 8, 1), ).setIndexNames((0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPriNetAssoPoolNetAddr"), (0, "XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPriNetAssoPoolName"))
if mibBuilder.loadTexts: xnatPriNetAssoPoolEntry.setStatus('current')
xnatPriNetAssoPoolNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 8, 1, 1), XnatIpAddress())
if mibBuilder.loadTexts: xnatPriNetAssoPoolNetAddr.setStatus('current')
xnatPriNetAssoPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 8, 1, 2), DisplayString())
if mibBuilder.loadTexts: xnatPriNetAssoPoolName.setStatus('current')
xnatPriNetAssoPoolOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xnatPriNetAssoPoolOrder.setStatus('current')
xnatPriNetAssoPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 23, 1, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xnatPriNetAssoPoolRowStatus.setStatus('current')
xnatCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 1))
xnatGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2))
xnatCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 1, 1)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatGeneralGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatTimersGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynamicNatPoolGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynamicNatRangeGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynamicNaptPoolGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadShareRangeGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPrivateNetGroup"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPriNetAssoPoolGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatCompliance = xnatCompliance.setStatus('current')
xnatGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 1)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatAdminStatus"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatMaxIboundSessions"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatMaxOboundSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatGeneralGroup = xnatGeneralGroup.setStatus('current')
xnatCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 2)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatOboundPackets"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatOboundIcmp"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatOboundTcp"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatOboundUdp"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatOboundUntranslated"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatOboundDiscards"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatIboundPackets"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatIboundIcmp"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatIboundTcp"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatIboundUdp"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatIboundUntranslated"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatIboundDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatCountersGroup = xnatCountersGroup.setStatus('current')
xnatTimersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 3)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatUdpTimeout"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDnsTimeout"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatTcpTimeout"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatFinRstTimeout"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSynTimeout"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatIcmpTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatTimersGroup = xnatTimersGroup.setStatus('current')
xnatSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 4)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionRegAddr"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionRegPort"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionType"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatSessionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatSessionGroup = xnatSessionGroup.setStatus('current')
xnatBindingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 5)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingType"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingInSessions"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingOutSessions"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatBindingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatBindingGroup = xnatBindingGroup.setStatus('current')
xnatDynamicNatPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 6)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolRangeCount"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolNetAssgns"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatDynamicNatPoolGroup = xnatDynamicNatPoolGroup.setStatus('current')
xnatDynamicNatRangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 7)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolRangeEnd"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolRangeMask"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNatPoolRangeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatDynamicNatRangeGroup = xnatDynamicNatRangeGroup.setStatus('current')
xnatDynamicNaptPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 8)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNaptPoolAddr"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNaptPoolMask"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNaptPoolRangeBeg"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNaptPoolRangeEnd"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNaptPoolNetAssgns"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatDynNaptPoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatDynamicNaptPoolGroup = xnatDynamicNaptPoolGroup.setStatus('current')
xnatLoadSharePoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 9)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolAddr"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolMask"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolPort"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolProtocol"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRangeCount"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatLoadSharePoolGroup = xnatLoadSharePoolGroup.setStatus('current')
xnatLoadShareRangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 10)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRangeEnd"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRangeMask"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRangePort"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRangeProtocol"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatLoadSharePoolRangeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatLoadShareRangeGroup = xnatLoadShareRangeGroup.setStatus('current')
xnatPrivateNetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 11)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPrivateNetMask"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPrivateNetRowStatus"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPrivateNetPoolCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatPrivateNetGroup = xnatPrivateNetGroup.setStatus('current')
xnatPriNetAssoPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 23, 2, 2, 12)).setObjects(("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPriNetAssoPoolOrder"), ("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", "xnatPriNetAssoPoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xnatPriNetAssoPoolGroup = xnatPriNetAssoPoolGroup.setStatus('current')
mibBuilder.exportSymbols("XEDIA-NETWORK-ADDRESS-TRANSLATOR-MIB", xnatSessionGroup=xnatSessionGroup, xnatIboundUdp=xnatIboundUdp, xnatDynNaptPoolName=xnatDynNaptPoolName, xnatMaxOboundSessions=xnatMaxOboundSessions, xnatConformance=xnatConformance, xnatSessionOutPort=xnatSessionOutPort, xnatDynNatPoolRangeName=xnatDynNatPoolRangeName, xnatPriNetAssoPoolRowStatus=xnatPriNetAssoPoolRowStatus, xnatUdpTimeout=xnatUdpTimeout, xnatTimers=xnatTimers, xnatPriNetAssoPoolEntry=xnatPriNetAssoPoolEntry, xnatTimersGroup=xnatTimersGroup, xnatDnsTimeout=xnatDnsTimeout, xnatPrivateNetAddr=xnatPrivateNetAddr, xnatBindingProtocol=xnatBindingProtocol, xnatDynNaptPoolRowStatus=xnatDynNaptPoolRowStatus, xnatLoadSharePoolPort=xnatLoadSharePoolPort, xnatBindingRegPort=xnatBindingRegPort, xnatBindingGroup=xnatBindingGroup, xnatDynamicNatPoolGroup=xnatDynamicNatPoolGroup, xnatDynNaptPoolNetAssgns=xnatDynNaptPoolNetAssgns, xnatLoadShareRangeGroup=xnatLoadShareRangeGroup, xnatOboundDiscards=xnatOboundDiscards, xnatOboundIcmp=xnatOboundIcmp, xnatPools=xnatPools, xnatSessionPriPort=xnatSessionPriPort, xnatLoadSharePoolMask=xnatLoadSharePoolMask, xnatTcpTimeout=xnatTcpTimeout, xnatDynNaptPoolRangeEnd=xnatDynNaptPoolRangeEnd, xnatSessionTable=xnatSessionTable, xnatLoadSharePoolRowStatus=xnatLoadSharePoolRowStatus, xnatPrivateNetTable=xnatPrivateNetTable, xnatSessionType=xnatSessionType, xnatMaxIboundSessions=xnatMaxIboundSessions, xnatPriNetAssoPoolTable=xnatPriNetAssoPoolTable, xnatFinRstTimeout=xnatFinRstTimeout, xnatSessionRegPort=xnatSessionRegPort, xnatDynamicNaptPoolEntry=xnatDynamicNaptPoolEntry, xnatGeneralGroup=xnatGeneralGroup, xnatBindingType=xnatBindingType, xnatDynNatPoolRangeRowStatus=xnatDynNatPoolRangeRowStatus, xnatPrivateNetEntry=xnatPrivateNetEntry, xnatDynamicNaptPoolTable=xnatDynamicNaptPoolTable, xnatDynNaptPoolAddr=xnatDynNaptPoolAddr, xnatBindingOutSessions=xnatBindingOutSessions, xnatSessionOutAddr=xnatSessionOutAddr, xnatDynNatPoolRangeBeg=xnatDynNatPoolRangeBeg, xnatIcmpTimeout=xnatIcmpTimeout, xnatLoadSharePoolRangeTable=xnatLoadSharePoolRangeTable, xnatDynNatPoolRangeCount=xnatDynNatPoolRangeCount, xnatBindingTable=xnatBindingTable, XnatIpAddress=XnatIpAddress, xnatPrivateNetPoolCount=xnatPrivateNetPoolCount, xnatDynamicNaptPoolGroup=xnatDynamicNaptPoolGroup, xnatDynamicNatRangeGroup=xnatDynamicNatRangeGroup, xnatSessionPriAddr=xnatSessionPriAddr, xnatLoadSharePoolRangeEnd=xnatLoadSharePoolRangeEnd, XnatTimeout=XnatTimeout, xnatCounters=xnatCounters, xnatIboundPackets=xnatIboundPackets, xnatOboundUdp=xnatOboundUdp, xnatLoadSharePoolGroup=xnatLoadSharePoolGroup, xnatCompliance=xnatCompliance, xnatBindingInSessions=xnatBindingInSessions, xnatCountersGroup=xnatCountersGroup, XnatSessionType=XnatSessionType, xnatIboundDiscards=xnatIboundDiscards, xnatAdminStatus=xnatAdminStatus, xnatLoadSharePoolRangeName=xnatLoadSharePoolRangeName, xnatIboundTcp=xnatIboundTcp, xnatIboundUntranslated=xnatIboundUntranslated, xnatOboundPackets=xnatOboundPackets, xnatDynamicNatPoolTable=xnatDynamicNatPoolTable, xnatBindingEntry=xnatBindingEntry, xnatLoadSharePoolRangeRowStatus=xnatLoadSharePoolRangeRowStatus, xnatCompliances=xnatCompliances, xnatGroups=xnatGroups, xnatDynamicNatPoolRangeTable=xnatDynamicNatPoolRangeTable, PYSNMP_MODULE_ID=xediaNetworkAddressTranslatorMIB, xnatSessionRowStatus=xnatSessionRowStatus, XnatPort=XnatPort, xnatPriNetAssoPoolOrder=xnatPriNetAssoPoolOrder, XnatBindingType=XnatBindingType, xnatDynNatPoolRangeMask=xnatDynNatPoolRangeMask, xnatLoadSharePoolEntry=xnatLoadSharePoolEntry, xnatLoadSharePoolRangeEntry=xnatLoadSharePoolRangeEntry, xnatDynamicNatPoolEntry=xnatDynamicNatPoolEntry, xnatPrivateNetGroup=xnatPrivateNetGroup, xnatSessionProtocol=xnatSessionProtocol, xnatPriNetAssoPoolName=xnatPriNetAssoPoolName, xnatSessionRegAddr=xnatSessionRegAddr, xnatObjects=xnatObjects, xnatOboundTcp=xnatOboundTcp, xnatLoadSharePoolName=xnatLoadSharePoolName, xnatBindingRowStatus=xnatBindingRowStatus, xnatLoadSharePoolAddr=xnatLoadSharePoolAddr, xnatSessionEntry=xnatSessionEntry, xnatIboundIcmp=xnatIboundIcmp, xnatDynNaptPoolMask=xnatDynNaptPoolMask, xnatLoadSharePoolRangeBeg=xnatLoadSharePoolRangeBeg, xnatDynNatPoolRangeEnd=xnatDynNatPoolRangeEnd, xnatSynTimeout=xnatSynTimeout, xnatBindingRegAddr=xnatBindingRegAddr, xnatBindingPriPort=xnatBindingPriPort, xnatLoadSharePoolRangePort=xnatLoadSharePoolRangePort, xnatDynNaptPoolRangeBeg=xnatDynNaptPoolRangeBeg, xediaNetworkAddressTranslatorMIB=xediaNetworkAddressTranslatorMIB, xnatLoadSharePoolRangeCount=xnatLoadSharePoolRangeCount, xnatDynNatPoolNetAssgns=xnatDynNatPoolNetAssgns, xnatDynNatPoolRowStatus=xnatDynNatPoolRowStatus, XnatCounter=XnatCounter, xnatLoadSharePoolTable=xnatLoadSharePoolTable, xnatDynamicNatPoolRangeEntry=xnatDynamicNatPoolRangeEntry, xnatPrivateNetMask=xnatPrivateNetMask, xnatLoadSharePoolRangeMask=xnatLoadSharePoolRangeMask, xnatBindingPriAddr=xnatBindingPriAddr, xnatDynNatPoolName=xnatDynNatPoolName, xnatLoadSharePoolRangeProtocol=xnatLoadSharePoolRangeProtocol, xnatPriNetAssoPoolGroup=xnatPriNetAssoPoolGroup, xnatGeneral=xnatGeneral, xnatPrivateNetRowStatus=xnatPrivateNetRowStatus, xnatOboundUntranslated=xnatOboundUntranslated, xnatLoadSharePoolProtocol=xnatLoadSharePoolProtocol, XnatProtocol=XnatProtocol, xnatPriNetAssoPoolNetAddr=xnatPriNetAssoPoolNetAddr)
