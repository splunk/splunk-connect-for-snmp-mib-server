#
# PySNMP MIB module INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
chassis, = mibBuilder.importSymbols("INTELCORPORATION-MULTI-FLEX-SERVER-MIB", "chassis")
groups, regModule = mibBuilder.importSymbols("INTELCORPORATION-MULTI-FLEX-SERVER-REG", "groups", "regModule")
PowerLedStates, IdromBinary16, Power, INT32withException, PresenceLedStates, FaultLedStates, Presence, Index, FeatureSet = mibBuilder.importSymbols("INTELCORPORATION-MULTI-FLEX-SERVER-TC", "PowerLedStates", "IdromBinary16", "Power", "INT32withException", "PresenceLedStates", "FaultLedStates", "Presence", "Index", "FeatureSet")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, Gauge32, TimeTicks, NotificationType, Bits, Counter32, MibIdentifier, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "Gauge32", "TimeTicks", "NotificationType", "Bits", "Counter32", "MibIdentifier", "ModuleIdentity", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
multiFlexServerDrivesMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 1, 1, 15))
multiFlexServerDrivesMibModule.setRevisions(('2007-08-16 12:00', '2007-07-20 16:45', '2007-06-07 20:30', '2007-06-07 13:30', '2007-05-30 17:00', '2007-04-18 19:05', '2007-04-09 15:45', '2007-04-09 15:30', '2007-03-27 11:30', '2007-03-14 11:30', '2007-03-06 10:30', '2007-02-22 17:00', '2006-12-28 17:30', '2006-12-05 10:30', '2006-11-27 15:30', '2006-11-20 13:30', '2006-11-07 11:30', '2006-10-02 10:24',))
if mibBuilder.loadTexts: multiFlexServerDrivesMibModule.setLastUpdated('200708161200Z')
if mibBuilder.loadTexts: multiFlexServerDrivesMibModule.setOrganization('Intel Corporation')
maxSharedDrives = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxSharedDrives.setStatus('current')
numOfSharedDrives = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numOfSharedDrives.setStatus('current')
sDrivePresenceMask = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDrivePresenceMask.setStatus('current')
sharedDrives = ObjectIdentity((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205))
if mibBuilder.loadTexts: sharedDrives.setStatus('current')
driveBackplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1))
if mibBuilder.loadTexts: driveBackplane.setStatus('current')
driveBackplaneVendor = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveBackplaneVendor.setStatus('current')
driveBackplaneMfgDate = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveBackplaneMfgDate.setStatus('current')
driveBackplaneDeviceName = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveBackplaneDeviceName.setStatus('current')
driveBackplanePart = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1, 4), IdromBinary16()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveBackplanePart.setStatus('current')
driveBackplaneSerialNo = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1, 5), IdromBinary16()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveBackplaneSerialNo.setStatus('current')
driveBackplaneMaximumPower = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1, 6), Power()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveBackplaneMaximumPower.setStatus('current')
driveBackplaneNominalPower = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1, 7), Power()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveBackplaneNominalPower.setStatus('current')
driveBackplaneAssetTag = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 1, 8), IdromBinary16()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveBackplaneAssetTag.setStatus('current')
sharedDriveTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2), )
if mibBuilder.loadTexts: sharedDriveTable.setStatus('current')
sharedDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1), ).setIndexNames((0, "INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveSlotNumber"))
if mibBuilder.loadTexts: sharedDriveEntry.setStatus('current')
sDriveSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 1), Index()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveSlotNumber.setStatus('current')
sDrivePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 2), Presence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDrivePresence.setStatus('current')
sDriveInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveInterface.setStatus('current')
sDriveModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveModelNumber.setStatus('current')
sDriveSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveSerialNumber.setStatus('current')
sDriveFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveFirmwareVersion.setStatus('current')
sDriveProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveProtocolVersion.setStatus('current')
sDriveOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveOperationalStatus.setStatus('current')
sDriveCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveCondition.setStatus('current')
sDriveOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveOperation.setStatus('current')
sDriveConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveConfiguration.setStatus('current')
sDriveStoragePoolID = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-32, -16, -1, 256))).clone(namedValues=NamedValues(("notApplicable", -32), ("unknown", -16), ("unavailable", -1), ("notavailable", 256)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStoragePoolID.setStatus('current')
sDriveSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-32, -16, -1))).clone(namedValues=NamedValues(("notApplicable", -32), ("unknown", -16), ("unavailable", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveSequenceNumber.setStatus('current')
sDriveEnclosureID = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 14), INT32withException()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveEnclosureID.setStatus('current')
sDriveBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 15), INT32withException()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveBlockSize.setStatus('current')
sDrivePhysicalCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDrivePhysicalCapacity.setStatus('current')
sDriveConfigurableCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveConfigurableCapacity.setStatus('current')
sDriveUsedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveUsedCapacity.setStatus('current')
sDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-32, -16, -1, 1, 4))).clone(namedValues=NamedValues(("notApplicable", -32), ("unknown", -16), ("unavailable", -1), ("sata", 1), ("sas", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveType.setStatus('current')
sharedDriveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3), )
if mibBuilder.loadTexts: sharedDriveStatsTable.setStatus('current')
sharedDriveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1), )
sharedDriveEntry.registerAugmentions(("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sharedDriveStatsEntry"))
sharedDriveStatsEntry.setIndexNames(*sharedDriveEntry.getIndexNames())
if mibBuilder.loadTexts: sharedDriveStatsEntry.setStatus('current')
sDriveStatsDataTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsDataTransferred.setStatus('current')
sDriveStatsReadDataTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsReadDataTransferred.setStatus('current')
sDriveStatsWriteDataTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsWriteDataTransferred.setStatus('current')
sDriveStatsNumOfErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsNumOfErrors.setStatus('current')
sDriveStatsNumOfNonRWErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsNumOfNonRWErrors.setStatus('current')
sDriveStatsNumOfReadErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsNumOfReadErrors.setStatus('current')
sDriveStatsNumOfWriteErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsNumOfWriteErrors.setStatus('current')
sDriveStatsNumOfIORequests = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsNumOfIORequests.setStatus('current')
sDriveStatsNumOfNonRWRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsNumOfNonRWRequests.setStatus('current')
sDriveStatsNumOfReadRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsNumOfReadRequests.setStatus('current')
sDriveStatsNumOfWriteRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsNumOfWriteRequests.setStatus('current')
sDriveStatsStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsStartTime.setStatus('current')
sDriveStatsCollectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 205, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sDriveStatsCollectionTime.setStatus('current')
sDriveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 2, 2, 15)).setObjects(("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "maxSharedDrives"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "numOfSharedDrives"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDrivePresenceMask"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "driveBackplaneVendor"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "driveBackplaneMfgDate"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "driveBackplaneDeviceName"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "driveBackplanePart"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "driveBackplaneSerialNo"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "driveBackplaneMaximumPower"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "driveBackplaneNominalPower"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "driveBackplaneAssetTag"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveSlotNumber"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDrivePresence"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveInterface"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveModelNumber"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveSerialNumber"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveFirmwareVersion"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveProtocolVersion"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveOperationalStatus"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveCondition"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveOperation"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveConfiguration"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStoragePoolID"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveSequenceNumber"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveEnclosureID"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveBlockSize"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDrivePhysicalCapacity"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveConfigurableCapacity"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveUsedCapacity"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveType"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsDataTransferred"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsReadDataTransferred"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsWriteDataTransferred"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsNumOfErrors"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsNumOfNonRWErrors"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsNumOfReadErrors"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsNumOfWriteErrors"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsNumOfIORequests"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsNumOfNonRWRequests"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsNumOfReadRequests"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsNumOfWriteRequests"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsStartTime"), ("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", "sDriveStatsCollectionTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sDriveGroup = sDriveGroup.setStatus('current')
mibBuilder.exportSymbols("INTELCORPORATION-MULTI-FLEX-SERVER-DRIVE-MIB", sDrivePresenceMask=sDrivePresenceMask, sDriveConfigurableCapacity=sDriveConfigurableCapacity, sDriveStatsNumOfWriteRequests=sDriveStatsNumOfWriteRequests, sDriveStatsStartTime=sDriveStatsStartTime, sDriveCondition=sDriveCondition, sDriveConfiguration=sDriveConfiguration, sDrivePhysicalCapacity=sDrivePhysicalCapacity, driveBackplaneMfgDate=driveBackplaneMfgDate, driveBackplaneSerialNo=driveBackplaneSerialNo, sDriveGroup=sDriveGroup, sDriveSequenceNumber=sDriveSequenceNumber, sharedDrives=sharedDrives, sDriveModelNumber=sDriveModelNumber, sharedDriveStatsEntry=sharedDriveStatsEntry, sDriveSlotNumber=sDriveSlotNumber, driveBackplaneDeviceName=driveBackplaneDeviceName, sharedDriveStatsTable=sharedDriveStatsTable, sDriveStatsDataTransferred=sDriveStatsDataTransferred, sDrivePresence=sDrivePresence, sDriveInterface=sDriveInterface, sDriveStoragePoolID=sDriveStoragePoolID, sDriveStatsNumOfReadRequests=sDriveStatsNumOfReadRequests, sDriveStatsCollectionTime=sDriveStatsCollectionTime, driveBackplaneMaximumPower=driveBackplaneMaximumPower, numOfSharedDrives=numOfSharedDrives, driveBackplane=driveBackplane, sDriveEnclosureID=sDriveEnclosureID, driveBackplanePart=driveBackplanePart, driveBackplaneNominalPower=driveBackplaneNominalPower, sDriveStatsNumOfErrors=sDriveStatsNumOfErrors, sDriveStatsNumOfIORequests=sDriveStatsNumOfIORequests, sharedDriveEntry=sharedDriveEntry, sDriveType=sDriveType, PYSNMP_MODULE_ID=multiFlexServerDrivesMibModule, sDriveOperationalStatus=sDriveOperationalStatus, sDriveStatsWriteDataTransferred=sDriveStatsWriteDataTransferred, sDriveBlockSize=sDriveBlockSize, sDriveUsedCapacity=sDriveUsedCapacity, sDriveStatsNumOfNonRWErrors=sDriveStatsNumOfNonRWErrors, driveBackplaneAssetTag=driveBackplaneAssetTag, multiFlexServerDrivesMibModule=multiFlexServerDrivesMibModule, sDriveStatsNumOfNonRWRequests=sDriveStatsNumOfNonRWRequests, sDriveSerialNumber=sDriveSerialNumber, sDriveOperation=sDriveOperation, sDriveStatsNumOfWriteErrors=sDriveStatsNumOfWriteErrors, sDriveStatsNumOfReadErrors=sDriveStatsNumOfReadErrors, sharedDriveTable=sharedDriveTable, driveBackplaneVendor=driveBackplaneVendor, maxSharedDrives=maxSharedDrives, sDriveFirmwareVersion=sDriveFirmwareVersion, sDriveStatsReadDataTransferred=sDriveStatsReadDataTransferred, sDriveProtocolVersion=sDriveProtocolVersion)
