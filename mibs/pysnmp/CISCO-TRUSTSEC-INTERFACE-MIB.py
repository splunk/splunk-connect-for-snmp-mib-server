#
# PySNMP MIB module CISCO-TRUSTSEC-INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-TRUSTSEC-INTERFACE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:57:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CtsSecurityGroupTag, = mibBuilder.importSymbols("CISCO-TRUSTSEC-TC-MIB", "CtsSecurityGroupTag")
ifIndex, ifName = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifName")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, Unsigned32, Gauge32, ObjectIdentity, NotificationType, Bits, Counter64, IpAddress, Integer32, iso, MibIdentifier, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "Gauge32", "ObjectIdentity", "NotificationType", "Bits", "Counter64", "IpAddress", "Integer32", "iso", "MibIdentifier", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, StorageType, RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "StorageType", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
ciscoTrustSecIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 740))
ciscoTrustSecIfMIB.setRevisions(('2014-01-28 00:00', '2012-04-06 00:00', '2010-05-28 00:00',))
if mibBuilder.loadTexts: ciscoTrustSecIfMIB.setLastUpdated('201401280000Z')
if mibBuilder.loadTexts: ciscoTrustSecIfMIB.setOrganization('Cisco Systems, Inc.')
class CtsiCasheDataSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("acs", 2), ("dram", 3), ("nvram", 4), ("all", 5))

class CtsSapNegMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("encapNoAuthenNoEncrypt", 1), ("gcmAuthenNoEncrypt", 2), ("gcmAuthenGcmEncrypt", 3), ("noEncap", 4))

class CtsSapNegModeList(TextualConvention, OctetString):
    status = 'current'

class CtsiInterfaceControllerState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("unknown", 1), ("initialize", 2), ("authenticating", 3), ("authorizing", 4), ("sapNegotiating", 5), ("open", 6), ("held", 7), ("disconnecting", 8), ("invalid", 9), ("licenseError", 10))

ciscoTrustSecIfMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 0))
ciscoTrustSecIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1))
ciscoTrustSecIfMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 2))
ctsiIfConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 1))
ctsiIfDot1xObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2))
ctsiIfManualObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3))
ctsiIfL3ForwardObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 4))
ctsiIfStatusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5))
ctsiIfStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6))
ctsiAuthorizationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7))
ctsiIfcStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 8))
ctsiEventsStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9))
ctsiIfModeStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 10))
ctsiIfNotifsControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 11))
ctsiIfNotifsOnlyInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 12))
ctsiIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 1, 1), )
if mibBuilder.loadTexts: ctsiIfConfigTable.setStatus('current')
ctsiIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctsiIfConfigEntry.setStatus('current')
ctsiIfModeCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("dot1x", 0), ("manual", 1), ("l3Forward", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfModeCapability.setStatus('current')
ctsiIfConfiguredMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("dot1x", 3), ("manual", 4), ("l3Forward", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfConfiguredMode.setStatus('current')
ctsiIfCacheClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 1, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsiIfCacheClear.setStatus('current')
ctsiIfRekey = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 1, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsiIfRekey.setStatus('current')
ctsiIfDot1xTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1), )
if mibBuilder.loadTexts: ctsiIfDot1xTable.setStatus('current')
ctsiIfDot1xEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctsiIfDot1xEntry.setStatus('current')
ctsiIfDot1xSgtPropagateEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfDot1xSgtPropagateEnabled.setStatus('current')
ctsiIfDot1xReauthInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1, 2), Integer32().clone(86400)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfDot1xReauthInterval.setStatus('current')
ctsiIfDot1xSapModeList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1, 3), CtsSapNegModeList().clone(hexValue="04000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfDot1xSapModeList.setStatus('current')
ctsiIfDot1xDownloadReauthInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfDot1xDownloadReauthInterval.setStatus('current')
ctsiIfDot1xOperReauthInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfDot1xOperReauthInterval.setStatus('current')
ctsiIfDot1xReauthTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfDot1xReauthTimeLeft.setStatus('current')
ctsiIfDot1xStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1, 7), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfDot1xStorageType.setStatus('current')
ctsiIfDot1xRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfDot1xRowStatus.setStatus('current')
ctsiIfManualTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1), )
if mibBuilder.loadTexts: ctsiIfManualTable.setStatus('current')
ctsiIfManualEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctsiIfManualEntry.setStatus('current')
ctsiIfManualDynamicPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1, 1), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfManualDynamicPeerId.setStatus('current')
ctsiIfManualStaticSgt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1, 2), CtsSecurityGroupTag()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfManualStaticSgt.setStatus('current')
ctsiIfManualStaticSgtTrusted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfManualStaticSgtTrusted.setStatus('current')
ctsiIfManualSgtPropagateEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfManualSgtPropagateEnabled.setStatus('current')
ctsiIfManualSapPmk = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(32, 32), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfManualSapPmk.setStatus('current')
ctsiIfManualSapModeList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1, 6), CtsSapNegModeList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfManualSapModeList.setStatus('current')
ctsiIfManualStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1, 7), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfManualStorageType.setStatus('current')
ctsiIfManualRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 3, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfManualRowStatus.setStatus('current')
ctsiIfL3ForwardTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 4, 1), )
if mibBuilder.loadTexts: ctsiIfL3ForwardTable.setStatus('current')
ctsiIfL3ForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctsiIfL3ForwardEntry.setStatus('current')
ctsiIfL3ForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("l3Ipv4Forward", 1), ("l3Ipv6Forward", 2), ("l3IpForward", 3))).clone('l3Ipv4Forward')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfL3ForwardMode.setStatus('current')
ctsiIfL3ForwardStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 4, 1, 1, 2), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfL3ForwardStorageType.setStatus('current')
ctsiIfL3ForwardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 4, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsiIfL3ForwardRowStatus.setStatus('current')
ctsiIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1), )
if mibBuilder.loadTexts: ctsiIfStatusTable.setStatus('current')
ctsiIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctsiIfStatusEntry.setStatus('current')
ctsiIfControllerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 1), CtsiInterfaceControllerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfControllerState.setStatus('current')
ctsiIfAuthenticationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("succeeded", 2), ("rejected", 3), ("logOff", 4), ("noRespond", 5), ("notApplicable", 6), ("incomplete", 7), ("failed", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthenticationStatus.setStatus('current')
ctsiIfPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfPeerId.setStatus('current')
ctsiIfPeerAdvCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 4), Bits().clone(namedValues=NamedValues(("sap", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfPeerAdvCapability.setStatus('current')
ctsiIfAuthorizationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("inProgress", 2), ("succeeded", 3), ("failed", 4), ("fallBackPolicy", 5), ("incomplete", 6), ("peerSucceeded", 7), ("rbaclSucceeded", 8), ("policySucceeded", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthorizationStatus.setStatus('current')
ctsiIfPeerSgt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 6), CtsSecurityGroupTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfPeerSgt.setStatus('current')
ctsiIfPeerSgtTrusted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfPeerSgtTrusted.setStatus('current')
ctsiIfSapNegotiationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 1), ("unknown", 2), ("inProgress", 3), ("succeeded", 4), ("failed", 5), ("licenseError", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfSapNegotiationStatus.setStatus('current')
ctsiIfSapNegModeList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 9), CtsSapNegModeList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfSapNegModeList.setStatus('current')
ctsiIfCacheExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfCacheExpirationTime.setStatus('current')
ctsiIfCacheDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 11), CtsiCasheDataSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfCacheDataSource.setStatus('current')
ctsiIfCriticalAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("cache", 2), ("default", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfCriticalAuthStatus.setStatus('current')
ctsiIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1), )
if mibBuilder.loadTexts: ctsiIfStatsTable.setStatus('current')
ctsiIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctsiIfStatsEntry.setStatus('current')
ctsiIfAuthenticationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthenticationSuccess.setStatus('current')
ctsiIfAuthenticationReject = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthenticationReject.setStatus('current')
ctsiIfAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthenticationFailure.setStatus('current')
ctsiIfAuthenticationNoResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthenticationNoResponse.setStatus('current')
ctsiIfAuthenticationLogoff = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthenticationLogoff.setStatus('current')
ctsiIfAuthorizationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthorizationSuccess.setStatus('current')
ctsiIfAuthorizationPolicyFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthorizationPolicyFail.setStatus('current')
ctsiIfAuthorizationFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfAuthorizationFail.setStatus('current')
ctsiIfSapSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfSapSuccess.setStatus('current')
ctsiIfSapFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 6, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfSapFail.setStatus('current')
ctsiAuthorizationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1), )
if mibBuilder.loadTexts: ctsiAuthorizationTable.setStatus('current')
ctsiAuthorizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1), ).setIndexNames((1, "CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationPeerId"))
if mibBuilder.loadTexts: ctsiAuthorizationEntry.setStatus('current')
ctsiAuthorizationPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ctsiAuthorizationPeerId.setStatus('current')
ctsiAuthorizationPeerSgt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1, 2), CtsSecurityGroupTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationPeerSgt.setStatus('current')
ctsiAuthorizationState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("start", 2), ("waitingRespond", 3), ("assessing", 4), ("complete", 5), ("failure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationState.setStatus('current')
ctsiAuthorizationLastRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationLastRefresh.setStatus('current')
ctsiAuthorizationTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationTimeLeft.setStatus('current')
ctsiAuthorizationTimeToRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationTimeToRefresh.setStatus('current')
ctsiAuthorizationCacheDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1, 7), CtsiCasheDataSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationCacheDataSource.setStatus('current')
ctsiAuthorizationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("inProgress", 2), ("succeeded", 3), ("failed", 4), ("fallbackPolicy", 5), ("incomplete", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationStatus.setStatus('current')
ctsiIfcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 8, 1), )
if mibBuilder.loadTexts: ctsiIfcStatsTable.setStatus('current')
ctsiIfcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfcState"))
if mibBuilder.loadTexts: ctsiIfcStatsEntry.setStatus('current')
ctsiIfcState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 8, 1, 1, 1), CtsiInterfaceControllerState())
if mibBuilder.loadTexts: ctsiIfcState.setStatus('current')
ctsiIfcStatsIfCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 8, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiIfcStatsIfCount.setStatus('current')
ctsiAuthenticationSuccess = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthenticationSuccess.setStatus('current')
ctsiAuthenticationReject = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthenticationReject.setStatus('current')
ctsiAuthenticationFailure = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthenticationFailure.setStatus('current')
ctsiAuthenticationLogoff = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthenticationLogoff.setStatus('current')
ctsiAuthenticationNoRespond = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthenticationNoRespond.setStatus('current')
ctsiAuthorizationSuccess = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationSuccess.setStatus('current')
ctsiAuthorizationFailure = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationFailure.setStatus('current')
ctsiAuthorizationPolicyFailure = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiAuthorizationPolicyFailure.setStatus('current')
ctsiSapNegotiationSuccess = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiSapNegotiationSuccess.setStatus('current')
ctsiSapNegotiationFailure = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 9, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiSapNegotiationFailure.setStatus('current')
ctsiInDot1xModeIfCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiInDot1xModeIfCount.setStatus('current')
ctsiInManualModeIfCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiInManualModeIfCount.setStatus('current')
ctsiInL3ForwardModeIfCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 10, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsiInL3ForwardModeIfCount.setStatus('current')
ctsiAuthorizationFailNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 11, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsiAuthorizationFailNotifEnable.setStatus('current')
ctsiIfAddSupplicantFailNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 11, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsiIfAddSupplicantFailNotifEnable.setStatus('current')
ctsiIfAuthenticationFailNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 11, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsiIfAuthenticationFailNotifEnable.setStatus('current')
ctsiIfSapNegotiationFailNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 11, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsiIfSapNegotiationFailNotifEnable.setStatus('current')
ctsiIfUnauthorizedNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 11, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsiIfUnauthorizedNotifEnable.setStatus('current')
ctsiIfNotifMessage = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 12, 1), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsiIfNotifMessage.setStatus('current')
ctsiIfDot1xPaeRole = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 740, 1, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("authenticator", 2), ("supplicant", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsiIfDot1xPaeRole.setStatus('current')
ctsiAuthorizationFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 740, 0, 1)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationPeerSgt"))
if mibBuilder.loadTexts: ctsiAuthorizationFailNotif.setStatus('current')
ctsiIfAddSupplicantFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 740, 0, 2)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: ctsiIfAddSupplicantFailNotif.setStatus('current')
ctsiIfAuthenticationFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 740, 0, 3)).setObjects(("IF-MIB", "ifName"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfPeerId"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xPaeRole"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationStatus"))
if mibBuilder.loadTexts: ctsiIfAuthenticationFailNotif.setStatus('current')
ctsiIfSapNegotiationFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 740, 0, 4)).setObjects(("IF-MIB", "ifName"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfNotifMessage"))
if mibBuilder.loadTexts: ctsiIfSapNegotiationFailNotif.setStatus('current')
ctsiIfUnauthorizedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 740, 0, 5)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: ctsiIfUnauthorizedNotif.setStatus('current')
ciscoTrustSecIfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 1))
ciscoTrustSecIfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2))
ciscoTrustSecIfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 1, 1)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfConfigGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBDot1xGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBManualGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBL3ForwardGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBStatusGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBAuthorizationGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfcStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBEventStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfModeStatisticGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBCompliance = ciscoTrustSecIfMIBCompliance.setStatus('deprecated')
ciscoTrustSecIfMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 1, 2)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfConfigGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBDot1xGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBManualGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBL3ForwardGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBStatusGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBAuthorizationGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfcStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBEventStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfModeStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBNotifsCtrlGrp"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBNotifsOnlyInfoGrp"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBNotifsGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBCompliance2 = ciscoTrustSecIfMIBCompliance2.setStatus('deprecated')
ciscoTrustSecIfMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 1, 3)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfConfigGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBDot1xGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBManualGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBL3ForwardGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBStatusGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBAuthorizationGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfcStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBEventStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBIfModeStatisticGroup"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBNotifsCtrlGrp"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBNotifsOnlyInfoGrp"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBNotifsGrp"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ciscoTrustSecIfMIBCriticalAuthStatusGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBCompliance3 = ciscoTrustSecIfMIBCompliance3.setStatus('current')
ciscoTrustSecIfMIBIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 1)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfModeCapability"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfConfiguredMode"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfCacheClear"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfRekey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBIfConfigGroup = ciscoTrustSecIfMIBIfConfigGroup.setStatus('current')
ciscoTrustSecIfMIBDot1xGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 2)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xSgtPropagateEnabled"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xReauthInterval"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xSapModeList"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xDownloadReauthInterval"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xOperReauthInterval"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xReauthTimeLeft"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xStorageType"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBDot1xGroup = ciscoTrustSecIfMIBDot1xGroup.setStatus('current')
ciscoTrustSecIfMIBManualGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 3)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfManualDynamicPeerId"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfManualStaticSgt"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfManualStaticSgtTrusted"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfManualSgtPropagateEnabled"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfManualSapPmk"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfManualSapModeList"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfManualStorageType"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfManualRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBManualGroup = ciscoTrustSecIfMIBManualGroup.setStatus('current')
ciscoTrustSecIfMIBL3ForwardGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 4)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfL3ForwardMode"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfL3ForwardStorageType"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfL3ForwardRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBL3ForwardGroup = ciscoTrustSecIfMIBL3ForwardGroup.setStatus('current')
ciscoTrustSecIfMIBStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 5)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfControllerState"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationStatus"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfPeerId"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfPeerAdvCapability"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthorizationStatus"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfPeerSgt"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfPeerSgtTrusted"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfCacheExpirationTime"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfCacheDataSource"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfSapNegotiationStatus"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfSapNegModeList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBStatusGroup = ciscoTrustSecIfMIBStatusGroup.setStatus('current')
ciscoTrustSecIfMIBStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 6)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationSuccess"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationReject"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationFailure"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationNoResponse"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationLogoff"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthorizationSuccess"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthorizationPolicyFail"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthorizationFail"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfSapSuccess"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfSapFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBStatisticGroup = ciscoTrustSecIfMIBStatisticGroup.setStatus('current')
ciscoTrustSecIfMIBAuthorizationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 7)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationPeerSgt"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationState"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationLastRefresh"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationTimeLeft"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationTimeToRefresh"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationCacheDataSource"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBAuthorizationGroup = ciscoTrustSecIfMIBAuthorizationGroup.setStatus('current')
ciscoTrustSecIfMIBIfcStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 8)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfcStatsIfCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBIfcStatisticGroup = ciscoTrustSecIfMIBIfcStatisticGroup.setStatus('current')
ciscoTrustSecIfMIBEventStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 9)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthenticationSuccess"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthenticationReject"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthenticationFailure"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthenticationLogoff"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthenticationNoRespond"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationSuccess"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationFailure"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationPolicyFailure"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiSapNegotiationSuccess"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiSapNegotiationFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBEventStatisticGroup = ciscoTrustSecIfMIBEventStatisticGroup.setStatus('current')
ciscoTrustSecIfMIBIfModeStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 10)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiInDot1xModeIfCount"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiInManualModeIfCount"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiInL3ForwardModeIfCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBIfModeStatisticGroup = ciscoTrustSecIfMIBIfModeStatisticGroup.setStatus('current')
ciscoTrustSecIfMIBNotifsCtrlGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 11)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationFailNotifEnable"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAddSupplicantFailNotifEnable"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationFailNotifEnable"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfSapNegotiationFailNotifEnable"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfUnauthorizedNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBNotifsCtrlGrp = ciscoTrustSecIfMIBNotifsCtrlGrp.setStatus('current')
ciscoTrustSecIfMIBNotifsOnlyInfoGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 12)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfNotifMessage"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfDot1xPaeRole"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBNotifsOnlyInfoGrp = ciscoTrustSecIfMIBNotifsOnlyInfoGrp.setStatus('current')
ciscoTrustSecIfMIBNotifsGrp = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 13)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiAuthorizationFailNotif"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAddSupplicantFailNotif"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfAuthenticationFailNotif"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfSapNegotiationFailNotif"), ("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfUnauthorizedNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBNotifsGrp = ciscoTrustSecIfMIBNotifsGrp.setStatus('current')
ciscoTrustSecIfMIBCriticalAuthStatusGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 740, 2, 2, 14)).setObjects(("CISCO-TRUSTSEC-INTERFACE-MIB", "ctsiIfCriticalAuthStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecIfMIBCriticalAuthStatusGrp = ciscoTrustSecIfMIBCriticalAuthStatusGrp.setStatus('current')
mibBuilder.exportSymbols("CISCO-TRUSTSEC-INTERFACE-MIB", ctsiIfDot1xStorageType=ctsiIfDot1xStorageType, ctsiIfModeCapability=ctsiIfModeCapability, ctsiIfManualSgtPropagateEnabled=ctsiIfManualSgtPropagateEnabled, ciscoTrustSecIfMIBDot1xGroup=ciscoTrustSecIfMIBDot1xGroup, CtsiCasheDataSource=CtsiCasheDataSource, ctsiSapNegotiationSuccess=ctsiSapNegotiationSuccess, ctsiIfAuthorizationFail=ctsiIfAuthorizationFail, ctsiIfModeStatsObjects=ctsiIfModeStatsObjects, ctsiInDot1xModeIfCount=ctsiInDot1xModeIfCount, ctsiAuthorizationCacheDataSource=ctsiAuthorizationCacheDataSource, ctsiIfManualRowStatus=ctsiIfManualRowStatus, ctsiIfPeerSgtTrusted=ctsiIfPeerSgtTrusted, ciscoTrustSecIfMIBManualGroup=ciscoTrustSecIfMIBManualGroup, ctsiAuthenticationReject=ctsiAuthenticationReject, ctsiIfSapNegotiationStatus=ctsiIfSapNegotiationStatus, ctsiIfConfigTable=ctsiIfConfigTable, ctsiIfAuthorizationStatus=ctsiIfAuthorizationStatus, ctsiIfAddSupplicantFailNotif=ctsiIfAddSupplicantFailNotif, ctsiIfManualObjects=ctsiIfManualObjects, ctsiIfL3ForwardMode=ctsiIfL3ForwardMode, ctsiIfAuthorizationPolicyFail=ctsiIfAuthorizationPolicyFail, ctsiAuthorizationObjects=ctsiAuthorizationObjects, ctsiIfUnauthorizedNotif=ctsiIfUnauthorizedNotif, ctsiIfcStatsTable=ctsiIfcStatsTable, ctsiIfManualSapPmk=ctsiIfManualSapPmk, ctsiAuthorizationTimeToRefresh=ctsiAuthorizationTimeToRefresh, ctsiIfAuthenticationStatus=ctsiIfAuthenticationStatus, ctsiIfConfigEntry=ctsiIfConfigEntry, ctsiIfStatusObjects=ctsiIfStatusObjects, ctsiIfCacheDataSource=ctsiIfCacheDataSource, ctsiIfConfiguredMode=ctsiIfConfiguredMode, ctsiIfDot1xSapModeList=ctsiIfDot1xSapModeList, ctsiIfNotifsControlObjects=ctsiIfNotifsControlObjects, ctsiAuthorizationState=ctsiAuthorizationState, ctsiIfPeerSgt=ctsiIfPeerSgt, ctsiIfDot1xSgtPropagateEnabled=ctsiIfDot1xSgtPropagateEnabled, CtsiInterfaceControllerState=CtsiInterfaceControllerState, ctsiIfRekey=ctsiIfRekey, ctsiIfManualStaticSgtTrusted=ctsiIfManualStaticSgtTrusted, ctsiIfPeerId=ctsiIfPeerId, ctsiIfSapFail=ctsiIfSapFail, ctsiAuthenticationNoRespond=ctsiAuthenticationNoRespond, ctsiIfAuthenticationFailNotif=ctsiIfAuthenticationFailNotif, ctsiIfcStatsEntry=ctsiIfcStatsEntry, PYSNMP_MODULE_ID=ciscoTrustSecIfMIB, ctsiInManualModeIfCount=ctsiInManualModeIfCount, ctsiAuthenticationLogoff=ctsiAuthenticationLogoff, ctsiIfL3ForwardRowStatus=ctsiIfL3ForwardRowStatus, ctsiIfAuthenticationFailure=ctsiIfAuthenticationFailure, ctsiIfDot1xPaeRole=ctsiIfDot1xPaeRole, ctsiAuthorizationPolicyFailure=ctsiAuthorizationPolicyFailure, ctsiAuthenticationSuccess=ctsiAuthenticationSuccess, ctsiIfDot1xObjects=ctsiIfDot1xObjects, ciscoTrustSecIfMIBNotifsCtrlGrp=ciscoTrustSecIfMIBNotifsCtrlGrp, ctsiIfAuthorizationSuccess=ctsiIfAuthorizationSuccess, ctsiIfStatusEntry=ctsiIfStatusEntry, ctsiIfL3ForwardEntry=ctsiIfL3ForwardEntry, ctsiInL3ForwardModeIfCount=ctsiInL3ForwardModeIfCount, ctsiIfNotifsOnlyInfoObjects=ctsiIfNotifsOnlyInfoObjects, ctsiIfAddSupplicantFailNotifEnable=ctsiIfAddSupplicantFailNotifEnable, ctsiIfAuthenticationLogoff=ctsiIfAuthenticationLogoff, ciscoTrustSecIfMIBCompliances=ciscoTrustSecIfMIBCompliances, ctsiIfL3ForwardStorageType=ctsiIfL3ForwardStorageType, ctsiIfManualEntry=ctsiIfManualEntry, ciscoTrustSecIfMIBIfConfigGroup=ciscoTrustSecIfMIBIfConfigGroup, ciscoTrustSecIfMIBEventStatisticGroup=ciscoTrustSecIfMIBEventStatisticGroup, ctsiAuthorizationEntry=ctsiAuthorizationEntry, ctsiAuthorizationLastRefresh=ctsiAuthorizationLastRefresh, ctsiIfManualStaticSgt=ctsiIfManualStaticSgt, ctsiIfSapNegModeList=ctsiIfSapNegModeList, ciscoTrustSecIfMIBStatusGroup=ciscoTrustSecIfMIBStatusGroup, ctsiIfSapSuccess=ctsiIfSapSuccess, ctsiIfNotifMessage=ctsiIfNotifMessage, ctsiAuthenticationFailure=ctsiAuthenticationFailure, ctsiIfDot1xReauthTimeLeft=ctsiIfDot1xReauthTimeLeft, ctsiIfDot1xReauthInterval=ctsiIfDot1xReauthInterval, ciscoTrustSecIfMIBIfModeStatisticGroup=ciscoTrustSecIfMIBIfModeStatisticGroup, ciscoTrustSecIfMIBL3ForwardGroup=ciscoTrustSecIfMIBL3ForwardGroup, ciscoTrustSecIfMIBCompliance3=ciscoTrustSecIfMIBCompliance3, ctsiIfL3ForwardObjects=ctsiIfL3ForwardObjects, ctsiIfStatsObjects=ctsiIfStatsObjects, ctsiAuthorizationTable=ctsiAuthorizationTable, ciscoTrustSecIfMIBObjects=ciscoTrustSecIfMIBObjects, ctsiAuthorizationPeerId=ctsiAuthorizationPeerId, ctsiIfStatusTable=ctsiIfStatusTable, ciscoTrustSecIfMIBAuthorizationGroup=ciscoTrustSecIfMIBAuthorizationGroup, ctsiIfDot1xOperReauthInterval=ctsiIfDot1xOperReauthInterval, ctsiIfDot1xRowStatus=ctsiIfDot1xRowStatus, ctsiIfControllerState=ctsiIfControllerState, ciscoTrustSecIfMIBStatisticGroup=ciscoTrustSecIfMIBStatisticGroup, ciscoTrustSecIfMIB=ciscoTrustSecIfMIB, ciscoTrustSecIfMIBNotifs=ciscoTrustSecIfMIBNotifs, ctsiAuthorizationFailure=ctsiAuthorizationFailure, ctsiIfSapNegotiationFailNotif=ctsiIfSapNegotiationFailNotif, CtsSapNegMode=CtsSapNegMode, ctsiIfManualStorageType=ctsiIfManualStorageType, ctsiIfDot1xTable=ctsiIfDot1xTable, ctsiIfManualTable=ctsiIfManualTable, ctsiEventsStatsObjects=ctsiEventsStatsObjects, ciscoTrustSecIfMIBGroups=ciscoTrustSecIfMIBGroups, CtsSapNegModeList=CtsSapNegModeList, ctsiAuthorizationStatus=ctsiAuthorizationStatus, ciscoTrustSecIfMIBCompliance2=ciscoTrustSecIfMIBCompliance2, ctsiIfManualSapModeList=ctsiIfManualSapModeList, ciscoTrustSecIfMIBIfcStatisticGroup=ciscoTrustSecIfMIBIfcStatisticGroup, ciscoTrustSecIfMIBCompliance=ciscoTrustSecIfMIBCompliance, ciscoTrustSecIfMIBCriticalAuthStatusGrp=ciscoTrustSecIfMIBCriticalAuthStatusGrp, ctsiIfSapNegotiationFailNotifEnable=ctsiIfSapNegotiationFailNotifEnable, ctsiSapNegotiationFailure=ctsiSapNegotiationFailure, ctsiIfL3ForwardTable=ctsiIfL3ForwardTable, ctsiAuthorizationFailNotifEnable=ctsiAuthorizationFailNotifEnable, ctsiIfAuthenticationNoResponse=ctsiIfAuthenticationNoResponse, ctsiIfAuthenticationReject=ctsiIfAuthenticationReject, ciscoTrustSecIfMIBConform=ciscoTrustSecIfMIBConform, ctsiIfStatsTable=ctsiIfStatsTable, ctsiIfUnauthorizedNotifEnable=ctsiIfUnauthorizedNotifEnable, ctsiIfAuthenticationSuccess=ctsiIfAuthenticationSuccess, ctsiIfManualDynamicPeerId=ctsiIfManualDynamicPeerId, ctsiAuthorizationTimeLeft=ctsiAuthorizationTimeLeft, ctsiIfConfigObjects=ctsiIfConfigObjects, ctsiIfAuthenticationFailNotifEnable=ctsiIfAuthenticationFailNotifEnable, ciscoTrustSecIfMIBNotifsOnlyInfoGrp=ciscoTrustSecIfMIBNotifsOnlyInfoGrp, ctsiIfDot1xEntry=ctsiIfDot1xEntry, ctsiIfPeerAdvCapability=ctsiIfPeerAdvCapability, ctsiIfcState=ctsiIfcState, ctsiIfCriticalAuthStatus=ctsiIfCriticalAuthStatus, ctsiAuthorizationPeerSgt=ctsiAuthorizationPeerSgt, ctsiIfStatsEntry=ctsiIfStatsEntry, ctsiIfCacheExpirationTime=ctsiIfCacheExpirationTime, ciscoTrustSecIfMIBNotifsGrp=ciscoTrustSecIfMIBNotifsGrp, ctsiAuthorizationSuccess=ctsiAuthorizationSuccess, ctsiIfDot1xDownloadReauthInterval=ctsiIfDot1xDownloadReauthInterval, ctsiIfcStatsObjects=ctsiIfcStatsObjects, ctsiIfcStatsIfCount=ctsiIfcStatsIfCount, ctsiAuthorizationFailNotif=ctsiAuthorizationFailNotif, ctsiIfCacheClear=ctsiIfCacheClear)
