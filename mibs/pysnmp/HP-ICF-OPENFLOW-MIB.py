#
# PySNMP MIB module HP-ICF-OPENFLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-OPENFLOW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
VidList, = mibBuilder.importSymbols("HP-ICF-TC", "VidList")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
NotificationType, IpAddress, iso, Integer32, Counter32, MibIdentifier, Unsigned32, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "iso", "Integer32", "Counter32", "MibIdentifier", "Unsigned32", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Bits", "ModuleIdentity")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
hpicfOpenFlowMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89))
hpicfOpenFlowMIB.setRevisions(('2017-07-16 00:00', '2017-06-18 00:00', '2017-04-28 00:00', '2016-10-25 00:00', '2016-10-05 00:00', '2016-08-06 00:00', '2016-07-31 00:00', '2016-04-21 00:00', '2015-12-10 00:00', '2015-09-29 00:00', '2015-01-11 00:00', '2014-06-04 00:00', '2012-10-01 00:00', '2012-02-01 00:00',))
if mibBuilder.loadTexts: hpicfOpenFlowMIB.setLastUpdated('201707160000Z')
if mibBuilder.loadTexts: hpicfOpenFlowMIB.setOrganization('HP Networking')
hpicfOpenFlowNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 0))
hpicfOpenFlowObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1))
hpicfOpenFlowConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2))
hpicfOpenFlowStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("disableWithClearConfig", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowStatus.setStatus('current')
hpicfOpenFlowInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4), )
if mibBuilder.loadTexts: hpicfOpenFlowInstanceTable.setStatus('current')
hpicfOpenFlowInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1), ).setIndexNames((0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceName"))
if mibBuilder.loadTexts: hpicfOpenFlowInstanceEntry.setStatus('current')
hpicfOpenFlowInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hpicfOpenFlowInstanceName.setStatus('current')
hpicfOpenFlowInstanceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceAdminStatus.setStatus('current')
hpicfOpenFlowInstanceListenPortCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceListenPortCfg.setStatus('current')
hpicfOpenFlowInstanceListenPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 4), InetPortNumber().clone(6633)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceListenPort.setStatus('current')
hpicfOpenFlowInstanceListenPortIsOobm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceListenPortIsOobm.setStatus('current')
hpicfOpenFlowInstanceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2))).clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMode.setStatus('current')
hpicfOpenFlowInstanceFlowLocationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hardwareOnly", 1), ("hardwareAndSoftware", 2))).clone('hardwareAndSoftware')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceFlowLocationMode.setStatus('current')
hpicfOpenFlowConnectionInterruptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("failSecure", 1), ("failStandalone", 2))).clone('failSecure')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowConnectionInterruptionMode.setStatus('current')
hpicfOpenFlowInstanceHwRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 9), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceHwRateLimit.setStatus('current')
hpicfOpenFlowInstanceSwRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 10), Integer32().clone(100)).setUnits('packets per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceSwRateLimit.setStatus('current')
hpicfOpenFlowInstanceDatapathID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceDatapathID.setStatus('current')
hpicfOpenFlowInstanceNumOfHwFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceNumOfHwFlows.setStatus('current')
hpicfOpenFlowInstanceNumOfSwFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceNumOfSwFlows.setStatus('current')
hpicfOpenFlowInstanceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceOperStatus.setStatus('current')
hpicfOpenFlowInstanceMaxBackOffInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMaxBackOffInterval.setStatus('current')
hpicfOpenFlowInstanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceRowStatus.setStatus('current')
hpicfOpenFlowInstanceProbeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceProbeInterval.setStatus('current')
hpicfOpenFlowInstanceProtoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("v1dot0", 1), ("v1dot3", 2))).clone('v1dot3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceProtoVersion.setStatus('current')
hpicfOpenFlowInstanceProtoVersionOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceProtoVersionOnly.setStatus('current')
hpicfOpenFlowInstanceNumOfSwFlowTable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 20), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceNumOfSwFlowTable.setStatus('current')
hpicfOpenFlowInstanceOperStatusReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notApplicable", 1), ("hardwareResourcesUnavailable", 2), ("memberVLANNotConfigured", 3), ("memberVLANRemoved", 4), ("noValidPortsInMemberVLAN", 5), ("controllerVLANNotConfigured", 6), ("enableFailedInHardware", 7), ("disabled", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceOperStatusReason.setStatus('current')
hpicfOpenFlowInstanceEgressOnlyPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 22), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceEgressOnlyPorts.setStatus('current')
hpicfOpenFlowInstanceCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 23), Bits().clone(namedValues=NamedValues(("flowStatistics", 0), ("tableStatistics", 1), ("portStatistics", 2), ("groupStatistics", 3), ("meterStatistics", 4), ("blockPorts", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceCapabilities.setStatus('current')
hpicfOpenFlowInstanceHwTableMissCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceHwTableMissCount.setStatus('current')
hpicfOpenFlowInstanceTableModel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("singleTable", 2), ("policyEngineAndSoftware", 3), ("ipControlWithPolicyEngineAndSoftware", 4), ("customPipeline", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceTableModel.setStatus('current')
hpicfOpenFlowInstanceMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 26), VidList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMembers.setStatus('current')
hpicfOpenFlowInstancePipelineModel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("standardMatch", 1), ("ipcontrolTable", 2), ("customPipeline", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowInstancePipelineModel.setStatus('current')
hpicfOpenFlowInstanceDatapathDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceDatapathDesc.setStatus('current')
hpicfOpenFlowInstanceSourceMacGrpTable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceSourceMacGrpTable.setStatus('current')
hpicfOpenFlowInstanceDestMacGrpTable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceDestMacGrpTable.setStatus('current')
hpicfOpenFlowInstanceMissRuleDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("drop", 1), ("normal", 2), ("ctrl", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMissRuleDefaultAction.setStatus('current')
hpicfOpenFlowInstanceOverrideProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 32), Bits().clone(namedValues=NamedValues(("stp", 0), ("gvrp", 1), ("mvrp", 2), ("lacp", 3), ("dot1x", 4), ("udld", 5), ("loopprotect", 6), ("pvst", 7), ("smartlink", 8), ("dldp", 9), ("bonjour", 10), ("traditionalPipeline", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceOverrideProtocol.setStatus('current')
hpicfOpenFlowInstancePktInVlanTagging = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("inputForm", 1), ("tagAlways", 2), ("untagAlways", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowInstancePktInVlanTagging.setStatus('current')
hpicfOpenFlowInstanceMembershipTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 5), )
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMembershipTable.setStatus('deprecated')
hpicfOpenFlowInstanceMembershipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 5, 1), ).setIndexNames((0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceName"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMembershipEntry.setStatus('deprecated')
hpicfOpenFlowInstanceMembershipRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMembershipRowStatus.setStatus('deprecated')
hpicfOpenFlowControllerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6), )
if mibBuilder.loadTexts: hpicfOpenFlowControllerTable.setStatus('current')
hpicfOpenFlowControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1), ).setIndexNames((0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerID"))
if mibBuilder.loadTexts: hpicfOpenFlowControllerEntry.setStatus('current')
hpicfOpenFlowControllerID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfOpenFlowControllerID.setStatus('current')
hpicfOpenFlowControllerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowControllerInetAddressType.setStatus('current')
hpicfOpenFlowControllerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowControllerInetAddress.setStatus('current')
hpicfOpenFlowControllerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1, 4), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowControllerPort.setStatus('current')
hpicfOpenFlowControllerInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowControllerInterface.setStatus('current')
hpicfOpenFlowControllerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowControllerRowStatus.setStatus('current')
hpicfOpenFlowControllerSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1, 7), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowControllerSourceAddressType.setStatus('current')
hpicfOpenFlowControllerSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 6, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowControllerSourceAddress.setStatus('current')
hpicfOpenFlowInstanceControllerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 8), )
if mibBuilder.loadTexts: hpicfOpenFlowInstanceControllerTable.setStatus('current')
hpicfOpenFlowInstanceControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 8, 1), ).setIndexNames((0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceName"), (0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerID"))
if mibBuilder.loadTexts: hpicfOpenFlowInstanceControllerEntry.setStatus('current')
hpicfOpenFlowInstanceControllerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("disconnected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceControllerStatus.setStatus('current')
hpicfOpenFlowInstanceControllerState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("void", 1), ("backoff", 2), ("connecting", 3), ("active", 4), ("idle", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceControllerState.setStatus('current')
hpicfOpenFlowInstanceControllerRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("equal", 1), ("master", 2), ("slave", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceControllerRole.setStatus('current')
hpicfOpenFlowInstanceControllerConnSecure = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 8, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceControllerConnSecure.setStatus('current')
hpicfOpenFlowInstanceControllerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceControllerRowStatus.setStatus('current')
hpicfOpenFlowMaxInstances = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowMaxInstances.setStatus('current')
hpicfOpenFlowMaxFlows = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowMaxFlows.setStatus('current')
hpicfOpenFlowMaxControllers = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowMaxControllers.setStatus('current')
hpicfOpenFlowInstanceMeterTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 19), )
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterTable.setStatus('current')
hpicfOpenFlowInstanceMeterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 19, 1), ).setIndexNames((0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceName"), (0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterID"))
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterEntry.setStatus('current')
hpicfOpenFlowInstanceMeterID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 19, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterID.setStatus('current')
hpicfOpenFlowInstanceMeterFlowCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 19, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterFlowCount.setStatus('current')
hpicfOpenFlowInstanceMeterInputPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 19, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterInputPktCount.setStatus('current')
hpicfOpenFlowInstanceMeterInputByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 19, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterInputByteCount.setStatus('current')
hpicfOpenFlowInstanceMeterDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 19, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterDuration.setStatus('current')
hpicfOpenFlowInstanceMeterBandTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20), )
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterBandTable.setStatus('current')
hpicfOpenFlowInstanceMeterBandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20, 1), ).setIndexNames((0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceName"), (0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterID"), (0, "HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandID"))
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterBandEntry.setStatus('current')
hpicfOpenFlowInstanceMeterBandID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterBandID.setStatus('current')
hpicfOpenFlowInstanceMeterBandType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("mark", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterBandType.setStatus('current')
hpicfOpenFlowInstanceMeterBandRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterBandRate.setStatus('current')
hpicfOpenFlowInstanceMeterBandRateUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("kbps", 1), ("pps", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterBandRateUnit.setStatus('current')
hpicfOpenFlowInstanceMeterInBandPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterInBandPktCount.setStatus('current')
hpicfOpenFlowInstanceMeterInBandByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterInBandByteCount.setStatus('current')
hpicfOpenFlowInstanceMeterPrecedenceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 20, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowInstanceMeterPrecedenceLevel.setStatus('current')
hpicfOpenFlowScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 21))
hpicfOpenFlowIPControlTableUsage = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 21, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setUnits('%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowIPControlTableUsage.setStatus('current')
hpicfOpenFlowIPControlTableStatsRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 21, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOpenFlowIPControlTableStatsRefreshRate.setStatus('current')
hpicfOpenFlowIpControlTableMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 21, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowIpControlTableMode.setStatus('deprecated')
hpicfOpenFlowEgressOnlyPorts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 1, 21, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOpenFlowEgressOnlyPorts.setStatus('current')
hpicfOpenFlowCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 1))
hpicfOpenFlowGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2))
hpicfOpenFlowGlobalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 1)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowMaxInstances"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowMaxFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowMaxControllers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowGlobalConfigGroup = hpicfOpenFlowGlobalConfigGroup.setStatus('current')
hpicfOpenFlowInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 2)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceAdminStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPortCfg"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPort"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPortIsOobm"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceFlowLocationMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowConnectionInterruptionMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceHwRateLimit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceSwRateLimit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDatapathID"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfHwFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfSwFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOperStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMaxBackOffInterval"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceRowStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProbeInterval"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProtoVersion"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProtoVersionOnly"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfSwFlowTable"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOperStatusReason"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceEgressOnlyPorts"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceCapabilities"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceHwTableMissCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceTableModel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowInstanceGroup = hpicfOpenFlowInstanceGroup.setStatus('deprecated')
hpicfOpenFlowInstanceMembershipGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 3)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMembershipRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowInstanceMembershipGroup = hpicfOpenFlowInstanceMembershipGroup.setStatus('deprecated')
hpicfOpenFlowControllerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 4)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerInetAddressType"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerInetAddress"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerPort"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerInterface"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowControllerGroup = hpicfOpenFlowControllerGroup.setStatus('deprecated')
hpicfOpenFlowInstanceControllerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 6)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerState"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerRole"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerConnSecure"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowInstanceControllerGroup = hpicfOpenFlowInstanceControllerGroup.setStatus('current')
hpicfOpenFlowInstanceMeterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 13)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterFlowCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterInputPktCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterInputByteCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterDuration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowInstanceMeterGroup = hpicfOpenFlowInstanceMeterGroup.setStatus('current')
hpicfOpenFlowInstanceMeterBandGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 14)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandType"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandRate"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandRateUnit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterInBandPktCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterInBandByteCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterPrecedenceLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowInstanceMeterBandGroup = hpicfOpenFlowInstanceMeterBandGroup.setStatus('current')
hpicfOpenFlowScalarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 15)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowIPControlTableUsage"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowIPControlTableStatsRefreshRate"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowIpControlTableMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowEgressOnlyPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowScalarsGroup = hpicfOpenFlowScalarsGroup.setStatus('deprecated')
hpicfOpenFlowInstanceGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 16)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceAdminStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPortCfg"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPort"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPortIsOobm"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceFlowLocationMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowConnectionInterruptionMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceHwRateLimit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceSwRateLimit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDatapathID"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfHwFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfSwFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOperStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMaxBackOffInterval"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceRowStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProbeInterval"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProtoVersion"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProtoVersionOnly"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfSwFlowTable"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOperStatusReason"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceEgressOnlyPorts"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceCapabilities"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceHwTableMissCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceTableModel"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMembers"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstancePipelineModel"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDatapathDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowInstanceGroup1 = hpicfOpenFlowInstanceGroup1.setStatus('deprecated')
hpicfOpenFlowScalarsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 17)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowIPControlTableUsage"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowIPControlTableStatsRefreshRate"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowEgressOnlyPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowScalarsGroup1 = hpicfOpenFlowScalarsGroup1.setStatus('current')
hpicfOpenFlowInstanceGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 20)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceAdminStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPortCfg"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPort"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPortIsOobm"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceFlowLocationMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowConnectionInterruptionMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceHwRateLimit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceSwRateLimit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDatapathID"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfHwFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfSwFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOperStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMaxBackOffInterval"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceRowStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProbeInterval"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProtoVersion"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProtoVersionOnly"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfSwFlowTable"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOperStatusReason"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceEgressOnlyPorts"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceCapabilities"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceHwTableMissCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceTableModel"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMembers"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstancePipelineModel"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDatapathDesc"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceSourceMacGrpTable"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDestMacGrpTable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowInstanceGroup2 = hpicfOpenFlowInstanceGroup2.setStatus('deprecated')
hpicfOpenFlowInstanceGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 21)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceAdminStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPortCfg"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPort"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceListenPortIsOobm"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceFlowLocationMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowConnectionInterruptionMode"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceHwRateLimit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceSwRateLimit"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDatapathID"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfHwFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfSwFlows"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOperStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMaxBackOffInterval"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceRowStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProbeInterval"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProtoVersion"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceProtoVersionOnly"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceNumOfSwFlowTable"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOperStatusReason"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceEgressOnlyPorts"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceCapabilities"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceHwTableMissCount"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceTableModel"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMembers"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstancePipelineModel"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDatapathDesc"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceSourceMacGrpTable"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceDestMacGrpTable"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMissRuleDefaultAction"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceOverrideProtocol"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstancePktInVlanTagging"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowInstanceGroup3 = hpicfOpenFlowInstanceGroup3.setStatus('current')
hpicfOpenFlowControllerGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 2, 22)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerInetAddressType"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerInetAddress"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerPort"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerInterface"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerRowStatus"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerSourceAddressType"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerSourceAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowControllerGroup1 = hpicfOpenFlowControllerGroup1.setStatus('current')
hpicfOpenFlowCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 1, 1)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowGlobalConfigGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMembershipGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowScalarsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowCompliance = hpicfOpenFlowCompliance.setStatus('deprecated')
hpicfOpenFlowCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 1, 2)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowGlobalConfigGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceGroup1"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowScalarsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowCompliance1 = hpicfOpenFlowCompliance1.setStatus('deprecated')
hpicfOpenFlowCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 1, 3)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowGlobalConfigGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceGroup2"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowScalarsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowCompliance2 = hpicfOpenFlowCompliance2.setStatus('deprecated')
hpicfOpenFlowCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 1, 4)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowGlobalConfigGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceGroup3"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowScalarsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowCompliance3 = hpicfOpenFlowCompliance3.setStatus('deprecated')
hpicfOpenFlowCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89, 2, 1, 5)).setObjects(("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowGlobalConfigGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceGroup3"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowControllerGroup1"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceControllerGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowInstanceMeterBandGroup"), ("HP-ICF-OPENFLOW-MIB", "hpicfOpenFlowScalarsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOpenFlowCompliance4 = hpicfOpenFlowCompliance4.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-OPENFLOW-MIB", hpicfOpenFlowInstanceMaxBackOffInterval=hpicfOpenFlowInstanceMaxBackOffInterval, hpicfOpenFlowInstanceMeterInputPktCount=hpicfOpenFlowInstanceMeterInputPktCount, hpicfOpenFlowScalarsGroup=hpicfOpenFlowScalarsGroup, hpicfOpenFlowInstanceMeterBandEntry=hpicfOpenFlowInstanceMeterBandEntry, hpicfOpenFlowInstanceGroup2=hpicfOpenFlowInstanceGroup2, hpicfOpenFlowInstanceFlowLocationMode=hpicfOpenFlowInstanceFlowLocationMode, hpicfOpenFlowInstanceControllerRole=hpicfOpenFlowInstanceControllerRole, hpicfOpenFlowInstanceMeterFlowCount=hpicfOpenFlowInstanceMeterFlowCount, hpicfOpenFlowControllerSourceAddress=hpicfOpenFlowControllerSourceAddress, hpicfOpenFlowInstanceCapabilities=hpicfOpenFlowInstanceCapabilities, hpicfOpenFlowInstanceGroup3=hpicfOpenFlowInstanceGroup3, hpicfOpenFlowInstanceEgressOnlyPorts=hpicfOpenFlowInstanceEgressOnlyPorts, hpicfOpenFlowInstanceMembershipRowStatus=hpicfOpenFlowInstanceMembershipRowStatus, hpicfOpenFlowMaxFlows=hpicfOpenFlowMaxFlows, hpicfOpenFlowControllerGroup1=hpicfOpenFlowControllerGroup1, hpicfOpenFlowMaxControllers=hpicfOpenFlowMaxControllers, hpicfOpenFlowInstanceMeterBandTable=hpicfOpenFlowInstanceMeterBandTable, hpicfOpenFlowInstanceHwRateLimit=hpicfOpenFlowInstanceHwRateLimit, hpicfOpenFlowInstanceProbeInterval=hpicfOpenFlowInstanceProbeInterval, hpicfOpenFlowInstanceOperStatus=hpicfOpenFlowInstanceOperStatus, hpicfOpenFlowInstanceTableModel=hpicfOpenFlowInstanceTableModel, hpicfOpenFlowCompliance2=hpicfOpenFlowCompliance2, hpicfOpenFlowInstanceNumOfHwFlows=hpicfOpenFlowInstanceNumOfHwFlows, hpicfOpenFlowInstanceMissRuleDefaultAction=hpicfOpenFlowInstanceMissRuleDefaultAction, hpicfOpenFlowConnectionInterruptionMode=hpicfOpenFlowConnectionInterruptionMode, hpicfOpenFlowStatus=hpicfOpenFlowStatus, hpicfOpenFlowInstanceMembershipEntry=hpicfOpenFlowInstanceMembershipEntry, hpicfOpenFlowInstanceMeterBandRateUnit=hpicfOpenFlowInstanceMeterBandRateUnit, hpicfOpenFlowInstanceControllerEntry=hpicfOpenFlowInstanceControllerEntry, hpicfOpenFlowIPControlTableStatsRefreshRate=hpicfOpenFlowIPControlTableStatsRefreshRate, hpicfOpenFlowIPControlTableUsage=hpicfOpenFlowIPControlTableUsage, hpicfOpenFlowCompliances=hpicfOpenFlowCompliances, hpicfOpenFlowCompliance3=hpicfOpenFlowCompliance3, hpicfOpenFlowInstanceControllerGroup=hpicfOpenFlowInstanceControllerGroup, hpicfOpenFlowInstanceControllerConnSecure=hpicfOpenFlowInstanceControllerConnSecure, hpicfOpenFlowInstanceMeterBandRate=hpicfOpenFlowInstanceMeterBandRate, hpicfOpenFlowGroups=hpicfOpenFlowGroups, hpicfOpenFlowInstanceControllerTable=hpicfOpenFlowInstanceControllerTable, hpicfOpenFlowInstanceMeterEntry=hpicfOpenFlowInstanceMeterEntry, hpicfOpenFlowInstanceAdminStatus=hpicfOpenFlowInstanceAdminStatus, hpicfOpenFlowInstanceName=hpicfOpenFlowInstanceName, hpicfOpenFlowMIB=hpicfOpenFlowMIB, hpicfOpenFlowMaxInstances=hpicfOpenFlowMaxInstances, hpicfOpenFlowInstanceMode=hpicfOpenFlowInstanceMode, hpicfOpenFlowInstanceMeterBandID=hpicfOpenFlowInstanceMeterBandID, hpicfOpenFlowInstanceOperStatusReason=hpicfOpenFlowInstanceOperStatusReason, hpicfOpenFlowInstanceMeterInputByteCount=hpicfOpenFlowInstanceMeterInputByteCount, hpicfOpenFlowInstanceNumOfSwFlows=hpicfOpenFlowInstanceNumOfSwFlows, hpicfOpenFlowInstanceMeterBandType=hpicfOpenFlowInstanceMeterBandType, hpicfOpenFlowInstanceDatapathDesc=hpicfOpenFlowInstanceDatapathDesc, PYSNMP_MODULE_ID=hpicfOpenFlowMIB, hpicfOpenFlowInstanceProtoVersionOnly=hpicfOpenFlowInstanceProtoVersionOnly, hpicfOpenFlowInstanceMeterTable=hpicfOpenFlowInstanceMeterTable, hpicfOpenFlowInstanceMeterDuration=hpicfOpenFlowInstanceMeterDuration, hpicfOpenFlowControllerPort=hpicfOpenFlowControllerPort, hpicfOpenFlowControllerInetAddressType=hpicfOpenFlowControllerInetAddressType, hpicfOpenFlowInstanceMembers=hpicfOpenFlowInstanceMembers, hpicfOpenFlowScalarObjects=hpicfOpenFlowScalarObjects, hpicfOpenFlowInstanceListenPort=hpicfOpenFlowInstanceListenPort, hpicfOpenFlowInstanceHwTableMissCount=hpicfOpenFlowInstanceHwTableMissCount, hpicfOpenFlowInstanceNumOfSwFlowTable=hpicfOpenFlowInstanceNumOfSwFlowTable, hpicfOpenFlowNotifications=hpicfOpenFlowNotifications, hpicfOpenFlowInstanceControllerStatus=hpicfOpenFlowInstanceControllerStatus, hpicfOpenFlowInstanceGroup=hpicfOpenFlowInstanceGroup, hpicfOpenFlowInstanceMeterPrecedenceLevel=hpicfOpenFlowInstanceMeterPrecedenceLevel, hpicfOpenFlowGlobalConfigGroup=hpicfOpenFlowGlobalConfigGroup, hpicfOpenFlowInstanceListenPortCfg=hpicfOpenFlowInstanceListenPortCfg, hpicfOpenFlowConformance=hpicfOpenFlowConformance, hpicfOpenFlowControllerSourceAddressType=hpicfOpenFlowControllerSourceAddressType, hpicfOpenFlowControllerInterface=hpicfOpenFlowControllerInterface, hpicfOpenFlowControllerTable=hpicfOpenFlowControllerTable, hpicfOpenFlowInstanceTable=hpicfOpenFlowInstanceTable, hpicfOpenFlowInstanceDatapathID=hpicfOpenFlowInstanceDatapathID, hpicfOpenFlowScalarsGroup1=hpicfOpenFlowScalarsGroup1, hpicfOpenFlowInstanceGroup1=hpicfOpenFlowInstanceGroup1, hpicfOpenFlowInstanceOverrideProtocol=hpicfOpenFlowInstanceOverrideProtocol, hpicfOpenFlowInstanceMeterID=hpicfOpenFlowInstanceMeterID, hpicfOpenFlowInstanceDestMacGrpTable=hpicfOpenFlowInstanceDestMacGrpTable, hpicfOpenFlowInstanceControllerRowStatus=hpicfOpenFlowInstanceControllerRowStatus, hpicfOpenFlowInstanceRowStatus=hpicfOpenFlowInstanceRowStatus, hpicfOpenFlowInstancePipelineModel=hpicfOpenFlowInstancePipelineModel, hpicfOpenFlowEgressOnlyPorts=hpicfOpenFlowEgressOnlyPorts, hpicfOpenFlowControllerGroup=hpicfOpenFlowControllerGroup, hpicfOpenFlowInstanceListenPortIsOobm=hpicfOpenFlowInstanceListenPortIsOobm, hpicfOpenFlowCompliance4=hpicfOpenFlowCompliance4, hpicfOpenFlowInstanceMeterBandGroup=hpicfOpenFlowInstanceMeterBandGroup, hpicfOpenFlowControllerID=hpicfOpenFlowControllerID, hpicfOpenFlowControllerInetAddress=hpicfOpenFlowControllerInetAddress, hpicfOpenFlowInstanceMembershipGroup=hpicfOpenFlowInstanceMembershipGroup, hpicfOpenFlowInstanceSourceMacGrpTable=hpicfOpenFlowInstanceSourceMacGrpTable, hpicfOpenFlowObjects=hpicfOpenFlowObjects, hpicfOpenFlowInstanceProtoVersion=hpicfOpenFlowInstanceProtoVersion, hpicfOpenFlowInstanceMeterInBandPktCount=hpicfOpenFlowInstanceMeterInBandPktCount, hpicfOpenFlowInstancePktInVlanTagging=hpicfOpenFlowInstancePktInVlanTagging, hpicfOpenFlowInstanceControllerState=hpicfOpenFlowInstanceControllerState, hpicfOpenFlowInstanceSwRateLimit=hpicfOpenFlowInstanceSwRateLimit, hpicfOpenFlowControllerRowStatus=hpicfOpenFlowControllerRowStatus, hpicfOpenFlowInstanceMeterInBandByteCount=hpicfOpenFlowInstanceMeterInBandByteCount, hpicfOpenFlowControllerEntry=hpicfOpenFlowControllerEntry, hpicfOpenFlowIpControlTableMode=hpicfOpenFlowIpControlTableMode, hpicfOpenFlowCompliance1=hpicfOpenFlowCompliance1, hpicfOpenFlowInstanceMeterGroup=hpicfOpenFlowInstanceMeterGroup, hpicfOpenFlowCompliance=hpicfOpenFlowCompliance, hpicfOpenFlowInstanceEntry=hpicfOpenFlowInstanceEntry, hpicfOpenFlowInstanceMembershipTable=hpicfOpenFlowInstanceMembershipTable)
