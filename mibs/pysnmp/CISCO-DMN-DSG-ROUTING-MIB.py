#
# PySNMP MIB module CISCO-DMN-DSG-ROUTING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-ROUTING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, ModuleIdentity, Bits, IpAddress, NotificationType, Unsigned32, Counter32, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "Bits", "IpAddress", "NotificationType", "Unsigned32", "Counter32", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "Gauge32", "iso")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
ciscoDSGRouting = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40))
ciscoDSGRouting.setRevisions(('2012-05-14 15:00', '2012-03-07 07:30',))
if mibBuilder.loadTexts: ciscoDSGRouting.setLastUpdated('201205141500Z')
if mibBuilder.loadTexts: ciscoDSGRouting.setOrganization('Cisco Systems, Inc.')
multicastRouteTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 1), )
if mibBuilder.loadTexts: multicastRouteTable.setStatus('current')
multicastRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ROUTING-MIB", "multicastRouteIndex"))
if mibBuilder.loadTexts: multicastRouteEntry.setStatus('current')
multicastRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: multicastRouteIndex.setStatus('current')
multicastRouteV4IPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multicastRouteV4IPAddr.setStatus('current')
multicastRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multicastRouteRowStatus.setStatus('current')
staticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2), )
if mibBuilder.loadTexts: staticRouteTable.setStatus('current')
staticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ROUTING-MIB", "staticRouteIndex"))
if mibBuilder.loadTexts: staticRouteEntry.setStatus('current')
staticRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staticRouteIndex.setStatus('current')
staticRouteV4IPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticRouteV4IPAddr.setStatus('current')
staticRouteV4Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticRouteV4Mask.setStatus('current')
staticRouteV4Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticRouteV4Gateway.setStatus('current')
staticRoutePort1Enable = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticRoutePort1Enable.setStatus('current')
staticRoutePort2Enable = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticRoutePort2Enable.setStatus('current')
staticRoutePort3Enable = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticRoutePort3Enable.setStatus('current')
staticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 2, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticRouteRowStatus.setStatus('current')
unicastRoutesTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3), )
if mibBuilder.loadTexts: unicastRoutesTable.setStatus('current')
unicastRoutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ROUTING-MIB", "unicastRoutesIndex"))
if mibBuilder.loadTexts: unicastRoutesEntry.setStatus('current')
unicastRoutesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesIndex.setStatus('current')
unicastRoutesPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesPortID.setStatus('current')
unicastRoutesV4IPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesV4IPAddr.setStatus('current')
unicastRoutesV4Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesV4Mask.setStatus('current')
unicastRoutesV4Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesV4Gateway.setStatus('current')
unicastRoutesMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesMTU.setStatus('current')
unicastRoutesTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesTTL.setStatus('current')
unicastRoutesGWOrHost = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("gateway", 1), ("host", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesGWOrHost.setStatus('current')
unicastRoutesType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 40, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: unicastRoutesType.setStatus('current')
mibBuilder.exportSymbols("CISCO-DMN-DSG-ROUTING-MIB", unicastRoutesType=unicastRoutesType, multicastRouteTable=multicastRouteTable, unicastRoutesTable=unicastRoutesTable, unicastRoutesV4Gateway=unicastRoutesV4Gateway, staticRoutePort1Enable=staticRoutePort1Enable, staticRouteRowStatus=staticRouteRowStatus, staticRouteTable=staticRouteTable, unicastRoutesV4IPAddr=unicastRoutesV4IPAddr, staticRoutePort2Enable=staticRoutePort2Enable, unicastRoutesPortID=unicastRoutesPortID, staticRouteV4Mask=staticRouteV4Mask, multicastRouteEntry=multicastRouteEntry, multicastRouteIndex=multicastRouteIndex, PYSNMP_MODULE_ID=ciscoDSGRouting, staticRoutePort3Enable=staticRoutePort3Enable, unicastRoutesV4Mask=unicastRoutesV4Mask, ciscoDSGRouting=ciscoDSGRouting, unicastRoutesEntry=unicastRoutesEntry, staticRouteEntry=staticRouteEntry, multicastRouteRowStatus=multicastRouteRowStatus, staticRouteV4IPAddr=staticRouteV4IPAddr, unicastRoutesTTL=unicastRoutesTTL, unicastRoutesGWOrHost=unicastRoutesGWOrHost, staticRouteIndex=staticRouteIndex, multicastRouteV4IPAddr=multicastRouteV4IPAddr, unicastRoutesIndex=unicastRoutesIndex, staticRouteV4Gateway=staticRouteV4Gateway, unicastRoutesMTU=unicastRoutesMTU)
