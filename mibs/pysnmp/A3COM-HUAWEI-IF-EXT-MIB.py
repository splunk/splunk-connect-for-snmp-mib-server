#
# PySNMP MIB module A3COM-HUAWEI-IF-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-IF-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:50:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ModuleIdentity, Integer32, iso, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, NotificationType, IpAddress, TimeTicks, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "Integer32", "iso", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "NotificationType", "IpAddress", "TimeTicks", "Counter32", "Bits")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
h3cIfExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40))
h3cIfExt.setRevisions(('2009-05-06 19:36', '2004-11-13 19:36',))
if mibBuilder.loadTexts: h3cIfExt.setLastUpdated('200905061936Z')
if mibBuilder.loadTexts: h3cIfExt.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cIfExtScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 1))
h3cIfStatGlobalFlowInterval = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIfStatGlobalFlowInterval.setStatus('current')
h3cIfExtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2))
h3cIfStat = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1))
h3cIfStatScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 1))
h3cIfStatTable = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2))
h3cIfFlowStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1), )
if mibBuilder.loadTexts: h3cIfFlowStatTable.setStatus('current')
h3cIfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cIfStatEntry.setStatus('current')
h3cIfStatFlowInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIfStatFlowInterval.setStatus('current')
h3cIfStatFlowInBits = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowInBits.setStatus('current')
h3cIfStatFlowOutBits = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowOutBits.setStatus('current')
h3cIfStatFlowInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowInPkts.setStatus('current')
h3cIfStatFlowOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowOutPkts.setStatus('current')
h3cIfStatFlowInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowInBytes.setStatus('current')
h3cIfStatFlowOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowOutBytes.setStatus('current')
h3cIfSpeedStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 2), )
if mibBuilder.loadTexts: h3cIfSpeedStatTable.setStatus('current')
h3cIfSpeedStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cIfSpeedStatEntry.setStatus('current')
h3cIfSpeedStatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 2, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIfSpeedStatInterval.setStatus('current')
h3cIfSpeedStatInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfSpeedStatInPkts.setStatus('current')
h3cIfSpeedStatOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfSpeedStatOutPkts.setStatus('current')
h3cIfSpeedStatInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfSpeedStatInBytes.setStatus('current')
h3cIfSpeedStatOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfSpeedStatOutBytes.setStatus('current')
h3cIfHCFlowStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 3), )
if mibBuilder.loadTexts: h3cIfHCFlowStatTable.setStatus('current')
h3cIfHCFlowStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cIfHCFlowStatEntry.setStatus('current')
h3cIfStatFlowHCInBits = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 3, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowHCInBits.setStatus('current')
h3cIfStatFlowHCOutBits = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 3, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowHCOutBits.setStatus('current')
h3cIfStatFlowHCInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 3, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowHCInPkts.setStatus('current')
h3cIfStatFlowHCOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 3, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowHCOutPkts.setStatus('current')
h3cIfStatFlowHCInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 3, 1, 5), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowHCInBytes.setStatus('current')
h3cIfStatFlowHCOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 1, 2, 3, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatFlowHCOutBytes.setStatus('current')
h3cIfControl = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2))
h3cRTParentIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 1), )
if mibBuilder.loadTexts: h3cRTParentIfTable.setStatus('current')
h3cRTParentIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-IF-EXT-MIB", "h3cRTParentIfIndex"))
if mibBuilder.loadTexts: h3cRTParentIfEntry.setStatus('current')
h3cRTParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cRTParentIfIndex.setStatus('current')
h3cRTMinSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRTMinSubIfOrdinal.setStatus('current')
h3cRTMaxSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRTMaxSubIfOrdinal.setStatus('current')
h3cRTSubIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 2), )
if mibBuilder.loadTexts: h3cRTSubIfTable.setStatus('current')
h3cRTSubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-IF-EXT-MIB", "h3cRTSubIfParentIfIndex"), (0, "A3COM-HUAWEI-IF-EXT-MIB", "h3cRTSubIfOrdinal"))
if mibBuilder.loadTexts: h3cRTSubIfEntry.setStatus('current')
h3cRTSubIfParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cRTSubIfParentIfIndex.setStatus('current')
h3cRTSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cRTSubIfOrdinal.setStatus('current')
h3cRTSubIfSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRTSubIfSubIfIndex.setStatus('current')
h3cRTSubIfSubIfDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRTSubIfSubIfDesc.setStatus('current')
h3cRTSubIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRTSubIfRowStatus.setStatus('current')
h3cIfLinkModeTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 3), )
if mibBuilder.loadTexts: h3cIfLinkModeTable.setStatus('current')
h3cIfLinkModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-IF-EXT-MIB", "h3cIfLinkModeIndex"))
if mibBuilder.loadTexts: h3cIfLinkModeEntry.setStatus('current')
h3cIfLinkModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cIfLinkModeIndex.setStatus('current')
h3cIfLinkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridgeMode", 1), ("routeMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIfLinkMode.setStatus('current')
h3cIfLinkModeSwitchSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 2, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfLinkModeSwitchSupport.setStatus('current')
h3cIfInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3))
h3cIfPhysicalNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfPhysicalNumber.setStatus('current')
h3cIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2), )
if mibBuilder.loadTexts: h3cIfTable.setStatus('current')
h3cIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cIfEntry.setStatus('current')
h3cIfUpDownTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfUpDownTimes.setStatus('current')
h3cIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIfMtu.setStatus('current')
h3cIfBandwidthRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfBandwidthRate.setStatus('current')
h3cIfDiscardPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfDiscardPktRate.setStatus('current')
h3cIfStatusKeepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfStatusKeepTime.setStatus('current')
h3cIfInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfInNUcastPkts.setStatus('current')
h3cIfOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfOutNUcastPkts.setStatus('current')
h3cIfIsPoe = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 2, 3, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIfIsPoe.setStatus('current')
h3cIfExtTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3))
h3cIfExtTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3, 0))
h3cIfBandwidthUsageHigh = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3, 0, 1)).setObjects(("IF-MIB", "ifDescr"), ("A3COM-HUAWEI-IF-EXT-MIB", "h3cIfBandwidthRate"), ("A3COM-HUAWEI-IF-EXT-MIB", "h3cIfBandwidthUpperLimit"))
if mibBuilder.loadTexts: h3cIfBandwidthUsageHigh.setStatus('current')
h3cIfDiscardPktRateHigh = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3, 0, 2)).setObjects(("IF-MIB", "ifDescr"), ("A3COM-HUAWEI-IF-EXT-MIB", "h3cIfDiscardPktRate"), ("A3COM-HUAWEI-IF-EXT-MIB", "h3cIfDiscardPktRateUpperLimit"))
if mibBuilder.loadTexts: h3cIfDiscardPktRateHigh.setStatus('current')
h3cIfExtTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3, 1))
h3cIfExtTrapCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3, 1, 1), )
if mibBuilder.loadTexts: h3cIfExtTrapCfgTable.setStatus('current')
h3cIfExtTrapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cIfExtTrapCfgEntry.setStatus('current')
h3cIfBandwidthUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIfBandwidthUpperLimit.setStatus('current')
h3cIfDiscardPktRateUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 40, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIfDiscardPktRateUpperLimit.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-IF-EXT-MIB", h3cIfExtTrapObject=h3cIfExtTrapObject, h3cIfExt=h3cIfExt, h3cIfDiscardPktRate=h3cIfDiscardPktRate, h3cRTSubIfEntry=h3cRTSubIfEntry, h3cIfStatFlowOutPkts=h3cIfStatFlowOutPkts, h3cIfInNUcastPkts=h3cIfInNUcastPkts, h3cIfLinkModeTable=h3cIfLinkModeTable, h3cIfStatScalarGroup=h3cIfStatScalarGroup, h3cRTSubIfSubIfIndex=h3cRTSubIfSubIfIndex, h3cIfSpeedStatOutBytes=h3cIfSpeedStatOutBytes, h3cIfSpeedStatInBytes=h3cIfSpeedStatInBytes, h3cIfStatFlowInPkts=h3cIfStatFlowInPkts, h3cIfStatFlowInBytes=h3cIfStatFlowInBytes, h3cIfLinkModeEntry=h3cIfLinkModeEntry, h3cIfSpeedStatInterval=h3cIfSpeedStatInterval, h3cIfControl=h3cIfControl, h3cIfHCFlowStatTable=h3cIfHCFlowStatTable, h3cIfStatFlowOutBytes=h3cIfStatFlowOutBytes, h3cIfExtTrapPrex=h3cIfExtTrapPrex, h3cIfLinkModeIndex=h3cIfLinkModeIndex, h3cRTSubIfTable=h3cRTSubIfTable, h3cIfStatFlowHCInPkts=h3cIfStatFlowHCInPkts, h3cIfEntry=h3cIfEntry, h3cIfHCFlowStatEntry=h3cIfHCFlowStatEntry, h3cRTParentIfTable=h3cRTParentIfTable, h3cIfDiscardPktRateHigh=h3cIfDiscardPktRateHigh, h3cRTSubIfRowStatus=h3cRTSubIfRowStatus, h3cRTSubIfParentIfIndex=h3cRTSubIfParentIfIndex, h3cRTMinSubIfOrdinal=h3cRTMinSubIfOrdinal, h3cIfUpDownTimes=h3cIfUpDownTimes, h3cIfExtScalarGroup=h3cIfExtScalarGroup, h3cIfInterfaces=h3cIfInterfaces, h3cIfStatTable=h3cIfStatTable, h3cIfBandwidthUpperLimit=h3cIfBandwidthUpperLimit, h3cIfLinkModeSwitchSupport=h3cIfLinkModeSwitchSupport, h3cIfStatFlowHCOutPkts=h3cIfStatFlowHCOutPkts, h3cIfStatFlowHCInBits=h3cIfStatFlowHCInBits, h3cIfStatEntry=h3cIfStatEntry, h3cIfTable=h3cIfTable, h3cIfSpeedStatInPkts=h3cIfSpeedStatInPkts, h3cIfSpeedStatOutPkts=h3cIfSpeedStatOutPkts, h3cIfStatFlowHCOutBits=h3cIfStatFlowHCOutBits, h3cRTMaxSubIfOrdinal=h3cRTMaxSubIfOrdinal, h3cIfSpeedStatEntry=h3cIfSpeedStatEntry, h3cIfStatFlowHCOutBytes=h3cIfStatFlowHCOutBytes, h3cIfStatFlowHCInBytes=h3cIfStatFlowHCInBytes, h3cIfLinkMode=h3cIfLinkMode, h3cIfExtTrap=h3cIfExtTrap, h3cIfDiscardPktRateUpperLimit=h3cIfDiscardPktRateUpperLimit, h3cIfStatusKeepTime=h3cIfStatusKeepTime, h3cIfFlowStatTable=h3cIfFlowStatTable, h3cRTSubIfSubIfDesc=h3cRTSubIfSubIfDesc, h3cIfStat=h3cIfStat, h3cIfPhysicalNumber=h3cIfPhysicalNumber, h3cIfIsPoe=h3cIfIsPoe, h3cIfStatFlowInterval=h3cIfStatFlowInterval, h3cRTParentIfIndex=h3cRTParentIfIndex, h3cIfOutNUcastPkts=h3cIfOutNUcastPkts, h3cIfExtTrapCfgEntry=h3cIfExtTrapCfgEntry, PYSNMP_MODULE_ID=h3cIfExt, h3cIfBandwidthUsageHigh=h3cIfBandwidthUsageHigh, h3cIfStatFlowInBits=h3cIfStatFlowInBits, h3cRTParentIfEntry=h3cRTParentIfEntry, h3cIfMtu=h3cIfMtu, h3cIfBandwidthRate=h3cIfBandwidthRate, h3cRTSubIfOrdinal=h3cRTSubIfOrdinal, h3cIfStatFlowOutBits=h3cIfStatFlowOutBits, h3cIfSpeedStatTable=h3cIfSpeedStatTable, h3cIfStatGlobalFlowInterval=h3cIfStatGlobalFlowInterval, h3cIfExtGroup=h3cIfExtGroup, h3cIfExtTrapCfgTable=h3cIfExtTrapCfgTable)
