#
# PySNMP MIB module ZHNVOICE (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHNVOICE
# Produced by pysmi-0.3.4 at Mon Apr 29 21:40:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity, iso, TimeTicks, Unsigned32, Counter32, Integer32, Counter64, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity", "iso", "TimeTicks", "Unsigned32", "Counter32", "Integer32", "Counter64", "IpAddress", "Gauge32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
zhoneWtn, = mibBuilder.importSymbols("Zhone", "zhoneWtn")
ZhoneRowStatus, = mibBuilder.importSymbols("Zhone-TC", "ZhoneRowStatus")
zhnVoice = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40))
zhnVoice.setRevisions(('2010-04-01 00:00', '2011-02-24 00:00', '2011-10-28 00:00', '2012-01-26 12:00', '2012-04-18 12:00', '2012-05-16 12:00', '2012-07-23 12:00',))
if mibBuilder.loadTexts: zhnVoice.setLastUpdated('201207231200Z')
if mibBuilder.loadTexts: zhnVoice.setOrganization('Zhone Technologies, Inc.')
class VoiceProfileLineStateType(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class DTMFMethodValues(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class HookFlashMethodValues(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class RegionValues(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class VoiceTransportValues(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class VoiceLineStatusValues(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class VoiceLineCallStateValues(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class VoiceProfileAddressModes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ip", 1), ("ipBracketed", 2), ("domainName", 3))

class VoiceProfileSwitchTypes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 99))
    namedValues = NamedValues(("broadSoft", 1), ("cirpack", 2), ("genband", 3), ("metaSwitch", 4), ("nortel", 5), ("networkOnly", 6), ("taqua", 7), ("softX3000", 8), ("axtelCS2K", 9), ("copperCom", 10), ("openSer", 11), ("utStarCom", 12), ("ericsson", 13), ("unknown", 99))

zhnVoiceNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 0))
voiceRegistrationUp = NotificationType((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 0, 1))
if mibBuilder.loadTexts: voiceRegistrationUp.setStatus('current')
voiceRegistrationDown = NotificationType((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 0, 2))
if mibBuilder.loadTexts: voiceRegistrationDown.setStatus('current')
zhnVoiceServiceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1))
voiceServiceTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 1), )
if mibBuilder.loadTexts: voiceServiceTable.setStatus('current')
voiceServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 1, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"))
if mibBuilder.loadTexts: voiceServiceEntry.setStatus('current')
voiceProfileNumberOfEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileNumberOfEntries.setStatus('current')
voiceBoundIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceBoundIfName.setStatus('current')
voiceBoundIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceBoundIpAddr.setStatus('current')
voiceServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceServiceIndex.setStatus('current')
capabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2))
capabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1), )
if mibBuilder.loadTexts: capabilitiesTable.setStatus('current')
capabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"))
if mibBuilder.loadTexts: capabilitiesEntry.setStatus('current')
maxProfileCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxProfileCount.setStatus('current')
maxLineCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxLineCount.setStatus('current')
maxSessionsPerLine = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxSessionsPerLine.setStatus('current')
maxSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxSessionCount.setStatus('current')
signalingProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: signalingProtocols.setStatus('current')
regions = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: regions.setStatus('current')
rtcp = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtcp.setStatus('current')
srtp = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtp.setStatus('current')
rtpRedundancy = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtpRedundancy.setStatus('current')
dscpCoupled = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dscpCoupled.setStatus('current')
ethernetTaggingCoupled = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetTaggingCoupled.setStatus('current')
pstnSoftSwitchOver = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pstnSoftSwitchOver.setStatus('current')
faxT38 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxT38.setStatus('current')
faxPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxPassThrough.setStatus('current')
modemPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemPassThrough.setStatus('current')
toneGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: toneGeneration.setStatus('current')
ringGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringGeneration.setStatus('current')
digitMapCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: digitMapCapabilities.setStatus('current')
numberingPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberingPlan.setStatus('current')
buttonMap = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buttonMap.setStatus('current')
voicePortTests = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 1, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voicePortTests.setStatus('current')
capabilitiesSIPTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2), )
if mibBuilder.loadTexts: capabilitiesSIPTable.setStatus('current')
capabilitiesSIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"))
if mibBuilder.loadTexts: capabilitiesSIPEntry.setStatus('current')
role = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: role.setStatus('current')
extensionsSIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extensionsSIP.setStatus('current')
transports = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transports.setStatus('current')
uriSchemes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uriSchemes.setStatus('current')
eventSubscription = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventSubscription.setStatus('current')
responseMap = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: responseMap.setStatus('current')
tlsKeyExchangeProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tlsKeyExchangeProtocols.setStatus('current')
capabilitiesMGCPTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 3), )
if mibBuilder.loadTexts: capabilitiesMGCPTable.setStatus('current')
capabilitiesMGCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 3, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"))
if mibBuilder.loadTexts: capabilitiesMGCPEntry.setStatus('current')
extensionsMGCP = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extensionsMGCP.setStatus('current')
capabilitiesCodecsTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 4), )
if mibBuilder.loadTexts: capabilitiesCodecsTable.setStatus('current')
capabilitiesCodecsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 4, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "codecIndex"))
if mibBuilder.loadTexts: capabilitiesCodecsEntry.setStatus('current')
codecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: codecIndex.setStatus('current')
entryID = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entryID.setStatus('current')
codec = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: codec.setStatus('current')
bitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bitRate.setStatus('current')
packetizationPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetizationPeriod.setStatus('current')
silenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 2, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: silenceSuppression.setStatus('current')
voiceProfiles = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3))
voiceProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1), )
if mibBuilder.loadTexts: voiceProfileTable.setStatus('current')
voiceProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"))
if mibBuilder.loadTexts: voiceProfileEntry.setStatus('current')
voiceProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileIndex.setStatus('current')
voiceProfileEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 2), VoiceProfileLineStateType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileEnable.setStatus('current')
voiceProfileReset = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileReset.setStatus('current')
voiceProfileNumberOfLines = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileNumberOfLines.setStatus('current')
voiceProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileName.setStatus('current')
voiceProfileSignalingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSignalingProtocol.setStatus('current')
voiceProfileMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileMaxSessions.setStatus('current')
voiceProfileDtmfMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 8), DTMFMethodValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileDtmfMethod.setStatus('current')
voiceProfileDtmfMethodG711 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 9), DTMFMethodValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileDtmfMethodG711.setStatus('current')
voiceProfileHookFlashMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 10), HookFlashMethodValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileHookFlashMethod.setStatus('current')
voiceProfileRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 11), RegionValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileRegion.setStatus('current')
voiceProfileDigitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileDigitMap.setStatus('current')
voiceProfileDigitMapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileDigitMapEnable.setStatus('current')
voiceProfileStunEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileStunEnable.setStatus('current')
voiceProfileStunServer = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileStunServer.setStatus('current')
voiceProfileStunServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileStunServerPort.setStatus('current')
voiceProfileLogServer = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLogServer.setStatus('current')
voiceProfileLogServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 18), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLogServerPort.setStatus('current')
voiceProfileSpNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSpNum.setStatus('current')
voiceProfileV18Support = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileV18Support.setStatus('current')
voiceProfileSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 1, 1, 21), VoiceProfileSwitchTypes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSwitchType.setStatus('current')
voiceProfileServiceProviderTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 2), )
if mibBuilder.loadTexts: voiceProfileServiceProviderTable.setStatus('current')
voiceProfileServiceProviderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 2, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"))
if mibBuilder.loadTexts: voiceProfileServiceProviderEntry.setStatus('current')
voiceProfileServiceProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileServiceProviderName.setStatus('current')
voiceProfileSIPTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3), )
if mibBuilder.loadTexts: voiceProfileSIPTable.setStatus('current')
voiceProfileSIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"))
if mibBuilder.loadTexts: voiceProfileSIPEntry.setStatus('current')
voiceProfileSIPProxyServer = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPProxyServer.setStatus('current')
voiceProfileSIPProxyServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPProxyServerPort.setStatus('current')
voiceProfileSIPProxyServerTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 3), VoiceTransportValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPProxyServerTransport.setStatus('current')
voiceProfileSIPRegistrarServer = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPRegistrarServer.setStatus('current')
voiceProfileSIPRegistrarServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPRegistrarServerPort.setStatus('current')
voiceProfileSIPRegistrarServerTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 6), VoiceTransportValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPRegistrarServerTransport.setStatus('current')
voiceProfileSIPToTagMatching = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPToTagMatching.setStatus('current')
voiceProfileSIPMusicServer = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPMusicServer.setStatus('current')
voiceProfileSIPMusicServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPMusicServerPort.setStatus('current')
voiceProfileSIPPlarGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPPlarGateway.setStatus('current')
voiceProfileSIPPlarPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPPlarPort.setStatus('current')
voiceProfileSIPUserAgentDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPUserAgentDomain.setStatus('current')
voiceProfileSIPUserAgentPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPUserAgentPort.setStatus('current')
voiceProfileSIPUserAgentTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 14), VoiceTransportValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPUserAgentTransport.setStatus('current')
voiceProfileSIPOutboundProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPOutboundProxy.setStatus('current')
voiceProfileSIPOutboundProxyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPOutboundProxyPort.setStatus('current')
voiceProfileSIPOrganization = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPOrganization.setStatus('current')
voiceProfileSIPRegistrationPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 18), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPRegistrationPeriod.setStatus('current')
voiceProfileSIPRegisterExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPRegisterExpires.setStatus('current')
voiceProfileSIPRegisterRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPRegisterRetryInterval.setStatus('current')
voiceProfileSIPDSCPMark = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 21), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPDSCPMark.setStatus('current')
voiceProfileSIPVLANIDMark = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPVLANIDMark.setStatus('current')
voiceProfileSIPEthernetPriorityMark = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPEthernetPriorityMark.setStatus('current')
voiceProfileSIPInterdigitTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPInterdigitTimeout.setStatus('current')
voiceProfileSIPAddressMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 3, 1, 25), VoiceProfileAddressModes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPAddressMode.setStatus('current')
voiceProfileSIPEventSubscribeTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 4), )
if mibBuilder.loadTexts: voiceProfileSIPEventSubscribeTable.setStatus('current')
voiceProfileSIPEventSubscribeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 4, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"))
if mibBuilder.loadTexts: voiceProfileSIPEventSubscribeEntry.setStatus('current')
voiceProfileSIPEventSubscribeEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPEventSubscribeEvent.setStatus('current')
voiceProfileSIPEventSubscribeNotifier = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPEventSubscribeNotifier.setStatus('current')
voiceProfileSIPEventSubscribeNotifierPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 4, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPEventSubscribeNotifierPort.setStatus('current')
voiceProfileSIPEventSubscribeNotifierTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 4, 1, 4), VoiceTransportValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileSIPEventSubscribeNotifierTransport.setStatus('current')
voiceProfileMGCPTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 5), )
if mibBuilder.loadTexts: voiceProfileMGCPTable.setStatus('current')
voiceProfileMGCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 5, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"))
if mibBuilder.loadTexts: voiceProfileMGCPEntry.setStatus('current')
voiceProfileMGCPCallAgent1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileMGCPCallAgent1.setStatus('current')
voiceProfileMGCPUser = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileMGCPUser.setStatus('current')
voiceProfilePersistentNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 5, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfilePersistentNotify.setStatus('current')
voiceProfileMGCPAddressMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 5, 1, 4), VoiceProfileAddressModes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileMGCPAddressMode.setStatus('current')
voiceProfileRTPTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 6), )
if mibBuilder.loadTexts: voiceProfileRTPTable.setStatus('current')
voiceProfileRTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 6, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"))
if mibBuilder.loadTexts: voiceProfileRTPEntry.setStatus('current')
voiceProfileRTPLocalPortMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65525))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileRTPLocalPortMin.setStatus('current')
voiceProfileRTPLocalPortMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65525))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileRTPLocalPortMax.setStatus('current')
voiceProfileRTPDSCPMark = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileRTPDSCPMark.setStatus('current')
voiceProfileRTPTelephoneEventPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileRTPTelephoneEventPayloadType.setStatus('current')
voiceProfileFaxT38Table = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 7), )
if mibBuilder.loadTexts: voiceProfileFaxT38Table.setStatus('current')
voiceProfileFaxT38Entry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 7, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"))
if mibBuilder.loadTexts: voiceProfileFaxT38Entry.setStatus('current')
voiceProfileFaxT38Enable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 7, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileFaxT38Enable.setStatus('current')
voiceProfileFaxT38BitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 7, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileFaxT38BitRate.setStatus('current')
voiceProfileFaxT38HighSpeedPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 7, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileFaxT38HighSpeedPacketRate.setStatus('current')
voiceProfileLines = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8))
voiceProfileLineTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1), )
if mibBuilder.loadTexts: voiceProfileLineTable.setStatus('current')
voiceProfileLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"), (0, "ZHNVOICE", "voiceProfileLineIndex"))
if mibBuilder.loadTexts: voiceProfileLineEntry.setStatus('current')
voiceProfileLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineIndex.setStatus('current')
voiceProfileLineEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 2), VoiceProfileLineStateType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineEnable.setStatus('current')
voiceProfileLineDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineDirectoryNumber.setStatus('current')
voiceProfileLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 4), VoiceLineStatusValues()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatus.setStatus('current')
voiceProfileLineCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 5), VoiceLineCallStateValues()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineCallState.setStatus('current')
voiceProfileLinePhyReferenceList = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLinePhyReferenceList.setStatus('current')
voiceProfileLineCMAcntNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCMAcntNum.setStatus('current')
voiceProfileLineOnhook = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineOnhook.setStatus('current')
voiceProfileLineRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 1, 1, 9), ZhoneRowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineRowStatus.setStatus('current')
voiceProfileLineSIPTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 2), )
if mibBuilder.loadTexts: voiceProfileLineSIPTable.setStatus('current')
voiceProfileLineSIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 2, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"), (0, "ZHNVOICE", "voiceProfileLineIndex"))
if mibBuilder.loadTexts: voiceProfileLineSIPEntry.setStatus('current')
voiceProfileLineSIPAuthUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineSIPAuthUserName.setStatus('current')
voiceProfileLineSIPAuthPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineSIPAuthPassword.setStatus('current')
voiceProfileLineSIPURI = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 389))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineSIPURI.setStatus('current')
voiceProfileLineSIPPlarUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineSIPPlarUserName.setStatus('current')
voiceProfileLineMGCPTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 3), )
if mibBuilder.loadTexts: voiceProfileLineMGCPTable.setStatus('current')
voiceProfileLineMGCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 3, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"), (0, "ZHNVOICE", "voiceProfileLineIndex"))
if mibBuilder.loadTexts: voiceProfileLineMGCPEntry.setStatus('current')
voiceProfileLineMGCPLineName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineMGCPLineName.setStatus('current')
voiceProfileLineProcessingTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 4), )
if mibBuilder.loadTexts: voiceProfileLineProcessingTable.setStatus('current')
voiceProfileLineProcessingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 4, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"), (0, "ZHNVOICE", "voiceProfileLineIndex"))
if mibBuilder.loadTexts: voiceProfileLineProcessingEntry.setStatus('current')
voiceProfileLineTransmitGain = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineTransmitGain.setStatus('current')
voiceProfileLineReceiveGain = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineReceiveGain.setStatus('current')
voiceProfileLineEchoCancellationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineEchoCancellationEnable.setStatus('current')
voiceProfileLineEchoCancellationInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineEchoCancellationInUse.setStatus('current')
voiceProfileLineCodecTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5), )
if mibBuilder.loadTexts: voiceProfileLineCodecTable.setStatus('current')
voiceProfileLineCodecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"), (0, "ZHNVOICE", "voiceProfileLineIndex"), (0, "ZHNVOICE", "voiceProfileLineCodecIndex"))
if mibBuilder.loadTexts: voiceProfileLineCodecEntry.setStatus('current')
voiceProfileLineCodecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineCodecIndex.setStatus('current')
voiceProfileLineCodecEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineCodecEntryID.setStatus('current')
voiceProfileLineCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineCodec.setStatus('current')
voiceProfileLineCodecBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineCodecBitRate.setStatus('current')
voiceProfileLineCodecPacketizationPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCodecPacketizationPeriod.setStatus('current')
voiceProfileLineCodecSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCodecSilenceSuppression.setStatus('current')
voiceProfileLineCodecEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCodecEnable.setStatus('current')
voiceProfileLineCodecPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 5, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCodecPriority.setStatus('current')
voiceProfileLineCallingFeaturesTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 6), )
if mibBuilder.loadTexts: voiceProfileLineCallingFeaturesTable.setStatus('current')
voiceProfileLineCallingFeaturesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 6, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"), (0, "ZHNVOICE", "voiceProfileLineIndex"))
if mibBuilder.loadTexts: voiceProfileLineCallingFeaturesEntry.setStatus('current')
voiceProfileLineCallingFeatureCallerIDEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCallingFeatureCallerIDEnable.setStatus('current')
voiceProfileLineCallingFeatureCallerIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCallingFeatureCallerIDName.setStatus('current')
voiceProfileLineCallingFeatureCallWaitingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 6, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCallingFeatureCallWaitingEnable.setStatus('current')
voiceProfileLineCallingFeatureMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineCallingFeatureMaxSessions.setStatus('current')
voiceProfileLineCallingFeatureMWIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 6, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceProfileLineCallingFeatureMWIEnable.setStatus('current')
voiceProfileLineStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7), )
if mibBuilder.loadTexts: voiceProfileLineStatsTable.setStatus('current')
voiceProfileLineStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1), ).setIndexNames((0, "ZHNVOICE", "voiceServiceIndex"), (0, "ZHNVOICE", "voiceProfileIndex"), (0, "ZHNVOICE", "voiceProfileLineIndex"))
if mibBuilder.loadTexts: voiceProfileLineStatsEntry.setStatus('current')
voiceProfileLineStatsPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsPacketsSent.setStatus('current')
voiceProfileLineStatsPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsPacketsReceived.setStatus('current')
voiceProfileLineStatsBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsBytesSent.setStatus('current')
voiceProfileLineStatsBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsBytesReceived.setStatus('current')
voiceProfileLineStatsPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsPacketsLost.setStatus('current')
voiceProfileLineStatsIncomingCallsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsIncomingCallsReceived.setStatus('current')
voiceProfileLineStatsIncomingCallsAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsIncomingCallsAnswered.setStatus('current')
voiceProfileLineStatsIncomingCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsIncomingCallsConnected.setStatus('current')
voiceProfileLineStatsIncomingCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsIncomingCallsFailed.setStatus('current')
voiceProfileLineStatsOutgoingCallsAttempted = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsOutgoingCallsAttempted.setStatus('current')
voiceProfileLineStatsOutgoingCallsAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsOutgoingCallsAnswered.setStatus('current')
voiceProfileLineStatsOutgoingCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsOutgoingCallsConnected.setStatus('current')
voiceProfileLineStatsOutgoingCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 1, 3, 8, 7, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceProfileLineStatsOutgoingCallsFailed.setStatus('current')
zhnVoiceConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2))
zhnVoiceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1))
zhnVoiceServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 1)).setObjects(("ZHNVOICE", "voiceProfileNumberOfEntries"), ("ZHNVOICE", "voiceBoundIfName"), ("ZHNVOICE", "voiceBoundIpAddr"), ("ZHNVOICE", "voiceServiceIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceServiceGroup = zhnVoiceServiceGroup.setStatus('current')
zhnVoiceCapabilitiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 2)).setObjects(("ZHNVOICE", "maxProfileCount"), ("ZHNVOICE", "maxLineCount"), ("ZHNVOICE", "maxSessionsPerLine"), ("ZHNVOICE", "maxSessionCount"), ("ZHNVOICE", "signalingProtocols"), ("ZHNVOICE", "regions"), ("ZHNVOICE", "rtcp"), ("ZHNVOICE", "srtp"), ("ZHNVOICE", "rtpRedundancy"), ("ZHNVOICE", "dscpCoupled"), ("ZHNVOICE", "ethernetTaggingCoupled"), ("ZHNVOICE", "pstnSoftSwitchOver"), ("ZHNVOICE", "faxT38"), ("ZHNVOICE", "faxPassThrough"), ("ZHNVOICE", "modemPassThrough"), ("ZHNVOICE", "toneGeneration"), ("ZHNVOICE", "ringGeneration"), ("ZHNVOICE", "digitMapCapabilities"), ("ZHNVOICE", "numberingPlan"), ("ZHNVOICE", "buttonMap"), ("ZHNVOICE", "voicePortTests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceCapabilitiesGroup = zhnVoiceCapabilitiesGroup.setStatus('current')
zhnVoiceCapabilitiesSIPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 3)).setObjects(("ZHNVOICE", "role"), ("ZHNVOICE", "extensionsSIP"), ("ZHNVOICE", "transports"), ("ZHNVOICE", "uriSchemes"), ("ZHNVOICE", "eventSubscription"), ("ZHNVOICE", "responseMap"), ("ZHNVOICE", "tlsKeyExchangeProtocols"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceCapabilitiesSIPGroup = zhnVoiceCapabilitiesSIPGroup.setStatus('current')
zhnVoiceCapabilitiesMGCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 4)).setObjects(("ZHNVOICE", "extensionsMGCP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceCapabilitiesMGCPGroup = zhnVoiceCapabilitiesMGCPGroup.setStatus('current')
zhnVoiceCapabilitiesCodecsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 5)).setObjects(("ZHNVOICE", "codecIndex"), ("ZHNVOICE", "entryID"), ("ZHNVOICE", "codec"), ("ZHNVOICE", "bitRate"), ("ZHNVOICE", "packetizationPeriod"), ("ZHNVOICE", "silenceSuppression"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceCapabilitiesCodecsGroup = zhnVoiceCapabilitiesCodecsGroup.setStatus('current')
zhnVoiceProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 6)).setObjects(("ZHNVOICE", "voiceProfileIndex"), ("ZHNVOICE", "voiceProfileEnable"), ("ZHNVOICE", "voiceProfileReset"), ("ZHNVOICE", "voiceProfileNumberOfLines"), ("ZHNVOICE", "voiceProfileName"), ("ZHNVOICE", "voiceProfileSignalingProtocol"), ("ZHNVOICE", "voiceProfileMaxSessions"), ("ZHNVOICE", "voiceProfileDtmfMethod"), ("ZHNVOICE", "voiceProfileDtmfMethodG711"), ("ZHNVOICE", "voiceProfileHookFlashMethod"), ("ZHNVOICE", "voiceProfileRegion"), ("ZHNVOICE", "voiceProfileDigitMap"), ("ZHNVOICE", "voiceProfileDigitMapEnable"), ("ZHNVOICE", "voiceProfileStunEnable"), ("ZHNVOICE", "voiceProfileStunServer"), ("ZHNVOICE", "voiceProfileStunServerPort"), ("ZHNVOICE", "voiceProfileLogServer"), ("ZHNVOICE", "voiceProfileLogServerPort"), ("ZHNVOICE", "voiceProfileSpNum"), ("ZHNVOICE", "voiceProfileV18Support"), ("ZHNVOICE", "voiceProfileSwitchType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileGroup = zhnVoiceProfileGroup.setStatus('current')
zhnVoiceProfileServiceProviderGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 7)).setObjects(("ZHNVOICE", "voiceProfileServiceProviderName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileServiceProviderGroup = zhnVoiceProfileServiceProviderGroup.setStatus('current')
zhnVoiceProfileSIPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 8)).setObjects(("ZHNVOICE", "voiceProfileSIPProxyServer"), ("ZHNVOICE", "voiceProfileSIPProxyServerPort"), ("ZHNVOICE", "voiceProfileSIPProxyServerTransport"), ("ZHNVOICE", "voiceProfileSIPRegistrarServer"), ("ZHNVOICE", "voiceProfileSIPRegistrarServerPort"), ("ZHNVOICE", "voiceProfileSIPRegistrarServerTransport"), ("ZHNVOICE", "voiceProfileSIPToTagMatching"), ("ZHNVOICE", "voiceProfileSIPMusicServer"), ("ZHNVOICE", "voiceProfileSIPMusicServerPort"), ("ZHNVOICE", "voiceProfileSIPPlarGateway"), ("ZHNVOICE", "voiceProfileSIPPlarPort"), ("ZHNVOICE", "voiceProfileSIPUserAgentDomain"), ("ZHNVOICE", "voiceProfileSIPUserAgentPort"), ("ZHNVOICE", "voiceProfileSIPUserAgentTransport"), ("ZHNVOICE", "voiceProfileSIPOutboundProxy"), ("ZHNVOICE", "voiceProfileSIPOutboundProxyPort"), ("ZHNVOICE", "voiceProfileSIPOrganization"), ("ZHNVOICE", "voiceProfileSIPRegistrationPeriod"), ("ZHNVOICE", "voiceProfileSIPRegisterExpires"), ("ZHNVOICE", "voiceProfileSIPRegisterRetryInterval"), ("ZHNVOICE", "voiceProfileSIPDSCPMark"), ("ZHNVOICE", "voiceProfileSIPVLANIDMark"), ("ZHNVOICE", "voiceProfileSIPEthernetPriorityMark"), ("ZHNVOICE", "voiceProfileSIPInterdigitTimeout"), ("ZHNVOICE", "voiceProfileSIPAddressMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileSIPGroup = zhnVoiceProfileSIPGroup.setStatus('current')
zhnVoiceProfileSIPEventSubscribeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 9)).setObjects(("ZHNVOICE", "voiceProfileSIPEventSubscribeEvent"), ("ZHNVOICE", "voiceProfileSIPEventSubscribeNotifier"), ("ZHNVOICE", "voiceProfileSIPEventSubscribeNotifierPort"), ("ZHNVOICE", "voiceProfileSIPEventSubscribeNotifierTransport"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileSIPEventSubscribeGroup = zhnVoiceProfileSIPEventSubscribeGroup.setStatus('current')
zhnVoiceProfileMGCPEntry = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 10)).setObjects(("ZHNVOICE", "voiceProfileMGCPCallAgent1"), ("ZHNVOICE", "voiceProfileMGCPUser"), ("ZHNVOICE", "voiceProfilePersistentNotify"), ("ZHNVOICE", "voiceProfileMGCPAddressMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileMGCPEntry = zhnVoiceProfileMGCPEntry.setStatus('current')
zhnVoiceProfileRTPEntry = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 11)).setObjects(("ZHNVOICE", "voiceProfileRTPLocalPortMin"), ("ZHNVOICE", "voiceProfileRTPLocalPortMax"), ("ZHNVOICE", "voiceProfileRTPDSCPMark"), ("ZHNVOICE", "voiceProfileRTPTelephoneEventPayloadType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileRTPEntry = zhnVoiceProfileRTPEntry.setStatus('current')
zhnVoiceProfileFaxT38Entry = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 12)).setObjects(("ZHNVOICE", "voiceProfileFaxT38Enable"), ("ZHNVOICE", "voiceProfileFaxT38BitRate"), ("ZHNVOICE", "voiceProfileFaxT38HighSpeedPacketRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileFaxT38Entry = zhnVoiceProfileFaxT38Entry.setStatus('current')
zhnVoiceProfileLineGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 13)).setObjects(("ZHNVOICE", "voiceProfileLineIndex"), ("ZHNVOICE", "voiceProfileLineEnable"), ("ZHNVOICE", "voiceProfileLineDirectoryNumber"), ("ZHNVOICE", "voiceProfileLineStatus"), ("ZHNVOICE", "voiceProfileLineCallState"), ("ZHNVOICE", "voiceProfileLinePhyReferenceList"), ("ZHNVOICE", "voiceProfileLineCMAcntNum"), ("ZHNVOICE", "voiceProfileLineOnhook"), ("ZHNVOICE", "voiceProfileLineRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileLineGroup = zhnVoiceProfileLineGroup.setStatus('current')
zhnVoiceProfileLineProcessingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 14)).setObjects(("ZHNVOICE", "voiceProfileLineTransmitGain"), ("ZHNVOICE", "voiceProfileLineReceiveGain"), ("ZHNVOICE", "voiceProfileLineEchoCancellationEnable"), ("ZHNVOICE", "voiceProfileLineEchoCancellationInUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileLineProcessingGroup = zhnVoiceProfileLineProcessingGroup.setStatus('current')
zhnVoiceProfileLineSIPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 15)).setObjects(("ZHNVOICE", "voiceProfileLineSIPAuthUserName"), ("ZHNVOICE", "voiceProfileLineSIPAuthPassword"), ("ZHNVOICE", "voiceProfileLineSIPURI"), ("ZHNVOICE", "voiceProfileLineSIPPlarUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileLineSIPGroup = zhnVoiceProfileLineSIPGroup.setStatus('current')
zhnVoiceProfileLineMGCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 16)).setObjects(("ZHNVOICE", "voiceProfileLineMGCPLineName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileLineMGCPGroup = zhnVoiceProfileLineMGCPGroup.setStatus('current')
zhnVoiceProfileLineCodecsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 17)).setObjects(("ZHNVOICE", "voiceProfileLineCodecIndex"), ("ZHNVOICE", "voiceProfileLineCodecEntryID"), ("ZHNVOICE", "voiceProfileLineCodec"), ("ZHNVOICE", "voiceProfileLineCodecBitRate"), ("ZHNVOICE", "voiceProfileLineCodecPacketizationPeriod"), ("ZHNVOICE", "voiceProfileLineCodecSilenceSuppression"), ("ZHNVOICE", "voiceProfileLineCodecEnable"), ("ZHNVOICE", "voiceProfileLineCodecPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileLineCodecsGroup = zhnVoiceProfileLineCodecsGroup.setStatus('current')
zhnVoiceLineCallingFeaturesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 18)).setObjects(("ZHNVOICE", "voiceProfileLineCallingFeatureCallerIDEnable"), ("ZHNVOICE", "voiceProfileLineCallingFeatureCallerIDName"), ("ZHNVOICE", "voiceProfileLineCallingFeatureCallWaitingEnable"), ("ZHNVOICE", "voiceProfileLineCallingFeatureMaxSessions"), ("ZHNVOICE", "voiceProfileLineCallingFeatureMWIEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceLineCallingFeaturesGroup = zhnVoiceLineCallingFeaturesGroup.setStatus('current')
zhnVoiceNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 19)).setObjects(("ZHNVOICE", "voiceRegistrationUp"), ("ZHNVOICE", "voiceRegistrationDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceNotificationGroup = zhnVoiceNotificationGroup.setStatus('current')
zhnVoiceProfileLineStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 1, 20)).setObjects(("ZHNVOICE", "voiceProfileLineStatsPacketsSent"), ("ZHNVOICE", "voiceProfileLineStatsPacketsReceived"), ("ZHNVOICE", "voiceProfileLineStatsBytesSent"), ("ZHNVOICE", "voiceProfileLineStatsBytesReceived"), ("ZHNVOICE", "voiceProfileLineStatsPacketsLost"), ("ZHNVOICE", "voiceProfileLineStatsIncomingCallsReceived"), ("ZHNVOICE", "voiceProfileLineStatsIncomingCallsAnswered"), ("ZHNVOICE", "voiceProfileLineStatsIncomingCallsConnected"), ("ZHNVOICE", "voiceProfileLineStatsIncomingCallsFailed"), ("ZHNVOICE", "voiceProfileLineStatsOutgoingCallsAttempted"), ("ZHNVOICE", "voiceProfileLineStatsOutgoingCallsAnswered"), ("ZHNVOICE", "voiceProfileLineStatsOutgoingCallsConnected"), ("ZHNVOICE", "voiceProfileLineStatsOutgoingCallsFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceProfileLineStatsGroup = zhnVoiceProfileLineStatsGroup.setStatus('current')
zhnVoiceCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 2))
zhnVoiceCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5504, 2, 5, 40, 2, 2, 1)).setObjects(("ZHNVOICE", "zhnVoiceServiceGroup"), ("ZHNVOICE", "zhnVoiceCapabilitiesGroup"), ("ZHNVOICE", "zhnVoiceCapabilitiesCodecsGroup"), ("ZHNVOICE", "zhnVoiceProfileGroup"), ("ZHNVOICE", "zhnVoiceProfileServiceProviderGroup"), ("ZHNVOICE", "zhnVoiceProfileLineGroup"), ("ZHNVOICE", "zhnVoiceProfileLineProcessingGroup"), ("ZHNVOICE", "zhnVoiceProfileLineCodecsGroup"), ("ZHNVOICE", "zhnVoiceCapabilitiesSIPGroup"), ("ZHNVOICE", "zhnVoiceCapabilitiesMGCPGroup"), ("ZHNVOICE", "zhnVoiceProfileSIPGroup"), ("ZHNVOICE", "zhnVoiceProfileSIPEventSubscribeGroup"), ("ZHNVOICE", "zhnVoiceProfileMGCPEntry"), ("ZHNVOICE", "zhnVoiceProfileRTPEntry"), ("ZHNVOICE", "zhnVoiceProfileFaxT38Entry"), ("ZHNVOICE", "zhnVoiceNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnVoiceCompliance = zhnVoiceCompliance.setStatus('current')
mibBuilder.exportSymbols("ZHNVOICE", capabilitiesCodecsEntry=capabilitiesCodecsEntry, voiceProfileTable=voiceProfileTable, voiceProfileDtmfMethod=voiceProfileDtmfMethod, zhnVoiceProfileLineGroup=zhnVoiceProfileLineGroup, voiceProfileLineCallingFeatureMaxSessions=voiceProfileLineCallingFeatureMaxSessions, ringGeneration=ringGeneration, voiceProfileLineCallingFeatureCallerIDName=voiceProfileLineCallingFeatureCallerIDName, zhnVoiceGroups=zhnVoiceGroups, zhnVoiceCompliances=zhnVoiceCompliances, voiceProfileLineStatsIncomingCallsConnected=voiceProfileLineStatsIncomingCallsConnected, rtcp=rtcp, voiceProfileSIPPlarPort=voiceProfileSIPPlarPort, codecIndex=codecIndex, voiceProfileSIPEventSubscribeEvent=voiceProfileSIPEventSubscribeEvent, extensionsSIP=extensionsSIP, voiceProfileLogServer=voiceProfileLogServer, voiceProfileLineStatsBytesReceived=voiceProfileLineStatsBytesReceived, voiceProfileRTPLocalPortMin=voiceProfileRTPLocalPortMin, bitRate=bitRate, voiceProfileLineStatsIncomingCallsReceived=voiceProfileLineStatsIncomingCallsReceived, maxLineCount=maxLineCount, voiceProfileLineStatsEntry=voiceProfileLineStatsEntry, voiceProfileLineStatsBytesSent=voiceProfileLineStatsBytesSent, voiceProfileDigitMap=voiceProfileDigitMap, voiceProfileStunEnable=voiceProfileStunEnable, VoiceTransportValues=VoiceTransportValues, voiceProfileRegion=voiceProfileRegion, voiceProfilePersistentNotify=voiceProfilePersistentNotify, voiceProfileSIPProxyServerPort=voiceProfileSIPProxyServerPort, capabilitiesSIPEntry=capabilitiesSIPEntry, transports=transports, voiceProfileSIPRegistrationPeriod=voiceProfileSIPRegistrationPeriod, voiceProfileNumberOfLines=voiceProfileNumberOfLines, voiceProfileSIPEntry=voiceProfileSIPEntry, voiceProfileLineStatsOutgoingCallsConnected=voiceProfileLineStatsOutgoingCallsConnected, voiceProfileRTPLocalPortMax=voiceProfileRTPLocalPortMax, responseMap=responseMap, srtp=srtp, modemPassThrough=modemPassThrough, regions=regions, voiceServiceTable=voiceServiceTable, numberingPlan=numberingPlan, VoiceLineStatusValues=VoiceLineStatusValues, voiceProfileServiceProviderEntry=voiceProfileServiceProviderEntry, voiceProfileSIPUserAgentPort=voiceProfileSIPUserAgentPort, zhnVoiceProfileLineProcessingGroup=zhnVoiceProfileLineProcessingGroup, faxT38=faxT38, voiceProfileSIPTable=voiceProfileSIPTable, capabilities=capabilities, voiceProfileLineCallingFeatureCallWaitingEnable=voiceProfileLineCallingFeatureCallWaitingEnable, voiceProfileLineMGCPLineName=voiceProfileLineMGCPLineName, zhnVoiceCapabilitiesGroup=zhnVoiceCapabilitiesGroup, voiceProfileLineCallingFeatureCallerIDEnable=voiceProfileLineCallingFeatureCallerIDEnable, voiceProfileLineIndex=voiceProfileLineIndex, zhnVoiceProfileLineCodecsGroup=zhnVoiceProfileLineCodecsGroup, voiceProfileSignalingProtocol=voiceProfileSignalingProtocol, codec=codec, zhnVoiceCapabilitiesSIPGroup=zhnVoiceCapabilitiesSIPGroup, zhnVoiceProfileSIPEventSubscribeGroup=zhnVoiceProfileSIPEventSubscribeGroup, voiceProfileFaxT38HighSpeedPacketRate=voiceProfileFaxT38HighSpeedPacketRate, voiceProfileLineSIPTable=voiceProfileLineSIPTable, voiceProfileLineStatsTable=voiceProfileLineStatsTable, voiceProfileLineCallingFeatureMWIEnable=voiceProfileLineCallingFeatureMWIEnable, VoiceProfileSwitchTypes=VoiceProfileSwitchTypes, pstnSoftSwitchOver=pstnSoftSwitchOver, voiceProfileSIPMusicServer=voiceProfileSIPMusicServer, zhnVoiceLineCallingFeaturesGroup=zhnVoiceLineCallingFeaturesGroup, voiceProfileSIPRegisterExpires=voiceProfileSIPRegisterExpires, voiceProfileFaxT38Table=voiceProfileFaxT38Table, voiceProfileLineEntry=voiceProfileLineEntry, voiceProfileSIPDSCPMark=voiceProfileSIPDSCPMark, voiceProfileLineSIPAuthPassword=voiceProfileLineSIPAuthPassword, voiceProfileMaxSessions=voiceProfileMaxSessions, tlsKeyExchangeProtocols=tlsKeyExchangeProtocols, voiceProfileSIPOutboundProxyPort=voiceProfileSIPOutboundProxyPort, maxSessionsPerLine=maxSessionsPerLine, voiceProfileDigitMapEnable=voiceProfileDigitMapEnable, HookFlashMethodValues=HookFlashMethodValues, voiceProfileServiceProviderName=voiceProfileServiceProviderName, voiceProfileSIPMusicServerPort=voiceProfileSIPMusicServerPort, voiceProfileLineStatsIncomingCallsFailed=voiceProfileLineStatsIncomingCallsFailed, voiceProfileLineEnable=voiceProfileLineEnable, DTMFMethodValues=DTMFMethodValues, voiceProfileLineTable=voiceProfileLineTable, voiceProfileEnable=voiceProfileEnable, voiceProfileSIPEventSubscribeEntry=voiceProfileSIPEventSubscribeEntry, voiceProfileSIPPlarGateway=voiceProfileSIPPlarGateway, voiceProfileRTPDSCPMark=voiceProfileRTPDSCPMark, voiceProfileLineCodecEnable=voiceProfileLineCodecEnable, zhnVoiceProfileSIPGroup=zhnVoiceProfileSIPGroup, voiceProfileSIPProxyServerTransport=voiceProfileSIPProxyServerTransport, voiceProfileSIPEventSubscribeNotifier=voiceProfileSIPEventSubscribeNotifier, voiceProfileLineCodec=voiceProfileLineCodec, voiceProfileLineStatsIncomingCallsAnswered=voiceProfileLineStatsIncomingCallsAnswered, voiceProfileSIPEventSubscribeNotifierTransport=voiceProfileSIPEventSubscribeNotifierTransport, eventSubscription=eventSubscription, VoiceProfileLineStateType=VoiceProfileLineStateType, voiceProfileLineEchoCancellationInUse=voiceProfileLineEchoCancellationInUse, voiceProfileSIPOutboundProxy=voiceProfileSIPOutboundProxy, voiceProfileMGCPAddressMode=voiceProfileMGCPAddressMode, voiceProfileLineCallingFeaturesTable=voiceProfileLineCallingFeaturesTable, voiceProfileLineEchoCancellationEnable=voiceProfileLineEchoCancellationEnable, zhnVoiceProfileMGCPEntry=zhnVoiceProfileMGCPEntry, dscpCoupled=dscpCoupled, voiceProfileLineSIPEntry=voiceProfileLineSIPEntry, capabilitiesCodecsTable=capabilitiesCodecsTable, voiceProfileRTPTelephoneEventPayloadType=voiceProfileRTPTelephoneEventPayloadType, voiceProfileLines=voiceProfileLines, voiceProfileLineMGCPTable=voiceProfileLineMGCPTable, voiceBoundIfName=voiceBoundIfName, voiceProfileSIPInterdigitTimeout=voiceProfileSIPInterdigitTimeout, voiceProfileRTPEntry=voiceProfileRTPEntry, zhnVoiceCapabilitiesCodecsGroup=zhnVoiceCapabilitiesCodecsGroup, voiceProfileSIPRegistrarServerTransport=voiceProfileSIPRegistrarServerTransport, zhnVoiceServiceObjects=zhnVoiceServiceObjects, ethernetTaggingCoupled=ethernetTaggingCoupled, capabilitiesMGCPTable=capabilitiesMGCPTable, VoiceProfileAddressModes=VoiceProfileAddressModes, zhnVoiceProfileRTPEntry=zhnVoiceProfileRTPEntry, zhnVoiceProfileLineMGCPGroup=zhnVoiceProfileLineMGCPGroup, VoiceLineCallStateValues=VoiceLineCallStateValues, zhnVoiceNotifications=zhnVoiceNotifications, voiceProfileLogServerPort=voiceProfileLogServerPort, voiceProfileSIPOrganization=voiceProfileSIPOrganization, voiceProfileLineProcessingTable=voiceProfileLineProcessingTable, zhnVoiceProfileServiceProviderGroup=zhnVoiceProfileServiceProviderGroup, voiceProfiles=voiceProfiles, voiceProfileLineSIPPlarUserName=voiceProfileLineSIPPlarUserName, voiceProfileLineCallingFeaturesEntry=voiceProfileLineCallingFeaturesEntry, packetizationPeriod=packetizationPeriod, voiceProfileSIPProxyServer=voiceProfileSIPProxyServer, voiceProfileRTPTable=voiceProfileRTPTable, capabilitiesEntry=capabilitiesEntry, zhnVoice=zhnVoice, capabilitiesSIPTable=capabilitiesSIPTable, voiceProfileLineSIPURI=voiceProfileLineSIPURI, voiceProfileSwitchType=voiceProfileSwitchType, zhnVoiceProfileGroup=zhnVoiceProfileGroup, zhnVoiceNotificationGroup=zhnVoiceNotificationGroup, voiceProfileSIPToTagMatching=voiceProfileSIPToTagMatching, voiceProfileSIPVLANIDMark=voiceProfileSIPVLANIDMark, voiceProfileFaxT38Enable=voiceProfileFaxT38Enable, silenceSuppression=silenceSuppression, voiceProfileLineStatsPacketsLost=voiceProfileLineStatsPacketsLost, voiceProfileLineCMAcntNum=voiceProfileLineCMAcntNum, digitMapCapabilities=digitMapCapabilities, voiceProfileName=voiceProfileName, voiceProfileLineRowStatus=voiceProfileLineRowStatus, voiceProfileSIPRegisterRetryInterval=voiceProfileSIPRegisterRetryInterval, voiceProfileSIPRegistrarServerPort=voiceProfileSIPRegistrarServerPort, voiceProfileLineTransmitGain=voiceProfileLineTransmitGain, zhnVoiceServiceGroup=zhnVoiceServiceGroup, buttonMap=buttonMap, voiceProfileSIPUserAgentDomain=voiceProfileSIPUserAgentDomain, voiceProfileLineDirectoryNumber=voiceProfileLineDirectoryNumber, voiceServiceIndex=voiceServiceIndex, maxProfileCount=maxProfileCount, capabilitiesTable=capabilitiesTable, voiceProfileEntry=voiceProfileEntry, voiceProfileSIPAddressMode=voiceProfileSIPAddressMode, voiceProfileLineCodecSilenceSuppression=voiceProfileLineCodecSilenceSuppression, voiceProfileIndex=voiceProfileIndex, voiceProfileV18Support=voiceProfileV18Support, zhnVoiceProfileLineStatsGroup=zhnVoiceProfileLineStatsGroup, PYSNMP_MODULE_ID=zhnVoice, voiceProfileSIPEthernetPriorityMark=voiceProfileSIPEthernetPriorityMark, voiceProfileSpNum=voiceProfileSpNum, voiceProfileMGCPTable=voiceProfileMGCPTable, voiceProfileLineReceiveGain=voiceProfileLineReceiveGain, voiceProfileMGCPUser=voiceProfileMGCPUser, voiceProfileLineCodecBitRate=voiceProfileLineCodecBitRate, voiceProfileStunServer=voiceProfileStunServer, voiceProfileLineProcessingEntry=voiceProfileLineProcessingEntry, voiceRegistrationDown=voiceRegistrationDown, voiceRegistrationUp=voiceRegistrationUp, voiceProfileLineStatsOutgoingCallsAttempted=voiceProfileLineStatsOutgoingCallsAttempted, voiceProfileServiceProviderTable=voiceProfileServiceProviderTable, voiceProfileLineMGCPEntry=voiceProfileLineMGCPEntry, voiceProfileNumberOfEntries=voiceProfileNumberOfEntries, voiceProfileLineCodecTable=voiceProfileLineCodecTable, faxPassThrough=faxPassThrough, voiceProfileDtmfMethodG711=voiceProfileDtmfMethodG711, signalingProtocols=signalingProtocols, toneGeneration=toneGeneration, voiceProfileLineCodecPriority=voiceProfileLineCodecPriority, RegionValues=RegionValues, voiceProfileLineStatsOutgoingCallsAnswered=voiceProfileLineStatsOutgoingCallsAnswered, voiceBoundIpAddr=voiceBoundIpAddr, extensionsMGCP=extensionsMGCP, voiceProfileHookFlashMethod=voiceProfileHookFlashMethod, voiceProfileSIPUserAgentTransport=voiceProfileSIPUserAgentTransport, voiceProfileSIPEventSubscribeTable=voiceProfileSIPEventSubscribeTable, voiceProfileSIPEventSubscribeNotifierPort=voiceProfileSIPEventSubscribeNotifierPort, voiceProfileLineCallState=voiceProfileLineCallState, voiceProfileLineStatsPacketsSent=voiceProfileLineStatsPacketsSent, uriSchemes=uriSchemes, zhnVoiceProfileFaxT38Entry=zhnVoiceProfileFaxT38Entry, voiceProfileFaxT38Entry=voiceProfileFaxT38Entry, voiceProfileStunServerPort=voiceProfileStunServerPort, voiceProfileLineStatsPacketsReceived=voiceProfileLineStatsPacketsReceived, voiceProfileLineCodecEntryID=voiceProfileLineCodecEntryID, zhnVoiceCapabilitiesMGCPGroup=zhnVoiceCapabilitiesMGCPGroup, voiceProfileLineOnhook=voiceProfileLineOnhook, voiceProfileLineCodecEntry=voiceProfileLineCodecEntry, voiceProfileSIPRegistrarServer=voiceProfileSIPRegistrarServer, voiceProfileLineSIPAuthUserName=voiceProfileLineSIPAuthUserName, voiceProfileLineCodecPacketizationPeriod=voiceProfileLineCodecPacketizationPeriod, zhnVoiceCompliance=zhnVoiceCompliance, voiceProfileLineCodecIndex=voiceProfileLineCodecIndex, zhnVoiceProfileLineSIPGroup=zhnVoiceProfileLineSIPGroup, voiceProfileLinePhyReferenceList=voiceProfileLinePhyReferenceList, voiceServiceEntry=voiceServiceEntry, voiceProfileReset=voiceProfileReset, voicePortTests=voicePortTests, voiceProfileFaxT38BitRate=voiceProfileFaxT38BitRate, entryID=entryID, capabilitiesMGCPEntry=capabilitiesMGCPEntry, voiceProfileLineStatsOutgoingCallsFailed=voiceProfileLineStatsOutgoingCallsFailed, rtpRedundancy=rtpRedundancy, voiceProfileLineStatus=voiceProfileLineStatus, zhnVoiceConformance=zhnVoiceConformance, maxSessionCount=maxSessionCount, role=role, voiceProfileMGCPCallAgent1=voiceProfileMGCPCallAgent1, voiceProfileMGCPEntry=voiceProfileMGCPEntry)
