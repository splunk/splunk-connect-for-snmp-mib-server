#
# PySNMP MIB module CISCO-ADSL-DMT-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ADSL-DMT-LINE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:32:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adslLineConfProfileName, adslLineAlarmConfProfileName = mibBuilder.importSymbols("ADSL-LINE-MIB", "adslLineConfProfileName", "adslLineAlarmConfProfileName")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
Unsigned32, = mibBuilder.importSymbols("CISCO-TC", "Unsigned32")
InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, NotificationType, Gauge32, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, ModuleIdentity, Counter32, Integer32, Counter64, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "Gauge32", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "ModuleIdentity", "Counter32", "Integer32", "Counter64", "Bits", "ObjectIdentity")
DateAndTime, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "DisplayString", "TextualConvention")
ciscoAdslDmtLineMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 130))
ciscoAdslDmtLineMIB.setRevisions(('2001-05-17 16:00', '2000-08-22 00:00', '2000-05-19 00:00', '1999-03-30 00:00',))
if mibBuilder.loadTexts: ciscoAdslDmtLineMIB.setLastUpdated('200105171600Z')
if mibBuilder.loadTexts: ciscoAdslDmtLineMIB.setOrganization('Cisco Systems, Inc.')
class DmtOverheadFraming(TextualConvention, Integer32):
    reference = 'ANSI T1.413-1998 Issue 2, Network and Customer Installation Interfaces - Asymmetric Digital Subscriber Line (ADSL) Metallic Interfaces.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("structure0", 0), ("structure1", 1), ("structure2", 2), ("structure3", 3))

class DmtFecSize(TextualConvention, Integer32):
    reference = 'ANSI T1.413-1998 Issue 2, Network and Customer Installation Interfaces - Asymmetric Digital Subscriber Line (ADSL) Metallic Interfaces. draft-ietf-adslmib-adsllinemib-04, Definitions of Managed Objects for ADSL Lines.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(6, 6), ValueRangeConstraint(8, 8), ValueRangeConstraint(10, 10), ValueRangeConstraint(12, 12), ValueRangeConstraint(14, 14), ValueRangeConstraint(16, 16), )
class DmtCodewordSize(TextualConvention, Integer32):
    reference = 'ANSI T1.413-1998 Issue 2, Network and Customer Installation Interfaces - Asymmetric Digital Subscriber Line (ADSL) Metallic Interfaces. RFC 2662 - Definitions of Managed Objects for the ADSL Lines. G. Bathrick,. Ly. August 1999. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), )
ciscoAdslDmtLineMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 130, 1))
cAdslDmtLineTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 1), )
if mibBuilder.loadTexts: cAdslDmtLineTable.setStatus('current')
cAdslDmtLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cAdslDmtLineEntry.setStatus('current')
cAdslDmtLineOverheadFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 1, 1, 1), DmtOverheadFraming()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslDmtLineOverheadFraming.setStatus('current')
cAdslAtucDmtPhysTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 2), )
if mibBuilder.loadTexts: cAdslAtucDmtPhysTable.setStatus('current')
cAdslAtucDmtPhysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cAdslAtucDmtPhysEntry.setStatus('current')
cAdslAtucDmtState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("standard", 1), ("unknown", 2), ("downloading", 3), ("downloadFailed", 4), ("testing", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucDmtState.setStatus('current')
cAdslAtucDmtChanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 4), )
if mibBuilder.loadTexts: cAdslAtucDmtChanTable.setStatus('current')
cAdslAtucDmtChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cAdslAtucDmtChanEntry.setStatus('current')
cAdslAtucDmtChanFecSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 4, 1, 1), DmtFecSize()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucDmtChanFecSize.setStatus('current')
cAdslAtucDmtChanCodewordSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 4, 1, 2), DmtCodewordSize()).setUnits('symbols').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucDmtChanCodewordSize.setStatus('current')
cAdslAturDmtChanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 5), )
if mibBuilder.loadTexts: cAdslAturDmtChanTable.setStatus('current')
cAdslAturDmtChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cAdslAturDmtChanEntry.setStatus('current')
cAdslAturDmtChanFecSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 5, 1, 1), DmtFecSize()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAturDmtChanFecSize.setStatus('current')
cAdslAturDmtChanCodewordSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 5, 1, 2), DmtCodewordSize()).setUnits('symbols').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAturDmtChanCodewordSize.setStatus('current')
cAdslDmtLineConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14), )
if mibBuilder.loadTexts: cAdslDmtLineConfProfileTable.setStatus('current')
cAdslDmtLineConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1), ).setIndexNames((1, "ADSL-LINE-MIB", "adslLineConfProfileName"))
if mibBuilder.loadTexts: cAdslDmtLineConfProfileEntry.setStatus('current')
cAdslLineDmtConfOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("automatic", 1), ("splitterless", 2), ("g992Dot1", 3), ("g992Dot2", 4), ("t1Dot413", 5))).clone('automatic')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslLineDmtConfOperatingMode.setStatus('current')
cAdslLineDmtConfTrainingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("fast", 2))).clone('standard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslLineDmtConfTrainingMode.setStatus('current')
cAdslAtucDmtConfFastFecSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 3), DmtFecSize().clone(16)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtConfFastFecSize.setStatus('current')
cAdslAtucDmtConfInterleaveFecSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 4), DmtFecSize().clone(16)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtConfInterleaveFecSize.setStatus('current')
cAdslAtucDmtConfCodewordSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 5), DmtCodewordSize().clone(16)).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtConfCodewordSize.setStatus('current')
cAdslAtucDmtConfOverheadFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 6), DmtOverheadFraming().clone('structure3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtConfOverheadFraming.setStatus('current')
cAdslAtucDmtConfBitSwapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtConfBitSwapEnabled.setStatus('current')
cAdslAtucDmtConfBitSwapFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)).clone(3)).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtConfBitSwapFrom.setStatus('current')
cAdslAtucDmtConfBitSwapTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)).clone(3)).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtConfBitSwapTo.setStatus('current')
cAdslAturDmtConfFastFecSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 10), DmtFecSize().clone(16)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAturDmtConfFastFecSize.setStatus('current')
cAdslAturDmtConfInterleaveFecSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 11), DmtFecSize().clone(16)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAturDmtConfInterleaveFecSize.setStatus('current')
cAdslAturDmtConfCodewordSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 12), DmtCodewordSize().clone(16)).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAturDmtConfCodewordSize.setStatus('current')
cAdslAtucDmtConfMinrateBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtConfMinrateBlock.setStatus('current')
cAdslAtucDmtDualBitmapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 14, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtDualBitmapEnabled.setStatus('current')
cAdslDmtLineAlarmConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 15), )
if mibBuilder.loadTexts: cAdslDmtLineAlarmConfProfileTable.setStatus('current')
cAdslDmtLineAlarmConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 15, 1), ).setIndexNames((1, "ADSL-LINE-MIB", "adslLineAlarmConfProfileName"))
if mibBuilder.loadTexts: cAdslDmtLineAlarmConfProfileEntry.setStatus('current')
cAdslAtucDmtThreshRateFallback = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 15, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAtucDmtThreshRateFallback.setStatus('current')
cAdslAturDmtThreshRateFallback = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 15, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAdslAturDmtThreshRateFallback.setStatus('current')
cAdslDmtBinIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 16), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAdslDmtBinIfNumber.setStatus('current')
cAdslDmtBinIfRqstStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("reset", -1), ("pollNow", 1), ("noIfConfigured", 2), ("ifConfigured", 3), ("rqstInProgess", 4), ("lcDownForIf", 5), ("ifUntrained", 6), ("failure", 7), ("success", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAdslDmtBinIfRqstStatus.setStatus('current')
cAdslDmtBinIfLstRqstUpldTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslDmtBinIfLstRqstUpldTime.setStatus('current')
cAdslAtucDmtBinTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 19), )
if mibBuilder.loadTexts: cAdslAtucDmtBinTable.setStatus('current')
cAdslAtucDmtBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 19, 1), ).setIndexNames((0, "CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtBitmapIndex"), (0, "CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtBinIndex"))
if mibBuilder.loadTexts: cAdslAtucDmtBinEntry.setStatus('current')
cAdslAtucDmtBitmapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 19, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: cAdslAtucDmtBitmapIndex.setStatus('current')
cAdslAtucDmtBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 19, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: cAdslAtucDmtBinIndex.setStatus('current')
cAdslAtucDmtBinBitAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 19, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setUnits('bits/Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucDmtBinBitAlloc.setStatus('current')
cAdslAtucDmtBinTxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 19, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 400))).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucDmtBinTxGain.setStatus('current')
cAdslAtucDmtBinNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 19, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAtucDmtBinNumber.setStatus('current')
cAdslAturDmtBinTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 20), )
if mibBuilder.loadTexts: cAdslAturDmtBinTable.setStatus('current')
cAdslAturDmtBinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 20, 1), ).setIndexNames((0, "CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtBitmapIndex"), (0, "CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtBinIndex"))
if mibBuilder.loadTexts: cAdslAturDmtBinEntry.setStatus('current')
cAdslAturDmtBitmapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: cAdslAturDmtBitmapIndex.setStatus('current')
cAdslAturDmtBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 20, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: cAdslAturDmtBinIndex.setStatus('current')
cAdslAturDmtBinBitAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setUnits('bits/Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAturDmtBinBitAlloc.setStatus('current')
cAdslAturDmtBinTxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 20, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 400))).setUnits('hundredth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAturDmtBinTxGain.setStatus('current')
cAdslAturDmtBinNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 130, 1, 20, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAdslAturDmtBinNumber.setStatus('current')
ciscoAdslDmtLineMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 130, 2))
ciscoAdslDmtLineMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 130, 2, 0))
ciscoAdslDmtLineMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 130, 3))
ciscoAdslDmtLineMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 1))
ciscoAdslDmtLineMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2))
ciscoAdslDmtLineMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 1, 1)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtLineGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtPhysGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtChanGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtChanGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtLineConfProfileGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtLineAlarmConfProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAdslDmtLineMIBCompliance = ciscoAdslDmtLineMIBCompliance.setStatus('deprecated')
ciscoAdslDmtLineMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 1, 2)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtLineGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtPhysGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtChanGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtChanGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtLineConfProfileGroupRev1"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtLineAlarmConfProfileGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtBinIfGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtBinDataGroup"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtBinDataGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAdslDmtLineMIBComplianceRev1 = ciscoAdslDmtLineMIBComplianceRev1.setStatus('current')
cAdslDmtLineGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 1)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtLineOverheadFraming"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslDmtLineGroup = cAdslDmtLineGroup.setStatus('current')
cAdslAtucDmtPhysGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 2)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAtucDmtPhysGroup = cAdslAtucDmtPhysGroup.setStatus('current')
cAdslAtucDmtChanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 3)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtChanFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtChanCodewordSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAtucDmtChanGroup = cAdslAtucDmtChanGroup.setStatus('current')
cAdslAturDmtChanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 4)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtChanFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtChanCodewordSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAturDmtChanGroup = cAdslAturDmtChanGroup.setStatus('current')
cAdslDmtLineConfProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 5)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslLineDmtConfOperatingMode"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslLineDmtConfTrainingMode"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfFastFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfInterleaveFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfCodewordSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfOverheadFraming"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfBitSwapEnabled"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfBitSwapFrom"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfBitSwapTo"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtConfInterleaveFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtConfFastFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtConfCodewordSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslDmtLineConfProfileGroup = cAdslDmtLineConfProfileGroup.setStatus('deprecated')
cAdslDmtLineAlarmConfProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 6)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtThreshRateFallback"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtThreshRateFallback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslDmtLineAlarmConfProfileGroup = cAdslDmtLineAlarmConfProfileGroup.setStatus('current')
cAdslDmtBinIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 7)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtBinIfNumber"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtBinIfRqstStatus"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslDmtBinIfLstRqstUpldTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslDmtBinIfGroup = cAdslDmtBinIfGroup.setStatus('current')
cAdslAtucDmtBinDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 8)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtBinBitAlloc"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtBinTxGain"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtBinNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAtucDmtBinDataGroup = cAdslAtucDmtBinDataGroup.setStatus('current')
cAdslAturDmtBinDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 9)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtBinBitAlloc"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtBinTxGain"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtBinNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslAturDmtBinDataGroup = cAdslAturDmtBinDataGroup.setStatus('current')
cAdslDmtLineConfProfileGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 130, 3, 2, 10)).setObjects(("CISCO-ADSL-DMT-LINE-MIB", "cAdslLineDmtConfOperatingMode"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslLineDmtConfTrainingMode"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfFastFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfInterleaveFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfCodewordSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfOverheadFraming"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfBitSwapEnabled"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfBitSwapFrom"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfBitSwapTo"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtConfInterleaveFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtConfFastFecSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAturDmtConfCodewordSize"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtConfMinrateBlock"), ("CISCO-ADSL-DMT-LINE-MIB", "cAdslAtucDmtDualBitmapEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAdslDmtLineConfProfileGroupRev1 = cAdslDmtLineConfProfileGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-ADSL-DMT-LINE-MIB", ciscoAdslDmtLineMIBNotifications=ciscoAdslDmtLineMIBNotifications, cAdslAturDmtConfCodewordSize=cAdslAturDmtConfCodewordSize, cAdslAtucDmtBitmapIndex=cAdslAtucDmtBitmapIndex, cAdslAtucDmtChanTable=cAdslAtucDmtChanTable, cAdslAtucDmtConfBitSwapFrom=cAdslAtucDmtConfBitSwapFrom, cAdslDmtLineConfProfileTable=cAdslDmtLineConfProfileTable, cAdslAtucDmtConfMinrateBlock=cAdslAtucDmtConfMinrateBlock, ciscoAdslDmtLineMIBConformance=ciscoAdslDmtLineMIBConformance, cAdslAtucDmtState=cAdslAtucDmtState, cAdslAtucDmtPhysGroup=cAdslAtucDmtPhysGroup, cAdslDmtLineConfProfileGroup=cAdslDmtLineConfProfileGroup, cAdslAtucDmtConfCodewordSize=cAdslAtucDmtConfCodewordSize, cAdslAturDmtConfInterleaveFecSize=cAdslAturDmtConfInterleaveFecSize, cAdslAtucDmtBinEntry=cAdslAtucDmtBinEntry, cAdslDmtLineGroup=cAdslDmtLineGroup, cAdslAtucDmtChanCodewordSize=cAdslAtucDmtChanCodewordSize, cAdslAtucDmtDualBitmapEnabled=cAdslAtucDmtDualBitmapEnabled, ciscoAdslDmtLineMIBCompliance=ciscoAdslDmtLineMIBCompliance, cAdslAturDmtThreshRateFallback=cAdslAturDmtThreshRateFallback, cAdslAtucDmtConfInterleaveFecSize=cAdslAtucDmtConfInterleaveFecSize, cAdslAtucDmtPhysTable=cAdslAtucDmtPhysTable, cAdslAturDmtBitmapIndex=cAdslAturDmtBitmapIndex, DmtFecSize=DmtFecSize, cAdslDmtBinIfLstRqstUpldTime=cAdslDmtBinIfLstRqstUpldTime, cAdslAtucDmtBinTable=cAdslAtucDmtBinTable, cAdslLineDmtConfOperatingMode=cAdslLineDmtConfOperatingMode, cAdslAturDmtBinBitAlloc=cAdslAturDmtBinBitAlloc, PYSNMP_MODULE_ID=ciscoAdslDmtLineMIB, cAdslAtucDmtConfBitSwapTo=cAdslAtucDmtConfBitSwapTo, cAdslAturDmtChanGroup=cAdslAturDmtChanGroup, ciscoAdslDmtLineMIB=ciscoAdslDmtLineMIB, cAdslAtucDmtThreshRateFallback=cAdslAtucDmtThreshRateFallback, cAdslAtucDmtBinNumber=cAdslAtucDmtBinNumber, cAdslAtucDmtConfFastFecSize=cAdslAtucDmtConfFastFecSize, cAdslAtucDmtChanFecSize=cAdslAtucDmtChanFecSize, cAdslDmtLineOverheadFraming=cAdslDmtLineOverheadFraming, cAdslDmtBinIfGroup=cAdslDmtBinIfGroup, DmtOverheadFraming=DmtOverheadFraming, cAdslDmtLineAlarmConfProfileEntry=cAdslDmtLineAlarmConfProfileEntry, cAdslAturDmtChanCodewordSize=cAdslAturDmtChanCodewordSize, ciscoAdslDmtLineMIBGroups=ciscoAdslDmtLineMIBGroups, cAdslAturDmtBinNumber=cAdslAturDmtBinNumber, cAdslLineDmtConfTrainingMode=cAdslLineDmtConfTrainingMode, ciscoAdslDmtLineMIBComplianceRev1=ciscoAdslDmtLineMIBComplianceRev1, ciscoAdslDmtLineMIBNotificationsPrefix=ciscoAdslDmtLineMIBNotificationsPrefix, cAdslDmtLineAlarmConfProfileGroup=cAdslDmtLineAlarmConfProfileGroup, cAdslAturDmtBinIndex=cAdslAturDmtBinIndex, cAdslDmtLineConfProfileEntry=cAdslDmtLineConfProfileEntry, DmtCodewordSize=DmtCodewordSize, cAdslAtucDmtBinIndex=cAdslAtucDmtBinIndex, cAdslAturDmtBinTxGain=cAdslAturDmtBinTxGain, cAdslAturDmtBinTable=cAdslAturDmtBinTable, cAdslAtucDmtBinTxGain=cAdslAtucDmtBinTxGain, cAdslAtucDmtBinBitAlloc=cAdslAtucDmtBinBitAlloc, cAdslDmtLineAlarmConfProfileTable=cAdslDmtLineAlarmConfProfileTable, ciscoAdslDmtLineMIBCompliances=ciscoAdslDmtLineMIBCompliances, cAdslAturDmtConfFastFecSize=cAdslAturDmtConfFastFecSize, cAdslDmtLineTable=cAdslDmtLineTable, cAdslAtucDmtChanEntry=cAdslAtucDmtChanEntry, cAdslAturDmtChanTable=cAdslAturDmtChanTable, cAdslAturDmtChanFecSize=cAdslAturDmtChanFecSize, ciscoAdslDmtLineMIBObjects=ciscoAdslDmtLineMIBObjects, cAdslAtucDmtConfOverheadFraming=cAdslAtucDmtConfOverheadFraming, cAdslAturDmtBinEntry=cAdslAturDmtBinEntry, cAdslAtucDmtBinDataGroup=cAdslAtucDmtBinDataGroup, cAdslAturDmtChanEntry=cAdslAturDmtChanEntry, cAdslAtucDmtConfBitSwapEnabled=cAdslAtucDmtConfBitSwapEnabled, cAdslDmtLineEntry=cAdslDmtLineEntry, cAdslDmtBinIfRqstStatus=cAdslDmtBinIfRqstStatus, cAdslAturDmtBinDataGroup=cAdslAturDmtBinDataGroup, cAdslDmtLineConfProfileGroupRev1=cAdslDmtLineConfProfileGroupRev1, cAdslAtucDmtChanGroup=cAdslAtucDmtChanGroup, cAdslAtucDmtPhysEntry=cAdslAtucDmtPhysEntry, cAdslDmtBinIfNumber=cAdslDmtBinIfNumber)
