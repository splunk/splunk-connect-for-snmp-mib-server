#
# PySNMP MIB module EDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:44:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, Bits, Integer32, NotificationType, TimeTicks, Gauge32, Counter32, enterprises, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Bits", "Integer32", "NotificationType", "TimeTicks", "Gauge32", "Counter32", "enterprises", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "MibIdentifier", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
edsProducts = ModuleIdentity((1, 3, 6, 1, 4, 1, 31440, 1, 6))
edsProducts.setRevisions(('2016-06-30 00:00', '1970-01-01 00:00',))
if mibBuilder.loadTexts: edsProducts.setLastUpdated('201606300000Z')
if mibBuilder.loadTexts: edsProducts.setOrganization('www.embeddeddatasystems.com')
edsMain = MibIdentifier((1, 3, 6, 1, 4, 1, 31440))
edsEnterprise = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 1))
eCompanyName = MibScalar((1, 3, 6, 1, 4, 1, 31440, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eCompanyName.setStatus('current')
eProductName = MibScalar((1, 3, 6, 1, 4, 1, 31440, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eProductName.setStatus('current')
eMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 31440, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eMIBVersion.setStatus('current')
eFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 31440, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eFirmwareVersion.setStatus('current')
eFirmwareDate = MibScalar((1, 3, 6, 1, 4, 1, 31440, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eFirmwareDate.setStatus('current')
dTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 2))
dTrapTable = MibTable((1, 3, 6, 1, 4, 1, 31440, 2, 1), )
if mibBuilder.loadTexts: dTrapTable.setStatus('current')
dTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 2, 1, 1), ).setIndexNames((0, "EDS-MIB", "dTrapIndex"))
if mibBuilder.loadTexts: dTrapEntry.setStatus('current')
dTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dTrapIndex.setStatus('current')
dTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapEnable.setStatus('current')
dTrapIP = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapIP.setStatus('current')
dTrapCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapCommunity.setStatus('current')
dTrapDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 31440, 2, 2), )
if mibBuilder.loadTexts: dTrapDeviceTable.setStatus('current')
dTrapDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1), ).setIndexNames((0, "EDS-MIB", "dTrapDeviceIndex"))
if mibBuilder.loadTexts: dTrapDeviceEntry.setStatus('current')
dTrapDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dTrapDeviceIndex.setStatus('current')
dTrapDeviceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapDeviceEnable.setStatus('current')
dTrapDeviceSendPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapDeviceSendPointer.setStatus('current')
dTrapDeviceROM = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapDeviceROM.setStatus('current')
dTrapDeviceVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapDeviceVariable.setStatus('current')
dTrapDeviceHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapDeviceHighThreshold.setStatus('current')
dTrapDeviceLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapDeviceLowThreshold.setStatus('current')
dTrapDeviceHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 2, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dTrapDeviceHysteresis.setStatus('current')
owDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10))
owDeviceTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1))
owNone = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 0))
owUnknown = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 1))
owDS2406 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 2))
owDS18B20 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 3))
owDS18S20 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 4))
owDS2438 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 5))
owDS2423 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 6))
owDS2408 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 7))
owDS2450 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 8))
owEDS0064 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 9))
owEDS0065 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 10))
owEDS0066 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 11))
owEDS0067 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 12))
owEDS0068 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 13))
owEDS0069 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 14))
owEDS0070 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 15))
owEDS0071 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 16))
owEDS0080 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 17))
owEDS0082 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 18))
owEDS0083 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 19))
owEDS0085 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 20))
owEDS0090 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 21))
owEDS0091 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 22))
owEDS0092 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 23))
owDS28EA00 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 24))
owEDS0050 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 25))
owEDS0001 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 1, 26))
owDeviceInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 10, 2))
owDeviceNumActive = MibScalar((1, 3, 6, 1, 4, 1, 31440, 10, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDeviceNumActive.setStatus('current')
owDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 3), )
if mibBuilder.loadTexts: owDeviceTable.setStatus('current')
owDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 3, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDeviceEntry.setStatus('current')
owDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDeviceIndex.setStatus('current')
owDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDeviceType.setStatus('current')
owDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDeviceName.setStatus('current')
owDeviceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDeviceDescription.setStatus('current')
owDeviceFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDeviceFamily.setStatus('current')
owDeviceROM = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDeviceROM.setStatus('current')
owDeviceHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDeviceHealth.setStatus('current')
owDS2406Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 4), )
if mibBuilder.loadTexts: owDS2406Table.setStatus('current')
owDS2406Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDS2406Entry.setStatus('current')
owDS2406PIOALevel = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2406PIOALevel.setStatus('current')
owDS2406PIOBLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2406PIOBLevel.setStatus('current')
owDS2406PIOAFlipFlop = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2406PIOAFlipFlop.setStatus('current')
owDS2406PIOBFlipFlop = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2406PIOBFlipFlop.setStatus('current')
owDS2406PIOAActivityLatch = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noActivity", 0), ("yesActivity", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2406PIOAActivityLatch.setStatus('current')
owDS2406PIOBActivityLatch = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noActivity", 0), ("yesActivity", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2406PIOBActivityLatch.setStatus('current')
owDS2406NumChnls = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pioAonly", 0), ("pioAandB", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2406NumChnls.setStatus('current')
owDS2406PwrSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pwrParasite", 0), ("pwrExternal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2406PwrSupply.setStatus('current')
owDS2406ActivityLatchReset = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noReset", 0), ("yesReset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2406ActivityLatchReset.setStatus('current')
owDS18B20Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 5), )
if mibBuilder.loadTexts: owDS18B20Table.setStatus('current')
owDS18B20Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 5, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDS18B20Entry.setStatus('current')
owDS18B20Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS18B20Temperature.setStatus('current')
owDS18B20UserByte1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS18B20UserByte1.setStatus('current')
owDS18B20UserByte2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS18B20UserByte2.setStatus('current')
owDS18B20Resolution = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9, 10, 11, 12))).clone(namedValues=NamedValues(("nineBits", 9), ("tenBits", 10), ("elevenBits", 11), ("twelveBits", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS18B20Resolution.setStatus('current')
owDS18B20PwrSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("parasitePower", 0), ("externalPower", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS18B20PwrSupply.setStatus('current')
owDS18S20Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 6), )
if mibBuilder.loadTexts: owDS18S20Table.setStatus('current')
owDS18S20Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 6, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDS18S20Entry.setStatus('current')
owDS18S20Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS18S20Temperature.setStatus('current')
owDS18S20UserByte1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS18S20UserByte1.setStatus('current')
owDS18S20UserByte2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS18S20UserByte2.setStatus('current')
owDS2423Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 7), )
if mibBuilder.loadTexts: owDS2423Table.setStatus('current')
owDS2423Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 7, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDS2423Entry.setStatus('current')
owDS2423CounterA = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2423CounterA.setStatus('current')
owDS2423CounterB = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2423CounterB.setStatus('current')
owDS2438Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 8), )
if mibBuilder.loadTexts: owDS2438Table.setStatus('current')
owDS2438Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 8, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDS2438Entry.setStatus('current')
owDS2438Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 8, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2438Temperature.setStatus('current')
owDS2438SupplyVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2438SupplyVoltage.setStatus('current')
owDS2438PinVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2438PinVoltage.setStatus('current')
owDS2438current = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2438current.setStatus('current')
owDS2438Humidity = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 8, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2438Humidity.setStatus('current')
owDS2408Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 9), )
if mibBuilder.loadTexts: owDS2408Table.setStatus('current')
owDS2408Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 9, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDS2408Entry.setStatus('current')
owDS2408PIOLogicState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2408PIOLogicState.setStatus('current')
owDS2408PIOOutputLatchState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 9, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2408PIOOutputLatchState.setStatus('current')
owDS2408PIOActivityLatchState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("low", 0), ("high", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2408PIOActivityLatchState.setStatus('current')
owDS2408RSTZConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2408RSTZConfiguration.setStatus('current')
owDS2408PowerOnResetLatch = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2408PowerOnResetLatch.setStatus('current')
owDS2408VCCPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2408VCCPowerStatus.setStatus('current')
owDS2450Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 10), )
if mibBuilder.loadTexts: owDS2450Table.setStatus('current')
owDS2450Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDS2450Entry.setStatus('current')
owDS2450ChannelAConversionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2450ChannelAConversionValue.setStatus('current')
owDS2450ChannelAConversionResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelAConversionResolution.setStatus('current')
owDS2450ChannelAConversionRange = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelAConversionRange.setStatus('current')
owDS2450ChannelAOutputEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelAOutputEnable.setStatus('current')
owDS2450ChannelAOutputControl = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelAOutputControl.setStatus('current')
owDS2450ChannelBConversionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2450ChannelBConversionValue.setStatus('current')
owDS2450ChannelBConversionResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelBConversionResolution.setStatus('current')
owDS2450ChannelBConversionRange = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelBConversionRange.setStatus('current')
owDS2450ChannelBOutputEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelBOutputEnable.setStatus('current')
owDS2450ChannelBOutputControl = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelBOutputControl.setStatus('current')
owDS2450ChannelCConversionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2450ChannelCConversionValue.setStatus('current')
owDS2450ChannelCConversionResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelCConversionResolution.setStatus('current')
owDS2450ChannelCConversionRange = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelCConversionRange.setStatus('current')
owDS2450ChannelCOutputEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelCOutputEnable.setStatus('current')
owDS2450ChannelCOutputControl = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelCOutputControl.setStatus('current')
owDS2450ChannelDConversionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS2450ChannelDConversionValue.setStatus('current')
owDS2450ChannelDConversionResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelDConversionResolution.setStatus('current')
owDS2450ChannelDConversionRange = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelDConversionRange.setStatus('current')
owDS2450ChannelDOutputEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelDOutputEnable.setStatus('current')
owDS2450ChannelDOutputControl = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450ChannelDOutputControl.setStatus('current')
owDS2450PowerOnReset = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450PowerOnReset.setStatus('current')
owDS2450VCCControl = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS2450VCCControl.setStatus('current')
owEDS0064Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 11), )
if mibBuilder.loadTexts: owEDS0064Table.setStatus('current')
owEDS0064Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 11, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0064Entry.setStatus('current')
owEDS0064Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 11, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0064Temperature.setStatus('current')
owEDS0064Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0064Counter.setStatus('current')
owEDS0065Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 12), )
if mibBuilder.loadTexts: owEDS0065Table.setStatus('current')
owEDS0065Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 12, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0065Entry.setStatus('current')
owEDS0065Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 12, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0065Temperature.setStatus('current')
owEDS0065Humidity = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0065Humidity.setStatus('current')
owEDS0065DewPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 12, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0065DewPoint.setStatus('current')
owEDS0065Humidex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0065Humidex.setStatus('current')
owEDS0065HeatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 12, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0065HeatIndex.setStatus('current')
owEDS0065Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0065Counter.setStatus('current')
owEDS0066Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 13), )
if mibBuilder.loadTexts: owEDS0066Table.setStatus('current')
owEDS0066Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 13, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0066Entry.setStatus('current')
owEDS0066Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 13, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0066Temperature.setStatus('current')
owEDS0066BarometricPressureMb = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0066BarometricPressureMb.setStatus('current')
owEDS0066BarometricPressureHg = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 13, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0066BarometricPressureHg.setStatus('current')
owEDS0066Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0066Counter.setStatus('current')
owEDS0067Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 14), )
if mibBuilder.loadTexts: owEDS0067Table.setStatus('current')
owEDS0067Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 14, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0067Entry.setStatus('current')
owEDS0067Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 14, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0067Temperature.setStatus('current')
owEDS0067Light = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0067Light.setStatus('current')
owEDS0067Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0067Counter.setStatus('current')
owEDS0068Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 15), )
if mibBuilder.loadTexts: owEDS0068Table.setStatus('current')
owEDS0068Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0068Entry.setStatus('current')
owEDS0068Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068Temperature.setStatus('current')
owEDS0068Humidity = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068Humidity.setStatus('current')
owEDS0068DewPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068DewPoint.setStatus('current')
owEDS0068Humidex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068Humidex.setStatus('current')
owEDS0068HeatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068HeatIndex.setStatus('current')
owEDS0068BarometricPressureMb = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068BarometricPressureMb.setStatus('current')
owEDS0068BarometricPressureHg = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068BarometricPressureHg.setStatus('current')
owEDS0068Light = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068Light.setStatus('current')
owEDS0068Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0068Counter.setStatus('current')
owEDS0069Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 16), )
if mibBuilder.loadTexts: owEDS0069Table.setStatus('current')
owEDS0069Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 16, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0069Entry.setStatus('current')
owEDS0069Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 16, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0069Temperature.setStatus('current')
owEDS0069Motion = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 16, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0069Motion.setStatus('current')
owEDS0069Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0069Counter.setStatus('current')
owEDS0070Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 17), )
if mibBuilder.loadTexts: owEDS0070Table.setStatus('current')
owEDS0070Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 17, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0070Entry.setStatus('current')
owEDS0070VibrationInstant = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 65535))).clone(namedValues=NamedValues(("low", 0), ("high", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0070VibrationInstant.setStatus('current')
owEDS0070VibrationPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 65535))).clone(namedValues=NamedValues(("low", 0), ("high", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0070VibrationPeak.setStatus('current')
owEDS0070VibrationMax = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 65535))).clone(namedValues=NamedValues(("low", 0), ("high", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0070VibrationMax.setStatus('current')
owEDS0070VibrationMin = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 65535))).clone(namedValues=NamedValues(("low", 0), ("high", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0070VibrationMin.setStatus('current')
owEDS0070Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0070Counter.setStatus('current')
owEDS0071Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 18), )
if mibBuilder.loadTexts: owEDS0071Table.setStatus('current')
owEDS0071Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 18, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0071Entry.setStatus('current')
owEDS0071Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 18, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0071Temperature.setStatus('current')
owEDS0071Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0071Counter.setStatus('current')
owEDS0080Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 19), )
if mibBuilder.loadTexts: owEDS0080Table.setStatus('current')
owEDS0080Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0080Entry.setStatus('current')
owEDS0080Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Input1.setStatus('current')
owEDS0080Input2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Input2.setStatus('current')
owEDS0080Input3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Input3.setStatus('current')
owEDS0080Input4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Input4.setStatus('current')
owEDS0080Input5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Input5.setStatus('current')
owEDS0080Input6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Input6.setStatus('current')
owEDS0080Input7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Input7.setStatus('current')
owEDS0080Input8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Input8.setStatus('current')
owEDS0080Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 19, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0080Counter.setStatus('current')
owEDS0082Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 20), )
if mibBuilder.loadTexts: owEDS0082Table.setStatus('current')
owEDS0082Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0082Entry.setStatus('current')
owEDS0082Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Input1.setStatus('current')
owEDS0082Input2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Input2.setStatus('current')
owEDS0082Input3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Input3.setStatus('current')
owEDS0082Input4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Input4.setStatus('current')
owEDS0082Input5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Input5.setStatus('current')
owEDS0082Input6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Input6.setStatus('current')
owEDS0082Input7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Input7.setStatus('current')
owEDS0082Input8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Input8.setStatus('current')
owEDS0082Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 20, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0082Counter.setStatus('current')
owEDS0083Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 21), )
if mibBuilder.loadTexts: owEDS0083Table.setStatus('current')
owEDS0083Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 21, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0083Entry.setStatus('current')
owEDS0083Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 21, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0083Input1.setStatus('current')
owEDS0083Input2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 21, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0083Input2.setStatus('current')
owEDS0083Input3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 21, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0083Input3.setStatus('current')
owEDS0083Input4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 21, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0083Input4.setStatus('current')
owEDS0083Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0083Counter.setStatus('current')
owEDS0085Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 22), )
if mibBuilder.loadTexts: owEDS0085Table.setStatus('current')
owEDS0085Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 22, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0085Entry.setStatus('current')
owEDS0085Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 22, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0085Input1.setStatus('current')
owEDS0085Input2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 22, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0085Input2.setStatus('current')
owEDS0085Input3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 22, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0085Input3.setStatus('current')
owEDS0085Input4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 22, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0085Input4.setStatus('current')
owEDS0085Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 22, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0085Counter.setStatus('current')
owEDS0090Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 23), )
if mibBuilder.loadTexts: owEDS0090Table.setStatus('current')
owEDS0090Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0090Entry.setStatus('current')
owEDS0090Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Input1.setStatus('current')
owEDS0090Input2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Input2.setStatus('current')
owEDS0090Input3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Input3.setStatus('current')
owEDS0090Input4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Input4.setStatus('current')
owEDS0090Input5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Input5.setStatus('current')
owEDS0090Input6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Input6.setStatus('current')
owEDS0090Input7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Input7.setStatus('current')
owEDS0090Input8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Input8.setStatus('current')
owEDS0090ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090ActivityLatch1.setStatus('current')
owEDS0090ActivityLatch2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090ActivityLatch2.setStatus('current')
owEDS0090ActivityLatch3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090ActivityLatch3.setStatus('current')
owEDS0090ActivityLatch4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090ActivityLatch4.setStatus('current')
owEDS0090ActivityLatch5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090ActivityLatch5.setStatus('current')
owEDS0090ActivityLatch6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090ActivityLatch6.setStatus('current')
owEDS0090ActivityLatch7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090ActivityLatch7.setStatus('current')
owEDS0090ActivityLatch8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090ActivityLatch8.setStatus('current')
owEDS0090PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090PulseCounter1.setStatus('current')
owEDS0090PulseCounter2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090PulseCounter2.setStatus('current')
owEDS0090PulseCounter3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090PulseCounter3.setStatus('current')
owEDS0090PulseCounter4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090PulseCounter4.setStatus('current')
owEDS0090PulseCounter5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090PulseCounter5.setStatus('current')
owEDS0090PulseCounter6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090PulseCounter6.setStatus('current')
owEDS0090PulseCounter7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090PulseCounter7.setStatus('current')
owEDS0090PulseCounter8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090PulseCounter8.setStatus('current')
owEDS0090Output1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090Output1.setStatus('current')
owEDS0090Output2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090Output2.setStatus('current')
owEDS0090Output3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090Output3.setStatus('current')
owEDS0090Output4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090Output4.setStatus('current')
owEDS0090Output5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090Output5.setStatus('current')
owEDS0090Output6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090Output6.setStatus('current')
owEDS0090Output7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090Output7.setStatus('current')
owEDS0090Output8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090Output8.setStatus('current')
owEDS0090PullDown1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PullDown1.setStatus('current')
owEDS0090PullDown2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PullDown2.setStatus('current')
owEDS0090PullDown3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PullDown3.setStatus('current')
owEDS0090PullDown4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PullDown4.setStatus('current')
owEDS0090PullDown5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PullDown5.setStatus('current')
owEDS0090PullDown6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PullDown6.setStatus('current')
owEDS0090PullDown7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PullDown7.setStatus('current')
owEDS0090PullDown8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PullDown8.setStatus('current')
owEDS0090ActivityLatchReset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090ActivityLatchReset1.setStatus('current')
owEDS0090ActivityLatchReset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090ActivityLatchReset2.setStatus('current')
owEDS0090ActivityLatchReset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090ActivityLatchReset3.setStatus('current')
owEDS0090ActivityLatchReset4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090ActivityLatchReset4.setStatus('current')
owEDS0090ActivityLatchReset5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090ActivityLatchReset5.setStatus('current')
owEDS0090ActivityLatchReset6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090ActivityLatchReset6.setStatus('current')
owEDS0090ActivityLatchReset7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090ActivityLatchReset7.setStatus('current')
owEDS0090ActivityLatchReset8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090ActivityLatchReset8.setStatus('current')
owEDS0090PulseCounterReset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PulseCounterReset1.setStatus('current')
owEDS0090PulseCounterReset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PulseCounterReset2.setStatus('current')
owEDS0090PulseCounterReset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PulseCounterReset3.setStatus('current')
owEDS0090PulseCounterReset4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PulseCounterReset4.setStatus('current')
owEDS0090PulseCounterReset5 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PulseCounterReset5.setStatus('current')
owEDS0090PulseCounterReset6 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PulseCounterReset6.setStatus('current')
owEDS0090PulseCounterReset7 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PulseCounterReset7.setStatus('current')
owEDS0090PulseCounterReset8 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0090PulseCounterReset8.setStatus('current')
owEDS0090Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 23, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0090Counter.setStatus('current')
owEDS0091Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 24), )
if mibBuilder.loadTexts: owEDS0091Table.setStatus('current')
owEDS0091Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0091Entry.setStatus('current')
owEDS0091Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091Input1.setStatus('current')
owEDS0091Input2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091Input2.setStatus('current')
owEDS0091Input3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091Input3.setStatus('current')
owEDS0091Input4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091Input4.setStatus('current')
owEDS0091ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091ActivityLatch1.setStatus('current')
owEDS0091ActivityLatch2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091ActivityLatch2.setStatus('current')
owEDS0091ActivityLatch3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091ActivityLatch3.setStatus('current')
owEDS0091ActivityLatch4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091ActivityLatch4.setStatus('current')
owEDS0091PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091PulseCounter1.setStatus('current')
owEDS0091PulseCounter2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091PulseCounter2.setStatus('current')
owEDS0091PulseCounter3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091PulseCounter3.setStatus('current')
owEDS0091PulseCounter4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091PulseCounter4.setStatus('current')
owEDS0091PulseCounterReset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0091PulseCounterReset1.setStatus('current')
owEDS0091PulseCounterReset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0091PulseCounterReset2.setStatus('current')
owEDS0091PulseCounterReset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0091PulseCounterReset3.setStatus('current')
owEDS0091PulseCounterReset4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0091PulseCounterReset4.setStatus('current')
owEDS0091ActivityLatchReset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0091ActivityLatchReset1.setStatus('current')
owEDS0091ActivityLatchReset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0091ActivityLatchReset2.setStatus('current')
owEDS0091ActivityLatchReset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0091ActivityLatchReset3.setStatus('current')
owEDS0091ActivityLatchReset4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0091ActivityLatchReset4.setStatus('current')
owEDS0091Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 24, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0091Counter.setStatus('current')
owEDS0092Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 25), )
if mibBuilder.loadTexts: owEDS0092Table.setStatus('current')
owEDS0092Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 25, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0092Entry.setStatus('current')
owEDS0092Output1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0092Output1.setStatus('current')
owEDS0092Output2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0092Output2.setStatus('current')
owEDS0092Output3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0092Output3.setStatus('current')
owEDS0092Output4 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0092Output4.setStatus('current')
owEDS0092Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 25, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0092Counter.setStatus('current')
owDS28EA00Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 26), )
if mibBuilder.loadTexts: owDS28EA00Table.setStatus('current')
owDS28EA00Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 26, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owDS28EA00Entry.setStatus('current')
owDS28EA00Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 26, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS28EA00Temperature.setStatus('current')
owDS28EA00UserByte1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 26, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS28EA00UserByte1.setStatus('current')
owDS28EA00UserByte2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 26, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS28EA00UserByte2.setStatus('current')
owDS28EA00PIOALevel = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 26, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS28EA00PIOALevel.setStatus('current')
owDS28EA00PIOBLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 26, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owDS28EA00PIOBLevel.setStatus('current')
owDS28EA00PIOAFlipFlop = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 26, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS28EA00PIOAFlipFlop.setStatus('current')
owDS28EA00PIOBFlipFlop = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 26, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owDS28EA00PIOBFlipFlop.setStatus('current')
owEDS0050Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 27), )
if mibBuilder.loadTexts: owEDS0050Table.setStatus('current')
owEDS0050Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0050Entry.setStatus('current')
owEDS0050Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0050Temperature.setStatus('current')
owEDS0050InputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0050InputVoltage.setStatus('current')
owEDS0050Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0050Input1.setStatus('current')
owEDS0050Input2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0050Input2.setStatus('current')
owEDS0050ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0050ActivityLatch1.setStatus('current')
owEDS0050ActivityLatch2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050ActivityLatch2.setStatus('current')
owEDS0050PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050PulseCounter1.setStatus('current')
owEDS0050PulseCounter2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050PulseCounter2.setStatus('current')
owEDS0050Output1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050Output1.setStatus('current')
owEDS0050Output2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050Output2.setStatus('current')
owEDS0050ActivityLatchReset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050ActivityLatchReset1.setStatus('current')
owEDS0050ActivityLatchReset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofunction", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050ActivityLatchReset2.setStatus('current')
owEDS0050PulseCounterReset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050PulseCounterReset1.setStatus('current')
owEDS0050PulseCounterReset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: owEDS0050PulseCounterReset2.setStatus('current')
owEDS0050Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 27, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0050Counter.setStatus('current')
owEDS0001Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 10, 28), )
if mibBuilder.loadTexts: owEDS0001Table.setStatus('current')
owEDS0001Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1), ).setIndexNames((0, "EDS-MIB", "owDeviceIndex"))
if mibBuilder.loadTexts: owEDS0001Entry.setStatus('current')
owEDS0001PollCount = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001PollCount.setStatus('current')
owEDS0001DevicesConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001DevicesConnected.setStatus('current')
owEDS0001LoopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001LoopTime.setStatus('current')
owEDS0001DevicesConnectedChannel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001DevicesConnectedChannel1.setStatus('current')
owEDS0001DevicesConnectedChannel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001DevicesConnectedChannel2.setStatus('current')
owEDS0001DevicesConnectedChannel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001DevicesConnectedChannel3.setStatus('current')
owEDS0001ErrorsChannel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001ErrorsChannel1.setStatus('current')
owEDS0001ErrorsChannel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001ErrorsChannel2.setStatus('current')
owEDS0001ErrorsChannel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001ErrorsChannel3.setStatus('current')
owEDS0001VoltageChannel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001VoltageChannel1.setStatus('current')
owEDS0001VoltageChannel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001VoltageChannel2.setStatus('current')
owEDS0001VoltageChannel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001VoltageChannel3.setStatus('current')
owEDS0001InputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001InputVoltage.setStatus('current')
owEDS0001DeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001DeviceName.setStatus('current')
owEDS0001HostName = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001HostName.setStatus('current')
owEDS0001MACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001MACAddress.setStatus('current')
owEDS0001TimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 10, 28, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: owEDS0001TimeStamp.setStatus('current')
wTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 3))
wTrapTable = MibTable((1, 3, 6, 1, 4, 1, 31440, 3, 1), )
if mibBuilder.loadTexts: wTrapTable.setStatus('current')
wTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 3, 1, 1), ).setIndexNames((0, "EDS-MIB", "wTrapIndex"))
if mibBuilder.loadTexts: wTrapEntry.setStatus('current')
wTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wTrapIndex.setStatus('current')
wTrapIP = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 3, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wTrapIP.setStatus('current')
wTrapCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 3, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wTrapCommunity.setStatus('current')
wTrapEUI = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wTrapEUI.setStatus('current')
wTrapVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 3, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wTrapVariable.setStatus('current')
wTrapHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 3, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wTrapHighThreshold.setStatus('current')
wTrapLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 3, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wTrapLowThreshold.setStatus('current')
wDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11))
wDeviceTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1))
wNone = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 0))
wUnknown = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 1))
wUnused1 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 2))
wUnused2 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 3))
wEDS1068 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 4))
wEDS1067 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 5))
wEDS1066 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 6))
wEDS1065 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 7))
wEDS1064 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 8))
wEDS1101 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 9))
wEDS2101 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 10))
wEDS3030 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 11))
wEDS3031 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 12))
wEDS3032 = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 1, 13))
wDeviceInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 31440, 11, 2))
wDeviceNumActive = MibScalar((1, 3, 6, 1, 4, 1, 31440, 11, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceNumActive.setStatus('current')
wDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 3), )
if mibBuilder.loadTexts: wDeviceTable.setStatus('current')
wDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wDeviceEntry.setStatus('current')
wDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceIndex.setStatus('current')
wDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceType.setStatus('current')
wDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceName.setStatus('current')
wDeviceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceDescription.setStatus('current')
wDeviceFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceFamily.setStatus('current')
wDeviceEUI = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceEUI.setStatus('current')
wDeviceHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceHealth.setStatus('current')
wDeviceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wDeviceTag.setStatus('current')
wEDS1068Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 4), )
if mibBuilder.loadTexts: wEDS1068Table.setStatus('current')
wEDS1068Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS1068Entry.setStatus('current')
wEDS1068Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068Temperature.setStatus('current')
wEDS1068Humidity = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068Humidity.setStatus('current')
wEDS1068DewPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068DewPoint.setStatus('current')
wEDS1068Humidex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068Humidex.setStatus('current')
wEDS1068HeatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068HeatIndex.setStatus('current')
wEDS1068BarometricPressure = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068BarometricPressure.setStatus('current')
wEDS1068LEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068LEDState.setStatus('current')
wEDS1068RelayState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068RelayState.setStatus('current')
wEDS1068Light = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068Light.setStatus('current')
wEDS1068Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068Input1.setStatus('current')
wEDS1068ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068ActivityLatch1.setStatus('current')
wEDS1068PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068PulseCounter1.setStatus('current')
wEDS1068Battery = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068Battery.setStatus('current')
wEDS1068ReadCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1068ReadCounter.setStatus('current')
wEDS1068LEDFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1068LEDFunction.setStatus('current')
wEDS1068RelayFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1068RelayFunction.setStatus('current')
wEDS1068LEDSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1068LEDSetState.setStatus('current')
wEDS1068RelaySetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 4, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1068RelaySetState.setStatus('current')
wEDS1067Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 5), )
if mibBuilder.loadTexts: wEDS1067Table.setStatus('current')
wEDS1067Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS1067Entry.setStatus('current')
wEDS1067Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067Temperature.setStatus('current')
wEDS1067LEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067LEDState.setStatus('current')
wEDS1067RelayState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067RelayState.setStatus('current')
wEDS1067Light = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067Light.setStatus('current')
wEDS1067Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067Input1.setStatus('current')
wEDS1067ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067ActivityLatch1.setStatus('current')
wEDS1067PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067PulseCounter1.setStatus('current')
wEDS1067Battery = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067Battery.setStatus('current')
wEDS1067ReadCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1067ReadCounter.setStatus('current')
wEDS1067LEDFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1067LEDFunction.setStatus('current')
wEDS1067RelayFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1067RelayFunction.setStatus('current')
wEDS1067LEDSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1067LEDSetState.setStatus('current')
wEDS1067RelaySetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 5, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1067RelaySetState.setStatus('current')
wEDS1066Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 6), )
if mibBuilder.loadTexts: wEDS1066Table.setStatus('current')
wEDS1066Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS1066Entry.setStatus('current')
wEDS1066Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066Temperature.setStatus('current')
wEDS1066BarometricPressure = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066BarometricPressure.setStatus('current')
wEDS1066LEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066LEDState.setStatus('current')
wEDS1066RelayState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066RelayState.setStatus('current')
wEDS1066Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066Input1.setStatus('current')
wEDS1066ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066ActivityLatch1.setStatus('current')
wEDS1066PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066PulseCounter1.setStatus('current')
wEDS1066Battery = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066Battery.setStatus('current')
wEDS1066ReadCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1066ReadCounter.setStatus('current')
wEDS1066LEDFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1066LEDFunction.setStatus('current')
wEDS1066RelayFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1066RelayFunction.setStatus('current')
wEDS1066LEDSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1066LEDSetState.setStatus('current')
wEDS1066RelaySetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 6, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1066RelaySetState.setStatus('current')
wEDS1065Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 7), )
if mibBuilder.loadTexts: wEDS1065Table.setStatus('current')
wEDS1065Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS1065Entry.setStatus('current')
wEDS1065Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065Temperature.setStatus('current')
wEDS1065Humidity = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065Humidity.setStatus('current')
wEDS1065DewPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065DewPoint.setStatus('current')
wEDS1065Humidex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065Humidex.setStatus('current')
wEDS1065HeatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065HeatIndex.setStatus('current')
wEDS1065LEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065LEDState.setStatus('current')
wEDS1065RelayState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065RelayState.setStatus('current')
wEDS1065Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065Input1.setStatus('current')
wEDS1065ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065ActivityLatch1.setStatus('current')
wEDS1065PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065PulseCounter1.setStatus('current')
wEDS1065Battery = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065Battery.setStatus('current')
wEDS1065ReadCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1065ReadCounter.setStatus('current')
wEDS1065LEDFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1065LEDFunction.setStatus('current')
wEDS1065RelayFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1065RelayFunction.setStatus('current')
wEDS1065LEDSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1065LEDSetState.setStatus('current')
wEDS1065RelaySetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 7, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1065RelaySetState.setStatus('current')
wEDS1064Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 8), )
if mibBuilder.loadTexts: wEDS1064Table.setStatus('current')
wEDS1064Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS1064Entry.setStatus('current')
wEDS1064Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1064Temperature.setStatus('current')
wEDS1064LEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1064LEDState.setStatus('current')
wEDS1064RelayState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1064RelayState.setStatus('current')
wEDS1064Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1064Input1.setStatus('current')
wEDS1064ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1064ActivityLatch1.setStatus('current')
wEDS1064PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1064PulseCounter1.setStatus('current')
wEDS1064Battery = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1064Battery.setStatus('current')
wEDS1064ReadCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1064ReadCounter.setStatus('current')
wEDS1064LEDFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1064LEDFunction.setStatus('current')
wEDS1064RelayFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1064RelayFunction.setStatus('current')
wEDS1064LEDSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1064LEDSetState.setStatus('current')
wEDS1064RelaySetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 8, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS1064RelaySetState.setStatus('current')
wEDS1101Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 9), )
if mibBuilder.loadTexts: wEDS1101Table.setStatus('current')
wEDS1101Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 9, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS1101Entry.setStatus('current')
wEDS1101DevicesConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1101DevicesConnected.setStatus('current')
wEDS1101SendCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS1101SendCounter.setStatus('current')
wEDS2101Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 10), )
if mibBuilder.loadTexts: wEDS2101Table.setStatus('current')
wEDS2101Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 10, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS2101Entry.setStatus('current')
wEDS2101DevicesConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS2101DevicesConnected.setStatus('current')
wEDS2101SendCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS2101SendCounter.setStatus('current')
wEDS3030Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 11), )
if mibBuilder.loadTexts: wEDS3030Table.setStatus('current')
wEDS3030Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS3030Entry.setStatus('current')
wEDS3030Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030Temperature.setStatus('current')
wEDS3030Probe = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030Probe.setStatus('current')
wEDS3030LEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030LEDState.setStatus('current')
wEDS3030Light = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030Light.setStatus('current')
wEDS3030Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030Input1.setStatus('current')
wEDS3030ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030ActivityLatch1.setStatus('current')
wEDS3030PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030PulseCounter1.setStatus('current')
wEDS3030Battery = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030Battery.setStatus('current')
wEDS3030ReadCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3030ReadCounter.setStatus('current')
wEDS3030LEDFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS3030LEDFunction.setStatus('current')
wEDS3030LEDSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 11, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS3030LEDSetState.setStatus('current')
wEDS3031Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 12), )
if mibBuilder.loadTexts: wEDS3031Table.setStatus('current')
wEDS3031Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS3031Entry.setStatus('current')
wEDS3031Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3031Temperature.setStatus('current')
wEDS3031RTDTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3031RTDTemperature.setStatus('current')
wEDS3031LEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3031LEDState.setStatus('current')
wEDS3031Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3031Input1.setStatus('current')
wEDS3031ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3031ActivityLatch1.setStatus('current')
wEDS3031PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3031PulseCounter1.setStatus('current')
wEDS3031Battery = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3031Battery.setStatus('current')
wEDS3031ReadCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3031ReadCounter.setStatus('current')
wEDS3031LEDFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS3031LEDFunction.setStatus('current')
wEDS3031LEDSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 12, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS3031LEDSetState.setStatus('current')
wEDS3032Table = MibTable((1, 3, 6, 1, 4, 1, 31440, 11, 13), )
if mibBuilder.loadTexts: wEDS3032Table.setStatus('current')
wEDS3032Entry = MibTableRow((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1), ).setIndexNames((0, "EDS-MIB", "wDeviceIndex"))
if mibBuilder.loadTexts: wEDS3032Entry.setStatus('current')
wEDS3032Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032Temperature.setStatus('current')
wEDS3032RTD1Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032RTD1Temperature.setStatus('current')
wEDS3032RTD2Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032RTD2Temperature.setStatus('current')
wEDS3032LEDState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032LEDState.setStatus('current')
wEDS3032Input1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032Input1.setStatus('current')
wEDS3032ActivityLatch1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032ActivityLatch1.setStatus('current')
wEDS3032PulseCounter1 = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032PulseCounter1.setStatus('current')
wEDS3032Battery = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032Battery.setStatus('current')
wEDS3032ReadCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wEDS3032ReadCounter.setStatus('current')
wEDS3032LEDFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS3032LEDFunction.setStatus('current')
wEDS3032LEDSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 31440, 11, 13, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wEDS3032LEDSetState.setStatus('current')
mibBuilder.exportSymbols("EDS-MIB", owDS2450ChannelDOutputControl=owDS2450ChannelDOutputControl, wEDS2101Entry=wEDS2101Entry, owEDS0080Input8=owEDS0080Input8, wEDS3030Entry=wEDS3030Entry, owDS28EA00UserByte1=owDS28EA00UserByte1, owEDS0066=owEDS0066, wEDS1064=wEDS1064, wTrapEUI=wTrapEUI, owDS2423Entry=owDS2423Entry, wEDS1064ActivityLatch1=wEDS1064ActivityLatch1, owEDS0068Humidity=owEDS0068Humidity, owDS2450ChannelBConversionValue=owDS2450ChannelBConversionValue, owDS2406PwrSupply=owDS2406PwrSupply, owEDS0085Input3=owEDS0085Input3, wEDS1067RelaySetState=wEDS1067RelaySetState, owDS2450ChannelDOutputEnable=owDS2450ChannelDOutputEnable, owEDS0091PulseCounterReset2=owEDS0091PulseCounterReset2, owDS2408RSTZConfiguration=owDS2408RSTZConfiguration, wEDS1067Battery=wEDS1067Battery, owEDS0083Entry=owEDS0083Entry, owEDS0090PulseCounterReset8=owEDS0090PulseCounterReset8, owEDS0085Table=owEDS0085Table, owEDS0001DeviceName=owEDS0001DeviceName, owEDS0050Counter=owEDS0050Counter, wEDS3031Battery=wEDS3031Battery, eFirmwareVersion=eFirmwareVersion, wEDS1064LEDSetState=wEDS1064LEDSetState, owDS2450ChannelCConversionRange=owDS2450ChannelCConversionRange, owDS2450ChannelCOutputControl=owDS2450ChannelCOutputControl, owEDS0090PulseCounterReset1=owEDS0090PulseCounterReset1, owEDS0090PulseCounter3=owEDS0090PulseCounter3, wEDS1066=wEDS1066, owDeviceHealth=owDeviceHealth, wEDS3032LEDFunction=wEDS3032LEDFunction, owEDS0071Temperature=owEDS0071Temperature, wDeviceType=wDeviceType, wEDS1068=wEDS1068, owDS18S20UserByte2=owDS18S20UserByte2, owEDS0068Table=owEDS0068Table, wDeviceEUI=wDeviceEUI, wEDS1068Input1=wEDS1068Input1, wEDS1067LEDSetState=wEDS1067LEDSetState, wEDS1066LEDFunction=wEDS1066LEDFunction, PYSNMP_MODULE_ID=edsProducts, wEDS3030LEDSetState=wEDS3030LEDSetState, wEDS1066ReadCounter=wEDS1066ReadCounter, owDS2438=owDS2438, owEDS0091PulseCounterReset4=owEDS0091PulseCounterReset4, owEDS0090PulseCounter5=owEDS0090PulseCounter5, wEDS1066RelayFunction=wEDS1066RelayFunction, dTrapDeviceSendPointer=dTrapDeviceSendPointer, owDS2423=owDS2423, wEDS1066Table=wEDS1066Table, owEDS0090ActivityLatch3=owEDS0090ActivityLatch3, wEDS1068LEDFunction=wEDS1068LEDFunction, owDS28EA00UserByte2=owDS28EA00UserByte2, owEDS0050Output1=owEDS0050Output1, owEDS0090Input3=owEDS0090Input3, wEDS1064Entry=wEDS1064Entry, owEDS0082Table=owEDS0082Table, wEDS1068ReadCounter=wEDS1068ReadCounter, owEDS0065Temperature=owEDS0065Temperature, owEDS0068Light=owEDS0068Light, wEDS1068Entry=wEDS1068Entry, owEDS0090PulseCounterReset3=owEDS0090PulseCounterReset3, eFirmwareDate=eFirmwareDate, wEDS1101SendCounter=wEDS1101SendCounter, owEDS0080Entry=owEDS0080Entry, owEDS0090Input1=owEDS0090Input1, owEDS0064Entry=owEDS0064Entry, wNone=wNone, wEDS3030Battery=wEDS3030Battery, owEDS0068Humidex=owEDS0068Humidex, owEDS0091ActivityLatchReset4=owEDS0091ActivityLatchReset4, wEDS1068RelaySetState=wEDS1068RelaySetState, wEDS1066LEDState=wEDS1066LEDState, wEDS2101Table=wEDS2101Table, owEDS0090Input8=owEDS0090Input8, wEDS3032Entry=wEDS3032Entry, owEDS0083=owEDS0083, owEDS0065Counter=owEDS0065Counter, owEDS0050Table=owEDS0050Table, dTrapDeviceHighThreshold=dTrapDeviceHighThreshold, wEDS1066RelayState=wEDS1066RelayState, owEDS0069Motion=owEDS0069Motion, owEDS0050InputVoltage=owEDS0050InputVoltage, dTrap=dTrap, eProductName=eProductName, owEDS0090PulseCounterReset6=owEDS0090PulseCounterReset6, wEDS3030Input1=wEDS3030Input1, owDeviceName=owDeviceName, wEDS3031LEDState=wEDS3031LEDState, dTrapIndex=dTrapIndex, owDS2406PIOAActivityLatch=owDS2406PIOAActivityLatch, owDeviceIndex=owDeviceIndex, owEDS0067Entry=owEDS0067Entry, wDeviceTag=wDeviceTag, owDeviceEntry=owDeviceEntry, wEDS1067Input1=wEDS1067Input1, dTrapDeviceROM=dTrapDeviceROM, owDS18B20Table=owDS18B20Table, owEDS0090ActivityLatchReset5=owEDS0090ActivityLatchReset5, owDS2423CounterB=owDS2423CounterB, owDS2450VCCControl=owDS2450VCCControl, owEDS0090PullDown5=owEDS0090PullDown5, wEDS1064PulseCounter1=wEDS1064PulseCounter1, owEDS0067Table=owEDS0067Table, wEDS1067RelayFunction=wEDS1067RelayFunction, owEDS0064=owEDS0064, owDS28EA00Entry=owDS28EA00Entry, owEDS0091Input1=owEDS0091Input1, wEDS1068ActivityLatch1=wEDS1068ActivityLatch1, wEDS1065ReadCounter=wEDS1065ReadCounter, owEDS0091PulseCounterReset1=owEDS0091PulseCounterReset1, owDS18B20PwrSupply=owDS18B20PwrSupply, owDS2406PIOBActivityLatch=owDS2406PIOBActivityLatch, owEDS0068HeatIndex=owEDS0068HeatIndex, owEDS0090PulseCounterReset2=owEDS0090PulseCounterReset2, wEDS1067RelayState=wEDS1067RelayState, owEDS0071=owEDS0071, owDS2438Entry=owDS2438Entry, owEDS0090ActivityLatchReset6=owEDS0090ActivityLatchReset6, owEDS0071Table=owEDS0071Table, owDS2406PIOALevel=owDS2406PIOALevel, owDS2450ChannelAConversionValue=owDS2450ChannelAConversionValue, wEDS1066LEDSetState=wEDS1066LEDSetState, owEDS0065Entry=owEDS0065Entry, owEDS0090Input7=owEDS0090Input7, wEDS1065Entry=wEDS1065Entry, owEDS0085=owEDS0085, wDeviceTypes=wDeviceTypes, wEDS3030ReadCounter=wEDS3030ReadCounter, owEDS0090ActivityLatch2=owEDS0090ActivityLatch2, wEDS3032Temperature=wEDS3032Temperature, owDS2408PIOActivityLatchState=owDS2408PIOActivityLatchState, owEDS0070VibrationInstant=owEDS0070VibrationInstant, wUnused2=wUnused2, owEDS0092Counter=owEDS0092Counter, wEDS3032Table=wEDS3032Table, wEDS1065RelaySetState=wEDS1065RelaySetState, wEDS1068PulseCounter1=wEDS1068PulseCounter1, owDeviceTypes=owDeviceTypes, owDS2408Table=owDS2408Table, owDS2450ChannelDConversionRange=owDS2450ChannelDConversionRange, owDS2438PinVoltage=owDS2438PinVoltage, owEDS0080=owEDS0080, wEDS1066RelaySetState=wEDS1066RelaySetState, owEDS0050Temperature=owEDS0050Temperature, owEDS0090PulseCounter7=owEDS0090PulseCounter7, wEDS1065RelayFunction=wEDS1065RelayFunction, owDS18B20UserByte2=owDS18B20UserByte2, owEDS0092Output3=owEDS0092Output3, wTrapLowThreshold=wTrapLowThreshold, wEDS3032RTD1Temperature=wEDS3032RTD1Temperature, owEDS0065Humidity=owEDS0065Humidity, owEDS0068DewPoint=owEDS0068DewPoint, wEDS1068Light=wEDS1068Light, wEDS3032ActivityLatch1=wEDS3032ActivityLatch1, owEDS0069=owEDS0069, owEDS0067=owEDS0067, owEDS0090PulseCounter4=owEDS0090PulseCounter4, owDS2450ChannelDConversionResolution=owDS2450ChannelDConversionResolution, owEDS0050PulseCounter2=owEDS0050PulseCounter2, owEDS0001DevicesConnectedChannel2=owEDS0001DevicesConnectedChannel2, owEDS0090Entry=owEDS0090Entry, edsMain=edsMain, owEDS0064Counter=owEDS0064Counter, owDS2406ActivityLatchReset=owDS2406ActivityLatchReset, wEDS3030Light=wEDS3030Light, owEDS0082Input2=owEDS0082Input2, owDS2408PowerOnResetLatch=owDS2408PowerOnResetLatch, owDS2450ChannelBOutputControl=owDS2450ChannelBOutputControl, owEDS0090PullDown4=owEDS0090PullDown4, owEDS0001Entry=owEDS0001Entry, owDS2450PowerOnReset=owDS2450PowerOnReset, wEDS1065=wEDS1065, owDS2406Table=owDS2406Table, owEDS0050PulseCounterReset1=owEDS0050PulseCounterReset1, wTrap=wTrap, owEDS0001DevicesConnectedChannel3=owEDS0001DevicesConnectedChannel3, wEDS1068Table=wEDS1068Table, owDS18B20Temperature=owDS18B20Temperature, wEDS3032RTD2Temperature=wEDS3032RTD2Temperature, owEDS0085Counter=owEDS0085Counter, wEDS1065LEDFunction=wEDS1065LEDFunction, wDeviceName=wDeviceName, wEDS1068Humidex=wEDS1068Humidex, owEDS0050Output2=owEDS0050Output2, owEDS0090Output6=owEDS0090Output6, owEDS0071Entry=owEDS0071Entry, owEDS0090ActivityLatchReset8=owEDS0090ActivityLatchReset8, dTrapTable=dTrapTable, owDS2423CounterA=owDS2423CounterA, wEDS3030=wEDS3030, wEDS1067LEDState=wEDS1067LEDState, owEDS0091ActivityLatch3=owEDS0091ActivityLatch3, wEDS1064Battery=wEDS1064Battery, wEDS1066Battery=wEDS1066Battery, wTrapHighThreshold=wTrapHighThreshold, owEDS0068BarometricPressureHg=owEDS0068BarometricPressureHg, owDS2450ChannelAOutputControl=owDS2450ChannelAOutputControl, owDS28EA00=owDS28EA00, owDS18S20Table=owDS18S20Table, dTrapCommunity=dTrapCommunity, wEDS3032ReadCounter=wEDS3032ReadCounter, owDS2423Table=owDS2423Table, owEDS0091PulseCounter3=owEDS0091PulseCounter3, owEDS0090PulseCounter6=owEDS0090PulseCounter6, owDS2450ChannelDConversionValue=owDS2450ChannelDConversionValue, owEDS0050PulseCounter1=owEDS0050PulseCounter1, wEDS1065HeatIndex=wEDS1065HeatIndex, owEDS0090PulseCounter1=owEDS0090PulseCounter1, owEDS0066Temperature=owEDS0066Temperature, wEDS1065DewPoint=wEDS1065DewPoint, owEDS0083Input1=owEDS0083Input1, wEDS1068Temperature=wEDS1068Temperature, owEDS0050PulseCounterReset2=owEDS0050PulseCounterReset2, wEDS1066Input1=wEDS1066Input1, owEDS0069Entry=owEDS0069Entry, owEDS0090Input5=owEDS0090Input5, owEDS0090Output7=owEDS0090Output7, owUnknown=owUnknown, owEDS0090Counter=owEDS0090Counter, owEDS0090ActivityLatchReset3=owEDS0090ActivityLatchReset3, dTrapDeviceTable=dTrapDeviceTable, wEDS3031Table=wEDS3031Table, owEDS0083Counter=owEDS0083Counter, owEDS0070VibrationMin=owEDS0070VibrationMin, owEDS0070Counter=owEDS0070Counter, owEDS0091ActivityLatchReset2=owEDS0091ActivityLatchReset2, owDeviceInfo=owDeviceInfo, owDS28EA00Temperature=owDS28EA00Temperature, owEDS0067Light=owEDS0067Light, owEDS0067Temperature=owEDS0067Temperature, owEDS0080Input7=owEDS0080Input7, owEDS0090ActivityLatch4=owEDS0090ActivityLatch4, wDeviceTable=wDeviceTable, owEDS0068BarometricPressureMb=owEDS0068BarometricPressureMb, wEDS1068Battery=wEDS1068Battery, owDS18B20Entry=owDS18B20Entry, wEDS1067PulseCounter1=wEDS1067PulseCounter1, owEDS0064Temperature=owEDS0064Temperature, wEDS1067LEDFunction=wEDS1067LEDFunction, owEDS0001DevicesConnected=owEDS0001DevicesConnected, wTrapIP=wTrapIP, wEDS1068HeatIndex=wEDS1068HeatIndex, wEDS2101=wEDS2101, wEDS1065Table=wEDS1065Table, wTrapVariable=wTrapVariable, wEDS1064RelayState=wEDS1064RelayState, wEDS1065Input1=wEDS1065Input1, owEDS0090PullDown2=owEDS0090PullDown2, owDS28EA00PIOAFlipFlop=owDS28EA00PIOAFlipFlop, wEDS1066ActivityLatch1=wEDS1066ActivityLatch1)
mibBuilder.exportSymbols("EDS-MIB", wEDS1067Table=wEDS1067Table, owDS28EA00PIOBLevel=owDS28EA00PIOBLevel, wEDS1064Temperature=wEDS1064Temperature, wEDS3030LEDState=wEDS3030LEDState, owEDS0091PulseCounter2=owEDS0091PulseCounter2, owEDS0091Counter=owEDS0091Counter, wEDS1064LEDState=wEDS1064LEDState, wEDS3032LEDState=wEDS3032LEDState, wEDS1064LEDFunction=wEDS1064LEDFunction, owDS2406PIOBLevel=owDS2406PIOBLevel, owEDS0082Input3=owEDS0082Input3, wTrapTable=wTrapTable, wEDS1101Entry=wEDS1101Entry, owEDS0083Input2=owEDS0083Input2, owDS2450ChannelCConversionResolution=owDS2450ChannelCConversionResolution, wEDS1064RelayFunction=wEDS1064RelayFunction, owDS2450ChannelBConversionRange=owDS2450ChannelBConversionRange, owEDS0082Input5=owEDS0082Input5, owEDS0082=owEDS0082, owEDS0080Input1=owEDS0080Input1, wUnknown=wUnknown, wEDS1068DewPoint=wEDS1068DewPoint, owEDS0090ActivityLatch5=owEDS0090ActivityLatch5, owEDS0001TimeStamp=owEDS0001TimeStamp, owDS2438SupplyVoltage=owDS2438SupplyVoltage, wEDS1066Temperature=wEDS1066Temperature, owEDS0091Input4=owEDS0091Input4, owEDS0090ActivityLatchReset7=owEDS0090ActivityLatchReset7, owDS28EA00Table=owDS28EA00Table, owEDS0090Input4=owEDS0090Input4, wEDS3031Input1=wEDS3031Input1, wEDS3031ActivityLatch1=wEDS3031ActivityLatch1, wEDS1068BarometricPressure=wEDS1068BarometricPressure, wEDS3031RTDTemperature=wEDS3031RTDTemperature, owEDS0082Input8=owEDS0082Input8, owEDS0090Output4=owEDS0090Output4, wEDS1065LEDState=wEDS1065LEDState, wEDS1065PulseCounter1=wEDS1065PulseCounter1, owDS2438Temperature=owDS2438Temperature, owEDS0092Entry=owEDS0092Entry, owEDS0090ActivityLatchReset1=owEDS0090ActivityLatchReset1, owEDS0080Input4=owEDS0080Input4, owDS18S20Temperature=owDS18S20Temperature, owEDS0070VibrationMax=owEDS0070VibrationMax, owEDS0092Output2=owEDS0092Output2, wDeviceNumActive=wDeviceNumActive, dTrapDeviceIndex=dTrapDeviceIndex, owEDS0001=owEDS0001, wUnused1=wUnused1, wEDS3031=wEDS3031, wEDS3030Table=wEDS3030Table, owDS2408PIOLogicState=owDS2408PIOLogicState, wEDS1101=wEDS1101, owEDS0067Counter=owEDS0067Counter, owDS2450ChannelCOutputEnable=owDS2450ChannelCOutputEnable, wEDS1067ReadCounter=wEDS1067ReadCounter, owEDS0090=owEDS0090, owDS2438Humidity=owDS2438Humidity, owEDS0090PulseCounterReset5=owEDS0090PulseCounterReset5, owEDS0090ActivityLatch7=owEDS0090ActivityLatch7, owEDS0071Counter=owEDS0071Counter, owEDS0085Input4=owEDS0085Input4, wTrapIndex=wTrapIndex, wDevices=wDevices, owEDS0064Table=owEDS0064Table, dTrapEnable=dTrapEnable, wEDS1067Light=wEDS1067Light, owEDS0065=owEDS0065, wTrapEntry=wTrapEntry, owDeviceDescription=owDeviceDescription, owEDS0065Humidex=owEDS0065Humidex, owEDS0070VibrationPeak=owEDS0070VibrationPeak, owEDS0001VoltageChannel2=owEDS0001VoltageChannel2, wDeviceDescription=wDeviceDescription, eCompanyName=eCompanyName, owEDS0090Output3=owEDS0090Output3, owEDS0069Temperature=owEDS0069Temperature, owEDS0083Input4=owEDS0083Input4, owEDS0001HostName=owEDS0001HostName, owEDS0050ActivityLatchReset2=owEDS0050ActivityLatchReset2, wTrapCommunity=wTrapCommunity, owEDS0050Input2=owEDS0050Input2, owEDS0082Input6=owEDS0082Input6, wEDS1101Table=wEDS1101Table, owEDS0001MACAddress=owEDS0001MACAddress, owDS2450ChannelBOutputEnable=owDS2450ChannelBOutputEnable, owEDS0090ActivityLatch1=owEDS0090ActivityLatch1, owEDS0066Table=owEDS0066Table, wEDS1068Humidity=wEDS1068Humidity, dTrapIP=dTrapIP, owDS2408PIOOutputLatchState=owDS2408PIOOutputLatchState, owEDS0091Input2=owEDS0091Input2, owDevices=owDevices, owEDS0091Entry=owEDS0091Entry, owEDS0065Table=owEDS0065Table, owEDS0090PullDown1=owEDS0090PullDown1, owDS2406NumChnls=owDS2406NumChnls, owEDS0091ActivityLatch2=owEDS0091ActivityLatch2, owDS2406PIOBFlipFlop=owDS2406PIOBFlipFlop, owEDS0090Output1=owEDS0090Output1, owEDS0082Input7=owEDS0082Input7, owDS28EA00PIOALevel=owDS28EA00PIOALevel, owDS18B20UserByte1=owDS18B20UserByte1, owEDS0091PulseCounter1=owEDS0091PulseCounter1, owEDS0090Input2=owEDS0090Input2, wEDS3031LEDFunction=wEDS3031LEDFunction, owEDS0085Entry=owEDS0085Entry, wDeviceIndex=wDeviceIndex, wEDS1101DevicesConnected=wEDS1101DevicesConnected, owEDS0082Input1=owEDS0082Input1, owEDS0066Entry=owEDS0066Entry, owDS2438Table=owDS2438Table, owEDS0070Entry=owEDS0070Entry, owEDS0090Input6=owEDS0090Input6, owEDS0090PulseCounterReset4=owEDS0090PulseCounterReset4, wDeviceInfo=wDeviceInfo, wEDS3030PulseCounter1=wEDS3030PulseCounter1, wEDS3030Temperature=wEDS3030Temperature, wEDS3031LEDSetState=wEDS3031LEDSetState, owEDS0050ActivityLatchReset1=owEDS0050ActivityLatchReset1, edsProducts=edsProducts, owEDS0082Counter=owEDS0082Counter, wEDS1064Table=wEDS1064Table, owDS18S20UserByte1=owDS18S20UserByte1, owEDS0001ErrorsChannel2=owEDS0001ErrorsChannel2, owEDS0090ActivityLatchReset2=owEDS0090ActivityLatchReset2, owEDS0092Output1=owEDS0092Output1, wEDS1068LEDSetState=wEDS1068LEDSetState, owEDS0068Entry=owEDS0068Entry, owEDS0091PulseCounter4=owEDS0091PulseCounter4, owDS2408Entry=owDS2408Entry, owEDS0070Table=owEDS0070Table, owDS18S20Entry=owDS18S20Entry, owEDS0090ActivityLatchReset4=owEDS0090ActivityLatchReset4, owDS2438current=owDS2438current, owEDS0069Table=owEDS0069Table, owDS28EA00PIOBFlipFlop=owDS28EA00PIOBFlipFlop, owEDS0066Counter=owEDS0066Counter, owDS2450Entry=owDS2450Entry, owDeviceTable=owDeviceTable, wEDS1067Entry=wEDS1067Entry, wEDS1066BarometricPressure=wEDS1066BarometricPressure, owEDS0090Output2=owEDS0090Output2, owEDS0083Table=owEDS0083Table, owEDS0090Output5=owEDS0090Output5, owEDS0090PulseCounterReset7=owEDS0090PulseCounterReset7, owEDS0091Input3=owEDS0091Input3, owEDS0091ActivityLatch1=owEDS0091ActivityLatch1, owEDS0001LoopTime=owEDS0001LoopTime, owEDS0092=owEDS0092, owEDS0080Table=owEDS0080Table, owDeviceROM=owDeviceROM, owDS2450ChannelCConversionValue=owDS2450ChannelCConversionValue, wEDS3032PulseCounter1=wEDS3032PulseCounter1, owEDS0080Input5=owEDS0080Input5, dTrapEntry=dTrapEntry, wEDS1067Temperature=wEDS1067Temperature, owEDS0050ActivityLatch1=owEDS0050ActivityLatch1, owEDS0001ErrorsChannel1=owEDS0001ErrorsChannel1, wEDS2101SendCounter=wEDS2101SendCounter, wEDS3031Temperature=wEDS3031Temperature, owEDS0092Table=owEDS0092Table, owEDS0001Table=owEDS0001Table, wEDS1068RelayFunction=wEDS1068RelayFunction, owDeviceNumActive=owDeviceNumActive, wEDS1068LEDState=wEDS1068LEDState, owDS2450ChannelAConversionRange=owDS2450ChannelAConversionRange, wEDS3031PulseCounter1=wEDS3031PulseCounter1, owEDS0091ActivityLatchReset3=owEDS0091ActivityLatchReset3, owDS18S20=owDS18S20, wEDS1065Humidex=wEDS1065Humidex, owNone=owNone, dTrapDeviceVariable=dTrapDeviceVariable, owEDS0090PullDown3=owEDS0090PullDown3, owDS2450ChannelAConversionResolution=owDS2450ChannelAConversionResolution, owEDS0092Output4=owEDS0092Output4, wEDS1065ActivityLatch1=wEDS1065ActivityLatch1, owEDS0083Input3=owEDS0083Input3, dTrapDeviceHysteresis=dTrapDeviceHysteresis, owEDS0001InputVoltage=owEDS0001InputVoltage, owEDS0001VoltageChannel3=owEDS0001VoltageChannel3, owDS2406PIOAFlipFlop=owDS2406PIOAFlipFlop, owEDS0066BarometricPressureMb=owEDS0066BarometricPressureMb, owEDS0001PollCount=owEDS0001PollCount, owEDS0090PulseCounter8=owEDS0090PulseCounter8, wEDS1065Temperature=wEDS1065Temperature, owEDS0085Input1=owEDS0085Input1, owEDS0050Input1=owEDS0050Input1, wEDS1065Battery=wEDS1065Battery, owDS2408=owDS2408, owEDS0068Counter=owEDS0068Counter, wDeviceFamily=wDeviceFamily, wEDS1068RelayState=wEDS1068RelayState, eMIBVersion=eMIBVersion, owDS2450ChannelBConversionResolution=owDS2450ChannelBConversionResolution, wEDS3032Battery=wEDS3032Battery, owEDS0068Temperature=owEDS0068Temperature, owDS2450=owDS2450, dTrapDeviceEnable=dTrapDeviceEnable, wEDS1065RelayState=wEDS1065RelayState, wEDS1066Entry=wEDS1066Entry, wDeviceEntry=wDeviceEntry, wEDS3030LEDFunction=wEDS3030LEDFunction, owEDS0090Output8=owEDS0090Output8, wEDS3032LEDSetState=wEDS3032LEDSetState, owEDS0050ActivityLatch2=owEDS0050ActivityLatch2, owEDS0091Table=owEDS0091Table, dTrapDeviceLowThreshold=dTrapDeviceLowThreshold, owEDS0070=owEDS0070, owEDS0080Input6=owEDS0080Input6, owEDS0001DevicesConnectedChannel1=owEDS0001DevicesConnectedChannel1, wEDS1064ReadCounter=wEDS1064ReadCounter, owDS2406=owDS2406, owEDS0065HeatIndex=owEDS0065HeatIndex, owEDS0080Counter=owEDS0080Counter, wEDS1067=wEDS1067, wEDS3030ActivityLatch1=wEDS3030ActivityLatch1, owEDS0090ActivityLatch8=owEDS0090ActivityLatch8, owEDS0068=owEDS0068, owEDS0090Table=owEDS0090Table, owEDS0066BarometricPressureHg=owEDS0066BarometricPressureHg, owEDS0090PullDown6=owEDS0090PullDown6, owEDS0090PullDown8=owEDS0090PullDown8, wDeviceHealth=wDeviceHealth, wEDS1065Humidity=wEDS1065Humidity, owEDS0050=owEDS0050, owEDS0080Input3=owEDS0080Input3, owEDS0082Entry=owEDS0082Entry, owEDS0091ActivityLatchReset1=owEDS0091ActivityLatchReset1, owEDS0082Input4=owEDS0082Input4, wEDS3031ReadCounter=wEDS3031ReadCounter, wEDS3031Entry=wEDS3031Entry, wEDS1065LEDSetState=wEDS1065LEDSetState, owEDS0091PulseCounterReset3=owEDS0091PulseCounterReset3, owDS2450Table=owDS2450Table, owEDS0065DewPoint=owEDS0065DewPoint, owEDS0090PullDown7=owEDS0090PullDown7, edsEnterprise=edsEnterprise, wEDS3032=wEDS3032, wEDS3032Input1=wEDS3032Input1, owDS2406Entry=owDS2406Entry, owEDS0090PulseCounter2=owEDS0090PulseCounter2, owEDS0001ErrorsChannel3=owEDS0001ErrorsChannel3, owDS2408VCCPowerStatus=owDS2408VCCPowerStatus, owEDS0069Counter=owEDS0069Counter, owEDS0080Input2=owEDS0080Input2, owEDS0085Input2=owEDS0085Input2, owEDS0090ActivityLatch6=owEDS0090ActivityLatch6, owDS18B20Resolution=owDS18B20Resolution, owEDS0091ActivityLatch4=owEDS0091ActivityLatch4, wEDS1066PulseCounter1=wEDS1066PulseCounter1, dTrapDeviceEntry=dTrapDeviceEntry, owDS2450ChannelAOutputEnable=owDS2450ChannelAOutputEnable, wEDS1064RelaySetState=wEDS1064RelaySetState)
mibBuilder.exportSymbols("EDS-MIB", wEDS1064Input1=wEDS1064Input1, owEDS0001VoltageChannel1=owEDS0001VoltageChannel1, wEDS1067ActivityLatch1=wEDS1067ActivityLatch1, wEDS2101DevicesConnected=wEDS2101DevicesConnected, owEDS0091=owEDS0091, owDeviceType=owDeviceType, wEDS3030Probe=wEDS3030Probe, owDeviceFamily=owDeviceFamily, owDS18B20=owDS18B20, owEDS0050Entry=owEDS0050Entry)
