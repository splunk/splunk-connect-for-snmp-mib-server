#
# PySNMP MIB module Wellfleet-BOOTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-BOOTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Bits, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, Integer32, TimeTicks, NotificationType, Counter32, ObjectIdentity, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "Integer32", "TimeTicks", "NotificationType", "Counter32", "ObjectIdentity", "IpAddress", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfBootpGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfBootpGroup")
wfBootpClientGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 1))
wfBootpServerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 2))
wfBootpRelayAgentGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3))
wfBootpRelayIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1), )
if mibBuilder.loadTexts: wfBootpRelayIntfTable.setStatus('mandatory')
wfBootpRelayIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1), ).setIndexNames((0, "Wellfleet-BOOTP-MIB", "wfBootpRelayIntfAddress"))
if mibBuilder.loadTexts: wfBootpRelayIntfEntry.setStatus('mandatory')
wfBootpRelayIntfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfDelete.setStatus('mandatory')
wfBootpRelayIntfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfDisable.setStatus('mandatory')
wfBootpRelayIntfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("invalid", 4), ("notpres", 5))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfState.setStatus('mandatory')
wfBootpRelayIntfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfAddress.setStatus('mandatory')
wfBootpRelayIntfHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfHops.setStatus('mandatory')
wfBootpRelayIntfSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfSeconds.setStatus('mandatory')
wfBootpRelayIntfOpDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfOpDrops.setStatus('mandatory')
wfBootpRelayIntfRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfRequests.setStatus('mandatory')
wfBootpRelayIntfTranReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfTranReqs.setStatus('mandatory')
wfBootpRelayIntfHopsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfHopsDrops.setStatus('mandatory')
wfBootpRelayIntfBcastDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfBcastDrops.setStatus('mandatory')
wfBootpRelayIntfSecDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfSecDrops.setStatus('mandatory')
wfBootpRelayIntfReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfReplies.setStatus('mandatory')
wfBootpRelayIntfGiaddrDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfGiaddrDrops.setStatus('mandatory')
wfBootpRelayIntfResrcDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfResrcDrops.setStatus('mandatory')
wfBootpRelayIntfPassThroughMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bootp", 1), ("bootp-dhcp", 2), ("dhcp", 3))).clone('bootp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfPassThroughMode.setStatus('mandatory')
wfBootpRelayIntfUdpSktDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfUdpSktDrops.setStatus('mandatory')
wfBootpRelayIntfTooShortDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfTooShortDrops.setStatus('mandatory')
wfBootpRelayIntfFltrDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfFltrDrops.setStatus('mandatory')
wfBootpRelayIntfPri = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfPri.setStatus('mandatory')
wfBootpRelayIntfDhcpSvrDsbl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfDhcpSvrDsbl.setStatus('mandatory')
wfBootpRelayIntfDhcpSvDnDrps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfDhcpSvDnDrps.setStatus('mandatory')
wfBootpRelayIntfArpCache = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfArpCache.setStatus('mandatory')
wfBootpRelayIntfBufLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1000)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayIntfBufLimit.setStatus('mandatory')
wfBootpRelayIntfBufDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayIntfBufDrops.setStatus('mandatory')
wfBootpRelayFwdTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 2), )
if mibBuilder.loadTexts: wfBootpRelayFwdTable.setStatus('mandatory')
wfBootpRelayFwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 2, 1), ).setIndexNames((0, "Wellfleet-BOOTP-MIB", "wfBootpRelayFwdAgentIntf"), (0, "Wellfleet-BOOTP-MIB", "wfBootpRelayFwdOutIntf"))
if mibBuilder.loadTexts: wfBootpRelayFwdEntry.setStatus('mandatory')
wfBootpRelayFwdDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayFwdDelete.setStatus('mandatory')
wfBootpRelayFwdDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayFwdDisable.setStatus('mandatory')
wfBootpRelayFwdAgentIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayFwdAgentIntf.setStatus('mandatory')
wfBootpRelayFwdOutIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayFwdOutIntf.setStatus('mandatory')
wfBootpRelayFwdPassThroughMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bootp", 1), ("bootp-dhcp", 2), ("dhcp", 3))).clone('bootp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayFwdPassThroughMode.setStatus('mandatory')
wfBootpRelayFwdOutReqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayFwdOutReqPkts.setStatus('mandatory')
wfBootpClientIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 1, 1), )
if mibBuilder.loadTexts: wfBootpClientIntfTable.setStatus('mandatory')
wfBootpClientIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 1, 1, 1), ).setIndexNames((0, "Wellfleet-BOOTP-MIB", "wfBootpClientIntfAddress"), (0, "Wellfleet-BOOTP-MIB", "wfBootpClientIntfDlci"))
if mibBuilder.loadTexts: wfBootpClientIntfEntry.setStatus('mandatory')
wfBootpClientIntfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpClientIntfDelete.setStatus('mandatory')
wfBootpClientIntfDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpClientIntfDlci.setStatus('mandatory')
wfBootpClientIntfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpClientIntfAddress.setStatus('mandatory')
wfBootpRelayPrefServTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3), )
if mibBuilder.loadTexts: wfBootpRelayPrefServTable.setStatus('mandatory')
wfBootpRelayPrefServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3, 1), ).setIndexNames((0, "Wellfleet-BOOTP-MIB", "wfBootpRelayPrefServAgentAddress"), (0, "Wellfleet-BOOTP-MIB", "wfBootpRelayPrefServTargetAddress"))
if mibBuilder.loadTexts: wfBootpRelayPrefServEntry.setStatus('mandatory')
wfBootpRelayPrefServDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayPrefServDelete.setStatus('mandatory')
wfBootpRelayPrefServDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayPrefServDisable.setStatus('mandatory')
wfBootpRelayPrefServAgentAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayPrefServAgentAddress.setStatus('mandatory')
wfBootpRelayPrefServTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayPrefServTargetAddress.setStatus('mandatory')
wfBootpRelayPrefServTargetName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayPrefServTargetName.setStatus('mandatory')
wfBootpRelayPrefServRequestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bootp", 1), ("bootp-dhcp", 2), ("dhcp", 3))).clone('bootp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBootpRelayPrefServRequestMode.setStatus('mandatory')
wfBootpRelayPrefServOutReqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8, 3, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBootpRelayPrefServOutReqPkts.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-BOOTP-MIB", wfBootpRelayIntfDhcpSvrDsbl=wfBootpRelayIntfDhcpSvrDsbl, wfBootpRelayPrefServAgentAddress=wfBootpRelayPrefServAgentAddress, wfBootpRelayIntfHops=wfBootpRelayIntfHops, wfBootpRelayIntfRequests=wfBootpRelayIntfRequests, wfBootpRelayFwdTable=wfBootpRelayFwdTable, wfBootpRelayPrefServOutReqPkts=wfBootpRelayPrefServOutReqPkts, wfBootpRelayPrefServDelete=wfBootpRelayPrefServDelete, wfBootpRelayIntfDisable=wfBootpRelayIntfDisable, wfBootpRelayIntfBufLimit=wfBootpRelayIntfBufLimit, wfBootpRelayIntfHopsDrops=wfBootpRelayIntfHopsDrops, wfBootpClientIntfTable=wfBootpClientIntfTable, wfBootpRelayIntfEntry=wfBootpRelayIntfEntry, wfBootpClientIntfDelete=wfBootpClientIntfDelete, wfBootpRelayIntfAddress=wfBootpRelayIntfAddress, wfBootpClientIntfEntry=wfBootpClientIntfEntry, wfBootpRelayPrefServDisable=wfBootpRelayPrefServDisable, wfBootpRelayIntfReplies=wfBootpRelayIntfReplies, wfBootpRelayIntfBcastDrops=wfBootpRelayIntfBcastDrops, wfBootpRelayFwdOutIntf=wfBootpRelayFwdOutIntf, wfBootpClientIntfAddress=wfBootpClientIntfAddress, wfBootpRelayIntfGiaddrDrops=wfBootpRelayIntfGiaddrDrops, wfBootpRelayIntfArpCache=wfBootpRelayIntfArpCache, wfBootpRelayIntfDelete=wfBootpRelayIntfDelete, wfBootpRelayIntfTranReqs=wfBootpRelayIntfTranReqs, wfBootpRelayFwdPassThroughMode=wfBootpRelayFwdPassThroughMode, wfBootpRelayPrefServTargetName=wfBootpRelayPrefServTargetName, wfBootpRelayIntfSeconds=wfBootpRelayIntfSeconds, wfBootpRelayIntfFltrDrops=wfBootpRelayIntfFltrDrops, wfBootpRelayIntfPassThroughMode=wfBootpRelayIntfPassThroughMode, wfBootpRelayIntfTable=wfBootpRelayIntfTable, wfBootpRelayPrefServEntry=wfBootpRelayPrefServEntry, wfBootpRelayFwdAgentIntf=wfBootpRelayFwdAgentIntf, wfBootpRelayFwdDisable=wfBootpRelayFwdDisable, wfBootpRelayPrefServRequestMode=wfBootpRelayPrefServRequestMode, wfBootpClientGroup=wfBootpClientGroup, wfBootpRelayIntfPri=wfBootpRelayIntfPri, wfBootpRelayFwdEntry=wfBootpRelayFwdEntry, wfBootpRelayIntfState=wfBootpRelayIntfState, wfBootpRelayIntfSecDrops=wfBootpRelayIntfSecDrops, wfBootpClientIntfDlci=wfBootpClientIntfDlci, wfBootpRelayAgentGroup=wfBootpRelayAgentGroup, wfBootpRelayIntfTooShortDrops=wfBootpRelayIntfTooShortDrops, wfBootpRelayFwdDelete=wfBootpRelayFwdDelete, wfBootpRelayIntfOpDrops=wfBootpRelayIntfOpDrops, wfBootpRelayFwdOutReqPkts=wfBootpRelayFwdOutReqPkts, wfBootpRelayIntfUdpSktDrops=wfBootpRelayIntfUdpSktDrops, wfBootpRelayIntfDhcpSvDnDrps=wfBootpRelayIntfDhcpSvDnDrps, wfBootpRelayPrefServTable=wfBootpRelayPrefServTable, wfBootpRelayPrefServTargetAddress=wfBootpRelayPrefServTargetAddress, wfBootpServerGroup=wfBootpServerGroup, wfBootpRelayIntfResrcDrops=wfBootpRelayIntfResrcDrops, wfBootpRelayIntfBufDrops=wfBootpRelayIntfBufDrops)
