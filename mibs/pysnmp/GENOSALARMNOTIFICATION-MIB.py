#
# PySNMP MIB module GENOSALARMNOTIFICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GENOSALARMNOTIFICATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:06:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Integer32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, ModuleIdentity, TimeTicks, Counter64, Counter32, Gauge32, IpAddress, iso, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "Counter64", "Counter32", "Gauge32", "IpAddress", "iso", "Unsigned32", "NotificationType")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
alcatel = MibIdentifier((1, 3, 6, 1, 4, 1, 637))
nmu = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65))
genos = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1))
alarmHandoff = ModuleIdentity((1, 3, 6, 1, 4, 1, 637, 65, 1, 1))
if mibBuilder.loadTexts: alarmHandoff.setLastUpdated('9807030000Z')
if mibBuilder.loadTexts: alarmHandoff.setOrganization('Alcatel GENOS Development')
alarmHandoffObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1))
unsolicitedEventsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unsolicitedEventsEnabled.setStatus('current')
alarmTable = MibTable((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2), )
if mibBuilder.loadTexts: alarmTable.setStatus('current')
alarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1), ).setIndexNames((0, "GENOSALARMNOTIFICATION-MIB", "currentAlarmId"))
if mibBuilder.loadTexts: alarmEntry.setStatus('current')
class AlarmId(Counter32):
    subtypeSpec = Counter32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

currentAlarmId = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 1), AlarmId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmId.setStatus('current')
friendlyName = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: friendlyName.setStatus('current')
eventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventTime.setStatus('current')
eventType = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventType.setStatus('current')
probableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: probableCause.setStatus('current')
perceivedSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: perceivedSeverity.setStatus('current')
additionalText = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: additionalText.setStatus('current')
specificProblems = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: specificProblems.setStatus('current')
acknowledgementStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acknowledgementStatus.setStatus('current')
reserveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reserveStatus.setStatus('current')
additionalInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: additionalInformation.setStatus('current')
neLocationName = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neLocationName.setStatus('current')
managedobjectInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: managedobjectInstance.setStatus('current')
acknowledgementUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acknowledgementUserName.setStatus('current')
asIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 1, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asIdentity.setStatus('current')
alarmHandoffTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2))
alarmRaise = NotificationType((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2, 1)).setObjects(("GENOSALARMNOTIFICATION-MIB", "currentAlarmId"), ("GENOSALARMNOTIFICATION-MIB", "friendlyName"), ("GENOSALARMNOTIFICATION-MIB", "eventTime"), ("GENOSALARMNOTIFICATION-MIB", "eventType"), ("GENOSALARMNOTIFICATION-MIB", "probableCause"), ("GENOSALARMNOTIFICATION-MIB", "perceivedSeverity"), ("GENOSALARMNOTIFICATION-MIB", "additionalText"), ("GENOSALARMNOTIFICATION-MIB", "specificProblems"), ("GENOSALARMNOTIFICATION-MIB", "acknowledgementStatus"), ("GENOSALARMNOTIFICATION-MIB", "reserveStatus"), ("GENOSALARMNOTIFICATION-MIB", "additionalInformation"), ("GENOSALARMNOTIFICATION-MIB", "neLocationName"), ("GENOSALARMNOTIFICATION-MIB", "managedobjectInstance"), ("GENOSALARMNOTIFICATION-MIB", "acknowledgementUserName"), ("GENOSALARMNOTIFICATION-MIB", "asIdentity"))
if mibBuilder.loadTexts: alarmRaise.setStatus('current')
alarmClear = NotificationType((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2, 2)).setObjects(("GENOSALARMNOTIFICATION-MIB", "currentAlarmId"), ("GENOSALARMNOTIFICATION-MIB", "eventTime"), ("GENOSALARMNOTIFICATION-MIB", "friendlyName"), ("GENOSALARMNOTIFICATION-MIB", "probableCause"), ("GENOSALARMNOTIFICATION-MIB", "asIdentity"))
if mibBuilder.loadTexts: alarmClear.setStatus('current')
alarmAck = NotificationType((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2, 3)).setObjects(("GENOSALARMNOTIFICATION-MIB", "listAlarmIds"), ("GENOSALARMNOTIFICATION-MIB", "operatorName"), ("GENOSALARMNOTIFICATION-MIB", "asIdentity"))
if mibBuilder.loadTexts: alarmAck.setStatus('current')
alarmPurge = NotificationType((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2, 4)).setObjects(("GENOSALARMNOTIFICATION-MIB", "purgelistAlarmIds"), ("GENOSALARMNOTIFICATION-MIB", "asIdentity"))
if mibBuilder.loadTexts: alarmPurge.setStatus('current')
alarmReserve = NotificationType((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2, 5)).setObjects(("GENOSALARMNOTIFICATION-MIB", "reservelistAlarmIds"), ("GENOSALARMNOTIFICATION-MIB", "reserveoperatorName"), ("GENOSALARMNOTIFICATION-MIB", "asIdentity"))
if mibBuilder.loadTexts: alarmReserve.setStatus('current')
alarmUnreserve = NotificationType((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2, 6)).setObjects(("GENOSALARMNOTIFICATION-MIB", "unreservelistAlarmIds"), ("GENOSALARMNOTIFICATION-MIB", "unreserveoperatorName"), ("GENOSALARMNOTIFICATION-MIB", "asIdentity"))
if mibBuilder.loadTexts: alarmUnreserve.setStatus('current')
asConnectionStatus = NotificationType((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2, 7)).setObjects(("GENOSALARMNOTIFICATION-MIB", "asconnectionstatus"), ("GENOSALARMNOTIFICATION-MIB", "asId"))
if mibBuilder.loadTexts: asConnectionStatus.setStatus('current')
alarmUnAck = NotificationType((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 2, 8)).setObjects(("GENOSALARMNOTIFICATION-MIB", "unacklistAlarmIds"), ("GENOSALARMNOTIFICATION-MIB", "unackoperatorName"), ("GENOSALARMNOTIFICATION-MIB", "asIdentity"))
if mibBuilder.loadTexts: alarmUnAck.setStatus('current')
alarmHandoffAck = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 3))
listAlarmIds = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: listAlarmIds.setStatus('current')
operatorName = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: operatorName.setStatus('current')
ackasIdentityFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ackasIdentityFilter.setStatus('current')
alarmHandoffFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4))
friendlyNameFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: friendlyNameFilter.setStatus('current')
eventTimeFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventTimeFilter.setStatus('current')
eventTypeFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventTypeFilter.setStatus('current')
probableCauseFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probableCauseFilter.setStatus('current')
perceivedSeverityFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: perceivedSeverityFilter.setStatus('current')
specificProblemsFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: specificProblemsFilter.setStatus('current')
nelocationNameFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nelocationNameFilter.setStatus('current')
additionalInformationFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: additionalInformationFilter.setStatus('current')
managedobjectInstanceFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: managedobjectInstanceFilter.setStatus('current')
asIdentityFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 4, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: asIdentityFilter.setStatus('current')
alarmHandoffPurge = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 5))
purgelistAlarmIds = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: purgelistAlarmIds.setStatus('current')
purgeoperatorName = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: purgeoperatorName.setStatus('current')
purgeasIdentityFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 5, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: purgeasIdentityFilter.setStatus('current')
alarmHandoffReserve = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 6))
reservelistAlarmIds = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reservelistAlarmIds.setStatus('current')
reserveoperatorName = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reserveoperatorName.setStatus('current')
reserveasIdentityFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 6, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reserveasIdentityFilter.setStatus('current')
alarmHandoffUnreserve = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 7))
unreservelistAlarmIds = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unreservelistAlarmIds.setStatus('current')
unreserveoperatorName = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 7, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unreserveoperatorName.setStatus('current')
unreserveasIdentityFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 7, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unreserveasIdentityFilter.setStatus('current')
alarmHandoffasConnectionStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 8))
asconnectionstatus = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 8, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asconnectionstatus.setStatus('current')
asId = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 8, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asId.setStatus('current')
alarmHandoffUnAck = MibIdentifier((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 9))
unacklistAlarmIds = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 9, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unacklistAlarmIds.setStatus('current')
unackoperatorName = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 9, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unackoperatorName.setStatus('current')
unackasIdentityFilter = MibScalar((1, 3, 6, 1, 4, 1, 637, 65, 1, 1, 9, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unackasIdentityFilter.setStatus('current')
mibBuilder.exportSymbols("GENOSALARMNOTIFICATION-MIB", perceivedSeverityFilter=perceivedSeverityFilter, alarmEntry=alarmEntry, asIdentity=asIdentity, purgeoperatorName=purgeoperatorName, specificProblems=specificProblems, genos=genos, alarmHandoffObjects=alarmHandoffObjects, asIdentityFilter=asIdentityFilter, alarmHandoffasConnectionStatus=alarmHandoffasConnectionStatus, operatorName=operatorName, eventTypeFilter=eventTypeFilter, reserveasIdentityFilter=reserveasIdentityFilter, unreserveoperatorName=unreserveoperatorName, asconnectionstatus=asconnectionstatus, probableCause=probableCause, additionalText=additionalText, alarmTable=alarmTable, alarmHandoffPurge=alarmHandoffPurge, reservelistAlarmIds=reservelistAlarmIds, friendlyName=friendlyName, eventType=eventType, reserveStatus=reserveStatus, alarmHandoffFilter=alarmHandoffFilter, unsolicitedEventsEnabled=unsolicitedEventsEnabled, alarmHandoffReserve=alarmHandoffReserve, perceivedSeverity=perceivedSeverity, alarmHandoffAck=alarmHandoffAck, alarmUnAck=alarmUnAck, nelocationNameFilter=nelocationNameFilter, alarmPurge=alarmPurge, currentAlarmId=currentAlarmId, unreservelistAlarmIds=unreservelistAlarmIds, ackasIdentityFilter=ackasIdentityFilter, unackasIdentityFilter=unackasIdentityFilter, alarmHandoffTraps=alarmHandoffTraps, managedobjectInstanceFilter=managedobjectInstanceFilter, neLocationName=neLocationName, unacklistAlarmIds=unacklistAlarmIds, alarmClear=alarmClear, eventTimeFilter=eventTimeFilter, probableCauseFilter=probableCauseFilter, alarmHandoffUnreserve=alarmHandoffUnreserve, alarmAck=alarmAck, additionalInformationFilter=additionalInformationFilter, reserveoperatorName=reserveoperatorName, asId=asId, unackoperatorName=unackoperatorName, acknowledgementStatus=acknowledgementStatus, alcatel=alcatel, asConnectionStatus=asConnectionStatus, eventTime=eventTime, listAlarmIds=listAlarmIds, PYSNMP_MODULE_ID=alarmHandoff, purgelistAlarmIds=purgelistAlarmIds, unreserveasIdentityFilter=unreserveasIdentityFilter, acknowledgementUserName=acknowledgementUserName, specificProblemsFilter=specificProblemsFilter, nmu=nmu, purgeasIdentityFilter=purgeasIdentityFilter, AlarmId=AlarmId, alarmReserve=alarmReserve, alarmHandoffUnAck=alarmHandoffUnAck, alarmRaise=alarmRaise, alarmUnreserve=alarmUnreserve, managedobjectInstance=managedobjectInstance, friendlyNameFilter=friendlyNameFilter, alarmHandoff=alarmHandoff, additionalInformation=additionalInformation)
