#
# PySNMP MIB module WLSX-MESH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WLSX-MESH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ArubaMeshRole, ArubaPhyType, ArubaEncryptionMethods = mibBuilder.importSymbols("ARUBA-TC", "ArubaMeshRole", "ArubaPhyType", "ArubaEncryptionMethods")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
snmpModules, Bits, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, ObjectIdentity, NotificationType, TimeTicks, Counter64, MibIdentifier, iso, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "snmpModules", "Bits", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "ObjectIdentity", "NotificationType", "TimeTicks", "Counter64", "MibIdentifier", "iso", "IpAddress", "Gauge32")
RowStatus, TimeInterval, StorageType, DateAndTime, MacAddress, DisplayString, TAddress, TruthValue, TestAndIncr, TDomain, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TimeInterval", "StorageType", "DateAndTime", "MacAddress", "DisplayString", "TAddress", "TruthValue", "TestAndIncr", "TDomain", "TextualConvention", "PhysAddress")
wlanAPMacAddress, = mibBuilder.importSymbols("WLSX-WLAN-MIB", "wlanAPMacAddress")
wlsxMeshMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13))
wlsxMeshMIB.setRevisions(('1907-08-06 05:18',))
if mibBuilder.loadTexts: wlsxMeshMIB.setLastUpdated('0708060518Z')
if mibBuilder.loadTexts: wlsxMeshMIB.setOrganization('Aruba Wireless Networks')
wlsxMeshInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1))
wlsxMeshNodeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1))
wlsxMeshNodeTotal = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeTotal.setStatus('current')
wlsxMeshNodeTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2), )
if mibBuilder.loadTexts: wlsxMeshNodeTable.setStatus('current')
wlsxMeshNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanAPMacAddress"))
if mibBuilder.loadTexts: wlsxMeshNodeEntry.setStatus('current')
wlsxMeshRole = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 1), ArubaMeshRole()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlsxMeshRole.setStatus('current')
wlsxMeshNodeParent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeParent.setStatus('current')
wlsxMeshNodeChildrenCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeChildrenCount.setStatus('current')
wlsxMeshNodeCluster = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeCluster.setStatus('current')
wlsxMeshNodeRfBand = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 5), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeRfBand.setStatus('current')
wlsxMeshNodePathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodePathCost.setStatus('current')
wlsxMeshNodeNodeCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeNodeCost.setStatus('current')
wlsxMeshNodeLinkCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeLinkCost.setStatus('current')
wlsxMeshNodeHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNodeHopCount.setStatus('current')
wlsxMeshSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshSNR.setStatus('current')
wlsxMeshTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshTxRate.setStatus('current')
wlsxMeshRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshRxRate.setStatus('current')
wlsxMeshUplinkAge = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshUplinkAge.setStatus('current')
wlsxMeshNumRecoveryChildren = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshNumRecoveryChildren.setStatus('current')
wlsxMeshTopologyUpdateAge = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshTopologyUpdateAge.setStatus('current')
wlsxMeshIsRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshIsRecovery.setStatus('current')
wlsxMeshIs11n = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 13, 1, 1, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxMeshIs11n.setStatus('current')
mibBuilder.exportSymbols("WLSX-MESH-MIB", wlsxMeshUplinkAge=wlsxMeshUplinkAge, PYSNMP_MODULE_ID=wlsxMeshMIB, wlsxMeshTopologyUpdateAge=wlsxMeshTopologyUpdateAge, wlsxMeshNodeChildrenCount=wlsxMeshNodeChildrenCount, wlsxMeshNodeNodeCost=wlsxMeshNodeNodeCost, wlsxMeshNodeHopCount=wlsxMeshNodeHopCount, wlsxMeshInfoGroup=wlsxMeshInfoGroup, wlsxMeshNodeTable=wlsxMeshNodeTable, wlsxMeshNodePathCost=wlsxMeshNodePathCost, wlsxMeshMIB=wlsxMeshMIB, wlsxMeshTxRate=wlsxMeshTxRate, wlsxMeshNodeTotal=wlsxMeshNodeTotal, wlsxMeshRole=wlsxMeshRole, wlsxMeshIsRecovery=wlsxMeshIsRecovery, wlsxMeshNumRecoveryChildren=wlsxMeshNumRecoveryChildren, wlsxMeshRxRate=wlsxMeshRxRate, wlsxMeshNodeLinkCost=wlsxMeshNodeLinkCost, wlsxMeshNodeCluster=wlsxMeshNodeCluster, wlsxMeshNodeGroup=wlsxMeshNodeGroup, wlsxMeshNodeRfBand=wlsxMeshNodeRfBand, wlsxMeshNodeEntry=wlsxMeshNodeEntry, wlsxMeshNodeParent=wlsxMeshNodeParent, wlsxMeshIs11n=wlsxMeshIs11n, wlsxMeshSNR=wlsxMeshSNR)
