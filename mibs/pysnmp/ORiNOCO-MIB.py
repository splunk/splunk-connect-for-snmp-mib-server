#
# PySNMP MIB module ORiNOCO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ORiNOCO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:26:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, Bits, TimeTicks, Unsigned32, ModuleIdentity, enterprises, MibIdentifier, Counter32, Counter64, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "Bits", "TimeTicks", "Unsigned32", "ModuleIdentity", "enterprises", "MibIdentifier", "Counter32", "Counter64", "Gauge32", "iso")
DateAndTime, TruthValue, PhysAddress, TimeStamp, DisplayString, RowStatus, TimeInterval, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "PhysAddress", "TimeStamp", "DisplayString", "RowStatus", "TimeInterval", "MacAddress", "TextualConvention")
orinoco = ModuleIdentity((1, 3, 6, 1, 4, 1, 11898, 2))
if mibBuilder.loadTexts: orinoco.setLastUpdated('0408100000Z')
if mibBuilder.loadTexts: orinoco.setOrganization('Proxim Corporation')
class VlanId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-1, 4094)

class InterfaceBitmask(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class ObjStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enable", 1), ("disable", 2))

class WEPKeyType(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 32)

class ObjStatusActive(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("active", 1), ("inactive", 2), ("deleted", 3))

class DisplayString80(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 80)

class DisplayString55(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 55)

class DisplayString32(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 32)

agere = MibIdentifier((1, 3, 6, 1, 4, 1, 11898))
orinocoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1))
orinocoNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 2))
orinocoConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 3))
orinocoGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 3, 1))
orinocoCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 3, 2))
orinocoProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4))
ap1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 1))
rg1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 2))
as1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 3))
as2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 4))
ap500 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 5))
ap2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 6))
bg2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 7))
rg1100 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 8))
tmp11 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 9))
ap600 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 10))
ap2500 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 11))
ap4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 12))
ap700 = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 4, 13))
orinocoSys = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1))
orinocoIf = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2))
orinocoNet = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3))
orinocoSNMP = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4))
orinocoFiltering = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5))
orinocoRADIUS = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6))
orinocoTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7))
orinocoTFTP = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8))
orinocoSerial = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 9))
orinocoIAPP = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10))
orinocoLinkTest = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11))
orinocoLinkInt = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12))
orinocoUPSD = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 13))
orinocoQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14))
orinocoDHCP = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15))
orinocoHTTP = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16))
orinocoWDS = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17))
orinocoTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18))
orinocoIPARP = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 19))
orinocoSpanningTree = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 20))
orinocoSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21))
orinocoPPPoE = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22))
orinocoConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23))
orinocoDNS = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24))
orinocoAOL = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 25))
orinocoNAT = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26))
orinocoSpectraLink = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 29))
orinocoVLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 30))
orinocoDMZ = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 31))
orinocoOEM = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 32))
orinocoStationStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33))
orinocoSNTP = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34))
orinocoSysInvMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1))
orinocoSysFeature = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 19))
orinocoSyslog = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21))
orinocoTempLog = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 23))
orinocoWirelessIf = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1))
orinocoEthernetIf = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 2))
orinocoWORPIf = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5))
orinocoWORPIfSat = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3))
orinocoWORPIfSiteSurvey = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4))
orinocoWORPIfRoaming = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 5))
orinocoWORPIfDDRS = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6))
orinocoWORPIfBSU = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7))
orinocoWORPIfSatConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1))
orinocoWORPIfSatStat = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2))
orinocoWORPIfBSUStat = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7, 1))
orinocoNetIP = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1))
orinocoRADIUSAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1))
orinocoRADIUSAcct = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2))
orinocoRADIUSSvrProfiles = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10))
orinocoProtocolFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1))
orinocoAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2))
orinocoStaticMACAddressFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3))
orinocoStormThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 4))
orinocoPortFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5))
orinocoAdvancedFiltering = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 6))
orinocoPacketForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 7))
orinocoIBSSTraffic = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 8))
orinocoIntraCellBlocking = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9))
orinocoSecurityGw = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 10))
orinocoDHCPServer = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1))
orinocoDHCPClient = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 2))
orinocoDHCPRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 3))
orinocoDNSClient = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 5))
orinocoRAD = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4))
orinocoRogueScan = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8))
oriSystemReboot = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemReboot.setStatus('current')
oriSystemContactEmail = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemContactEmail.setStatus('current')
oriSystemContactPhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemContactPhoneNumber.setStatus('current')
oriSystemFlashUpdate = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemFlashUpdate.setStatus('current')
oriSystemFlashBackupInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemFlashBackupInterval.setStatus('current')
oriSystemEmergencyResetToDefault = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemEmergencyResetToDefault.setStatus('current')
oriSystemMode = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridge", 1), ("gateway", 2))).clone('bridge')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemMode.setStatus('current')
oriSystemEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 11), )
if mibBuilder.loadTexts: oriSystemEventLogTable.setStatus('current')
oriSystemEventLogTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 11, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriSystemEventLogMessage"))
if mibBuilder.loadTexts: oriSystemEventLogTableEntry.setStatus('current')
oriSystemEventLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 11, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemEventLogMessage.setStatus('current')
oriSystemEventLogTableReset = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemEventLogTableReset.setStatus('current')
oriSystemEventLogMask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemEventLogMask.setStatus('current')
oriSystemAccessUserName = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemAccessUserName.setStatus('current')
oriSystemAccessPassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemAccessPassword.setStatus('current')
oriSystemAccessLoginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemAccessLoginTimeout.setStatus('current')
oriSystemAccessIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 36000)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemAccessIdleTimeout.setStatus('current')
oriSystemEventLogNumberOfMessages = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemEventLogNumberOfMessages.setStatus('current')
oriSystemAccessMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemAccessMaxSessions.setStatus('current')
oriSystemCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSystemCountryCode.setStatus('current')
oriSystemHwType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("indoor", 1), ("outdoor", 2))).clone('indoor')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemHwType.setStatus('current')
oriSystemInvMgmtComponentTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1), )
if mibBuilder.loadTexts: oriSystemInvMgmtComponentTable.setStatus('current')
oriSystemInvMgmtComponentTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriSystemInvMgmtTableComponentIndex"))
if mibBuilder.loadTexts: oriSystemInvMgmtComponentTableEntry.setStatus('current')
oriSystemInvMgmtTableComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentIndex.setStatus('current')
oriSystemInvMgmtTableComponentSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentSerialNumber.setStatus('current')
oriSystemInvMgmtTableComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentName.setStatus('current')
oriSystemInvMgmtTableComponentId = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentId.setStatus('current')
oriSystemInvMgmtTableComponentVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentVariant.setStatus('current')
oriSystemInvMgmtTableComponentReleaseVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentReleaseVersion.setStatus('current')
oriSystemInvMgmtTableComponentMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentMajorVersion.setStatus('current')
oriSystemInvMgmtTableComponentMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentMinorVersion.setStatus('current')
oriSystemInvMgmtTableComponentIfTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 2), )
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentIfTable.setStatus('deprecated')
oriSystemInvMgmtTableComponentIfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriSystemInvMgmtTableComponentIndex"), (0, "ORiNOCO-MIB", "oriSystemInvMgmtInterfaceTableIndex"))
if mibBuilder.loadTexts: oriSystemInvMgmtTableComponentIfTableEntry.setStatus('deprecated')
oriSystemInvMgmtInterfaceTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtInterfaceTableIndex.setStatus('deprecated')
oriSystemInvMgmtInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtInterfaceId.setStatus('deprecated')
oriSystemInvMgmtInterfaceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("actor", 1), ("supplier", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtInterfaceRole.setStatus('deprecated')
oriSystemInvMgmtInterfaceVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtInterfaceVariant.setStatus('deprecated')
oriSystemInvMgmtInterfaceBottomNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtInterfaceBottomNumber.setStatus('deprecated')
oriSystemInvMgmtInterfaceTopNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemInvMgmtInterfaceTopNumber.setStatus('deprecated')
oriSystemFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 19, 1), )
if mibBuilder.loadTexts: oriSystemFeatureTable.setStatus('current')
oriSystemFeatureTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 19, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriSystemFeatureTableCode"))
if mibBuilder.loadTexts: oriSystemFeatureTableEntry.setStatus('current')
oriSystemFeatureTableCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 19, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))).clone(namedValues=NamedValues(("bandwidthWiFi", 1), ("bandwidthWDS", 2), ("bandwidthWORPUp", 3), ("bandwidthTurboCell", 4), ("bandwidthADSL", 5), ("bandwidthCable", 6), ("bandwidthPhone", 7), ("maxStationsWiFi", 8), ("maxLinksWDS", 9), ("maxStationsWORP", 10), ("maxStationsTurboCell", 11), ("maxPPPoESessions", 12), ("managementHTTP", 13), ("remoteLinkTest", 14), ("routingStatic", 15), ("routingRIP", 16), ("routingOSPF", 17), ("spanningTreeProtocol", 18), ("linkIntegrity", 19), ("dHCPServer", 20), ("dHCPRelayAgent", 21), ("proxyARP", 22), ("filteringStatic", 23), ("authRADIUS", 24), ("acctRADIUS", 25), ("throttlingRADIUS", 26), ("filterIP", 27), ("ieee802dot1x", 28), ("nse", 29), ("iAPP", 30), ("dNSRedirect", 31), ("aOLNATGateway", 32), ("hereUare", 33), ("spectralink", 34), ("vLANTagging", 35), ("satMaxUsers", 36), ("bandwidthWORPDown", 37), ("disableSecWifiIf", 38), ("initialProductType", 39)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemFeatureTableCode.setStatus('current')
oriSystemFeatureTableSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 19, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemFeatureTableSupported.setStatus('current')
oriSystemFeatureTableLicensed = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 19, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemFeatureTableLicensed.setStatus('current')
oriSystemFeatureTableDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 19, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSystemFeatureTableDescription.setStatus('current')
oriSyslogStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSyslogStatus.setStatus('current')
oriSyslogPort = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSyslogPort.setStatus('current')
oriSyslogPriority = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSyslogPriority.setStatus('current')
oriSyslogHeartbeatStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSyslogHeartbeatStatus.setStatus('current')
oriSyslogHeartbeatInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSyslogHeartbeatInterval.setStatus('current')
oriSyslogHostTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 6), )
if mibBuilder.loadTexts: oriSyslogHostTable.setStatus('current')
oriSyslogHostTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 6, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriSyslogHostTableIndex"))
if mibBuilder.loadTexts: oriSyslogHostTableEntry.setStatus('current')
oriSyslogHostTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSyslogHostTableIndex.setStatus('current')
oriSyslogHostIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSyslogHostIPAddress.setStatus('current')
oriSyslogHostComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 6, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSyslogHostComment.setStatus('current')
oriSyslogHostTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 21, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSyslogHostTableEntryStatus.setStatus('current')
oriUnitTemp = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 23, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-30, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriUnitTemp.setStatus('current')
oriTempLoggingInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 23, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTempLoggingInterval.setStatus('current')
oriTempLogTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 23, 3), )
if mibBuilder.loadTexts: oriTempLogTable.setStatus('current')
oriTempLogTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 23, 3, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriTempLogMessage"))
if mibBuilder.loadTexts: oriTempLogTableEntry.setStatus('current')
oriTempLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 23, 3, 1, 1), DisplayString55()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTempLogMessage.setStatus('current')
oriTempLogTableReset = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 1, 23, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTempLogTableReset.setStatus('current')
oriWirelessIfPropertiesTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1), )
if mibBuilder.loadTexts: oriWirelessIfPropertiesTable.setStatus('current')
oriWirelessIfPropertiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriWirelessIfPropertiesIndex"))
if mibBuilder.loadTexts: oriWirelessIfPropertiesEntry.setStatus('current')
oriWirelessIfPropertiesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfPropertiesIndex.setStatus('current')
oriWirelessIfNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('My Wireless Network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfNetworkName.setStatus('current')
oriWirelessIfMediumReservation = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2347)).clone(2347)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfMediumReservation.setStatus('current')
oriWirelessIfInterferenceRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfInterferenceRobustness.setStatus('current')
oriWirelessIfDTIMPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfDTIMPeriod.setStatus('current')
oriWirelessIfChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfChannel.setStatus('current')
oriWirelessIfDistancebetweenAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("large", 1), ("medium", 2), ("small", 3), ("minicell", 4), ("microcell", 5))).clone('large')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfDistancebetweenAPs.setStatus('current')
oriWirelessIfMulticastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfMulticastRate.setStatus('current')
oriWirelessIfClosedSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfClosedSystem.setStatus('current')
oriWirelessIfAllowedSupportedDataRates = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfAllowedSupportedDataRates.setStatus('current')
oriWirelessIfRegulatoryDomainList = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfRegulatoryDomainList.setStatus('current')
oriWirelessIfAllowedChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfAllowedChannels.setStatus('current')
oriWirelessIfMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 13), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfMACAddress.setStatus('deprecated')
oriWirelessIfLoadBalancing = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfLoadBalancing.setStatus('current')
oriWirelessIfMediumDensityDistribution = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfMediumDensityDistribution.setStatus('current')
oriWirelessIfTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfTxRate.setStatus('current')
oriWirelessIfAutoChannelSelectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfAutoChannelSelectStatus.setStatus('current')
oriWirelessIfBandwidthLimitIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 18), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfBandwidthLimitIn.setStatus('current')
oriWirelessIfBandwidthLimitOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 19), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfBandwidthLimitOut.setStatus('current')
oriWirelessIfTurboModeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 20), ObjStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfTurboModeStatus.setStatus('current')
oriWirelessIfSupportedOperationalModes = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfSupportedOperationalModes.setStatus('current')
oriWirelessIfOperationalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dot11b-only", 1), ("dot11g-only", 2), ("dot11bg", 3), ("dot11a-only", 4), ("dot11g-wifi", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfOperationalMode.setStatus('current')
oriWirelessIfPreambleType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfPreambleType.setStatus('current')
oriWirelessIfProtectionMechanismStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 24), ObjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfProtectionMechanismStatus.setStatus('current')
oriWirelessIfSupportedMulticastRates = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfSupportedMulticastRates.setStatus('current')
oriWirelessIfCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfCapabilities.setStatus('current')
oriWirelessIfLBTxTimeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfLBTxTimeThreshold.setStatus('current')
oriWirelessIfLBAdjAPTimeDiffThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfLBAdjAPTimeDiffThreshold.setStatus('current')
oriWirelessIfACSFrequencyBandScan = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfACSFrequencyBandScan.setStatus('current')
oriWirelessIfSecurityPerSSIDStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 30), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfSecurityPerSSIDStatus.setStatus('current')
oriWirelessIfDFSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 31), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfDFSStatus.setStatus('current')
oriWirelessIfAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("external", 1), ("internal", 2), ("controllable", 3), ("disabled", 4))).clone('external')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfAntenna.setStatus('deprecated')
oriWirelessIfTPCMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 3), ValueRangeConstraint(6, 6), ValueRangeConstraint(9, 9), ValueRangeConstraint(12, 12), ValueRangeConstraint(15, 15), ValueRangeConstraint(18, 18), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfTPCMode.setStatus('current')
oriWirelessIfSuperModeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 34), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfSuperModeStatus.setStatus('current')
oriWirelessIfWSSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfWSSStatus.setStatus('current')
oriWirelessIfSupportedAuthenticationModes = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfSupportedAuthenticationModes.setStatus('current')
oriWirelessIfSupportedCipherModes = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfSupportedCipherModes.setStatus('current')
oriWirelessIfQoSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 38), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfQoSStatus.setStatus('current')
oriWirelessIfQoSMaxMediumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 90))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfQoSMaxMediumThreshold.setStatus('current')
oriWirelessIfAntennaGain = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 35))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfAntennaGain.setStatus('current')
oriWirelessIfSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2), )
if mibBuilder.loadTexts: oriWirelessIfSecurityTable.setStatus('current')
oriWirelessIfSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriWirelessIfSecurityIndex"))
if mibBuilder.loadTexts: oriWirelessIfSecurityEntry.setStatus('current')
oriWirelessIfSecurityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfSecurityIndex.setStatus('current')
oriWirelessIfEncryptionOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("wep", 2), ("rcFour128", 3), ("aes", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfEncryptionOptions.setStatus('current')
oriWirelessIfEncryptionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfEncryptionStatus.setStatus('deprecated')
oriWirelessIfEncryptionKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfEncryptionKey1.setStatus('current')
oriWirelessIfEncryptionKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfEncryptionKey2.setStatus('current')
oriWirelessIfEncryptionKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfEncryptionKey3.setStatus('current')
oriWirelessIfEncryptionKey4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfEncryptionKey4.setStatus('current')
oriWirelessIfEncryptionTxKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfEncryptionTxKey.setStatus('current')
oriWirelessIfDenyNonEncryptedData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfDenyNonEncryptedData.setStatus('current')
oriWirelessIfProfileCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfProfileCode.setStatus('current')
oriWirelessIfSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3), )
if mibBuilder.loadTexts: oriWirelessIfSSIDTable.setStatus('current')
oriWirelessIfSSIDTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ORiNOCO-MIB", "oriWirelessIfSSIDTableIndex"))
if mibBuilder.loadTexts: oriWirelessIfSSIDTableEntry.setStatus('current')
oriWirelessIfSSIDTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableIndex.setStatus('current')
oriWirelessIfSSIDTableSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableSSID.setStatus('current')
oriWirelessIfSSIDTableVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 3), VlanId().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableVLANID.setStatus('current')
oriWirelessIfSSIDTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableStatus.setStatus('current')
oriWirelessIfSSIDTableSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("dot1x", 2), ("mixed", 3), ("wpa", 4), ("wpa-psk", 5), ("wep", 6))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableSecurityMode.setStatus('deprecated')
oriWirelessIfSSIDTableBroadcastSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 6), ObjStatus().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableBroadcastSSID.setStatus('current')
oriWirelessIfSSIDTableClosedSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 7), ObjStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableClosedSystem.setStatus('current')
oriWirelessIfSSIDTableSupportedSecurityModes = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableSupportedSecurityModes.setStatus('deprecated')
oriWirelessIfSSIDTableEncryptionKey0 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 9), WEPKeyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableEncryptionKey0.setStatus('deprecated')
oriWirelessIfSSIDTableEncryptionKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 10), WEPKeyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableEncryptionKey1.setStatus('deprecated')
oriWirelessIfSSIDTableEncryptionKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 11), WEPKeyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableEncryptionKey2.setStatus('deprecated')
oriWirelessIfSSIDTableEncryptionKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 12), WEPKeyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableEncryptionKey3.setStatus('deprecated')
oriWirelessIfSSIDTableEncryptionTxKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableEncryptionTxKey.setStatus('deprecated')
oriWirelessIfSSIDTableEncryptionKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sixtyFourBits", 1), ("oneHundredTwentyEightBits", 2), ("oneHundredFiftyTwoBits", 3))).clone('sixtyFourBits')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableEncryptionKeyLength.setStatus('deprecated')
oriWirelessIfSSIDTableRekeyingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(300, 65535), )).clone(900)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableRekeyingInterval.setStatus('current')
oriWirelessIfSSIDTablePSKValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTablePSKValue.setStatus('deprecated')
oriWirelessIfSSIDTablePSKPassPhrase = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 17), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTablePSKPassPhrase.setStatus('deprecated')
oriWirelessIfSSIDTableDenyNonEncryptedData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 18), ObjStatus().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableDenyNonEncryptedData.setStatus('deprecated')
oriWirelessIfSSIDTableSSIDAuthorizationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 19), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableSSIDAuthorizationStatus.setStatus('current')
oriWirelessIfSSIDTableMACAccessControl = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 20), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableMACAccessControl.setStatus('current')
oriWirelessIfSSIDTableRADIUSMACAccessControl = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 21), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableRADIUSMACAccessControl.setStatus('current')
oriWirelessIfSSIDTableSecurityProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 22), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableSecurityProfile.setStatus('current')
oriWirelessIfSSIDTableRADIUSDot1xProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 23), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableRADIUSDot1xProfile.setStatus('current')
oriWirelessIfSSIDTableRADIUSMACAuthProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 24), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableRADIUSMACAuthProfile.setStatus('current')
oriWirelessIfSSIDTableRADIUSAccountingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 25), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableRADIUSAccountingStatus.setStatus('current')
oriWirelessIfSSIDTableRADIUSAccountingProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 26), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableRADIUSAccountingProfile.setStatus('current')
oriWirelessIfSSIDTableQoSPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 3, 1, 27), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriWirelessIfSSIDTableQoSPolicy.setStatus('current')
oriWirelessIfTxPowerControl = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 1, 4), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfTxPowerControl.setStatus('current')
oriEthernetIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 2, 1), )
if mibBuilder.loadTexts: oriEthernetIfConfigTable.setStatus('current')
oriEthernetIfConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 2, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriEthernetIfConfigTableIndex"))
if mibBuilder.loadTexts: oriEthernetIfConfigTableEntry.setStatus('current')
oriEthernetIfConfigTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriEthernetIfConfigTableIndex.setStatus('current')
oriEthernetIfConfigSettings = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("tenMegabitPerSecHalfDuplex", 1), ("tenMegabitPerSecFullDuplex", 2), ("tenMegabitPerSecAutoDuplex", 3), ("onehundredMegabitPerSecHalfDuplex", 4), ("onehundredMegabitPerSecFullDuplex", 5), ("autoSpeedHalfDuplex", 6), ("autoSpeedAutoDuplex", 7), ("onehundredMegabitPerSecAutoDuplex", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriEthernetIfConfigSettings.setStatus('current')
oriEthernetIfConfigBandwidthLimitIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 2, 1, 1, 3), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriEthernetIfConfigBandwidthLimitIn.setStatus('current')
oriEthernetIfConfigBandwidthLimitOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 2, 1, 1, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriEthernetIfConfigBandwidthLimitOut.setStatus('current')
oriIfWANInterfaceMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 4), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIfWANInterfaceMACAddress.setStatus('current')
oriWORPIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1), )
if mibBuilder.loadTexts: oriWORPIfConfigTable.setStatus('current')
oriWORPIfConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oriWORPIfConfigTableEntry.setStatus('current')
oriWORPIfConfigTableMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("ap", 2), ("base", 3), ("satellite", 4))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfConfigTableMode.setStatus('current')
oriWORPIfConfigTableBaseStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfConfigTableBaseStationName.setStatus('current')
oriWORPIfConfigTableMaxSatellites = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfConfigTableMaxSatellites.setStatus('current')
oriWORPIfConfigTableRegistrationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfConfigTableRegistrationTimeout.setStatus('current')
oriWORPIfConfigTableRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfConfigTableRetries.setStatus('current')
oriWORPIfConfigTableNetworkSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfConfigTableNetworkSecret.setStatus('current')
oriWORPIfConfigTableNoSleepMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 1, 1, 7), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfConfigTableNoSleepMode.setStatus('current')
oriWORPIfStatTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2), )
if mibBuilder.loadTexts: oriWORPIfStatTable.setStatus('current')
oriWORPIfStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oriWORPIfStatTableEntry.setStatus('current')
oriWORPIfStatTableRemotePartners = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableRemotePartners.setStatus('current')
oriWORPIfStatTableAverageLocalSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableAverageLocalSignal.setStatus('current')
oriWORPIfStatTableAverageLocalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableAverageLocalNoise.setStatus('current')
oriWORPIfStatTableAverageRemoteSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableAverageRemoteSignal.setStatus('current')
oriWORPIfStatTableAverageRemoteNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableAverageRemoteNoise.setStatus('current')
oriWORPIfStatTableBaseStationAnnounces = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableBaseStationAnnounces.setStatus('current')
oriWORPIfStatTableRegistrationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableRegistrationRequests.setStatus('current')
oriWORPIfStatTableRegistrationRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableRegistrationRejects.setStatus('current')
oriWORPIfStatTableAuthenticationRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableAuthenticationRequests.setStatus('current')
oriWORPIfStatTableAuthenticationConfirms = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableAuthenticationConfirms.setStatus('current')
oriWORPIfStatTableRegistrationAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableRegistrationAttempts.setStatus('current')
oriWORPIfStatTableRegistrationIncompletes = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableRegistrationIncompletes.setStatus('current')
oriWORPIfStatTableRegistrationTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableRegistrationTimeouts.setStatus('current')
oriWORPIfStatTableRegistrationLastReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("noMoreAllowed", 2), ("incorrectParameter", 3), ("roaming", 4), ("timeout", 5), ("lowQuality", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableRegistrationLastReason.setStatus('current')
oriWORPIfStatTablePollData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTablePollData.setStatus('current')
oriWORPIfStatTablePollNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTablePollNoData.setStatus('current')
oriWORPIfStatTableReplyData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableReplyData.setStatus('current')
oriWORPIfStatTableReplyMoreData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableReplyMoreData.setStatus('current')
oriWORPIfStatTableReplyNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableReplyNoData.setStatus('current')
oriWORPIfStatTableRequestForService = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableRequestForService.setStatus('current')
oriWORPIfStatTableSendSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableSendSuccess.setStatus('current')
oriWORPIfStatTableSendRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableSendRetries.setStatus('current')
oriWORPIfStatTableSendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableSendFailures.setStatus('current')
oriWORPIfStatTableReceiveSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableReceiveSuccess.setStatus('current')
oriWORPIfStatTableReceiveRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableReceiveRetries.setStatus('current')
oriWORPIfStatTableReceiveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTableReceiveFailures.setStatus('current')
oriWORPIfStatTablePollNoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfStatTablePollNoReplies.setStatus('current')
oriWORPIfSatConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSatConfigStatus.setStatus('current')
oriWORPIfSatConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2), )
if mibBuilder.loadTexts: oriWORPIfSatConfigTable.setStatus('current')
oriWORPIfSatConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriWORPIfSatConfigTableIndex"))
if mibBuilder.loadTexts: oriWORPIfSatConfigTableEntry.setStatus('current')
oriWORPIfSatConfigTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatConfigTableIndex.setStatus('current')
oriWORPIfSatConfigTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSatConfigTableEntryStatus.setStatus('current')
oriWORPIfSatConfigTableMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSatConfigTableMacAddress.setStatus('current')
oriWORPIfSatConfigTableMinimumBandwidthLimitDownlink = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSatConfigTableMinimumBandwidthLimitDownlink.setStatus('current')
oriWORPIfSatConfigTableMaximumBandwidthLimitDownlink = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSatConfigTableMaximumBandwidthLimitDownlink.setStatus('current')
oriWORPIfSatConfigTableMinimumBandwidthLimitUplink = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1, 6), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSatConfigTableMinimumBandwidthLimitUplink.setStatus('current')
oriWORPIfSatConfigTableMaximumBandwidthLimitUplink = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1, 7), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSatConfigTableMaximumBandwidthLimitUplink.setStatus('current')
oriWORPIfSatConfigTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 1, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSatConfigTableComment.setStatus('current')
oriWORPIfSatStatTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1), )
if mibBuilder.loadTexts: oriWORPIfSatStatTable.setStatus('current')
oriWORPIfSatStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriStationStatTableIndex"))
if mibBuilder.loadTexts: oriWORPIfSatStatTableEntry.setStatus('current')
oriWORPIfSatStatTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableIndex.setStatus('current')
oriWORPIfSatStatTableMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableMacAddress.setStatus('current')
oriWORPIfSatStatTableAverageLocalSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableAverageLocalSignal.setStatus('current')
oriWORPIfSatStatTableAverageLocalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableAverageLocalNoise.setStatus('current')
oriWORPIfSatStatTableAverageRemoteSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableAverageRemoteSignal.setStatus('current')
oriWORPIfSatStatTableAverageRemoteNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableAverageRemoteNoise.setStatus('current')
oriWORPIfSatStatTablePollData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTablePollData.setStatus('current')
oriWORPIfSatStatTablePollNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTablePollNoData.setStatus('current')
oriWORPIfSatStatTableReplyData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableReplyData.setStatus('current')
oriWORPIfSatStatTableReplyNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableReplyNoData.setStatus('current')
oriWORPIfSatStatTableRequestForService = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableRequestForService.setStatus('current')
oriWORPIfSatStatTableSendSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableSendSuccess.setStatus('current')
oriWORPIfSatStatTableSendRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableSendRetries.setStatus('current')
oriWORPIfSatStatTableSendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableSendFailures.setStatus('current')
oriWORPIfSatStatTableReceiveSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableReceiveSuccess.setStatus('current')
oriWORPIfSatStatTableReceiveRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableReceiveRetries.setStatus('current')
oriWORPIfSatStatTableReceiveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableReceiveFailures.setStatus('current')
oriWORPIfSatStatTablePollNoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTablePollNoReplies.setStatus('current')
oriWORPIfSatStatTableLocalTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableLocalTxRate.setStatus('current')
oriWORPIfSatStatTableRemoteTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 3, 2, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSatStatTableRemoteTxRate.setStatus('current')
oriWORPIfSiteSurveyOperation = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("test", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyOperation.setStatus('current')
oriWORPIfSiteSurveyTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2), )
if mibBuilder.loadTexts: oriWORPIfSiteSurveyTable.setStatus('current')
oriWORPIfSiteSurveySignalQualityTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriWORPIfSiteSurveyTableIndex"))
if mibBuilder.loadTexts: oriWORPIfSiteSurveySignalQualityTableEntry.setStatus('current')
oriWORPIfSiteSurveyTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyTableIndex.setStatus('current')
oriWORPIfSiteSurveyBaseMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyBaseMACAddress.setStatus('current')
oriWORPIfSiteSurveyBaseName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyBaseName.setStatus('current')
oriWORPIfSiteSurveyMaxSatAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyMaxSatAllowed.setStatus('current')
oriWORPIfSiteSurveyNumSatRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyNumSatRegistered.setStatus('current')
oriWORPIfSiteSurveyCurrentSatRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyCurrentSatRegistered.setStatus('current')
oriWORPIfSiteSurveyLocalSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyLocalSignalLevel.setStatus('current')
oriWORPIfSiteSurveyLocalNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyLocalNoiseLevel.setStatus('current')
oriWORPIfSiteSurveyLocalSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyLocalSNR.setStatus('current')
oriWORPIfSiteSurveyRemoteSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyRemoteSignalLevel.setStatus('current')
oriWORPIfSiteSurveyRemoteNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyRemoteNoiseLevel.setStatus('current')
oriWORPIfSiteSurveyRemoteSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 4, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWORPIfSiteSurveyRemoteSNR.setStatus('current')
oriWORPIfDDRSStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 1), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSStatus.setStatus('current')
oriWORPIfDDRSDefDataRate = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 108))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSDefDataRate.setStatus('current')
oriWORPIfDDRSMaxDataRate = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 108)).clone(36)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMaxDataRate.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11an6Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11an6Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11an9Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11an9Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11an12Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11an12Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11an18Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(11)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11an18Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11an24Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(14)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11an24Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11an36Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11an36Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11an48Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11an48Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11an54Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11an54Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11at12Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11at12Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11at18Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11at18Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11at24Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11at24Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11at36Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(11)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11at36Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11at48Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(14)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11at48Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11at72Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11at72Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11at96Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11at96Mbps.setStatus('current')
oriWORPIfDDRSMinReqSNRdot11at108Mbps = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSMinReqSNRdot11at108Mbps.setStatus('current')
oriWORPIfDDRSDataRateIncAvgSNRThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSDataRateIncAvgSNRThreshold.setStatus('current')
oriWORPIfDDRSDataRateIncReqSNRThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSDataRateIncReqSNRThreshold.setStatus('current')
oriWORPIfDDRSDataRateDecReqSNRThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSDataRateDecReqSNRThreshold.setStatus('current')
oriWORPIfDDRSDataRateIncPercentThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSDataRateIncPercentThreshold.setStatus('current')
oriWORPIfDDRSDataRateDecPercentThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 6, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfDDRSDataRateDecPercentThreshold.setStatus('current')
oriWORPIfRoamingStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 5, 1), ObjStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfRoamingStatus.setStatus('current')
oriWORPIfRoamingSlowScanThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfRoamingSlowScanThreshold.setStatus('current')
oriWORPIfRoamingFastScanThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfRoamingFastScanThreshold.setStatus('current')
oriWORPIfRoamingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfRoamingThreshold.setStatus('current')
oriWORPIfRoamingSlowScanPercentThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfRoamingSlowScanPercentThreshold.setStatus('current')
oriWORPIfRoamingFastScanPercentThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPIfRoamingFastScanPercentThreshold.setStatus('current')
orinocoWORPIfBSUStatMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: orinocoWORPIfBSUStatMACAddress.setStatus('current')
orinocoWORPIfBSUStatLocalTxRate = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: orinocoWORPIfBSUStatLocalTxRate.setStatus('current')
orinocoWORPIfBSUStatRemoteTxRate = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: orinocoWORPIfBSUStatRemoteTxRate.setStatus('current')
orinocoWORPIfBSUStatAverageLocalSignal = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: orinocoWORPIfBSUStatAverageLocalSignal.setStatus('current')
orinocoWORPIfBSUStatAverageLocalNoise = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: orinocoWORPIfBSUStatAverageLocalNoise.setStatus('current')
orinocoWORPIfBSUStatAverageRemoteSignal = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: orinocoWORPIfBSUStatAverageRemoteSignal.setStatus('current')
orinocoWORPIfBSUStatAverageRemoteNoise = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 2, 5, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: orinocoWORPIfBSUStatAverageRemoteNoise.setStatus('current')
oriNetworkIPConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1, 1), )
if mibBuilder.loadTexts: oriNetworkIPConfigTable.setStatus('current')
oriNetworkIPConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriNetworkIPConfigTableIndex"))
if mibBuilder.loadTexts: oriNetworkIPConfigTableEntry.setStatus('current')
oriNetworkIPConfigTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriNetworkIPConfigTableIndex.setStatus('current')
oriNetworkIPConfigIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNetworkIPConfigIPAddress.setStatus('current')
oriNetworkIPConfigSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNetworkIPConfigSubnetMask.setStatus('current')
oriNetworkIPDefaultRouterIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNetworkIPDefaultRouterIPAddress.setStatus('current')
oriNetworkIPDefaultTTL = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNetworkIPDefaultTTL.setStatus('current')
oriNetworkIPAddressType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2))).clone('dynamic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNetworkIPAddressType.setStatus('current')
oriSNMPReadPassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 1), DisplayString().clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPReadPassword.setStatus('current')
oriSNMPReadWritePassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 2), DisplayString().clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPReadWritePassword.setStatus('current')
oriSNMPAuthorizedManagerCount = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSNMPAuthorizedManagerCount.setStatus('current')
oriSNMPAccessTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 4), )
if mibBuilder.loadTexts: oriSNMPAccessTable.setStatus('current')
oriSNMPAccessTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 4, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriSNMPAccessTableIndex"))
if mibBuilder.loadTexts: oriSNMPAccessTableEntry.setStatus('current')
oriSNMPAccessTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSNMPAccessTableIndex.setStatus('current')
oriSNMPAccessTableIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPAccessTableIPAddress.setStatus('current')
oriSNMPAccessTableIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPAccessTableIPMask.setStatus('current')
oriSNMPAccessTableInterfaceBitmask = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 4, 1, 4), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPAccessTableInterfaceBitmask.setStatus('current')
oriSNMPAccessTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPAccessTableComment.setStatus('current')
oriSNMPAccessTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPAccessTableEntryStatus.setStatus('current')
oriSNMPTrapHostTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 5), )
if mibBuilder.loadTexts: oriSNMPTrapHostTable.setStatus('current')
oriSNMPTrapHostTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 5, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriSNMPTrapHostTableIndex"))
if mibBuilder.loadTexts: oriSNMPTrapHostTableEntry.setStatus('current')
oriSNMPTrapHostTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSNMPTrapHostTableIndex.setStatus('current')
oriSNMPTrapHostTableIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPTrapHostTableIPAddress.setStatus('current')
oriSNMPTrapHostTablePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPTrapHostTablePassword.setStatus('current')
oriSNMPTrapHostTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPTrapHostTableComment.setStatus('current')
oriSNMPTrapHostTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPTrapHostTableEntryStatus.setStatus('current')
oriSNMPInterfaceBitmask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 7), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPInterfaceBitmask.setStatus('current')
oriSNMPErrorMessage = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSNMPErrorMessage.setStatus('current')
oriSNMPAccessTableStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPAccessTableStatus.setStatus('current')
oriSNMPTrapType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("snmp-v1", 1), ("snmp-v2c", 2))).clone('snmp-v1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPTrapType.setStatus('current')
oriSNMPSecureManagementStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPSecureManagementStatus.setStatus('current')
oriSNMPV3AuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 32)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPV3AuthPassword.setStatus('current')
oriSNMPV3PrivPassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 32)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNMPV3PrivPassword.setStatus('current')
oriProtocolFilterOperationType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passthru", 1), ("block", 2))).clone('block')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriProtocolFilterOperationType.setStatus('current')
oriProtocolFilterTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 2), )
if mibBuilder.loadTexts: oriProtocolFilterTable.setStatus('current')
oriProtocolFilterTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriProtocolFilterTableIndex"))
if mibBuilder.loadTexts: oriProtocolFilterTableEntry.setStatus('current')
oriProtocolFilterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriProtocolFilterTableIndex.setStatus('current')
oriProtocolFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriProtocolFilterProtocol.setStatus('current')
oriProtocolFilterProtocolComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriProtocolFilterProtocolComment.setStatus('current')
oriProtocolFilterTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriProtocolFilterTableEntryStatus.setStatus('current')
oriProtocolFilterTableInterfaceBitmask = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 2, 1, 5), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriProtocolFilterTableInterfaceBitmask.setStatus('current')
oriProtocolFilterProtocolString = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriProtocolFilterProtocolString.setStatus('current')
oriProtocolFilterInterfaceBitmask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 1, 3), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriProtocolFilterInterfaceBitmask.setStatus('current')
oriAccessControlStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriAccessControlStatus.setStatus('current')
oriAccessControlOperationType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passthru", 1), ("block", 2))).clone('passthru')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriAccessControlOperationType.setStatus('current')
oriAccessControlTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2, 3), )
if mibBuilder.loadTexts: oriAccessControlTable.setStatus('current')
oriAccessControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2, 3, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriAccessControlTableIndex"))
if mibBuilder.loadTexts: oriAccessControlEntry.setStatus('current')
oriAccessControlTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriAccessControlTableIndex.setStatus('current')
oriAccessControlTableMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2, 3, 1, 2), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriAccessControlTableMACAddress.setStatus('current')
oriAccessControlTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriAccessControlTableComment.setStatus('current')
oriAccessControlTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriAccessControlTableEntryStatus.setStatus('current')
oriStaticMACAddressFilterTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1), )
if mibBuilder.loadTexts: oriStaticMACAddressFilterTable.setStatus('current')
oriStaticMACAddressFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriStaticMACAddressFilterTableIndex"))
if mibBuilder.loadTexts: oriStaticMACAddressFilterEntry.setStatus('current')
oriStaticMACAddressFilterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStaticMACAddressFilterTableIndex.setStatus('current')
oriStaticMACAddressFilterWiredAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1, 1, 2), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStaticMACAddressFilterWiredAddress.setStatus('current')
oriStaticMACAddressFilterWiredMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1, 1, 3), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStaticMACAddressFilterWiredMask.setStatus('current')
oriStaticMACAddressFilterWirelessAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1, 1, 4), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStaticMACAddressFilterWirelessAddress.setStatus('current')
oriStaticMACAddressFilterWirelessMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1, 1, 5), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStaticMACAddressFilterWirelessMask.setStatus('current')
oriStaticMACAddressFilterTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStaticMACAddressFilterTableEntryStatus.setStatus('current')
oriStaticMACAddressFilterComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 3, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStaticMACAddressFilterComment.setStatus('current')
oriBroadcastAddressThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriBroadcastAddressThreshold.setStatus('current')
oriMulticastAddressThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriMulticastAddressThreshold.setStatus('current')
oriStormThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 4, 3), )
if mibBuilder.loadTexts: oriStormThresholdTable.setStatus('current')
oriStormThresholdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 4, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oriStormThresholdTableEntry.setStatus('current')
oriStormThresholdIfBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStormThresholdIfBroadcast.setStatus('current')
oriStormThresholdIfMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStormThresholdIfMulticast.setStatus('current')
oriPortFilterStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPortFilterStatus.setStatus('current')
oriPortFilterOperationType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passthru", 1), ("block", 2))).clone('passthru')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPortFilterOperationType.setStatus('current')
oriPortFilterTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 3), )
if mibBuilder.loadTexts: oriPortFilterTable.setStatus('current')
oriPortFilterTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 3, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriPortFilterTableEntryIndex"))
if mibBuilder.loadTexts: oriPortFilterTableEntry.setStatus('current')
oriPortFilterTableEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPortFilterTableEntryIndex.setStatus('current')
oriPortFilterTableEntryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPortFilterTableEntryPort.setStatus('current')
oriPortFilterTableEntryPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPortFilterTableEntryPortType.setStatus('current')
oriPortFilterTableEntryInterfaceBitmask = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 3, 1, 4), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPortFilterTableEntryInterfaceBitmask.setStatus('current')
oriPortFilterTableEntryComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPortFilterTableEntryComment.setStatus('current')
oriPortFilterTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPortFilterTableEntryStatus.setStatus('current')
oriBroadcastFilteringTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 6, 1), )
if mibBuilder.loadTexts: oriBroadcastFilteringTable.setStatus('current')
oriBroadcastFilteringTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 6, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriBroadcastFilteringTableIndex"))
if mibBuilder.loadTexts: oriBroadcastFilteringTableEntry.setStatus('current')
oriBroadcastFilteringTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriBroadcastFilteringTableIndex.setStatus('current')
oriBroadcastFilteringProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriBroadcastFilteringProtocolName.setStatus('current')
oriBroadcastFilteringDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ethernetToWireless", 1), ("wirelessToEthernet", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriBroadcastFilteringDirection.setStatus('current')
oriBroadcastFilteringTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriBroadcastFilteringTableEntryStatus.setStatus('current')
oriPacketForwardingStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPacketForwardingStatus.setStatus('current')
oriPacketForwardingMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 7, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPacketForwardingMACAddress.setStatus('current')
oriPacketForwardingInterface = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPacketForwardingInterface.setStatus('current')
oriIBSSTrafficOperation = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passthru", 1), ("block", 2))).clone('passthru')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIBSSTrafficOperation.setStatus('current')
oriIntraCellBlockingStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 1), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingStatus.setStatus('current')
oriIntraCellBlockingMACTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2), )
if mibBuilder.loadTexts: oriIntraCellBlockingMACTable.setStatus('current')
oriIntraCellBlockingMACTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriIntraCellBlockingMACTableIndex"))
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableEntry.setStatus('current')
oriIntraCellBlockingMACTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableIndex.setStatus('current')
oriIntraCellBlockingMACTableMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 2), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableMACAddress.setStatus('current')
oriIntraCellBlockingMACTableGroupID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 3), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID1.setStatus('current')
oriIntraCellBlockingMACTableGroupID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 4), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID2.setStatus('current')
oriIntraCellBlockingMACTableGroupID3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 5), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID3.setStatus('current')
oriIntraCellBlockingMACTableGroupID4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 6), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID4.setStatus('current')
oriIntraCellBlockingMACTableGroupID5 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 7), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID5.setStatus('current')
oriIntraCellBlockingMACTableGroupID6 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 8), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID6.setStatus('current')
oriIntraCellBlockingMACTableGroupID7 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 9), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID7.setStatus('current')
oriIntraCellBlockingMACTableGroupID8 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 10), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID8.setStatus('current')
oriIntraCellBlockingMACTableGroupID9 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 11), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID9.setStatus('current')
oriIntraCellBlockingMACTableGroupID10 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 12), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID10.setStatus('current')
oriIntraCellBlockingMACTableGroupID11 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 13), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID11.setStatus('current')
oriIntraCellBlockingMACTableGroupID12 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 14), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID12.setStatus('current')
oriIntraCellBlockingMACTableGroupID13 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 15), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID13.setStatus('current')
oriIntraCellBlockingMACTableGroupID14 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 16), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID14.setStatus('current')
oriIntraCellBlockingMACTableGroupID15 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 17), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID15.setStatus('current')
oriIntraCellBlockingMACTableGroupID16 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 18), ObjStatusActive().clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableGroupID16.setStatus('current')
oriIntraCellBlockingMACTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingMACTableEntryStatus.setStatus('current')
oriIntraCellBlockingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 3), )
if mibBuilder.loadTexts: oriIntraCellBlockingGroupTable.setStatus('current')
oriIntraCellBlockingGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 3, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriIntraCellBlockingGroupTableIndex"))
if mibBuilder.loadTexts: oriIntraCellBlockingGroupTableEntry.setStatus('current')
oriIntraCellBlockingGroupTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIntraCellBlockingGroupTableIndex.setStatus('current')
oriIntraCellBlockingGroupTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingGroupTableName.setStatus('current')
oriIntraCellBlockingGroupTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIntraCellBlockingGroupTableEntryStatus.setStatus('current')
oriSecurityGwStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 10, 1), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityGwStatus.setStatus('current')
oriSecurityGwMac = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 5, 10, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityGwMac.setStatus('current')
oriRADIUSClientInvalidServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSClientInvalidServerAddress.setStatus('current')
oriRADIUSMACAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSMACAccessControl.setStatus('current')
oriRADIUSAuthorizationLifeTime = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(7200, 43200), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthorizationLifeTime.setStatus('current')
oriRADIUSMACAddressFormat = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dashDelimited", 1), ("colonDelimited", 2), ("singleDashDelimited", 3), ("noDelimiter", 4))).clone('dashDelimited')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSMACAddressFormat.setStatus('current')
oriRADIUSLocalUserStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 7), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSLocalUserStatus.setStatus('current')
oriRADIUSLocalUserPassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 32)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSLocalUserPassword.setStatus('current')
oriRADIUSbasedManagementAccessProfile = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSbasedManagementAccessProfile.setStatus('current')
oriRADIUSAuthServerTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1), )
if mibBuilder.loadTexts: oriRADIUSAuthServerTable.setStatus('current')
oriRADIUSAuthServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriRADIUSAuthServerTableIndex"))
if mibBuilder.loadTexts: oriRADIUSAuthServerTableEntry.setStatus('current')
oriRADIUSAuthServerTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthServerTableIndex.setStatus('current')
oriRADIUSAuthServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("authentication", 1), ("accounting", 2), ("authAndAcct", 3), ("authdot1x", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthServerType.setStatus('current')
oriRADIUSAuthServerTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthServerTableEntryStatus.setStatus('current')
oriRADIUSAuthServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthServerIPAddress.setStatus('deprecated')
oriRADIUSAuthServerDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 5), Integer32().clone(1812)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthServerDestPort.setStatus('current')
oriRADIUSAuthServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthServerSharedSecret.setStatus('current')
oriRADIUSAuthServerResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthServerResponseTime.setStatus('current')
oriRADIUSAuthServerMaximumRetransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthServerMaximumRetransmission.setStatus('current')
oriRADIUSAuthClientAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientAccessRequests.setStatus('current')
oriRADIUSAuthClientAccessRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientAccessRetransmissions.setStatus('current')
oriRADIUSAuthClientAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientAccessAccepts.setStatus('current')
oriRADIUSAuthClientAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientAccessChallenges.setStatus('current')
oriRADIUSAuthClientAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientAccessRejects.setStatus('current')
oriRADIUSAuthClientMalformedAccessResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientMalformedAccessResponses.setStatus('current')
oriRADIUSAuthClientAuthInvalidAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientAuthInvalidAuthenticators.setStatus('current')
oriRADIUSAuthClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientTimeouts.setStatus('current')
oriRADIUSAuthServerNameOrIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthServerNameOrIPAddress.setStatus('current')
oriRADIUSAuthServerAddressingFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipAddress", 1), ("name", 2))).clone('ipAddress')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAuthServerAddressingFormat.setStatus('current')
oriRADIUSAcctStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctStatus.setStatus('deprecated')
oriRADIUSAcctInactivityTimer = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctInactivityTimer.setStatus('deprecated')
oriRADIUSAcctServerTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3), )
if mibBuilder.loadTexts: oriRADIUSAcctServerTable.setStatus('deprecated')
oriRADIUSAcctServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriRADIUSAcctServerTableIndex"))
if mibBuilder.loadTexts: oriRADIUSAcctServerTableEntry.setStatus('deprecated')
oriRADIUSAcctServerTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctServerTableIndex.setStatus('deprecated')
oriRADIUSAcctServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("authentication", 1), ("accounting", 2), ("authAndAcct", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctServerType.setStatus('deprecated')
oriRADIUSAcctServerTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctServerTableEntryStatus.setStatus('deprecated')
oriRADIUSAcctServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctServerIPAddress.setStatus('deprecated')
oriRADIUSAcctServerDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 5), Integer32().clone(1813)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctServerDestPort.setStatus('deprecated')
oriRADIUSAcctServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctServerSharedSecret.setStatus('deprecated')
oriRADIUSAcctServerResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctServerResponseTime.setStatus('deprecated')
oriRADIUSAcctServerMaximumRetransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctServerMaximumRetransmission.setStatus('deprecated')
oriRADIUSAcctClientAccountingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientAccountingRequests.setStatus('deprecated')
oriRADIUSAcctClientAccountingRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientAccountingRetransmissions.setStatus('deprecated')
oriRADIUSAcctClientAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientAccountingResponses.setStatus('deprecated')
oriRADIUSAcctClientAcctInvalidAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientAcctInvalidAuthenticators.setStatus('deprecated')
oriRADIUSAcctServerNameOrIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctServerNameOrIPAddress.setStatus('deprecated')
oriRADIUSAcctServerAddressingFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipAddress", 1), ("name", 2))).clone('ipAddress')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctServerAddressingFormat.setStatus('deprecated')
oriRADIUSAcctUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSAcctUpdateInterval.setStatus('deprecated')
oriRADIUSSvrTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1), )
if mibBuilder.loadTexts: oriRADIUSSvrTable.setStatus('current')
oriRADIUSSvrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriRADIUSSvrTableProfileIndex"), (0, "ORiNOCO-MIB", "oriRADIUSSvrTablePrimaryOrSecondaryIndex"))
if mibBuilder.loadTexts: oriRADIUSSvrTableEntry.setStatus('current')
oriRADIUSSvrTableProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSSvrTableProfileIndex.setStatus('current')
oriRADIUSSvrTablePrimaryOrSecondaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSSvrTablePrimaryOrSecondaryIndex.setStatus('current')
oriRADIUSSvrTableProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableProfileName.setStatus('current')
oriRADIUSSvrTableAddressingFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipAddress", 1), ("name", 2))).clone('ipAddress')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableAddressingFormat.setStatus('current')
oriRADIUSSvrTableNameOrIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableNameOrIPAddress.setStatus('current')
oriRADIUSSvrTableDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 6), Integer32().clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableDestPort.setStatus('current')
oriRADIUSSvrTableSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableSharedSecret.setStatus('current')
oriRADIUSSvrTableResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableResponseTime.setStatus('current')
oriRADIUSSvrTableMaximumRetransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableMaximumRetransmission.setStatus('current')
oriRADIUSSvrTableVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 10), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableVLANID.setStatus('current')
oriRADIUSSvrTableMACAddressFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dashDelimited", 1), ("colonDelimited", 2), ("singleDashDelimited", 3), ("noDelimiter", 4))).clone('dashDelimited')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSSvrTableMACAddressFormat.setStatus('current')
oriRADIUSSvrTableAuthorizationLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(900, 43200), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSSvrTableAuthorizationLifeTime.setStatus('current')
oriRADIUSSvrTableAccountingInactivityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSSvrTableAccountingInactivityTimer.setStatus('current')
oriRADIUSSvrTableAccountingUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 10080), ))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADIUSSvrTableAccountingUpdateInterval.setStatus('current')
oriRADIUSSvrTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRADIUSSvrTableRowStatus.setStatus('current')
oriRADIUSClientInvalidSvrAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSClientInvalidSvrAddress.setStatus('current')
oriRADIUSAuthClientStatTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3), )
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTable.setStatus('current')
oriRADIUSAuthClientStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriRADIUSAuthClientStatTableIndex"), (0, "ORiNOCO-MIB", "oriRADIUSAuthClientStatTablePrimaryOrSecondaryIndex"))
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableEntry.setStatus('current')
oriRADIUSAuthClientStatTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableIndex.setStatus('current')
oriRADIUSAuthClientStatTablePrimaryOrSecondaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTablePrimaryOrSecondaryIndex.setStatus('current')
oriRADIUSAuthClientStatTableAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableAccessRequests.setStatus('current')
oriRADIUSAuthClientStatTableAccessRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableAccessRetransmissions.setStatus('current')
oriRADIUSAuthClientStatTableAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableAccessAccepts.setStatus('current')
oriRADIUSAuthClientStatTableAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableAccessChallenges.setStatus('current')
oriRADIUSAuthClientStatTableAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableAccessRejects.setStatus('current')
oriRADIUSAuthClientStatTableMalformedAccessResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableMalformedAccessResponses.setStatus('current')
oriRADIUSAuthClientStatTableBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableBadAuthenticators.setStatus('current')
oriRADIUSAuthClientStatTableTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAuthClientStatTableTimeouts.setStatus('current')
oriRADIUSAcctClientStatTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 4), )
if mibBuilder.loadTexts: oriRADIUSAcctClientStatTable.setStatus('current')
oriRADIUSAcctClientStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 4, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriRADIUSAcctClientStatTableIndex"), (0, "ORiNOCO-MIB", "oriRADIUSAcctClientStatTablePrimaryOrSecondaryIndex"))
if mibBuilder.loadTexts: oriRADIUSAcctClientStatTableEntry.setStatus('current')
oriRADIUSAcctClientStatTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientStatTableIndex.setStatus('current')
oriRADIUSAcctClientStatTablePrimaryOrSecondaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientStatTablePrimaryOrSecondaryIndex.setStatus('current')
oriRADIUSAcctClientStatTableAccountingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientStatTableAccountingRequests.setStatus('current')
oriRADIUSAcctClientStatTableAccountingRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientStatTableAccountingRetransmissions.setStatus('current')
oriRADIUSAcctClientStatTableAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientStatTableAccountingResponses.setStatus('current')
oriRADIUSAcctClientStatTableBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 6, 10, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADIUSAcctClientStatTableBadAuthenticators.setStatus('current')
oriTelnetSessions = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetSessions.setStatus('deprecated')
oriTelnetPassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 2), DisplayString().clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetPassword.setStatus('current')
oriTelnetPort = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 3), Integer32().clone(23)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetPort.setStatus('current')
oriTelnetLoginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 300)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetLoginTimeout.setStatus('current')
oriTelnetIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetIdleTimeout.setStatus('current')
oriTelnetInterfaceBitmask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 6), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetInterfaceBitmask.setStatus('current')
oriTelnetSSHStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 7), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetSSHStatus.setStatus('current')
oriTelnetSSHHostKeyStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetSSHHostKeyStatus.setStatus('current')
oriTelnetSSHFingerPrint = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTelnetSSHFingerPrint.setStatus('current')
oriTelnetRADIUSAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 7, 10), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTelnetRADIUSAccessControl.setStatus('current')
oriTFTPServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 1), IpAddress().clone(hexValue="0a000002")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPServerIPAddress.setStatus('current')
oriTFTPFileName = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 2), DisplayString().clone('Filename')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPFileName.setStatus('current')
oriTFTPFileType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("config", 1), ("image", 2), ("bootloader", 3), ("license", 4), ("certificate", 5), ("privatekey", 6), ("sshHostPublicKey", 7), ("sshHostPrivateKey", 8), ("cliBatchFile", 9), ("cliBatchLog", 10), ("templog", 11), ("eventlog", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPFileType.setStatus('current')
oriTFTPOperation = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("upload", 1), ("download", 2), ("downloadAndReboot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPOperation.setStatus('current')
oriTFTPFileMode = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ascii", 1), ("bin", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPFileMode.setStatus('current')
oriTFTPOperationStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("inProgress", 2), ("successful", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTFTPOperationStatus.setStatus('current')
oriTFTPAutoConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 7), ObjStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPAutoConfigStatus.setStatus('current')
oriTFTPAutoConfigFilename = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPAutoConfigFilename.setStatus('current')
oriTFTPAutoConfigServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPAutoConfigServerIPAddress.setStatus('current')
oriTFTPDowngrade = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("rel201", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPDowngrade.setStatus('current')
oriSerialBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("baud2400", 1), ("baud4800", 2), ("baud9600", 3), ("baud19200", 4), ("baud38400", 5), ("baud57600", 6))).clone('baud9600')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSerialBaudRate.setStatus('current')
oriSerialDataBits = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 8)).clone(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSerialDataBits.setStatus('current')
oriSerialParity = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("even", 1), ("odd", 2), ("none", 3), ("mark", 4), ("space", 5))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSerialParity.setStatus('current')
oriSerialStopBits = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bit1", 1), ("bit1dot5", 2), ("bit2", 3))).clone('bit1')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSerialStopBits.setStatus('current')
oriSerialFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("xonxoff", 1), ("none", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSerialFlowControl.setStatus('current')
oriIAPPStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIAPPStatus.setStatus('current')
oriIAPPPeriodicAnnounceInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(80, 120, 160, 200))).clone(namedValues=NamedValues(("eighty", 80), ("oneHundredTwenty", 120), ("oneHundredSixty", 160), ("twoHundred", 200))).clone('oneHundredTwenty')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIAPPPeriodicAnnounceInterval.setStatus('current')
oriIAPPAnnounceResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPAnnounceResponseTime.setStatus('current')
oriIAPPHandoverTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(410, 512, 614, 717, 819))).clone(namedValues=NamedValues(("fourHundredTen", 410), ("fiveHundredTwelve", 512), ("sixHundredFourteen", 614), ("sevenHundredSeventeen", 717), ("eightHundredNineteen", 819))).clone('fiveHundredTwelve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIAPPHandoverTimeout.setStatus('current')
oriIAPPMaximumHandoverRetransmissions = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIAPPMaximumHandoverRetransmissions.setStatus('current')
oriIAPPAnnounceRequestSent = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPAnnounceRequestSent.setStatus('current')
oriIAPPAnnounceRequestReceived = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPAnnounceRequestReceived.setStatus('current')
oriIAPPAnnounceResponseSent = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPAnnounceResponseSent.setStatus('current')
oriIAPPAnnounceResponseReceived = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPAnnounceResponseReceived.setStatus('current')
oriIAPPHandoverRequestSent = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPHandoverRequestSent.setStatus('current')
oriIAPPHandoverRequestReceived = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPHandoverRequestReceived.setStatus('current')
oriIAPPHandoverRequestRetransmissions = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPHandoverRequestRetransmissions.setStatus('current')
oriIAPPHandoverResponseSent = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPHandoverResponseSent.setStatus('current')
oriIAPPHandoverResponseReceived = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPHandoverResponseReceived.setStatus('current')
oriIAPPPDUsDropped = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPPDUsDropped.setStatus('current')
oriIAPPRoamingClients = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPRoamingClients.setStatus('current')
oriIAPPMACIPTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 21), )
if mibBuilder.loadTexts: oriIAPPMACIPTable.setStatus('current')
oriIAPPMACIPTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 21, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriIAPPMACIPTableIndex"))
if mibBuilder.loadTexts: oriIAPPMACIPTableEntry.setStatus('current')
oriIAPPMACIPTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPMACIPTableIndex.setStatus('current')
oriIAPPMACIPTableSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 21, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPMACIPTableSystemName.setStatus('current')
oriIAPPMACIPTableIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 21, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPMACIPTableIPAddress.setStatus('current')
oriIAPPMACIPTableBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 21, 1, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPMACIPTableBSSID.setStatus('current')
oriIAPPMACIPTableESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 21, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriIAPPMACIPTableESSID.setStatus('current')
oriIAPPSendAnnounceRequestOnStart = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 10, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIAPPSendAnnounceRequestOnStart.setStatus('current')
oriLinkTestTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 1), Integer32().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkTestTimeOut.setStatus('current')
oriLinkTestInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 3), Integer32().clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkTestInterval.setStatus('current')
oriLinkTestExplore = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tableTimedOut", 1), ("exploring", 2), ("exploreResultsAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkTestExplore.setStatus('current')
oriLinkTestTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5), )
if mibBuilder.loadTexts: oriLinkTestTable.setStatus('current')
oriLinkTestTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriLinkTestTableIndex"))
if mibBuilder.loadTexts: oriLinkTestTableEntry.setStatus('current')
oriLinkTestTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestTableIndex.setStatus('current')
oriLinkTestInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noLinkTestInProgress", 1), ("linkTestIinProgress", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkTestInProgress.setStatus('current')
oriLinkTestStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestStationName.setStatus('current')
oriLinkTestMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestMACAddress.setStatus('current')
oriLinkTestStationProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestStationProfile.setStatus('current')
oriLinkTestOurCurSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurCurSignalLevel.setStatus('current')
oriLinkTestOurCurNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurCurNoiseLevel.setStatus('current')
oriLinkTestOurCurSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurCurSNR.setStatus('current')
oriLinkTestOurMinSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurMinSignalLevel.setStatus('current')
oriLinkTestOurMinNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurMinNoiseLevel.setStatus('current')
oriLinkTestOurMinSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurMinSNR.setStatus('current')
oriLinkTestOurMaxSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurMaxSignalLevel.setStatus('current')
oriLinkTestOurMaxNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurMaxNoiseLevel.setStatus('current')
oriLinkTestOurMaxSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurMaxSNR.setStatus('current')
oriLinkTestOurLowFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurLowFrameCount.setStatus('current')
oriLinkTestOurStandardFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurStandardFrameCount.setStatus('current')
oriLinkTestOurMediumFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurMediumFrameCount.setStatus('current')
oriLinkTestOurHighFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestOurHighFrameCount.setStatus('current')
oriLinkTestHisCurSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisCurSignalLevel.setStatus('current')
oriLinkTestHisCurNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisCurNoiseLevel.setStatus('current')
oriLinkTestHisCurSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisCurSNR.setStatus('current')
oriLinkTestHisMinSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisMinSignalLevel.setStatus('current')
oriLinkTestHisMinNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisMinNoiseLevel.setStatus('current')
oriLinkTestHisMinSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisMinSNR.setStatus('current')
oriLinkTestHisMaxSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisMaxSignalLevel.setStatus('current')
oriLinkTestHisMaxNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisMaxNoiseLevel.setStatus('current')
oriLinkTestHisMaxSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisMaxSNR.setStatus('current')
oriLinkTestHisLowFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisLowFrameCount.setStatus('current')
oriLinkTestHisStandardFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisStandardFrameCount.setStatus('current')
oriLinkTestHisMediumFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisMediumFrameCount.setStatus('current')
oriLinkTestHisHighFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestHisHighFrameCount.setStatus('current')
oriLinkTestInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestInterface.setStatus('current')
oriLinkTestRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 5, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestRadioType.setStatus('current')
oriLinkTestDataRateTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 6), )
if mibBuilder.loadTexts: oriLinkTestDataRateTable.setStatus('current')
oriLinkTestDataRateTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 6, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriLinkTestTableIndex"), (0, "ORiNOCO-MIB", "oriLinkTestDataRateTableIndex"))
if mibBuilder.loadTexts: oriLinkTestDataRateTableEntry.setStatus('current')
oriLinkTestDataRateTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestDataRateTableIndex.setStatus('current')
oriLinkTestDataRateTableRemoteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestDataRateTableRemoteCount.setStatus('current')
oriLinkTestDataRateTableLocalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 11, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkTestDataRateTableLocalCount.setStatus('current')
oriLinkIntStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkIntStatus.setStatus('current')
oriLinkIntPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 2), Integer32().clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkIntPollInterval.setStatus('current')
oriLinkIntPollRetransmissions = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkIntPollRetransmissions.setStatus('current')
oriLinkIntTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 4), )
if mibBuilder.loadTexts: oriLinkIntTable.setStatus('current')
oriLinkIntTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 4, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriLinkIntTableIndex"))
if mibBuilder.loadTexts: oriLinkIntTableEntry.setStatus('current')
oriLinkIntTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriLinkIntTableIndex.setStatus('current')
oriLinkIntTableTargetIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkIntTableTargetIPAddress.setStatus('current')
oriLinkIntTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkIntTableComment.setStatus('current')
oriLinkIntTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 12, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriLinkIntTableEntryStatus.setStatus('current')
oriUPSDGPRInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriUPSDGPRInterval.setStatus('current')
oriUPSDMaxActiveSU = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 13, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriUPSDMaxActiveSU.setStatus('current')
oriUPSDE911Reserved = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 13, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriUPSDE911Reserved.setStatus('current')
oriUPSDRoamingReserved = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 13, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriUPSDRoamingReserved.setStatus('current')
oriQoSPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1), )
if mibBuilder.loadTexts: oriQoSPolicyTable.setStatus('current')
oriQoSPolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriQoSPolicyTableIndex"), (0, "ORiNOCO-MIB", "oriQoSPolicyTableSecIndex"))
if mibBuilder.loadTexts: oriQoSPolicyTableEntry.setStatus('current')
oriQoSPolicyTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriQoSPolicyTableIndex.setStatus('current')
oriQoSPolicyTableSecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriQoSPolicyTableSecIndex.setStatus('current')
oriQoSPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1, 1, 3), DisplayString32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSPolicyName.setStatus('current')
oriQoSPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inboundLayer2", 1), ("inboundLayer3", 2), ("outboundLayer2", 3), ("outboundLayer3", 4), ("spectralink", 5))).clone('inboundLayer2')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriQoSPolicyType.setStatus('current')
oriQoSPolicyPriorityMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSPolicyPriorityMapping.setStatus('current')
oriQoSPolicyMarkingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1, 1, 6), ObjStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSPolicyMarkingStatus.setStatus('current')
oriQoSPolicyTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 1, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSPolicyTableRowStatus.setStatus('current')
oriQoSDot1DToDot1pMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 2), )
if mibBuilder.loadTexts: oriQoSDot1DToDot1pMappingTable.setStatus('current')
oriQoSDot1DToDot1pMappingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriQoSDot1DToDot1pMappingTableIndex"), (0, "ORiNOCO-MIB", "oriQoSDot1dPriority"))
if mibBuilder.loadTexts: oriQoSDot1DToDot1pMappingTableEntry.setStatus('current')
oriQoSDot1DToDot1pMappingTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriQoSDot1DToDot1pMappingTableIndex.setStatus('current')
oriQoSDot1dPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriQoSDot1dPriority.setStatus('current')
oriQoSDot1pPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSDot1pPriority.setStatus('current')
oriQoSDot1DToDot1pMappingTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 2, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSDot1DToDot1pMappingTableRowStatus.setStatus('current')
oriQoSDot1DToIPDSCPMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 3), )
if mibBuilder.loadTexts: oriQoSDot1DToIPDSCPMappingTable.setStatus('current')
oriQoSDot1DToIPDSCPMappingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 3, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriQoSDot1DToIPDSCPMappingTableIndex"), (0, "ORiNOCO-MIB", "oriQoSDot1DToIPDSCPPriority"))
if mibBuilder.loadTexts: oriQoSDot1DToIPDSCPMappingTableEntry.setStatus('current')
oriQoSDot1DToIPDSCPMappingTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriQoSDot1DToIPDSCPMappingTableIndex.setStatus('current')
oriQoSDot1DToIPDSCPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriQoSDot1DToIPDSCPPriority.setStatus('current')
oriQoSIPDSCPLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 62))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSIPDSCPLowerLimit.setStatus('current')
oriQoSIPDSCPUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSIPDSCPUpperLimit.setStatus('current')
oriQoSDot1DToIPDSCPMappingTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 14, 3, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriQoSDot1DToIPDSCPMappingTableRowStatus.setStatus('current')
oriDHCPServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerStatus.setStatus('current')
oriDHCPServerIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2), )
if mibBuilder.loadTexts: oriDHCPServerIPPoolTable.setStatus('current')
oriDHCPServerIPPoolTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriDHCPServerIPPoolTableIndex"))
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableEntry.setStatus('current')
oriDHCPServerIPPoolTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableIndex.setStatus('current')
oriDHCPServerIPPoolTableStartIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableStartIPAddress.setStatus('current')
oriDHCPServerIPPoolTableEndIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableEndIPAddress.setStatus('current')
oriDHCPServerIPPoolTableWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableWidth.setStatus('current')
oriDHCPServerIPPoolTableDefaultLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3600, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableDefaultLeaseTime.setStatus('current')
oriDHCPServerIPPoolTableMaximumLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3600, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableMaximumLeaseTime.setStatus('current')
oriDHCPServerIPPoolTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableComment.setStatus('current')
oriDHCPServerIPPoolTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerIPPoolTableEntryStatus.setStatus('current')
oriDHCPServerDefaultGatewayIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerDefaultGatewayIPAddress.setStatus('current')
oriDHCPServerSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriDHCPServerSubnetMask.setStatus('current')
oriDHCPServerNumIPPoolTableEntries = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriDHCPServerNumIPPoolTableEntries.setStatus('current')
oriDHCPServerPrimaryDNSIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerPrimaryDNSIPAddress.setStatus('current')
oriDHCPServerSecondaryDNSIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPServerSecondaryDNSIPAddress.setStatus('current')
oriDHCPClientID = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPClientID.setStatus('current')
oriDHCPClientInterfaceBitmask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 2, 2), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPClientInterfaceBitmask.setStatus('current')
oriDHCPRelayStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPRelayStatus.setStatus('current')
oriDHCPRelayDHCPServerTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 3, 2), )
if mibBuilder.loadTexts: oriDHCPRelayDHCPServerTable.setStatus('current')
oriDHCPRelayDHCPServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 3, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriDHCPRelayDHCPServerTableIndex"))
if mibBuilder.loadTexts: oriDHCPRelayDHCPServerTableEntry.setStatus('current')
oriDHCPRelayDHCPServerTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriDHCPRelayDHCPServerTableIndex.setStatus('current')
oriDHCPRelayDHCPServerTableIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 3, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPRelayDHCPServerTableIpAddress.setStatus('current')
oriDHCPRelayDHCPServerTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 3, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPRelayDHCPServerTableComment.setStatus('current')
oriDHCPRelayDHCPServerTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 15, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDHCPRelayDHCPServerTableEntryStatus.setStatus('current')
oriHTTPInterfaceBitmask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 1), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPInterfaceBitmask.setStatus('current')
oriHTTPPassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPPassword.setStatus('current')
oriHTTPPort = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPPort.setStatus('current')
oriHTTPWebSitenameTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 4), )
if mibBuilder.loadTexts: oriHTTPWebSitenameTable.setStatus('current')
oriHTTPWebSitenameTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 4, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriHTTPWebSitenameTableIndex"))
if mibBuilder.loadTexts: oriHTTPWebSitenameTableEntry.setStatus('current')
oriHTTPWebSitenameTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriHTTPWebSitenameTableIndex.setStatus('current')
oriHTTPWebSiteFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriHTTPWebSiteFilename.setStatus('current')
oriHTTPWebSiteLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriHTTPWebSiteLanguage.setStatus('current')
oriHTTPWebSiteDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriHTTPWebSiteDescription.setStatus('current')
oriHTTPWebSitenameTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPWebSitenameTableStatus.setStatus('current')
oriHTTPRefreshDelay = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPRefreshDelay.setStatus('current')
oriHTTPHelpInformationLink = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPHelpInformationLink.setStatus('current')
oriHTTPSSLStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 7), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPSSLStatus.setStatus('current')
oriHTTPSSLPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPSSLPassphrase.setStatus('current')
oriHTTPSetupWizardStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPSetupWizardStatus.setStatus('current')
oriHTTPRADIUSAccessControl = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 16, 10), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriHTTPRADIUSAccessControl.setStatus('current')
oriWDSSetupTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 1), )
if mibBuilder.loadTexts: oriWDSSetupTable.setStatus('current')
oriWDSSetupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ORiNOCO-MIB", "oriWDSSetupTablePortIndex"))
if mibBuilder.loadTexts: oriWDSSetupTableEntry.setStatus('current')
oriWDSSetupTablePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriWDSSetupTablePortIndex.setStatus('current')
oriWDSSetupTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWDSSetupTableEntryStatus.setStatus('current')
oriWDSSetupTablePartnerMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 1, 1, 3), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWDSSetupTablePartnerMACAddress.setStatus('current')
oriWDSSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 2), )
if mibBuilder.loadTexts: oriWDSSecurityTable.setStatus('current')
oriWDSSecurityTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oriWDSSecurityTableEntry.setStatus('current')
oriWDSSecurityTableSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6))).clone(namedValues=NamedValues(("none", 1), ("wep", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWDSSecurityTableSecurityMode.setStatus('current')
oriWDSSecurityTableEncryptionKey0 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 17, 2, 1, 2), WEPKeyType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWDSSecurityTableEncryptionKey0.setStatus('current')
oriTrapVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1))
oriGenericTrapVariable = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriGenericTrapVariable.setStatus('current')
oriTrapVarMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarMACAddress.setStatus('current')
oriTrapVarTFTPIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarTFTPIPAddress.setStatus('current')
oriTrapVarTFTPFilename = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarTFTPFilename.setStatus('current')
oriTrapVarTFTPOperation = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upload", 1), ("download", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarTFTPOperation.setStatus('current')
oriTrapVarUnauthorizedManagerIPaddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarUnauthorizedManagerIPaddress.setStatus('current')
oriTrapVarFailedAuthenticationType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarFailedAuthenticationType.setStatus('current')
oriTrapVarUnAuthorizedManagerCount = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarUnAuthorizedManagerCount.setStatus('current')
oriTrapVarTaskSuspended = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarTaskSuspended.setStatus('current')
oriTrapVarUnauthorizedClientMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 17), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarUnauthorizedClientMACAddress.setStatus('current')
oriTrapVarWirelessCard = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pcCardA", 1), ("pcCardB", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarWirelessCard.setStatus('current')
oriTrapVarInterface = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarInterface.setStatus('current')
oriTrapVarBatchCLIFilename = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarBatchCLIFilename.setStatus('current')
oriTrapVarBatchCLIMessage = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarBatchCLIMessage.setStatus('current')
oriTrapVarBatchCLILineNumber = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarBatchCLILineNumber.setStatus('current')
oriTrapVarDHCPServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarDHCPServerIPAddress.setStatus('current')
oriTrapVarIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 26), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarIPAddress.setStatus('current')
oriTrapVarSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarSubnetMask.setStatus('current')
oriTrapVarDefaultRouterIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 28), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriTrapVarDefaultRouterIPAddress.setStatus('current')
oriConfigurationTrapsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriConfigurationTrapsStatus.setStatus('current')
oriSecurityTrapsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityTrapsStatus.setStatus('current')
oriWirelessIfTrapsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWirelessIfTrapsStatus.setStatus('current')
oriOperationalTrapsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriOperationalTrapsStatus.setStatus('current')
oriFlashMemoryTrapsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriFlashMemoryTrapsStatus.setStatus('current')
oriTFTPTrapsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTFTPTrapsStatus.setStatus('current')
oriTrapsImageStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriTrapsImageStatus.setStatus('current')
oriADSLIfTrapsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriADSLIfTrapsStatus.setStatus('current')
oriWORPTrapsStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriWORPTrapsStatus.setStatus('current')
oriProxyARPStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriProxyARPStatus.setStatus('current')
oriIPARPFilteringStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIPARPFilteringStatus.setStatus('current')
oriIPARPFilteringIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 19, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIPARPFilteringIPAddress.setStatus('current')
oriIPARPFilteringSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 19, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriIPARPFilteringSubnetMask.setStatus('current')
oriSpanningTreeStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSpanningTreeStatus.setStatus('current')
oriSecurityConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("dot1x", 2), ("mixedWepAnddot1x", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityConfiguration.setStatus('deprecated')
oriSecurityEncryptionKeyLengthTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 2), )
if mibBuilder.loadTexts: oriSecurityEncryptionKeyLengthTable.setStatus('deprecated')
oriSecurityEncryptionKeyLengthTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oriSecurityEncryptionKeyLengthTableEntry.setStatus('deprecated')
oriSecurityEncryptionKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sixtyFourBits", 1), ("oneHundredTwentyEightBits", 2))).clone('sixtyFourBits')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityEncryptionKeyLength.setStatus('deprecated')
oriSecurityRekeyingInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityRekeyingInterval.setStatus('deprecated')
oriRADStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 1), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADStatus.setStatus('current')
oriRADInterval = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 1440)).clone(15)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADInterval.setStatus('current')
oriRADInterfaceBitmask = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 3), InterfaceBitmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriRADInterfaceBitmask.setStatus('current')
oriRADLastSuccessfulScanTime = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADLastSuccessfulScanTime.setStatus('current')
oriRADAccessPointCount = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADAccessPointCount.setStatus('current')
oriRADScanResultsTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 6), )
if mibBuilder.loadTexts: oriRADScanResultsTable.setStatus('current')
oriRADScanResultsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 6, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriRADScanResultsTableIndex"))
if mibBuilder.loadTexts: oriRADScanResultsTableEntry.setStatus('current')
oriRADScanResultsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADScanResultsTableIndex.setStatus('current')
oriRADScanResultsMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 6, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADScanResultsMACAddress.setStatus('current')
oriRADScanResultsFrequencyChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRADScanResultsFrequencyChannel.setStatus('current')
oriRogueScanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 1), )
if mibBuilder.loadTexts: oriRogueScanConfigTable.setStatus('current')
oriRogueScanConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oriRogueScanConfigTableEntry.setStatus('current')
oriRogueScanConfigTableScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bkScanMode", 1), ("contScanMode", 2))).clone('bkScanMode')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRogueScanConfigTableScanMode.setStatus('current')
oriRogueScanConfigTableScanCycleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRogueScanConfigTableScanCycleTime.setStatus('current')
oriRogueScanConfigTableScanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 1, 1, 3), ObjStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRogueScanConfigTableScanStatus.setStatus('current')
oriRogueScanStationCountWirelessCardA = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRogueScanStationCountWirelessCardA.setStatus('current')
oriRogueScanStationCountWirelessCardB = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRogueScanStationCountWirelessCardB.setStatus('current')
oriRogueScanResultsTableAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 7200)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRogueScanResultsTableAgingTime.setStatus('current')
oriRogueScanResultsTableClearEntries = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRogueScanResultsTableClearEntries.setStatus('current')
oriRogueScanResultsNotificationMode = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noNotification", 1), ("notifyAP", 2), ("notifyClient", 3), ("notifyAll", 4))).clone('notifyAll')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRogueScanResultsNotificationMode.setStatus('current')
oriRogueScanResultsTrapReportType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reportSinceLastScan", 1), ("reportSinceStartOfScan", 2))).clone('reportSinceLastScan')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriRogueScanResultsTrapReportType.setStatus('current')
oriRogueScanResultsTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 8), )
if mibBuilder.loadTexts: oriRogueScanResultsTable.setStatus('current')
oriRogueScanResultsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 8, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriRogueScanResultsTableIndex"))
if mibBuilder.loadTexts: oriRogueScanResultsTableEntry.setStatus('current')
oriRogueScanResultsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRogueScanResultsTableIndex.setStatus('current')
oriRogueScanResultsStationType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("infrastructureClient", 2), ("accessPoint", 3), ("ibssClient", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRogueScanResultsStationType.setStatus('current')
oriRogueScanResultsMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 8, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRogueScanResultsMACAddress.setStatus('current')
oriRogueScanResultsFrequencyChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 8, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRogueScanResultsFrequencyChannel.setStatus('current')
oriRogueScanResultsSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRogueScanResultsSNR.setStatus('current')
oriRogueScanResultsBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 8, 8, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriRogueScanResultsBSSID.setStatus('current')
oriSecurityConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 5), )
if mibBuilder.loadTexts: oriSecurityConfigTable.setStatus('deprecated')
oriSecurityConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oriSecurityConfigTableEntry.setStatus('deprecated')
oriSecurityConfigTableSupportedSecurityModes = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSecurityConfigTableSupportedSecurityModes.setStatus('deprecated')
oriSecurityConfigTableSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("dot1x", 2), ("mixed", 3), ("wpa", 4), ("wpa-psk", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityConfigTableSecurityMode.setStatus('deprecated')
oriSecurityConfigTableRekeyingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityConfigTableRekeyingInterval.setStatus('deprecated')
oriSecurityConfigTableEncryptionKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sixtyFourBits", 1), ("oneHundredTwentyEightBits", 2), ("oneHundredFiftyTwoBits", 3))).clone('sixtyFourBits')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityConfigTableEncryptionKeyLength.setStatus('deprecated')
oriSecurityHwConfigResetStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 6), ObjStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityHwConfigResetStatus.setStatus('current')
oriSecurityHwConfigResetPassword = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityHwConfigResetPassword.setStatus('current')
oriSecurityProfileTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9), )
if mibBuilder.loadTexts: oriSecurityProfileTable.setStatus('current')
oriSecurityProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriSecurityProfileTableIndex"), (0, "ORiNOCO-MIB", "oriSecurityProfileTableSecModeIndex"))
if mibBuilder.loadTexts: oriSecurityProfileTableEntry.setStatus('current')
oriSecurityProfileTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSecurityProfileTableIndex.setStatus('current')
oriSecurityProfileTableSecModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSecurityProfileTableSecModeIndex.setStatus('current')
oriSecurityProfileTableAuthenticationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("dot1x", 2), ("psk", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSecurityProfileTableAuthenticationMode.setStatus('current')
oriSecurityProfileTableCipherMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("wep", 2), ("tkip", 3), ("aes", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSecurityProfileTableCipherMode.setStatus('current')
oriSecurityProfileTableEncryptionKey0 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 5), WEPKeyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTableEncryptionKey0.setStatus('current')
oriSecurityProfileTableEncryptionKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 6), WEPKeyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTableEncryptionKey1.setStatus('current')
oriSecurityProfileTableEncryptionKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 7), WEPKeyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTableEncryptionKey2.setStatus('current')
oriSecurityProfileTableEncryptionKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 8), WEPKeyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTableEncryptionKey3.setStatus('current')
oriSecurityProfileTableEncryptionTxKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTableEncryptionTxKey.setStatus('current')
oriSecurityProfileTableEncryptionKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sixtyFourBits", 1), ("oneHundredTwentyEightBits", 2), ("oneHundredFiftyTwoBits", 3))).clone('sixtyFourBits')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTableEncryptionKeyLength.setStatus('current')
oriSecurityProfileTablePSKValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTablePSKValue.setStatus('current')
oriSecurityProfileTablePSKPassPhrase = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTablePSKPassPhrase.setStatus('current')
oriSecurityProfileTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 9, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oriSecurityProfileTableStatus.setStatus('current')
oriSecurityProfileFourWEPKeySupport = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 21, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSecurityProfileFourWEPKeySupport.setStatus('current')
oriPPPoEStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoEStatus.setStatus('current')
oriPPPoEMaximumNumberOfSessions = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 2), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoEMaximumNumberOfSessions.setStatus('current')
oriPPPoENumberOfActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoENumberOfActiveSessions.setStatus('current')
oriPPPoESessionTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4), )
if mibBuilder.loadTexts: oriPPPoESessionTable.setStatus('current')
oriPPPoESessionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriPPPoESessionTableIndex"))
if mibBuilder.loadTexts: oriPPPoESessionTableEntry.setStatus('current')
oriPPPoESessionTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionTableIndex.setStatus('current')
oriPPPoESessionWANConnectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("alwaysOn", 1), ("onDemand", 2), ("manual", 3))).clone('alwaysOn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionWANConnectMode.setStatus('current')
oriPPPoESessionIdleTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionIdleTimeOut.setStatus('current')
oriPPPoESessionConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionConnectTime.setStatus('current')
oriPPPoESessionConnectTimeLimitation = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionConnectTimeLimitation.setStatus('current')
oriPPPoESessionConfigPADITxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionConfigPADITxInterval.setStatus('current')
oriPPPoESessionConfigPADIMaxNumberOfRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionConfigPADIMaxNumberOfRetries.setStatus('current')
oriPPPoESessionBindingsNumberPADITx = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionBindingsNumberPADITx.setStatus('current')
oriPPPoESessionBindingsNumberPADTTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionBindingsNumberPADTTx.setStatus('current')
oriPPPoESessionBindingsNumberServiceNameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionBindingsNumberServiceNameErrors.setStatus('current')
oriPPPoESessionBindingsNumberACSystemErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionBindingsNumberACSystemErrors.setStatus('current')
oriPPPoESessionBindingsNumberGenericErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionBindingsNumberGenericErrorsRx.setStatus('current')
oriPPPoESessionBindingsNumberGenericErrorsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionBindingsNumberGenericErrorsTx.setStatus('current')
oriPPPoESessionBindingsNumberMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionBindingsNumberMalformedPackets.setStatus('current')
oriPPPoESessionBindingsNumberMultiplePADORx = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionBindingsNumberMultiplePADORx.setStatus('current')
oriPPPoESessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionUserName.setStatus('current')
oriPPPoESessionUserNamePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionUserNamePassword.setStatus('current')
oriPPPoESessionServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionServiceName.setStatus('current')
oriPPPoESessionISPName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionISPName.setStatus('current')
oriPPPoESessionTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionTableStatus.setStatus('current')
oriPPPoESessionWANManualConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoESessionWANManualConnect.setStatus('current')
oriPPPoESessionWANConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("null", 1), ("start", 2), ("addingStack", 3), ("stackAdded", 4), ("stackAddError", 5), ("connectFailed", 6), ("authFailed", 7), ("up", 8), ("down", 9), ("suspended", 10), ("unknown", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoESessionWANConnectionStatus.setStatus('current')
oriPPPoEMACtoSessionTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 5), )
if mibBuilder.loadTexts: oriPPPoEMACtoSessionTable.setStatus('current')
oriPPPoEMACtoSessionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 5, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriPPPoEMACtoSessionTableIndex"))
if mibBuilder.loadTexts: oriPPPoEMACtoSessionTableEntry.setStatus('current')
oriPPPoEMACtoSessionTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriPPPoEMACtoSessionTableIndex.setStatus('current')
oriPPPoEMACtoSessionTableMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 5, 1, 2), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoEMACtoSessionTableMACAddress.setStatus('current')
oriPPPoEMACtoSessionTableISPName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoEMACtoSessionTableISPName.setStatus('current')
oriPPPoEMACtoSessionTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 22, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriPPPoEMACtoSessionTableStatus.setStatus('current')
oriConfigResetToDefaults = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bridgeMode", 1), ("gatewayMode", 2), ("gatewayModeDHCPClient", 3), ("gatewayModePPPoE", 4))).clone('gatewayMode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriConfigResetToDefaults.setStatus('current')
oriConfigFileTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23, 2), )
if mibBuilder.loadTexts: oriConfigFileTable.setStatus('current')
oriConfigFileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23, 2, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriConfigFileTableIndex"))
if mibBuilder.loadTexts: oriConfigFileTableEntry.setStatus('current')
oriConfigFileTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriConfigFileTableIndex.setStatus('current')
oriConfigFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriConfigFileName.setStatus('current')
oriConfigFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriConfigFileStatus.setStatus('current')
oriConfigSaveFile = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriConfigSaveFile.setStatus('current')
oriConfigSaveKnownGood = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 23, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("saveKnownGood", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriConfigSaveKnownGood.setStatus('current')
oriDNSRedirectStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDNSRedirectStatus.setStatus('current')
oriDNSRedirectMaxResponseWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 2), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDNSRedirectMaxResponseWaitTime.setStatus('current')
oriDNSPrimaryDNSIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDNSPrimaryDNSIPAddress.setStatus('current')
oriDNSSecondaryDNSIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDNSSecondaryDNSIPAddress.setStatus('current')
oriDNSClientStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDNSClientStatus.setStatus('current')
oriDNSClientPrimaryServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 5, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDNSClientPrimaryServerIPAddress.setStatus('current')
oriDNSClientSecondaryServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 5, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDNSClientSecondaryServerIPAddress.setStatus('current')
oriDNSClientDefaultDomainName = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 24, 5, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDNSClientDefaultDomainName.setStatus('current')
oriAOLNATALGStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriAOLNATALGStatus.setStatus('current')
oriNATStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 1), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStatus.setStatus('current')
oriNATType = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATType.setStatus('current')
oriNATStaticBindStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticBindStatus.setStatus('current')
oriNATPublicIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriNATPublicIPAddress.setStatus('current')
oriNATStaticIPBindTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 5), )
if mibBuilder.loadTexts: oriNATStaticIPBindTable.setStatus('current')
oriNATStaticIPBindTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 5, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriNATStaticIPBindTableIndex"))
if mibBuilder.loadTexts: oriNATStaticIPBindTableEntry.setStatus('current')
oriNATStaticIPBindTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriNATStaticIPBindTableIndex.setStatus('current')
oriNATStaticIPBindLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticIPBindLocalAddress.setStatus('current')
oriNATStaticIPBindRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticIPBindRemoteAddress.setStatus('current')
oriNATStaticIPBindTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticIPBindTableEntryStatus.setStatus('current')
oriNATStaticPortBindTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 6), )
if mibBuilder.loadTexts: oriNATStaticPortBindTable.setStatus('current')
oriNATStaticPortBindTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 6, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriNATStaticPortBindTableIndex"))
if mibBuilder.loadTexts: oriNATStaticPortBindTableEntry.setStatus('current')
oriNATStaticPortBindTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriNATStaticPortBindTableIndex.setStatus('current')
oriNATStaticPortBindLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticPortBindLocalAddress.setStatus('current')
oriNATStaticPortBindStartPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticPortBindStartPortNumber.setStatus('current')
oriNATStaticPortBindEndPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticPortBindEndPortNumber.setStatus('current')
oriNATStaticPortBindPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticPortBindPortType.setStatus('current')
oriNATStaticPortBindTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 26, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriNATStaticPortBindTableEntryStatus.setStatus('current')
oriSpectraLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 29, 1), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSpectraLinkStatus.setStatus('current')
oriSpectraLinkLegacyDeviceSupport = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 29, 2), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSpectraLinkLegacyDeviceSupport.setStatus('current')
oriVLANStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 30, 1), ObjStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriVLANStatus.setStatus('current')
oriVLANMgmtIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 30, 2), VlanId().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriVLANMgmtIdentifier.setStatus('current')
oriVLANIDTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 30, 3), )
if mibBuilder.loadTexts: oriVLANIDTable.setStatus('deprecated')
oriVLANIDTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 30, 3, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriVLANIDTableIndex"))
if mibBuilder.loadTexts: oriVLANIDTableEntry.setStatus('deprecated')
oriVLANIDTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 30, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriVLANIDTableIndex.setStatus('deprecated')
oriVLANIDTableIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 30, 3, 1, 2), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriVLANIDTableIdentifier.setStatus('deprecated')
oriDMZHostTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 31, 1), )
if mibBuilder.loadTexts: oriDMZHostTable.setStatus('current')
oriDMZHostTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 31, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriDMZHostTableIndex"))
if mibBuilder.loadTexts: oriDMZHostTableEntry.setStatus('current')
oriDMZHostTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 31, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriDMZHostTableIndex.setStatus('current')
oriDMZHostTableHostIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 31, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDMZHostTableHostIP.setStatus('current')
oriDMZHostTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 31, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDMZHostTableComment.setStatus('current')
oriDMZHostTableEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 31, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriDMZHostTableEntryStatus.setStatus('current')
oriOEMName = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 32, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriOEMName.setStatus('current')
oriOEMHomeUrl = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 32, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriOEMHomeUrl.setStatus('current')
oriOEMProductName = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 32, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriOEMProductName.setStatus('current')
oriOEMProductModel = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 32, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriOEMProductModel.setStatus('current')
oriOEMLogoImageFile = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 32, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriOEMLogoImageFile.setStatus('current')
oriOEMNoNavLogoImageFile = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 32, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriOEMNoNavLogoImageFile.setStatus('current')
oriStationStatTable = MibTable((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1), )
if mibBuilder.loadTexts: oriStationStatTable.setStatus('current')
oriStationStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1), ).setIndexNames((0, "ORiNOCO-MIB", "oriStationStatTableIndex"))
if mibBuilder.loadTexts: oriStationStatTableEntry.setStatus('current')
oriStationStatTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableIndex.setStatus('current')
oriStationStatTableMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableMACAddress.setStatus('current')
oriStationStatTableIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableIPAddress.setStatus('current')
oriStationStatTableInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableInterface.setStatus('current')
oriStationStatTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableName.setStatus('current')
oriStationStatTableType = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sta", 1), ("wds", 2), ("worpBase", 3), ("worpSatellite", 4), ("norc", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableType.setStatus('current')
oriStationStatTableMACProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ieee802dot11", 1), ("ieee802dot11a", 2), ("ieee802dot11b", 3), ("worp", 4), ("ieee802dot11g", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableMACProtocol.setStatus('current')
oriStationStatTableAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableAdminStatus.setStatus('current')
oriStationStatTableOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableOperStatus.setStatus('current')
oriStationStatTableLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableLastChange.setStatus('current')
oriStationStatTableLastState = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("registering", 2), ("authenticating", 3), ("registered", 4), ("timeout", 5), ("aborded", 6), ("rejected", 7), ("linktest", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableLastState.setStatus('current')
oriStationStatTableInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableInOctets.setStatus('current')
oriStationStatTableInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableInUcastPkts.setStatus('current')
oriStationStatTableInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableInNUcastPkts.setStatus('current')
oriStationStatTableInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableInDiscards.setStatus('current')
oriStationStatTableOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableOutOctets.setStatus('current')
oriStationStatTableOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableOutUcastPkts.setStatus('current')
oriStationStatTableOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableOutNUcastPkts.setStatus('current')
oriStationStatTableOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableOutDiscards.setStatus('current')
oriStationStatTableInSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableInSignal.setStatus('current')
oriStationStatTableInNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableInNoise.setStatus('current')
oriStationStatTableRemoteSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableRemoteSignal.setStatus('current')
oriStationStatTableRemoteNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-102, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableRemoteNoise.setStatus('current')
oriStationStatTableLastInPktTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 1, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatTableLastInPktTime.setStatus('current')
oriStationStatStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriStationStatStatus.setStatus('current')
oriStationStatNumberOfClients = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 33, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriStationStatNumberOfClients.setStatus('current')
oriSNTPStatus = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPStatus.setStatus('current')
oriSNTPPrimaryServerNameOrIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPPrimaryServerNameOrIPAddress.setStatus('current')
oriSNTPSecondaryServerNameOrIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPSecondaryServerNameOrIPAddress.setStatus('current')
oriSNTPTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41))).clone(namedValues=NamedValues(("dateline", 1), ("samoa", 2), ("hawaii", 3), ("alaska", 4), ("pacific-us", 5), ("mountain-us", 6), ("arizona", 7), ("central-us", 8), ("mexico-city", 9), ("eastern-us", 10), ("indiana", 11), ("atlantic-canada", 12), ("santiago", 13), ("newfoundland", 14), ("brasilia", 15), ("buenos-aires", 16), ("mid-atlantic", 17), ("azores", 18), ("london", 19), ("western-europe", 20), ("eastern-europe", 21), ("cairo", 22), ("russia-iraq", 23), ("iran", 24), ("arabian", 25), ("afghanistan", 26), ("pakistan", 27), ("india", 28), ("bangladesh", 29), ("burma", 30), ("bangkok", 31), ("australia-wt", 32), ("hong-kong", 33), ("beijing", 34), ("japan-korea", 35), ("australia-ct", 36), ("australia-et", 37), ("central-pacific", 38), ("new-zealand", 39), ("tonga", 40), ("western-samoa", 41)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPTimeZone.setStatus('current')
oriSNTPDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oriSNTPDateAndTime.setStatus('current')
oriSNTPDayLightSavingTime = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("plus-two", 1), ("plus-one", 2), ("unchanged", 3), ("minus-one", 4), ("minus-two", 5))).clone('unchanged')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPDayLightSavingTime.setStatus('current')
oriSNTPYear = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPYear.setStatus('current')
oriSNTPMonth = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPMonth.setStatus('current')
oriSNTPDay = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPDay.setStatus('current')
oriSNTPHour = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPHour.setStatus('current')
oriSNTPMinutes = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPMinutes.setStatus('current')
oriSNTPSeconds = MibScalar((1, 3, 6, 1, 4, 1, 11898, 2, 1, 34, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oriSNTPSeconds.setStatus('current')
oriConfigurationTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2))
if mibBuilder.loadTexts: oriConfigurationTraps.setStatus('current')
oriTrapDNSIPNotConfigured = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 3)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTrapVarMACAddress"))
if mibBuilder.loadTexts: oriTrapDNSIPNotConfigured.setStatus('current')
oriTrapRADIUSAuthenticationNotConfigured = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 5)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTrapVarMACAddress"))
if mibBuilder.loadTexts: oriTrapRADIUSAuthenticationNotConfigured.setStatus('current')
oriTrapRADIUSAccountingNotConfigured = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 6)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTrapVarMACAddress"))
if mibBuilder.loadTexts: oriTrapRADIUSAccountingNotConfigured.setStatus('current')
oriTrapDuplicateIPAddressEncountered = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 7)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTrapVarMACAddress"))
if mibBuilder.loadTexts: oriTrapDuplicateIPAddressEncountered.setStatus('current')
oriTrapDHCPRelayServerTableNotConfigured = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 8))
if mibBuilder.loadTexts: oriTrapDHCPRelayServerTableNotConfigured.setStatus('current')
oriTrapWORPIfNetworkSecretNotConfigured = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 9))
if mibBuilder.loadTexts: oriTrapWORPIfNetworkSecretNotConfigured.setStatus('current')
oriTrapVLANIDInvalidConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 10)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriWirelessIfNetworkName"), ("ORiNOCO-MIB", "oriVLANIDTableIdentifier"))
if mibBuilder.loadTexts: oriTrapVLANIDInvalidConfiguration.setStatus('current')
oriTrapAutoConfigFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 11)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTFTPAutoConfigFilename"), ("ORiNOCO-MIB", "oriTFTPAutoConfigServerIPAddress"))
if mibBuilder.loadTexts: oriTrapAutoConfigFailure.setStatus('current')
oriTrapBatchExecFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 12)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTrapVarBatchCLIFilename"), ("ORiNOCO-MIB", "oriTrapVarBatchCLILineNumber"), ("ORiNOCO-MIB", "oriTrapVarBatchCLIMessage"))
if mibBuilder.loadTexts: oriTrapBatchExecFailure.setStatus('current')
oriTrapBatchFileExecStart = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 13)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTrapVarBatchCLIFilename"))
if mibBuilder.loadTexts: oriTrapBatchFileExecStart.setStatus('current')
oriTrapBatchFileExecEnd = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 2, 0, 14)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTrapVarBatchCLIFilename"), ("ORiNOCO-MIB", "oriTrapVarBatchCLIMessage"))
if mibBuilder.loadTexts: oriTrapBatchFileExecEnd.setStatus('current')
oriSecurityTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 3))
if mibBuilder.loadTexts: oriSecurityTraps.setStatus('current')
oriTrapInvalidEncryptionKey = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 3, 0, 1)).setObjects(("ORiNOCO-MIB", "oriTrapVarUnauthorizedClientMACAddress"))
if mibBuilder.loadTexts: oriTrapInvalidEncryptionKey.setStatus('current')
oriTrapAuthenticationFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 3, 0, 2)).setObjects(("ORiNOCO-MIB", "oriTrapVarUnauthorizedClientMACAddress"), ("ORiNOCO-MIB", "oriTrapVarFailedAuthenticationType"))
if mibBuilder.loadTexts: oriTrapAuthenticationFailure.setStatus('current')
oriTrapUnauthorizedManagerDetected = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 3, 0, 3)).setObjects(("ORiNOCO-MIB", "oriTrapVarUnauthorizedManagerIPaddress"), ("ORiNOCO-MIB", "oriTrapVarUnAuthorizedManagerCount"))
if mibBuilder.loadTexts: oriTrapUnauthorizedManagerDetected.setStatus('current')
oriTrapRADScanComplete = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 3, 0, 4)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapRADScanComplete.setStatus('current')
oriTrapRADScanResults = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 3, 0, 5)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapRADScanResults.setStatus('current')
oriTrapRogueScanStationDetected = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 3, 0, 6)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapRogueScanStationDetected.setStatus('current')
oriTrapRogueScanCycleComplete = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 3, 0, 7)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapRogueScanCycleComplete.setStatus('current')
oriWirelessIfTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4))
if mibBuilder.loadTexts: oriWirelessIfTraps.setStatus('current')
oriTrapWLCNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 1)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWLCNotPresent.setStatus('current')
oriTrapWLCFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 2)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWLCFailure.setStatus('current')
oriTrapWLCRemoval = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 3)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWLCRemoval.setStatus('current')
oriTrapWLCIncompatibleFirmware = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 4)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWLCIncompatibleFirmware.setStatus('current')
oriTrapWLCVoltageDiscrepancy = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 5)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWLCVoltageDiscrepancy.setStatus('current')
oriTrapWLCIncompatibleVendor = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 6)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWLCIncompatibleVendor.setStatus('current')
oriTrapWLCFirmwareDownloadFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 7)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWLCFirmwareDownloadFailure.setStatus('current')
oriTrapWLCFirmwareFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 8)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"), ("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapWLCFirmwareFailure.setStatus('current')
oriTrapWLCRadarInterferenceDetected = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 4, 0, 9)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"), ("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapWLCRadarInterferenceDetected.setStatus('current')
oriOperationalTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5))
if mibBuilder.loadTexts: oriOperationalTraps.setStatus('current')
oriTrapUnrecoverableSoftwareErrorDetected = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 1)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriTrapVarMACAddress"), ("ORiNOCO-MIB", "oriTrapVarTaskSuspended"))
if mibBuilder.loadTexts: oriTrapUnrecoverableSoftwareErrorDetected.setStatus('current')
oriTrapRADIUSServerNotResponding = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 2)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapRADIUSServerNotResponding.setStatus('current')
oriTrapModuleNotInitialized = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 3)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapModuleNotInitialized.setStatus('current')
oriTrapDeviceRebooting = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 5)).setObjects(("ORiNOCO-MIB", "oriTrapVarMACAddress"), ("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriSystemReboot"))
if mibBuilder.loadTexts: oriTrapDeviceRebooting.setStatus('current')
oriTrapTaskSuspended = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 6)).setObjects(("ORiNOCO-MIB", "oriTrapVarTaskSuspended"))
if mibBuilder.loadTexts: oriTrapTaskSuspended.setStatus('current')
oriTrapBootPFailed = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 7)).setObjects(("ORiNOCO-MIB", "oriTrapVarMACAddress"))
if mibBuilder.loadTexts: oriTrapBootPFailed.setStatus('current')
oriTrapDHCPFailed = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 8)).setObjects(("ORiNOCO-MIB", "oriTrapVarMACAddress"))
if mibBuilder.loadTexts: oriTrapDHCPFailed.setStatus('current')
oriTrapDNSClientLookupFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 9)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapDNSClientLookupFailure.setStatus('current')
oriTrapSNTPFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 10))
if mibBuilder.loadTexts: oriTrapSNTPFailure.setStatus('current')
oriTrapMaximumNumberOfSubscribersReached = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 11))
if mibBuilder.loadTexts: oriTrapMaximumNumberOfSubscribersReached.setStatus('current')
oriTrapSSLInitializationFailure = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 12))
if mibBuilder.loadTexts: oriTrapSSLInitializationFailure.setStatus('current')
oriTrapWirelessServiceShutdown = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 13)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWirelessServiceShutdown.setStatus('current')
oriTrapWirelessServiceResumed = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 14)).setObjects(("ORiNOCO-MIB", "oriTrapVarWirelessCard"))
if mibBuilder.loadTexts: oriTrapWirelessServiceResumed.setStatus('current')
oriTrapSSHInitializationStatus = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 15)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapSSHInitializationStatus.setStatus('current')
oriTrapVLANIDUserAssignment = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 16)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapVLANIDUserAssignment.setStatus('current')
oriTrapDHCPLeaseRenewal = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 17)).setObjects(("ORiNOCO-MIB", "oriTrapVarDHCPServerIPAddress"), ("ORiNOCO-MIB", "oriTrapVarIPAddress"), ("ORiNOCO-MIB", "oriTrapVarSubnetMask"), ("ORiNOCO-MIB", "oriTrapVarDefaultRouterIPAddress"))
if mibBuilder.loadTexts: oriTrapDHCPLeaseRenewal.setStatus('current')
oriTrapTemperatureAlert = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 5, 0, 18)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"), ("ORiNOCO-MIB", "oriUnitTemp"))
if mibBuilder.loadTexts: oriTrapTemperatureAlert.setStatus('current')
oriFlashTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 6))
if mibBuilder.loadTexts: oriFlashTraps.setStatus('current')
oriTrapFlashMemoryEmpty = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 6, 0, 1))
if mibBuilder.loadTexts: oriTrapFlashMemoryEmpty.setStatus('current')
oriTrapFlashMemoryCorrupted = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 6, 0, 2)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapFlashMemoryCorrupted.setStatus('current')
oriTrapFlashMemoryRestoringLastKnownGoodConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 6, 0, 3))
if mibBuilder.loadTexts: oriTrapFlashMemoryRestoringLastKnownGoodConfiguration.setStatus('current')
oriTFTPTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 7))
if mibBuilder.loadTexts: oriTFTPTraps.setStatus('current')
oriTrapTFTPFailedOperation = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 7, 0, 1)).setObjects(("ORiNOCO-MIB", "oriTrapVarTFTPIPAddress"), ("ORiNOCO-MIB", "oriTrapVarTFTPFilename"), ("ORiNOCO-MIB", "oriTrapVarTFTPOperation"))
if mibBuilder.loadTexts: oriTrapTFTPFailedOperation.setStatus('current')
oriTrapTFTPOperationInitiated = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 7, 0, 2)).setObjects(("ORiNOCO-MIB", "oriTrapVarTFTPIPAddress"), ("ORiNOCO-MIB", "oriTrapVarTFTPFilename"), ("ORiNOCO-MIB", "oriTrapVarTFTPOperation"))
if mibBuilder.loadTexts: oriTrapTFTPOperationInitiated.setStatus('current')
oriTrapTFTPOperationCompleted = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 7, 0, 3)).setObjects(("ORiNOCO-MIB", "oriTrapVarTFTPIPAddress"), ("ORiNOCO-MIB", "oriTrapVarTFTPFilename"), ("ORiNOCO-MIB", "oriTrapVarTFTPOperation"))
if mibBuilder.loadTexts: oriTrapTFTPOperationCompleted.setStatus('current')
oriMiscTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 8))
if mibBuilder.loadTexts: oriMiscTraps.setStatus('current')
oriImageTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 9))
if mibBuilder.loadTexts: oriImageTraps.setStatus('current')
oriTrapZeroSizeImage = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 9, 0, 1))
if mibBuilder.loadTexts: oriTrapZeroSizeImage.setStatus('current')
oriTrapInvalidImage = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 9, 0, 2))
if mibBuilder.loadTexts: oriTrapInvalidImage.setStatus('current')
oriTrapImageTooLarge = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 9, 0, 3))
if mibBuilder.loadTexts: oriTrapImageTooLarge.setStatus('current')
oriTrapIncompatibleImage = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 9, 0, 4))
if mibBuilder.loadTexts: oriTrapIncompatibleImage.setStatus('current')
oriTrapInvalidImageDigitalSignature = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 9, 0, 5))
if mibBuilder.loadTexts: oriTrapInvalidImageDigitalSignature.setStatus('current')
oriWORPTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 11))
if mibBuilder.loadTexts: oriWORPTraps.setStatus('current')
oriWORPStationRegister = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 11, 0, 1)).setObjects(("ORiNOCO-MIB", "oriTrapVarInterface"), ("ORiNOCO-MIB", "oriTrapVarMACAddress"))
if mibBuilder.loadTexts: oriWORPStationRegister.setStatus('current')
oriWORPStationDeRegister = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 11, 0, 2)).setObjects(("ORiNOCO-MIB", "oriTrapVarInterface"), ("ORiNOCO-MIB", "oriTrapVarMACAddress"))
if mibBuilder.loadTexts: oriWORPStationDeRegister.setStatus('current')
oriSysFeatureTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 12))
if mibBuilder.loadTexts: oriSysFeatureTraps.setStatus('current')
oriTrapIncompatibleLicenseFile = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 12, 0, 1)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapIncompatibleLicenseFile.setStatus('current')
oriTrapFeatureNotSupported = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 12, 0, 2)).setObjects(("ORiNOCO-MIB", "oriSystemFeatureTableCode"))
if mibBuilder.loadTexts: oriTrapFeatureNotSupported.setStatus('current')
oriTrapZeroLicenseFiles = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 12, 0, 3))
if mibBuilder.loadTexts: oriTrapZeroLicenseFiles.setStatus('current')
oriTrapInvalidLicenseFile = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 12, 0, 4)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapInvalidLicenseFile.setStatus('current')
oriTrapUselessLicense = NotificationType((1, 3, 6, 1, 4, 1, 11898, 2, 1, 18, 12, 0, 5)).setObjects(("ORiNOCO-MIB", "oriGenericTrapVariable"))
if mibBuilder.loadTexts: oriTrapUselessLicense.setStatus('current')
mibBuilder.exportSymbols("ORiNOCO-MIB", oriRADIUSSvrTableSharedSecret=oriRADIUSSvrTableSharedSecret, oriWORPIfSatStatTablePollNoReplies=oriWORPIfSatStatTablePollNoReplies, oriQoSDot1dPriority=oriQoSDot1dPriority, oriRADIUSMACAccessControl=oriRADIUSMACAccessControl, oriSystemFeatureTableEntry=oriSystemFeatureTableEntry, oriPPPoESessionWANManualConnect=oriPPPoESessionWANManualConnect, oriConfigFileTableIndex=oriConfigFileTableIndex, oriWORPIfDDRSMinReqSNRdot11an54Mbps=oriWORPIfDDRSMinReqSNRdot11an54Mbps, oriNATPublicIPAddress=oriNATPublicIPAddress, oriTrapDuplicateIPAddressEncountered=oriTrapDuplicateIPAddressEncountered, oriRADIUSSvrTableMACAddressFormat=oriRADIUSSvrTableMACAddressFormat, oriWORPIfSatStatTableLocalTxRate=oriWORPIfSatStatTableLocalTxRate, oriQoSDot1DToIPDSCPMappingTableRowStatus=oriQoSDot1DToIPDSCPMappingTableRowStatus, tmp11=tmp11, oriRogueScanResultsTableIndex=oriRogueScanResultsTableIndex, as2000=as2000, orinocoSys=orinocoSys, as1000=as1000, oriTelnetPort=oriTelnetPort, oriRADIUSSvrTableProfileIndex=oriRADIUSSvrTableProfileIndex, oriIAPPAnnounceRequestSent=oriIAPPAnnounceRequestSent, oriTrapModuleNotInitialized=oriTrapModuleNotInitialized, orinocoDHCP=orinocoDHCP, oriPPPoESessionBindingsNumberACSystemErrors=oriPPPoESessionBindingsNumberACSystemErrors, oriIntraCellBlockingMACTableIndex=oriIntraCellBlockingMACTableIndex, oriIAPPMACIPTableIndex=oriIAPPMACIPTableIndex, oriLinkIntPollInterval=oriLinkIntPollInterval, oriConfigSaveKnownGood=oriConfigSaveKnownGood, oriDHCPServerStatus=oriDHCPServerStatus, oriSystemAccessLoginTimeout=oriSystemAccessLoginTimeout, orinocoWORPIfBSUStatAverageRemoteNoise=orinocoWORPIfBSUStatAverageRemoteNoise, VlanId=VlanId, oriStationStatTableLastInPktTime=oriStationStatTableLastInPktTime, oriWirelessIfNetworkName=oriWirelessIfNetworkName, oriIntraCellBlockingMACTableEntry=oriIntraCellBlockingMACTableEntry, oriIAPPPDUsDropped=oriIAPPPDUsDropped, oriBroadcastFilteringTable=oriBroadcastFilteringTable, oriRADIUSAuthClientAuthInvalidAuthenticators=oriRADIUSAuthClientAuthInvalidAuthenticators, oriSecurityProfileTableEncryptionKeyLength=oriSecurityProfileTableEncryptionKeyLength, oriStationStatTableInDiscards=oriStationStatTableInDiscards, oriIntraCellBlockingMACTableGroupID13=oriIntraCellBlockingMACTableGroupID13, oriStationStatTable=oriStationStatTable, oriWirelessIfSSIDTableRADIUSMACAuthProfile=oriWirelessIfSSIDTableRADIUSMACAuthProfile, oriIAPPMACIPTableSystemName=oriIAPPMACIPTableSystemName, oriHTTPWebSiteFilename=oriHTTPWebSiteFilename, oriTrapFlashMemoryRestoringLastKnownGoodConfiguration=oriTrapFlashMemoryRestoringLastKnownGoodConfiguration, oriSNMPTrapHostTableEntryStatus=oriSNMPTrapHostTableEntryStatus, orinocoWORPIfSatConfig=orinocoWORPIfSatConfig, oriIAPPHandoverResponseReceived=oriIAPPHandoverResponseReceived, oriSNMPReadWritePassword=oriSNMPReadWritePassword, oriWORPIfSatConfigTableIndex=oriWORPIfSatConfigTableIndex, oriWirelessIfSecurityEntry=oriWirelessIfSecurityEntry, oriWORPIfSatStatTablePollNoData=oriWORPIfSatStatTablePollNoData, oriTrapDHCPLeaseRenewal=oriTrapDHCPLeaseRenewal, oriRADIUSAuthServerTable=oriRADIUSAuthServerTable, oriTrapInvalidLicenseFile=oriTrapInvalidLicenseFile, oriTrapVarTaskSuspended=oriTrapVarTaskSuspended, orinocoAOL=orinocoAOL, oriEthernetIfConfigTable=oriEthernetIfConfigTable, oriWirelessIfBandwidthLimitOut=oriWirelessIfBandwidthLimitOut, oriWirelessIfRegulatoryDomainList=oriWirelessIfRegulatoryDomainList, oriWirelessIfSSIDTableEncryptionKey3=oriWirelessIfSSIDTableEncryptionKey3, oriWirelessIfDistancebetweenAPs=oriWirelessIfDistancebetweenAPs, orinocoTrap=orinocoTrap, oriIntraCellBlockingMACTableGroupID10=oriIntraCellBlockingMACTableGroupID10, oriSyslogPriority=oriSyslogPriority, oriWirelessIfDenyNonEncryptedData=oriWirelessIfDenyNonEncryptedData, oriWORPIfStatTableReceiveFailures=oriWORPIfStatTableReceiveFailures, oriLinkTestOurMaxNoiseLevel=oriLinkTestOurMaxNoiseLevel, oriLinkTestHisCurSignalLevel=oriLinkTestHisCurSignalLevel, oriRADIUSAcctStatus=oriRADIUSAcctStatus, oriHTTPWebSitenameTable=oriHTTPWebSitenameTable, oriLinkTestInProgress=oriLinkTestInProgress, oriDMZHostTableEntry=oriDMZHostTableEntry, oriOEMNoNavLogoImageFile=oriOEMNoNavLogoImageFile, orinocoWORPIfDDRS=orinocoWORPIfDDRS, oriRADIUSAuthServerDestPort=oriRADIUSAuthServerDestPort, oriWirelessIfLoadBalancing=oriWirelessIfLoadBalancing, orinocoIPARP=orinocoIPARP, oriHTTPSetupWizardStatus=oriHTTPSetupWizardStatus, oriSNMPAccessTableEntryStatus=oriSNMPAccessTableEntryStatus, oriProtocolFilterTableEntry=oriProtocolFilterTableEntry, oriTFTPDowngrade=oriTFTPDowngrade, oriRADScanResultsTableIndex=oriRADScanResultsTableIndex, oriDMZHostTableIndex=oriDMZHostTableIndex, oriWirelessIfTurboModeStatus=oriWirelessIfTurboModeStatus, oriWORPIfConfigTable=oriWORPIfConfigTable, oriWORPIfSiteSurveyLocalSignalLevel=oriWORPIfSiteSurveyLocalSignalLevel, oriSystemInvMgmtInterfaceVariant=oriSystemInvMgmtInterfaceVariant, orinocoVLAN=orinocoVLAN, oriTrapRogueScanCycleComplete=oriTrapRogueScanCycleComplete, oriTrapDNSClientLookupFailure=oriTrapDNSClientLookupFailure, orinocoStationStatistics=orinocoStationStatistics, oriAccessControlTableComment=oriAccessControlTableComment, oriTelnetIdleTimeout=oriTelnetIdleTimeout, oriSecurityProfileTableAuthenticationMode=oriSecurityProfileTableAuthenticationMode, oriRADIUSAuthorizationLifeTime=oriRADIUSAuthorizationLifeTime, oriDMZHostTableHostIP=oriDMZHostTableHostIP, oriFlashTraps=oriFlashTraps, oriQoSDot1DToIPDSCPMappingTableEntry=oriQoSDot1DToIPDSCPMappingTableEntry, oriTrapZeroLicenseFiles=oriTrapZeroLicenseFiles, oriSerialFlowControl=oriSerialFlowControl, ap2000=ap2000, oriDHCPRelayDHCPServerTableEntryStatus=oriDHCPRelayDHCPServerTableEntryStatus, oriStaticMACAddressFilterComment=oriStaticMACAddressFilterComment, oriWORPIfDDRSMinReqSNRdot11at36Mbps=oriWORPIfDDRSMinReqSNRdot11at36Mbps, oriWORPIfSatStatTableReplyData=oriWORPIfSatStatTableReplyData, oriSystemInvMgmtComponentTableEntry=oriSystemInvMgmtComponentTableEntry, oriRADIUSLocalUserPassword=oriRADIUSLocalUserPassword, oriWORPIfStatTableAuthenticationConfirms=oriWORPIfStatTableAuthenticationConfirms, oriNATStaticIPBindTableIndex=oriNATStaticIPBindTableIndex, oriTrapFlashMemoryCorrupted=oriTrapFlashMemoryCorrupted, oriSNMPAuthorizedManagerCount=oriSNMPAuthorizedManagerCount, oriNATStaticBindStatus=oriNATStaticBindStatus, orinocoSysInvMgmt=orinocoSysInvMgmt, oriPortFilterTableEntryStatus=oriPortFilterTableEntryStatus, oriLinkTestRadioType=oriLinkTestRadioType, oriRADIUSSvrTableMaximumRetransmission=oriRADIUSSvrTableMaximumRetransmission, oriWirelessIfACSFrequencyBandScan=oriWirelessIfACSFrequencyBandScan, oriRADIUSAuthClientStatTableBadAuthenticators=oriRADIUSAuthClientStatTableBadAuthenticators, oriTrapVarIPAddress=oriTrapVarIPAddress, oriRogueScanConfigTableEntry=oriRogueScanConfigTableEntry, oriRogueScanResultsTable=oriRogueScanResultsTable, oriSecurityProfileTableIndex=oriSecurityProfileTableIndex, oriPPPoESessionBindingsNumberGenericErrorsTx=oriPPPoESessionBindingsNumberGenericErrorsTx, oriOEMName=oriOEMName, oriTrapImageTooLarge=oriTrapImageTooLarge, oriLinkTestOurCurSignalLevel=oriLinkTestOurCurSignalLevel, oriIAPPStatus=oriIAPPStatus, oriVLANMgmtIdentifier=oriVLANMgmtIdentifier, oriWORPIfSiteSurveyOperation=oriWORPIfSiteSurveyOperation, oriHTTPSSLPassphrase=oriHTTPSSLPassphrase, oriStationStatTableMACAddress=oriStationStatTableMACAddress, oriSNMPAccessTableEntry=oriSNMPAccessTableEntry, oriWDSSetupTableEntryStatus=oriWDSSetupTableEntryStatus, oriSecurityGwStatus=oriSecurityGwStatus, oriNetworkIPDefaultTTL=oriNetworkIPDefaultTTL, oriDNSRedirectStatus=oriDNSRedirectStatus, oriIBSSTrafficOperation=oriIBSSTrafficOperation, oriSyslogHostTableEntry=oriSyslogHostTableEntry, oriNetworkIPConfigSubnetMask=oriNetworkIPConfigSubnetMask, oriWORPIfDDRSMinReqSNRdot11at96Mbps=oriWORPIfDDRSMinReqSNRdot11at96Mbps, oriRADIUSAuthClientAccessAccepts=oriRADIUSAuthClientAccessAccepts, oriWirelessIfSuperModeStatus=oriWirelessIfSuperModeStatus, oriRADIUSAuthClientStatTableAccessChallenges=oriRADIUSAuthClientStatTableAccessChallenges, oriTrapUnauthorizedManagerDetected=oriTrapUnauthorizedManagerDetected, oriWirelessIfTraps=oriWirelessIfTraps, oriIAPPHandoverTimeout=oriIAPPHandoverTimeout, oriSyslogHeartbeatStatus=oriSyslogHeartbeatStatus, oriStormThresholdIfMulticast=oriStormThresholdIfMulticast, oriWirelessIfSecurityTable=oriWirelessIfSecurityTable, oriTrapInvalidImage=oriTrapInvalidImage, oriWORPIfSiteSurveyCurrentSatRegistered=oriWORPIfSiteSurveyCurrentSatRegistered, oriWORPIfDDRSMinReqSNRdot11an48Mbps=oriWORPIfDDRSMinReqSNRdot11an48Mbps, oriQoSDot1DToDot1pMappingTableIndex=oriQoSDot1DToDot1pMappingTableIndex, oriStationStatTableInNUcastPkts=oriStationStatTableInNUcastPkts, oriRADIUSbasedManagementAccessProfile=oriRADIUSbasedManagementAccessProfile, oriWORPIfDDRSMaxDataRate=oriWORPIfDDRSMaxDataRate, oriIAPPAnnounceResponseSent=oriIAPPAnnounceResponseSent, oriOperationalTraps=oriOperationalTraps, oriTrapWLCNotPresent=oriTrapWLCNotPresent, orinocoRADIUSAcct=orinocoRADIUSAcct, oriWirelessIfQoSStatus=oriWirelessIfQoSStatus, oriWORPIfStatTableRegistrationRejects=oriWORPIfStatTableRegistrationRejects, oriIntraCellBlockingMACTableMACAddress=oriIntraCellBlockingMACTableMACAddress, oriTrapVarUnauthorizedClientMACAddress=oriTrapVarUnauthorizedClientMACAddress, oriTrapWLCRadarInterferenceDetected=oriTrapWLCRadarInterferenceDetected, oriTrapTemperatureAlert=oriTrapTemperatureAlert, oriDHCPServerIPPoolTableDefaultLeaseTime=oriDHCPServerIPPoolTableDefaultLeaseTime, oriWirelessIfLBAdjAPTimeDiffThreshold=oriWirelessIfLBAdjAPTimeDiffThreshold, orinocoGroups=orinocoGroups, oriHTTPWebSiteDescription=oriHTTPWebSiteDescription, ap600=ap600, oriOEMLogoImageFile=oriOEMLogoImageFile, oriWirelessIfSupportedMulticastRates=oriWirelessIfSupportedMulticastRates, oriSNTPYear=oriSNTPYear, oriHTTPPort=oriHTTPPort, oriRADIUSAcctClientAccountingRequests=oriRADIUSAcctClientAccountingRequests, oriWORPIfStatTableAverageLocalNoise=oriWORPIfStatTableAverageLocalNoise, oriWORPIfSatStatTableAverageRemoteSignal=oriWORPIfSatStatTableAverageRemoteSignal, oriEthernetIfConfigBandwidthLimitOut=oriEthernetIfConfigBandwidthLimitOut, oriWORPIfStatTableSendFailures=oriWORPIfStatTableSendFailures, oriSNMPErrorMessage=oriSNMPErrorMessage, oriRADIUSAuthClientAccessRequests=oriRADIUSAuthClientAccessRequests, oriRADIUSAcctClientStatTableAccountingResponses=oriRADIUSAcctClientStatTableAccountingResponses, oriSecurityProfileTableEncryptionKey0=oriSecurityProfileTableEncryptionKey0, oriRADIUSSvrTableAuthorizationLifeTime=oriRADIUSSvrTableAuthorizationLifeTime, oriImageTraps=oriImageTraps, oriWORPIfStatTableAverageLocalSignal=oriWORPIfStatTableAverageLocalSignal, oriTrapVarBatchCLIMessage=oriTrapVarBatchCLIMessage, oriRADIUSAuthClientStatTableTimeouts=oriRADIUSAuthClientStatTableTimeouts, oriTrapBatchExecFailure=oriTrapBatchExecFailure, oriVLANIDTable=oriVLANIDTable, oriAccessControlStatus=oriAccessControlStatus, oriRADIUSAcctServerTableIndex=oriRADIUSAcctServerTableIndex, orinocoTelnet=orinocoTelnet, oriHTTPWebSitenameTableStatus=oriHTTPWebSitenameTableStatus, oriPPPoESessionIdleTimeOut=oriPPPoESessionIdleTimeOut, oriTrapWLCFirmwareFailure=oriTrapWLCFirmwareFailure, oriWirelessIfSSIDTableSSIDAuthorizationStatus=oriWirelessIfSSIDTableSSIDAuthorizationStatus, oriRADIUSSvrTableAccountingInactivityTimer=oriRADIUSSvrTableAccountingInactivityTimer, oriSecurityTrapsStatus=oriSecurityTrapsStatus, oriTrapUnrecoverableSoftwareErrorDetected=oriTrapUnrecoverableSoftwareErrorDetected, oriBroadcastFilteringDirection=oriBroadcastFilteringDirection, oriRADIUSAuthServerTableEntryStatus=oriRADIUSAuthServerTableEntryStatus, oriQoSDot1DToIPDSCPMappingTable=oriQoSDot1DToIPDSCPMappingTable, oriRADLastSuccessfulScanTime=oriRADLastSuccessfulScanTime, oriRogueScanResultsMACAddress=oriRogueScanResultsMACAddress, oriIAPPAnnounceRequestReceived=oriIAPPAnnounceRequestReceived, oriPPPoESessionBindingsNumberMalformedPackets=oriPPPoESessionBindingsNumberMalformedPackets, oriPortFilterTableEntryPort=oriPortFilterTableEntryPort, oriLinkTestHisMaxNoiseLevel=oriLinkTestHisMaxNoiseLevel, rg1100=rg1100, oriWirelessIfQoSMaxMediumThreshold=oriWirelessIfQoSMaxMediumThreshold, orinocoTFTP=orinocoTFTP, oriWORPIfConfigTableNetworkSecret=oriWORPIfConfigTableNetworkSecret, oriWirelessIfInterferenceRobustness=oriWirelessIfInterferenceRobustness, oriWORPIfSatConfigTableMaximumBandwidthLimitDownlink=oriWORPIfSatConfigTableMaximumBandwidthLimitDownlink, oriRADIUSAuthClientStatTableAccessRequests=oriRADIUSAuthClientStatTableAccessRequests, oriWORPIfSatConfigTableMaximumBandwidthLimitUplink=oriWORPIfSatConfigTableMaximumBandwidthLimitUplink, orinocoWDS=orinocoWDS, oriWORPIfSatStatTableSendSuccess=oriWORPIfSatStatTableSendSuccess, oriTrapRADScanComplete=oriTrapRADScanComplete, oriSNMPAccessTable=oriSNMPAccessTable, oriWirelessIfEncryptionKey4=oriWirelessIfEncryptionKey4, oriUPSDRoamingReserved=oriUPSDRoamingReserved, oriTrapMaximumNumberOfSubscribersReached=oriTrapMaximumNumberOfSubscribersReached, oriNATStaticPortBindStartPortNumber=oriNATStaticPortBindStartPortNumber, oriWirelessIfTxRate=oriWirelessIfTxRate, oriWORPIfSatConfigTableEntryStatus=oriWORPIfSatConfigTableEntryStatus, oriDHCPClientID=oriDHCPClientID, oriStaticMACAddressFilterWirelessAddress=oriStaticMACAddressFilterWirelessAddress, oriSystemContactEmail=oriSystemContactEmail, oriRADIUSAuthServerTableEntry=oriRADIUSAuthServerTableEntry, oriLinkTestOurMediumFrameCount=oriLinkTestOurMediumFrameCount, oriIAPPAnnounceResponseReceived=oriIAPPAnnounceResponseReceived, oriRADInterval=oriRADInterval, oriPPPoENumberOfActiveSessions=oriPPPoENumberOfActiveSessions, oriWORPIfStatTablePollData=oriWORPIfStatTablePollData, oriDHCPRelayDHCPServerTableIndex=oriDHCPRelayDHCPServerTableIndex, oriStationStatTableName=oriStationStatTableName, oriWirelessIfSecurityIndex=oriWirelessIfSecurityIndex, oriAccessControlEntry=oriAccessControlEntry, oriIAPPHandoverResponseSent=oriIAPPHandoverResponseSent, oriIAPPMACIPTableEntry=oriIAPPMACIPTableEntry, oriQoSPolicyType=oriQoSPolicyType, oriRADIUSSvrTableAddressingFormat=oriRADIUSSvrTableAddressingFormat, oriSNMPAccessTableStatus=oriSNMPAccessTableStatus, oriSNTPTimeZone=oriSNTPTimeZone, oriWORPIfSiteSurveyLocalSNR=oriWORPIfSiteSurveyLocalSNR, oriWORPIfSatConfigTable=oriWORPIfSatConfigTable, oriRogueScanResultsNotificationMode=oriRogueScanResultsNotificationMode, oriDHCPServerIPPoolTableIndex=oriDHCPServerIPPoolTableIndex, oriTempLoggingInterval=oriTempLoggingInterval)
mibBuilder.exportSymbols("ORiNOCO-MIB", oriDHCPServerIPPoolTableComment=oriDHCPServerIPPoolTableComment, oriIntraCellBlockingMACTableGroupID1=oriIntraCellBlockingMACTableGroupID1, oriNATStaticPortBindLocalAddress=oriNATStaticPortBindLocalAddress, oriNetworkIPConfigIPAddress=oriNetworkIPConfigIPAddress, oriWDSSetupTable=oriWDSSetupTable, ap2500=ap2500, oriSecurityConfigTableEncryptionKeyLength=oriSecurityConfigTableEncryptionKeyLength, orinocoLinkTest=orinocoLinkTest, oriWORPIfSiteSurveyRemoteSignalLevel=oriWORPIfSiteSurveyRemoteSignalLevel, oriStationStatTableRemoteNoise=oriStationStatTableRemoteNoise, oriWirelessIfTxPowerControl=oriWirelessIfTxPowerControl, oriEthernetIfConfigBandwidthLimitIn=oriEthernetIfConfigBandwidthLimitIn, oriBroadcastFilteringTableIndex=oriBroadcastFilteringTableIndex, oriIPARPFilteringIPAddress=oriIPARPFilteringIPAddress, oriQoSPolicyTableEntry=oriQoSPolicyTableEntry, oriIntraCellBlockingMACTableGroupID6=oriIntraCellBlockingMACTableGroupID6, orinocoTempLog=orinocoTempLog, oriWirelessIfTPCMode=oriWirelessIfTPCMode, orinocoNetIP=orinocoNetIP, orinocoConfig=orinocoConfig, oriWirelessIfEncryptionStatus=oriWirelessIfEncryptionStatus, WEPKeyType=WEPKeyType, oriWORPIfDDRSMinReqSNRdot11an36Mbps=oriWORPIfDDRSMinReqSNRdot11an36Mbps, oriWDSSecurityTable=oriWDSSecurityTable, oriDNSRedirectMaxResponseWaitTime=oriDNSRedirectMaxResponseWaitTime, oriSyslogHostTableEntryStatus=oriSyslogHostTableEntryStatus, oriPPPoEMACtoSessionTableIndex=oriPPPoEMACtoSessionTableIndex, oriLinkIntTable=oriLinkIntTable, oriTelnetInterfaceBitmask=oriTelnetInterfaceBitmask, oriWirelessIfAllowedChannels=oriWirelessIfAllowedChannels, oriSecurityEncryptionKeyLength=oriSecurityEncryptionKeyLength, oriRADInterfaceBitmask=oriRADInterfaceBitmask, oriTrapWLCIncompatibleVendor=oriTrapWLCIncompatibleVendor, orinocoObjects=orinocoObjects, oriPPPoESessionISPName=oriPPPoESessionISPName, oriRADIUSAcctClientStatTableEntry=oriRADIUSAcctClientStatTableEntry, oriIfWANInterfaceMACAddress=oriIfWANInterfaceMACAddress, oriNATStaticIPBindTable=oriNATStaticIPBindTable, oriDNSClientSecondaryServerIPAddress=oriDNSClientSecondaryServerIPAddress, oriNATStaticIPBindTableEntry=oriNATStaticIPBindTableEntry, oriHTTPPassword=oriHTTPPassword, oriRADIUSAuthClientAccessRetransmissions=oriRADIUSAuthClientAccessRetransmissions, oriSerialBaudRate=oriSerialBaudRate, oriIPARPFilteringSubnetMask=oriIPARPFilteringSubnetMask, oriLinkTestHisMaxSignalLevel=oriLinkTestHisMaxSignalLevel, oriTrapWirelessServiceShutdown=oriTrapWirelessServiceShutdown, oriRogueScanConfigTableScanMode=oriRogueScanConfigTableScanMode, oriTrapWLCRemoval=oriTrapWLCRemoval, oriWirelessIfAntenna=oriWirelessIfAntenna, oriWirelessIfSSIDTableRADIUSAccountingStatus=oriWirelessIfSSIDTableRADIUSAccountingStatus, oriPPPoESessionConnectTime=oriPPPoESessionConnectTime, oriIntraCellBlockingMACTableGroupID9=oriIntraCellBlockingMACTableGroupID9, oriProtocolFilterOperationType=oriProtocolFilterOperationType, oriStationStatStatus=oriStationStatStatus, oriWORPIfDDRSMinReqSNRdot11at12Mbps=oriWORPIfDDRSMinReqSNRdot11at12Mbps, oriStaticMACAddressFilterTableIndex=oriStaticMACAddressFilterTableIndex, oriSNTPSeconds=oriSNTPSeconds, orinocoProducts=orinocoProducts, oriIAPPRoamingClients=oriIAPPRoamingClients, oriDHCPRelayDHCPServerTableComment=oriDHCPRelayDHCPServerTableComment, oriStationStatTableAdminStatus=oriStationStatTableAdminStatus, orinocoNotifications=orinocoNotifications, oriWirelessIfProtectionMechanismStatus=oriWirelessIfProtectionMechanismStatus, oriUnitTemp=oriUnitTemp, oriPortFilterOperationType=oriPortFilterOperationType, orinocoDHCPServer=orinocoDHCPServer, oriSystemInvMgmtInterfaceTopNumber=oriSystemInvMgmtInterfaceTopNumber, oriWORPIfStatTableRegistrationTimeouts=oriWORPIfStatTableRegistrationTimeouts, oriRADIUSSvrTableAccountingUpdateInterval=oriRADIUSSvrTableAccountingUpdateInterval, oriDHCPServerSubnetMask=oriDHCPServerSubnetMask, oriHTTPRADIUSAccessControl=oriHTTPRADIUSAccessControl, orinocoQoS=orinocoQoS, oriWirelessIfPropertiesTable=oriWirelessIfPropertiesTable, oriWirelessIfMediumReservation=oriWirelessIfMediumReservation, oriUPSDGPRInterval=oriUPSDGPRInterval, orinocoDNS=orinocoDNS, oriWirelessIfWSSStatus=oriWirelessIfWSSStatus, oriWirelessIfSSIDTableMACAccessControl=oriWirelessIfSSIDTableMACAccessControl, oriWORPIfSatStatTableIndex=oriWORPIfSatStatTableIndex, oriWORPIfSatStatTableRequestForService=oriWORPIfSatStatTableRequestForService, oriSNTPDateAndTime=oriSNTPDateAndTime, oriProtocolFilterInterfaceBitmask=oriProtocolFilterInterfaceBitmask, oriPPPoESessionTableStatus=oriPPPoESessionTableStatus, oriRADIUSAuthClientStatTableMalformedAccessResponses=oriRADIUSAuthClientStatTableMalformedAccessResponses, oriRADIUSSvrTablePrimaryOrSecondaryIndex=oriRADIUSSvrTablePrimaryOrSecondaryIndex, oriTrapSNTPFailure=oriTrapSNTPFailure, oriTrapVarTFTPFilename=oriTrapVarTFTPFilename, oriWirelessIfTrapsStatus=oriWirelessIfTrapsStatus, oriSystemEventLogTableReset=oriSystemEventLogTableReset, oriWirelessIfSSIDTableRekeyingInterval=oriWirelessIfSSIDTableRekeyingInterval, oriTrapRADIUSAuthenticationNotConfigured=oriTrapRADIUSAuthenticationNotConfigured, oriRADScanResultsTable=oriRADScanResultsTable, oriUPSDMaxActiveSU=oriUPSDMaxActiveSU, orinocoUPSD=orinocoUPSD, oriRogueScanResultsTableClearEntries=oriRogueScanResultsTableClearEntries, oriWORPIfStatTablePollNoReplies=oriWORPIfStatTablePollNoReplies, oriStationStatTableLastChange=oriStationStatTableLastChange, oriSystemAccessMaxSessions=oriSystemAccessMaxSessions, orinocoCompliances=orinocoCompliances, oriSecurityConfigTable=oriSecurityConfigTable, oriTrapTFTPOperationInitiated=oriTrapTFTPOperationInitiated, oriRADIUSSvrTableResponseTime=oriRADIUSSvrTableResponseTime, orinoco=orinoco, oriWirelessIfSSIDTableSecurityProfile=oriWirelessIfSSIDTableSecurityProfile, oriWORPIfSatConfigTableMinimumBandwidthLimitUplink=oriWORPIfSatConfigTableMinimumBandwidthLimitUplink, oriWORPIfDDRSDataRateDecReqSNRThreshold=oriWORPIfDDRSDataRateDecReqSNRThreshold, oriRADIUSAuthClientMalformedAccessResponses=oriRADIUSAuthClientMalformedAccessResponses, oriRADIUSAcctServerNameOrIPAddress=oriRADIUSAcctServerNameOrIPAddress, oriWORPIfDDRSMinReqSNRdot11at18Mbps=oriWORPIfDDRSMinReqSNRdot11at18Mbps, oriLinkIntTableEntryStatus=oriLinkIntTableEntryStatus, oriStationStatTableLastState=oriStationStatTableLastState, oriSNTPPrimaryServerNameOrIPAddress=oriSNTPPrimaryServerNameOrIPAddress, oriDHCPServerPrimaryDNSIPAddress=oriDHCPServerPrimaryDNSIPAddress, oriWORPIfDDRSMinReqSNRdot11at72Mbps=oriWORPIfDDRSMinReqSNRdot11at72Mbps, oriIntraCellBlockingMACTable=oriIntraCellBlockingMACTable, orinocoWORPIf=orinocoWORPIf, oriStationStatTableOutNUcastPkts=oriStationStatTableOutNUcastPkts, oriLinkTestStationProfile=oriLinkTestStationProfile, oriWirelessIfSSIDTableEntry=oriWirelessIfSSIDTableEntry, oriSNMPTrapHostTable=oriSNMPTrapHostTable, oriTrapSSHInitializationStatus=oriTrapSSHInitializationStatus, oriWirelessIfSSIDTableEncryptionKey2=oriWirelessIfSSIDTableEncryptionKey2, oriSyslogHostTableIndex=oriSyslogHostTableIndex, oriWORPIfSatConfigTableMacAddress=oriWORPIfSatConfigTableMacAddress, oriRADIUSAcctInactivityTimer=oriRADIUSAcctInactivityTimer, oriIntraCellBlockingMACTableGroupID2=oriIntraCellBlockingMACTableGroupID2, oriProtocolFilterTableInterfaceBitmask=oriProtocolFilterTableInterfaceBitmask, oriIAPPMACIPTableBSSID=oriIAPPMACIPTableBSSID, oriStationStatTableRemoteSignal=oriStationStatTableRemoteSignal, orinocoWORPIfBSUStatAverageRemoteSignal=orinocoWORPIfBSUStatAverageRemoteSignal, oriEthernetIfConfigTableIndex=oriEthernetIfConfigTableIndex, oriNATStaticIPBindRemoteAddress=oriNATStaticIPBindRemoteAddress, oriNATStaticPortBindTableIndex=oriNATStaticPortBindTableIndex, oriSecurityConfigTableSupportedSecurityModes=oriSecurityConfigTableSupportedSecurityModes, oriRADIUSAcctServerDestPort=oriRADIUSAcctServerDestPort, oriTrapWLCVoltageDiscrepancy=oriTrapWLCVoltageDiscrepancy, oriSecurityProfileTableSecModeIndex=oriSecurityProfileTableSecModeIndex, oriStaticMACAddressFilterTableEntryStatus=oriStaticMACAddressFilterTableEntryStatus, oriTFTPAutoConfigServerIPAddress=oriTFTPAutoConfigServerIPAddress, oriWDSSetupTableEntry=oriWDSSetupTableEntry, oriSecurityProfileFourWEPKeySupport=oriSecurityProfileFourWEPKeySupport, oriIntraCellBlockingGroupTableEntry=oriIntraCellBlockingGroupTableEntry, oriPacketForwardingInterface=oriPacketForwardingInterface, oriIntraCellBlockingGroupTable=oriIntraCellBlockingGroupTable, oriSNMPTrapHostTableEntry=oriSNMPTrapHostTableEntry, oriProtocolFilterProtocol=oriProtocolFilterProtocol, oriDHCPServerIPPoolTable=oriDHCPServerIPPoolTable, oriWORPStationRegister=oriWORPStationRegister, oriWORPIfConfigTableMaxSatellites=oriWORPIfConfigTableMaxSatellites, oriWORPIfSatConfigTableMinimumBandwidthLimitDownlink=oriWORPIfSatConfigTableMinimumBandwidthLimitDownlink, oriProtocolFilterTableEntryStatus=oriProtocolFilterTableEntryStatus, oriDHCPServerNumIPPoolTableEntries=oriDHCPServerNumIPPoolTableEntries, orinocoPortFilter=orinocoPortFilter, oriWDSSetupTablePartnerMACAddress=oriWDSSetupTablePartnerMACAddress, oriStationStatTableIPAddress=oriStationStatTableIPAddress, oriWirelessIfSSIDTable=oriWirelessIfSSIDTable, oriPPPoEStatus=oriPPPoEStatus, oriBroadcastFilteringProtocolName=oriBroadcastFilteringProtocolName, oriNetworkIPDefaultRouterIPAddress=oriNetworkIPDefaultRouterIPAddress, oriSpectraLinkStatus=oriSpectraLinkStatus, oriStationStatTableEntry=oriStationStatTableEntry, oriSystemInvMgmtTableComponentMinorVersion=oriSystemInvMgmtTableComponentMinorVersion, oriTrapRADIUSAccountingNotConfigured=oriTrapRADIUSAccountingNotConfigured, oriDHCPServerSecondaryDNSIPAddress=oriDHCPServerSecondaryDNSIPAddress, oriTrapVLANIDInvalidConfiguration=oriTrapVLANIDInvalidConfiguration, oriSystemInvMgmtTableComponentIfTable=oriSystemInvMgmtTableComponentIfTable, oriRADIUSAuthClientStatTableEntry=oriRADIUSAuthClientStatTableEntry, oriPortFilterTableEntryPortType=oriPortFilterTableEntryPortType, oriWirelessIfMediumDensityDistribution=oriWirelessIfMediumDensityDistribution, oriStationStatNumberOfClients=oriStationStatNumberOfClients, oriLinkIntTableIndex=oriLinkIntTableIndex, oriWORPIfSiteSurveyRemoteSNR=oriWORPIfSiteSurveyRemoteSNR, orinocoWORPIfBSUStatAverageLocalNoise=orinocoWORPIfBSUStatAverageLocalNoise, oriLinkIntTableEntry=oriLinkIntTableEntry, orinocoDNSClient=orinocoDNSClient, oriWORPIfStatTable=oriWORPIfStatTable, oriWORPIfStatTableAuthenticationRequests=oriWORPIfStatTableAuthenticationRequests, oriWORPIfSiteSurveyBaseMACAddress=oriWORPIfSiteSurveyBaseMACAddress, oriSNMPAccessTableIPMask=oriSNMPAccessTableIPMask, oriTrapVarInterface=oriTrapVarInterface, oriPPPoEMACtoSessionTable=oriPPPoEMACtoSessionTable, oriWirelessIfEncryptionKey2=oriWirelessIfEncryptionKey2, oriRADIUSAuthServerAddressingFormat=oriRADIUSAuthServerAddressingFormat, oriRADIUSSvrTableRowStatus=oriRADIUSSvrTableRowStatus, oriStationStatTableOutOctets=oriStationStatTableOutOctets, oriEthernetIfConfigTableEntry=oriEthernetIfConfigTableEntry, oriQoSIPDSCPLowerLimit=oriQoSIPDSCPLowerLimit, oriWORPIfSatStatTableAverageLocalNoise=oriWORPIfSatStatTableAverageLocalNoise, oriLinkTestExplore=oriLinkTestExplore, oriWORPIfStatTableEntry=oriWORPIfStatTableEntry, orinocoWORPIfBSU=orinocoWORPIfBSU, oriPPPoESessionBindingsNumberServiceNameErrors=oriPPPoESessionBindingsNumberServiceNameErrors, oriSystemEventLogMask=oriSystemEventLogMask, oriWirelessIfDFSStatus=oriWirelessIfDFSStatus, oriRADIUSAuthServerTableIndex=oriRADIUSAuthServerTableIndex, oriLinkTestOurMaxSignalLevel=oriLinkTestOurMaxSignalLevel, orinocoWORPIfBSUStatRemoteTxRate=orinocoWORPIfBSUStatRemoteTxRate, orinocoStaticMACAddressFilter=orinocoStaticMACAddressFilter, oriWirelessIfSSIDTablePSKValue=oriWirelessIfSSIDTablePSKValue, oriSystemInvMgmtInterfaceBottomNumber=oriSystemInvMgmtInterfaceBottomNumber, oriWirelessIfPreambleType=oriWirelessIfPreambleType, oriLinkTestOurMaxSNR=oriLinkTestOurMaxSNR, oriStationStatTableInSignal=oriStationStatTableInSignal, oriBroadcastFilteringTableEntry=oriBroadcastFilteringTableEntry, oriNATStaticIPBindTableEntryStatus=oriNATStaticIPBindTableEntryStatus, oriRADIUSAcctServerSharedSecret=oriRADIUSAcctServerSharedSecret, oriWirelessIfBandwidthLimitIn=oriWirelessIfBandwidthLimitIn, oriWirelessIfProfileCode=oriWirelessIfProfileCode, oriTrapVarWirelessCard=oriTrapVarWirelessCard, oriTFTPTrapsStatus=oriTFTPTrapsStatus, oriStationStatTableInNoise=oriStationStatTableInNoise, oriAccessControlTable=oriAccessControlTable, oriStormThresholdTable=oriStormThresholdTable, oriTrapDHCPFailed=oriTrapDHCPFailed, oriSystemFlashBackupInterval=oriSystemFlashBackupInterval, oriTrapVLANIDUserAssignment=oriTrapVLANIDUserAssignment, oriLinkTestDataRateTableIndex=oriLinkTestDataRateTableIndex, oriSNMPReadPassword=oriSNMPReadPassword, oriSecurityEncryptionKeyLengthTable=oriSecurityEncryptionKeyLengthTable, oriWORPIfSatStatTableReceiveRetries=oriWORPIfSatStatTableReceiveRetries, orinocoSyslog=orinocoSyslog, oriSystemInvMgmtTableComponentName=oriSystemInvMgmtTableComponentName, oriLinkTestHisCurNoiseLevel=oriLinkTestHisCurNoiseLevel, oriRADIUSLocalUserStatus=oriRADIUSLocalUserStatus, oriSystemFeatureTableSupported=oriSystemFeatureTableSupported, oriPPPoESessionBindingsNumberPADTTx=oriPPPoESessionBindingsNumberPADTTx, oriConfigurationTraps=oriConfigurationTraps, oriWirelessIfAllowedSupportedDataRates=oriWirelessIfAllowedSupportedDataRates, InterfaceBitmask=InterfaceBitmask, oriIntraCellBlockingGroupTableEntryStatus=oriIntraCellBlockingGroupTableEntryStatus, oriPPPoESessionBindingsNumberGenericErrorsRx=oriPPPoESessionBindingsNumberGenericErrorsRx, oriProtocolFilterProtocolComment=oriProtocolFilterProtocolComment, oriWORPIfSatStatTableAverageLocalSignal=oriWORPIfSatStatTableAverageLocalSignal, orinocoWirelessIf=orinocoWirelessIf, oriSNMPTrapHostTableComment=oriSNMPTrapHostTableComment, oriSNTPDayLightSavingTime=oriSNTPDayLightSavingTime, oriLinkTestHisLowFrameCount=oriLinkTestHisLowFrameCount, oriRADIUSSvrTable=oriRADIUSSvrTable, oriSecurityTraps=oriSecurityTraps, oriDNSSecondaryDNSIPAddress=oriDNSSecondaryDNSIPAddress, oriTelnetPassword=oriTelnetPassword, oriIntraCellBlockingMACTableGroupID16=oriIntraCellBlockingMACTableGroupID16, oriSystemInvMgmtTableComponentIfTableEntry=oriSystemInvMgmtTableComponentIfTableEntry, oriWORPIfConfigTableNoSleepMode=oriWORPIfConfigTableNoSleepMode, ap1000=ap1000, oriIntraCellBlockingStatus=oriIntraCellBlockingStatus, oriProxyARPStatus=oriProxyARPStatus, oriNATStaticIPBindLocalAddress=oriNATStaticIPBindLocalAddress, oriWORPIfConfigTableMode=oriWORPIfConfigTableMode, oriRADIUSClientInvalidServerAddress=oriRADIUSClientInvalidServerAddress, oriQoSPolicyTable=oriQoSPolicyTable, oriHTTPWebSitenameTableIndex=oriHTTPWebSitenameTableIndex, oriRogueScanResultsBSSID=oriRogueScanResultsBSSID, oriLinkTestInterface=oriLinkTestInterface)
mibBuilder.exportSymbols("ORiNOCO-MIB", ap700=ap700, oriPortFilterTableEntryIndex=oriPortFilterTableEntryIndex, oriWORPIfSiteSurveyBaseName=oriWORPIfSiteSurveyBaseName, oriTrapVarTFTPIPAddress=oriTrapVarTFTPIPAddress, oriRADScanResultsFrequencyChannel=oriRADScanResultsFrequencyChannel, oriTrapFeatureNotSupported=oriTrapFeatureNotSupported, rg1000=rg1000, ap500=ap500, orinocoSpectraLink=orinocoSpectraLink, oriLinkIntStatus=oriLinkIntStatus, oriNetworkIPAddressType=oriNetworkIPAddressType, oriTrapVarBatchCLIFilename=oriTrapVarBatchCLIFilename, oriDHCPServerIPPoolTableMaximumLeaseTime=oriDHCPServerIPPoolTableMaximumLeaseTime, oriQoSPolicyPriorityMapping=oriQoSPolicyPriorityMapping, oriSystemAccessPassword=oriSystemAccessPassword, oriSerialStopBits=oriSerialStopBits, oriQoSDot1pPriority=oriQoSDot1pPriority, oriWORPIfStatTableAverageRemoteNoise=oriWORPIfStatTableAverageRemoteNoise, oriRogueScanResultsFrequencyChannel=oriRogueScanResultsFrequencyChannel, oriSecurityEncryptionKeyLengthTableEntry=oriSecurityEncryptionKeyLengthTableEntry, oriSecurityProfileTableEncryptionKey3=oriSecurityProfileTableEncryptionKey3, oriVLANIDTableIndex=oriVLANIDTableIndex, orinocoDMZ=orinocoDMZ, oriWORPIfSatConfigTableComment=oriWORPIfSatConfigTableComment, oriWORPIfRoamingSlowScanThreshold=oriWORPIfRoamingSlowScanThreshold, oriPPPoESessionWANConnectionStatus=oriPPPoESessionWANConnectionStatus, oriSNTPStatus=oriSNTPStatus, oriWORPIfStatTableReplyData=oriWORPIfStatTableReplyData, oriRADIUSAcctClientStatTable=oriRADIUSAcctClientStatTable, oriSyslogHostComment=oriSyslogHostComment, oriUPSDE911Reserved=oriUPSDE911Reserved, oriOEMProductName=oriOEMProductName, oriTFTPAutoConfigFilename=oriTFTPAutoConfigFilename, oriWirelessIfSSIDTableBroadcastSSID=oriWirelessIfSSIDTableBroadcastSSID, orinocoSNMP=orinocoSNMP, oriQoSDot1DToDot1pMappingTableEntry=oriQoSDot1DToDot1pMappingTableEntry, oriWirelessIfSSIDTableEncryptionKey0=oriWirelessIfSSIDTableEncryptionKey0, orinocoAdvancedFiltering=orinocoAdvancedFiltering, oriSecurityProfileTable=oriSecurityProfileTable, oriRADIUSAuthClientStatTablePrimaryOrSecondaryIndex=oriRADIUSAuthClientStatTablePrimaryOrSecondaryIndex, oriWORPIfSatStatTablePollData=oriWORPIfSatStatTablePollData, oriStaticMACAddressFilterWirelessMask=oriStaticMACAddressFilterWirelessMask, oriWORPIfSiteSurveyMaxSatAllowed=oriWORPIfSiteSurveyMaxSatAllowed, oriSyslogPort=oriSyslogPort, oriSpectraLinkLegacyDeviceSupport=oriSpectraLinkLegacyDeviceSupport, orinocoPPPoE=orinocoPPPoE, oriSystemInvMgmtTableComponentIndex=oriSystemInvMgmtTableComponentIndex, oriRADIUSAuthClientStatTableAccessRetransmissions=oriRADIUSAuthClientStatTableAccessRetransmissions, oriPPPoEMaximumNumberOfSessions=oriPPPoEMaximumNumberOfSessions, oriSerialParity=oriSerialParity, oriRADIUSAcctServerMaximumRetransmission=oriRADIUSAcctServerMaximumRetransmission, oriWORPIfDDRSDataRateIncReqSNRThreshold=oriWORPIfDDRSDataRateIncReqSNRThreshold, oriTelnetSSHHostKeyStatus=oriTelnetSSHHostKeyStatus, oriWORPIfStatTableSendSuccess=oriWORPIfStatTableSendSuccess, oriWORPIfDDRSDefDataRate=oriWORPIfDDRSDefDataRate, oriQoSPolicyMarkingStatus=oriQoSPolicyMarkingStatus, oriSyslogHostTable=oriSyslogHostTable, oriWORPIfStatTableAverageRemoteSignal=oriWORPIfStatTableAverageRemoteSignal, oriTrapVarDefaultRouterIPAddress=oriTrapVarDefaultRouterIPAddress, oriSNMPTrapHostTablePassword=oriSNMPTrapHostTablePassword, oriAOLNATALGStatus=oriAOLNATALGStatus, oriWORPIfDDRSMinReqSNRdot11an9Mbps=oriWORPIfDDRSMinReqSNRdot11an9Mbps, oriLinkTestOurMinSignalLevel=oriLinkTestOurMinSignalLevel, oriDHCPClientInterfaceBitmask=oriDHCPClientInterfaceBitmask, oriIntraCellBlockingGroupTableIndex=oriIntraCellBlockingGroupTableIndex, oriSecurityRekeyingInterval=oriSecurityRekeyingInterval, oriNetworkIPConfigTable=oriNetworkIPConfigTable, oriDHCPServerIPPoolTableEntryStatus=oriDHCPServerIPPoolTableEntryStatus, orinocoRADIUS=orinocoRADIUS, oriSyslogHostIPAddress=oriSyslogHostIPAddress, oriWORPIfStatTableRegistrationRequests=oriWORPIfStatTableRegistrationRequests, oriRogueScanResultsTableAgingTime=oriRogueScanResultsTableAgingTime, oriConfigResetToDefaults=oriConfigResetToDefaults, oriRADIUSAuthServerType=oriRADIUSAuthServerType, oriWORPIfStatTableReplyNoData=oriWORPIfStatTableReplyNoData, oriStormThresholdIfBroadcast=oriStormThresholdIfBroadcast, oriPacketForwardingMACAddress=oriPacketForwardingMACAddress, oriWORPIfDDRSDataRateDecPercentThreshold=oriWORPIfDDRSDataRateDecPercentThreshold, ap4000=ap4000, oriWORPIfDDRSStatus=oriWORPIfDDRSStatus, oriWORPIfSatStatTableSendRetries=oriWORPIfSatStatTableSendRetries, oriWORPIfConfigTableBaseStationName=oriWORPIfConfigTableBaseStationName, oriRogueScanConfigTableScanStatus=oriRogueScanConfigTableScanStatus, oriWDSSecurityTableEntry=oriWDSSecurityTableEntry, oriIPARPFilteringStatus=oriIPARPFilteringStatus, oriWORPIfSatStatTableMacAddress=oriWORPIfSatStatTableMacAddress, oriSystemAccessUserName=oriSystemAccessUserName, oriIntraCellBlockingMACTableGroupID7=oriIntraCellBlockingMACTableGroupID7, oriSecurityProfileTableEncryptionTxKey=oriSecurityProfileTableEncryptionTxKey, oriWORPIfSatConfigStatus=oriWORPIfSatConfigStatus, oriNATType=oriNATType, oriWORPIfStatTableRequestForService=oriWORPIfStatTableRequestForService, oriTrapAuthenticationFailure=oriTrapAuthenticationFailure, oriTrapSSLInitializationFailure=oriTrapSSLInitializationFailure, oriSNMPSecureManagementStatus=oriSNMPSecureManagementStatus, oriTFTPAutoConfigStatus=oriTFTPAutoConfigStatus, ObjStatus=ObjStatus, oriSNTPHour=oriSNTPHour, oriTrapBootPFailed=oriTrapBootPFailed, oriWirelessIfSSIDTablePSKPassPhrase=oriWirelessIfSSIDTablePSKPassPhrase, oriQoSIPDSCPUpperLimit=oriQoSIPDSCPUpperLimit, oriPPPoESessionTableIndex=oriPPPoESessionTableIndex, oriDNSClientDefaultDomainName=oriDNSClientDefaultDomainName, oriStationStatTableIndex=oriStationStatTableIndex, oriDNSClientStatus=oriDNSClientStatus, PYSNMP_MODULE_ID=orinoco, oriWirelessIfPropertiesEntry=oriWirelessIfPropertiesEntry, oriWirelessIfEncryptionKey3=oriWirelessIfEncryptionKey3, oriTrapRADIUSServerNotResponding=oriTrapRADIUSServerNotResponding, oriTrapFlashMemoryEmpty=oriTrapFlashMemoryEmpty, oriHTTPWebSiteLanguage=oriHTTPWebSiteLanguage, oriQoSPolicyName=oriQoSPolicyName, oriRogueScanStationCountWirelessCardB=oriRogueScanStationCountWirelessCardB, oriConfigFileStatus=oriConfigFileStatus, oriRADScanResultsMACAddress=oriRADScanResultsMACAddress, oriTrapWLCFailure=oriTrapWLCFailure, oriTempLogTableEntry=oriTempLogTableEntry, oriStationStatTableMACProtocol=oriStationStatTableMACProtocol, oriPPPoESessionConnectTimeLimitation=oriPPPoESessionConnectTimeLimitation, oriPortFilterStatus=oriPortFilterStatus, oriLinkTestOurMinNoiseLevel=oriLinkTestOurMinNoiseLevel, oriLinkTestOurHighFrameCount=oriLinkTestOurHighFrameCount, oriIAPPHandoverRequestReceived=oriIAPPHandoverRequestReceived, oriWORPIfDDRSMinReqSNRdot11at24Mbps=oriWORPIfDDRSMinReqSNRdot11at24Mbps, oriLinkTestOurCurNoiseLevel=oriLinkTestOurCurNoiseLevel, oriWirelessIfSSIDTableStatus=oriWirelessIfSSIDTableStatus, oriTrapVarMACAddress=oriTrapVarMACAddress, oriRADIUSAuthServerResponseTime=oriRADIUSAuthServerResponseTime, oriTelnetSessions=oriTelnetSessions, oriSecurityConfiguration=oriSecurityConfiguration, oriStaticMACAddressFilterWiredAddress=oriStaticMACAddressFilterWiredAddress, oriWORPIfDDRSMinReqSNRdot11an24Mbps=oriWORPIfDDRSMinReqSNRdot11an24Mbps, oriWORPIfSiteSurveyTableIndex=oriWORPIfSiteSurveyTableIndex, oriNATStaticPortBindTableEntryStatus=oriNATStaticPortBindTableEntryStatus, DisplayString32=DisplayString32, oriPPPoEMACtoSessionTableISPName=oriPPPoEMACtoSessionTableISPName, oriPPPoESessionServiceName=oriPPPoESessionServiceName, orinocoWORPIfBSUStatLocalTxRate=orinocoWORPIfBSUStatLocalTxRate, oriNetworkIPConfigTableEntry=oriNetworkIPConfigTableEntry, oriWORPIfConfigTableEntry=oriWORPIfConfigTableEntry, oriNATStaticPortBindEndPortNumber=oriNATStaticPortBindEndPortNumber, oriQoSDot1DToIPDSCPPriority=oriQoSDot1DToIPDSCPPriority, oriSecurityProfileTablePSKPassPhrase=oriSecurityProfileTablePSKPassPhrase, oriDHCPRelayDHCPServerTable=oriDHCPRelayDHCPServerTable, oriSecurityHwConfigResetPassword=oriSecurityHwConfigResetPassword, oriSecurityProfileTableStatus=oriSecurityProfileTableStatus, oriIntraCellBlockingMACTableGroupID4=oriIntraCellBlockingMACTableGroupID4, oriWirelessIfMulticastRate=oriWirelessIfMulticastRate, oriLinkTestStationName=oriLinkTestStationName, oriSecurityProfileTableEncryptionKey1=oriSecurityProfileTableEncryptionKey1, oriTrapVarDHCPServerIPAddress=oriTrapVarDHCPServerIPAddress, oriQoSPolicyTableRowStatus=oriQoSPolicyTableRowStatus, oriWORPIfSiteSurveyTable=oriWORPIfSiteSurveyTable, oriWirelessIfLBTxTimeThreshold=oriWirelessIfLBTxTimeThreshold, oriWirelessIfSSIDTableQoSPolicy=oriWirelessIfSSIDTableQoSPolicy, oriLinkTestHisMaxSNR=oriLinkTestHisMaxSNR, oriIntraCellBlockingGroupTableName=oriIntraCellBlockingGroupTableName, oriWORPIfSiteSurveyNumSatRegistered=oriWORPIfSiteSurveyNumSatRegistered, oriWDSSecurityTableSecurityMode=oriWDSSecurityTableSecurityMode, oriWirelessIfSecurityPerSSIDStatus=oriWirelessIfSecurityPerSSIDStatus, DisplayString55=DisplayString55, oriLinkTestHisStandardFrameCount=oriLinkTestHisStandardFrameCount, oriWORPStationDeRegister=oriWORPStationDeRegister, orinocoRAD=orinocoRAD, oriRADIUSAuthClientStatTableAccessRejects=oriRADIUSAuthClientStatTableAccessRejects, oriLinkTestHisCurSNR=oriLinkTestHisCurSNR, oriSystemEmergencyResetToDefault=oriSystemEmergencyResetToDefault, oriSNMPV3PrivPassword=oriSNMPV3PrivPassword, oriIntraCellBlockingMACTableGroupID14=oriIntraCellBlockingMACTableGroupID14, oriProtocolFilterTableIndex=oriProtocolFilterTableIndex, oriRADIUSAcctServerAddressingFormat=oriRADIUSAcctServerAddressingFormat, oriTelnetLoginTimeout=oriTelnetLoginTimeout, oriTFTPFileMode=oriTFTPFileMode, oriWORPIfStatTableBaseStationAnnounces=oriWORPIfStatTableBaseStationAnnounces, oriSecurityHwConfigResetStatus=oriSecurityHwConfigResetStatus, oriLinkTestOurLowFrameCount=oriLinkTestOurLowFrameCount, oriTrapIncompatibleLicenseFile=oriTrapIncompatibleLicenseFile, oriWirelessIfSSIDTableRADIUSAccountingProfile=oriWirelessIfSSIDTableRADIUSAccountingProfile, oriWORPIfSatStatTableReceiveFailures=oriWORPIfSatStatTableReceiveFailures, oriPortFilterTableEntry=oriPortFilterTableEntry, oriWORPIfStatTableReplyMoreData=oriWORPIfStatTableReplyMoreData, oriRogueScanConfigTable=oriRogueScanConfigTable, oriSNTPSecondaryServerNameOrIPAddress=oriSNTPSecondaryServerNameOrIPAddress, oriLinkTestHisMinSNR=oriLinkTestHisMinSNR, oriTrapVarUnauthorizedManagerIPaddress=oriTrapVarUnauthorizedManagerIPaddress, oriIntraCellBlockingMACTableGroupID3=oriIntraCellBlockingMACTableGroupID3, oriDHCPRelayDHCPServerTableEntry=oriDHCPRelayDHCPServerTableEntry, oriWDSSetupTablePortIndex=oriWDSSetupTablePortIndex, oriADSLIfTrapsStatus=oriADSLIfTrapsStatus, oriWORPIfSatStatTable=oriWORPIfSatStatTable, oriTrapWirelessServiceResumed=oriTrapWirelessServiceResumed, oriIAPPMACIPTableIPAddress=oriIAPPMACIPTableIPAddress, oriVLANStatus=oriVLANStatus, oriSerialDataBits=oriSerialDataBits, oriRADIUSSvrTableProfileName=oriRADIUSSvrTableProfileName, orinocoStormThreshold=orinocoStormThreshold, oriLinkTestOurStandardFrameCount=oriLinkTestOurStandardFrameCount, oriLinkTestHisMinNoiseLevel=oriLinkTestHisMinNoiseLevel, oriStaticMACAddressFilterEntry=oriStaticMACAddressFilterEntry, oriPortFilterTableEntryInterfaceBitmask=oriPortFilterTableEntryInterfaceBitmask, oriStationStatTableOutUcastPkts=oriStationStatTableOutUcastPkts, orinocoLinkInt=orinocoLinkInt, oriPPPoEMACtoSessionTableMACAddress=oriPPPoEMACtoSessionTableMACAddress, oriPPPoESessionTableEntry=oriPPPoESessionTableEntry, oriRogueScanStationCountWirelessCardA=oriRogueScanStationCountWirelessCardA, oriConfigFileName=oriConfigFileName, oriTempLogMessage=oriTempLogMessage, oriWirelessIfSSIDTableRADIUSDot1xProfile=oriWirelessIfSSIDTableRADIUSDot1xProfile, oriNATStaticPortBindPortType=oriNATStaticPortBindPortType, oriLinkTestTableIndex=oriLinkTestTableIndex, oriLinkTestTableEntry=oriLinkTestTableEntry, oriSystemInvMgmtComponentTable=oriSystemInvMgmtComponentTable, oriIAPPHandoverRequestRetransmissions=oriIAPPHandoverRequestRetransmissions, oriWirelessIfSSIDTableEncryptionKey1=oriWirelessIfSSIDTableEncryptionKey1, oriTelnetSSHFingerPrint=oriTelnetSSHFingerPrint, oriSyslogStatus=oriSyslogStatus, oriSystemFeatureTableDescription=oriSystemFeatureTableDescription, oriProtocolFilterTable=oriProtocolFilterTable, oriIntraCellBlockingMACTableEntryStatus=oriIntraCellBlockingMACTableEntryStatus, oriWORPIfRoamingFastScanThreshold=oriWORPIfRoamingFastScanThreshold, oriConfigurationTrapsStatus=oriConfigurationTrapsStatus, oriPacketForwardingStatus=oriPacketForwardingStatus, orinocoWORPIfSatStat=orinocoWORPIfSatStat, oriStationStatTableInUcastPkts=oriStationStatTableInUcastPkts, orinocoWORPIfBSUStat=orinocoWORPIfBSUStat, oriVLANIDTableIdentifier=oriVLANIDTableIdentifier, oriSystemInvMgmtTableComponentReleaseVersion=oriSystemInvMgmtTableComponentReleaseVersion, oriTelnetRADIUSAccessControl=oriTelnetRADIUSAccessControl, oriTrapTFTPFailedOperation=oriTrapTFTPFailedOperation, oriRADIUSAuthClientStatTableIndex=oriRADIUSAuthClientStatTableIndex, oriStationStatTableType=oriStationStatTableType, oriRogueScanResultsStationType=oriRogueScanResultsStationType, oriLinkIntTableComment=oriLinkIntTableComment, oriStationStatTableInOctets=oriStationStatTableInOctets, oriWORPIfStatTableSendRetries=oriWORPIfStatTableSendRetries, oriSecurityConfigTableEntry=oriSecurityConfigTableEntry, oriSystemInvMgmtInterfaceId=oriSystemInvMgmtInterfaceId, oriStationStatTableOperStatus=oriStationStatTableOperStatus, oriAccessControlTableIndex=oriAccessControlTableIndex, oriRADIUSAcctClientAccountingRetransmissions=oriRADIUSAcctClientAccountingRetransmissions, oriIntraCellBlockingMACTableGroupID11=oriIntraCellBlockingMACTableGroupID11, oriLinkTestMACAddress=oriLinkTestMACAddress, oriRADIUSAcctClientStatTableBadAuthenticators=oriRADIUSAcctClientStatTableBadAuthenticators, oriLinkTestOurCurSNR=oriLinkTestOurCurSNR, oriRADIUSSvrTableVLANID=oriRADIUSSvrTableVLANID, oriSNMPTrapType=oriSNMPTrapType, oriPPPoESessionConfigPADIMaxNumberOfRetries=oriPPPoESessionConfigPADIMaxNumberOfRetries, oriRADIUSAuthClientStatTableAccessAccepts=oriRADIUSAuthClientStatTableAccessAccepts, oriWORPIfDDRSDataRateIncPercentThreshold=oriWORPIfDDRSDataRateIncPercentThreshold, oriRADIUSAcctClientAccountingResponses=oriRADIUSAcctClientAccountingResponses, oriWORPIfStatTablePollNoData=oriWORPIfStatTablePollNoData, oriWORPIfSatStatTableSendFailures=oriWORPIfSatStatTableSendFailures, oriWirelessIfSSIDTableRADIUSMACAccessControl=oriWirelessIfSSIDTableRADIUSMACAccessControl, oriRADIUSAcctClientStatTableIndex=oriRADIUSAcctClientStatTableIndex)
mibBuilder.exportSymbols("ORiNOCO-MIB", oriDNSClientPrimaryServerIPAddress=oriDNSClientPrimaryServerIPAddress, oriWirelessIfEncryptionTxKey=oriWirelessIfEncryptionTxKey, oriTrapAutoConfigFailure=oriTrapAutoConfigFailure, orinocoSpanningTree=orinocoSpanningTree, oriWORPIfStatTableRegistrationIncompletes=oriWORPIfStatTableRegistrationIncompletes, oriMiscTraps=oriMiscTraps, oriWORPIfSiteSurveyLocalNoiseLevel=oriWORPIfSiteSurveyLocalNoiseLevel, oriTrapInvalidEncryptionKey=oriTrapInvalidEncryptionKey, orinocoSysFeature=orinocoSysFeature, oriRADIUSAcctServerTable=oriRADIUSAcctServerTable, orinocoWORPIfSiteSurvey=orinocoWORPIfSiteSurvey, oriSystemEventLogNumberOfMessages=oriSystemEventLogNumberOfMessages, oriTrapVariable=oriTrapVariable, orinocoRADIUSAuth=orinocoRADIUSAuth, oriDHCPServerIPPoolTableStartIPAddress=oriDHCPServerIPPoolTableStartIPAddress, oriWirelessIfPropertiesIndex=oriWirelessIfPropertiesIndex, oriWirelessIfEncryptionKey1=oriWirelessIfEncryptionKey1, oriWORPIfStatTableRegistrationLastReason=oriWORPIfStatTableRegistrationLastReason, oriSecurityProfileTableEntry=oriSecurityProfileTableEntry, orinocoOEM=orinocoOEM, oriSystemFeatureTableLicensed=oriSystemFeatureTableLicensed, oriSNMPTrapHostTableIPAddress=oriSNMPTrapHostTableIPAddress, oriAccessControlOperationType=oriAccessControlOperationType, oriSNTPMonth=oriSNTPMonth, oriDHCPServerDefaultGatewayIPAddress=oriDHCPServerDefaultGatewayIPAddress, oriTrapsImageStatus=oriTrapsImageStatus, oriPPPoESessionBindingsNumberMultiplePADORx=oriPPPoESessionBindingsNumberMultiplePADORx, oriSystemInvMgmtInterfaceRole=oriSystemInvMgmtInterfaceRole, oriSNMPAccessTableInterfaceBitmask=oriSNMPAccessTableInterfaceBitmask, oriTrapRADScanResults=oriTrapRADScanResults, oriSystemEventLogTable=oriSystemEventLogTable, oriSecurityProfileTableCipherMode=oriSecurityProfileTableCipherMode, oriRADIUSAcctClientStatTablePrimaryOrSecondaryIndex=oriRADIUSAcctClientStatTablePrimaryOrSecondaryIndex, oriDHCPServerIPPoolTableEntry=oriDHCPServerIPPoolTableEntry, oriWORPIfStatTableReceiveSuccess=oriWORPIfStatTableReceiveSuccess, oriVLANIDTableEntry=oriVLANIDTableEntry, oriPortFilterTable=oriPortFilterTable, oriRADIUSAcctServerType=oriRADIUSAcctServerType, oriLinkTestInterval=oriLinkTestInterval, oriDMZHostTableComment=oriDMZHostTableComment, oriPPPoESessionUserName=oriPPPoESessionUserName, oriBroadcastFilteringTableEntryStatus=oriBroadcastFilteringTableEntryStatus, oriIAPPHandoverRequestSent=oriIAPPHandoverRequestSent, oriLinkTestDataRateTableLocalCount=oriLinkTestDataRateTableLocalCount, orinocoSecurity=orinocoSecurity, oriSystemEventLogMessage=oriSystemEventLogMessage, oriAccessControlTableEntryStatus=oriAccessControlTableEntryStatus, oriProtocolFilterProtocolString=oriProtocolFilterProtocolString, oriWirelessIfSupportedAuthenticationModes=oriWirelessIfSupportedAuthenticationModes, oriHTTPSSLStatus=oriHTTPSSLStatus, oriWORPIfStatTableRegistrationAttempts=oriWORPIfStatTableRegistrationAttempts, orinocoDHCPClient=orinocoDHCPClient, oriTrapZeroSizeImage=oriTrapZeroSizeImage, oriSystemContactPhoneNumber=oriSystemContactPhoneNumber, oriSystemAccessIdleTimeout=oriSystemAccessIdleTimeout, oriWirelessIfSSIDTableEncryptionTxKey=oriWirelessIfSSIDTableEncryptionTxKey, oriNATStatus=oriNATStatus, oriWORPIfDDRSMinReqSNRdot11at48Mbps=oriWORPIfDDRSMinReqSNRdot11at48Mbps, ObjStatusActive=ObjStatusActive, oriGenericTrapVariable=oriGenericTrapVariable, oriTrapVarFailedAuthenticationType=oriTrapVarFailedAuthenticationType, oriNATStaticPortBindTable=oriNATStaticPortBindTable, oriWORPIfSiteSurveySignalQualityTableEntry=oriWORPIfSiteSurveySignalQualityTableEntry, oriWORPIfRoamingFastScanPercentThreshold=oriWORPIfRoamingFastScanPercentThreshold, oriSecurityGwMac=oriSecurityGwMac, oriRADIUSSvrTableEntry=oriRADIUSSvrTableEntry, orinocoFiltering=orinocoFiltering, oriTFTPFileName=oriTFTPFileName, oriTFTPOperationStatus=oriTFTPOperationStatus, oriSystemInvMgmtInterfaceTableIndex=oriSystemInvMgmtInterfaceTableIndex, oriWORPIfConfigTableRegistrationTimeout=oriWORPIfConfigTableRegistrationTimeout, oriTFTPOperation=oriTFTPOperation, oriTrapVarTFTPOperation=oriTrapVarTFTPOperation, oriQoSPolicyTableSecIndex=oriQoSPolicyTableSecIndex, oriOEMProductModel=oriOEMProductModel, orinocoSerial=orinocoSerial, oriWORPIfRoamingThreshold=oriWORPIfRoamingThreshold, oriSecurityProfileTablePSKValue=oriSecurityProfileTablePSKValue, oriTrapVarSubnetMask=oriTrapVarSubnetMask, oriSNTPMinutes=oriSNTPMinutes, oriRADIUSAuthServerNameOrIPAddress=oriRADIUSAuthServerNameOrIPAddress, oriWirelessIfSSIDTableClosedSystem=oriWirelessIfSSIDTableClosedSystem, orinocoIntraCellBlocking=orinocoIntraCellBlocking, oriRADIUSSvrTableNameOrIPAddress=oriRADIUSSvrTableNameOrIPAddress, oriWirelessIfClosedSystem=oriWirelessIfClosedSystem, oriWORPIfDDRSMinReqSNRdot11an18Mbps=oriWORPIfDDRSMinReqSNRdot11an18Mbps, oriTrapVarUnAuthorizedManagerCount=oriTrapVarUnAuthorizedManagerCount, oriRADIUSAuthClientAccessRejects=oriRADIUSAuthClientAccessRejects, oriWORPIfSatStatTableReceiveSuccess=oriWORPIfSatStatTableReceiveSuccess, oriRADStatus=oriRADStatus, oriTrapDNSIPNotConfigured=oriTrapDNSIPNotConfigured, orinocoNet=orinocoNet, oriDHCPServerIPPoolTableEndIPAddress=oriDHCPServerIPPoolTableEndIPAddress, oriRADIUSAcctServerResponseTime=oriRADIUSAcctServerResponseTime, oriTrapUselessLicense=oriTrapUselessLicense, oriWirelessIfOperationalMode=oriWirelessIfOperationalMode, oriSpanningTreeStatus=oriSpanningTreeStatus, oriRogueScanResultsTrapReportType=oriRogueScanResultsTrapReportType, agere=agere, orinocoIBSSTraffic=orinocoIBSSTraffic, oriSNMPTrapHostTableIndex=oriSNMPTrapHostTableIndex, oriRADIUSAuthClientAccessChallenges=oriRADIUSAuthClientAccessChallenges, oriStaticMACAddressFilterTable=oriStaticMACAddressFilterTable, oriDNSPrimaryDNSIPAddress=oriDNSPrimaryDNSIPAddress, orinocoNAT=orinocoNAT, oriIntraCellBlockingMACTableGroupID12=oriIntraCellBlockingMACTableGroupID12, oriWirelessIfSSIDTableSupportedSecurityModes=oriWirelessIfSSIDTableSupportedSecurityModes, oriRADIUSAcctServerTableEntry=oriRADIUSAcctServerTableEntry, oriRADIUSAuthServerMaximumRetransmission=oriRADIUSAuthServerMaximumRetransmission, oriIAPPMACIPTableESSID=oriIAPPMACIPTableESSID, oriWORPIfStatTableReceiveRetries=oriWORPIfStatTableReceiveRetries, oriRogueScanConfigTableScanCycleTime=oriRogueScanConfigTableScanCycleTime, oriPPPoESessionWANConnectMode=oriPPPoESessionWANConnectMode, oriTrapDHCPRelayServerTableNotConfigured=oriTrapDHCPRelayServerTableNotConfigured, oriWORPTraps=oriWORPTraps, oriWirelessIfCapabilities=oriWirelessIfCapabilities, oriDMZHostTableEntryStatus=oriDMZHostTableEntryStatus, oriWORPIfSatStatTableReplyNoData=oriWORPIfSatStatTableReplyNoData, oriTrapDeviceRebooting=oriTrapDeviceRebooting, oriDHCPRelayStatus=oriDHCPRelayStatus, DisplayString80=DisplayString80, oriIAPPMACIPTable=oriIAPPMACIPTable, oriWORPIfDDRSMinReqSNRdot11at108Mbps=oriWORPIfDDRSMinReqSNRdot11at108Mbps, oriRogueScanResultsSNR=oriRogueScanResultsSNR, oriSystemEventLogTableEntry=oriSystemEventLogTableEntry, orinocoConformance=orinocoConformance, orinocoWORPIfRoaming=orinocoWORPIfRoaming, oriTempLogTableReset=oriTempLogTableReset, oriSecurityConfigTableSecurityMode=oriSecurityConfigTableSecurityMode, oriTrapWORPIfNetworkSecretNotConfigured=oriTrapWORPIfNetworkSecretNotConfigured, orinocoRADIUSSvrProfiles=orinocoRADIUSSvrProfiles, oriLinkIntPollRetransmissions=oriLinkIntPollRetransmissions, oriRADIUSAuthClientTimeouts=oriRADIUSAuthClientTimeouts, oriWirelessIfSSIDTableEncryptionKeyLength=oriWirelessIfSSIDTableEncryptionKeyLength, oriWirelessIfEncryptionOptions=oriWirelessIfEncryptionOptions, oriWORPIfStatTableRemotePartners=oriWORPIfStatTableRemotePartners, oriSNMPAccessTableIndex=oriSNMPAccessTableIndex, bg2000=bg2000, oriWirelessIfAutoChannelSelectStatus=oriWirelessIfAutoChannelSelectStatus, oriSystemFlashUpdate=oriSystemFlashUpdate, oriWDSSecurityTableEncryptionKey0=oriWDSSecurityTableEncryptionKey0, oriConfigFileTable=oriConfigFileTable, oriPPPoESessionBindingsNumberPADITx=oriPPPoESessionBindingsNumberPADITx, oriWORPIfSatConfigTableEntry=oriWORPIfSatConfigTableEntry, orinocoProtocolFilter=orinocoProtocolFilter, oriLinkTestHisHighFrameCount=oriLinkTestHisHighFrameCount, oriEthernetIfConfigSettings=oriEthernetIfConfigSettings, oriRADIUSAcctClientStatTableAccountingRequests=oriRADIUSAcctClientStatTableAccountingRequests, oriBroadcastAddressThreshold=oriBroadcastAddressThreshold, oriRADIUSAcctUpdateInterval=oriRADIUSAcctUpdateInterval, oriSNMPV3AuthPassword=oriSNMPV3AuthPassword, oriNATStaticPortBindTableEntry=oriNATStaticPortBindTableEntry, oriPPPoESessionTable=oriPPPoESessionTable, oriMulticastAddressThreshold=oriMulticastAddressThreshold, oriRADIUSAuthClientStatTable=oriRADIUSAuthClientStatTable, oriSysFeatureTraps=oriSysFeatureTraps, orinocoSecurityGw=orinocoSecurityGw, oriPPPoESessionConfigPADITxInterval=oriPPPoESessionConfigPADITxInterval, oriNetworkIPConfigTableIndex=oriNetworkIPConfigTableIndex, oriLinkIntTableTargetIPAddress=oriLinkIntTableTargetIPAddress, oriDHCPServerIPPoolTableWidth=oriDHCPServerIPPoolTableWidth, oriHTTPInterfaceBitmask=oriHTTPInterfaceBitmask, oriSystemInvMgmtTableComponentId=oriSystemInvMgmtTableComponentId, oriQoSPolicyTableIndex=oriQoSPolicyTableIndex, oriRADAccessPointCount=oriRADAccessPointCount, oriHTTPWebSitenameTableEntry=oriHTTPWebSitenameTableEntry, oriSystemHwType=oriSystemHwType, oriQoSDot1DToIPDSCPMappingTableIndex=oriQoSDot1DToIPDSCPMappingTableIndex, oriTrapVarBatchCLILineNumber=oriTrapVarBatchCLILineNumber, oriPPPoEMACtoSessionTableStatus=oriPPPoEMACtoSessionTableStatus, oriWORPIfSiteSurveyRemoteNoiseLevel=oriWORPIfSiteSurveyRemoteNoiseLevel, oriSystemInvMgmtTableComponentSerialNumber=oriSystemInvMgmtTableComponentSerialNumber, orinocoDHCPRelay=orinocoDHCPRelay, oriIntraCellBlockingMACTableGroupID15=oriIntraCellBlockingMACTableGroupID15, oriTrapTFTPOperationCompleted=oriTrapTFTPOperationCompleted, oriTelnetSSHStatus=oriTelnetSSHStatus, oriSystemReboot=oriSystemReboot, oriWORPIfDDRSMinReqSNRdot11an12Mbps=oriWORPIfDDRSMinReqSNRdot11an12Mbps, oriQoSDot1DToDot1pMappingTable=oriQoSDot1DToDot1pMappingTable, oriPPPoESessionUserNamePassword=oriPPPoESessionUserNamePassword, oriSNMPInterfaceBitmask=oriSNMPInterfaceBitmask, oriQoSDot1DToDot1pMappingTableRowStatus=oriQoSDot1DToDot1pMappingTableRowStatus, oriWirelessIfSSIDTableSSID=oriWirelessIfSSIDTableSSID, oriWirelessIfChannel=oriWirelessIfChannel, oriWirelessIfSupportedCipherModes=oriWirelessIfSupportedCipherModes, oriStormThresholdTableEntry=oriStormThresholdTableEntry, oriRADIUSAuthServerSharedSecret=oriRADIUSAuthServerSharedSecret, orinocoSNTP=orinocoSNTP, oriLinkTestOurMinSNR=oriLinkTestOurMinSNR, oriOperationalTrapsStatus=oriOperationalTrapsStatus, oriSNMPAccessTableComment=oriSNMPAccessTableComment, oriWirelessIfSSIDTableVLANID=oriWirelessIfSSIDTableVLANID, oriStaticMACAddressFilterWiredMask=oriStaticMACAddressFilterWiredMask, oriConfigFileTableEntry=oriConfigFileTableEntry, oriSystemInvMgmtTableComponentMajorVersion=oriSystemInvMgmtTableComponentMajorVersion, oriTrapIncompatibleImage=oriTrapIncompatibleImage, orinocoHTTP=orinocoHTTP, oriIntraCellBlockingMACTableGroupID8=oriIntraCellBlockingMACTableGroupID8, oriLinkTestDataRateTableEntry=oriLinkTestDataRateTableEntry, oriOEMHomeUrl=oriOEMHomeUrl, orinocoEthernetIf=orinocoEthernetIf, oriRADIUSMACAddressFormat=oriRADIUSMACAddressFormat, oriWirelessIfAntennaGain=oriWirelessIfAntennaGain, oriIAPPPeriodicAnnounceInterval=oriIAPPPeriodicAnnounceInterval, oriStationStatTableInterface=oriStationStatTableInterface, oriAccessControlTableMACAddress=oriAccessControlTableMACAddress, oriTrapTaskSuspended=oriTrapTaskSuspended, oriRADIUSAcctClientAcctInvalidAuthenticators=oriRADIUSAcctClientAcctInvalidAuthenticators, orinocoRogueScan=orinocoRogueScan, oriSystemMode=oriSystemMode, oriRADIUSAcctClientStatTableAccountingRetransmissions=oriRADIUSAcctClientStatTableAccountingRetransmissions, orinocoAccessControl=orinocoAccessControl, oriRADIUSAcctServerTableEntryStatus=oriRADIUSAcctServerTableEntryStatus, oriIAPPAnnounceResponseTime=oriIAPPAnnounceResponseTime, oriWirelessIfDTIMPeriod=oriWirelessIfDTIMPeriod, oriPortFilterTableEntryComment=oriPortFilterTableEntryComment, oriSNTPDay=oriSNTPDay, oriWirelessIfSSIDTableDenyNonEncryptedData=oriWirelessIfSSIDTableDenyNonEncryptedData, oriTrapInvalidImageDigitalSignature=oriTrapInvalidImageDigitalSignature, oriSystemFeatureTableCode=oriSystemFeatureTableCode, oriWORPTrapsStatus=oriWORPTrapsStatus, oriTFTPFileType=oriTFTPFileType, oriPPPoEMACtoSessionTableEntry=oriPPPoEMACtoSessionTableEntry, oriWirelessIfSSIDTableSecurityMode=oriWirelessIfSSIDTableSecurityMode, oriSystemCountryCode=oriSystemCountryCode, oriLinkTestHisMediumFrameCount=oriLinkTestHisMediumFrameCount, orinocoIAPP=orinocoIAPP, oriRogueScanResultsTableEntry=oriRogueScanResultsTableEntry, oriStationStatTableOutDiscards=oriStationStatTableOutDiscards, oriTrapBatchFileExecEnd=oriTrapBatchFileExecEnd, oriWORPIfDDRSMinReqSNRdot11an6Mbps=oriWORPIfDDRSMinReqSNRdot11an6Mbps, orinocoIf=orinocoIf, oriSystemInvMgmtTableComponentVariant=oriSystemInvMgmtTableComponentVariant, oriTrapWLCFirmwareDownloadFailure=oriTrapWLCFirmwareDownloadFailure, oriTempLogTable=oriTempLogTable, oriLinkTestHisMinSignalLevel=oriLinkTestHisMinSignalLevel, oriRADScanResultsTableEntry=oriRADScanResultsTableEntry, oriSNMPAccessTableIPAddress=oriSNMPAccessTableIPAddress, oriTrapBatchFileExecStart=oriTrapBatchFileExecStart, oriLinkTestTable=oriLinkTestTable, oriSecurityProfileTableEncryptionKey2=oriSecurityProfileTableEncryptionKey2, oriTrapWLCIncompatibleFirmware=oriTrapWLCIncompatibleFirmware, oriTFTPTraps=oriTFTPTraps, oriWORPIfRoamingStatus=oriWORPIfRoamingStatus, oriTrapRogueScanStationDetected=oriTrapRogueScanStationDetected, oriSystemFeatureTable=oriSystemFeatureTable, oriLinkTestDataRateTableRemoteCount=oriLinkTestDataRateTableRemoteCount, oriRADIUSAcctServerIPAddress=oriRADIUSAcctServerIPAddress, oriWirelessIfSSIDTableIndex=oriWirelessIfSSIDTableIndex, oriWirelessIfMACAddress=oriWirelessIfMACAddress, oriRADIUSAuthServerIPAddress=oriRADIUSAuthServerIPAddress, oriIAPPSendAnnounceRequestOnStart=oriIAPPSendAnnounceRequestOnStart, oriIAPPMaximumHandoverRetransmissions=oriIAPPMaximumHandoverRetransmissions, oriSecurityConfigTableRekeyingInterval=oriSecurityConfigTableRekeyingInterval)
mibBuilder.exportSymbols("ORiNOCO-MIB", oriLinkTestDataRateTable=oriLinkTestDataRateTable, orinocoWORPIfSat=orinocoWORPIfSat, oriFlashMemoryTrapsStatus=oriFlashMemoryTrapsStatus, oriWORPIfDDRSDataRateIncAvgSNRThreshold=oriWORPIfDDRSDataRateIncAvgSNRThreshold, oriRADIUSSvrTableDestPort=oriRADIUSSvrTableDestPort, oriWORPIfRoamingSlowScanPercentThreshold=oriWORPIfRoamingSlowScanPercentThreshold, oriIntraCellBlockingMACTableGroupID5=oriIntraCellBlockingMACTableGroupID5, orinocoWORPIfBSUStatMACAddress=orinocoWORPIfBSUStatMACAddress, oriTFTPServerIPAddress=oriTFTPServerIPAddress, oriLinkTestTimeOut=oriLinkTestTimeOut, oriHTTPHelpInformationLink=oriHTTPHelpInformationLink, oriWORPIfSatStatTableAverageRemoteNoise=oriWORPIfSatStatTableAverageRemoteNoise, oriConfigSaveFile=oriConfigSaveFile, orinocoWORPIfBSUStatAverageLocalSignal=orinocoWORPIfBSUStatAverageLocalSignal, orinocoPacketForwarding=orinocoPacketForwarding, oriWirelessIfSupportedOperationalModes=oriWirelessIfSupportedOperationalModes, oriRADIUSClientInvalidSvrAddress=oriRADIUSClientInvalidSvrAddress, oriWORPIfSatStatTableRemoteTxRate=oriWORPIfSatStatTableRemoteTxRate, oriDMZHostTable=oriDMZHostTable, oriWORPIfSatStatTableEntry=oriWORPIfSatStatTableEntry, oriDHCPRelayDHCPServerTableIpAddress=oriDHCPRelayDHCPServerTableIpAddress, oriSyslogHeartbeatInterval=oriSyslogHeartbeatInterval, oriHTTPRefreshDelay=oriHTTPRefreshDelay, oriWORPIfConfigTableRetries=oriWORPIfConfigTableRetries)
