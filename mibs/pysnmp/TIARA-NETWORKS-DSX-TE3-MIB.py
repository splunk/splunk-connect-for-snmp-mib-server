#
# PySNMP MIB module TIARA-NETWORKS-DSX-TE3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIARA-NETWORKS-DSX-TE3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:09:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, Counter32, ObjectIdentity, ModuleIdentity, Unsigned32, iso, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, NotificationType, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Counter32", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "iso", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "NotificationType", "MibIdentifier", "Integer32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
LEDState, dsxT3E3IfGroup = mibBuilder.importSymbols("TIARA-NETWORKS-DSX-TC-MIB", "LEDState", "dsxT3E3IfGroup")
dsxT3E3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1))
dsxT3E3MIB.setRevisions(('1999-04-23 00:00',))
if mibBuilder.loadTexts: dsxT3E3MIB.setLastUpdated('9904230000Z')
if mibBuilder.loadTexts: dsxT3E3MIB.setOrganization('Tiara Networks Inc.')
dsxT3E3Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2))
dsxT3E3TrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2, 1))
dsxT3E3IfConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1))
dsxT3E3IfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2))
dsxT3E3IfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3))
dsxT3E3IfConfigLineTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1), )
if mibBuilder.loadTexts: dsxT3E3IfConfigLineTable.setStatus('current')
dsxT3E3IfConfigLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"))
if mibBuilder.loadTexts: dsxT3E3IfConfigLineEntry.setStatus('current')
dsxT3E3IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT3E3IfIndex.setStatus('current')
dsxT3E3IfConfigLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4))).clone(namedValues=NamedValues(("linetype-m13", 2), ("linetype-cbitparity", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigLineType.setStatus('current')
dsxT3E3IfConfigLineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("linecode-b3zs", 2), ("linecode-hdb3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfConfigLineCode.setStatus('current')
dsxT3E3IfConfigCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cable-length-0-to-225", 1), ("cable-length-225-to-450", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigCableLength.setStatus('current')
dsxT3E3IfConfigTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigTransmitClock.setStatus('current')
dsxT3E3IfConfigDS3ScramblingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mode-0", 1), ("mode-1", 2), ("mode-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigDS3ScramblingMode.setStatus('current')
dsxT3E3IfConfigDS3ScramblingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigDS3ScramblingEnable.setStatus('current')
dsxT3E3IfConfigMdlTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2), )
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlTable.setStatus('current')
dsxT3E3IfConfigMdlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfConfigMdlEntry"))
dsxT3E3IfConfigMdlEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlEntry.setStatus('current')
dsxT3E3IfConfigMdlEIC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlEIC.setStatus('current')
dsxT3E3IfConfigMdlLIC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlLIC.setStatus('current')
dsxT3E3IfConfigMdlFIC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlFIC.setStatus('current')
dsxT3E3IfConfigMdlUIC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlUIC.setStatus('current')
dsxT3E3IfConfigMdlPFI = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(38, 38)).setFixedLength(38)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlPFI.setStatus('current')
dsxT3E3IfConfigMdlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(38, 38)).setFixedLength(38)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlPort.setStatus('current')
dsxT3E3IfConfigMdlGenerator = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(38, 38)).setFixedLength(38)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfConfigMdlGenerator.setStatus('current')
dsxT3E3IfAlarmConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3))
dsxT3E3IfAlarmThresholdConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1), )
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigTable.setStatus('current')
dsxT3E3IfAlarmThresholdConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAlarmThresholdConfigIndex"))
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigEntry.setStatus('current')
dsxT3E3IfAlarmThresholdConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigIndex.setStatus('current')
dsxT3E3IfAlarmThresholdConfigObject = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("te3-object-lcv", 1), ("te3-object-fbe", 2), ("te3-object-pbe", 3), ("te3-object-cpbe", 4), ("te3-object-febe", 5), ("te3-object-exz", 6), ("te3-object-cofa", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigObject.setStatus('current')
dsxT3E3IfAlarmThresholdConfigSamplingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigSamplingInterval.setStatus('current')
dsxT3E3IfAlarmThresholdConfigSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sample-absolute", 1), ("sample-delta", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigSampleType.setStatus('current')
dsxT3E3IfAlarmThresholdConfigStartupType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigStartupType.setStatus('current')
dsxT3E3IfAlarmThresholdConfigRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigRisingThreshold.setStatus('current')
dsxT3E3IfAlarmThresholdConfigFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfAlarmThresholdConfigFallingThreshold.setStatus('current')
dsxT3E3IfTestConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 4), )
if mibBuilder.loadTexts: dsxT3E3IfTestConfigTable.setStatus('current')
dsxT3E3IfTestConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 4, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfTestConfigEntry"))
dsxT3E3IfTestConfigEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfTestConfigEntry.setStatus('current')
dsxT3E3IfTestConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 8, 9))).clone(namedValues=NamedValues(("no-test", 1), ("line-loopback-test", 3), ("remote-lpup-test", 8), ("remote-lpdn-test", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfTestConfigType.setStatus('current')
dsxT3E3IfTestConfigLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-feac", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfTestConfigLoopCode.setStatus('current')
dsxT3E3IfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1), )
if mibBuilder.loadTexts: dsxT3E3IfStatusTable.setStatus('current')
dsxT3E3IfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfStatusEntry"))
dsxT3E3IfStatusEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfStatusEntry.setStatus('current')
dsxT3E3IfStatusLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("reserved", 0), ("reserved1", 1), ("reserved2", 2), ("reserved3", 3), ("reserved4", 4), ("reserved5", 5), ("reserved6", 6), ("reserved7", 7), ("sendPattern", 8), ("sendTE3Code", 9), ("sendResetCode", 10), ("sendPayloadCode", 11), ("sendLineCode", 12), ("reserved8", 13), ("febeStatus", 14), ("pdeStatus", 15), ("lorcStatus", 16), ("reserved9", 17), ("reserved10", 18), ("rfebeStatus", 19), ("risStatus", 20), ("rexzStatus", 21), ("reserved11", 22), ("rcvTestCode", 23), ("loopbackStatus", 24), ("rlosStatus", 25), ("rlofStatus", 26), ("taisStatus", 27), ("raisStatus", 28), ("traiStatus", 29), ("rraiStatus", 30), ("no-alarm", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusLineStatus.setStatus('current')
dsxT3E3IfStatusTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusTransmitClock.setStatus('current')
dsxT3E3IfStatusTestLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 3), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusTestLED.setStatus('current')
dsxT3E3IfStatusErrorLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 4), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusErrorLED.setStatus('current')
dsxT3E3IfStatusAisLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 5), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusAisLED.setStatus('current')
dsxT3E3IfStatusSignalLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 6), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusSignalLED.setStatus('current')
dsxT3E3IfStatusFrameLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 7), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusFrameLED.setStatus('current')
dsxT3E3IfStatusYellowLED = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 1, 1, 8), LEDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfStatusYellowLED.setStatus('current')
dsxT3E3IfAlarmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 2), )
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusTable.setStatus('current')
dsxT3E3IfAlarmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAlarmStatusEntry"))
dsxT3E3IfAlarmStatusEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusEntry.setStatus('current')
dsxT3E3IfAlarmStatusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 2, 1, 1), Bits().clone(namedValues=NamedValues(("noAlarm", 0), ("rraiAlarm", 1), ("traiAlarm", 2), ("taisAlarm", 3), ("rlofAlarm", 4), ("rlosAlarm", 5), ("loopbackStateAlarm", 6), ("rcvTestCode", 7), ("rbluAlarm", 8), ("risAlarm", 9), ("rexzAlarm", 10), ("rfbeAlarm", 11), ("rpeAlarm", 12), ("rcpeAlarm", 13), ("lorcAlarm", 14), ("tpdeAlarm", 15), ("tfebeAlarm", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusAlarmStatus.setStatus('current')
dsxT3E3IfAlarmStatusThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 2, 1, 2), Bits().clone(namedValues=NamedValues(("threshold1", 0), ("threshold2", 1), ("threshold3", 2), ("threshold4", 3), ("threshold5", 4), ("threshold6", 5), ("threshold7", 6), ("threshold8", 7), ("threshold9", 8), ("threshold10", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAlarmStatusThresholdStatus.setStatus('current')
dsxT3E3IfTestStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3), )
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTable.setStatus('current')
dsxT3E3IfTestStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfTestStatusEntry"))
dsxT3E3IfTestStatusEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfTestStatusEntry.setStatus('current')
dsxT3E3IfTestStatusTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 6, 7))).clone(namedValues=NamedValues(("no-test", 1), ("line-loopback", 3), ("other-loopback", 4), ("remote-lpup", 6), ("remote-lpdn", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTestType.setStatus('current')
dsxT3E3IfTestStatusTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("state-idle", 1), ("state-searching", 2), ("state-locked", 3), ("state-relocked", 4), ("state-in-progress", 5), ("state-passed", 6), ("state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfTestStatusTestState.setStatus('current')
dsxT3E3IfTestStatusLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("loopcode-feac", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfTestStatusLoopCode.setStatus('current')
dsxT3E3IfLastTestResultTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4), )
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTable.setStatus('current')
dsxT3E3IfLastTestResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfLastTestResultEntry"))
dsxT3E3IfLastTestResultEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultEntry.setStatus('current')
dsxT3E3IfLastTestResultTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 6, 7))).clone(namedValues=NamedValues(("no-test", 1), ("line-loopback", 3), ("other-loopback", 4), ("remote-lpup", 6), ("remote-lpdn", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTestType.setStatus('current')
dsxT3E3IfLastTestResultTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("state-idle", 1), ("state-searching", 2), ("state-locked", 3), ("state-relocked", 4), ("state-in-progress", 5), ("state-passed", 6), ("state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultTestState.setStatus('current')
dsxT3E3IfLastTestResultLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-feac", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfLastTestResultLoopCode.setStatus('current')
dsxT3E3IfArchiveStatsValidIntervalsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1), )
if mibBuilder.loadTexts: dsxT3E3IfArchiveStatsValidIntervalsTable.setStatus('current')
dsxT3E3IfArchiveStatsValidIntervalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfArchiveStatsValidIntervalsEntry"))
dsxT3E3IfArchiveStatsValidIntervalsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfArchiveStatsValidIntervalsEntry.setStatus('current')
dsxT3E3IfAnsiArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveStatsValidIntervals.setStatus('current')
dsxT3E3IfIetfArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsValidIntervals.setStatus('current')
dsxT3E3IfUserTotalStatsValidDays = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsValidDays.setStatus('current')
dsxT3E3IfUserArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsValidIntervals.setStatus('current')
dsxT3E3IfErrorEventStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2), )
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsTable.setStatus('current')
dsxT3E3IfErrorEventStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfErrorEventStatsEntry"))
dsxT3E3IfErrorEventStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsEntry.setStatus('current')
dsxT3E3IfErrorEventStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsEXZ.setStatus('current')
dsxT3E3IfErrorEventStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsPBE.setStatus('current')
dsxT3E3IfErrorEventStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfErrorEventStatsFEBE.setStatus('current')
dsxT3E3IfAnsiStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3))
dsxT3E3IfIetfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4))
dsxT3E3IfUserStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5))
dsxT3E3IfAnsiCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1), )
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsTable.setStatus('current')
dsxT3E3IfAnsiCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAnsiCurrentStatsEntry"))
dsxT3E3IfAnsiCurrentStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsEntry.setStatus('current')
dsxT3E3IfAnsiCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsUASState.setStatus('current')
dsxT3E3IfAnsiCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentStatsTimeInCurrent.setStatus('current')
dsxT3E3IfAnsiCurrentPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsCV.setStatus('current')
dsxT3E3IfAnsiCurrentPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsES.setStatus('current')
dsxT3E3IfAnsiCurrentPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsSES.setStatus('current')
dsxT3E3IfAnsiCurrentPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsSAS.setStatus('current')
dsxT3E3IfAnsiCurrentPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentPathStatsUAS.setStatus('current')
dsxT3E3IfAnsiCurrentLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsCV.setStatus('current')
dsxT3E3IfAnsiCurrentLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsES.setStatus('current')
dsxT3E3IfAnsiCurrentLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiCurrentLineStatsSES.setStatus('current')
dsxT3E3IfAnsiTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2), )
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalStatsTable.setStatus('current')
dsxT3E3IfAnsiTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAnsiTotalStatsEntry"))
dsxT3E3IfAnsiTotalStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalStatsEntry.setStatus('current')
dsxT3E3IfAnsiTotalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsCV.setStatus('current')
dsxT3E3IfAnsiTotalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsES.setStatus('current')
dsxT3E3IfAnsiTotalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsSES.setStatus('current')
dsxT3E3IfAnsiTotalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsSAS.setStatus('current')
dsxT3E3IfAnsiTotalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalPathStatsUAS.setStatus('current')
dsxT3E3IfAnsiTotalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsCV.setStatus('current')
dsxT3E3IfAnsiTotalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsES.setStatus('current')
dsxT3E3IfAnsiTotalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiTotalLineStatsSES.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3), )
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalStatsTable.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfAnsiArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalStatsEntry.setStatus('current')
dsxT3E3IfAnsiArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveStatsInterval.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsCV.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsES.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsSES.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsSAS.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalPathStatsUAS.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsCV.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsES.setStatus('current')
dsxT3E3IfAnsiArchiveIntervalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfAnsiArchiveIntervalLineStatsSES.setStatus('current')
dsxT3E3IfIetfCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1), )
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsTable.setStatus('current')
dsxT3E3IfIetfCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIetfCurrentStatsEntry"))
dsxT3E3IfIetfCurrentStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsEntry.setStatus('current')
dsxT3E3IfIetfCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsUASState.setStatus('current')
dsxT3E3IfIetfCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsTimeInCurrent.setStatus('current')
dsxT3E3IfIetfCurrentStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPES.setStatus('current')
dsxT3E3IfIetfCurrentStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPSES.setStatus('current')
dsxT3E3IfIetfCurrentStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsSEFS.setStatus('current')
dsxT3E3IfIetfCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsUAS.setStatus('current')
dsxT3E3IfIetfCurrentStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsLCV.setStatus('current')
dsxT3E3IfIetfCurrentStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsPCV.setStatus('current')
dsxT3E3IfIetfCurrentStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsLES.setStatus('current')
dsxT3E3IfIetfCurrentStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCCV.setStatus('current')
dsxT3E3IfIetfCurrentStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCES.setStatus('current')
dsxT3E3IfIetfCurrentStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfCurrentStatsCSES.setStatus('current')
dsxT3E3IfIetfTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2), )
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsTable.setStatus('current')
dsxT3E3IfIetfTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIetfTotalStatsEntry"))
dsxT3E3IfIetfTotalStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsEntry.setStatus('current')
dsxT3E3IfIetfTotalStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPES.setStatus('current')
dsxT3E3IfIetfTotalStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPSES.setStatus('current')
dsxT3E3IfIetfTotalStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsSEFS.setStatus('current')
dsxT3E3IfIetfTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsUAS.setStatus('current')
dsxT3E3IfIetfTotalStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsLCV.setStatus('current')
dsxT3E3IfIetfTotalStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsPCV.setStatus('current')
dsxT3E3IfIetfTotalStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsLES.setStatus('current')
dsxT3E3IfIetfTotalStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCCV.setStatus('current')
dsxT3E3IfIetfTotalStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCES.setStatus('current')
dsxT3E3IfIetfTotalStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfTotalStatsCSES.setStatus('current')
dsxT3E3IfIetfArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3), )
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsTable.setStatus('current')
dsxT3E3IfIetfArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIetfArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsEntry.setStatus('current')
dsxT3E3IfIetfArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsInterval.setStatus('current')
dsxT3E3IfIetfArchiveStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPES.setStatus('current')
dsxT3E3IfIetfArchiveStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPSES.setStatus('current')
dsxT3E3IfIetfArchiveStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsSEFS.setStatus('current')
dsxT3E3IfIetfArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsUAS.setStatus('current')
dsxT3E3IfIetfArchiveStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsLCV.setStatus('current')
dsxT3E3IfIetfArchiveStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsPCV.setStatus('current')
dsxT3E3IfIetfArchiveStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsLES.setStatus('current')
dsxT3E3IfIetfArchiveStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCCV.setStatus('current')
dsxT3E3IfIetfArchiveStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCES.setStatus('current')
dsxT3E3IfIetfArchiveStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 4, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfIetfArchiveStatsCSES.setStatus('current')
dsxT3E3IfUserCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1), )
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsTable.setStatus('current')
dsxT3E3IfUserCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfUserCurrentStatsEntry"))
dsxT3E3IfUserCurrentStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsEntry.setStatus('current')
dsxT3E3IfUserCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsUASState.setStatus('current')
dsxT3E3IfUserCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsTimeInCurrent.setStatus('current')
dsxT3E3IfUserCurrentStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsLCV.setStatus('current')
dsxT3E3IfUserCurrentStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsFBE.setStatus('current')
dsxT3E3IfUserCurrentStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsPBE.setStatus('current')
dsxT3E3IfUserCurrentStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsCPBE.setStatus('current')
dsxT3E3IfUserCurrentStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsFEBE.setStatus('current')
dsxT3E3IfUserCurrentStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsEXZ.setStatus('current')
dsxT3E3IfUserCurrentStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserCurrentStatsCOFA.setStatus('current')
dsxT3E3IfUserTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2), )
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsTable.setStatus('current')
dsxT3E3IfUserTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfUserTotalStatsDay"))
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsEntry.setStatus('current')
dsxT3E3IfUserTotalStatsDay = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsDay.setStatus('current')
dsxT3E3IfUserTotalStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsLCV.setStatus('current')
dsxT3E3IfUserTotalStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsFBE.setStatus('current')
dsxT3E3IfUserTotalStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsPBE.setStatus('current')
dsxT3E3IfUserTotalStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsCPBE.setStatus('current')
dsxT3E3IfUserTotalStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsFEBE.setStatus('current')
dsxT3E3IfUserTotalStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsEXZ.setStatus('current')
dsxT3E3IfUserTotalStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserTotalStatsCOFA.setStatus('current')
dsxT3E3IfUserLifetimeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3), )
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsTable.setStatus('current')
dsxT3E3IfUserLifetimeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1), )
dsxT3E3IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfUserLifetimeStatsEntry"))
dsxT3E3IfUserLifetimeStatsEntry.setIndexNames(*dsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsEntry.setStatus('current')
dsxT3E3IfUserLifetimeStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPES.setStatus('current')
dsxT3E3IfUserLifetimeStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPSES.setStatus('current')
dsxT3E3IfUserLifetimeStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsSEFS.setStatus('current')
dsxT3E3IfUserLifetimeStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsUAS.setStatus('current')
dsxT3E3IfUserLifetimeStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsLCV.setStatus('current')
dsxT3E3IfUserLifetimeStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPCV.setStatus('current')
dsxT3E3IfUserLifetimeStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsLES.setStatus('current')
dsxT3E3IfUserLifetimeStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCCV.setStatus('current')
dsxT3E3IfUserLifetimeStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCES.setStatus('current')
dsxT3E3IfUserLifetimeStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsFBE.setStatus('current')
dsxT3E3IfUserLifetimeStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsPBE.setStatus('current')
dsxT3E3IfUserLifetimeStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCPBE.setStatus('current')
dsxT3E3IfUserLifetimeStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsFEBE.setStatus('current')
dsxT3E3IfUserLifetimeStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsEXZ.setStatus('current')
dsxT3E3IfUserLifetimeStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserLifetimeStatsCOFA.setStatus('current')
dsxT3E3IfUserArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4), )
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsTable.setStatus('current')
dsxT3E3IfUserArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), (0, "TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfUserArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsEntry.setStatus('current')
dsxT3E3IfUserArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsInterval.setStatus('current')
dsxT3E3IfUserArchiveStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsLCV.setStatus('current')
dsxT3E3IfUserArchiveStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsFBE.setStatus('current')
dsxT3E3IfUserArchiveStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsPBE.setStatus('current')
dsxT3E3IfUserArchiveStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsCPBE.setStatus('current')
dsxT3E3IfUserArchiveStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsFEBE.setStatus('current')
dsxT3E3IfUserArchiveStatsEXZ = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsEXZ.setStatus('current')
dsxT3E3IfUserArchiveStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 1, 3, 5, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT3E3IfUserArchiveStatsCOFA.setStatus('current')
dsxT3E3Number = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT3E3Number.setStatus('current')
dsxT3E3AlarmType = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("te3-alarm-rais", 1), ("te3-alarm-roof", 2), ("te3-alarm-rrai", 3), ("te3-alarm-ris", 4), ("te3-alarm-rlos", 5), ("te3-alarm-rlof", 6), ("te3-alarm-rexz", 7), ("te3-alarm-rfebe", 8), ("te3-alarm-rpe", 9), ("te3-alarm-rcpe", 10), ("te3-alarm-lorc", 11), ("te3-alarm-tpde", 12), ("te3-alarm-tais", 13), ("te3-alarm-trai", 14), ("te3-alarm-tfebe", 15), ("te1-alarm-threshold1", 16), ("te1-alarm-threshold2", 17), ("te1-alarm-threshold3", 18), ("te1-alarm-threshold4", 19), ("te1-alarm-threshold5", 20), ("te1-alarm-threshold6", 21), ("te1-alarm-threshold7", 22), ("te1-alarm-threshold8", 23), ("te1-alarm-threshold9", 24), ("te1-alarm-threshold10", 25))))
if mibBuilder.loadTexts: dsxT3E3AlarmType.setStatus('current')
dsxT3E3AlarmOnTrap = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2) + (0,1)).setObjects(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), ("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3Number"), ("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3AlarmType"))
dsxT3E3AlarmOffTrap = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 3, 2) + (0,2)).setObjects(("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3IfIndex"), ("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3Number"), ("TIARA-NETWORKS-DSX-TE3-MIB", "dsxT3E3AlarmType"))
mibBuilder.exportSymbols("TIARA-NETWORKS-DSX-TE3-MIB", dsxT3E3IfIetfTotalStatsCES=dsxT3E3IfIetfTotalStatsCES, dsxT3E3IfConfigDS3ScramblingMode=dsxT3E3IfConfigDS3ScramblingMode, dsxT3E3IfIetfCurrentStatsUASState=dsxT3E3IfIetfCurrentStatsUASState, dsxT3E3IfConfigMdlTable=dsxT3E3IfConfigMdlTable, dsxT3E3IfAnsiCurrentStatsUASState=dsxT3E3IfAnsiCurrentStatsUASState, dsxT3E3IfIetfCurrentStatsCCV=dsxT3E3IfIetfCurrentStatsCCV, dsxT3E3IfTestStatusEntry=dsxT3E3IfTestStatusEntry, dsxT3E3IfUserCurrentStatsTable=dsxT3E3IfUserCurrentStatsTable, dsxT3E3IfConfigMdlUIC=dsxT3E3IfConfigMdlUIC, dsxT3E3IfAnsiTotalPathStatsSES=dsxT3E3IfAnsiTotalPathStatsSES, dsxT3E3IfUserTotalStatsLCV=dsxT3E3IfUserTotalStatsLCV, dsxT3E3IfAlarmThresholdConfigSamplingInterval=dsxT3E3IfAlarmThresholdConfigSamplingInterval, dsxT3E3IfUserLifetimeStatsFEBE=dsxT3E3IfUserLifetimeStatsFEBE, dsxT3E3IfTestStatusLoopCode=dsxT3E3IfTestStatusLoopCode, dsxT3E3IfUserLifetimeStatsEXZ=dsxT3E3IfUserLifetimeStatsEXZ, dsxT3E3IfIetfArchiveStatsCCV=dsxT3E3IfIetfArchiveStatsCCV, dsxT3E3IfAnsiTotalPathStatsUAS=dsxT3E3IfAnsiTotalPathStatsUAS, dsxT3E3AlarmOnTrap=dsxT3E3AlarmOnTrap, dsxT3E3IfAlarmThresholdConfigStartupType=dsxT3E3IfAlarmThresholdConfigStartupType, dsxT3E3IfAnsiArchiveStatsInterval=dsxT3E3IfAnsiArchiveStatsInterval, dsxT3E3IfConfigMdlEntry=dsxT3E3IfConfigMdlEntry, dsxT3E3IfIetfTotalStatsPES=dsxT3E3IfIetfTotalStatsPES, dsxT3E3IfStatusFrameLED=dsxT3E3IfStatusFrameLED, dsxT3E3IfStatusEntry=dsxT3E3IfStatusEntry, dsxT3E3IfAlarmStatusEntry=dsxT3E3IfAlarmStatusEntry, dsxT3E3IfAnsiCurrentPathStatsCV=dsxT3E3IfAnsiCurrentPathStatsCV, dsxT3E3IfAlarmConfigGroup=dsxT3E3IfAlarmConfigGroup, dsxT3E3IfIetfTotalStatsTable=dsxT3E3IfIetfTotalStatsTable, dsxT3E3IfAnsiArchiveIntervalPathStatsSES=dsxT3E3IfAnsiArchiveIntervalPathStatsSES, dsxT3E3IfIetfArchiveStatsEntry=dsxT3E3IfIetfArchiveStatsEntry, dsxT3E3IfConfigMdlPort=dsxT3E3IfConfigMdlPort, dsxT3E3IfUserLifetimeStatsUAS=dsxT3E3IfUserLifetimeStatsUAS, dsxT3E3IfArchiveStatsValidIntervalsEntry=dsxT3E3IfArchiveStatsValidIntervalsEntry, dsxT3E3IfConfigLineCode=dsxT3E3IfConfigLineCode, dsxT3E3IfUserCurrentStatsUASState=dsxT3E3IfUserCurrentStatsUASState, dsxT3E3IfUserLifetimeStatsCES=dsxT3E3IfUserLifetimeStatsCES, dsxT3E3Traps=dsxT3E3Traps, dsxT3E3IfAlarmStatusTable=dsxT3E3IfAlarmStatusTable, PYSNMP_MODULE_ID=dsxT3E3MIB, dsxT3E3IfConfigMdlGenerator=dsxT3E3IfConfigMdlGenerator, dsxT3E3IfIetfArchiveStatsTable=dsxT3E3IfIetfArchiveStatsTable, dsxT3E3TrapVariables=dsxT3E3TrapVariables, dsxT3E3IfAnsiTotalPathStatsES=dsxT3E3IfAnsiTotalPathStatsES, dsxT3E3IfIetfCurrentStatsSEFS=dsxT3E3IfIetfCurrentStatsSEFS, dsxT3E3IfArchiveStatsValidIntervalsTable=dsxT3E3IfArchiveStatsValidIntervalsTable, dsxT3E3IfIetfArchiveStatsCES=dsxT3E3IfIetfArchiveStatsCES, dsxT3E3IfUserArchiveStatsFEBE=dsxT3E3IfUserArchiveStatsFEBE, dsxT3E3IfIetfArchiveStatsValidIntervals=dsxT3E3IfIetfArchiveStatsValidIntervals, dsxT3E3IfTestStatusTestState=dsxT3E3IfTestStatusTestState, dsxT3E3IfAlarmStatusAlarmStatus=dsxT3E3IfAlarmStatusAlarmStatus, dsxT3E3IfStatusTestLED=dsxT3E3IfStatusTestLED, dsxT3E3IfConfigTransmitClock=dsxT3E3IfConfigTransmitClock, dsxT3E3IfAnsiTotalPathStatsSAS=dsxT3E3IfAnsiTotalPathStatsSAS, dsxT3E3IfUserLifetimeStatsTable=dsxT3E3IfUserLifetimeStatsTable, dsxT3E3IfIetfArchiveStatsLES=dsxT3E3IfIetfArchiveStatsLES, dsxT3E3AlarmOffTrap=dsxT3E3AlarmOffTrap, dsxT3E3IfIetfTotalStatsLCV=dsxT3E3IfIetfTotalStatsLCV, dsxT3E3IfUserTotalStatsFEBE=dsxT3E3IfUserTotalStatsFEBE, dsxT3E3IfIetfCurrentStatsTable=dsxT3E3IfIetfCurrentStatsTable, dsxT3E3IfAnsiTotalLineStatsCV=dsxT3E3IfAnsiTotalLineStatsCV, dsxT3E3IfUserArchiveStatsInterval=dsxT3E3IfUserArchiveStatsInterval, dsxT3E3IfUserArchiveStatsEXZ=dsxT3E3IfUserArchiveStatsEXZ, dsxT3E3IfIetfCurrentStatsUAS=dsxT3E3IfIetfCurrentStatsUAS, dsxT3E3IfAnsiCurrentStatsTable=dsxT3E3IfAnsiCurrentStatsTable, dsxT3E3IfAnsiArchiveIntervalStatsEntry=dsxT3E3IfAnsiArchiveIntervalStatsEntry, dsxT3E3IfErrorEventStatsTable=dsxT3E3IfErrorEventStatsTable, dsxT3E3IfUserCurrentStatsEXZ=dsxT3E3IfUserCurrentStatsEXZ, dsxT3E3IfUserTotalStatsCPBE=dsxT3E3IfUserTotalStatsCPBE, dsxT3E3IfUserLifetimeStatsPES=dsxT3E3IfUserLifetimeStatsPES, dsxT3E3IfAnsiCurrentPathStatsSES=dsxT3E3IfAnsiCurrentPathStatsSES, dsxT3E3IfTestConfigType=dsxT3E3IfTestConfigType, dsxT3E3IfUserLifetimeStatsCOFA=dsxT3E3IfUserLifetimeStatsCOFA, dsxT3E3IfConfigMdlPFI=dsxT3E3IfConfigMdlPFI, dsxT3E3IfLastTestResultTestType=dsxT3E3IfLastTestResultTestType, dsxT3E3IfUserArchiveStatsEntry=dsxT3E3IfUserArchiveStatsEntry, dsxT3E3IfAnsiArchiveIntervalPathStatsUAS=dsxT3E3IfAnsiArchiveIntervalPathStatsUAS, dsxT3E3IfAnsiArchiveIntervalStatsTable=dsxT3E3IfAnsiArchiveIntervalStatsTable, dsxT3E3IfUserArchiveStatsFBE=dsxT3E3IfUserArchiveStatsFBE, dsxT3E3IfIetfArchiveStatsSEFS=dsxT3E3IfIetfArchiveStatsSEFS, dsxT3E3IfAnsiCurrentPathStatsES=dsxT3E3IfAnsiCurrentPathStatsES, dsxT3E3IfUserTotalStatsCOFA=dsxT3E3IfUserTotalStatsCOFA, dsxT3E3IfConfigMdlFIC=dsxT3E3IfConfigMdlFIC, dsxT3E3IfIetfCurrentStatsCES=dsxT3E3IfIetfCurrentStatsCES, dsxT3E3IfAlarmThresholdConfigIndex=dsxT3E3IfAlarmThresholdConfigIndex, dsxT3E3IfLastTestResultTestState=dsxT3E3IfLastTestResultTestState, dsxT3E3IfErrorEventStatsEXZ=dsxT3E3IfErrorEventStatsEXZ, dsxT3E3IfUserLifetimeStatsLES=dsxT3E3IfUserLifetimeStatsLES, dsxT3E3IfIetfStatsGroup=dsxT3E3IfIetfStatsGroup, dsxT3E3MIB=dsxT3E3MIB, dsxT3E3IfAlarmThresholdConfigTable=dsxT3E3IfAlarmThresholdConfigTable, dsxT3E3IfAlarmThresholdConfigEntry=dsxT3E3IfAlarmThresholdConfigEntry, dsxT3E3IfUserTotalStatsEntry=dsxT3E3IfUserTotalStatsEntry, dsxT3E3IfUserTotalStatsFBE=dsxT3E3IfUserTotalStatsFBE, dsxT3E3IfAnsiCurrentLineStatsES=dsxT3E3IfAnsiCurrentLineStatsES, dsxT3E3Number=dsxT3E3Number, dsxT3E3IfUserArchiveStatsValidIntervals=dsxT3E3IfUserArchiveStatsValidIntervals, dsxT3E3IfUserTotalStatsPBE=dsxT3E3IfUserTotalStatsPBE, dsxT3E3IfAlarmThresholdConfigFallingThreshold=dsxT3E3IfAlarmThresholdConfigFallingThreshold, dsxT3E3IfTestConfigLoopCode=dsxT3E3IfTestConfigLoopCode, dsxT3E3IfAnsiArchiveIntervalPathStatsCV=dsxT3E3IfAnsiArchiveIntervalPathStatsCV, dsxT3E3IfIetfCurrentStatsPSES=dsxT3E3IfIetfCurrentStatsPSES, dsxT3E3IfIetfArchiveStatsInterval=dsxT3E3IfIetfArchiveStatsInterval, dsxT3E3IfConfigMdlEIC=dsxT3E3IfConfigMdlEIC, dsxT3E3IfStatsGroup=dsxT3E3IfStatsGroup, dsxT3E3IfUserLifetimeStatsCCV=dsxT3E3IfUserLifetimeStatsCCV, dsxT3E3IfUserLifetimeStatsEntry=dsxT3E3IfUserLifetimeStatsEntry, dsxT3E3IfIetfArchiveStatsUAS=dsxT3E3IfIetfArchiveStatsUAS, dsxT3E3IfAnsiArchiveIntervalPathStatsES=dsxT3E3IfAnsiArchiveIntervalPathStatsES, dsxT3E3IfAnsiStatsGroup=dsxT3E3IfAnsiStatsGroup, dsxT3E3IfStatusLineStatus=dsxT3E3IfStatusLineStatus, dsxT3E3IfUserCurrentStatsFBE=dsxT3E3IfUserCurrentStatsFBE, dsxT3E3IfAlarmThresholdConfigObject=dsxT3E3IfAlarmThresholdConfigObject, dsxT3E3IfIetfTotalStatsUAS=dsxT3E3IfIetfTotalStatsUAS, dsxT3E3IfConfigMdlLIC=dsxT3E3IfConfigMdlLIC, dsxT3E3IfTestStatusTable=dsxT3E3IfTestStatusTable, dsxT3E3IfAnsiArchiveStatsValidIntervals=dsxT3E3IfAnsiArchiveStatsValidIntervals, dsxT3E3IfAnsiArchiveIntervalLineStatsES=dsxT3E3IfAnsiArchiveIntervalLineStatsES, dsxT3E3IfIetfCurrentStatsCSES=dsxT3E3IfIetfCurrentStatsCSES, dsxT3E3IfIetfTotalStatsSEFS=dsxT3E3IfIetfTotalStatsSEFS, dsxT3E3IfAnsiArchiveIntervalLineStatsSES=dsxT3E3IfAnsiArchiveIntervalLineStatsSES, dsxT3E3IfIetfArchiveStatsLCV=dsxT3E3IfIetfArchiveStatsLCV, dsxT3E3IfUserLifetimeStatsSEFS=dsxT3E3IfUserLifetimeStatsSEFS, dsxT3E3IfUserArchiveStatsTable=dsxT3E3IfUserArchiveStatsTable, dsxT3E3IfConfigDS3ScramblingEnable=dsxT3E3IfConfigDS3ScramblingEnable, dsxT3E3IfUserLifetimeStatsCPBE=dsxT3E3IfUserLifetimeStatsCPBE, dsxT3E3IfIetfTotalStatsPCV=dsxT3E3IfIetfTotalStatsPCV, dsxT3E3IfAlarmStatusThresholdStatus=dsxT3E3IfAlarmStatusThresholdStatus, dsxT3E3IfIetfTotalStatsCSES=dsxT3E3IfIetfTotalStatsCSES, dsxT3E3IfIndex=dsxT3E3IfIndex, dsxT3E3IfStatusAisLED=dsxT3E3IfStatusAisLED, dsxT3E3IfAnsiCurrentLineStatsCV=dsxT3E3IfAnsiCurrentLineStatsCV, dsxT3E3IfIetfArchiveStatsPSES=dsxT3E3IfIetfArchiveStatsPSES, dsxT3E3IfUserCurrentStatsPBE=dsxT3E3IfUserCurrentStatsPBE, dsxT3E3IfIetfTotalStatsCCV=dsxT3E3IfIetfTotalStatsCCV, dsxT3E3IfUserArchiveStatsPBE=dsxT3E3IfUserArchiveStatsPBE, dsxT3E3IfAnsiTotalPathStatsCV=dsxT3E3IfAnsiTotalPathStatsCV, dsxT3E3IfIetfTotalStatsEntry=dsxT3E3IfIetfTotalStatsEntry, dsxT3E3IfAlarmThresholdConfigRisingThreshold=dsxT3E3IfAlarmThresholdConfigRisingThreshold, dsxT3E3IfTestConfigEntry=dsxT3E3IfTestConfigEntry, dsxT3E3IfConfigLineTable=dsxT3E3IfConfigLineTable, dsxT3E3IfAnsiTotalLineStatsSES=dsxT3E3IfAnsiTotalLineStatsSES, dsxT3E3IfIetfArchiveStatsPES=dsxT3E3IfIetfArchiveStatsPES, dsxT3E3IfIetfCurrentStatsLES=dsxT3E3IfIetfCurrentStatsLES, dsxT3E3IfUserCurrentStatsCOFA=dsxT3E3IfUserCurrentStatsCOFA, dsxT3E3IfUserStatsGroup=dsxT3E3IfUserStatsGroup, dsxT3E3IfIetfArchiveStatsCSES=dsxT3E3IfIetfArchiveStatsCSES, dsxT3E3IfErrorEventStatsFEBE=dsxT3E3IfErrorEventStatsFEBE, dsxT3E3IfAnsiTotalStatsTable=dsxT3E3IfAnsiTotalStatsTable, dsxT3E3IfAnsiCurrentLineStatsSES=dsxT3E3IfAnsiCurrentLineStatsSES, dsxT3E3IfIetfCurrentStatsPCV=dsxT3E3IfIetfCurrentStatsPCV, dsxT3E3IfAnsiArchiveIntervalPathStatsSAS=dsxT3E3IfAnsiArchiveIntervalPathStatsSAS, dsxT3E3IfStatusTable=dsxT3E3IfStatusTable, dsxT3E3IfTestStatusTestType=dsxT3E3IfTestStatusTestType, dsxT3E3IfLastTestResultLoopCode=dsxT3E3IfLastTestResultLoopCode, dsxT3E3IfUserLifetimeStatsLCV=dsxT3E3IfUserLifetimeStatsLCV, dsxT3E3IfIetfCurrentStatsEntry=dsxT3E3IfIetfCurrentStatsEntry, dsxT3E3IfConfigGroup=dsxT3E3IfConfigGroup, dsxT3E3IfUserArchiveStatsCOFA=dsxT3E3IfUserArchiveStatsCOFA, dsxT3E3IfUserCurrentStatsLCV=dsxT3E3IfUserCurrentStatsLCV, dsxT3E3IfUserTotalStatsEXZ=dsxT3E3IfUserTotalStatsEXZ, dsxT3E3IfAnsiTotalLineStatsES=dsxT3E3IfAnsiTotalLineStatsES, dsxT3E3IfAnsiCurrentStatsEntry=dsxT3E3IfAnsiCurrentStatsEntry, dsxT3E3IfStatusGroup=dsxT3E3IfStatusGroup, dsxT3E3IfStatusYellowLED=dsxT3E3IfStatusYellowLED, dsxT3E3IfUserLifetimeStatsFBE=dsxT3E3IfUserLifetimeStatsFBE, dsxT3E3IfAnsiCurrentPathStatsUAS=dsxT3E3IfAnsiCurrentPathStatsUAS, dsxT3E3IfUserArchiveStatsCPBE=dsxT3E3IfUserArchiveStatsCPBE, dsxT3E3IfConfigCableLength=dsxT3E3IfConfigCableLength, dsxT3E3IfAnsiCurrentStatsTimeInCurrent=dsxT3E3IfAnsiCurrentStatsTimeInCurrent, dsxT3E3IfConfigLineEntry=dsxT3E3IfConfigLineEntry, dsxT3E3IfAnsiCurrentPathStatsSAS=dsxT3E3IfAnsiCurrentPathStatsSAS, dsxT3E3IfUserTotalStatsDay=dsxT3E3IfUserTotalStatsDay, dsxT3E3AlarmType=dsxT3E3AlarmType, dsxT3E3IfIetfTotalStatsPSES=dsxT3E3IfIetfTotalStatsPSES, dsxT3E3IfStatusSignalLED=dsxT3E3IfStatusSignalLED, dsxT3E3IfIetfTotalStatsLES=dsxT3E3IfIetfTotalStatsLES, dsxT3E3IfLastTestResultTable=dsxT3E3IfLastTestResultTable, dsxT3E3IfTestConfigTable=dsxT3E3IfTestConfigTable, dsxT3E3IfUserTotalStatsValidDays=dsxT3E3IfUserTotalStatsValidDays, dsxT3E3IfUserTotalStatsTable=dsxT3E3IfUserTotalStatsTable, dsxT3E3IfUserArchiveStatsLCV=dsxT3E3IfUserArchiveStatsLCV, dsxT3E3IfUserCurrentStatsTimeInCurrent=dsxT3E3IfUserCurrentStatsTimeInCurrent, dsxT3E3IfAnsiTotalStatsEntry=dsxT3E3IfAnsiTotalStatsEntry, dsxT3E3IfUserLifetimeStatsPBE=dsxT3E3IfUserLifetimeStatsPBE, dsxT3E3IfAlarmThresholdConfigSampleType=dsxT3E3IfAlarmThresholdConfigSampleType, dsxT3E3IfStatusTransmitClock=dsxT3E3IfStatusTransmitClock, dsxT3E3IfUserCurrentStatsEntry=dsxT3E3IfUserCurrentStatsEntry, dsxT3E3IfErrorEventStatsPBE=dsxT3E3IfErrorEventStatsPBE, dsxT3E3IfIetfCurrentStatsTimeInCurrent=dsxT3E3IfIetfCurrentStatsTimeInCurrent, dsxT3E3IfIetfCurrentStatsLCV=dsxT3E3IfIetfCurrentStatsLCV, dsxT3E3IfIetfArchiveStatsPCV=dsxT3E3IfIetfArchiveStatsPCV, dsxT3E3IfUserLifetimeStatsPCV=dsxT3E3IfUserLifetimeStatsPCV, dsxT3E3IfUserLifetimeStatsPSES=dsxT3E3IfUserLifetimeStatsPSES, dsxT3E3IfConfigLineType=dsxT3E3IfConfigLineType, dsxT3E3IfUserCurrentStatsFEBE=dsxT3E3IfUserCurrentStatsFEBE, dsxT3E3IfLastTestResultEntry=dsxT3E3IfLastTestResultEntry, dsxT3E3IfIetfCurrentStatsPES=dsxT3E3IfIetfCurrentStatsPES, dsxT3E3IfStatusErrorLED=dsxT3E3IfStatusErrorLED, dsxT3E3IfUserCurrentStatsCPBE=dsxT3E3IfUserCurrentStatsCPBE, dsxT3E3IfErrorEventStatsEntry=dsxT3E3IfErrorEventStatsEntry, dsxT3E3IfAnsiArchiveIntervalLineStatsCV=dsxT3E3IfAnsiArchiveIntervalLineStatsCV)
