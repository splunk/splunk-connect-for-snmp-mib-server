#
# PySNMP MIB module A3COM-HUAWEI-POWER-ETH-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-POWER-ETH-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:51:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
pethPsePortDetectionStatus, pethPsePortIndex, pethPsePortGroupIndex, pethMainPseGroupIndex = mibBuilder.importSymbols("POWER-ETHERNET-MIB", "pethPsePortDetectionStatus", "pethPsePortIndex", "pethPsePortGroupIndex", "pethMainPseGroupIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, iso, Unsigned32, IpAddress, Bits, Counter64, ObjectIdentity, Counter32, NotificationType, TimeTicks, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "iso", "Unsigned32", "IpAddress", "Bits", "Counter64", "ObjectIdentity", "Counter32", "NotificationType", "TimeTicks", "Integer32", "ModuleIdentity")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
h3cPowerEthernetExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14))
if mibBuilder.loadTexts: h3cPowerEthernetExt.setLastUpdated('200407261023Z')
if mibBuilder.loadTexts: h3cPowerEthernetExt.setOrganization('Organization.')
h3cPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 1), )
if mibBuilder.loadTexts: h3cPsePortTable.setStatus('current')
h3cPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 1, 1), ).setIndexNames((0, "POWER-ETHERNET-MIB", "pethPsePortGroupIndex"), (0, "POWER-ETHERNET-MIB", "pethPsePortIndex"))
if mibBuilder.loadTexts: h3cPsePortEntry.setStatus('current')
h3cPsePortFaultDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPsePortFaultDescription.setStatus('current')
h3cPsePortPeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPsePortPeakPower.setStatus('current')
h3cPsePortAveragePower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPsePortAveragePower.setStatus('current')
h3cPsePortCurrentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPsePortCurrentPower.setStatus('current')
h3cPsePortPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPsePortPowerLimit.setStatus('current')
h3cPsePortProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPsePortProfileIndex.setStatus('current')
h3cMainPseTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2), )
if mibBuilder.loadTexts: h3cMainPseTable.setStatus('current')
h3cMainPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2, 1), ).setIndexNames((0, "POWER-ETHERNET-MIB", "pethMainPseGroupIndex"))
if mibBuilder.loadTexts: h3cMainPseEntry.setStatus('current')
h3cMainPsePowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMainPsePowerLimit.setStatus('current')
h3cMainPseAveragePower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMainPseAveragePower.setStatus('current')
h3cMainPsePeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMainPsePeakPower.setStatus('current')
h3cMainGuaranteedPowerRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMainGuaranteedPowerRemaining.setStatus('current')
h3cMainPsePriorityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnection", 0), ("non-disconnection", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMainPsePriorityMode.setStatus('current')
h3cMainPseLegacy = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMainPseLegacy.setStatus('current')
h3cMainPsePowerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("low", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cMainPsePowerPriority.setStatus('current')
h3cPseProfilesTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7), )
if mibBuilder.loadTexts: h3cPseProfilesTable.setStatus('current')
h3cPseProfilesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfileIndex"))
if mibBuilder.loadTexts: h3cPseProfilesEntry.setStatus('current')
h3cPseProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: h3cPseProfileIndex.setStatus('current')
h3cPseProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPseProfileName.setStatus('current')
h3cPseProfilePowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("powerDisabled", 1), ("powerEnabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPseProfilePowerMode.setStatus('current')
h3cPseProfilePowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15400))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPseProfilePowerLimit.setStatus('current')
h3cPseProfilePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("low", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPseProfilePriority.setStatus('current')
h3cPseProfilePairs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("signal", 1), ("spare", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPseProfilePairs.setStatus('current')
h3cPseProfileApplyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPseProfileApplyNum.setStatus('current')
h3cPseProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPseProfileRowStatus.setStatus('current')
h3cPseAutoDetectActive = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPseAutoDetectActive.setStatus('current')
h3cPsePowerMaxValue = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPsePowerMaxValue.setStatus('current')
h3cPsePolicyMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPsePolicyMode.setStatus('current')
h3cPDPolicyMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPDPolicyMode.setStatus('current')
h3cpseportNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6))
h3cpsePDChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 1)).setObjects(("POWER-ETHERNET-MIB", "pethPsePortDetectionStatus"))
if mibBuilder.loadTexts: h3cpsePDChangeNotification.setStatus('current')
h3cPOEDisconnectNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 2)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleDisconnect"))
if mibBuilder.loadTexts: h3cPOEDisconnectNotification.setStatus('current')
h3cPOEInputErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 3)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleInputError"))
if mibBuilder.loadTexts: h3cPOEInputErrorNotification.setStatus('current')
h3cPOEOutputErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 4)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleOutputError"))
if mibBuilder.loadTexts: h3cPOEOutputErrorNotification.setStatus('current')
h3cPOEOverVoltageNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 5)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleOverVoltage"))
if mibBuilder.loadTexts: h3cPOEOverVoltageNotification.setStatus('current')
h3cPOEOverTempNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 6)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleOverTemp"))
if mibBuilder.loadTexts: h3cPOEOverTempNotification.setStatus('current')
h3cPOEFanErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 7)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleFanError"))
if mibBuilder.loadTexts: h3cPOEFanErrorNotification.setStatus('current')
h3cPOEModuleShutdownNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 8)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleShutdown"))
if mibBuilder.loadTexts: h3cPOEModuleShutdownNotification.setStatus('current')
h3cPOECurRestrictedNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 9)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleCurRestricted"))
if mibBuilder.loadTexts: h3cPOECurRestrictedNotification.setStatus('current')
h3cPOEACSwitchNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 10)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEACSwitchStateIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEACSwitchState"))
if mibBuilder.loadTexts: h3cPOEACSwitchNotification.setStatus('current')
h3cPOEACInCurANotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 11)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEInCurAState"))
if mibBuilder.loadTexts: h3cPOEACInCurANotification.setStatus('current')
h3cPOEACInCurBNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 12)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEInCurBState"))
if mibBuilder.loadTexts: h3cPOEACInCurBNotification.setStatus('current')
h3cPOEACInCurCNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 13)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEInCurCState"))
if mibBuilder.loadTexts: h3cPOEACInCurCNotification.setStatus('current')
h3cPOEACSwitchVolABNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 14)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESwitchStateVolExIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESwitchStateInVolAB"))
if mibBuilder.loadTexts: h3cPOEACSwitchVolABNotification.setStatus('current')
h3cPOEACSwitchVolBCNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 15)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESwitchStateVolExIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESwitchStateInVolBC"))
if mibBuilder.loadTexts: h3cPOEACSwitchVolBCNotification.setStatus('current')
h3cPOEACSwitchVolCANotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 16)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESwitchStateVolExIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESwitchStateInVolCA"))
if mibBuilder.loadTexts: h3cPOEACSwitchVolCANotification.setStatus('current')
h3cPOEDCOutVolNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 17)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEDCOutStateIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEDCOutDCVolAlarm"))
if mibBuilder.loadTexts: h3cPOEDCOutVolNotification.setStatus('current')
h3cPOEShutdownNotification = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 6, 18))
if mibBuilder.loadTexts: h3cPOEShutdownNotification.setStatus('current')
h3cPseComformance = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4))
h3cPseCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 1))
h3cPseCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 1, 1)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePortGroup"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cMainPseGroup"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseScalarGroup"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePDNotificationGroup"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfilesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPseCompliance = h3cPseCompliance.setStatus('current')
h3cPseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2))
h3cPsePortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 1)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePortProfileIndex"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePortPowerLimit"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePortCurrentPower"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePortAveragePower"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePortPeakPower"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePortFaultDescription"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cMainPsePriorityMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPsePortGroup = h3cPsePortGroup.setStatus('current')
h3cMainPseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 2)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cMainPsePowerLimit"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cMainPseAveragePower"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cMainPsePeakPower"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cMainGuaranteedPowerRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cMainPseGroup = h3cMainPseGroup.setStatus('current')
h3cPseScalarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 3)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseAutoDetectActive"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePowerMaxValue"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPsePolicyMode"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPDPolicyMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPseScalarGroup = h3cPseScalarGroup.setStatus('current')
h3cPsePDNotificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 4)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cpsePDChangeNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPsePDNotificationGroup = h3cPsePDNotificationGroup.setStatus('current')
h3cPseProfilesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 5)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfileName"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfilePowerMode"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfilePowerLimit"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfilePriority"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfilePairs"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfileApplyNum"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPseProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPseProfilesGroup = h3cPseProfilesGroup.setStatus('current')
h3cPOEPowerThresholdLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 6)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEThresholdACMimimum"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEThresholdACMaximum"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEThresholdDCMinimum"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEThresholdDCMaximum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPOEPowerThresholdLimitGroup = h3cPOEPowerThresholdLimitGroup.setStatus('current')
h3cPOEPowerSupInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 7)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEPowerType"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEPowerModuleNum"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESupervisionModuleName"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESMMajorVersion"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESMMinorVersion"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESMFactorName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPOEPowerSupInfoGroup = h3cPOEPowerSupInfoGroup.setStatus('current')
h3cPOEPowerDCOutStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 8)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEDCOutStateModuleNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPOEPowerDCOutStateGroup = h3cPOEPowerDCOutStateGroup.setStatus('current')
h3cPOEPowerDCOutInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 9)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEDCOutCurNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPOEPowerDCOutInfoGroup = h3cPOEPowerDCOutInfoGroup.setStatus('current')
h3cPOEPowerACSwitchStateModuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 10)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEACSwitchStateModuleNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPOEPowerACSwitchStateModuleGroup = h3cPOEPowerACSwitchStateModuleGroup.setStatus('current')
h3cPOEPowerInCurStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 11)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEInCurStateModuleNum"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEInCurAState"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEInCurBState"), ("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEInCurCState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPOEPowerInCurStateGroup = h3cPOEPowerInCurStateGroup.setStatus('current')
h3cPOEPowerAlarmStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 4, 2, 12)).setObjects(("A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmStateModuleNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cPOEPowerAlarmStateGroup = h3cPOEPowerAlarmStateGroup.setStatus('current')
class ACAlarmState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("normal", 1), ("underLimit", 2), ("aboveLimit", 3), ("lackPhrase", 4), ("fuseBroken", 5), ("switchOff", 6), ("otherError", 7))

class DCAlarmState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("normal", 1), ("underLimit", 2), ("aboveLimit", 3), ("fuseBroken", 4), ("switchOff", 5), ("otherError", 6))

class SwitchState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("on", 1), ("off", 2), ("highVoltInput", 3), ("lowVoltInput", 4))

class ModuleAlarmState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("normal", 1), ("alarm", 2))

h3cPOEPowerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8))
h3cPOEThresholdLimitObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 1))
h3cPOEThresholdACMimimum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPOEThresholdACMimimum.setStatus('current')
h3cPOEThresholdACMaximum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPOEThresholdACMaximum.setStatus('current')
h3cPOEThresholdDCMinimum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPOEThresholdDCMinimum.setStatus('current')
h3cPOEThresholdDCMaximum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPOEThresholdDCMaximum.setStatus('current')
h3cPOESupModuleInfoObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2))
h3cPOEPowerType = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEPowerType.setStatus('current')
h3cPOEPowerModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEPowerModuleNum.setStatus('current')
h3cPOESupervisionModuleName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOESupervisionModuleName.setStatus('current')
h3cPOESMMajorVersion = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOESMMajorVersion.setStatus('current')
h3cPOESMMinorVersion = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOESMMinorVersion.setStatus('current')
h3cPOESMFactorName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOESMFactorName.setStatus('current')
h3cPOEModuleInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 7), )
if mibBuilder.loadTexts: h3cPOEModuleInfoTable.setStatus('current')
h3cPOEModuleInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEModuleIndex"))
if mibBuilder.loadTexts: h3cPOEModuleInfoEntry.setStatus('current')
h3cPOEModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPOEModuleIndex.setStatus('current')
h3cPOEModuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleID.setStatus('current')
h3cPOEModuleInfoPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleInfoPower.setStatus('current')
h3cPOEModuleHardVerInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 2, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleHardVerInfo.setStatus('current')
h3cPOEDCOutStateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 3))
h3cPOEDCOutStateModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEDCOutStateModuleNum.setStatus('current')
h3cPOEDCOutStateTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 3, 2), )
if mibBuilder.loadTexts: h3cPOEDCOutStateTable.setStatus('current')
h3cPOEDCOutStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 3, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEDCOutStateIndex"))
if mibBuilder.loadTexts: h3cPOEDCOutStateEntry.setStatus('current')
h3cPOEDCOutStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPOEDCOutStateIndex.setStatus('current')
h3cPOEDCOutDCVolAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 3, 2, 1, 2), DCAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEDCOutDCVolAlarm.setStatus('current')
h3cPOEDCOutInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 4))
h3cPOEDCOutCurNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEDCOutCurNum.setStatus('current')
h3cPOEDCOutInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 4, 2), )
if mibBuilder.loadTexts: h3cPOEDCOutInfoTable.setStatus('current')
h3cPOEDCOutInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 4, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEDCOutInfoIndex"))
if mibBuilder.loadTexts: h3cPOEDCOutInfoEntry.setStatus('current')
h3cPOEDCOutInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPOEDCOutInfoIndex.setStatus('current')
h3cPOEDCOutVol = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEDCOutVol.setStatus('current')
h3cPOEDCOutInfoLoadCur = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEDCOutInfoLoadCur.setStatus('current')
h3cPOEACSwitchStateModuleObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 5))
h3cPOEACSwitchStateModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEACSwitchStateModuleNum.setStatus('current')
h3cPOEACSwitchStateTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 5, 2), )
if mibBuilder.loadTexts: h3cPOEACSwitchStateTable.setStatus('current')
h3cPOEACSwitchStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 5, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEACSwitchStateIndex"))
if mibBuilder.loadTexts: h3cPOEACSwitchStateEntry.setStatus('current')
h3cPOEACSwitchStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPOEACSwitchStateIndex.setStatus('current')
h3cPOEACSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 5, 2, 1, 2), SwitchState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEACSwitchState.setStatus('current')
h3cPOEInCurStateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6))
h3cPOEInCurStateModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEInCurStateModuleNum.setStatus('current')
h3cPOEInCurAState = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 2), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEInCurAState.setStatus('current')
h3cPOEInCurBState = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 3), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEInCurBState.setStatus('current')
h3cPOEInCurCState = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 4), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEInCurCState.setStatus('current')
h3cPOESwitchStateVolExTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 5), )
if mibBuilder.loadTexts: h3cPOESwitchStateVolExTable.setStatus('current')
h3cPOESwitchStateVolExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOESwitchStateVolExIndex"))
if mibBuilder.loadTexts: h3cPOESwitchStateVolExEntry.setStatus('current')
h3cPOESwitchStateVolExIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPOESwitchStateVolExIndex.setStatus('current')
h3cPOESwitchStateInVolAB = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 5, 1, 2), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOESwitchStateInVolAB.setStatus('current')
h3cPOESwitchStateInVolBC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 5, 1, 3), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOESwitchStateInVolBC.setStatus('current')
h3cPOESwitchStateInVolCA = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 6, 5, 1, 4), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOESwitchStateInVolCA.setStatus('current')
h3cPOEAlarmStateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7))
h3cPOEAlarmStateModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEAlarmStateModuleNum.setStatus('current')
h3cPOEAlarmStateInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2), )
if mibBuilder.loadTexts: h3cPOEAlarmStateInfoTable.setStatus('current')
h3cPOEAlarmStateInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-POWER-ETH-EXT-MIB", "h3cPOEAlarmModuleInfoIndex"))
if mibBuilder.loadTexts: h3cPOEAlarmStateInfoEntry.setStatus('current')
h3cPOEAlarmModuleInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPOEAlarmModuleInfoIndex.setStatus('current')
h3cPOEModuleDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 2), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleDisconnect.setStatus('current')
h3cPOEModuleInputError = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 3), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleInputError.setStatus('current')
h3cPOEModuleOutputError = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 4), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleOutputError.setStatus('current')
h3cPOEModuleOverVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 5), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleOverVoltage.setStatus('current')
h3cPOEModuleOverTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 6), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleOverTemp.setStatus('current')
h3cPOEModuleFanError = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 7), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleFanError.setStatus('current')
h3cPOEModuleShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 8), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleShutdown.setStatus('current')
h3cPOEModuleCurRestricted = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 14, 8, 7, 2, 1, 9), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPOEModuleCurRestricted.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-POWER-ETH-EXT-MIB", h3cPseAutoDetectActive=h3cPseAutoDetectActive, h3cPOEOutputErrorNotification=h3cPOEOutputErrorNotification, h3cPOEPowerAlarmStateGroup=h3cPOEPowerAlarmStateGroup, h3cPOEDCOutStateModuleNum=h3cPOEDCOutStateModuleNum, h3cPOEThresholdDCMaximum=h3cPOEThresholdDCMaximum, h3cPOESwitchStateInVolBC=h3cPOESwitchStateInVolBC, h3cPOESwitchStateVolExTable=h3cPOESwitchStateVolExTable, h3cPOEModuleIndex=h3cPOEModuleIndex, h3cPOEACSwitchStateTable=h3cPOEACSwitchStateTable, h3cPOEAlarmStateInfoTable=h3cPOEAlarmStateInfoTable, h3cPOEThresholdACMimimum=h3cPOEThresholdACMimimum, h3cPsePortFaultDescription=h3cPsePortFaultDescription, h3cPOEACInCurANotification=h3cPOEACInCurANotification, h3cPDPolicyMode=h3cPDPolicyMode, h3cMainGuaranteedPowerRemaining=h3cMainGuaranteedPowerRemaining, h3cPOEModuleInfoEntry=h3cPOEModuleInfoEntry, h3cPOEDCOutVol=h3cPOEDCOutVol, h3cPseProfilesEntry=h3cPseProfilesEntry, h3cPOEACInCurBNotification=h3cPOEACInCurBNotification, h3cPowerEthernetExt=h3cPowerEthernetExt, h3cPOEInCurStateObjects=h3cPOEInCurStateObjects, h3cPsePortPowerLimit=h3cPsePortPowerLimit, h3cPOEThresholdACMaximum=h3cPOEThresholdACMaximum, h3cPsePortProfileIndex=h3cPsePortProfileIndex, h3cPOEInCurStateModuleNum=h3cPOEInCurStateModuleNum, h3cPseComformance=h3cPseComformance, h3cPseProfileRowStatus=h3cPseProfileRowStatus, h3cPOEPowerACSwitchStateModuleGroup=h3cPOEPowerACSwitchStateModuleGroup, h3cPOEThresholdLimitObjs=h3cPOEThresholdLimitObjs, h3cPseProfilePowerLimit=h3cPseProfilePowerLimit, h3cPsePortGroup=h3cPsePortGroup, h3cPseScalarGroup=h3cPseScalarGroup, h3cPOESupModuleInfoObjs=h3cPOESupModuleInfoObjs, h3cPsePortEntry=h3cPsePortEntry, h3cMainPseEntry=h3cMainPseEntry, h3cPsePortAveragePower=h3cPsePortAveragePower, h3cPOEModuleInfoPower=h3cPOEModuleInfoPower, h3cPOEPowerType=h3cPOEPowerType, h3cPseCompliances=h3cPseCompliances, h3cPOESwitchStateVolExEntry=h3cPOESwitchStateVolExEntry, h3cPOEACSwitchState=h3cPOEACSwitchState, h3cPOEACInCurCNotification=h3cPOEACInCurCNotification, h3cPsePowerMaxValue=h3cPsePowerMaxValue, h3cPOEPowerDCOutStateGroup=h3cPOEPowerDCOutStateGroup, h3cPOEDCOutInfoIndex=h3cPOEDCOutInfoIndex, h3cMainPseAveragePower=h3cMainPseAveragePower, h3cPseProfilePriority=h3cPseProfilePriority, SwitchState=SwitchState, h3cPOEModuleInputError=h3cPOEModuleInputError, h3cPOEModuleOverVoltage=h3cPOEModuleOverVoltage, h3cPsePortPeakPower=h3cPsePortPeakPower, h3cPOEPowerObjects=h3cPOEPowerObjects, h3cPOEDCOutStateTable=h3cPOEDCOutStateTable, h3cPOEModuleID=h3cPOEModuleID, h3cPOEDisconnectNotification=h3cPOEDisconnectNotification, h3cPOEModuleOverTemp=h3cPOEModuleOverTemp, h3cPOESMMinorVersion=h3cPOESMMinorVersion, h3cPOEDCOutInfoTable=h3cPOEDCOutInfoTable, h3cPseProfilePowerMode=h3cPseProfilePowerMode, h3cPseGroup=h3cPseGroup, h3cPOEACSwitchStateModuleNum=h3cPOEACSwitchStateModuleNum, h3cPOEACSwitchStateIndex=h3cPOEACSwitchStateIndex, h3cPOEAlarmStateInfoEntry=h3cPOEAlarmStateInfoEntry, h3cPOEOverTempNotification=h3cPOEOverTempNotification, h3cPOEDCOutStateObjects=h3cPOEDCOutStateObjects, h3cPOEACSwitchVolCANotification=h3cPOEACSwitchVolCANotification, h3cPOEOverVoltageNotification=h3cPOEOverVoltageNotification, h3cPseProfileIndex=h3cPseProfileIndex, h3cPseProfileApplyNum=h3cPseProfileApplyNum, h3cPOEShutdownNotification=h3cPOEShutdownNotification, h3cPOEModuleFanError=h3cPOEModuleFanError, h3cPOEACSwitchStateEntry=h3cPOEACSwitchStateEntry, h3cPOEInCurCState=h3cPOEInCurCState, h3cPOEAlarmStateModuleNum=h3cPOEAlarmStateModuleNum, h3cMainPseTable=h3cMainPseTable, h3cPOEACSwitchNotification=h3cPOEACSwitchNotification, h3cMainPsePeakPower=h3cMainPsePeakPower, h3cPOEPowerInCurStateGroup=h3cPOEPowerInCurStateGroup, h3cPOEACSwitchVolABNotification=h3cPOEACSwitchVolABNotification, h3cPseProfileName=h3cPseProfileName, h3cMainPsePowerLimit=h3cMainPsePowerLimit, h3cMainPsePowerPriority=h3cMainPsePowerPriority, h3cPOEPowerModuleNum=h3cPOEPowerModuleNum, h3cMainPseLegacy=h3cMainPseLegacy, h3cPOEThresholdDCMinimum=h3cPOEThresholdDCMinimum, h3cPOEDCOutDCVolAlarm=h3cPOEDCOutDCVolAlarm, h3cPOEModuleInfoTable=h3cPOEModuleInfoTable, h3cPseProfilesTable=h3cPseProfilesTable, h3cPOEDCOutInfoObjects=h3cPOEDCOutInfoObjects, h3cPOEInCurBState=h3cPOEInCurBState, h3cPOEModuleOutputError=h3cPOEModuleOutputError, h3cPOEACSwitchStateModuleObjs=h3cPOEACSwitchStateModuleObjs, h3cPsePolicyMode=h3cPsePolicyMode, h3cPOEInputErrorNotification=h3cPOEInputErrorNotification, h3cPOEModuleDisconnect=h3cPOEModuleDisconnect, h3cPOESMMajorVersion=h3cPOESMMajorVersion, h3cPOEAlarmModuleInfoIndex=h3cPOEAlarmModuleInfoIndex, h3cPOEFanErrorNotification=h3cPOEFanErrorNotification, h3cPOESwitchStateVolExIndex=h3cPOESwitchStateVolExIndex, h3cPsePortCurrentPower=h3cPsePortCurrentPower, h3cPOEPowerThresholdLimitGroup=h3cPOEPowerThresholdLimitGroup, h3cPOESwitchStateInVolAB=h3cPOESwitchStateInVolAB, h3cPOESwitchStateInVolCA=h3cPOESwitchStateInVolCA, DCAlarmState=DCAlarmState, h3cPOEACSwitchVolBCNotification=h3cPOEACSwitchVolBCNotification, PYSNMP_MODULE_ID=h3cPowerEthernetExt, h3cMainPsePriorityMode=h3cMainPsePriorityMode, h3cPOEDCOutStateEntry=h3cPOEDCOutStateEntry, h3cMainPseGroup=h3cMainPseGroup, h3cPOEModuleCurRestricted=h3cPOEModuleCurRestricted, h3cpseportNotification=h3cpseportNotification, h3cPOEDCOutInfoLoadCur=h3cPOEDCOutInfoLoadCur, h3cpsePDChangeNotification=h3cpsePDChangeNotification, h3cPOEDCOutCurNum=h3cPOEDCOutCurNum, h3cPOEModuleShutdown=h3cPOEModuleShutdown, h3cPsePortTable=h3cPsePortTable, h3cPOEModuleShutdownNotification=h3cPOEModuleShutdownNotification, h3cPOECurRestrictedNotification=h3cPOECurRestrictedNotification, h3cPsePDNotificationGroup=h3cPsePDNotificationGroup, h3cPOEDCOutVolNotification=h3cPOEDCOutVolNotification, h3cPseProfilePairs=h3cPseProfilePairs, ACAlarmState=ACAlarmState, h3cPseCompliance=h3cPseCompliance, h3cPseProfilesGroup=h3cPseProfilesGroup, h3cPOESMFactorName=h3cPOESMFactorName, h3cPOEPowerDCOutInfoGroup=h3cPOEPowerDCOutInfoGroup, h3cPOEModuleHardVerInfo=h3cPOEModuleHardVerInfo, h3cPOEPowerSupInfoGroup=h3cPOEPowerSupInfoGroup, h3cPOEInCurAState=h3cPOEInCurAState, h3cPOESupervisionModuleName=h3cPOESupervisionModuleName, ModuleAlarmState=ModuleAlarmState, h3cPOEDCOutInfoEntry=h3cPOEDCOutInfoEntry, h3cPOEAlarmStateObjects=h3cPOEAlarmStateObjects, h3cPOEDCOutStateIndex=h3cPOEDCOutStateIndex)
