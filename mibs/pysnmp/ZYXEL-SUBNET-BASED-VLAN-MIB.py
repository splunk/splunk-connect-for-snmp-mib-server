#
# PySNMP MIB module ZYXEL-SUBNET-BASED-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-SUBNET-BASED-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:45:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, Counter64, MibIdentifier, Counter32, Gauge32, Unsigned32, Integer32, ObjectIdentity, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "Counter64", "MibIdentifier", "Counter32", "Gauge32", "Unsigned32", "Integer32", "ObjectIdentity", "IpAddress", "iso")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelSubnetBasedVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80))
if mibBuilder.loadTexts: zyxelSubnetBasedVlan.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelSubnetBasedVlan.setOrganization('Enterprise Solution ZyXEL')
zyxelSubnetBasedVlanSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1))
zySubnetBasedVlanState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySubnetBasedVlanState.setStatus('current')
zySubnetBasedVlanDhcpVlanOverrideState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySubnetBasedVlanDhcpVlanOverrideState.setStatus('current')
zySubnetBasedVlanMaxNumberOfVlans = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySubnetBasedVlanMaxNumberOfVlans.setStatus('current')
zyxelSubnetBasedVlanTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 4), )
if mibBuilder.loadTexts: zyxelSubnetBasedVlanTable.setStatus('current')
zyxelSubnetBasedVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 4, 1), ).setIndexNames((0, "ZYXEL-SUBNET-BASED-VLAN-MIB", "zySubnetBasedVlanSourceIpAddress"), (0, "ZYXEL-SUBNET-BASED-VLAN-MIB", "zySubnetBasedVlanSourceMaskBits"))
if mibBuilder.loadTexts: zyxelSubnetBasedVlanEntry.setStatus('current')
zySubnetBasedVlanSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: zySubnetBasedVlanSourceIpAddress.setStatus('current')
zySubnetBasedVlanSourceMaskBits = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: zySubnetBasedVlanSourceMaskBits.setStatus('current')
zySubnetBasedVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySubnetBasedVlanName.setStatus('current')
zySubnetBasedVlanVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySubnetBasedVlanVid.setStatus('current')
zySubnetBasedVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySubnetBasedVlanPriority.setStatus('current')
zySubnetBasedVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 80, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zySubnetBasedVlanRowStatus.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-SUBNET-BASED-VLAN-MIB", zySubnetBasedVlanDhcpVlanOverrideState=zySubnetBasedVlanDhcpVlanOverrideState, zySubnetBasedVlanMaxNumberOfVlans=zySubnetBasedVlanMaxNumberOfVlans, zyxelSubnetBasedVlan=zyxelSubnetBasedVlan, PYSNMP_MODULE_ID=zyxelSubnetBasedVlan, zyxelSubnetBasedVlanEntry=zyxelSubnetBasedVlanEntry, zySubnetBasedVlanSourceIpAddress=zySubnetBasedVlanSourceIpAddress, zySubnetBasedVlanPriority=zySubnetBasedVlanPriority, zyxelSubnetBasedVlanSetup=zyxelSubnetBasedVlanSetup, zySubnetBasedVlanName=zySubnetBasedVlanName, zyxelSubnetBasedVlanTable=zyxelSubnetBasedVlanTable, zySubnetBasedVlanRowStatus=zySubnetBasedVlanRowStatus, zySubnetBasedVlanSourceMaskBits=zySubnetBasedVlanSourceMaskBits, zySubnetBasedVlanState=zySubnetBasedVlanState, zySubnetBasedVlanVid=zySubnetBasedVlanVid)
