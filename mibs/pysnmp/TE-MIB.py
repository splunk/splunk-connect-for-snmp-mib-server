#
# PySNMP MIB module TE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
TeHopAddress, MplsBitRate, TeHopAddressType = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "TeHopAddress", "MplsBitRate", "TeHopAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, Bits, ModuleIdentity, mib_2, Counter32, ObjectIdentity, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, Gauge32, TimeTicks, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "ModuleIdentity", "mib-2", "Counter32", "ObjectIdentity", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "Gauge32", "TimeTicks", "Unsigned32", "MibIdentifier")
RowStatus, DisplayString, TextualConvention, StorageType, TruthValue, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "StorageType", "TruthValue", "TimeStamp")
teMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 122))
teMIB.setRevisions(('2005-01-04 00:00',))
if mibBuilder.loadTexts: teMIB.setLastUpdated('200501040000Z')
if mibBuilder.loadTexts: teMIB.setOrganization('IETF Traffic Engineering Working Group')
teMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 122, 0))
teMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 122, 1))
teMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 122, 2))
teInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 122, 1, 1))
teDistProtocol = MibScalar((1, 3, 6, 1, 2, 1, 122, 1, 1, 1), Bits().clone(namedValues=NamedValues(("other", 0), ("isis", 1), ("ospf", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teDistProtocol.setStatus('current')
teSignalingProto = MibScalar((1, 3, 6, 1, 2, 1, 122, 1, 1, 2), Bits().clone(namedValues=NamedValues(("other", 0), ("rsvpte", 1), ("crldp", 2), ("static", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teSignalingProto.setStatus('current')
teNotificationEnable = MibScalar((1, 3, 6, 1, 2, 1, 122, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teNotificationEnable.setStatus('current')
teNextTunnelIndex = MibScalar((1, 3, 6, 1, 2, 1, 122, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teNextTunnelIndex.setStatus('current')
teNextPathHopIndex = MibScalar((1, 3, 6, 1, 2, 1, 122, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teNextPathHopIndex.setStatus('current')
teConfiguredTunnels = MibScalar((1, 3, 6, 1, 2, 1, 122, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teConfiguredTunnels.setStatus('current')
teActiveTunnels = MibScalar((1, 3, 6, 1, 2, 1, 122, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teActiveTunnels.setStatus('current')
tePrimaryTunnels = MibScalar((1, 3, 6, 1, 2, 1, 122, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tePrimaryTunnels.setStatus('current')
teAdminGroupTable = MibTable((1, 3, 6, 1, 2, 1, 122, 1, 1, 9), )
if mibBuilder.loadTexts: teAdminGroupTable.setStatus('current')
teAdminGroupEntry = MibTableRow((1, 3, 6, 1, 2, 1, 122, 1, 1, 9, 1), ).setIndexNames((0, "TE-MIB", "teAdminGroupNumber"))
if mibBuilder.loadTexts: teAdminGroupEntry.setStatus('current')
teAdminGroupNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: teAdminGroupNumber.setStatus('current')
teAdminGroupName = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 1, 9, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teAdminGroupName.setStatus('current')
teAdminGroupRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 1, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teAdminGroupRowStatus.setStatus('current')
teTunnelTable = MibTable((1, 3, 6, 1, 2, 1, 122, 1, 2), )
if mibBuilder.loadTexts: teTunnelTable.setStatus('current')
teTunnelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 122, 1, 2, 1), ).setIndexNames((0, "TE-MIB", "teTunnelIndex"))
if mibBuilder.loadTexts: teTunnelEntry.setStatus('current')
teTunnelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: teTunnelIndex.setStatus('current')
teTunnelName = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teTunnelName.setStatus('current')
teTunnelNextPathIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelNextPathIndex.setStatus('current')
teTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teTunnelRowStatus.setStatus('current')
teTunnelStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 5), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teTunnelStorageType.setStatus('current')
teTunnelSourceAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 6), TeHopAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teTunnelSourceAddressType.setStatus('current')
teTunnelSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 7), TeHopAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teTunnelSourceAddress.setStatus('current')
teTunnelDestinationAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 8), TeHopAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teTunnelDestinationAddressType.setStatus('current')
teTunnelDestinationAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 9), TeHopAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: teTunnelDestinationAddress.setStatus('current')
teTunnelState = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("up", 2), ("down", 3), ("testing", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelState.setStatus('current')
teTunnelDiscontinuityTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelDiscontinuityTimer.setStatus('current')
teTunnelOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelOctets.setStatus('current')
teTunnelPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelPackets.setStatus('current')
teTunnelLPOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelLPOctets.setStatus('current')
teTunnelLPPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelLPPackets.setStatus('current')
teTunnelAge = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelAge.setStatus('current')
teTunnelTimeUp = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelTimeUp.setStatus('current')
teTunnelPrimaryTimeUp = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelPrimaryTimeUp.setStatus('current')
teTunnelTransitions = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelTransitions.setStatus('current')
teTunnelLastTransition = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelLastTransition.setStatus('current')
teTunnelPathChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelPathChanges.setStatus('current')
teTunnelLastPathChange = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 22), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelLastPathChange.setStatus('current')
teTunnelConfiguredPaths = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelConfiguredPaths.setStatus('current')
teTunnelStandbyPaths = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelStandbyPaths.setStatus('current')
teTunnelOperationalPaths = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teTunnelOperationalPaths.setStatus('current')
tePathTable = MibTable((1, 3, 6, 1, 2, 1, 122, 1, 3), )
if mibBuilder.loadTexts: tePathTable.setStatus('current')
tePathEntry = MibTableRow((1, 3, 6, 1, 2, 1, 122, 1, 3, 1), ).setIndexNames((0, "TE-MIB", "teTunnelIndex"), (0, "TE-MIB", "tePathIndex"))
if mibBuilder.loadTexts: tePathEntry.setStatus('current')
tePathIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tePathIndex.setStatus('current')
tePathName = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathName.setStatus('current')
tePathRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathRowStatus.setStatus('current')
tePathStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 4), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathStorageType.setStatus('current')
tePathType = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("primary", 2), ("standby", 3), ("secondary", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathType.setStatus('current')
tePathConfiguredRoute = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathConfiguredRoute.setStatus('current')
tePathBandwidth = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 7), MplsBitRate()).setUnits('Kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathBandwidth.setStatus('current')
tePathIncludeAny = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathIncludeAny.setStatus('current')
tePathIncludeAll = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathIncludeAll.setStatus('current')
tePathExclude = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathExclude.setStatus('current')
tePathSetupPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathSetupPriority.setStatus('current')
tePathHoldPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathHoldPriority.setStatus('current')
tePathProperties = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 13), Bits().clone(namedValues=NamedValues(("recordRoute", 0), ("cspf", 1), ("makeBeforeBreak", 2), ("mergeable", 3), ("fastReroute", 4), ("protected", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathProperties.setStatus('current')
tePathOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("down", 1), ("testing", 2), ("dormant", 3), ("ready", 4), ("operational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tePathOperStatus.setStatus('current')
tePathAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("testing", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathAdminStatus.setStatus('current')
tePathComputedRoute = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tePathComputedRoute.setStatus('current')
tePathRecordedRoute = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 3, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tePathRecordedRoute.setStatus('current')
tePathHopTable = MibTable((1, 3, 6, 1, 2, 1, 122, 1, 4), )
if mibBuilder.loadTexts: tePathHopTable.setStatus('current')
tePathHopEntry = MibTableRow((1, 3, 6, 1, 2, 1, 122, 1, 4, 1), ).setIndexNames((0, "TE-MIB", "teHopListIndex"), (0, "TE-MIB", "tePathHopIndex"))
if mibBuilder.loadTexts: tePathHopEntry.setStatus('current')
teHopListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: teHopListIndex.setStatus('current')
tePathHopIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tePathHopIndex.setStatus('current')
tePathHopRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathHopRowStatus.setStatus('current')
tePathHopStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 4, 1, 4), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathHopStorageType.setStatus('current')
tePathHopAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 4, 1, 5), TeHopAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathHopAddrType.setStatus('current')
tePathHopAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 4, 1, 6), TeHopAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tePathHopAddress.setStatus('current')
tePathHopType = MibTableColumn((1, 3, 6, 1, 2, 1, 122, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("loose", 1), ("strict", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tePathHopType.setStatus('current')
teTunnelUp = NotificationType((1, 3, 6, 1, 2, 1, 122, 0, 1)).setObjects(("TE-MIB", "teTunnelName"), ("TE-MIB", "tePathName"))
if mibBuilder.loadTexts: teTunnelUp.setStatus('current')
teTunnelDown = NotificationType((1, 3, 6, 1, 2, 1, 122, 0, 2)).setObjects(("TE-MIB", "teTunnelName"), ("TE-MIB", "tePathName"))
if mibBuilder.loadTexts: teTunnelDown.setStatus('current')
teTunnelChanged = NotificationType((1, 3, 6, 1, 2, 1, 122, 0, 3)).setObjects(("TE-MIB", "teTunnelName"), ("TE-MIB", "tePathName"))
if mibBuilder.loadTexts: teTunnelChanged.setStatus('current')
teTunnelRerouted = NotificationType((1, 3, 6, 1, 2, 1, 122, 0, 4)).setObjects(("TE-MIB", "teTunnelName"), ("TE-MIB", "tePathName"))
if mibBuilder.loadTexts: teTunnelRerouted.setStatus('current')
teGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 122, 2, 1))
teModuleCompliance = MibIdentifier((1, 3, 6, 1, 2, 1, 122, 2, 2))
teTrafficEngineeringGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 122, 2, 1, 1)).setObjects(("TE-MIB", "teTunnelName"), ("TE-MIB", "teTunnelNextPathIndex"), ("TE-MIB", "teTunnelRowStatus"), ("TE-MIB", "teTunnelStorageType"), ("TE-MIB", "teTunnelSourceAddressType"), ("TE-MIB", "teTunnelSourceAddress"), ("TE-MIB", "teTunnelDestinationAddressType"), ("TE-MIB", "teTunnelDestinationAddress"), ("TE-MIB", "teTunnelState"), ("TE-MIB", "teTunnelDiscontinuityTimer"), ("TE-MIB", "teTunnelOctets"), ("TE-MIB", "teTunnelPackets"), ("TE-MIB", "teTunnelLPOctets"), ("TE-MIB", "teTunnelLPPackets"), ("TE-MIB", "teTunnelAge"), ("TE-MIB", "teTunnelTimeUp"), ("TE-MIB", "teTunnelPrimaryTimeUp"), ("TE-MIB", "teTunnelTransitions"), ("TE-MIB", "teTunnelLastTransition"), ("TE-MIB", "teTunnelPathChanges"), ("TE-MIB", "teTunnelLastPathChange"), ("TE-MIB", "teTunnelConfiguredPaths"), ("TE-MIB", "teTunnelStandbyPaths"), ("TE-MIB", "teTunnelOperationalPaths"), ("TE-MIB", "tePathBandwidth"), ("TE-MIB", "tePathIncludeAny"), ("TE-MIB", "tePathIncludeAll"), ("TE-MIB", "tePathExclude"), ("TE-MIB", "tePathSetupPriority"), ("TE-MIB", "tePathHoldPriority"), ("TE-MIB", "tePathProperties"), ("TE-MIB", "tePathOperStatus"), ("TE-MIB", "tePathAdminStatus"), ("TE-MIB", "tePathComputedRoute"), ("TE-MIB", "tePathRecordedRoute"), ("TE-MIB", "teDistProtocol"), ("TE-MIB", "teSignalingProto"), ("TE-MIB", "teNotificationEnable"), ("TE-MIB", "teNextTunnelIndex"), ("TE-MIB", "teNextPathHopIndex"), ("TE-MIB", "teAdminGroupName"), ("TE-MIB", "teAdminGroupRowStatus"), ("TE-MIB", "teConfiguredTunnels"), ("TE-MIB", "teActiveTunnels"), ("TE-MIB", "tePrimaryTunnels"), ("TE-MIB", "tePathName"), ("TE-MIB", "tePathType"), ("TE-MIB", "tePathRowStatus"), ("TE-MIB", "tePathStorageType"), ("TE-MIB", "tePathConfiguredRoute"), ("TE-MIB", "tePathHopRowStatus"), ("TE-MIB", "tePathHopStorageType"), ("TE-MIB", "tePathHopAddrType"), ("TE-MIB", "tePathHopAddress"), ("TE-MIB", "tePathHopType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    teTrafficEngineeringGroup = teTrafficEngineeringGroup.setStatus('current')
teNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 122, 2, 1, 2)).setObjects(("TE-MIB", "teTunnelUp"), ("TE-MIB", "teTunnelDown"), ("TE-MIB", "teTunnelChanged"), ("TE-MIB", "teTunnelRerouted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    teNotificationGroup = teNotificationGroup.setStatus('current')
teModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 122, 2, 2, 1)).setObjects(("TE-MIB", "teTrafficEngineeringGroup"), ("TE-MIB", "teNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    teModuleReadOnlyCompliance = teModuleReadOnlyCompliance.setStatus('current')
teModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 122, 2, 2, 2)).setObjects(("TE-MIB", "teTrafficEngineeringGroup"), ("TE-MIB", "teNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    teModuleFullCompliance = teModuleFullCompliance.setStatus('current')
teModuleServerReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 122, 2, 2, 3)).setObjects(("TE-MIB", "teTrafficEngineeringGroup"), ("TE-MIB", "teNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    teModuleServerReadOnlyCompliance = teModuleServerReadOnlyCompliance.setStatus('current')
teModuleServerFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 122, 2, 2, 4)).setObjects(("TE-MIB", "teTrafficEngineeringGroup"), ("TE-MIB", "teNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    teModuleServerFullCompliance = teModuleServerFullCompliance.setStatus('current')
mibBuilder.exportSymbols("TE-MIB", tePathEntry=tePathEntry, teGroups=teGroups, teHopListIndex=teHopListIndex, teMIBConformance=teMIBConformance, teTunnelTable=teTunnelTable, teDistProtocol=teDistProtocol, teTunnelState=teTunnelState, tePathBandwidth=tePathBandwidth, tePrimaryTunnels=tePrimaryTunnels, teModuleReadOnlyCompliance=teModuleReadOnlyCompliance, teTunnelSourceAddress=teTunnelSourceAddress, teTunnelChanged=teTunnelChanged, teTunnelEntry=teTunnelEntry, teInfo=teInfo, tePathComputedRoute=tePathComputedRoute, teActiveTunnels=teActiveTunnels, teTunnelRerouted=teTunnelRerouted, tePathHoldPriority=tePathHoldPriority, teTunnelTimeUp=teTunnelTimeUp, teNextPathHopIndex=teNextPathHopIndex, teMIBObjects=teMIBObjects, tePathTable=tePathTable, teTunnelNextPathIndex=teTunnelNextPathIndex, teTunnelTransitions=teTunnelTransitions, teTunnelDestinationAddress=teTunnelDestinationAddress, tePathConfiguredRoute=tePathConfiguredRoute, teTunnelAge=teTunnelAge, teTunnelPrimaryTimeUp=teTunnelPrimaryTimeUp, teAdminGroupEntry=teAdminGroupEntry, tePathHopType=tePathHopType, tePathIncludeAll=tePathIncludeAll, tePathRecordedRoute=tePathRecordedRoute, tePathAdminStatus=tePathAdminStatus, teModuleServerReadOnlyCompliance=teModuleServerReadOnlyCompliance, teAdminGroupRowStatus=teAdminGroupRowStatus, teTunnelName=teTunnelName, teNotificationGroup=teNotificationGroup, teTunnelPackets=teTunnelPackets, teTunnelDestinationAddressType=teTunnelDestinationAddressType, teTunnelLPPackets=teTunnelLPPackets, tePathHopAddress=tePathHopAddress, teTunnelLPOctets=teTunnelLPOctets, teTrafficEngineeringGroup=teTrafficEngineeringGroup, teMIBNotifications=teMIBNotifications, teMIB=teMIB, teTunnelLastPathChange=teTunnelLastPathChange, tePathExclude=tePathExclude, tePathStorageType=tePathStorageType, PYSNMP_MODULE_ID=teMIB, teAdminGroupTable=teAdminGroupTable, tePathType=tePathType, tePathHopStorageType=tePathHopStorageType, teNotificationEnable=teNotificationEnable, tePathSetupPriority=tePathSetupPriority, teTunnelSourceAddressType=teTunnelSourceAddressType, teTunnelPathChanges=teTunnelPathChanges, teConfiguredTunnels=teConfiguredTunnels, tePathName=tePathName, tePathHopIndex=tePathHopIndex, teSignalingProto=teSignalingProto, teModuleCompliance=teModuleCompliance, teAdminGroupName=teAdminGroupName, tePathIncludeAny=tePathIncludeAny, teTunnelDiscontinuityTimer=teTunnelDiscontinuityTimer, tePathHopEntry=tePathHopEntry, teTunnelOperationalPaths=teTunnelOperationalPaths, teNextTunnelIndex=teNextTunnelIndex, tePathHopTable=tePathHopTable, teTunnelOctets=teTunnelOctets, teTunnelRowStatus=teTunnelRowStatus, tePathHopRowStatus=tePathHopRowStatus, teTunnelDown=teTunnelDown, tePathOperStatus=tePathOperStatus, teModuleServerFullCompliance=teModuleServerFullCompliance, teAdminGroupNumber=teAdminGroupNumber, tePathProperties=tePathProperties, teModuleFullCompliance=teModuleFullCompliance, teTunnelStorageType=teTunnelStorageType, teTunnelUp=teTunnelUp, tePathRowStatus=tePathRowStatus, teTunnelStandbyPaths=teTunnelStandbyPaths, tePathIndex=tePathIndex, tePathHopAddrType=tePathHopAddrType, teTunnelConfiguredPaths=teTunnelConfiguredPaths, teTunnelIndex=teTunnelIndex, teTunnelLastTransition=teTunnelLastTransition)
