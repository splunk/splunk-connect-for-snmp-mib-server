#
# PySNMP MIB module CISCO-SDSL-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SDSL-LINE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:54:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adslLineConfProfileName, adslLineAlarmConfProfileName, AdslLineProfileName = mibBuilder.importSymbols("ADSL-LINE-MIB", "adslLineConfProfileName", "adslLineAlarmConfProfileName", "AdslLineProfileName")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, NotificationType, ObjectIdentity, ModuleIdentity, Unsigned32, Counter64, Gauge32, Integer32, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Counter64", "Gauge32", "Integer32", "IpAddress", "Counter32")
VariablePointer, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "VariablePointer", "DisplayString", "TextualConvention", "TruthValue")
ciscoSdslLineMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 155))
ciscoSdslLineMIB.setRevisions(('2001-08-20 10:00', '2001-04-09 10:13', '2001-01-30 16:00',))
if mibBuilder.loadTexts: ciscoSdslLineMIB.setLastUpdated('200108201000Z')
if mibBuilder.loadTexts: ciscoSdslLineMIB.setOrganization('Cisco Systems, Inc.')
class SdslPerfTimeElapsed(TextualConvention, Gauge32):
    status = 'current'

class SdslPerfCurrDayCount(TextualConvention, Gauge32):
    status = 'current'

class SdslPerfPrevDayCount(TextualConvention, Gauge32):
    status = 'current'

class SdslStuxDefect(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("lossOfSignal", 0), ("lossOfSignalQuality", 1), ("noPeerStuPresent", 2), ("lossOfSyncFailure", 3))

ciscoSdslLineMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 155, 1))
cSdslLineTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 1), )
if mibBuilder.loadTexts: cSdslLineTable.setStatus('current')
cSdslLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cSdslLineEntry.setStatus('current')
cSdslLineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("base2b1q", 2), ("tcPam", 3), ("optis", 4), ("cap", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslLineCoding.setStatus('current')
cSdslLineFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("hdsl", 3), ("gShdsl", 4), ("hdsl2", 5), ("ds1", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslLineFraming.setStatus('current')
cSdslLineSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 1, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslLineSpecific.setStatus('current')
cSdslLineConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 1, 1, 4), AdslLineProfileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSdslLineConfProfile.setStatus('current')
cSdslLineAlarmConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 1, 1, 5), AdslLineProfileName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSdslLineAlarmConfProfile.setStatus('current')
cSdslStucPhysTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2), )
if mibBuilder.loadTexts: cSdslStucPhysTable.setStatus('current')
cSdslStucPhysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cSdslStucPhysEntry.setStatus('current')
cSdslStucInvSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucInvSerialNumber.setStatus('current')
cSdslStucInvVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucInvVendorId.setStatus('current')
cSdslStucInvVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucInvVersionNumber.setStatus('current')
cSdslStucState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("idle", 2), ("training", 3), ("steadyState", 4), ("testing", 5), ("downloading", 6), ("downloadFailed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucState.setStatus('current')
cSdslStucDefect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 5), SdslStuxDefect()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucDefect.setStatus('current')
cSdslStucCurrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2320000))).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucCurrRate.setStatus('current')
cSdslStucCurrSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 7), Gauge32()).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucCurrSnrMgn.setStatus('current')
cSdslStucCurrGain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 200))).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucCurrGain.setStatus('deprecated')
cSdslStucCurrOutputPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 9), Gauge32()).setUnits('tenth dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucCurrOutputPwr.setStatus('current')
cSdslStucCurrAtn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 10), Gauge32()).setUnits('tenth dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucCurrAtn.setStatus('current')
cSdslStucCurrGainRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 2, 1, 11), Integer32()).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucCurrGainRev.setStatus('current')
cSdslSturPhysTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3), )
if mibBuilder.loadTexts: cSdslSturPhysTable.setStatus('current')
cSdslSturPhysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cSdslSturPhysEntry.setStatus('current')
cSdslSturInvSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturInvSerialNumber.setStatus('current')
cSdslSturInvVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturInvVendorId.setStatus('current')
cSdslSturInvVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturInvVersionNumber.setStatus('current')
cSdslSturState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("training", 2), ("steadyState", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturState.setStatus('current')
cSdslSturDefect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 5), SdslStuxDefect()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturDefect.setStatus('current')
cSdslSturCurrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2320000))).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturCurrRate.setStatus('current')
cSdslSturCurrSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 7), Gauge32()).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturCurrSnrMgn.setStatus('current')
cSdslSturCurrGain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 200))).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturCurrGain.setStatus('deprecated')
cSdslSturCurrOutputPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturCurrOutputPwr.setStatus('current')
cSdslSturCurrAtn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 10), Gauge32()).setUnits('tenth dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturCurrAtn.setStatus('current')
cSdslSturCurrGainRev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 3, 1, 11), Integer32()).setUnits('tenth dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturCurrGainRev.setStatus('current')
cSdslStucPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6), )
if mibBuilder.loadTexts: cSdslStucPerfDataTable.setStatus('current')
cSdslStucPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cSdslStucPerfDataEntry.setStatus('current')
cSdslStucPerfLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfLOSs.setStatus('current')
cSdslStucPerfLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfLOSQs.setStatus('current')
cSdslStucPerfCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCVs.setStatus('current')
cSdslStucPerfESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfESs.setStatus('current')
cSdslStucPerfSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfSESs.setStatus('current')
cSdslStucPerfUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 6), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfUASs.setStatus('current')
cSdslStucPerfInits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfInits.setStatus('current')
cSdslStucUnavailRsrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucUnavailRsrcs.setStatus('current')
cSdslStucPerfValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfValidIntervals.setStatus('current')
cSdslStucPerfInvalidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfInvalidIntervals.setStatus('current')
cSdslStucPerfCurr15MinTimeElapse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 11), SdslPerfTimeElapsed().subtype(subtypeSpec=ValueRangeConstraint(0, 899))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinTimeElapse.setStatus('current')
cSdslStucPerfCurr15MinLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 12), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinLOSs.setStatus('current')
cSdslStucPerfCurr15MinLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 13), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinLOSQs.setStatus('current')
cSdslStucPerfCurr15MinCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 14), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinCVs.setStatus('current')
cSdslStucPerfCurr15MinESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 15), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinESs.setStatus('current')
cSdslStucPerfCurr15MinSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 16), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinSESs.setStatus('current')
cSdslStucPerfCurr15MinUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 17), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinUASs.setStatus('current')
cSdslStucPerfCurr15MinInits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 18), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinInits.setStatus('current')
cSdslStucPerfCurr15MinUnavlRsrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 19), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr15MinUnavlRsrcs.setStatus('current')
cSdslStucPerfCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 20), SdslPerfTimeElapsed().subtype(subtypeSpec=ValueRangeConstraint(0, 86399))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DayTimeElapsed.setStatus('current')
cSdslStucPerfCurr1DayLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 21), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DayLOSs.setStatus('current')
cSdslStucPerfCurr1DayLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 22), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DayLOSQs.setStatus('current')
cSdslStucPerfCurr1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 23), SdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DayCVs.setStatus('current')
cSdslStucPerfCurr1DayESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 24), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DayESs.setStatus('current')
cSdslStucPerfCurr1DaySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 25), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DaySESs.setStatus('current')
cSdslStucPerfCurr1DayUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 26), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DayUASs.setStatus('current')
cSdslStucPerfCurr1DayInits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 27), SdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DayInits.setStatus('current')
cSdslStucPerfCurr1DayUnavlRsrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 28), SdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfCurr1DayUnavlRsrcs.setStatus('current')
cSdslStucPerfPrev1DayMoniSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DayMoniSecs.setStatus('current')
cSdslStucPerfPrev1DayLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 30), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DayLOSs.setStatus('current')
cSdslStucPerfPrev1DayLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 31), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DayLOSQs.setStatus('current')
cSdslStucPerfPrev1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 32), SdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DayCVs.setStatus('current')
cSdslStucPerfPrev1DayESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 33), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DayESs.setStatus('current')
cSdslStucPerfPrev1DaySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 34), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DaySESs.setStatus('current')
cSdslStucPerfPrev1DayUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 35), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DayUASs.setStatus('current')
cSdslStucPerfPrev1DayInits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 36), SdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DayInits.setStatus('current')
cSdslStucPerfPrev1DayUnavlRsrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 6, 1, 37), SdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucPerfPrev1DayUnavlRsrcs.setStatus('current')
cSdslSturPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7), )
if mibBuilder.loadTexts: cSdslSturPerfDataTable.setStatus('current')
cSdslSturPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cSdslSturPerfDataEntry.setStatus('current')
cSdslSturPerfLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfLOSs.setStatus('current')
cSdslSturPerfLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfLOSQs.setStatus('current')
cSdslSturPerfCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCVs.setStatus('current')
cSdslSturPerfESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfESs.setStatus('current')
cSdslSturPerfSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfSESs.setStatus('current')
cSdslSturPerfUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 6), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfUASs.setStatus('current')
cSdslSturPerfValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfValidIntervals.setStatus('current')
cSdslSturPerfInvalidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfInvalidIntervals.setStatus('current')
cSdslSturPerfCurr15MinTimeElapse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 9), SdslPerfTimeElapsed().subtype(subtypeSpec=ValueRangeConstraint(0, 899))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr15MinTimeElapse.setStatus('current')
cSdslSturPerfCurr15MinLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 10), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr15MinLOSs.setStatus('current')
cSdslSturPerfCurr15MinLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 11), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr15MinLOSQs.setStatus('current')
cSdslSturPerfCurr15MinCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 12), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr15MinCVs.setStatus('current')
cSdslSturPerfCurr15MinESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 13), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr15MinESs.setStatus('current')
cSdslSturPerfCurr15MinSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 14), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr15MinSESs.setStatus('current')
cSdslSturPerfCurr15MinUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 15), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr15MinUASs.setStatus('current')
cSdslSturPerfCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 16), SdslPerfTimeElapsed().subtype(subtypeSpec=ValueRangeConstraint(0, 86399))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr1DayTimeElapsed.setStatus('current')
cSdslSturPerfCurr1DayLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 17), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr1DayLOSs.setStatus('current')
cSdslSturPerfCurr1DayLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 18), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr1DayLOSQs.setStatus('current')
cSdslSturPerfCurr1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 19), SdslPerfCurrDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr1DayCVs.setStatus('current')
cSdslSturPerfCurr1DayESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 20), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr1DayESs.setStatus('current')
cSdslSturPerfCurr1DaySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 21), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr1DaySESs.setStatus('current')
cSdslSturPerfCurr1DayUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 22), SdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfCurr1DayUASs.setStatus('current')
cSdslSturPerfPrev1DayMoniSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfPrev1DayMoniSecs.setStatus('current')
cSdslSturPerfPrev1DayLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 24), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfPrev1DayLOSs.setStatus('current')
cSdslSturPerfPrev1DayLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 25), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfPrev1DayLOSQs.setStatus('current')
cSdslSturPerfPrev1DayCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 26), SdslPerfPrevDayCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfPrev1DayCVs.setStatus('current')
cSdslSturPerfPrev1DayESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 27), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfPrev1DayESs.setStatus('current')
cSdslSturPerfPrev1DaySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 28), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfPrev1DaySESs.setStatus('current')
cSdslSturPerfPrev1DayUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 7, 1, 29), SdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturPerfPrev1DayUASs.setStatus('current')
cSdslStucIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8), )
if mibBuilder.loadTexts: cSdslStucIntervalTable.setStatus('current')
cSdslStucIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SDSL-LINE-MIB", "cSdslStucIntervalNumber"))
if mibBuilder.loadTexts: cSdslStucIntervalEntry.setStatus('current')
cSdslStucIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: cSdslStucIntervalNumber.setStatus('current')
cSdslStucIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalValidData.setStatus('current')
cSdslStucIntervalLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 3), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalLOSs.setStatus('current')
cSdslStucIntervalLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 4), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalLOSQs.setStatus('current')
cSdslStucIntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalCVs.setStatus('current')
cSdslStucIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 6), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalESs.setStatus('current')
cSdslStucIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 7), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalSESs.setStatus('current')
cSdslStucIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 8), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalUASs.setStatus('current')
cSdslStucIntervalInits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 9), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalInits.setStatus('current')
cSdslStucIntervalUnavlRsrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 8, 1, 10), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslStucIntervalUnavlRsrcs.setStatus('current')
cSdslSturIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9), )
if mibBuilder.loadTexts: cSdslSturIntervalTable.setStatus('current')
cSdslSturIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SDSL-LINE-MIB", "cSdslSturIntervalNumber"))
if mibBuilder.loadTexts: cSdslSturIntervalEntry.setStatus('current')
cSdslSturIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: cSdslSturIntervalNumber.setStatus('current')
cSdslSturIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturIntervalValidData.setStatus('current')
cSdslSturIntervalLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1, 3), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturIntervalLOSs.setStatus('current')
cSdslSturIntervalLOSQs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1, 4), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturIntervalLOSQs.setStatus('current')
cSdslSturIntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturIntervalCVs.setStatus('current')
cSdslSturIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1, 6), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturIntervalESs.setStatus('current')
cSdslSturIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1, 7), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturIntervalSESs.setStatus('current')
cSdslSturIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 9, 1, 8), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSdslSturIntervalUASs.setStatus('current')
cSdslLineConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14), )
if mibBuilder.loadTexts: cSdslLineConfProfileTable.setStatus('current')
cSdslLineConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1), ).setIndexNames((1, "ADSL-LINE-MIB", "adslLineConfProfileName"))
if mibBuilder.loadTexts: cSdslLineConfProfileEntry.setStatus('current')
cSdslLineMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(144000, 144000), ValueRangeConstraint(272000, 272000), ValueRangeConstraint(400000, 400000), ValueRangeConstraint(528000, 528000), ValueRangeConstraint(784000, 784000), ValueRangeConstraint(1040000, 1040000), ValueRangeConstraint(1168000, 1168000), ValueRangeConstraint(1552000, 1552000), ValueRangeConstraint(2064000, 2064000), ValueRangeConstraint(2320000, 2320000), )).clone(784000)).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslLineMaxRate.setStatus('current')
cSdslLineFramingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("hdsl", 3), ("gShdsl", 4), ("hdsl2", 5), ("ds1", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslLineFramingMode.setStatus('current')
cSdslStucTargetSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310))).setUnits('tenth dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucTargetSnrMgn.setStatus('current')
cSdslStucMaxSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(90)).setUnits('tenth dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucMaxSnrMgn.setStatus('current')
cSdslStucMinSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310))).setUnits('tenth dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucMinSnrMgn.setStatus('current')
cSdslStucOutputPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(130)).setUnits('tenth dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucOutputPwr.setStatus('current')
cSdslShdslLineMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2376000, 2312000, 2056000, 1552000, 1544000, 1160000, 1032000, 784000, 776000, 520000, 392000, 264000, 200000, 136000, 72000))).clone(namedValues=NamedValues(("r2376000", 2376000), ("r2312000", 2312000), ("r2056000", 2056000), ("r1552000", 1552000), ("r1544000", 1544000), ("r1160000", 1160000), ("r1032000", 1032000), ("r784000", 784000), ("r776000", 776000), ("r520000", 520000), ("r392000", 392000), ("r264000", 264000), ("r200000", 200000), ("r136000", 136000), ("r72000", 72000))).clone('r776000')).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslShdslLineMaxRate.setStatus('current')
cSdslStucPsdMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("symmetric", 1), ("asymmetric", 2))).clone('symmetric')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucPsdMaskType.setStatus('current')
cSdslStucAnnex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("annexA", 1), ("annexB", 2))).clone('annexA')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucAnnex.setStatus('current')
cSdslLineEquipmentType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stuR", 1), ("stuC", 2))).clone('stuR')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslLineEquipmentType.setStatus('current')
cSdslLineAutoRateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslLineAutoRateEnable.setStatus('current')
cSdslStucThresholdSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(30)).setUnits('tenth dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucThresholdSnrMgn.setStatus('current')
cSdslSturAnnex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 14, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("annexA", 1), ("annexB", 2))).clone('annexA')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslSturAnnex.setStatus('current')
cSdslLineAlarmConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 15), )
if mibBuilder.loadTexts: cSdslLineAlarmConfProfileTable.setStatus('current')
cSdslLineAlarmConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 15, 1), ).setIndexNames((1, "ADSL-LINE-MIB", "adslLineAlarmConfProfileName"))
if mibBuilder.loadTexts: cSdslLineAlarmConfProfileEntry.setStatus('current')
cSdslStucThreshMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310))).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucThreshMinRate.setStatus('current')
cSdslStucThreshMinSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 155, 1, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(30)).setUnits('tenth dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSdslStucThreshMinSnrMgn.setStatus('current')
ciscoSdslLineMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 155, 2))
ciscoSdslLineMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 155, 2, 0))
ciscoSdslLineMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 155, 3))
ciscoSdslLineMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 1))
ciscoSdslLineMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2))
ciscoSdslLineMIBStucCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 1, 1)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslStucBasicGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPMCounterGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucRateAdaptiveGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPM15MinIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPM1DayIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPMCounterGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPM15MinIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPM1DayIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucAlarmConfProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSdslLineMIBStucCompliance = ciscoSdslLineMIBStucCompliance.setStatus('deprecated')
ciscoSdslLineMIBSturCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 1, 2)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslSturBasicGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPMCounterGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPM15MinIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPM1DayIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSdslLineMIBSturCompliance = ciscoSdslLineMIBSturCompliance.setStatus('deprecated')
ciscoSdslLineMIBStucComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 1, 3)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslStucBasicGroupRev1"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPMCounterGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucRateAdaptiveGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPM15MinIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPM1DayIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPMCounterGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPM15MinIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPM1DayIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslStucAlarmConfProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSdslLineMIBStucComplianceRev1 = ciscoSdslLineMIBStucComplianceRev1.setStatus('current')
ciscoSdslLineMIBSturComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 1, 4)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslSturBasicGroupRev1"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPMCounterGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPM15MinIntervalGroup"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPM1DayIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSdslLineMIBSturComplianceRev1 = ciscoSdslLineMIBSturComplianceRev1.setStatus('current')
cSdslStucBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 1)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslLineCoding"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFraming"), ("CISCO-SDSL-LINE-MIB", "cSdslLineSpecific"), ("CISCO-SDSL-LINE-MIB", "cSdslLineConfProfile"), ("CISCO-SDSL-LINE-MIB", "cSdslLineAlarmConfProfile"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvSerialNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvVendorId"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvVersionNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslStucState"), ("CISCO-SDSL-LINE-MIB", "cSdslStucDefect"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrGain"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrOutputPwr"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrAtn"), ("CISCO-SDSL-LINE-MIB", "cSdslLineMaxRate"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFramingMode"), ("CISCO-SDSL-LINE-MIB", "cSdslStucTargetSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucOutputPwr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslStucBasicGroup = cSdslStucBasicGroup.setStatus('deprecated')
cSdslSturBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 2)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslLineCoding"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFraming"), ("CISCO-SDSL-LINE-MIB", "cSdslLineSpecific"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvSerialNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVendorId"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVersionNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturState"), ("CISCO-SDSL-LINE-MIB", "cSdslSturDefect"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrGain"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrOutputPwr"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrAtn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslSturBasicGroup = cSdslSturBasicGroup.setStatus('deprecated')
cSdslSturGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 3)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslSturInvSerialNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVendorId"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVersionNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturState"), ("CISCO-SDSL-LINE-MIB", "cSdslSturDefect"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrGain"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrOutputPwr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslSturGroup = cSdslSturGroup.setStatus('deprecated')
cSdslStucPMCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 4)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslStucPerfLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfSESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfUASs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfInits"), ("CISCO-SDSL-LINE-MIB", "cSdslStucUnavailRsrcs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslStucPMCounterGroup = cSdslStucPMCounterGroup.setStatus('current')
cSdslStucPM15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 5)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslStucPerfValidIntervals"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfInvalidIntervals"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinTimeElapse"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinSESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinUASs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinInits"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr15MinUnavlRsrcs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalValidData"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalSESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalUASs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalInits"), ("CISCO-SDSL-LINE-MIB", "cSdslStucIntervalUnavlRsrcs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslStucPM15MinIntervalGroup = cSdslStucPM15MinIntervalGroup.setStatus('current')
cSdslStucPM1DayIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 6)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DayTimeElapsed"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DayLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DayLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DayCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DayESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DaySESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DayUASs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DayInits"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfCurr1DayUnavlRsrcs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DayMoniSecs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DayLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DayLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DayCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DayESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DaySESs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DayUASs"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DayInits"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPerfPrev1DayUnavlRsrcs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslStucPM1DayIntervalGroup = cSdslStucPM1DayIntervalGroup.setStatus('current')
cSdslSturPMCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 7)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslSturPerfLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfSESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslSturPMCounterGroup = cSdslSturPMCounterGroup.setStatus('current')
cSdslSturPM15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 8)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslSturPerfValidIntervals"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfInvalidIntervals"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr15MinTimeElapse"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr15MinLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr15MinLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr15MinCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr15MinESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr15MinSESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr15MinUASs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturIntervalLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturIntervalLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturIntervalCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturIntervalESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturIntervalSESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturIntervalUASs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturIntervalValidData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslSturPM15MinIntervalGroup = cSdslSturPM15MinIntervalGroup.setStatus('current')
cSdslSturPM1DayIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 9)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr1DayTimeElapsed"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr1DayLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr1DayLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr1DayCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr1DayESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr1DaySESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfCurr1DayUASs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfPrev1DayMoniSecs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfPrev1DayLOSs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfPrev1DayLOSQs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfPrev1DayCVs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfPrev1DayESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfPrev1DaySESs"), ("CISCO-SDSL-LINE-MIB", "cSdslSturPerfPrev1DayUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslSturPM1DayIntervalGroup = cSdslSturPM1DayIntervalGroup.setStatus('current')
cSdslStucRateAdaptiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 10)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslStucCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslStucMaxSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucMinSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucThreshMinRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslStucRateAdaptiveGroup = cSdslStucRateAdaptiveGroup.setStatus('current')
cSdslStucAlarmConfProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 11)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslStucThreshMinRate"), ("CISCO-SDSL-LINE-MIB", "cSdslStucThreshMinSnrMgn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslStucAlarmConfProfileGroup = cSdslStucAlarmConfProfileGroup.setStatus('current')
cSdslStucBasicGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 12)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslLineCoding"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFraming"), ("CISCO-SDSL-LINE-MIB", "cSdslLineSpecific"), ("CISCO-SDSL-LINE-MIB", "cSdslLineConfProfile"), ("CISCO-SDSL-LINE-MIB", "cSdslLineAlarmConfProfile"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvSerialNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvVendorId"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvVersionNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslStucState"), ("CISCO-SDSL-LINE-MIB", "cSdslStucDefect"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrGain"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrOutputPwr"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrAtn"), ("CISCO-SDSL-LINE-MIB", "cSdslLineMaxRate"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFramingMode"), ("CISCO-SDSL-LINE-MIB", "cSdslStucTargetSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucMaxSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucMinSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucOutputPwr"), ("CISCO-SDSL-LINE-MIB", "cSdslShdslLineMaxRate"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPsdMaskType"), ("CISCO-SDSL-LINE-MIB", "cSdslStucAnnex"), ("CISCO-SDSL-LINE-MIB", "cSdslLineEquipmentType"), ("CISCO-SDSL-LINE-MIB", "cSdslLineAutoRateEnable"), ("CISCO-SDSL-LINE-MIB", "cSdslStucThresholdSnrMgn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslStucBasicGroupRev1 = cSdslStucBasicGroupRev1.setStatus('deprecated')
cSdslSturBasicGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 13)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslLineCoding"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFraming"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvSerialNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVendorId"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVersionNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturState"), ("CISCO-SDSL-LINE-MIB", "cSdslSturDefect"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrGain"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrOutputPwr"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrAtn"), ("CISCO-SDSL-LINE-MIB", "cSdslShdslLineMaxRate"), ("CISCO-SDSL-LINE-MIB", "cSdslLineEquipmentType"), ("CISCO-SDSL-LINE-MIB", "cSdslLineAutoRateEnable"), ("CISCO-SDSL-LINE-MIB", "cSdslSturAnnex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslSturBasicGroupRev1 = cSdslSturBasicGroupRev1.setStatus('deprecated')
cSdslStucBasicGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 14)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslLineCoding"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFraming"), ("CISCO-SDSL-LINE-MIB", "cSdslLineSpecific"), ("CISCO-SDSL-LINE-MIB", "cSdslLineConfProfile"), ("CISCO-SDSL-LINE-MIB", "cSdslLineAlarmConfProfile"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvSerialNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvVendorId"), ("CISCO-SDSL-LINE-MIB", "cSdslStucInvVersionNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslStucState"), ("CISCO-SDSL-LINE-MIB", "cSdslStucDefect"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrGainRev"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrOutputPwr"), ("CISCO-SDSL-LINE-MIB", "cSdslStucCurrAtn"), ("CISCO-SDSL-LINE-MIB", "cSdslLineMaxRate"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFramingMode"), ("CISCO-SDSL-LINE-MIB", "cSdslStucTargetSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucMaxSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucMinSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslStucOutputPwr"), ("CISCO-SDSL-LINE-MIB", "cSdslShdslLineMaxRate"), ("CISCO-SDSL-LINE-MIB", "cSdslStucPsdMaskType"), ("CISCO-SDSL-LINE-MIB", "cSdslStucAnnex"), ("CISCO-SDSL-LINE-MIB", "cSdslLineEquipmentType"), ("CISCO-SDSL-LINE-MIB", "cSdslLineAutoRateEnable"), ("CISCO-SDSL-LINE-MIB", "cSdslStucThresholdSnrMgn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslStucBasicGroupRev2 = cSdslStucBasicGroupRev2.setStatus('current')
cSdslSturBasicGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 15)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslLineCoding"), ("CISCO-SDSL-LINE-MIB", "cSdslLineFraming"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvSerialNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVendorId"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVersionNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturState"), ("CISCO-SDSL-LINE-MIB", "cSdslSturDefect"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrGainRev"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrOutputPwr"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrAtn"), ("CISCO-SDSL-LINE-MIB", "cSdslShdslLineMaxRate"), ("CISCO-SDSL-LINE-MIB", "cSdslLineEquipmentType"), ("CISCO-SDSL-LINE-MIB", "cSdslLineAutoRateEnable"), ("CISCO-SDSL-LINE-MIB", "cSdslSturAnnex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslSturBasicGroupRev2 = cSdslSturBasicGroupRev2.setStatus('current')
cSdslSturGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 155, 3, 2, 16)).setObjects(("CISCO-SDSL-LINE-MIB", "cSdslSturInvSerialNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVendorId"), ("CISCO-SDSL-LINE-MIB", "cSdslSturInvVersionNumber"), ("CISCO-SDSL-LINE-MIB", "cSdslSturState"), ("CISCO-SDSL-LINE-MIB", "cSdslSturDefect"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrRate"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrSnrMgn"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrGainRev"), ("CISCO-SDSL-LINE-MIB", "cSdslSturCurrOutputPwr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cSdslSturGroupRev1 = cSdslSturGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-SDSL-LINE-MIB", cSdslSturPMCounterGroup=cSdslSturPMCounterGroup, cSdslStucPerfESs=cSdslStucPerfESs, cSdslSturAnnex=cSdslSturAnnex, cSdslStucPM15MinIntervalGroup=cSdslStucPM15MinIntervalGroup, cSdslSturGroup=cSdslSturGroup, cSdslSturPerfUASs=cSdslSturPerfUASs, cSdslSturPerfPrev1DaySESs=cSdslSturPerfPrev1DaySESs, cSdslStucThreshMinRate=cSdslStucThreshMinRate, cSdslLineAlarmConfProfile=cSdslLineAlarmConfProfile, cSdslSturCurrSnrMgn=cSdslSturCurrSnrMgn, PYSNMP_MODULE_ID=ciscoSdslLineMIB, cSdslLineAutoRateEnable=cSdslLineAutoRateEnable, ciscoSdslLineMIBStucCompliance=ciscoSdslLineMIBStucCompliance, cSdslLineCoding=cSdslLineCoding, cSdslStucPerfCurr15MinLOSs=cSdslStucPerfCurr15MinLOSs, cSdslSturPerfValidIntervals=cSdslSturPerfValidIntervals, cSdslStucPerfDataEntry=cSdslStucPerfDataEntry, ciscoSdslLineMIBNotifications=ciscoSdslLineMIBNotifications, cSdslSturPerfSESs=cSdslSturPerfSESs, cSdslStucPerfInits=cSdslStucPerfInits, SdslPerfPrevDayCount=SdslPerfPrevDayCount, cSdslSturInvVersionNumber=cSdslSturInvVersionNumber, cSdslStucIntervalLOSQs=cSdslStucIntervalLOSQs, cSdslSturPerfCurr1DayLOSQs=cSdslSturPerfCurr1DayLOSQs, cSdslStucPerfCurr1DayLOSQs=cSdslStucPerfCurr1DayLOSQs, cSdslStucPerfCurr15MinInits=cSdslStucPerfCurr15MinInits, cSdslSturPerfCurr15MinLOSs=cSdslSturPerfCurr15MinLOSs, cSdslStucPerfCurr15MinESs=cSdslStucPerfCurr15MinESs, cSdslSturPerfLOSs=cSdslSturPerfLOSs, cSdslStucMinSnrMgn=cSdslStucMinSnrMgn, cSdslStucPerfCurr15MinCVs=cSdslStucPerfCurr15MinCVs, cSdslStucRateAdaptiveGroup=cSdslStucRateAdaptiveGroup, cSdslStucCurrAtn=cSdslStucCurrAtn, cSdslStucPM1DayIntervalGroup=cSdslStucPM1DayIntervalGroup, cSdslSturPerfPrev1DayLOSQs=cSdslSturPerfPrev1DayLOSQs, cSdslLineSpecific=cSdslLineSpecific, cSdslStucCurrSnrMgn=cSdslStucCurrSnrMgn, cSdslStucInvSerialNumber=cSdslStucInvSerialNumber, cSdslSturPerfPrev1DayMoniSecs=cSdslSturPerfPrev1DayMoniSecs, cSdslStucOutputPwr=cSdslStucOutputPwr, cSdslSturPerfCurr15MinCVs=cSdslSturPerfCurr15MinCVs, cSdslSturIntervalTable=cSdslSturIntervalTable, cSdslLineAlarmConfProfileTable=cSdslLineAlarmConfProfileTable, cSdslSturPerfCurr1DayTimeElapsed=cSdslSturPerfCurr1DayTimeElapsed, cSdslStucPerfInvalidIntervals=cSdslStucPerfInvalidIntervals, cSdslLineConfProfileEntry=cSdslLineConfProfileEntry, cSdslSturInvVendorId=cSdslSturInvVendorId, cSdslStucPerfSESs=cSdslStucPerfSESs, cSdslStucPerfCurr1DaySESs=cSdslStucPerfCurr1DaySESs, cSdslSturPerfDataTable=cSdslSturPerfDataTable, cSdslSturPM1DayIntervalGroup=cSdslSturPM1DayIntervalGroup, cSdslStucCurrGain=cSdslStucCurrGain, cSdslSturIntervalValidData=cSdslSturIntervalValidData, cSdslStucPerfCurr1DayUASs=cSdslStucPerfCurr1DayUASs, cSdslStucPerfLOSQs=cSdslStucPerfLOSQs, cSdslSturPerfPrev1DayCVs=cSdslSturPerfPrev1DayCVs, cSdslStucPMCounterGroup=cSdslStucPMCounterGroup, cSdslStucBasicGroupRev2=cSdslStucBasicGroupRev2, cSdslStucPhysTable=cSdslStucPhysTable, ciscoSdslLineMIBStucComplianceRev1=ciscoSdslLineMIBStucComplianceRev1, cSdslStucPerfCurr1DayInits=cSdslStucPerfCurr1DayInits, cSdslStucIntervalEntry=cSdslStucIntervalEntry, cSdslSturPerfCVs=cSdslSturPerfCVs, cSdslStucPerfPrev1DayLOSQs=cSdslStucPerfPrev1DayLOSQs, cSdslStucIntervalUnavlRsrcs=cSdslStucIntervalUnavlRsrcs, cSdslStucAnnex=cSdslStucAnnex, cSdslStucThreshMinSnrMgn=cSdslStucThreshMinSnrMgn, cSdslSturPhysEntry=cSdslSturPhysEntry, cSdslSturPerfCurr15MinUASs=cSdslSturPerfCurr15MinUASs, cSdslStucMaxSnrMgn=cSdslStucMaxSnrMgn, cSdslSturPerfPrev1DayLOSs=cSdslSturPerfPrev1DayLOSs, cSdslSturIntervalEntry=cSdslSturIntervalEntry, cSdslStucIntervalLOSs=cSdslStucIntervalLOSs, ciscoSdslLineMIBObjects=ciscoSdslLineMIBObjects, ciscoSdslLineMIBCompliances=ciscoSdslLineMIBCompliances, cSdslStucBasicGroupRev1=cSdslStucBasicGroupRev1, cSdslStucPerfCurr1DayUnavlRsrcs=cSdslStucPerfCurr1DayUnavlRsrcs, cSdslStucPerfValidIntervals=cSdslStucPerfValidIntervals, cSdslStucIntervalSESs=cSdslStucIntervalSESs, cSdslStucPerfPrev1DayUASs=cSdslStucPerfPrev1DayUASs, cSdslStucPerfCVs=cSdslStucPerfCVs, cSdslSturBasicGroup=cSdslSturBasicGroup, cSdslStucPerfPrev1DayCVs=cSdslStucPerfPrev1DayCVs, cSdslSturPerfDataEntry=cSdslSturPerfDataEntry, cSdslSturBasicGroupRev1=cSdslSturBasicGroupRev1, cSdslStucState=cSdslStucState, cSdslSturPerfInvalidIntervals=cSdslSturPerfInvalidIntervals, cSdslStucPerfLOSs=cSdslStucPerfLOSs, cSdslStucIntervalESs=cSdslStucIntervalESs, cSdslSturInvSerialNumber=cSdslSturInvSerialNumber, cSdslStucPerfCurr1DayCVs=cSdslStucPerfCurr1DayCVs, cSdslStucPerfCurr1DayTimeElapsed=cSdslStucPerfCurr1DayTimeElapsed, SdslPerfCurrDayCount=SdslPerfCurrDayCount, ciscoSdslLineMIBGroups=ciscoSdslLineMIBGroups, cSdslStucPerfCurr15MinUnavlRsrcs=cSdslStucPerfCurr15MinUnavlRsrcs, cSdslSturPerfCurr15MinLOSQs=cSdslSturPerfCurr15MinLOSQs, ciscoSdslLineMIBNotificationsPrefix=ciscoSdslLineMIBNotificationsPrefix, cSdslShdslLineMaxRate=cSdslShdslLineMaxRate, cSdslStucPerfUASs=cSdslStucPerfUASs, cSdslSturCurrGainRev=cSdslSturCurrGainRev, cSdslStucPerfPrev1DaySESs=cSdslStucPerfPrev1DaySESs, cSdslSturPM15MinIntervalGroup=cSdslSturPM15MinIntervalGroup, ciscoSdslLineMIB=ciscoSdslLineMIB, cSdslSturGroupRev1=cSdslSturGroupRev1, cSdslSturCurrGain=cSdslSturCurrGain, cSdslSturPerfPrev1DayESs=cSdslSturPerfPrev1DayESs, cSdslStucThresholdSnrMgn=cSdslStucThresholdSnrMgn, cSdslStucInvVersionNumber=cSdslStucInvVersionNumber, cSdslStucIntervalValidData=cSdslStucIntervalValidData, cSdslSturPhysTable=cSdslSturPhysTable, ciscoSdslLineMIBConformance=ciscoSdslLineMIBConformance, cSdslStucBasicGroup=cSdslStucBasicGroup, cSdslSturIntervalNumber=cSdslSturIntervalNumber, cSdslStucIntervalInits=cSdslStucIntervalInits, cSdslSturIntervalUASs=cSdslSturIntervalUASs, cSdslSturBasicGroupRev2=cSdslSturBasicGroupRev2, cSdslStucPhysEntry=cSdslStucPhysEntry, cSdslStucPerfCurr15MinTimeElapse=cSdslStucPerfCurr15MinTimeElapse, cSdslSturPerfCurr15MinTimeElapse=cSdslSturPerfCurr15MinTimeElapse, ciscoSdslLineMIBSturCompliance=ciscoSdslLineMIBSturCompliance, cSdslSturIntervalCVs=cSdslSturIntervalCVs, cSdslSturIntervalESs=cSdslSturIntervalESs, cSdslSturIntervalSESs=cSdslSturIntervalSESs, cSdslLineAlarmConfProfileEntry=cSdslLineAlarmConfProfileEntry, cSdslLineFraming=cSdslLineFraming, cSdslLineTable=cSdslLineTable, cSdslLineConfProfileTable=cSdslLineConfProfileTable, cSdslSturCurrOutputPwr=cSdslSturCurrOutputPwr, SdslPerfTimeElapsed=SdslPerfTimeElapsed, cSdslLineMaxRate=cSdslLineMaxRate, cSdslLineConfProfile=cSdslLineConfProfile, cSdslStucInvVendorId=cSdslStucInvVendorId, cSdslStucPerfPrev1DayMoniSecs=cSdslStucPerfPrev1DayMoniSecs, cSdslStucPerfPrev1DayInits=cSdslStucPerfPrev1DayInits, cSdslStucPerfCurr15MinLOSQs=cSdslStucPerfCurr15MinLOSQs, cSdslStucPerfPrev1DayLOSs=cSdslStucPerfPrev1DayLOSs, cSdslSturPerfCurr1DayESs=cSdslSturPerfCurr1DayESs, cSdslLineFramingMode=cSdslLineFramingMode, cSdslStucCurrGainRev=cSdslStucCurrGainRev, cSdslStucPerfCurr15MinUASs=cSdslStucPerfCurr15MinUASs, cSdslStucIntervalTable=cSdslStucIntervalTable, cSdslSturPerfPrev1DayUASs=cSdslSturPerfPrev1DayUASs, cSdslSturPerfCurr15MinSESs=cSdslSturPerfCurr15MinSESs, SdslStuxDefect=SdslStuxDefect, cSdslSturPerfCurr15MinESs=cSdslSturPerfCurr15MinESs, cSdslLineEntry=cSdslLineEntry, cSdslStucDefect=cSdslStucDefect, cSdslSturCurrAtn=cSdslSturCurrAtn, cSdslStucPsdMaskType=cSdslStucPsdMaskType, cSdslStucAlarmConfProfileGroup=cSdslStucAlarmConfProfileGroup, cSdslSturIntervalLOSs=cSdslSturIntervalLOSs, cSdslStucCurrRate=cSdslStucCurrRate, cSdslStucPerfCurr1DayLOSs=cSdslStucPerfCurr1DayLOSs, cSdslSturPerfCurr1DayUASs=cSdslSturPerfCurr1DayUASs, cSdslStucTargetSnrMgn=cSdslStucTargetSnrMgn, cSdslSturPerfLOSQs=cSdslSturPerfLOSQs, cSdslSturPerfCurr1DaySESs=cSdslSturPerfCurr1DaySESs, cSdslLineEquipmentType=cSdslLineEquipmentType, cSdslStucIntervalNumber=cSdslStucIntervalNumber, cSdslStucUnavailRsrcs=cSdslStucUnavailRsrcs, cSdslSturIntervalLOSQs=cSdslSturIntervalLOSQs, ciscoSdslLineMIBSturComplianceRev1=ciscoSdslLineMIBSturComplianceRev1, cSdslStucCurrOutputPwr=cSdslStucCurrOutputPwr, cSdslStucPerfPrev1DayUnavlRsrcs=cSdslStucPerfPrev1DayUnavlRsrcs, cSdslSturPerfCurr1DayLOSs=cSdslSturPerfCurr1DayLOSs, cSdslStucIntervalUASs=cSdslStucIntervalUASs, cSdslSturCurrRate=cSdslSturCurrRate, cSdslStucPerfCurr15MinSESs=cSdslStucPerfCurr15MinSESs, cSdslStucPerfCurr1DayESs=cSdslStucPerfCurr1DayESs, cSdslSturPerfESs=cSdslSturPerfESs, cSdslStucIntervalCVs=cSdslStucIntervalCVs, cSdslStucPerfPrev1DayESs=cSdslStucPerfPrev1DayESs, cSdslSturPerfCurr1DayCVs=cSdslSturPerfCurr1DayCVs, cSdslStucPerfDataTable=cSdslStucPerfDataTable, cSdslSturState=cSdslSturState, cSdslSturDefect=cSdslSturDefect)
