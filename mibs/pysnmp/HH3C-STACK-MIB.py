#
# PySNMP MIB module HH3C-STACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-STACK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, iso, Gauge32, Bits, NotificationType, Counter64, ObjectIdentity, TimeTicks, ModuleIdentity, Counter32, Unsigned32, Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "Gauge32", "Bits", "NotificationType", "Counter64", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Counter32", "Unsigned32", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cStack = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 91))
hh3cStack.setRevisions(('2008-04-30 16:50',))
if mibBuilder.loadTexts: hh3cStack.setLastUpdated('200804301650Z')
if mibBuilder.loadTexts: hh3cStack.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cStackGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 91, 1))
hh3cStackMaxMember = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 91, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackMaxMember.setStatus('current')
hh3cStackMemberNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 91, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackMemberNum.setStatus('current')
hh3cStackMaxConfigPriority = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 91, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackMaxConfigPriority.setStatus('current')
hh3cStackAutoUpdate = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 91, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cStackAutoUpdate.setStatus('current')
hh3cStackMacPersistence = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 91, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notPersist", 1), ("persistForSixMin", 2), ("persistForever", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cStackMacPersistence.setStatus('current')
hh3cStackLinkDelayInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 91, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(200, 2000), ))).setUnits('millisecond').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cStackLinkDelayInterval.setStatus('current')
hh3cStackTopology = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 91, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("chainConn", 1), ("ringConn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackTopology.setStatus('current')
hh3cStackDeviceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 91, 2), )
if mibBuilder.loadTexts: hh3cStackDeviceConfigTable.setStatus('current')
hh3cStackDeviceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 91, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hh3cStackDeviceConfigEntry.setStatus('current')
hh3cStackMemberID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackMemberID.setStatus('current')
hh3cStackConfigMemberID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cStackConfigMemberID.setStatus('current')
hh3cStackPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cStackPriority.setStatus('current')
hh3cStackPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackPortNum.setStatus('current')
hh3cStackPortMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackPortMaxNum.setStatus('current')
hh3cStackBoardConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 91, 3), )
if mibBuilder.loadTexts: hh3cStackBoardConfigTable.setStatus('current')
hh3cStackBoardConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 91, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hh3cStackBoardConfigEntry.setStatus('current')
hh3cStackBoardRole = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("slave", 1), ("master", 2), ("loading", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackBoardRole.setStatus('current')
hh3cStackBoardBelongtoMember = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackBoardBelongtoMember.setStatus('current')
hh3cStackPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 91, 4), )
if mibBuilder.loadTexts: hh3cStackPortInfoTable.setStatus('current')
hh3cStackPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 91, 4, 1), ).setIndexNames((0, "HH3C-STACK-MIB", "hh3cStackMemberID"), (0, "HH3C-STACK-MIB", "hh3cStackPortIndex"))
if mibBuilder.loadTexts: hh3cStackPortInfoEntry.setStatus('current')
hh3cStackPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 4, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cStackPortIndex.setStatus('current')
hh3cStackPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackPortEnable.setStatus('current')
hh3cStackPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("silent", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackPortStatus.setStatus('current')
hh3cStackNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cStackNeighbor.setStatus('current')
hh3cStackPhyPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 91, 5), )
if mibBuilder.loadTexts: hh3cStackPhyPortInfoTable.setStatus('current')
hh3cStackPhyPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 91, 5, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hh3cStackPhyPortInfoEntry.setStatus('current')
hh3cStackBelongtoPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 91, 5, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cStackBelongtoPort.setStatus('current')
hh3cStackTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 91, 6))
hh3cStackTrapOjbects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 91, 6, 0))
hh3cStackPortLinkStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 91, 6, 0, 1)).setObjects(("HH3C-STACK-MIB", "hh3cStackMemberID"), ("HH3C-STACK-MIB", "hh3cStackPortIndex"), ("HH3C-STACK-MIB", "hh3cStackPortStatus"))
if mibBuilder.loadTexts: hh3cStackPortLinkStatusChange.setStatus('current')
hh3cStackTopologyChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 91, 6, 0, 2)).setObjects(("HH3C-STACK-MIB", "hh3cStackTopology"))
if mibBuilder.loadTexts: hh3cStackTopologyChange.setStatus('current')
mibBuilder.exportSymbols("HH3C-STACK-MIB", hh3cStackTrap=hh3cStackTrap, hh3cStackGlobalConfig=hh3cStackGlobalConfig, hh3cStackPriority=hh3cStackPriority, hh3cStackPhyPortInfoEntry=hh3cStackPhyPortInfoEntry, hh3cStackTrapOjbects=hh3cStackTrapOjbects, hh3cStackPortInfoEntry=hh3cStackPortInfoEntry, hh3cStackMacPersistence=hh3cStackMacPersistence, hh3cStackConfigMemberID=hh3cStackConfigMemberID, hh3cStackBelongtoPort=hh3cStackBelongtoPort, hh3cStackPortMaxNum=hh3cStackPortMaxNum, hh3cStackBoardBelongtoMember=hh3cStackBoardBelongtoMember, hh3cStackAutoUpdate=hh3cStackAutoUpdate, hh3cStackMemberNum=hh3cStackMemberNum, hh3cStackPortStatus=hh3cStackPortStatus, hh3cStackPhyPortInfoTable=hh3cStackPhyPortInfoTable, hh3cStackTopology=hh3cStackTopology, hh3cStackPortLinkStatusChange=hh3cStackPortLinkStatusChange, hh3cStackDeviceConfigTable=hh3cStackDeviceConfigTable, hh3cStackPortInfoTable=hh3cStackPortInfoTable, hh3cStackPortIndex=hh3cStackPortIndex, hh3cStackMaxMember=hh3cStackMaxMember, hh3cStackMemberID=hh3cStackMemberID, hh3cStackMaxConfigPriority=hh3cStackMaxConfigPriority, hh3cStackDeviceConfigEntry=hh3cStackDeviceConfigEntry, hh3cStackPortNum=hh3cStackPortNum, hh3cStackBoardConfigEntry=hh3cStackBoardConfigEntry, hh3cStack=hh3cStack, hh3cStackBoardConfigTable=hh3cStackBoardConfigTable, hh3cStackPortEnable=hh3cStackPortEnable, hh3cStackBoardRole=hh3cStackBoardRole, hh3cStackLinkDelayInterval=hh3cStackLinkDelayInterval, PYSNMP_MODULE_ID=hh3cStack, hh3cStackNeighbor=hh3cStackNeighbor, hh3cStackTopologyChange=hh3cStackTopologyChange)
