#
# PySNMP MIB module SWITCHING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SWITCHING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:05:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
InterfaceIndexOrZero, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
Ipv6AddressPrefix, Ipv6Address = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressPrefix", "Ipv6Address")
VlanId, dot1qFdbId, VlanIndex, dot1qVlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId", "dot1qFdbId", "VlanIndex", "dot1qVlanIndex")
switch, AgentPortMask = mibBuilder.importSymbols("QUANTA-SWITCH-MIB", "switch", "AgentPortMask")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, Counter32, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, MibIdentifier, TimeTicks, Unsigned32, Counter64, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Counter32", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "MibIdentifier", "TimeTicks", "Unsigned32", "Counter64", "ObjectIdentity", "ModuleIdentity")
DateAndTime, TruthValue, TextualConvention, RowStatus, MacAddress, PhysAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "TextualConvention", "RowStatus", "MacAddress", "PhysAddress", "DisplayString")
switching = ModuleIdentity((1, 3, 6, 1, 4, 1, 7244, 2, 1))
if mibBuilder.loadTexts: switching.setLastUpdated('201108310000Z')
if mibBuilder.loadTexts: switching.setOrganization('QCT')
class PortList(TextualConvention, OctetString):
    status = 'current'

class VlanList(TextualConvention, OctetString):
    status = 'current'

agentInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1))
agentInventoryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1))
agentInventorySysDescription = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySysDescription.setStatus('current')
agentInventoryMachineType = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMachineType.setStatus('current')
agentInventoryMachineModel = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMachineModel.setStatus('current')
agentInventorySerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySerialNumber.setStatus('current')
agentInventoryFRUNumber = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryFRUNumber.setStatus('current')
agentInventoryMaintenanceLevel = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMaintenanceLevel.setStatus('current')
agentInventoryPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryPartNumber.setStatus('current')
agentInventoryHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryHardwareVersion.setStatus('current')
agentInventoryBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 9), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryBurnedInMacAddress.setStatus('current')
agentInventoryOperatingSystem = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryOperatingSystem.setStatus('current')
agentInventoryNetworkProcessingDevice = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryNetworkProcessingDevice.setStatus('current')
agentInventoryAdditionalPackages = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryAdditionalPackages.setStatus('current')
agentInventorySoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySoftwareVersion.setStatus('current')
agentInventoryManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryManufacturer.setStatus('current')
agentTrapLogGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 2))
agentTrapLogTotal = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTotal.setStatus('current')
agentTrapLogTotalSinceLastViewed = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTotalSinceLastViewed.setStatus('current')
agentTrapLogTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 2, 4), )
if mibBuilder.loadTexts: agentTrapLogTable.setStatus('current')
agentTrapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 2, 4, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentTrapLogIndex"))
if mibBuilder.loadTexts: agentTrapLogEntry.setStatus('current')
agentTrapLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogIndex.setStatus('current')
agentTrapLogSystemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 2, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogSystemTime.setStatus('current')
agentTrapLogTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTrap.setStatus('current')
agentSupportedMibTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 3), )
if mibBuilder.loadTexts: agentSupportedMibTable.setStatus('current')
agentSupportedMibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 3, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSupportedMibIndex"))
if mibBuilder.loadTexts: agentSupportedMibEntry.setStatus('current')
agentSupportedMibIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibIndex.setStatus('current')
agentSupportedMibName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibName.setStatus('current')
agentSupportedMibDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibDescription.setStatus('current')
agentPortStatsRateGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 8))
agentPortStatsRateTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 8, 1), )
if mibBuilder.loadTexts: agentPortStatsRateTable.setStatus('current')
agentPortStatsRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 8, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentPortStatsRateEntry.setStatus('current')
agentPortStatsRateHCBitsPerSecondRx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 8, 1, 1, 9), Counter64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortStatsRateHCBitsPerSecondRx.setStatus('current')
agentPortStatsRateHCBitsPerSecondTx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 8, 1, 1, 10), Counter64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortStatsRateHCBitsPerSecondTx.setStatus('current')
agentPortStatsRateHCPacketsPerSecondRx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 8, 1, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortStatsRateHCPacketsPerSecondRx.setStatus('current')
agentPortStatsRateHCPacketsPerSecondTx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 8, 1, 1, 12), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortStatsRateHCPacketsPerSecondTx.setStatus('current')
agentSwitchCpuProcessGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4))
agentSwitchCpuProcessMemFree = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessMemFree.setStatus('current')
agentSwitchCpuProcessMemAvailable = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(2)).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessMemAvailable.setStatus('current')
agentSwitchCpuProcessRisingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessRisingThreshold.setStatus('current')
agentSwitchCpuProcessRisingThresholdInterval = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 86400), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessRisingThresholdInterval.setStatus('current')
agentSwitchCpuProcessFallingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessFallingThreshold.setStatus('current')
agentSwitchCpuProcessFallingThresholdInterval = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 86400), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessFallingThresholdInterval.setStatus('current')
agentSwitchCpuProcessFreeMemoryThreshold = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessFreeMemoryThreshold.setStatus('current')
agentSwitchCpuProcessTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 8), )
if mibBuilder.loadTexts: agentSwitchCpuProcessTable.setStatus('current')
agentSwitchCpuProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 8, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchCpuProcessIndex"))
if mibBuilder.loadTexts: agentSwitchCpuProcessEntry.setStatus('current')
agentSwitchCpuProcessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchCpuProcessIndex.setStatus('current')
agentSwitchCpuProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessName.setStatus('current')
agentSwitchCpuProcessPercentageUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessPercentageUtilization.setStatus('current')
agentSwitchCpuProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessId.setStatus('current')
agentSwitchCpuProcessTotalUtilization = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 1, 4, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessTotalUtilization.setStatus('current')
agentConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2))
agentCLIConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1))
agentLoginSessionTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1), )
if mibBuilder.loadTexts: agentLoginSessionTable.setStatus('current')
agentLoginSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentLoginSessionIndex"))
if mibBuilder.loadTexts: agentLoginSessionEntry.setStatus('current')
agentLoginSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionIndex.setStatus('current')
agentLoginSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionUserName.setStatus('current')
agentLoginSessionConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("serial", 1), ("telnet", 2), ("ssh", 3), ("http", 4), ("https", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionConnectionType.setStatus('current')
agentLoginSessionIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionIdleTime.setStatus('current')
agentLoginSessionSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionSessionTime.setStatus('current')
agentLoginSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoginSessionStatus.setStatus('current')
agentLoginSessionInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionInetAddressType.setStatus('current')
agentLoginSessionInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 1, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionInetAddress.setStatus('current')
agentTelnetConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 2))
agentTelnetLoginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetLoginTimeout.setStatus('current')
agentTelnetMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetMaxSessions.setStatus('current')
agentTelnetAllowNewMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetAllowNewMode.setStatus('current')
agentUserConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3))
agentUserConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserConfigCreate.setStatus('current')
agentUserConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2), )
if mibBuilder.loadTexts: agentUserConfigTable.setStatus('current')
agentUserConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentUserIndex"))
if mibBuilder.loadTexts: agentUserConfigEntry.setStatus('current')
agentUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentUserIndex.setStatus('current')
agentUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserName.setStatus('current')
agentUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserPassword.setStatus('current')
agentUserAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("suspended", 0), ("read", 1), ("write", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAccessMode.setStatus('current')
agentUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserStatus.setStatus('current')
agentUserAuthenticationType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("hmacmd5", 2), ("hmacsha", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAuthenticationType.setStatus('current')
agentUserEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("des", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserEncryptionType.setStatus('current')
agentUserEncryptionPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserEncryptionPassword.setStatus('current')
agentUserLockoutStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUserLockoutStatus.setStatus('current')
agentUserPasswordExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUserPasswordExpireTime.setStatus('current')
agentUserSnmpv3AccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("read", 1), ("write", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserSnmpv3AccessMode.setStatus('current')
agentUserPrivilegeLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1), ValueRangeConstraint(15, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserPrivilegeLevel.setStatus('current')
agentSerialGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 5))
agentSerialTimeout = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialTimeout.setStatus('current')
agentSerialBaudrate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("baud-1200", 1), ("baud-2400", 2), ("baud-4800", 3), ("baud-9600", 4), ("baud-19200", 5), ("baud-38400", 6), ("baud-57600", 7), ("baud-115200", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialBaudrate.setStatus('current')
agentSerialCharacterSize = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialCharacterSize.setStatus('current')
agentSerialHWFlowControlMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialHWFlowControlMode.setStatus('current')
agentSerialStopBits = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialStopBits.setStatus('current')
agentSerialParityType = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("even", 1), ("odd", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialParityType.setStatus('current')
agentSerialTerminalLength = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialTerminalLength.setStatus('current')
agentPasswordManagementConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6))
agentPasswordManagementMinLength = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(8, 64), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementMinLength.setStatus('current')
agentPasswordManagementHistory = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementHistory.setStatus('current')
agentPasswordManagementAging = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 365))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementAging.setStatus('current')
agentPasswordManagementLockAttempts = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementLockAttempts.setStatus('current')
agentPasswordManagementPasswordStrengthCheck = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementPasswordStrengthCheck.setStatus('current')
agentPasswordManagementStrengthMinUpperCase = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinUpperCase.setStatus('current')
agentPasswordManagementStrengthMinLowerCase = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinLowerCase.setStatus('current')
agentPasswordManagementStrengthMinNumericNumbers = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinNumericNumbers.setStatus('current')
agentPasswordManagementStrengthMinSpecialCharacters = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinSpecialCharacters.setStatus('current')
agentPasswordManagementStrengthMaxConsecutiveCharacters = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMaxConsecutiveCharacters.setStatus('current')
agentPasswordManagementStrengthMaxRepeatedCharacters = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMaxRepeatedCharacters.setStatus('current')
agentPasswordManagementStrengthMinCharacterClasses = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinCharacterClasses.setStatus('current')
agentPasswordMgmtLastPasswordSetResult = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPasswordMgmtLastPasswordSetResult.setStatus('current')
agentPasswordManagementStrengthExcludeKeywordTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 15), )
if mibBuilder.loadTexts: agentPasswordManagementStrengthExcludeKeywordTable.setStatus('current')
agentPasswordManagementStrengthExcludeKeywordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 15, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentPasswordMgmtStrengthExcludeKeyword"))
if mibBuilder.loadTexts: agentPasswordManagementStrengthExcludeKeywordEntry.setStatus('current')
agentPasswordMgmtStrengthExcludeKeyword = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 15, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPasswordMgmtStrengthExcludeKeyword.setStatus('current')
agentPasswordMgmtStrengthExcludeKeywordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 6, 15, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentPasswordMgmtStrengthExcludeKeywordStatus.setStatus('current')
agentIASUserConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 7))
agentIASUserConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 7, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIASUserConfigCreate.setStatus('current')
agentIASUserConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 7, 2), )
if mibBuilder.loadTexts: agentIASUserConfigTable.setStatus('current')
agentIASUserConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 7, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentIASUserIndex"))
if mibBuilder.loadTexts: agentIASUserConfigEntry.setStatus('current')
agentIASUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)))
if mibBuilder.loadTexts: agentIASUserIndex.setStatus('current')
agentIASUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIASUserName.setStatus('current')
agentIASUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 7, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIASUserPassword.setStatus('current')
agentIASUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 1, 7, 2, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIASUserStatus.setStatus('current')
agentLagConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2))
agentLagConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagConfigCreate.setStatus('current')
agentLagSummaryConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2), )
if mibBuilder.loadTexts: agentLagSummaryConfigTable.setStatus('current')
agentLagSummaryConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentLagSummaryLagIndex"))
if mibBuilder.loadTexts: agentLagSummaryConfigEntry.setStatus('current')
agentLagSummaryLagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagSummaryLagIndex.setStatus('current')
agentLagSummaryName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagSummaryName.setStatus('current')
agentLagSummaryFlushTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryFlushTimer.setStatus('obsolete')
agentLagSummaryLinkTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryLinkTrap.setStatus('current')
agentLagSummaryAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryAdminMode.setStatus('current')
agentLagSummaryStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dot1d", 1), ("fast", 2), ("off", 3), ("dot1s", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryStpMode.setStatus('current')
agentLagSummaryAddPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryAddPort.setStatus('current')
agentLagSummaryDeletePort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryDeletePort.setStatus('current')
agentLagSummaryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryStatus.setStatus('current')
agentLagSummaryType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagSummaryType.setStatus('current')
agentLagSummaryPortStaticCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryPortStaticCapability.setStatus('current')
agentLagSummaryHash = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 7, 8, 9))).clone(namedValues=NamedValues(("src-mac", 1), ("dst-mac", 2), ("src-dst-mac", 3), ("src-ip-src-ipport", 7), ("dst-ip-dst-ipport", 8), ("src-dst-ip-ipports", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryHash.setStatus('obsolete')
agentLagSummaryHashOption = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryHashOption.setStatus('current')
agentLagSummaryRateLoadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryRateLoadInterval.setStatus('current')
agentLagDetailedConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 3), )
if mibBuilder.loadTexts: agentLagDetailedConfigTable.setStatus('current')
agentLagDetailedConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 3, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentLagDetailedLagIndex"), (0, "SWITCHING-MIB", "agentLagDetailedIfIndex"))
if mibBuilder.loadTexts: agentLagDetailedConfigEntry.setStatus('current')
agentLagDetailedLagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedLagIndex.setStatus('current')
agentLagDetailedIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedIfIndex.setStatus('current')
agentLagDetailedPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 3, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedPortSpeed.setStatus('current')
agentLagDetailedPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedPortStatus.setStatus('current')
agentLagConfigStaticCapability = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagConfigStaticCapability.setStatus('obsolete')
agentLagConfigGroupHashOption = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagConfigGroupHashOption.setStatus('current')
agentNetworkConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3))
agentNetworkIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIPAddress.setStatus('current')
agentNetworkSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkSubnetMask.setStatus('current')
agentNetworkDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDefaultGateway.setStatus('current')
agentNetworkBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkBurnedInMacAddress.setStatus('current')
agentNetworkLocalAdminMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 5), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkLocalAdminMacAddress.setStatus('deprecated')
agentNetworkMacAddressType = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("burned-in", 1), ("local", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkMacAddressType.setStatus('deprecated')
agentNetworkConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkConfigProtocol.setStatus('current')
agentNetworkWebMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkWebMode.setStatus('obsolete')
agentNetworkJavaMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkJavaMode.setStatus('obsolete')
agentNetworkMgmtVlan = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4093))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkMgmtVlan.setStatus('current')
agentNetworkConfigProtocolDhcpRenew = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("renew", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkConfigProtocolDhcpRenew.setStatus('deprecated')
agentNetworkConfigIpDhcpRenew = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("renew", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkConfigIpDhcpRenew.setStatus('current')
agentNetworkConfigIpv6DhcpRenew = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("renew", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkConfigIpv6DhcpRenew.setStatus('current')
agentNetworkIpv6AdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6AdminMode.setStatus('current')
agentNetworkIpv6Gateway = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 13), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6Gateway.setStatus('current')
agentNetworkIpv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 14), )
if mibBuilder.loadTexts: agentNetworkIpv6AddrTable.setStatus('current')
agentNetworkIpv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 14, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentNetworkIpv6AddrPrefix"))
if mibBuilder.loadTexts: agentNetworkIpv6AddrEntry.setStatus('current')
agentNetworkIpv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 14, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentNetworkIpv6AddrPrefix.setStatus('current')
agentNetworkIpv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrPrefixLength.setStatus('current')
agentNetworkIpv6AddrEuiFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrEuiFlag.setStatus('current')
agentNetworkIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 14, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrStatus.setStatus('current')
agentNetworkIpv6AddressAutoConfig = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6AddressAutoConfig.setStatus('current')
agentNetworkIpv6ConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dhcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6ConfigProtocol.setStatus('current')
agentNetworkDhcp6ClientDuid = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6ClientDuid.setStatus('current')
agentNetworkStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18))
agentNetworkDhcp6ADVERTISEMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6ADVERTISEMessagesReceived.setStatus('current')
agentNetworkDhcp6REPLYMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6REPLYMessagesReceived.setStatus('current')
agentNetworkDhcp6ADVERTISEMessagesDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6ADVERTISEMessagesDiscarded.setStatus('current')
agentNetworkDhcp6REPLYMessagesDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6REPLYMessagesDiscarded.setStatus('current')
agentNetworkDhcp6MalformedMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6MalformedMessagesReceived.setStatus('current')
agentNetworkDhcp6SOLICITMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6SOLICITMessagesSent.setStatus('current')
agentNetworkDhcp6REQUESTMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6REQUESTMessagesSent.setStatus('current')
agentNetworkDhcp6RENEWMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6RENEWMessagesSent.setStatus('current')
agentNetworkDhcp6REBINDMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6REBINDMessagesSent.setStatus('current')
agentNetworkDhcp6RELEASEMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6RELEASEMessagesSent.setStatus('current')
agentNetworkDhcp6StatsReset = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 3, 18, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDhcp6StatsReset.setStatus('current')
agentServicePortConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4))
agentServicePortIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortIPAddress.setStatus('current')
agentServicePortSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortSubnetMask.setStatus('current')
agentServicePortDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortDefaultGateway.setStatus('current')
agentServicePortBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortBurnedInMacAddress.setStatus('current')
agentServicePortConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortConfigProtocol.setStatus('current')
agentServicePortProtocolDhcpRenew = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("renew", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortProtocolDhcpRenew.setStatus('deprecated')
agentServicePortIpv6AdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortIpv6AdminMode.setStatus('current')
agentServicePortIpv6Gateway = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 8), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortIpv6Gateway.setStatus('current')
agentServicePortIpv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 9), )
if mibBuilder.loadTexts: agentServicePortIpv6AddrTable.setStatus('current')
agentServicePortIpv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 9, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentServicePortIpv6AddrPrefix"))
if mibBuilder.loadTexts: agentServicePortIpv6AddrEntry.setStatus('current')
agentServicePortIpv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 9, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentServicePortIpv6AddrPrefix.setStatus('current')
agentServicePortIpv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentServicePortIpv6AddrPrefixLength.setStatus('current')
agentServicePortIpv6AddrEuiFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentServicePortIpv6AddrEuiFlag.setStatus('current')
agentServicePortIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentServicePortIpv6AddrStatus.setStatus('current')
agentServicePortIpv6AddressAutoConfig = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortIpv6AddressAutoConfig.setStatus('current')
agentServicePortIpv6ConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dhcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortIpv6ConfigProtocol.setStatus('current')
agentServicePortDhcp6ClientDuid = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6ClientDuid.setStatus('current')
agentServicePortStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13))
agentServicePortDhcp6ADVERTISEMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6ADVERTISEMessagesReceived.setStatus('current')
agentServicePortDhcp6REPLYMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6REPLYMessagesReceived.setStatus('current')
agentServicePortDhcp6ADVERTISEMessagesDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6ADVERTISEMessagesDiscarded.setStatus('current')
agentServicePortDhcp6REPLYMessagesDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6REPLYMessagesDiscarded.setStatus('current')
agentServicePortDhcp6MalformedMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6MalformedMessagesReceived.setStatus('current')
agentServicePortDhcp6SOLICITMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6SOLICITMessagesSent.setStatus('current')
agentServicePortDhcp6REQUESTMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6REQUESTMessagesSent.setStatus('current')
agentServicePortDhcp6RENEWMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6RENEWMessagesSent.setStatus('current')
agentServicePortDhcp6REBINDMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6REBINDMessagesSent.setStatus('current')
agentServicePortDhcp6RELEASEMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6RELEASEMessagesSent.setStatus('current')
agentServicePortDhcp6StatsReset = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 4, 13, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortDhcp6StatsReset.setStatus('current')
agentSnmpConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6))
agentSnmpCommunityCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityCreate.setStatus('current')
agentSnmpCommunityConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 2), )
if mibBuilder.loadTexts: agentSnmpCommunityConfigTable.setStatus('current')
agentSnmpCommunityConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSnmpCommunityIndex"))
if mibBuilder.loadTexts: agentSnmpCommunityConfigEntry.setStatus('current')
agentSnmpCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpCommunityIndex.setStatus('current')
agentSnmpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityName.setStatus('current')
agentSnmpCommunityIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityIPAddress.setStatus('current')
agentSnmpCommunityIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityIPMask.setStatus('current')
agentSnmpCommunityAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("read-only", 1), ("read-write", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityAccessMode.setStatus('current')
agentSnmpCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("config", 3), ("destroy", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityStatus.setStatus('current')
agentSnmpTrapReceiverCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverCreate.setStatus('current')
agentSnmpTrapReceiverConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4), )
if mibBuilder.loadTexts: agentSnmpTrapReceiverConfigTable.setStatus('current')
agentSnmpTrapReceiverConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSnmpTrapReceiverIndex"))
if mibBuilder.loadTexts: agentSnmpTrapReceiverConfigEntry.setStatus('current')
agentSnmpTrapReceiverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpTrapReceiverIndex.setStatus('current')
agentSnmpTrapReceiverCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverCommunityName.setStatus('current')
agentSnmpTrapReceiverIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverIPAddress.setStatus('current')
agentSnmpTrapReceiverStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("config", 3), ("destroy", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverStatus.setStatus('current')
agentSnmpTrapReceiverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("snmpv1", 1), ("snmpv2c", 2), ("snmpv3", 3))).clone('snmpv2c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverVersion.setStatus('current')
agentSnmpTrapReceiverSecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("auth", 2), ("priv", 3), ("notSupport", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverSecurityLevel.setStatus('current')
agentSnmpTrapReceiverPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(162)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverPort.setStatus('current')
agentSnmpTrapFlagsConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 5))
agentSnmpAuthenticationTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpAuthenticationTrapFlag.setStatus('current')
agentSnmpLinkUpDownTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpLinkUpDownTrapFlag.setStatus('current')
agentSnmpMultipleUsersTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpMultipleUsersTrapFlag.setStatus('current')
agentSnmpSpanningTreeTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpSpanningTreeTrapFlag.setStatus('current')
agentSnmpACLTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpACLTrapFlag.setStatus('current')
agentSnmpTransceiverTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTransceiverTrapFlag.setStatus('current')
agentSnmpInformConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6))
agentSnmpInformAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformAdminMode.setStatus('current')
agentSnmpInformRetires = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformRetires.setStatus('current')
agentSnmpInformTimeout = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformTimeout.setStatus('current')
agentSnmpInformConfigTableCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformConfigTableCreate.setStatus('current')
agentSnmpInformConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 5), )
if mibBuilder.loadTexts: agentSnmpInformConfigTable.setStatus('current')
agentSnmpInformConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 5, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSnmpInformIndex"))
if mibBuilder.loadTexts: agentSnmpInformConfigEntry.setStatus('current')
agentSnmpInformIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpInformIndex.setStatus('current')
agentSnmpInformName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformName.setStatus('current')
agentSnmpInformIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 5, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformIpAddress.setStatus('current')
agentSnmpInformVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("snmpv2c", 2), ("snmpv3", 3))).clone('snmpv2c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformVersion.setStatus('current')
agentSnmpInformStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("config", 3), ("destroy", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformStatus.setStatus('current')
agentSnmpInformSecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 6, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("auth", 2), ("priv", 3), ("notSupport", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpInformSecurityLevel.setStatus('current')
agentSnmpUserConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7), )
if mibBuilder.loadTexts: agentSnmpUserConfigTable.setStatus('current')
agentSnmpUserConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSnmpUserIndex"))
if mibBuilder.loadTexts: agentSnmpUserConfigEntry.setStatus('current')
agentSnmpUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpUserIndex.setStatus('current')
agentSnmpUserUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpUserUsername.setStatus('current')
agentSnmpUserAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("md5", 2), ("sha", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpUserAuthentication.setStatus('current')
agentSnmpUserAuthenticationPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpUserAuthenticationPassword.setStatus('current')
agentSnmpUserEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("des", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpUserEncryption.setStatus('current')
agentSnmpUserEncryptionPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpUserEncryptionPassword.setStatus('current')
agentSnmpUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("create", 4), ("destory", 6))).clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSnmpUserStatus.setStatus('current')
agentSnmpEngineIdConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 8), )
if mibBuilder.loadTexts: agentSnmpEngineIdConfigTable.setStatus('current')
agentSnmpTrapSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 9), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapSourceInterface.setStatus('current')
agentSnmpEngineIdConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 8, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSnmpEngineIdIndex"))
if mibBuilder.loadTexts: agentSnmpEngineIdConfigEntry.setStatus('current')
agentSnmpEngineIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpEngineIdIndex.setStatus('current')
agentSnmpEngineIdIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 8, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpEngineIdIpAddress.setStatus('current')
agentSnmpEngineIdString = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpEngineIdString.setStatus('current')
agentSnmpEngineIdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 6, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("create", 4), ("destory", 6))).clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSnmpEngineIdStatus.setStatus('current')
agentSpanningTreeConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 7))
agentSpanningTreeMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSpanningTreeMode.setStatus('obsolete')
agentSwitchConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8))
agentSwitchAddressAgingTimeoutTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 4), )
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeoutTable.setStatus('current')
agentSwitchAddressAgingTimeoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 4, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qFdbId"))
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeoutEntry.setStatus('current')
agentSwitchAddressAgingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeout.setStatus('current')
agentSwitchStaticMacFilteringTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 5), )
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringTable.setStatus('current')
agentSwitchStaticMacFilteringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 5, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchStaticMacFilteringVlanId"), (0, "SWITCHING-MIB", "agentSwitchStaticMacFilteringAddress"))
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringEntry.setStatus('current')
agentSwitchStaticMacFilteringVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringVlanId.setStatus('current')
agentSwitchStaticMacFilteringAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringAddress.setStatus('current')
agentSwitchStaticMacFilteringSourcePortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 5, 1, 3), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringSourcePortMask.setStatus('current')
agentSwitchStaticMacFilteringDestPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 5, 1, 4), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringDestPortMask.setStatus('deprecated')
agentSwitchStaticMacFilteringStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringStatus.setStatus('current')
agentSwitchSnoopingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 6))
agentSwitchSnoopingCfgTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 6, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingCfgTable.setStatus('current')
agentSwitchSnoopingCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 6, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingCfgEntry.setStatus('current')
agentSwitchSnoopingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 6, 1, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingProtocol.setStatus('current')
agentSwitchSnoopingAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingAdminMode.setStatus('current')
agentSwitchSnoopingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 6, 1, 1, 3), AgentPortMask().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingPortMask.setStatus('current')
agentSwitchSnoopingMulticastControlFramesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingMulticastControlFramesProcessed.setStatus('current')
agentSwitchSnoopingIntfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7))
agentSwitchSnoopingIntfTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingIntfTable.setStatus('current')
agentSwitchSnoopingIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingIntfEntry.setStatus('current')
agentSwitchSnoopingIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfIndex.setStatus('current')
agentSwitchSnoopingIntfAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfAdminMode.setStatus('current')
agentSwitchSnoopingIntfGroupMembershipInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 3600)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfGroupMembershipInterval.setStatus('current')
agentSwitchSnoopingIntfMRPExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfMRPExpirationTime.setStatus('current')
agentSwitchSnoopingIntfFastLeaveAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfFastLeaveAdminMode.setStatus('current')
agentSwitchSnoopingIntfMulticastRouterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfMulticastRouterMode.setStatus('current')
agentSwitchSnoopingIntfVlanIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 7, 1, 1, 8), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfVlanIDs.setStatus('current')
agentSwitchSnoopingVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 8))
agentSwitchSnoopingVlanTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 8, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingVlanTable.setStatus('current')
agentSwitchSnoopingVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 8, 1, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingVlanEntry.setStatus('current')
agentSwitchSnoopingVlanAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanAdminMode.setStatus('current')
agentSwitchSnoopingVlanGroupMembershipInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 3600)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanGroupMembershipInterval.setStatus('current')
agentSwitchSnoopingVlanMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanMaxResponseTime.setStatus('current')
agentSwitchSnoopingVlanFastLeaveAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanFastLeaveAdminMode.setStatus('current')
agentSwitchSnoopingVlanMRPExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanMRPExpirationTime.setStatus('current')
agentSwitchVlanStaticMrouterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 9))
agentSwitchVlanStaticMrouterTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 9, 1), )
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterTable.setStatus('current')
agentSwitchVlanStaticMrouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterEntry.setStatus('current')
agentSwitchVlanStaticMrouterAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterAdminMode.setStatus('current')
agentSwitchMFDBGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10))
agentSwitchMFDBTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1), )
if mibBuilder.loadTexts: agentSwitchMFDBTable.setStatus('current')
agentSwitchMFDBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchMFDBVlanId"), (0, "SWITCHING-MIB", "agentSwitchMFDBMacAddress"), (0, "SWITCHING-MIB", "agentSwitchMFDBProtocolType"), (0, "SWITCHING-MIB", "agentSwitchMFDBType"))
if mibBuilder.loadTexts: agentSwitchMFDBEntry.setStatus('current')
agentSwitchMFDBVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBVlanId.setStatus('current')
agentSwitchMFDBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMacAddress.setStatus('current')
agentSwitchMFDBProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("gmrp", 2), ("igmp", 3), ("mld", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBProtocolType.setStatus('current')
agentSwitchMFDBType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBType.setStatus('current')
agentSwitchMFDBDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBDescription.setStatus('current')
agentSwitchMFDBForwardingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1, 1, 6), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBForwardingPortMask.setStatus('current')
agentSwitchMFDBFilteringPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 1, 1, 7), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBFilteringPortMask.setStatus('current')
agentSwitchMFDBSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 2), )
if mibBuilder.loadTexts: agentSwitchMFDBSummaryTable.setStatus('current')
agentSwitchMFDBSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchMFDBSummaryVlanId"), (0, "SWITCHING-MIB", "agentSwitchMFDBSummaryMacAddress"))
if mibBuilder.loadTexts: agentSwitchMFDBSummaryEntry.setStatus('current')
agentSwitchMFDBSummaryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 2, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryVlanId.setStatus('current')
agentSwitchMFDBSummaryMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryMacAddress.setStatus('current')
agentSwitchMFDBSummaryForwardingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 2, 1, 3), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryForwardingPortMask.setStatus('current')
agentSwitchMFDBMaxTableEntries = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMaxTableEntries.setStatus('current')
agentSwitchMFDBMostEntriesUsed = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMostEntriesUsed.setStatus('current')
agentSwitchMFDBCurrentEntries = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 10, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBCurrentEntries.setStatus('current')
agentSwitchDVlanTagGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11))
agentSwitchDVlanTagEthertype = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchDVlanTagEthertype.setStatus('obsolete')
agentSwitchDVlanTagTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 2), )
if mibBuilder.loadTexts: agentSwitchDVlanTagTable.setStatus('obsolete')
agentSwitchDVlanTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchDVlanTagTPid"))
if mibBuilder.loadTexts: agentSwitchDVlanTagEntry.setStatus('obsolete')
agentSwitchDVlanTagTPid = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: agentSwitchDVlanTagTPid.setStatus('obsolete')
agentSwitchDVlanTagPrimaryTPid = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchDVlanTagPrimaryTPid.setStatus('obsolete')
agentSwitchDVlanTagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchDVlanTagRowStatus.setStatus('obsolete')
agentSwitchPortDVlanTagTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 3), )
if mibBuilder.loadTexts: agentSwitchPortDVlanTagTable.setStatus('obsolete')
agentSwitchPortDVlanTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 3, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchPortDVlanTagInterfaceIfIndex"), (0, "SWITCHING-MIB", "agentSwitchPortDVlanTagTPid"))
if mibBuilder.loadTexts: agentSwitchPortDVlanTagEntry.setStatus('obsolete')
agentSwitchPortDVlanTagInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchPortDVlanTagInterfaceIfIndex.setStatus('obsolete')
agentSwitchPortDVlanTagTPid = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: agentSwitchPortDVlanTagTPid.setStatus('obsolete')
agentSwitchPortDVlanTagMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPortDVlanTagMode.setStatus('obsolete')
agentSwitchPortDVlanTagCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPortDVlanTagCustomerId.setStatus('obsolete')
agentSwitchPortDVlanTagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPortDVlanTagRowStatus.setStatus('obsolete')
agentSwitchIfDVlanTagTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 4), )
if mibBuilder.loadTexts: agentSwitchIfDVlanTagTable.setStatus('current')
agentSwitchIfDVlanTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 4, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchIfDVlanTagIfIndex"))
if mibBuilder.loadTexts: agentSwitchIfDVlanTagEntry.setStatus('current')
agentSwitchIfDVlanTagIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchIfDVlanTagIfIndex.setStatus('current')
agentSwitchIfDVlanTagMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIfDVlanTagMode.setStatus('current')
agentSwitchIfDVlanTagTPid = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 11, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchIfDVlanTagTPid.setStatus('current')
agentSwitchVlanMacAssociationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 17))
agentSwitchVlanMacAssociationTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 17, 1), )
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationTable.setStatus('current')
agentSwitchVlanMacAssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 17, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchVlanMacAssociationMacAddress"), (0, "SWITCHING-MIB", "agentSwitchVlanMacAssociationVlanId"), (0, "SWITCHING-MIB", "agentSwitchVlanMacAssociationPriority"))
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationEntry.setStatus('current')
agentSwitchVlanMacAssociationMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 17, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationMacAddress.setStatus('current')
agentSwitchVlanMacAssociationVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 17, 1, 1, 2), VlanIndex())
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationVlanId.setStatus('current')
agentSwitchVlanMacAssociationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 17, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationPriority.setStatus('current')
agentSwitchVlanMacAssociationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 17, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationRowStatus.setStatus('current')
agentSwitchProtectedPortConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 18))
agentSwitchProtectedPortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 18, 1), )
if mibBuilder.loadTexts: agentSwitchProtectedPortTable.setStatus('current')
agentSwitchProtectedPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 18, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchProtectedPortGroupId"))
if mibBuilder.loadTexts: agentSwitchProtectedPortEntry.setStatus('current')
agentSwitchProtectedPortGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchProtectedPortGroupId.setStatus('current')
agentSwitchProtectedPortGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 18, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchProtectedPortGroupName.setStatus('current')
agentSwitchProtectedPortPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 18, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchProtectedPortPortList.setStatus('current')
agentSwitchVlanSubnetAssociationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 19))
agentSwitchVlanSubnetAssociationTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 19, 1), )
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationTable.setStatus('current')
agentSwitchVlanSubnetAssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 19, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchVlanSubnetAssociationIPAddress"), (0, "SWITCHING-MIB", "agentSwitchVlanSubnetAssociationSubnetMask"), (0, "SWITCHING-MIB", "agentSwitchVlanSubnetAssociationVlanId"), (0, "SWITCHING-MIB", "agentSwitchVlanSubnetAssociationPriority"))
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationEntry.setStatus('current')
agentSwitchVlanSubnetAssociationIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 19, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationIPAddress.setStatus('current')
agentSwitchVlanSubnetAssociationSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 19, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationSubnetMask.setStatus('current')
agentSwitchVlanSubnetAssociationVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 19, 1, 1, 3), VlanIndex())
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationVlanId.setStatus('current')
agentSwitchVlanSubnetAssociationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 19, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationPriority.setStatus('current')
agentSwitchVlanSubnetAssociationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 19, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationRowStatus.setStatus('current')
agentSwitchSnoopingQuerierGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20))
agentSwitchSnoopingQuerierCfgTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierCfgTable.setStatus('current')
agentSwitchSnoopingQuerierCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierCfgEntry.setStatus('current')
agentSwitchSnoopingQuerierAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierAdminMode.setStatus('current')
agentSwitchSnoopingQuerierVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVersion.setStatus('current')
agentSwitchSnoopingQuerierAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 1, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierAddress.setStatus('current')
agentSwitchSnoopingQuerierQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierQueryInterval.setStatus('current')
agentSwitchSnoopingQuerierExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 300)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierExpiryInterval.setStatus('current')
agentSwitchSnoopingQuerierVlanTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2), )
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanTable.setStatus('current')
agentSwitchSnoopingQuerierVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanEntry.setStatus('current')
agentSwitchSnoopingQuerierVlanAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanAdminMode.setStatus('current')
agentSwitchSnoopingQuerierVlanOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("querier", 1), ("non-querier", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanOperMode.setStatus('current')
agentSwitchSnoopingQuerierElectionParticipateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierElectionParticipateMode.setStatus('current')
agentSwitchSnoopingQuerierVlanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanAddress.setStatus('current')
agentSwitchSnoopingQuerierOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierOperVersion.setStatus('current')
agentSwitchSnoopingQuerierOperMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierOperMaxResponseTime.setStatus('current')
agentSwitchSnoopingQuerierLastQuerierAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierLastQuerierAddress.setStatus('current')
agentSwitchSnoopingQuerierLastQuerierVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 20, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierLastQuerierVersion.setStatus('current')
agentTransferConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9))
agentTransferUploadGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1))
agentTransferUploadMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5, 6, 7))).clone(namedValues=NamedValues(("tftp", 1), ("sftp", 5), ("scp", 6), ("ftp", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadMode.setStatus('current')
agentTransferUploadPath = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadPath.setStatus('current')
agentTransferUploadFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadFilename.setStatus('current')
agentTransferUploadScriptFromSwitchSrcFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadScriptFromSwitchSrcFilename.setStatus('current')
agentTransferUploadStartupConfigFromSwitchSrcFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadStartupConfigFromSwitchSrcFilename.setStatus('current')
agentTransferUploadOpCodeFromSwitchSrcFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadOpCodeFromSwitchSrcFilename.setStatus('current')
agentTransferUploadDataType = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("script", 1), ("code", 2), ("config", 3), ("errorlog", 4), ("messagelog", 5), ("traplog", 6), ("clibanner", 7), ("vmtracer", 8), ("runningConfig", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadDataType.setStatus('current')
agentTransferUploadStart = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadStart.setStatus('current')
agentTransferUploadStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("notInitiated", 1), ("transferStarting", 2), ("errorStarting", 3), ("wrongFileType", 4), ("updatingConfig", 5), ("invalidConfigFile", 6), ("writingToFlash", 7), ("failureWritingToFlash", 8), ("checkingCRC", 9), ("failedCRC", 10), ("unknownDirection", 11), ("transferSuccessful", 12), ("transferFailed", 13), ("fileNotExist", 14), ("runByOtherUsers", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTransferUploadStatus.setStatus('current')
agentTransferUploadServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 12), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadServerAddress.setStatus('current')
agentTransferUploadUsername = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadUsername.setStatus('current')
agentTransferUploadPassword = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadPassword.setStatus('current')
agentTransferDownloadGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2))
agentTransferDownloadMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5, 6, 7))).clone(namedValues=NamedValues(("tftp", 1), ("sftp", 5), ("scp", 6), ("ftp", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadMode.setStatus('current')
agentTransferDownloadPath = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadPath.setStatus('current')
agentTransferDownloadFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadFilename.setStatus('current')
agentTransferDownloadScriptToSwitchDestFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadScriptToSwitchDestFilename.setStatus('current')
agentTransferDownloadOPCodeToSwitchDestFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadOPCodeToSwitchDestFilename.setStatus('current')
agentTransferDownloadStartupConfigToSwitchDestFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadStartupConfigToSwitchDestFilename.setStatus('current')
agentTransferDownloadDataType = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("script", 1), ("code", 2), ("config", 3), ("sshkey-rsa1", 4), ("sshkey-rsa2", 5), ("sshkey-dsa", 6), ("sslpem-root", 7), ("sslpem-server", 8), ("sslpem-dhweak", 9), ("sslpem-dhstrong", 10), ("clibanner", 11), ("vmtracer", 12), ("license", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadDataType.setStatus('current')
agentTransferDownloadStart = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadStart.setStatus('current')
agentTransferDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("notInitiated", 1), ("transferStarting", 2), ("errorStarting", 3), ("wrongFileType", 4), ("updatingConfig", 5), ("invalidConfigFile", 6), ("writingToFlash", 7), ("failureWritingToFlash", 8), ("checkingCRC", 9), ("failedCRC", 10), ("unknownDirection", 11), ("transferSuccessful", 12), ("transferFailed", 13), ("fileExist", 14), ("noPartitionTableEntry", 15), ("runByOtherUsers", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTransferDownloadStatus.setStatus('current')
agentTransferDownloadServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 12), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadServerAddress.setStatus('current')
agentTransferDownloadUsername = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadUsername.setStatus('current')
agentTransferDownloadPassword = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadPassword.setStatus('current')
agentImageConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 3))
agentImage1 = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentImage1.setStatus('current')
agentImage2 = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentImage2.setStatus('current')
agentActiveImage = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentActiveImage.setStatus('current')
agentNextActiveImage = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 9, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNextActiveImage.setStatus('current')
agentPortMirroringGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10))
agentPortMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 4), )
if mibBuilder.loadTexts: agentPortMirrorTable.setStatus('current')
agentPortMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 4, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentPortMirrorSessionNum"))
if mibBuilder.loadTexts: agentPortMirrorEntry.setStatus('current')
agentPortMirrorSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentPortMirrorSessionNum.setStatus('current')
agentPortMirrorDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 4, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorDestinationPort.setStatus('current')
agentPortMirrorSourcePortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 4, 1, 3), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorSourcePortMask.setStatus('current')
agentPortMirrorAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorAdminMode.setStatus('current')
agentPortMirrorTypeTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 5), )
if mibBuilder.loadTexts: agentPortMirrorTypeTable.setStatus('current')
agentPortMirrorTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 5, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentPortMirrorSessionNum"), (0, "SWITCHING-MIB", "agentPortMirrorTypeSourcePort"))
if mibBuilder.loadTexts: agentPortMirrorTypeEntry.setStatus('current')
agentPortMirrorTypeSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentPortMirrorTypeSourcePort.setStatus('current')
agentPortMirrorTypeType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tx", 1), ("rx", 2), ("txrx", 3))).clone('txrx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorTypeType.setStatus('current')
agentDot3adAggPortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 12), )
if mibBuilder.loadTexts: agentDot3adAggPortTable.setStatus('current')
agentDot3adAggPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 12, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDot3adAggPort"))
if mibBuilder.loadTexts: agentDot3adAggPortEntry.setStatus('current')
agentDot3adAggPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDot3adAggPort.setStatus('current')
agentDot3adAggPortLACPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot3adAggPortLACPMode.setStatus('current')
agentPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13), )
if mibBuilder.loadTexts: agentPortConfigTable.setStatus('current')
agentPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentPortDot1dBasePort"))
if mibBuilder.loadTexts: agentPortConfigEntry.setStatus('current')
agentPortDot1dBasePort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortDot1dBasePort.setStatus('current')
agentPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortIfIndex.setStatus('current')
agentPortIanaType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 3), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortIanaType.setStatus('current')
agentPortSTPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot1d", 1), ("fast", 2), ("off", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSTPMode.setStatus('deprecated')
agentPortSTPState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discarding", 1), ("learning", 2), ("forwarding", 3), ("disabled", 4), ("manualFwd", 5), ("notParticipate", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortSTPState.setStatus('deprecated')
agentPortAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortAdminMode.setStatus('current')
agentPortLinkTrapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortLinkTrapMode.setStatus('current')
agentPortClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortClearStats.setStatus('current')
agentPortDefaultType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 11), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortDefaultType.setStatus('current')
agentPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 12), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortType.setStatus('current')
agentPortAutoNegAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortAutoNegAdminStatus.setStatus('current')
agentPortMaxFrameSizeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortMaxFrameSizeLimit.setStatus('current')
agentPortMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1518, 12288))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMaxFrameSize.setStatus('current')
agentPortCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortCapability.setStatus('current')
agentPortBroadcastControlThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBroadcastControlThresholdUnit.setStatus('current')
agentPortMulticastControlThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMulticastControlThresholdUnit.setStatus('current')
agentPortUnicastControlThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortUnicastControlThresholdUnit.setStatus('current')
agentPortVoiceVlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("vlanid", 2), ("dot1p", 3), ("untagged", 4), ("disable", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanMode.setStatus('current')
agentPortVoiceVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4093))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanID.setStatus('current')
agentPortVoiceVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanPriority.setStatus('current')
agentPortVoiceVlanDataPriorityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trust", 1), ("untrust", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanDataPriorityMode.setStatus('current')
agentPortVoiceVlanOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortVoiceVlanOperationalStatus.setStatus('current')
agentPortVoiceVlanUntagged = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanUntagged.setStatus('current')
agentPortVoiceVlanNoneMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanNoneMode.setStatus('current')
agentPortVoiceVlanAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanAuthMode.setStatus('current')
agentPortDot3FlowControlOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortDot3FlowControlOperStatus.setStatus('current')
agentPortLoadStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 13, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortLoadStatsInterval.setStatus('current')
agentProtocolConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14))
agentProtocolGroupCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 16), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupCreate.setStatus('obsolete')
agentProtocolGroupTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2), )
if mibBuilder.loadTexts: agentProtocolGroupTable.setStatus('current')
agentProtocolGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentProtocolGroupId"))
if mibBuilder.loadTexts: agentProtocolGroupEntry.setStatus('current')
agentProtocolGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentProtocolGroupId.setStatus('current')
agentProtocolGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 16), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupName.setStatus('current')
agentProtocolGroupVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4093))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupVlanId.setStatus('current')
agentProtocolGroupProtocolIP = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupProtocolIP.setStatus('obsolete')
agentProtocolGroupProtocolARP = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupProtocolARP.setStatus('obsolete')
agentProtocolGroupProtocolIPX = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupProtocolIPX.setStatus('obsolete')
agentProtocolGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentProtocolGroupStatus.setStatus('current')
agentProtocolGroupPortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 3), )
if mibBuilder.loadTexts: agentProtocolGroupPortTable.setStatus('current')
agentProtocolGroupPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 3, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentProtocolGroupId"), (0, "SWITCHING-MIB", "agentProtocolGroupPortIfIndex"))
if mibBuilder.loadTexts: agentProtocolGroupPortEntry.setStatus('current')
agentProtocolGroupPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentProtocolGroupPortIfIndex.setStatus('current')
agentProtocolGroupPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentProtocolGroupPortStatus.setStatus('current')
agentProtocolGroupProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 4), )
if mibBuilder.loadTexts: agentProtocolGroupProtocolTable.setStatus('current')
agentProtocolGroupProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 4, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentProtocolGroupId"), (0, "SWITCHING-MIB", "agentProtocolGroupProtocolID"))
if mibBuilder.loadTexts: agentProtocolGroupProtocolEntry.setStatus('current')
agentProtocolGroupProtocolID = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1536, 65535)))
if mibBuilder.loadTexts: agentProtocolGroupProtocolID.setStatus('current')
agentProtocolGroupProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 14, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentProtocolGroupProtocolStatus.setStatus('current')
agentStpSwitchConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15))
agentStpConfigDigestKey = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpConfigDigestKey.setStatus('current')
agentStpConfigFormatSelector = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpConfigFormatSelector.setStatus('current')
agentStpConfigName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpConfigName.setStatus('current')
agentStpConfigRevision = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpConfigRevision.setStatus('current')
agentStpForceVersion = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot1d", 1), ("dot1w", 2), ("dot1s", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpForceVersion.setStatus('current')
agentStpAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpAdminMode.setStatus('current')
agentStpPortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7), )
if mibBuilder.loadTexts: agentStpPortTable.setStatus('current')
agentStpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpPortEntry.setStatus('current')
agentStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortState.setStatus('current')
agentStpPortStatsMstpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsMstpBpduRx.setStatus('current')
agentStpPortStatsMstpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsMstpBpduTx.setStatus('current')
agentStpPortStatsRstpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsRstpBpduRx.setStatus('current')
agentStpPortStatsRstpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsRstpBpduTx.setStatus('current')
agentStpPortStatsStpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsStpBpduRx.setStatus('current')
agentStpPortStatsStpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsStpBpduTx.setStatus('current')
agentStpPortUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortUpTime.setStatus('current')
agentStpPortMigrationCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortMigrationCheck.setStatus('current')
agentStpPortHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortHelloTime.setStatus('current')
agentStpPortBPDUGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortBPDUGuard.setStatus('current')
agentStpCstConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8))
agentStpCstHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstHelloTime.setStatus('current')
agentStpCstMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstMaxAge.setStatus('current')
agentStpCstRegionalRootId = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRegionalRootId.setStatus('current')
agentStpCstRegionalRootPathCost = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRegionalRootPathCost.setStatus('current')
agentStpCstRootFwdDelay = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRootFwdDelay.setStatus('current')
agentStpCstBridgeFwdDelay = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 30)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeFwdDelay.setStatus('current')
agentStpCstBridgeHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstBridgeHelloTime.setStatus('current')
agentStpCstBridgeHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstBridgeHoldTime.setStatus('current')
agentStpCstBridgeMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeMaxAge.setStatus('current')
agentStpCstBridgeMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeMaxHops.setStatus('current')
agentStpCstBridgePriority = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgePriority.setStatus('current')
agentStpCstBridgeHoldCount = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 8, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeHoldCount.setStatus('current')
agentStpCstPortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9), )
if mibBuilder.loadTexts: agentStpCstPortTable.setStatus('current')
agentStpCstPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpCstPortEntry.setStatus('current')
agentStpCstPortOperEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortOperEdge.setStatus('current')
agentStpCstPortOperPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortOperPointToPoint.setStatus('current')
agentStpCstPortTopologyChangeAck = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortTopologyChangeAck.setStatus('current')
agentStpCstPortEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortEdge.setStatus('current')
agentStpCstPortForwardingState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discarding", 1), ("learning", 2), ("forwarding", 3), ("disabled", 4), ("manualFwd", 5), ("notParticipate", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortForwardingState.setStatus('current')
agentStpCstPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortId.setStatus('current')
agentStpCstPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortPathCost.setStatus('current')
agentStpCstPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortPriority.setStatus('current')
agentStpCstDesignatedBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedBridgeId.setStatus('current')
agentStpCstDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedCost.setStatus('current')
agentStpCstDesignatedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedPortId.setStatus('current')
agentStpCstExtPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstExtPortPathCost.setStatus('current')
agentStpCstPortBpduGuardEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortBpduGuardEffect.setStatus('current')
agentStpCstPortBpduFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortBpduFilter.setStatus('current')
agentStpCstPortBpduFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortBpduFlood.setStatus('current')
agentStpCstPortAutoEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortAutoEdge.setStatus('current')
agentStpCstPortRootGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortRootGuard.setStatus('current')
agentStpCstPortTCNGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortTCNGuard.setStatus('current')
agentStpCstPortLoopGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 9, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortLoopGuard.setStatus('current')
agentStpMstTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10), )
if mibBuilder.loadTexts: agentStpMstTable.setStatus('current')
agentStpMstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: agentStpMstEntry.setStatus('current')
agentStpMstId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstId.setStatus('current')
agentStpMstBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstBridgePriority.setStatus('current')
agentStpMstBridgeIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstBridgeIdentifier.setStatus('current')
agentStpMstDesignatedRootId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedRootId.setStatus('current')
agentStpMstRootPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstRootPathCost.setStatus('current')
agentStpMstRootPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstRootPortId.setStatus('current')
agentStpMstTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTimeSinceTopologyChange.setStatus('current')
agentStpMstTopologyChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTopologyChangeCount.setStatus('current')
agentStpMstTopologyChangeParm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTopologyChangeParm.setStatus('current')
agentStpMstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 10, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStpMstRowStatus.setStatus('current')
agentStpMstPortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11), )
if mibBuilder.loadTexts: agentStpMstPortTable.setStatus('current')
agentStpMstPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentStpMstId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpMstPortEntry.setStatus('current')
agentStpMstPortForwardingState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discarding", 1), ("learning", 2), ("forwarding", 3), ("disabled", 4), ("manualFwd", 5), ("notParticipate", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortForwardingState.setStatus('current')
agentStpMstPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortId.setStatus('current')
agentStpMstPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstPortPathCost.setStatus('current')
agentStpMstPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstPortPriority.setStatus('current')
agentStpMstDesignatedBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedBridgeId.setStatus('current')
agentStpMstDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedCost.setStatus('current')
agentStpMstDesignatedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedPortId.setStatus('current')
agentStpMstPortLoopInconsistentState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortLoopInconsistentState.setStatus('current')
agentStpMstPortTransitionsIntoLoopInconsistentState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortTransitionsIntoLoopInconsistentState.setStatus('current')
agentStpMstPortTransitionsOutOfLoopInconsistentState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortTransitionsOutOfLoopInconsistentState.setStatus('current')
agentStpMstVlanTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 12), )
if mibBuilder.loadTexts: agentStpMstVlanTable.setStatus('current')
agentStpMstVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 12, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentStpMstId"), (0, "Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: agentStpMstVlanEntry.setStatus('current')
agentStpMstVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 12, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStpMstVlanRowStatus.setStatus('current')
agentStpBpduGuardMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpBpduGuardMode.setStatus('current')
agentStpBpduFilterDefault = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpBpduFilterDefault.setStatus('current')
agentStpUplinkFast = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 15, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpUplinkFast.setStatus('current')
agentAuthenticationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16))
agentAuthenticationListCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListCreate.setStatus('current')
agentAuthenticationEnableListCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 7), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationEnableListCreate.setStatus('current')
agentAuthenticationListTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2), )
if mibBuilder.loadTexts: agentAuthenticationListTable.setStatus('current')
agentAuthenticationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentAuthenticationListIndex"))
if mibBuilder.loadTexts: agentAuthenticationListEntry.setStatus('current')
agentAuthenticationListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentAuthenticationListIndex.setStatus('current')
agentAuthenticationListName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListName.setStatus('current')
agentAuthenticationListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7), ("reject", 8), ("ldap", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod1.setStatus('current')
agentAuthenticationListMethod2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7), ("reject", 8), ("ldap", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod2.setStatus('current')
agentAuthenticationListMethod3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7), ("reject", 8), ("ldap", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod3.setStatus('current')
agentAuthenticationListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListStatus.setStatus('current')
agentAuthenticationListMethod4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7), ("reject", 8), ("ldap", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod4.setStatus('current')
agentAuthenticationListMethod5 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7), ("reject", 8), ("ldap", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod5.setStatus('current')
agentAuthenticationListMethod6 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7), ("reject", 8), ("ldap", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod6.setStatus('current')
agentAuthenticationListAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("console", 1), ("telnet", 2), ("ssh", 3), ("https", 4), ("http", 5), ("dot1x", 6), ("cts", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentAuthenticationListAccessType.setStatus('current')
agentAuthenticationListAccessLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("login", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentAuthenticationListAccessLevel.setStatus('current')
agentUserConfigDefaultAuthenticationList = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserConfigDefaultAuthenticationList.setStatus('current')
agentUserConfigDefaultAuthenticationDot1xList = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserConfigDefaultAuthenticationDot1xList.setStatus('current')
agentUserAuthenticationConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 4), )
if mibBuilder.loadTexts: agentUserAuthenticationConfigTable.setStatus('current')
agentUserAuthenticationConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 4, 1), )
agentUserConfigEntry.registerAugmentions(("SWITCHING-MIB", "agentUserAuthenticationConfigEntry"))
agentUserAuthenticationConfigEntry.setIndexNames(*agentUserConfigEntry.getIndexNames())
if mibBuilder.loadTexts: agentUserAuthenticationConfigEntry.setStatus('current')
agentUserAuthenticationList = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAuthenticationList.setStatus('current')
agentUserAuthenticationDot1xList = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAuthenticationDot1xList.setStatus('current')
agentUserPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 5), )
if mibBuilder.loadTexts: agentUserPortConfigTable.setStatus('current')
agentUserPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 5, 1), )
agentUserConfigEntry.registerAugmentions(("SWITCHING-MIB", "agentUserPortConfigEntry"))
agentUserPortConfigEntry.setIndexNames(*agentUserConfigEntry.getIndexNames())
if mibBuilder.loadTexts: agentUserPortConfigEntry.setStatus('current')
agentUserPortSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 16, 5, 1, 1), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserPortSecurity.setStatus('current')
agentClassOfServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 17))
agentClassOfServicePortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 17, 1), )
if mibBuilder.loadTexts: agentClassOfServicePortTable.setStatus('current')
agentClassOfServicePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 17, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SWITCHING-MIB", "agentClassOfServicePortPriority"))
if mibBuilder.loadTexts: agentClassOfServicePortEntry.setStatus('current')
agentClassOfServicePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: agentClassOfServicePortPriority.setStatus('current')
agentClassOfServicePortClass = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClassOfServicePortClass.setStatus('current')
agentHTTPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 19))
agentHTTPMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 19, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPMaxSessions.setStatus('current')
agentHTTPHardTimeout = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 19, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 168))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPHardTimeout.setStatus('current')
agentHTTPSoftTimeout = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 19, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPSoftTimeout.setStatus('current')
agentAutoInstallConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 20))
agentAutoinstallPersistentMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallPersistentMode.setStatus('current')
agentAutoinstallAutosaveMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallAutosaveMode.setStatus('current')
agentAutoinstallUnicastRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 20, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallUnicastRetryCount.setStatus('current')
agentAutoinstallStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 20, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentAutoinstallStatus.setStatus('current')
agentAutoinstallAutoRebootMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallAutoRebootMode.setStatus('current')
agentAutoinstallOperationalMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 20, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallOperationalMode.setStatus('current')
agentAutoinstallAutoUpgradeMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 20, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallAutoUpgradeMode.setStatus('current')
agentLDAPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 25))
agentLDAPServerIP = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 25, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLDAPServerIP.setStatus('current')
agentLDAPServerPort = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 25, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLDAPServerPort.setStatus('current')
agentLDAPBaseDn = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 25, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLDAPBaseDn.setStatus('current')
agentLDAPRacName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 25, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLDAPRacName.setStatus('current')
agentLDAPRacDomain = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 25, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLDAPRacDomain.setStatus('current')
agentDDnsConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26))
agentDDnsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1), )
if mibBuilder.loadTexts: agentDDnsConfigTable.setStatus('current')
agentDDnsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDDnsIndex"))
if mibBuilder.loadTexts: agentDDnsConfigEntry.setStatus('current')
agentDDnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentDDnsIndex.setStatus('current')
agentDDnsServName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("easydns", 0), ("dyndns", 1), ("dhs", 2), ("ods", 3), ("dyns", 4), ("zoneedit", 5), ("tzo", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDDnsServName.setStatus('current')
agentDDnsUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDDnsUserName.setStatus('current')
agentDDnsPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDDnsPassword.setStatus('current')
agentDDnsHost = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 44))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDDnsHost.setStatus('current')
agentDDnsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)).clone('0.0.0.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDDnsAddress.setStatus('current')
agentDDnsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 26, 1, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDDnsStatus.setStatus('current')
agentUdldConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 28))
agentUdldMessageTime = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 28, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(7, 90))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldMessageTime.setStatus('current')
agentUdldConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 28, 2), )
if mibBuilder.loadTexts: agentUdldConfigTable.setStatus('current')
agentUdldConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 28, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentUdldIndex"))
if mibBuilder.loadTexts: agentUdldConfigEntry.setStatus('current')
agentUdldIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 28, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUdldIndex.setStatus('current')
agentUdldIntfAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 28, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldIntfAdminMode.setStatus('current')
agentUdldIntfAggressiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 28, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldIntfAggressiveMode.setStatus('current')
agentSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3))
agentSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSaveConfig.setStatus('current')
agentClearConfig = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearConfig.setStatus('current')
agentClearLags = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearLags.setStatus('current')
agentClearLoginSessions = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearLoginSessions.setStatus('current')
agentClearPasswords = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearPasswords.setStatus('current')
agentClearPortStats = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearPortStats.setStatus('current')
agentClearSwitchStats = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearSwitchStats.setStatus('current')
agentClearBufferedLog = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearBufferedLog.setStatus('current')
agentClearTrapLog = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearTrapLog.setStatus('current')
agentClearVlan = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearVlan.setStatus('current')
agentResetSystem = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResetSystem.setStatus('current')
agentConfigCurrentSystemTime = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentConfigCurrentSystemTime.setStatus('current')
agentCpuLoad = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCpuLoad.setStatus('current')
agentCpuLoadOneMin = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCpuLoadOneMin.setStatus('current')
agentCpuLoadFiveMin = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCpuLoadFiveMin.setStatus('current')
agentStartupConfigErase = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("erase", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStartupConfigErase.setStatus('obsolete')
agentDaiConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21))
agentDaiSrcMacValidate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiSrcMacValidate.setStatus('current')
agentDaiDstMacValidate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiDstMacValidate.setStatus('current')
agentDaiIPValidate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiIPValidate.setStatus('current')
agentDaiVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 4), )
if mibBuilder.loadTexts: agentDaiVlanConfigTable.setStatus('current')
agentDaiVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 4, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDaiVlanIndex"))
if mibBuilder.loadTexts: agentDaiVlanConfigEntry.setStatus('current')
agentDaiVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 4, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDaiVlanIndex.setStatus('current')
agentDaiVlanDynArpInspEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiVlanDynArpInspEnable.setStatus('current')
agentDaiVlanLoggingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 4, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiVlanLoggingEnable.setStatus('current')
agentDaiVlanArpAclName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiVlanArpAclName.setStatus('current')
agentDaiVlanArpAclStaticFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 4, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiVlanArpAclStaticFlag.setStatus('current')
agentDaiStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiStatsReset.setStatus('current')
agentDaiVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6), )
if mibBuilder.loadTexts: agentDaiVlanStatsTable.setStatus('current')
agentDaiVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDaiVlanStatsIndex"))
if mibBuilder.loadTexts: agentDaiVlanStatsEntry.setStatus('current')
agentDaiVlanStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDaiVlanStatsIndex.setStatus('current')
agentDaiVlanPktsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanPktsForwarded.setStatus('current')
agentDaiVlanPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanPktsDropped.setStatus('current')
agentDaiVlanDhcpDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanDhcpDrops.setStatus('current')
agentDaiVlanDhcpPermits = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanDhcpPermits.setStatus('current')
agentDaiVlanAclDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanAclDrops.setStatus('current')
agentDaiVlanAclPermits = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanAclPermits.setStatus('current')
agentDaiVlanSrcMacFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanSrcMacFailures.setStatus('current')
agentDaiVlanDstMacFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanDstMacFailures.setStatus('current')
agentDaiVlanIpValidFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanIpValidFailures.setStatus('current')
agentDaiIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 7), )
if mibBuilder.loadTexts: agentDaiIfConfigTable.setStatus('current')
agentDaiIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDaiIfConfigEntry.setStatus('current')
agentDaiIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 7, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiIfTrustEnable.setStatus('current')
agentDaiIfRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 300), )).clone(15)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiIfRateLimit.setStatus('current')
agentDaiIfBurstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 21, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiIfBurstInterval.setStatus('current')
agentArpAclGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22))
agentArpAclTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 1), )
if mibBuilder.loadTexts: agentArpAclTable.setStatus('current')
agentArpAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentArpAclName"))
if mibBuilder.loadTexts: agentArpAclEntry.setStatus('current')
agentArpAclName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclName.setStatus('current')
agentArpAclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclRowStatus.setStatus('current')
agentArpAclRuleTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 2), )
if mibBuilder.loadTexts: agentArpAclRuleTable.setStatus('current')
agentArpAclRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentArpAclName"), (0, "SWITCHING-MIB", "agentArpAclRuleMatchSenderIpAddr"), (0, "SWITCHING-MIB", "agentArpAclRuleMatchSenderMacAddr"))
if mibBuilder.loadTexts: agentArpAclRuleEntry.setStatus('current')
agentArpAclRuleMatchSenderIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 2, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclRuleMatchSenderIpAddr.setStatus('current')
agentArpAclRuleMatchSenderMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclRuleMatchSenderMacAddr.setStatus('current')
agentArpAclRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 22, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclRuleRowStatus.setStatus('current')
agentDhcpSnoopingConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23))
agentDhcpSnoopingAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingAdminMode.setStatus('current')
agentDhcpSnoopingVerifyMac = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingVerifyMac.setStatus('current')
agentDhcpSnoopingVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 3), )
if mibBuilder.loadTexts: agentDhcpSnoopingVlanConfigTable.setStatus('current')
agentDhcpSnoopingVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 3, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDhcpSnoopingVlanIndex"))
if mibBuilder.loadTexts: agentDhcpSnoopingVlanConfigEntry.setStatus('current')
agentDhcpSnoopingVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDhcpSnoopingVlanIndex.setStatus('current')
agentDhcpSnoopingVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingVlanEnable.setStatus('current')
agentDhcpSnoopingIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 4), )
if mibBuilder.loadTexts: agentDhcpSnoopingIfConfigTable.setStatus('current')
agentDhcpSnoopingIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpSnoopingIfConfigEntry.setStatus('current')
agentDhcpSnoopingIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingIfTrustEnable.setStatus('current')
agentDhcpSnoopingIfLogEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingIfLogEnable.setStatus('current')
agentDhcpSnoopingIfRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 300), )).clone(-1)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingIfRateLimit.setStatus('current')
agentDhcpSnoopingIfBurstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 15), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingIfBurstInterval.setStatus('current')
agentIpsgIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 5), )
if mibBuilder.loadTexts: agentIpsgIfConfigTable.setStatus('current')
agentIpsgIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentIpsgIfConfigEntry.setStatus('current')
agentIpsgIfVerifySource = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpsgIfVerifySource.setStatus('current')
agentIpsgIfPortSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 5, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpsgIfPortSecurity.setStatus('current')
agentDhcpSnoopingStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingStatsReset.setStatus('current')
agentDhcpSnoopingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 7), )
if mibBuilder.loadTexts: agentDhcpSnoopingStatsTable.setStatus('current')
agentDhcpSnoopingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpSnoopingStatsEntry.setStatus('current')
agentDhcpSnoopingMacVerifyFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpSnoopingMacVerifyFailures.setStatus('current')
agentDhcpSnoopingInvalidClientMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpSnoopingInvalidClientMessages.setStatus('current')
agentDhcpSnoopingInvalidServerMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpSnoopingInvalidServerMessages.setStatus('current')
agentStaticIpsgBindingTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 8), )
if mibBuilder.loadTexts: agentStaticIpsgBindingTable.setStatus('current')
agentStaticIpsgBinding = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 8, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentStaticIpsgBindingIfIndex"), (0, "SWITCHING-MIB", "agentStaticIpsgBindingVlanId"), (0, "SWITCHING-MIB", "agentStaticIpsgBindingMacAddr"), (0, "SWITCHING-MIB", "agentStaticIpsgBindingIpAddr"))
if mibBuilder.loadTexts: agentStaticIpsgBinding.setStatus('current')
agentStaticIpsgBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 8, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingIfIndex.setStatus('current')
agentStaticIpsgBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 8, 1, 2), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingVlanId.setStatus('current')
agentStaticIpsgBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 8, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingMacAddr.setStatus('current')
agentStaticIpsgBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 8, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingIpAddr.setStatus('current')
agentStaticIpsgBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingRowStatus.setStatus('current')
agentDynamicIpsgBindingTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 9), )
if mibBuilder.loadTexts: agentDynamicIpsgBindingTable.setStatus('current')
agentDynamicIpsgBinding = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 9, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDynamicIpsgBindingIfIndex"), (0, "SWITCHING-MIB", "agentDynamicIpsgBindingVlanId"), (0, "SWITCHING-MIB", "agentDynamicIpsgBindingMacAddr"), (0, "SWITCHING-MIB", "agentDynamicIpsgBindingIpAddr"))
if mibBuilder.loadTexts: agentDynamicIpsgBinding.setStatus('current')
agentDynamicIpsgBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 9, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpsgBindingIfIndex.setStatus('current')
agentDynamicIpsgBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 9, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpsgBindingVlanId.setStatus('current')
agentDynamicIpsgBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 9, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpsgBindingMacAddr.setStatus('current')
agentDynamicIpsgBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpsgBindingIpAddr.setStatus('current')
agentStaticDsBindingTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 10), )
if mibBuilder.loadTexts: agentStaticDsBindingTable.setStatus('current')
agentStaticDsBinding = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 10, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentStaticDsBindingMacAddr"))
if mibBuilder.loadTexts: agentStaticDsBinding.setStatus('current')
agentStaticDsBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 10, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingIfIndex.setStatus('current')
agentStaticDsBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 10, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingVlanId.setStatus('current')
agentStaticDsBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 10, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingMacAddr.setStatus('current')
agentStaticDsBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 10, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingIpAddr.setStatus('current')
agentStaticDsBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 10, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingRowStatus.setStatus('current')
agentDynamicDsBindingTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 11), )
if mibBuilder.loadTexts: agentDynamicDsBindingTable.setStatus('current')
agentDynamicDsBinding = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 11, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDynamicDsBindingMacAddr"))
if mibBuilder.loadTexts: agentDynamicDsBinding.setStatus('current')
agentDynamicDsBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 11, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingIfIndex.setStatus('current')
agentDynamicDsBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 11, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingVlanId.setStatus('current')
agentDynamicDsBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 11, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingMacAddr.setStatus('current')
agentDynamicDsBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingIpAddr.setStatus('current')
agentDynamicDsBindingLeaseRemainingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 11, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingLeaseRemainingTime.setStatus('current')
agentDhcpSnoopingRemoteFileName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingRemoteFileName.setStatus('current')
agentDhcpSnoopingRemoteIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingRemoteIpAddr.setStatus('current')
agentDhcpSnoopingStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingStoreInterval.setStatus('current')
agentDhcpSnoopingStoreTimeout = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 23, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingStoreTimeout.setStatus('current')
agentDNSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18))
agentDNSConfigDomainLookupStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigDomainLookupStatus.setStatus('current')
agentDNSConfigDefaultDomainName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigDefaultDomainName.setStatus('current')
agentDNSConfigDefaultDomainNameRemove = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigDefaultDomainNameRemove.setStatus('current')
agentDNSConfigDomainNameListTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 4), )
if mibBuilder.loadTexts: agentDNSConfigDomainNameListTable.setStatus('current')
agentDNSConfigDomainNameListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 4, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDNSConfigDomainNameListIndex"))
if mibBuilder.loadTexts: agentDNSConfigDomainNameListEntry.setStatus('current')
agentDNSConfigDomainNameListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigDomainNameListIndex.setStatus('current')
agentDNSDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 4, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDNSDomainName.setStatus('current')
agentDNSDomainNameRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSDomainNameRemove.setStatus('current')
agentDNSConfigNameServerListTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 5), )
if mibBuilder.loadTexts: agentDNSConfigNameServerListTable.setStatus('current')
agentDNSConfigNameServerListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 5, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDNSConfigNameServerListIndex"))
if mibBuilder.loadTexts: agentDNSConfigNameServerListEntry.setStatus('current')
agentDNSConfigNameServerListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigNameServerListIndex.setStatus('current')
agentDNSConfigNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 5, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDNSConfigNameServer.setStatus('current')
agentDNSConfigRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigRequest.setStatus('current')
agentDNSConfigResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigResponse.setStatus('current')
agentDNSConfigNameServerRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigNameServerRemove.setStatus('current')
agentIPv6DNSConfigNameServerListTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 13), )
if mibBuilder.loadTexts: agentIPv6DNSConfigNameServerListTable.setStatus('current')
agentIPv6DNSConfigNameServerListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 13, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentIPv6DNSConfigNameServerListIndex"))
if mibBuilder.loadTexts: agentIPv6DNSConfigNameServerListEntry.setStatus('current')
agentIPv6DNSConfigNameServerListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigNameServerListIndex.setStatus('current')
agentIPv6DNSConfigNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 13, 1, 2), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIPv6DNSConfigNameServer.setStatus('current')
agentIPv6DNSConfigRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigRequest.setStatus('current')
agentIPv6DNSConfigResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigResponse.setStatus('current')
agentIPv6DNSConfigNameServerRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIPv6DNSConfigNameServerRemove.setStatus('current')
agentDNSConfigCacheTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 6), )
if mibBuilder.loadTexts: agentDNSConfigCacheTable.setStatus('current')
agentDNSConfigCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 6, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDNSConfigCacheIndex"))
if mibBuilder.loadTexts: agentDNSConfigCacheEntry.setStatus('current')
agentDNSConfigCacheIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigCacheIndex.setStatus('current')
agentDNSConfigDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigDomainName.setStatus('current')
agentDNSConfigIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigIpAddress.setStatus('current')
agentDNSConfigTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigTTL.setStatus('current')
agentDNSConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigFlag.setStatus('current')
agentIPv6DNSConfigCacheTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 14), )
if mibBuilder.loadTexts: agentIPv6DNSConfigCacheTable.setStatus('current')
agentIPv6DNSConfigCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 14, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentIPv6DNSConfigCacheIndex"))
if mibBuilder.loadTexts: agentIPv6DNSConfigCacheEntry.setStatus('current')
agentIPv6DNSConfigCacheIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigCacheIndex.setStatus('current')
agentIPv6DNSConfigDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigDomainName.setStatus('current')
agentIPv6DNSConfigIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 14, 1, 3), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigIpAddress.setStatus('current')
agentIPv6DNSConfigTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigTTL.setStatus('current')
agentIPv6DNSConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigFlag.setStatus('current')
agentDNSConfigHostTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 7), )
if mibBuilder.loadTexts: agentDNSConfigHostTable.setStatus('current')
agentDNSConfigHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 7, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDNSConfigHostIndex"))
if mibBuilder.loadTexts: agentDNSConfigHostEntry.setStatus('current')
agentDNSConfigHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDNSConfigHostIndex.setStatus('current')
agentDNSConfigHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 7, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDNSConfigHostName.setStatus('current')
agentDNSConfigHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 7, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentDNSConfigHostIpAddress.setStatus('current')
agentDNSConfigHostNameRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigHostNameRemove.setStatus('current')
agentIPv6DNSConfigHostTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 15), )
if mibBuilder.loadTexts: agentIPv6DNSConfigHostTable.setStatus('current')
agentDNSConfigSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 16), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigSourceInterface.setStatus('current')
agentIPv6DNSConfigHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 15, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentIPv6DNSConfigHostIndex"))
if mibBuilder.loadTexts: agentIPv6DNSConfigHostEntry.setStatus('current')
agentIPv6DNSConfigHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6DNSConfigHostIndex.setStatus('obsolete')
agentIPv6DNSConfigHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 15, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIPv6DNSConfigHostName.setStatus('obsolete')
agentIPv6DNSConfigHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 15, 1, 3), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIPv6DNSConfigHostIpAddress.setStatus('obsolete')
agentIPv6DNSConfigHostNameRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIPv6DNSConfigHostNameRemove.setStatus('obsolete')
agentDNSConfigClearDomainNameList = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigClearDomainNameList.setStatus('current')
agentDNSConfigClearCache = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigClearCache.setStatus('current')
agentDNSConfigClearHosts = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigClearHosts.setStatus('current')
agentDNSConfigClearDNS = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigClearDNS.setStatus('current')
agentDNSConfigClearDNSCounters = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 18, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDNSConfigClearDNSCounters.setStatus('current')
agentDhcpL2RelayConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24))
agentDhcpL2RelayAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayAdminMode.setStatus('current')
agentDhcpL2RelayIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 2), )
if mibBuilder.loadTexts: agentDhcpL2RelayIfConfigTable.setStatus('current')
agentDhcpL2RelayIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpL2RelayIfConfigEntry.setStatus('current')
agentDhcpL2RelayIfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayIfEnable.setStatus('current')
agentDhcpL2RelayIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayIfTrustEnable.setStatus('current')
agentDhcpL2RelayVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 3), )
if mibBuilder.loadTexts: agentDhcpL2RelayVlanConfigTable.setStatus('current')
agentDhcpL2RelayVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 3, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentDhcpL2RelayVlanIndex"))
if mibBuilder.loadTexts: agentDhcpL2RelayVlanConfigEntry.setStatus('current')
agentDhcpL2RelayVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDhcpL2RelayVlanIndex.setStatus('current')
agentDhcpL2RelayVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayVlanEnable.setStatus('current')
agentDhcpL2RelayCircuitIdVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 3, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayCircuitIdVlanEnable.setStatus('current')
agentDhcpL2RelayRemoteIdVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayRemoteIdVlanEnable.setStatus('current')
agentDhcpL2RelayStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayStatsReset.setStatus('current')
agentDhcpL2RelayStatsTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 7), )
if mibBuilder.loadTexts: agentDhcpL2RelayStatsTable.setStatus('current')
agentDhcpL2RelayStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpL2RelayStatsEntry.setStatus('current')
agentDhcpL2RelayUntrustedSrvrMsgsWithOptn82 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpL2RelayUntrustedSrvrMsgsWithOptn82.setStatus('current')
agentDhcpL2RelayUntrustedClntMsgsWithOptn82 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpL2RelayUntrustedClntMsgsWithOptn82.setStatus('current')
agentDhcpL2RelayTrustedSrvrMsgsWithoutOptn82 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpL2RelayTrustedSrvrMsgsWithoutOptn82.setStatus('current')
agentDhcpL2RelayTrustedClntMsgsWithoutOptn82 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 24, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpL2RelayTrustedClntMsgsWithoutOptn82.setStatus('current')
agentSwitchVoiceVLANGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 25))
agentSwitchVoiceVlanDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 25, 2), )
if mibBuilder.loadTexts: agentSwitchVoiceVlanDeviceTable.setStatus('current')
agentSwitchVoiceVlanDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 25, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSwitchVoiceVlanInterfaceNum"), (0, "SWITCHING-MIB", "agentSwitchVoiceVlanDeviceMacAddress"))
if mibBuilder.loadTexts: agentSwitchVoiceVlanDeviceEntry.setStatus('current')
agentSwitchVoiceVlanInterfaceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 25, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchVoiceVlanInterfaceNum.setStatus('current')
agentSwitchVoiceVlanDeviceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 25, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchVoiceVlanDeviceMacAddress.setStatus('current')
agentSwitchAddressConflictGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26))
agentSwitchAddressConflictDetectionStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchAddressConflictDetectionStatus.setStatus('current')
agentSwitchAddressConflictDetectionStatusReset = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchAddressConflictDetectionStatusReset.setStatus('current')
agentSwitchLastConflictingIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchLastConflictingIPAddr.setStatus('current')
agentSwitchLastConflictingMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchLastConflictingMacAddr.setStatus('current')
agentSwitchLastConflictReportedTime = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchLastConflictReportedTime.setStatus('current')
agentSwitchConflictIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26, 6), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentSwitchConflictIPAddr.setStatus('current')
agentSwitchConflictMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26, 7), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentSwitchConflictMacAddr.setStatus('current')
agentSwitchAddressConflictDetectionRun = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 26, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("run", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchAddressConflictDetectionRun.setStatus('current')
switchingTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50))
multipleUsersTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 1))
if mibBuilder.loadTexts: multipleUsersTrap.setStatus('current')
broadcastStormStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 2))
if mibBuilder.loadTexts: broadcastStormStartTrap.setStatus('obsolete')
broadcastStormEndTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 3))
if mibBuilder.loadTexts: broadcastStormEndTrap.setStatus('obsolete')
linkFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 4))
if mibBuilder.loadTexts: linkFailureTrap.setStatus('obsolete')
vlanRequestFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 5)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanRequestFailureTrap.setStatus('obsolete')
vlanDeleteLastTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 6)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanDeleteLastTrap.setStatus('current')
vlanDefaultCfgFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 7)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanDefaultCfgFailureTrap.setStatus('current')
vlanRestoreFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 8)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanRestoreFailureTrap.setStatus('obsolete')
fanFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 9))
if mibBuilder.loadTexts: fanFailureTrap.setStatus('obsolete')
stpInstanceNewRootTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 10)).setObjects(("SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: stpInstanceNewRootTrap.setStatus('current')
stpInstanceTopologyChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 11)).setObjects(("SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: stpInstanceTopologyChangeTrap.setStatus('current')
powerSupplyStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 12))
if mibBuilder.loadTexts: powerSupplyStatusChangeTrap.setStatus('obsolete')
failedUserLoginTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 13))
if mibBuilder.loadTexts: failedUserLoginTrap.setStatus('current')
temperatureTooHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 14))
if mibBuilder.loadTexts: temperatureTooHighTrap.setStatus('current')
stormControlDetectedTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 15))
if mibBuilder.loadTexts: stormControlDetectedTrap.setStatus('current')
stormControlStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 16))
if mibBuilder.loadTexts: stormControlStopTrap.setStatus('current')
userLockoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 17))
if mibBuilder.loadTexts: userLockoutTrap.setStatus('current')
daiIntfErrorDisabledTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 18)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: daiIntfErrorDisabledTrap.setStatus('current')
stpInstanceLoopInconsistentStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 19)).setObjects(("SWITCHING-MIB", "agentStpMstId"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: stpInstanceLoopInconsistentStartTrap.setStatus('current')
stpInstanceLoopInconsistentEndTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 20)).setObjects(("SWITCHING-MIB", "agentStpMstId"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: stpInstanceLoopInconsistentEndTrap.setStatus('current')
dhcpSnoopingIntfErrorDisabledTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 21)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dhcpSnoopingIntfErrorDisabledTrap.setStatus('current')
noStartupConfigTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 22))
if mibBuilder.loadTexts: noStartupConfigTrap.setStatus('current')
agentSwitchIpAddressConflictTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 23)).setObjects(("SWITCHING-MIB", "agentSwitchConflictIPAddr"), ("SWITCHING-MIB", "agentSwitchConflictMacAddr"))
if mibBuilder.loadTexts: agentSwitchIpAddressConflictTrap.setStatus('current')
agentSwitchCpuRisingThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 24)).setObjects(("SWITCHING-MIB", "agentSwitchCpuProcessRisingThreshold"), ("SWITCHING-MIB", "agentSwitchCpuProcessName"))
if mibBuilder.loadTexts: agentSwitchCpuRisingThresholdTrap.setStatus('current')
agentSwitchCpuFallingThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 25)).setObjects(("SWITCHING-MIB", "agentSwitchCpuProcessFallingThreshold"))
if mibBuilder.loadTexts: agentSwitchCpuFallingThresholdTrap.setStatus('current')
agentSwitchCpuFreeMemBelowThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 26)).setObjects(("SWITCHING-MIB", "agentSwitchCpuProcessFreeMemoryThreshold"))
if mibBuilder.loadTexts: agentSwitchCpuFreeMemBelowThresholdTrap.setStatus('current')
agentSwitchCpuFreeMemAboveThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 27)).setObjects(("SWITCHING-MIB", "agentSwitchCpuProcessFreeMemoryThreshold"))
if mibBuilder.loadTexts: agentSwitchCpuFreeMemAboveThresholdTrap.setStatus('current')
configChangedTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 28))
if mibBuilder.loadTexts: configChangedTrap.setStatus('current')
agentSwitchCpuMemInvalidTrap = NotificationType((1, 3, 6, 1, 4, 1, 7244, 2, 1, 50, 29))
if mibBuilder.loadTexts: agentSwitchCpuMemInvalidTrap.setStatus('current')
agentSdmPreferConfigEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 27))
agentSdmPreferCurrentTemplate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 27, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dualIPv4andIPv6", 1), ("ipv4RoutingDefault", 2), ("ipv4DataCenter", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSdmPreferCurrentTemplate.setStatus('current')
agentSdmPreferNextTemplate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 27, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("dualIPv4andIPv6", 1), ("ipv4RoutingDefault", 2), ("ipv4DataCenter", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSdmPreferNextTemplate.setStatus('current')
agentSdmTemplateSummaryTable = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28))
agentSdmTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1), )
if mibBuilder.loadTexts: agentSdmTemplateTable.setStatus('current')
agentSdmTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentSdmTemplateId"))
if mibBuilder.loadTexts: agentSdmTemplateEntry.setStatus('current')
agentSdmTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dualIPv4andIPv6", 1), ("ipv4RoutingDefault", 2), ("ipv4DataCenter", 3))))
if mibBuilder.loadTexts: agentSdmTemplateId.setStatus('current')
agentArpEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentArpEntries.setStatus('current')
agentIPv4UnicastRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv4UnicastRoutes.setStatus('current')
agentIPv6NdpEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6NdpEntries.setStatus('current')
agentIPv6UnicastRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6UnicastRoutes.setStatus('current')
agentEcmpNextHops = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEcmpNextHops.setStatus('current')
agentIPv4MulticastRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv4MulticastRoutes.setStatus('current')
agentIPv6MulticastRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 8, 28, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6MulticastRoutes.setStatus('current')
agentDhcpClientOptionsConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 21))
agentVendorClassOptionConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 21, 1))
agentDhcpClientVendorClassIdMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 21, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpClientVendorClassIdMode.setStatus('current')
agentDhcpClientVendorClassIdString = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpClientVendorClassIdString.setStatus('current')
agentExecAccountingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29))
agentExecAccountingListCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingListCreate.setStatus('current')
agentExecAccountingListTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 2), )
if mibBuilder.loadTexts: agentExecAccountingListTable.setStatus('current')
agentExecAccountingListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentExecAccountingListIndex"))
if mibBuilder.loadTexts: agentExecAccountingListEntry.setStatus('current')
agentExecAccountingListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentExecAccountingListIndex.setStatus('current')
agentExecAccountingListName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentExecAccountingListName.setStatus('current')
agentExecAccountingMethodType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undefined", 0), ("start-stop", 1), ("stop-only", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingMethodType.setStatus('current')
agentExecAccountingListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingListMethod1.setStatus('current')
agentExecAccountingListMethod2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingListMethod2.setStatus('current')
agentExecAccountingListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 29, 2, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingListStatus.setStatus('current')
agentCmdsAccountingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30))
agentCmdsAccountingListCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAccountingListCreate.setStatus('current')
agentCmdsAccountingListTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30, 2), )
if mibBuilder.loadTexts: agentCmdsAccountingListTable.setStatus('current')
agentCmdsAccountingListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30, 2, 1), ).setIndexNames((0, "SWITCHING-MIB", "agentCmdsAccountingListIndex"))
if mibBuilder.loadTexts: agentCmdsAccountingListEntry.setStatus('current')
agentCmdsAccountingListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentCmdsAccountingListIndex.setStatus('current')
agentCmdsAccountingListName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCmdsAccountingListName.setStatus('current')
agentCmdsAccountingMethodType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undefined", 0), ("start-stop", 1), ("stop-only", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAccountingMethodType.setStatus('current')
agentCmdsAccountingListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAccountingListMethod1.setStatus('current')
agentCmdsAccountingListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 1, 2, 30, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAccountingListStatus.setStatus('current')
mibBuilder.exportSymbols("SWITCHING-MIB", agentDNSConfigClearDNS=agentDNSConfigClearDNS, agentPasswordManagementStrengthMaxConsecutiveCharacters=agentPasswordManagementStrengthMaxConsecutiveCharacters, agentSwitchVlanMacAssociationVlanId=agentSwitchVlanMacAssociationVlanId, agentTransferUploadPassword=agentTransferUploadPassword, stormControlDetectedTrap=stormControlDetectedTrap, agentSerialHWFlowControlMode=agentSerialHWFlowControlMode, agentNetworkBurnedInMacAddress=agentNetworkBurnedInMacAddress, agentDaiStatsReset=agentDaiStatsReset, agentDaiVlanConfigEntry=agentDaiVlanConfigEntry, agentArpAclTable=agentArpAclTable, agentUserIndex=agentUserIndex, agentStpCstPortTable=agentStpCstPortTable, agentDynamicIpsgBindingTable=agentDynamicIpsgBindingTable, agentStaticDsBindingMacAddr=agentStaticDsBindingMacAddr, agentSwitchVoiceVlanDeviceMacAddress=agentSwitchVoiceVlanDeviceMacAddress, agentPortAutoNegAdminStatus=agentPortAutoNegAdminStatus, agentSwitchCpuProcessTotalUtilization=agentSwitchCpuProcessTotalUtilization, agentIpsgIfVerifySource=agentIpsgIfVerifySource, agentNextActiveImage=agentNextActiveImage, agentNetworkDhcp6RELEASEMessagesSent=agentNetworkDhcp6RELEASEMessagesSent, agentAuthenticationListAccessType=agentAuthenticationListAccessType, agentDhcpL2RelayIfConfigEntry=agentDhcpL2RelayIfConfigEntry, agentDaiVlanPktsDropped=agentDaiVlanPktsDropped, agentStaticIpsgBinding=agentStaticIpsgBinding, agentSnmpACLTrapFlag=agentSnmpACLTrapFlag, agentSwitchVoiceVLANGroup=agentSwitchVoiceVLANGroup, agentSwitchSnoopingIntfAdminMode=agentSwitchSnoopingIntfAdminMode, agentSnmpUserUsername=agentSnmpUserUsername, agentProtocolGroupPortIfIndex=agentProtocolGroupPortIfIndex, agentDNSConfigDomainNameListTable=agentDNSConfigDomainNameListTable, agentServicePortSubnetMask=agentServicePortSubnetMask, agentSwitchSnoopingVlanGroupMembershipInterval=agentSwitchSnoopingVlanGroupMembershipInterval, agentPortStatsRateHCBitsPerSecondRx=agentPortStatsRateHCBitsPerSecondRx, agentStpPortHelloTime=agentStpPortHelloTime, agentPortBroadcastControlThresholdUnit=agentPortBroadcastControlThresholdUnit, agentDaiConfigGroup=agentDaiConfigGroup, agentSwitchCpuFallingThresholdTrap=agentSwitchCpuFallingThresholdTrap, agentCmdsAccountingMethodType=agentCmdsAccountingMethodType, agentStpMstPortForwardingState=agentStpMstPortForwardingState, agentSwitchSnoopingQuerierVlanAdminMode=agentSwitchSnoopingQuerierVlanAdminMode, agentStpPortStatsStpBpduRx=agentStpPortStatsStpBpduRx, agentLagSummaryDeletePort=agentLagSummaryDeletePort, agentUdldIntfAggressiveMode=agentUdldIntfAggressiveMode, agentIPv4UnicastRoutes=agentIPv4UnicastRoutes, agentPasswordManagementAging=agentPasswordManagementAging, agentPortStatsRateHCPacketsPerSecondTx=agentPortStatsRateHCPacketsPerSecondTx, agentLoginSessionUserName=agentLoginSessionUserName, agentStpConfigDigestKey=agentStpConfigDigestKey, agentTransferUploadDataType=agentTransferUploadDataType, agentStpCstMaxAge=agentStpCstMaxAge, agentStpCstPortId=agentStpCstPortId, agentSnmpCommunityConfigEntry=agentSnmpCommunityConfigEntry, agentSnmpInformAdminMode=agentSnmpInformAdminMode, agentPasswordMgmtStrengthExcludeKeyword=agentPasswordMgmtStrengthExcludeKeyword, agentNetworkConfigIpDhcpRenew=agentNetworkConfigIpDhcpRenew, agentUserConfigCreate=agentUserConfigCreate, agentStpMstPortTransitionsIntoLoopInconsistentState=agentStpMstPortTransitionsIntoLoopInconsistentState, agentServicePortProtocolDhcpRenew=agentServicePortProtocolDhcpRenew, agentProtocolConfigGroup=agentProtocolConfigGroup, agentSwitchSnoopingPortMask=agentSwitchSnoopingPortMask, agentDaiVlanDhcpPermits=agentDaiVlanDhcpPermits, agentSnmpInformTimeout=agentSnmpInformTimeout, agentDaiVlanAclDrops=agentDaiVlanAclDrops, agentAutoinstallUnicastRetryCount=agentAutoinstallUnicastRetryCount, agentUserAuthenticationDot1xList=agentUserAuthenticationDot1xList, agentDhcpSnoopingIfTrustEnable=agentDhcpSnoopingIfTrustEnable, agentSwitchVlanSubnetAssociationIPAddress=agentSwitchVlanSubnetAssociationIPAddress, agentStpCstExtPortPathCost=agentStpCstExtPortPathCost, agentUserPassword=agentUserPassword, agentNetworkDhcp6StatsReset=agentNetworkDhcp6StatsReset, agentDNSConfigResponse=agentDNSConfigResponse, agentDNSConfigDefaultDomainNameRemove=agentDNSConfigDefaultDomainNameRemove, agentSwitchStaticMacFilteringVlanId=agentSwitchStaticMacFilteringVlanId, agentTransferUploadStatus=agentTransferUploadStatus, agentSwitchSnoopingQuerierCfgEntry=agentSwitchSnoopingQuerierCfgEntry, agentPortMirrorDestinationPort=agentPortMirrorDestinationPort, agentInventorySysDescription=agentInventorySysDescription, agentPortMirrorTypeType=agentPortMirrorTypeType, agentServicePortDefaultGateway=agentServicePortDefaultGateway, agentNetworkJavaMode=agentNetworkJavaMode, agentStpPortTable=agentStpPortTable, agentDNSConfigHostEntry=agentDNSConfigHostEntry, agentSwitchCpuMemInvalidTrap=agentSwitchCpuMemInvalidTrap, agentPasswordMgmtLastPasswordSetResult=agentPasswordMgmtLastPasswordSetResult, agentSwitchPortDVlanTagTable=agentSwitchPortDVlanTagTable, agentPortMaxFrameSizeLimit=agentPortMaxFrameSizeLimit, agentDDnsPassword=agentDDnsPassword, agentProtocolGroupProtocolARP=agentProtocolGroupProtocolARP, agentSwitchSnoopingProtocol=agentSwitchSnoopingProtocol, agentCpuLoadFiveMin=agentCpuLoadFiveMin, agentStpCstBridgeHoldTime=agentStpCstBridgeHoldTime, agentTransferDownloadPassword=agentTransferDownloadPassword, agentDhcpClientOptionsConfigGroup=agentDhcpClientOptionsConfigGroup, agentUserLockoutStatus=agentUserLockoutStatus, agentPortMaxFrameSize=agentPortMaxFrameSize, agentNetworkDhcp6REBINDMessagesSent=agentNetworkDhcp6REBINDMessagesSent, agentArpAclRowStatus=agentArpAclRowStatus, agentServicePortIpv6AddrStatus=agentServicePortIpv6AddrStatus, agentInventorySerialNumber=agentInventorySerialNumber, agentStpPortMigrationCheck=agentStpPortMigrationCheck, agentInventoryBurnedInMacAddress=agentInventoryBurnedInMacAddress, agentLoginSessionConnectionType=agentLoginSessionConnectionType, agentNetworkDhcp6REQUESTMessagesSent=agentNetworkDhcp6REQUESTMessagesSent, agentDot3adAggPortTable=agentDot3adAggPortTable, agentClearVlan=agentClearVlan, agentSwitchCpuProcessRisingThresholdInterval=agentSwitchCpuProcessRisingThresholdInterval, agentInventoryNetworkProcessingDevice=agentInventoryNetworkProcessingDevice, agentIPv6DNSConfigHostTable=agentIPv6DNSConfigHostTable, agentSnmpTrapReceiverSecurityLevel=agentSnmpTrapReceiverSecurityLevel, agentTransferDownloadUsername=agentTransferDownloadUsername, agentIASUserConfigTable=agentIASUserConfigTable, agentDNSConfigHostTable=agentDNSConfigHostTable, agentDhcpL2RelayCircuitIdVlanEnable=agentDhcpL2RelayCircuitIdVlanEnable, agentDaiIPValidate=agentDaiIPValidate, agentAuthenticationListTable=agentAuthenticationListTable, agentSwitchSnoopingQuerierVlanTable=agentSwitchSnoopingQuerierVlanTable, agentPasswordManagementStrengthExcludeKeywordTable=agentPasswordManagementStrengthExcludeKeywordTable, agentProtocolGroupProtocolID=agentProtocolGroupProtocolID, agentSnmpCommunityIPAddress=agentSnmpCommunityIPAddress, agentSwitchSnoopingQuerierAdminMode=agentSwitchSnoopingQuerierAdminMode, agentServicePortDhcp6ClientDuid=agentServicePortDhcp6ClientDuid, agentIpsgIfConfigEntry=agentIpsgIfConfigEntry, agentDNSConfigClearDomainNameList=agentDNSConfigClearDomainNameList, agentSwitchVlanSubnetAssociationEntry=agentSwitchVlanSubnetAssociationEntry, agentDaiVlanStatsTable=agentDaiVlanStatsTable, agentLagSummaryAddPort=agentLagSummaryAddPort, agentUserName=agentUserName, agentPortMirrorTypeSourcePort=agentPortMirrorTypeSourcePort, agentSwitchAddressConflictDetectionRun=agentSwitchAddressConflictDetectionRun, agentSnmpTrapReceiverVersion=agentSnmpTrapReceiverVersion, agentSwitchCpuProcessIndex=agentSwitchCpuProcessIndex, agentExecAccountingListMethod1=agentExecAccountingListMethod1, agentSdmPreferCurrentTemplate=agentSdmPreferCurrentTemplate, agentExecAccountingListTable=agentExecAccountingListTable, agentDhcpSnoopingIfRateLimit=agentDhcpSnoopingIfRateLimit, agentStpCstRegionalRootId=agentStpCstRegionalRootId, agentUserPortConfigTable=agentUserPortConfigTable, agentLoginSessionInetAddressType=agentLoginSessionInetAddressType, agentSnmpInformIpAddress=agentSnmpInformIpAddress, agentDNSConfigFlag=agentDNSConfigFlag, agentNetworkConfigProtocol=agentNetworkConfigProtocol, agentSwitchIfDVlanTagMode=agentSwitchIfDVlanTagMode, agentInfoGroup=agentInfoGroup, agentPortDefaultType=agentPortDefaultType, agentStpSwitchConfigGroup=agentStpSwitchConfigGroup, agentSupportedMibIndex=agentSupportedMibIndex, agentStpBpduGuardMode=agentStpBpduGuardMode, agentDDnsServName=agentDDnsServName, agentPortUnicastControlThresholdUnit=agentPortUnicastControlThresholdUnit, agentAutoinstallStatus=agentAutoinstallStatus, agentProtocolGroupCreate=agentProtocolGroupCreate, agentActiveImage=agentActiveImage, agentSwitchSnoopingAdminMode=agentSwitchSnoopingAdminMode, agentUdldMessageTime=agentUdldMessageTime, agentNetworkIpv6AddrEntry=agentNetworkIpv6AddrEntry, agentPortMulticastControlThresholdUnit=agentPortMulticastControlThresholdUnit, agentClearLoginSessions=agentClearLoginSessions, agentPortMirrorTypeEntry=agentPortMirrorTypeEntry, agentSwitchSnoopingQuerierAddress=agentSwitchSnoopingQuerierAddress, agentConfigCurrentSystemTime=agentConfigCurrentSystemTime, agentSwitchIfDVlanTagIfIndex=agentSwitchIfDVlanTagIfIndex, agentClearConfig=agentClearConfig, agentTransferConfigGroup=agentTransferConfigGroup, agentTransferUploadMode=agentTransferUploadMode, agentStaticDsBindingTable=agentStaticDsBindingTable, agentIASUserName=agentIASUserName, agentDhcpL2RelayVlanEnable=agentDhcpL2RelayVlanEnable, linkFailureTrap=linkFailureTrap, agentDhcpL2RelayIfConfigTable=agentDhcpL2RelayIfConfigTable, agentSwitchLastConflictingMacAddr=agentSwitchLastConflictingMacAddr, agentLagSummaryType=agentLagSummaryType, agentSwitchCpuRisingThresholdTrap=agentSwitchCpuRisingThresholdTrap, agentDNSConfigClearHosts=agentDNSConfigClearHosts, agentSwitchAddressConflictGroup=agentSwitchAddressConflictGroup, agentSwitchSnoopingVlanAdminMode=agentSwitchSnoopingVlanAdminMode, agentPortVoiceVlanOperationalStatus=agentPortVoiceVlanOperationalStatus, agentNetworkIpv6Gateway=agentNetworkIpv6Gateway, agentSwitchSnoopingQuerierCfgTable=agentSwitchSnoopingQuerierCfgTable, agentStpCstDesignatedBridgeId=agentStpCstDesignatedBridgeId, agentSwitchConflictIPAddr=agentSwitchConflictIPAddr, agentServicePortDhcp6REQUESTMessagesSent=agentServicePortDhcp6REQUESTMessagesSent, agentTelnetLoginTimeout=agentTelnetLoginTimeout, agentStpMstBridgePriority=agentStpMstBridgePriority, agentAuthenticationListMethod5=agentAuthenticationListMethod5, agentSnmpInformConfigEntry=agentSnmpInformConfigEntry, agentIPv6DNSConfigCacheEntry=agentIPv6DNSConfigCacheEntry, agentStpCstBridgeHoldCount=agentStpCstBridgeHoldCount, agentStpMstTable=agentStpMstTable, agentAuthenticationListMethod2=agentAuthenticationListMethod2, agentStpPortStatsStpBpduTx=agentStpPortStatsStpBpduTx, agentSwitchVoiceVlanDeviceTable=agentSwitchVoiceVlanDeviceTable, agentStpCstPortBpduFlood=agentStpCstPortBpduFlood, agentSwitchPortDVlanTagCustomerId=agentSwitchPortDVlanTagCustomerId, agentStpCstRegionalRootPathCost=agentStpCstRegionalRootPathCost, agentNetworkIpv6AddrEuiFlag=agentNetworkIpv6AddrEuiFlag, agentSnmpLinkUpDownTrapFlag=agentSnmpLinkUpDownTrapFlag, agentDDnsConfigTable=agentDDnsConfigTable, userLockoutTrap=userLockoutTrap, multipleUsersTrap=multipleUsersTrap, agentStaticDsBinding=agentStaticDsBinding, agentCmdsAccountingListTable=agentCmdsAccountingListTable, agentDNSConfigNameServerListTable=agentDNSConfigNameServerListTable, agentLagDetailedPortSpeed=agentLagDetailedPortSpeed, agentTrapLogTrap=agentTrapLogTrap, agentPortMirrorSourcePortMask=agentPortMirrorSourcePortMask, agentUserAccessMode=agentUserAccessMode, agentDNSConfigClearCache=agentDNSConfigClearCache, agentUserConfigDefaultAuthenticationDot1xList=agentUserConfigDefaultAuthenticationDot1xList, agentCpuLoad=agentCpuLoad, agentSwitchMFDBSummaryTable=agentSwitchMFDBSummaryTable, agentStpCstPortTCNGuard=agentStpCstPortTCNGuard, agentStaticIpsgBindingRowStatus=agentStaticIpsgBindingRowStatus, agentDhcpL2RelayStatsEntry=agentDhcpL2RelayStatsEntry, agentNetworkDefaultGateway=agentNetworkDefaultGateway, agentLoginSessionEntry=agentLoginSessionEntry, agentServicePortDhcp6REPLYMessagesDiscarded=agentServicePortDhcp6REPLYMessagesDiscarded, agentStpMstDesignatedPortId=agentStpMstDesignatedPortId, agentSwitchPortDVlanTagTPid=agentSwitchPortDVlanTagTPid, vlanRestoreFailureTrap=vlanRestoreFailureTrap, agentSnmpUserIndex=agentSnmpUserIndex, agentPortDot1dBasePort=agentPortDot1dBasePort, agentLagSummaryAdminMode=agentLagSummaryAdminMode, agentDhcpSnoopingVlanIndex=agentDhcpSnoopingVlanIndex, agentAutoInstallConfigGroup=agentAutoInstallConfigGroup, agentSwitchVlanSubnetAssociationSubnetMask=agentSwitchVlanSubnetAssociationSubnetMask, agentStpCstBridgeMaxAge=agentStpCstBridgeMaxAge, agentTransferDownloadStatus=agentTransferDownloadStatus, agentStpCstBridgePriority=agentStpCstBridgePriority, agentResetSystem=agentResetSystem, agentSnmpInformSecurityLevel=agentSnmpInformSecurityLevel, agentDaiIfTrustEnable=agentDaiIfTrustEnable, agentExecAccountingListMethod2=agentExecAccountingListMethod2, agentTransferUploadStart=agentTransferUploadStart, agentIPv6DNSConfigNameServer=agentIPv6DNSConfigNameServer, agentPortType=agentPortType, agentServicePortBurnedInMacAddress=agentServicePortBurnedInMacAddress, agentSwitchPortDVlanTagMode=agentSwitchPortDVlanTagMode, agentDNSConfigDefaultDomainName=agentDNSConfigDefaultDomainName, agentDynamicDsBindingTable=agentDynamicDsBindingTable, agentSwitchCpuProcessMemFree=agentSwitchCpuProcessMemFree, agentInventoryPartNumber=agentInventoryPartNumber, agentDNSConfigSourceInterface=agentDNSConfigSourceInterface, agentArpAclRuleTable=agentArpAclRuleTable, agentTransferUploadUsername=agentTransferUploadUsername, agentDNSConfigCacheTable=agentDNSConfigCacheTable, agentSwitchPortDVlanTagEntry=agentSwitchPortDVlanTagEntry, agentLagSummaryLinkTrap=agentLagSummaryLinkTrap, agentPasswordManagementStrengthMinUpperCase=agentPasswordManagementStrengthMinUpperCase, VlanList=VlanList, agentSnmpCommunityIPMask=agentSnmpCommunityIPMask, agentNetworkMgmtVlan=agentNetworkMgmtVlan, agentSdmPreferConfigEntry=agentSdmPreferConfigEntry, agentDNSConfigTTL=agentDNSConfigTTL, agentDaiIfRateLimit=agentDaiIfRateLimit)
mibBuilder.exportSymbols("SWITCHING-MIB", agentSnmpTrapReceiverStatus=agentSnmpTrapReceiverStatus, agentSwitchMFDBType=agentSwitchMFDBType, agentSwitchDVlanTagEntry=agentSwitchDVlanTagEntry, agentUdldIntfAdminMode=agentUdldIntfAdminMode, agentExecAccountingListCreate=agentExecAccountingListCreate, agentClearSwitchStats=agentClearSwitchStats, agentIASUserConfigGroup=agentIASUserConfigGroup, agentStpCstPortPriority=agentStpCstPortPriority, agentIPv6DNSConfigDomainName=agentIPv6DNSConfigDomainName, agentAuthenticationListAccessLevel=agentAuthenticationListAccessLevel, agentCLIConfigGroup=agentCLIConfigGroup, agentDNSConfigDomainName=agentDNSConfigDomainName, stpInstanceLoopInconsistentEndTrap=stpInstanceLoopInconsistentEndTrap, agentSupportedMibName=agentSupportedMibName, agentSwitchVlanStaticMrouterTable=agentSwitchVlanStaticMrouterTable, agentDynamicDsBindingMacAddr=agentDynamicDsBindingMacAddr, agentPasswordManagementStrengthMinSpecialCharacters=agentPasswordManagementStrengthMinSpecialCharacters, agentSwitchDVlanTagPrimaryTPid=agentSwitchDVlanTagPrimaryTPid, agentInventoryMaintenanceLevel=agentInventoryMaintenanceLevel, agentDynamicIpsgBindingIfIndex=agentDynamicIpsgBindingIfIndex, agentDhcpSnoopingIfLogEnable=agentDhcpSnoopingIfLogEnable, agentUserConfigEntry=agentUserConfigEntry, agentStpMstTopologyChangeCount=agentStpMstTopologyChangeCount, agentSwitchLastConflictingIPAddr=agentSwitchLastConflictingIPAddr, agentSdmTemplateTable=agentSdmTemplateTable, agentStpMstDesignatedRootId=agentStpMstDesignatedRootId, agentServicePortIpv6AdminMode=agentServicePortIpv6AdminMode, agentSwitchProtectedPortEntry=agentSwitchProtectedPortEntry, agentSwitchMFDBGroup=agentSwitchMFDBGroup, agentDynamicIpsgBinding=agentDynamicIpsgBinding, agentSwitchSnoopingQuerierOperVersion=agentSwitchSnoopingQuerierOperVersion, agentDNSConfigNameServerListIndex=agentDNSConfigNameServerListIndex, agentPasswordManagementStrengthMinCharacterClasses=agentPasswordManagementStrengthMinCharacterClasses, agentDhcpSnoopingAdminMode=agentDhcpSnoopingAdminMode, agentStaticIpsgBindingIfIndex=agentStaticIpsgBindingIfIndex, agentNetworkIpv6AdminMode=agentNetworkIpv6AdminMode, agentSnmpUserAuthentication=agentSnmpUserAuthentication, agentAuthenticationListMethod4=agentAuthenticationListMethod4, agentDNSConfigDomainNameListEntry=agentDNSConfigDomainNameListEntry, agentDhcpL2RelayVlanIndex=agentDhcpL2RelayVlanIndex, agentSwitchSnoopingQuerierLastQuerierAddress=agentSwitchSnoopingQuerierLastQuerierAddress, agentPasswordManagementStrengthExcludeKeywordEntry=agentPasswordManagementStrengthExcludeKeywordEntry, agentDhcpL2RelayTrustedClntMsgsWithoutOptn82=agentDhcpL2RelayTrustedClntMsgsWithoutOptn82, agentSnmpInformConfigGroup=agentSnmpInformConfigGroup, agentDaiSrcMacValidate=agentDaiSrcMacValidate, agentLagSummaryFlushTimer=agentLagSummaryFlushTimer, agentLagConfigGroup=agentLagConfigGroup, agentImage1=agentImage1, agentSwitchSnoopingQuerierExpiryInterval=agentSwitchSnoopingQuerierExpiryInterval, agentStpCstPortBpduFilter=agentStpCstPortBpduFilter, agentDaiIfBurstInterval=agentDaiIfBurstInterval, agentNetworkWebMode=agentNetworkWebMode, agentDaiVlanStatsEntry=agentDaiVlanStatsEntry, agentUserAuthenticationType=agentUserAuthenticationType, agentIPv6DNSConfigResponse=agentIPv6DNSConfigResponse, agentLoginSessionStatus=agentLoginSessionStatus, agentPasswordManagementMinLength=agentPasswordManagementMinLength, agentSwitchSnoopingVlanEntry=agentSwitchSnoopingVlanEntry, agentSwitchVlanMacAssociationPriority=agentSwitchVlanMacAssociationPriority, agentArpAclName=agentArpAclName, agentNetworkDhcp6SOLICITMessagesSent=agentNetworkDhcp6SOLICITMessagesSent, agentTelnetAllowNewMode=agentTelnetAllowNewMode, agentProtocolGroupEntry=agentProtocolGroupEntry, agentDhcpL2RelayStatsTable=agentDhcpL2RelayStatsTable, agentSwitchSnoopingQuerierGroup=agentSwitchSnoopingQuerierGroup, agentStpCstRootFwdDelay=agentStpCstRootFwdDelay, agentStpPortEntry=agentStpPortEntry, agentSnmpMultipleUsersTrapFlag=agentSnmpMultipleUsersTrapFlag, agentProtocolGroupId=agentProtocolGroupId, agentClassOfServicePortTable=agentClassOfServicePortTable, agentTransferUploadStartupConfigFromSwitchSrcFilename=agentTransferUploadStartupConfigFromSwitchSrcFilename, broadcastStormEndTrap=broadcastStormEndTrap, agentSwitchMFDBSummaryVlanId=agentSwitchMFDBSummaryVlanId, agentNetworkLocalAdminMacAddress=agentNetworkLocalAdminMacAddress, agentPortLoadStatsInterval=agentPortLoadStatsInterval, agentDaiVlanAclPermits=agentDaiVlanAclPermits, agentCmdsAccountingListStatus=agentCmdsAccountingListStatus, agentAutoinstallPersistentMode=agentAutoinstallPersistentMode, agentDhcpSnoopingVlanEnable=agentDhcpSnoopingVlanEnable, agentLDAPConfigGroup=agentLDAPConfigGroup, agentDhcpClientVendorClassIdMode=agentDhcpClientVendorClassIdMode, agentLoginSessionIndex=agentLoginSessionIndex, agentLagSummaryLagIndex=agentLagSummaryLagIndex, agentUserEncryptionType=agentUserEncryptionType, agentPortSTPState=agentPortSTPState, agentIPv6DNSConfigCacheTable=agentIPv6DNSConfigCacheTable, agentPortVoiceVlanID=agentPortVoiceVlanID, agentTrapLogEntry=agentTrapLogEntry, agentSwitchIfDVlanTagEntry=agentSwitchIfDVlanTagEntry, agentServicePortIpv6AddrEuiFlag=agentServicePortIpv6AddrEuiFlag, agentDot3adAggPort=agentDot3adAggPort, agentSwitchConfigGroup=agentSwitchConfigGroup, agentLagDetailedIfIndex=agentLagDetailedIfIndex, agentNetworkDhcp6RENEWMessagesSent=agentNetworkDhcp6RENEWMessagesSent, agentUserPortSecurity=agentUserPortSecurity, agentIPv6DNSConfigNameServerListEntry=agentIPv6DNSConfigNameServerListEntry, agentDaiVlanConfigTable=agentDaiVlanConfigTable, agentDhcpSnoopingIfConfigEntry=agentDhcpSnoopingIfConfigEntry, agentDhcpSnoopingMacVerifyFailures=agentDhcpSnoopingMacVerifyFailures, agentStaticDsBindingIpAddr=agentStaticDsBindingIpAddr, agentTransferUploadGroup=agentTransferUploadGroup, agentSwitchCpuProcessFallingThresholdInterval=agentSwitchCpuProcessFallingThresholdInterval, agentSwitchDVlanTagTable=agentSwitchDVlanTagTable, agentStpCstBridgeMaxHops=agentStpCstBridgeMaxHops, agentInventoryHardwareVersion=agentInventoryHardwareVersion, agentExecAccountingListStatus=agentExecAccountingListStatus, agentTrapLogTotal=agentTrapLogTotal, agentHTTPConfigGroup=agentHTTPConfigGroup, agentSwitchMFDBDescription=agentSwitchMFDBDescription, switchingTraps=switchingTraps, agentSwitchAddressConflictDetectionStatus=agentSwitchAddressConflictDetectionStatus, agentLagSummaryHash=agentLagSummaryHash, agentTransferDownloadMode=agentTransferDownloadMode, agentSwitchMFDBFilteringPortMask=agentSwitchMFDBFilteringPortMask, agentSerialGroup=agentSerialGroup, agentServicePortDhcp6REBINDMessagesSent=agentServicePortDhcp6REBINDMessagesSent, agentLagSummaryName=agentLagSummaryName, agentUserConfigDefaultAuthenticationList=agentUserConfigDefaultAuthenticationList, agentUserAuthenticationList=agentUserAuthenticationList, agentAutoinstallAutoRebootMode=agentAutoinstallAutoRebootMode, agentPortConfigEntry=agentPortConfigEntry, agentPortStatsRateGroup=agentPortStatsRateGroup, agentNetworkDhcp6ClientDuid=agentNetworkDhcp6ClientDuid, agentPortMirrorSessionNum=agentPortMirrorSessionNum, agentIASUserIndex=agentIASUserIndex, agentProtocolGroupPortStatus=agentProtocolGroupPortStatus, agentSwitchSnoopingIntfGroupMembershipInterval=agentSwitchSnoopingIntfGroupMembershipInterval, agentSwitchCpuProcessFallingThreshold=agentSwitchCpuProcessFallingThreshold, agentSnmpInformVersion=agentSnmpInformVersion, agentAuthenticationListCreate=agentAuthenticationListCreate, agentDot3adAggPortEntry=agentDot3adAggPortEntry, agentAuthenticationEnableListCreate=agentAuthenticationEnableListCreate, agentPortMirrorEntry=agentPortMirrorEntry, agentPortAdminMode=agentPortAdminMode, agentSwitchProtectedPortTable=agentSwitchProtectedPortTable, agentStpMstEntry=agentStpMstEntry, agentStpConfigFormatSelector=agentStpConfigFormatSelector, agentUserPrivilegeLevel=agentUserPrivilegeLevel, agentSnmpTrapReceiverCommunityName=agentSnmpTrapReceiverCommunityName, agentTrapLogIndex=agentTrapLogIndex, agentStpPortBPDUGuard=agentStpPortBPDUGuard, agentSwitchVlanSubnetAssociationRowStatus=agentSwitchVlanSubnetAssociationRowStatus, agentDNSConfigDomainNameListIndex=agentDNSConfigDomainNameListIndex, agentDhcpL2RelayVlanConfigEntry=agentDhcpL2RelayVlanConfigEntry, agentTrapLogSystemTime=agentTrapLogSystemTime, agentTransferDownloadOPCodeToSwitchDestFilename=agentTransferDownloadOPCodeToSwitchDestFilename, agentIPv6DNSConfigHostNameRemove=agentIPv6DNSConfigHostNameRemove, agentStaticDsBindingVlanId=agentStaticDsBindingVlanId, agentCmdsAccountingListEntry=agentCmdsAccountingListEntry, agentStpPortUpTime=agentStpPortUpTime, agentInventoryFRUNumber=agentInventoryFRUNumber, agentDNSDomainNameRemove=agentDNSDomainNameRemove, agentAutoinstallAutosaveMode=agentAutoinstallAutosaveMode, agentSnmpInformStatus=agentSnmpInformStatus, agentLDAPServerIP=agentLDAPServerIP, agentIPv4MulticastRoutes=agentIPv4MulticastRoutes, agentSnmpTrapReceiverPort=agentSnmpTrapReceiverPort, agentStpMstDesignatedBridgeId=agentStpMstDesignatedBridgeId, agentDNSConfigDomainLookupStatus=agentDNSConfigDomainLookupStatus, agentDNSConfigCacheEntry=agentDNSConfigCacheEntry, agentSwitchCpuProcessRisingThreshold=agentSwitchCpuProcessRisingThreshold, agentStpCstBridgeHelloTime=agentStpCstBridgeHelloTime, agentArpAclRuleRowStatus=agentArpAclRuleRowStatus, agentServicePortDhcp6ADVERTISEMessagesDiscarded=agentServicePortDhcp6ADVERTISEMessagesDiscarded, agentNetworkStatsGroup=agentNetworkStatsGroup, agentLagDetailedConfigTable=agentLagDetailedConfigTable, agentIPv6DNSConfigNameServerListTable=agentIPv6DNSConfigNameServerListTable, agentStpCstPortAutoEdge=agentStpCstPortAutoEdge, agentSpanningTreeMode=agentSpanningTreeMode, agentDaiDstMacValidate=agentDaiDstMacValidate, agentSwitchLastConflictReportedTime=agentSwitchLastConflictReportedTime, agentAuthenticationListEntry=agentAuthenticationListEntry, agentDNSConfigHostIndex=agentDNSConfigHostIndex, agentSnmpEngineIdString=agentSnmpEngineIdString, agentLagSummaryConfigEntry=agentLagSummaryConfigEntry, agentDhcpL2RelayAdminMode=agentDhcpL2RelayAdminMode, agentDynamicIpsgBindingVlanId=agentDynamicIpsgBindingVlanId, agentAuthenticationListMethod3=agentAuthenticationListMethod3, agentPasswordManagementLockAttempts=agentPasswordManagementLockAttempts, agentSnmpInformName=agentSnmpInformName, agentSwitchVlanMacAssociationRowStatus=agentSwitchVlanMacAssociationRowStatus, agentIASUserPassword=agentIASUserPassword, agentExecAccountingListEntry=agentExecAccountingListEntry, agentSwitchSnoopingCfgTable=agentSwitchSnoopingCfgTable, agentDhcpSnoopingRemoteFileName=agentDhcpSnoopingRemoteFileName, agentDaiVlanArpAclName=agentDaiVlanArpAclName, agentPortSTPMode=agentPortSTPMode, agentIPv6DNSConfigCacheIndex=agentIPv6DNSConfigCacheIndex, agentSwitchCpuProcessMemAvailable=agentSwitchCpuProcessMemAvailable, agentStaticDsBindingIfIndex=agentStaticDsBindingIfIndex, agentClearTrapLog=agentClearTrapLog, agentProtocolGroupStatus=agentProtocolGroupStatus, agentSwitchDVlanTagGroup=agentSwitchDVlanTagGroup, agentDaiVlanPktsForwarded=agentDaiVlanPktsForwarded, agentLagConfigGroupHashOption=agentLagConfigGroupHashOption, agentCmdsAccountingGroup=agentCmdsAccountingGroup, agentPortStatsRateHCBitsPerSecondTx=agentPortStatsRateHCBitsPerSecondTx, agentClassOfServiceGroup=agentClassOfServiceGroup, agentDhcpSnoopingInvalidServerMessages=agentDhcpSnoopingInvalidServerMessages, agentDaiIfConfigEntry=agentDaiIfConfigEntry, agentStpMstRowStatus=agentStpMstRowStatus, agentPortIanaType=agentPortIanaType, agentDynamicDsBindingIfIndex=agentDynamicDsBindingIfIndex, agentPortDot3FlowControlOperStatus=agentPortDot3FlowControlOperStatus, agentStaticIpsgBindingTable=agentStaticIpsgBindingTable, agentDNSDomainName=agentDNSDomainName, agentSwitchSnoopingQuerierVlanAddress=agentSwitchSnoopingQuerierVlanAddress, agentIASUserConfigEntry=agentIASUserConfigEntry, agentTransferDownloadStart=agentTransferDownloadStart, agentSwitchSnoopingIntfTable=agentSwitchSnoopingIntfTable, agentSnmpTransceiverTrapFlag=agentSnmpTransceiverTrapFlag, agentHTTPMaxSessions=agentHTTPMaxSessions, agentImageConfigGroup=agentImageConfigGroup, agentCpuLoadOneMin=agentCpuLoadOneMin, agentCmdsAccountingListMethod1=agentCmdsAccountingListMethod1, agentSnmpCommunityIndex=agentSnmpCommunityIndex, agentSnmpAuthenticationTrapFlag=agentSnmpAuthenticationTrapFlag, agentTelnetConfigGroup=agentTelnetConfigGroup, agentDDnsHost=agentDDnsHost, agentNetworkIPAddress=agentNetworkIPAddress, agentDhcpSnoopingRemoteIpAddr=agentDhcpSnoopingRemoteIpAddr, agentNetworkConfigIpv6DhcpRenew=agentNetworkConfigIpv6DhcpRenew, agentDynamicDsBindingVlanId=agentDynamicDsBindingVlanId, agentDNSConfigIpAddress=agentDNSConfigIpAddress, agentSnmpUserStatus=agentSnmpUserStatus, agentSdmTemplateEntry=agentSdmTemplateEntry, agentDhcpL2RelayConfigGroup=agentDhcpL2RelayConfigGroup, agentSwitchMFDBSummaryEntry=agentSwitchMFDBSummaryEntry, agentInventoryMachineModel=agentInventoryMachineModel, agentDhcpSnoopingStatsTable=agentDhcpSnoopingStatsTable, agentSwitchMFDBForwardingPortMask=agentSwitchMFDBForwardingPortMask, agentTransferDownloadFilename=agentTransferDownloadFilename, agentPasswordManagementStrengthMaxRepeatedCharacters=agentPasswordManagementStrengthMaxRepeatedCharacters, agentTransferDownloadGroup=agentTransferDownloadGroup, agentSnmpUserEncryptionPassword=agentSnmpUserEncryptionPassword, agentIPv6UnicastRoutes=agentIPv6UnicastRoutes, agentStpCstPortLoopGuard=agentStpCstPortLoopGuard, agentSwitchSnoopingVlanTable=agentSwitchSnoopingVlanTable, agentStpAdminMode=agentStpAdminMode, agentClassOfServicePortEntry=agentClassOfServicePortEntry, agentCmdsAccountingListCreate=agentCmdsAccountingListCreate, agentStpBpduFilterDefault=agentStpBpduFilterDefault, agentDhcpSnoopingStoreInterval=agentDhcpSnoopingStoreInterval, agentSwitchStaticMacFilteringSourcePortMask=agentSwitchStaticMacFilteringSourcePortMask, agentNetworkDhcp6REPLYMessagesDiscarded=agentNetworkDhcp6REPLYMessagesDiscarded, agentServicePortDhcp6SOLICITMessagesSent=agentServicePortDhcp6SOLICITMessagesSent, agentDDnsConfigEntry=agentDDnsConfigEntry, agentStpMstBridgeIdentifier=agentStpMstBridgeIdentifier, agentSwitchProtectedPortConfigGroup=agentSwitchProtectedPortConfigGroup, agentSnmpEngineIdIpAddress=agentSnmpEngineIdIpAddress, agentSdmTemplateSummaryTable=agentSdmTemplateSummaryTable, agentSnmpEngineIdStatus=agentSnmpEngineIdStatus, agentSupportedMibTable=agentSupportedMibTable, agentServicePortDhcp6ADVERTISEMessagesReceived=agentServicePortDhcp6ADVERTISEMessagesReceived)
mibBuilder.exportSymbols("SWITCHING-MIB", agentSwitchSnoopingGroup=agentSwitchSnoopingGroup, agentStpCstPortTopologyChangeAck=agentStpCstPortTopologyChangeAck, agentAutoinstallOperationalMode=agentAutoinstallOperationalMode, agentSwitchDVlanTagTPid=agentSwitchDVlanTagTPid, agentServicePortIpv6ConfigProtocol=agentServicePortIpv6ConfigProtocol, agentPasswordManagementStrengthMinLowerCase=agentPasswordManagementStrengthMinLowerCase, agentStpCstPortForwardingState=agentStpCstPortForwardingState, agentPasswordManagementHistory=agentPasswordManagementHistory, agentStpMstPortId=agentStpMstPortId, agentSwitchStaticMacFilteringDestPortMask=agentSwitchStaticMacFilteringDestPortMask, agentStpMstTimeSinceTopologyChange=agentStpMstTimeSinceTopologyChange, agentClearPortStats=agentClearPortStats, agentDNSConfigHostIpAddress=agentDNSConfigHostIpAddress, agentCmdsAccountingListIndex=agentCmdsAccountingListIndex, agentDDnsIndex=agentDDnsIndex, agentDhcpL2RelayStatsReset=agentDhcpL2RelayStatsReset, agentLagSummaryConfigTable=agentLagSummaryConfigTable, agentIASUserConfigCreate=agentIASUserConfigCreate, agentSwitchSnoopingIntfFastLeaveAdminMode=agentSwitchSnoopingIntfFastLeaveAdminMode, agentPortMirroringGroup=agentPortMirroringGroup, agentStpMstVlanRowStatus=agentStpMstVlanRowStatus, agentStpCstPortEntry=agentStpCstPortEntry, agentClearLags=agentClearLags, agentDNSConfigCacheIndex=agentDNSConfigCacheIndex, agentSwitchVlanSubnetAssociationVlanId=agentSwitchVlanSubnetAssociationVlanId, agentSwitchVlanMacAssociationEntry=agentSwitchVlanMacAssociationEntry, agentIPv6DNSConfigHostEntry=agentIPv6DNSConfigHostEntry, agentLDAPBaseDn=agentLDAPBaseDn, agentSwitchCpuProcessPercentageUtilization=agentSwitchCpuProcessPercentageUtilization, agentSnmpTrapReceiverIPAddress=agentSnmpTrapReceiverIPAddress, agentSnmpInformConfigTableCreate=agentSnmpInformConfigTableCreate, agentAuthenticationListMethod1=agentAuthenticationListMethod1, agentDaiVlanDynArpInspEnable=agentDaiVlanDynArpInspEnable, agentIPv6DNSConfigNameServerRemove=agentIPv6DNSConfigNameServerRemove, agentIPv6NdpEntries=agentIPv6NdpEntries, agentHTTPHardTimeout=agentHTTPHardTimeout, agentTransferUploadPath=agentTransferUploadPath, agentIpsgIfPortSecurity=agentIpsgIfPortSecurity, agentDhcpL2RelayUntrustedClntMsgsWithOptn82=agentDhcpL2RelayUntrustedClntMsgsWithOptn82, agentStpUplinkFast=agentStpUplinkFast, agentInventoryGroup=agentInventoryGroup, agentPortVoiceVlanNoneMode=agentPortVoiceVlanNoneMode, agentStpMstTopologyChangeParm=agentStpMstTopologyChangeParm, agentUserAuthenticationConfigEntry=agentUserAuthenticationConfigEntry, agentDNSConfigNameServer=agentDNSConfigNameServer, agentSdmPreferNextTemplate=agentSdmPreferNextTemplate, agentNetworkIpv6AddrPrefixLength=agentNetworkIpv6AddrPrefixLength, agentTrapLogTable=agentTrapLogTable, agentSwitchAddressAgingTimeout=agentSwitchAddressAgingTimeout, agentStpMstRootPathCost=agentStpMstRootPathCost, agentDaiVlanSrcMacFailures=agentDaiVlanSrcMacFailures, agentNetworkSubnetMask=agentNetworkSubnetMask, agentSwitchVlanMacAssociationMacAddress=agentSwitchVlanMacAssociationMacAddress, agentTransferUploadFilename=agentTransferUploadFilename, agentClearPasswords=agentClearPasswords, agentSwitchSnoopingVlanMaxResponseTime=agentSwitchSnoopingVlanMaxResponseTime, agentSwitchMFDBMaxTableEntries=agentSwitchMFDBMaxTableEntries, broadcastStormStartTrap=broadcastStormStartTrap, temperatureTooHighTrap=temperatureTooHighTrap, agentSerialTerminalLength=agentSerialTerminalLength, agentClassOfServicePortPriority=agentClassOfServicePortPriority, dhcpSnoopingIntfErrorDisabledTrap=dhcpSnoopingIntfErrorDisabledTrap, agentSerialCharacterSize=agentSerialCharacterSize, agentStpConfigName=agentStpConfigName, stpInstanceTopologyChangeTrap=stpInstanceTopologyChangeTrap, agentNetworkIpv6AddrPrefix=agentNetworkIpv6AddrPrefix, agentNetworkIpv6ConfigProtocol=agentNetworkIpv6ConfigProtocol, agentServicePortDhcp6RELEASEMessagesSent=agentServicePortDhcp6RELEASEMessagesSent, agentTransferDownloadStartupConfigToSwitchDestFilename=agentTransferDownloadStartupConfigToSwitchDestFilename, agentSwitchSnoopingQuerierQueryInterval=agentSwitchSnoopingQuerierQueryInterval, agentSupportedMibDescription=agentSupportedMibDescription, agentPortStatsRateHCPacketsPerSecondRx=agentPortStatsRateHCPacketsPerSecondRx, agentDhcpSnoopingConfigGroup=agentDhcpSnoopingConfigGroup, agentSnmpUserConfigTable=agentSnmpUserConfigTable, agentDynamicDsBindingLeaseRemainingTime=agentDynamicDsBindingLeaseRemainingTime, agentDhcpSnoopingStoreTimeout=agentDhcpSnoopingStoreTimeout, agentSwitchCpuProcessEntry=agentSwitchCpuProcessEntry, agentAuthenticationGroup=agentAuthenticationGroup, agentDNSConfigRequest=agentDNSConfigRequest, agentUserStatus=agentUserStatus, agentSnmpTrapFlagsConfigGroup=agentSnmpTrapFlagsConfigGroup, agentSwitchMFDBVlanId=agentSwitchMFDBVlanId, agentStpCstConfigGroup=agentStpCstConfigGroup, agentSwitchVoiceVlanDeviceEntry=agentSwitchVoiceVlanDeviceEntry, agentSwitchVlanSubnetAssociationGroup=agentSwitchVlanSubnetAssociationGroup, agentStpConfigRevision=agentStpConfigRevision, agentStartupConfigErase=agentStartupConfigErase, agentSwitchSnoopingIntfGroup=agentSwitchSnoopingIntfGroup, agentSwitchPortDVlanTagRowStatus=agentSwitchPortDVlanTagRowStatus, agentStpMstPortTransitionsOutOfLoopInconsistentState=agentStpMstPortTransitionsOutOfLoopInconsistentState, agentLDAPRacName=agentLDAPRacName, agentSnmpTrapReceiverConfigTable=agentSnmpTrapReceiverConfigTable, agentPortMirrorTypeTable=agentPortMirrorTypeTable, vlanDefaultCfgFailureTrap=vlanDefaultCfgFailureTrap, agentIPv6MulticastRoutes=agentIPv6MulticastRoutes, agentTrapLogGroup=agentTrapLogGroup, agentSwitchVlanStaticMrouterGroup=agentSwitchVlanStaticMrouterGroup, agentDynamicIpsgBindingIpAddr=agentDynamicIpsgBindingIpAddr, agentUserPasswordExpireTime=agentUserPasswordExpireTime, agentSwitchMFDBMacAddress=agentSwitchMFDBMacAddress, agentPortLinkTrapMode=agentPortLinkTrapMode, daiIntfErrorDisabledTrap=daiIntfErrorDisabledTrap, agentSwitchMFDBMostEntriesUsed=agentSwitchMFDBMostEntriesUsed, agentDhcpL2RelayVlanConfigTable=agentDhcpL2RelayVlanConfigTable, agentUserAuthenticationConfigTable=agentUserAuthenticationConfigTable, agentHTTPSoftTimeout=agentHTTPSoftTimeout, agentStaticIpsgBindingIpAddr=agentStaticIpsgBindingIpAddr, agentNetworkMacAddressType=agentNetworkMacAddressType, agentSwitchSnoopingVlanGroup=agentSwitchSnoopingVlanGroup, agentSnmpEngineIdConfigEntry=agentSnmpEngineIdConfigEntry, agentProtocolGroupProtocolStatus=agentProtocolGroupProtocolStatus, agentDNSConfigGroup=agentDNSConfigGroup, agentNetworkDhcp6ADVERTISEMessagesDiscarded=agentNetworkDhcp6ADVERTISEMessagesDiscarded, agentSwitchSnoopingQuerierLastQuerierVersion=agentSwitchSnoopingQuerierLastQuerierVersion, agentArpEntries=agentArpEntries, agentProtocolGroupProtocolIP=agentProtocolGroupProtocolIP, agentStpPortState=agentStpPortState, agentStaticIpsgBindingMacAddr=agentStaticIpsgBindingMacAddr, agentStpCstPortPathCost=agentStpCstPortPathCost, agentDaiIfConfigTable=agentDaiIfConfigTable, agentStpCstHelloTime=agentStpCstHelloTime, vlanRequestFailureTrap=vlanRequestFailureTrap, agentProtocolGroupVlanId=agentProtocolGroupVlanId, agentDynamicDsBindingIpAddr=agentDynamicDsBindingIpAddr, agentSwitchCpuProcessGroup=agentSwitchCpuProcessGroup, agentDhcpSnoopingVlanConfigEntry=agentDhcpSnoopingVlanConfigEntry, agentSwitchDVlanTagEthertype=agentSwitchDVlanTagEthertype, agentSwitchCpuProcessTable=agentSwitchCpuProcessTable, agentServicePortConfigProtocol=agentServicePortConfigProtocol, agentSwitchProtectedPortGroupId=agentSwitchProtectedPortGroupId, agentUserConfigTable=agentUserConfigTable, agentStpPortStatsMstpBpduTx=agentStpPortStatsMstpBpduTx, agentStpCstPortEdge=agentStpCstPortEdge, agentSpanningTreeConfigGroup=agentSpanningTreeConfigGroup, agentLagSummaryHashOption=agentLagSummaryHashOption, agentSwitchMFDBTable=agentSwitchMFDBTable, agentAuthenticationListName=agentAuthenticationListName, agentSnmpSpanningTreeTrapFlag=agentSnmpSpanningTreeTrapFlag, stormControlStopTrap=stormControlStopTrap, agentInventoryAdditionalPackages=agentInventoryAdditionalPackages, agentSwitchIpAddressConflictTrap=agentSwitchIpAddressConflictTrap, agentDaiVlanIndex=agentDaiVlanIndex, agentDhcpL2RelayIfEnable=agentDhcpL2RelayIfEnable, agentExecAccountingListName=agentExecAccountingListName, agentExecAccountingGroup=agentExecAccountingGroup, agentStpForceVersion=agentStpForceVersion, agentSwitchSnoopingIntfIndex=agentSwitchSnoopingIntfIndex, agentLagSummaryRateLoadInterval=agentLagSummaryRateLoadInterval, agentSwitchSnoopingIntfEntry=agentSwitchSnoopingIntfEntry, configChangedTrap=configChangedTrap, agentStpMstRootPortId=agentStpMstRootPortId, agentExecAccountingListIndex=agentExecAccountingListIndex, agentLagSummaryStatus=agentLagSummaryStatus, agentDhcpSnoopingVlanConfigTable=agentDhcpSnoopingVlanConfigTable, agentLoginSessionTable=agentLoginSessionTable, agentSwitchProtectedPortPortList=agentSwitchProtectedPortPortList, agentPasswordManagementConfigGroup=agentPasswordManagementConfigGroup, agentDNSConfigHostNameRemove=agentDNSConfigHostNameRemove, agentPortStatsRateEntry=agentPortStatsRateEntry, agentUserConfigGroup=agentUserConfigGroup, agentUdldConfigGroup=agentUdldConfigGroup, agentUdldConfigTable=agentUdldConfigTable, stpInstanceLoopInconsistentStartTrap=stpInstanceLoopInconsistentStartTrap, agentVendorClassOptionConfigGroup=agentVendorClassOptionConfigGroup, agentNetworkDhcp6ADVERTISEMessagesReceived=agentNetworkDhcp6ADVERTISEMessagesReceived, agentSwitchVlanStaticMrouterEntry=agentSwitchVlanStaticMrouterEntry, agentSwitchAddressAgingTimeoutEntry=agentSwitchAddressAgingTimeoutEntry, agentUserPortConfigEntry=agentUserPortConfigEntry, agentIPv6DNSConfigNameServerListIndex=agentIPv6DNSConfigNameServerListIndex, agentTransferUploadServerAddress=agentTransferUploadServerAddress, agentLDAPServerPort=agentLDAPServerPort, agentServicePortDhcp6MalformedMessagesReceived=agentServicePortDhcp6MalformedMessagesReceived, agentNetworkDhcp6REPLYMessagesReceived=agentNetworkDhcp6REPLYMessagesReceived, agentDhcpSnoopingIfBurstInterval=agentDhcpSnoopingIfBurstInterval, agentArpAclEntry=agentArpAclEntry, agentLagConfigStaticCapability=agentLagConfigStaticCapability, agentSnmpUserConfigEntry=agentSnmpUserConfigEntry, agentSerialBaudrate=agentSerialBaudrate, agentLagConfigCreate=agentLagConfigCreate, agentServicePortStatsGroup=agentServicePortStatsGroup, agentStpPortStatsRstpBpduRx=agentStpPortStatsRstpBpduRx, agentDhcpSnoopingInvalidClientMessages=agentDhcpSnoopingInvalidClientMessages, agentIPv6DNSConfigTTL=agentIPv6DNSConfigTTL, agentDhcpL2RelayRemoteIdVlanEnable=agentDhcpL2RelayRemoteIdVlanEnable, agentPortVoiceVlanDataPriorityMode=agentPortVoiceVlanDataPriorityMode, agentUdldIndex=agentUdldIndex, agentTransferUploadScriptFromSwitchSrcFilename=agentTransferUploadScriptFromSwitchSrcFilename, agentProtocolGroupTable=agentProtocolGroupTable, vlanDeleteLastTrap=vlanDeleteLastTrap, agentEcmpNextHops=agentEcmpNextHops, agentSwitchVlanMacAssociationTable=agentSwitchVlanMacAssociationTable, agentStpMstPortTable=agentStpMstPortTable, PortList=PortList, agentDDnsUserName=agentDDnsUserName, agentStpCstPortOperEdge=agentStpCstPortOperEdge, agentSerialParityType=agentSerialParityType, agentSwitchIfDVlanTagTPid=agentSwitchIfDVlanTagTPid, agentServicePortIpv6Gateway=agentServicePortIpv6Gateway, agentSnmpCommunityStatus=agentSnmpCommunityStatus, agentSnmpInformRetires=agentSnmpInformRetires, agentSwitchProtectedPortGroupName=agentSwitchProtectedPortGroupName, agentAuthenticationListStatus=agentAuthenticationListStatus, agentStpCstBridgeFwdDelay=agentStpCstBridgeFwdDelay, agentSnmpEngineIdConfigTable=agentSnmpEngineIdConfigTable, agentPortVoiceVlanUntagged=agentPortVoiceVlanUntagged, agentDhcpClientVendorClassIdString=agentDhcpClientVendorClassIdString, agentSwitchVlanMacAssociationGroup=agentSwitchVlanMacAssociationGroup, agentDhcpSnoopingIfConfigTable=agentDhcpSnoopingIfConfigTable, agentSerialTimeout=agentSerialTimeout, agentDynamicIpsgBindingMacAddr=agentDynamicIpsgBindingMacAddr, agentServicePortDhcp6StatsReset=agentServicePortDhcp6StatsReset, agentStaticDsBindingRowStatus=agentStaticDsBindingRowStatus, agentDNSConfigNameServerRemove=agentDNSConfigNameServerRemove, agentServicePortIpv6AddrPrefixLength=agentServicePortIpv6AddrPrefixLength, agentProtocolGroupProtocolTable=agentProtocolGroupProtocolTable, agentDhcpSnoopingStatsReset=agentDhcpSnoopingStatsReset, agentDhcpL2RelayUntrustedSrvrMsgsWithOptn82=agentDhcpL2RelayUntrustedSrvrMsgsWithOptn82, agentSerialStopBits=agentSerialStopBits, agentSwitchSnoopingCfgEntry=agentSwitchSnoopingCfgEntry, PYSNMP_MODULE_ID=switching, agentConfigGroup=agentConfigGroup, agentUserEncryptionPassword=agentUserEncryptionPassword, agentSnmpTrapReceiverConfigEntry=agentSnmpTrapReceiverConfigEntry, agentSnmpInformIndex=agentSnmpInformIndex, agentSwitchMFDBEntry=agentSwitchMFDBEntry, agentIASUserStatus=agentIASUserStatus, agentLagSummaryPortStaticCapability=agentLagSummaryPortStaticCapability, agentSnmpCommunityConfigTable=agentSnmpCommunityConfigTable, agentAuthenticationListMethod6=agentAuthenticationListMethod6, agentDhcpL2RelayIfTrustEnable=agentDhcpL2RelayIfTrustEnable, agentLagDetailedLagIndex=agentLagDetailedLagIndex, agentDaiVlanDstMacFailures=agentDaiVlanDstMacFailures, agentTrapLogTotalSinceLastViewed=agentTrapLogTotalSinceLastViewed, agentSwitchCpuFreeMemAboveThresholdTrap=agentSwitchCpuFreeMemAboveThresholdTrap, agentStpMstPortLoopInconsistentState=agentStpMstPortLoopInconsistentState, agentSwitchSnoopingQuerierElectionParticipateMode=agentSwitchSnoopingQuerierElectionParticipateMode, agentPortVoiceVlanAuthMode=agentPortVoiceVlanAuthMode, agentServicePortIpv6AddressAutoConfig=agentServicePortIpv6AddressAutoConfig, agentSwitchStaticMacFilteringAddress=agentSwitchStaticMacFilteringAddress, agentStpPortStatsRstpBpduTx=agentStpPortStatsRstpBpduTx, agentDaiVlanArpAclStaticFlag=agentDaiVlanArpAclStaticFlag, agentSdmTemplateId=agentSdmTemplateId, agentExecAccountingMethodType=agentExecAccountingMethodType, switching=switching, agentServicePortIpv6AddrTable=agentServicePortIpv6AddrTable, agentLagSummaryStpMode=agentLagSummaryStpMode, agentSnmpCommunityCreate=agentSnmpCommunityCreate, agentSwitchSnoopingQuerierVersion=agentSwitchSnoopingQuerierVersion, agentSwitchStaticMacFilteringTable=agentSwitchStaticMacFilteringTable, agentLagDetailedPortStatus=agentLagDetailedPortStatus, agentSwitchAddressConflictDetectionStatusReset=agentSwitchAddressConflictDetectionStatusReset, agentSnmpCommunityAccessMode=agentSnmpCommunityAccessMode, agentDhcpL2RelayTrustedSrvrMsgsWithoutOptn82=agentDhcpL2RelayTrustedSrvrMsgsWithoutOptn82, agentSnmpUserEncryption=agentSnmpUserEncryption)
mibBuilder.exportSymbols("SWITCHING-MIB", agentSnmpCommunityName=agentSnmpCommunityName, agentStpMstId=agentStpMstId, agentIpsgIfConfigTable=agentIpsgIfConfigTable, agentIPv6DNSConfigHostName=agentIPv6DNSConfigHostName, agentIPv6DNSConfigHostIndex=agentIPv6DNSConfigHostIndex, agentSwitchStaticMacFilteringStatus=agentSwitchStaticMacFilteringStatus, agentNetworkDhcp6MalformedMessagesReceived=agentNetworkDhcp6MalformedMessagesReceived, agentNetworkIpv6AddrStatus=agentNetworkIpv6AddrStatus, agentSwitchVlanStaticMrouterAdminMode=agentSwitchVlanStaticMrouterAdminMode, agentDDnsAddress=agentDDnsAddress, agentUdldConfigEntry=agentUdldConfigEntry, agentDhcpSnoopingStatsEntry=agentDhcpSnoopingStatsEntry, agentSwitchStaticMacFilteringEntry=agentSwitchStaticMacFilteringEntry, agentSnmpInformConfigTable=agentSnmpInformConfigTable, agentStaticIpsgBindingVlanId=agentStaticIpsgBindingVlanId, agentSwitchIfDVlanTagTable=agentSwitchIfDVlanTagTable, agentPortCapability=agentPortCapability, agentStpCstPortOperPointToPoint=agentStpCstPortOperPointToPoint, agentSwitchSnoopingQuerierVlanEntry=agentSwitchSnoopingQuerierVlanEntry, agentSwitchMFDBCurrentEntries=agentSwitchMFDBCurrentEntries, agentTransferDownloadScriptToSwitchDestFilename=agentTransferDownloadScriptToSwitchDestFilename, agentIPv6DNSConfigHostIpAddress=agentIPv6DNSConfigHostIpAddress, agentSnmpTrapSourceInterface=agentSnmpTrapSourceInterface, agentServicePortDhcp6RENEWMessagesSent=agentServicePortDhcp6RENEWMessagesSent, agentDaiVlanStatsIndex=agentDaiVlanStatsIndex, agentPortMirrorTable=agentPortMirrorTable, agentSwitchPortDVlanTagInterfaceIfIndex=agentSwitchPortDVlanTagInterfaceIfIndex, agentUserSnmpv3AccessMode=agentUserSnmpv3AccessMode, agentSwitchVlanSubnetAssociationTable=agentSwitchVlanSubnetAssociationTable, agentInventorySoftwareVersion=agentInventorySoftwareVersion, agentSwitchSnoopingIntfMRPExpirationTime=agentSwitchSnoopingIntfMRPExpirationTime, agentStpPortStatsMstpBpduRx=agentStpPortStatsMstpBpduRx, agentLDAPRacDomain=agentLDAPRacDomain, powerSupplyStatusChangeTrap=powerSupplyStatusChangeTrap, agentStpCstDesignatedCost=agentStpCstDesignatedCost, agentSwitchSnoopingQuerierOperMaxResponseTime=agentSwitchSnoopingQuerierOperMaxResponseTime, agentTransferUploadOpCodeFromSwitchSrcFilename=agentTransferUploadOpCodeFromSwitchSrcFilename, agentTelnetMaxSessions=agentTelnetMaxSessions, agentStpCstDesignatedPortId=agentStpCstDesignatedPortId, agentStpMstPortPriority=agentStpMstPortPriority, agentPortStatsRateTable=agentPortStatsRateTable, agentSwitchCpuProcessName=agentSwitchCpuProcessName, agentTransferDownloadDataType=agentTransferDownloadDataType, agentSystemGroup=agentSystemGroup, agentNetworkConfigProtocolDhcpRenew=agentNetworkConfigProtocolDhcpRenew, agentSwitchSnoopingQuerierVlanOperMode=agentSwitchSnoopingQuerierVlanOperMode, agentServicePortIpv6AddrEntry=agentServicePortIpv6AddrEntry, agentLoginSessionInetAddress=agentLoginSessionInetAddress, agentSwitchCpuProcessId=agentSwitchCpuProcessId, agentSnmpTrapReceiverIndex=agentSnmpTrapReceiverIndex, agentTransferDownloadPath=agentTransferDownloadPath, agentSnmpEngineIdIndex=agentSnmpEngineIdIndex, agentSwitchSnoopingIntfVlanIDs=agentSwitchSnoopingIntfVlanIDs, agentSwitchCpuProcessFreeMemoryThreshold=agentSwitchCpuProcessFreeMemoryThreshold, agentDDnsConfigGroup=agentDDnsConfigGroup, agentPasswordManagementPasswordStrengthCheck=agentPasswordManagementPasswordStrengthCheck, agentStpMstVlanEntry=agentStpMstVlanEntry, agentDot3adAggPortLACPMode=agentDot3adAggPortLACPMode, agentServicePortDhcp6REPLYMessagesReceived=agentServicePortDhcp6REPLYMessagesReceived, agentPortVoiceVlanPriority=agentPortVoiceVlanPriority, agentSwitchSnoopingIntfMulticastRouterMode=agentSwitchSnoopingIntfMulticastRouterMode, agentSnmpUserAuthenticationPassword=agentSnmpUserAuthenticationPassword, agentLoginSessionSessionTime=agentLoginSessionSessionTime, agentSwitchMFDBSummaryForwardingPortMask=agentSwitchMFDBSummaryForwardingPortMask, agentIPv6DNSConfigRequest=agentIPv6DNSConfigRequest, agentServicePortConfigGroup=agentServicePortConfigGroup, agentSaveConfig=agentSaveConfig, noStartupConfigTrap=noStartupConfigTrap, agentProtocolGroupProtocolEntry=agentProtocolGroupProtocolEntry, agentPortVoiceVlanMode=agentPortVoiceVlanMode, agentServicePortIpv6AddrPrefix=agentServicePortIpv6AddrPrefix, agentNetworkIpv6AddressAutoConfig=agentNetworkIpv6AddressAutoConfig, agentStpMstPortEntry=agentStpMstPortEntry, agentDhcpSnoopingVerifyMac=agentDhcpSnoopingVerifyMac, agentLoginSessionIdleTime=agentLoginSessionIdleTime, agentClassOfServicePortClass=agentClassOfServicePortClass, agentIPv6DNSConfigIpAddress=agentIPv6DNSConfigIpAddress, agentInventoryManufacturer=agentInventoryManufacturer, agentArpAclRuleEntry=agentArpAclRuleEntry, agentDNSConfigNameServerListEntry=agentDNSConfigNameServerListEntry, agentPortClearStats=agentPortClearStats, agentDynamicDsBinding=agentDynamicDsBinding, agentArpAclRuleMatchSenderMacAddr=agentArpAclRuleMatchSenderMacAddr, agentArpAclGroup=agentArpAclGroup, agentIPv6DNSConfigFlag=agentIPv6DNSConfigFlag, agentCmdsAccountingListName=agentCmdsAccountingListName, failedUserLoginTrap=failedUserLoginTrap, agentInventoryMachineType=agentInventoryMachineType, agentDNSConfigClearDNSCounters=agentDNSConfigClearDNSCounters, agentAutoinstallAutoUpgradeMode=agentAutoinstallAutoUpgradeMode, stpInstanceNewRootTrap=stpInstanceNewRootTrap, agentClearBufferedLog=agentClearBufferedLog, agentInventoryOperatingSystem=agentInventoryOperatingSystem, agentSwitchSnoopingMulticastControlFramesProcessed=agentSwitchSnoopingMulticastControlFramesProcessed, agentSwitchConflictMacAddr=agentSwitchConflictMacAddr, agentSwitchCpuFreeMemBelowThresholdTrap=agentSwitchCpuFreeMemBelowThresholdTrap, agentDDnsStatus=agentDDnsStatus, agentStpMstDesignatedCost=agentStpMstDesignatedCost, agentArpAclRuleMatchSenderIpAddr=agentArpAclRuleMatchSenderIpAddr, agentAuthenticationListIndex=agentAuthenticationListIndex, agentSnmpTrapReceiverCreate=agentSnmpTrapReceiverCreate, agentDaiVlanIpValidFailures=agentDaiVlanIpValidFailures, agentSupportedMibEntry=agentSupportedMibEntry, agentProtocolGroupPortEntry=agentProtocolGroupPortEntry, agentTransferDownloadServerAddress=agentTransferDownloadServerAddress, agentPasswordManagementStrengthMinNumericNumbers=agentPasswordManagementStrengthMinNumericNumbers, fanFailureTrap=fanFailureTrap, agentDaiVlanLoggingEnable=agentDaiVlanLoggingEnable, agentPasswordMgmtStrengthExcludeKeywordStatus=agentPasswordMgmtStrengthExcludeKeywordStatus, agentSwitchSnoopingVlanMRPExpirationTime=agentSwitchSnoopingVlanMRPExpirationTime, agentSwitchVoiceVlanInterfaceNum=agentSwitchVoiceVlanInterfaceNum, agentSwitchMFDBSummaryMacAddress=agentSwitchMFDBSummaryMacAddress, agentSwitchVlanSubnetAssociationPriority=agentSwitchVlanSubnetAssociationPriority, agentPortMirrorAdminMode=agentPortMirrorAdminMode, agentSwitchMFDBProtocolType=agentSwitchMFDBProtocolType, agentStpMstPortPathCost=agentStpMstPortPathCost, agentStpMstVlanTable=agentStpMstVlanTable, agentNetworkConfigGroup=agentNetworkConfigGroup, agentPortConfigTable=agentPortConfigTable, agentPortIfIndex=agentPortIfIndex, agentProtocolGroupName=agentProtocolGroupName, agentSwitchAddressAgingTimeoutTable=agentSwitchAddressAgingTimeoutTable, agentProtocolGroupProtocolIPX=agentProtocolGroupProtocolIPX, agentSwitchDVlanTagRowStatus=agentSwitchDVlanTagRowStatus, agentImage2=agentImage2, agentDaiVlanDhcpDrops=agentDaiVlanDhcpDrops, agentNetworkIpv6AddrTable=agentNetworkIpv6AddrTable, agentSwitchSnoopingVlanFastLeaveAdminMode=agentSwitchSnoopingVlanFastLeaveAdminMode, agentServicePortIPAddress=agentServicePortIPAddress, agentLagDetailedConfigEntry=agentLagDetailedConfigEntry, agentSnmpConfigGroup=agentSnmpConfigGroup, agentStpCstPortBpduGuardEffect=agentStpCstPortBpduGuardEffect, agentDNSConfigHostName=agentDNSConfigHostName, agentStpCstPortRootGuard=agentStpCstPortRootGuard, agentProtocolGroupPortTable=agentProtocolGroupPortTable)
