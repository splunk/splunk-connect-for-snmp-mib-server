#
# PySNMP MIB module HPN-ICF-DHCPR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DHCPR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
hpnicfRhw, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfRhw")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ObjectIdentity, Integer32, NotificationType, Unsigned32, Bits, ModuleIdentity, Gauge32, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "NotificationType", "Unsigned32", "Bits", "ModuleIdentity", "Gauge32", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "MibIdentifier", "Counter32")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hpnicfDHCPRelayMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1))
hpnicfDHCPRelayMib.setRevisions(('2003-02-12 00:00',))
if mibBuilder.loadTexts: hpnicfDHCPRelayMib.setLastUpdated('200303010000Z')
if mibBuilder.loadTexts: hpnicfDHCPRelayMib.setOrganization('')
hpnicfDHCPRelayMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1))
hpnicfDHCPRIPTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfDHCPRIPTable.setStatus('current')
hpnicfDHCPRIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-DHCPR-MIB", "hpnicfDHCPRIPAddr"))
if mibBuilder.loadTexts: hpnicfDHCPRIPEntry.setStatus('current')
hpnicfDHCPRIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRIPAddr.setStatus('current')
hpnicfDHCPRIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDHCPRIPRowStatus.setStatus('current')
hpnicfDHCPRSeletAllocateModeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfDHCPRSeletAllocateModeTable.setStatus('current')
hpnicfDHCPRSeletAllocateModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDHCPRSeletAllocateModeEntry.setStatus('current')
hpnicfDHCPRSelectAllocateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("global", 0), ("interface", 1), ("relay", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDHCPRSelectAllocateMode.setStatus('current')
hpnicfDHCPRelayCycleStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDHCPRelayCycleStatus.setStatus('current')
hpnicfDHCPRRxBadPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRRxBadPktNum.setStatus('current')
hpnicfDHCPRRxServerPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRRxServerPktNum.setStatus('current')
hpnicfDHCPRTxServerPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRTxServerPktNum.setStatus('current')
hpnicfDHCPRRxClientPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRRxClientPktNum.setStatus('current')
hpnicfDHCPRTxClientPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRTxClientPktNum.setStatus('current')
hpnicfDHCPRTxClientUniPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRTxClientUniPktNum.setStatus('current')
hpnicfDHCPRTxClientBroPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRTxClientBroPktNum.setStatus('current')
hpnicfDHCPRelayDiscoverPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRelayDiscoverPktNum.setStatus('current')
hpnicfDHCPRelayRequestPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRelayRequestPktNum.setStatus('current')
hpnicfDHCPRelayDeclinePktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRelayDeclinePktNum.setStatus('current')
hpnicfDHCPRelayReleasePktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRelayReleasePktNum.setStatus('current')
hpnicfDHCPRelayInformPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRelayInformPktNum.setStatus('current')
hpnicfDHCPRelayOfferPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRelayOfferPktNum.setStatus('current')
hpnicfDHCPRelayAckPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRelayAckPktNum.setStatus('current')
hpnicfDHCPRelayNakPktNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDHCPRelayNakPktNum.setStatus('current')
hpnicfDHCPRelayStatisticsReset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDHCPRelayStatisticsReset.setStatus('current')
hpnicfDHCPRelayMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 2))
hpnicfDHCPRelayMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 2, 1))
hpnicfDHCPRelayMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 2, 2))
hpnicfDHCPRelayMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 1, 2, 2, 1)).setObjects(("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRIPAddr"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRIPRowStatus"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRSelectAllocateMode"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayCycleStatus"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRRxBadPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRRxServerPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRTxServerPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRRxClientPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRTxClientPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRTxClientUniPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRTxClientBroPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayDiscoverPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayRequestPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayDeclinePktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayReleasePktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayInformPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayOfferPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayAckPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayNakPktNum"), ("HPN-ICF-DHCPR-MIB", "hpnicfDHCPRelayStatisticsReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDHCPRelayMIBGroup = hpnicfDHCPRelayMIBGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DHCPR-MIB", hpnicfDHCPRIPEntry=hpnicfDHCPRIPEntry, hpnicfDHCPRelayMibObject=hpnicfDHCPRelayMibObject, hpnicfDHCPRelayMIBGroup=hpnicfDHCPRelayMIBGroup, hpnicfDHCPRelayMIBConformance=hpnicfDHCPRelayMIBConformance, hpnicfDHCPRRxServerPktNum=hpnicfDHCPRRxServerPktNum, hpnicfDHCPRelayMIBCompliances=hpnicfDHCPRelayMIBCompliances, hpnicfDHCPRelayDiscoverPktNum=hpnicfDHCPRelayDiscoverPktNum, hpnicfDHCPRIPAddr=hpnicfDHCPRIPAddr, PYSNMP_MODULE_ID=hpnicfDHCPRelayMib, hpnicfDHCPRelayAckPktNum=hpnicfDHCPRelayAckPktNum, hpnicfDHCPRRxClientPktNum=hpnicfDHCPRRxClientPktNum, hpnicfDHCPRSeletAllocateModeEntry=hpnicfDHCPRSeletAllocateModeEntry, hpnicfDHCPRelayRequestPktNum=hpnicfDHCPRelayRequestPktNum, hpnicfDHCPRelayMIBGroups=hpnicfDHCPRelayMIBGroups, hpnicfDHCPRelayReleasePktNum=hpnicfDHCPRelayReleasePktNum, hpnicfDHCPRSelectAllocateMode=hpnicfDHCPRSelectAllocateMode, hpnicfDHCPRIPRowStatus=hpnicfDHCPRIPRowStatus, hpnicfDHCPRelayOfferPktNum=hpnicfDHCPRelayOfferPktNum, hpnicfDHCPRTxServerPktNum=hpnicfDHCPRTxServerPktNum, hpnicfDHCPRelayDeclinePktNum=hpnicfDHCPRelayDeclinePktNum, hpnicfDHCPRIPTable=hpnicfDHCPRIPTable, hpnicfDHCPRTxClientBroPktNum=hpnicfDHCPRTxClientBroPktNum, hpnicfDHCPRelayCycleStatus=hpnicfDHCPRelayCycleStatus, hpnicfDHCPRRxBadPktNum=hpnicfDHCPRRxBadPktNum, hpnicfDHCPRelayInformPktNum=hpnicfDHCPRelayInformPktNum, hpnicfDHCPRelayNakPktNum=hpnicfDHCPRelayNakPktNum, hpnicfDHCPRelayMib=hpnicfDHCPRelayMib, hpnicfDHCPRelayStatisticsReset=hpnicfDHCPRelayStatisticsReset, hpnicfDHCPRSeletAllocateModeTable=hpnicfDHCPRSeletAllocateModeTable, hpnicfDHCPRTxClientUniPktNum=hpnicfDHCPRTxClientUniPktNum, hpnicfDHCPRTxClientPktNum=hpnicfDHCPRTxClientPktNum)
