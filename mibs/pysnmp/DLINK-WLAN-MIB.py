#
# PySNMP MIB module DLINK-WLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DLINK-WLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:35:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, enterprises, ModuleIdentity, MibIdentifier, TimeTicks, Counter64, Bits, iso, Unsigned32, Integer32, IpAddress, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, mgmt, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "enterprises", "ModuleIdentity", "MibIdentifier", "TimeTicks", "Counter64", "Bits", "iso", "Unsigned32", "Integer32", "IpAddress", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "mgmt", "Counter32")
TruthValue, MacAddress, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "MacAddress", "TextualConvention", "DisplayString", "RowStatus")
dlink = MibIdentifier((1, 3, 6, 1, 4, 1, 171))
dlkEnterpriseAP = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 1))
if mibBuilder.loadTexts: dlkEnterpriseAP.setLastUpdated('200208160000Z')
if mibBuilder.loadTexts: dlkEnterpriseAP.setOrganization('D-Link, Inc.')
dlkEnterpriseAPsys = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 1))
dlkEnterpriseAPlan = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 2))
dlk80211bPlusDot11 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3))
dlkEnterpriseAPTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 4))
enterpriseAPSysConfigSave = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("write", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPSysConfigSave.setStatus('current')
enterpriseAPSysReboot = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPSysReboot.setStatus('current')
enterpriseAPSysConfigApply = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("saveAndReboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPSysConfigApply.setStatus('current')
dot11smt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 1))
dot11StationConfigEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1))
dot11APModeConfigEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 2))
dot11PrivacyEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3))
dot11mac = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 2))
dot11OperationEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1))
dot11CountersEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2))
dot11res = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 3))
dot11resAttribute = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 3, 1))
dot11phy = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 4))
dot11PhyOperationEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1))
dot11PhyAntennaEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 2))
dot11PhyTxPowerEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3))
dot11PhyDSSSEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 4))
dot11StationID = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11StationID.setStatus('deprecated')
dot11PrivacyOptionImplemented = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11PrivacyOptionImplemented.setStatus('current')
dot11PowerManagementMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("powersave", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11PowerManagementMode.setStatus('current')
dot11DesiredSSID = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11DesiredSSID.setStatus('current')
dot11DesiredBSSType = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("infrastructure", 1), ("independent", 2), ("any", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11DesiredBSSType.setStatus('current')
dot11OperationalRateSet = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11OperationalRateSet.setStatus('current')
dot11BeaconPeriod = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11BeaconPeriod.setStatus('current')
dot11DTIMPeriod = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11DTIMPeriod.setStatus('current')
dot11DisassociateReason = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11DisassociateReason.setStatus('current')
dot11DisassociateStation = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11DisassociateStation.setStatus('current')
dot11DeauthenticateReason = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11DeauthenticateReason.setStatus('current')
dot11DeauthenticateStation = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11DeauthenticateStation.setStatus('current')
dot11AuthenticateFailStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11AuthenticateFailStatus.setStatus('current')
dot11AccessPointMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("accessPoint", 1), ("wirelessBridge", 2), ("wirelessAPClient", 3), ("wirelessMultiBridge", 4), ("backupAccessPoint", 5), ("repeater", 6), ("groupAccessPoint", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AccessPointMode.setStatus('current')
dot11RemoteMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 2, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11RemoteMACAddress.setStatus('current')
dot11BackupAPRemoteServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11BackupAPRemoteServerIPAddress.setStatus('current')
dot11GroupAPID = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11GroupAPID.setStatus('current')
dot11AuthenticationAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("openSystem", 1), ("sharedKey", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11AuthenticationAlgorithm.setStatus('current')
dot11PrivacyInvoked = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11PrivacyInvoked.setStatus('current')
dot11WEPDefaultKeyID = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11WEPDefaultKeyID.setStatus('current')
dot11WEPKeyLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("w-64Bit", 1), ("w-128Bit", 2), ("w-256Bit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11WEPKeyLength.setStatus('current')
dot11WEPKeyMappingLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11WEPKeyMappingLength.setStatus('current')
dot11ExcludeUnencrypted = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ExcludeUnencrypted.setStatus('current')
dot11WEPICVErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11WEPICVErrorCount.setStatus('current')
dot11WEPExcludedCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 1, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11WEPExcludedCount.setStatus('current')
dot11MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11MACAddress.setStatus('current')
dot11RTSThreshold = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2432))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11RTSThreshold.setStatus('current')
dot11ShortRetryLimit = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11ShortRetryLimit.setStatus('current')
dot11LongRetryLimit = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11LongRetryLimit.setStatus('current')
dot11FragmentationThreshold = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11FragmentationThreshold.setStatus('current')
dot11SSIDBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11SSIDBroadcast.setStatus('current')
dot11PreambleType = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("longPreamble", 1), ("shortPreamble", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11PreambleType.setStatus('current')
dot11MaxTransmitMSDULifetime = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11MaxTransmitMSDULifetime.setStatus('current')
dot11MaxReceiveLifetime = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11MaxReceiveLifetime.setStatus('current')
dot11ManufacturerID = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ManufacturerID.setStatus('current')
dot11ProductID = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ProductID.setStatus('current')
dot11TransmittedFragmentCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TransmittedFragmentCount.setStatus('current')
dot11MulticastTransmittedFrameCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11MulticastTransmittedFrameCount.setStatus('current')
dot11FailedCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11FailedCount.setStatus('current')
dot11RetryCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11RetryCount.setStatus('current')
dot11MultipleRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11MultipleRetryCount.setStatus('current')
dot11FrameDuplicateCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11FrameDuplicateCount.setStatus('current')
dot11RTSSuccessCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11RTSSuccessCount.setStatus('current')
dot11RTSFailureCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11RTSFailureCount.setStatus('current')
dot11ACKFailureCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ACKFailureCount.setStatus('current')
dot11ReceivedFragmentCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ReceivedFragmentCount.setStatus('current')
dot11MulticastReceivedFrameCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11MulticastReceivedFrameCount.setStatus('current')
dot11FCSErrorCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11FCSErrorCount.setStatus('current')
dot11TransmittedFrameCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TransmittedFrameCount.setStatus('current')
dot11WEPUndecryptableCount = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 2, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11WEPUndecryptableCount.setStatus('current')
dot11ResourceTypeIDName = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('RTID')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ResourceTypeIDName.setStatus('current')
dot11ResourceInfoEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 1, 3, 3, 1, 2))
dot11manufacturerOUI = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 3, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11manufacturerOUI.setStatus('current')
dot11manufacturerName = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 3, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11manufacturerName.setStatus('current')
dot11manufacturerProductName = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 3, 1, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11manufacturerProductName.setStatus('current')
dot11manufacturerProductVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 3, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11manufacturerProductVersion.setStatus('current')
dot11PHYType = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fhss", 1), ("dsss", 2), ("irbaseband", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11PHYType.setStatus('current')
dot11CurrentRegDomain = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11CurrentRegDomain.setStatus('current')
dot11TempType = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tempType1", 1), ("tempType2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TempType.setStatus('current')
dot11RegDomainsSupportValue = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 32, 48, 49, 50, 64))).clone(namedValues=NamedValues(("fcc", 16), ("doc", 32), ("etsi", 48), ("spain", 49), ("france", 50), ("mkk", 64)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11RegDomainsSupportValue.setStatus('current')
dot11SupportedDataRatesTxValue = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11SupportedDataRatesTxValue.setStatus('current')
dot11SupportedDataRatesRxValue = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11SupportedDataRatesRxValue.setStatus('current')
dot11CurrentTxRate = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11CurrentTxRate.setStatus('current')
dot11ChannelAgilityPresent = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ChannelAgilityPresent.setStatus('current')
dot11ChannelAgilityEnabled = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ChannelAgilityEnabled.setStatus('current')
dot11CurrentTxAntenna = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11CurrentTxAntenna.setStatus('current')
dot11DiversitySupport = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fixedlist", 1), ("notsupported", 2), ("dynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11DiversitySupport.setStatus('current')
dot11CurrentRxAntenna = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11CurrentRxAntenna.setStatus('current')
dot11NumberSupportedPowerLevels = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11NumberSupportedPowerLevels.setStatus('current')
dot11TxPowerLevel1 = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TxPowerLevel1.setStatus('current')
dot11TxPowerLevel2 = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TxPowerLevel2.setStatus('current')
dot11TxPowerLevel3 = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TxPowerLevel3.setStatus('current')
dot11TxPowerLevel4 = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TxPowerLevel4.setStatus('current')
dot11TxPowerLevel5 = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TxPowerLevel5.setStatus('current')
dot11TxPowerLevel6 = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TxPowerLevel6.setStatus('current')
dot11TxPowerLevel7 = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TxPowerLevel7.setStatus('current')
dot11TxPowerLevel8 = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11TxPowerLevel8.setStatus('current')
dot11CurrentTxPowerLevel = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11CurrentTxPowerLevel.setStatus('current')
dot11CurrentChannel = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11CurrentChannel.setStatus('current')
dot11DynamicChannelEnabled = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 4, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11DynamicChannelEnabled.setStatus('current')
dot11CCAModeSupported = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11CCAModeSupported.setStatus('current')
dot11CurrentCCAMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("edonly", 1), ("csonly", 2), ("edandcs", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11CurrentCCAMode.setStatus('current')
dot11EDThreshold = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11EDThreshold.setStatus('current')
dot11ShortPreambleOptionImplemented = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11ShortPreambleOptionImplemented.setStatus('current')
dot11PBCCOptionImplemented = MibScalar((1, 3, 6, 1, 4, 1, 171, 1, 3, 4, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot11PBCCOptionImplemented.setStatus('current')
mibBuilder.exportSymbols("DLINK-WLAN-MIB", dot11DisassociateReason=dot11DisassociateReason, dot11TxPowerLevel4=dot11TxPowerLevel4, dot11RegDomainsSupportValue=dot11RegDomainsSupportValue, dot11OperationEntry=dot11OperationEntry, dot11WEPDefaultKeyID=dot11WEPDefaultKeyID, dot11ProductID=dot11ProductID, dlk80211bPlusDot11=dlk80211bPlusDot11, dot11CurrentTxAntenna=dot11CurrentTxAntenna, dlkEnterpriseAP=dlkEnterpriseAP, dot11DynamicChannelEnabled=dot11DynamicChannelEnabled, dot11manufacturerOUI=dot11manufacturerOUI, dot11CurrentTxRate=dot11CurrentTxRate, dot11CurrentChannel=dot11CurrentChannel, dlkEnterpriseAPTrap=dlkEnterpriseAPTrap, dot11LongRetryLimit=dot11LongRetryLimit, dot11manufacturerProductVersion=dot11manufacturerProductVersion, dot11ShortRetryLimit=dot11ShortRetryLimit, PYSNMP_MODULE_ID=dlkEnterpriseAP, dot11OperationalRateSet=dot11OperationalRateSet, dot11phy=dot11phy, dot11DisassociateStation=dot11DisassociateStation, dot11DTIMPeriod=dot11DTIMPeriod, dot11CurrentRegDomain=dot11CurrentRegDomain, dot11TxPowerLevel7=dot11TxPowerLevel7, dot11ShortPreambleOptionImplemented=dot11ShortPreambleOptionImplemented, dot11StationConfigEntry=dot11StationConfigEntry, dot11DesiredSSID=dot11DesiredSSID, dot11TransmittedFrameCount=dot11TransmittedFrameCount, dot11CCAModeSupported=dot11CCAModeSupported, dot11ResourceInfoEntry=dot11ResourceInfoEntry, dot11DesiredBSSType=dot11DesiredBSSType, dot11smt=dot11smt, dot11ManufacturerID=dot11ManufacturerID, dot11RemoteMACAddress=dot11RemoteMACAddress, dot11WEPICVErrorCount=dot11WEPICVErrorCount, dot11MultipleRetryCount=dot11MultipleRetryCount, dot11RTSThreshold=dot11RTSThreshold, dot11PhyDSSSEntry=dot11PhyDSSSEntry, dot11PrivacyEntry=dot11PrivacyEntry, dot11PhyAntennaEntry=dot11PhyAntennaEntry, dot11FCSErrorCount=dot11FCSErrorCount, dot11PhyTxPowerEntry=dot11PhyTxPowerEntry, dot11EDThreshold=dot11EDThreshold, dot11PrivacyOptionImplemented=dot11PrivacyOptionImplemented, enterpriseAPSysReboot=enterpriseAPSysReboot, dot11WEPExcludedCount=dot11WEPExcludedCount, dot11PhyOperationEntry=dot11PhyOperationEntry, dot11SupportedDataRatesRxValue=dot11SupportedDataRatesRxValue, dot11NumberSupportedPowerLevels=dot11NumberSupportedPowerLevels, dot11RTSFailureCount=dot11RTSFailureCount, dot11MulticastTransmittedFrameCount=dot11MulticastTransmittedFrameCount, dot11res=dot11res, dot11CurrentRxAntenna=dot11CurrentRxAntenna, dot11TxPowerLevel1=dot11TxPowerLevel1, dot11CountersEntry=dot11CountersEntry, dot11TxPowerLevel2=dot11TxPowerLevel2, dot11RTSSuccessCount=dot11RTSSuccessCount, dot11SupportedDataRatesTxValue=dot11SupportedDataRatesTxValue, dot11PowerManagementMode=dot11PowerManagementMode, dot11WEPUndecryptableCount=dot11WEPUndecryptableCount, dot11FragmentationThreshold=dot11FragmentationThreshold, dot11MulticastReceivedFrameCount=dot11MulticastReceivedFrameCount, dot11PBCCOptionImplemented=dot11PBCCOptionImplemented, dot11TxPowerLevel8=dot11TxPowerLevel8, dot11WEPKeyLength=dot11WEPKeyLength, dot11RetryCount=dot11RetryCount, dot11MaxTransmitMSDULifetime=dot11MaxTransmitMSDULifetime, dot11PrivacyInvoked=dot11PrivacyInvoked, dot11APModeConfigEntry=dot11APModeConfigEntry, dot11SSIDBroadcast=dot11SSIDBroadcast, dot11PHYType=dot11PHYType, enterpriseAPSysConfigSave=enterpriseAPSysConfigSave, dot11MACAddress=dot11MACAddress, dot11ChannelAgilityEnabled=dot11ChannelAgilityEnabled, dot11BackupAPRemoteServerIPAddress=dot11BackupAPRemoteServerIPAddress, dot11ChannelAgilityPresent=dot11ChannelAgilityPresent, dot11CurrentCCAMode=dot11CurrentCCAMode, dot11manufacturerName=dot11manufacturerName, dot11BeaconPeriod=dot11BeaconPeriod, dot11MaxReceiveLifetime=dot11MaxReceiveLifetime, dot11CurrentTxPowerLevel=dot11CurrentTxPowerLevel, dot11ACKFailureCount=dot11ACKFailureCount, dot11GroupAPID=dot11GroupAPID, enterpriseAPSysConfigApply=enterpriseAPSysConfigApply, dot11AuthenticateFailStatus=dot11AuthenticateFailStatus, dot11PreambleType=dot11PreambleType, dot11TxPowerLevel5=dot11TxPowerLevel5, dot11ReceivedFragmentCount=dot11ReceivedFragmentCount, dot11FailedCount=dot11FailedCount, dot11TransmittedFragmentCount=dot11TransmittedFragmentCount, dot11FrameDuplicateCount=dot11FrameDuplicateCount, dlink=dlink, dot11resAttribute=dot11resAttribute, dot11ResourceTypeIDName=dot11ResourceTypeIDName, dot11TempType=dot11TempType, dlkEnterpriseAPsys=dlkEnterpriseAPsys, dot11DeauthenticateStation=dot11DeauthenticateStation, dot11mac=dot11mac, dot11AuthenticationAlgorithm=dot11AuthenticationAlgorithm, dot11manufacturerProductName=dot11manufacturerProductName, dot11DeauthenticateReason=dot11DeauthenticateReason, dot11TxPowerLevel3=dot11TxPowerLevel3, dot11TxPowerLevel6=dot11TxPowerLevel6, dlkEnterpriseAPlan=dlkEnterpriseAPlan, dot11AccessPointMode=dot11AccessPointMode, dot11DiversitySupport=dot11DiversitySupport, dot11StationID=dot11StationID, dot11ExcludeUnencrypted=dot11ExcludeUnencrypted, dot11WEPKeyMappingLength=dot11WEPKeyMappingLength)
