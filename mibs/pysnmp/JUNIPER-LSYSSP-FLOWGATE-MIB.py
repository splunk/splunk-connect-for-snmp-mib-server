#
# PySNMP MIB module JUNIPER-LSYSSP-FLOWGATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSP-FLOWGATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
jnxLsysSpFlowgate, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpFlowgate")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter64, Counter32, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, Unsigned32, IpAddress, NotificationType, ModuleIdentity, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Counter32", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "Unsigned32", "IpAddress", "NotificationType", "ModuleIdentity", "TimeTicks", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxLsysSpFlowgateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1))
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpFlowgateMIB.setOrganization('Juniper Networks, Inc.')
jnxLsysSpFlowgateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1))
jnxLsysSpFlowgateSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2))
jnxLsysSpFlowgateTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpFlowgateTable.setStatus('current')
jnxLsysSpFlowgateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSP-FLOWGATE-MIB", "jnxLsysSpFlowgateLsysName"))
if mibBuilder.loadTexts: jnxLsysSpFlowgateEntry.setStatus('current')
jnxLsysSpFlowgateLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpFlowgateLsysName.setStatus('current')
jnxLsysSpFlowgateProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateProfileName.setStatus('current')
jnxLsysSpFlowgateUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateUsage.setStatus('current')
jnxLsysSpFlowgateReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateReserved.setStatus('current')
jnxLsysSpFlowgateMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateMaximum.setStatus('current')
jnxLsysSpFlowgateUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateUsedAmount.setStatus('current')
jnxLsysSpFlowgateMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateMaxQuota.setStatus('current')
jnxLsysSpFlowgateAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateAvailableAmount.setStatus('current')
jnxLsysSpFlowgateHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateHeaviestUsage.setStatus('current')
jnxLsysSpFlowgateHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateHeaviestUser.setStatus('current')
jnxLsysSpFlowgateLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateLightestUsage.setStatus('current')
jnxLsysSpFlowgateLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 5, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowgateLightestUser.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-LSYSSP-FLOWGATE-MIB", jnxLsysSpFlowgateHeaviestUser=jnxLsysSpFlowgateHeaviestUser, jnxLsysSpFlowgateMIB=jnxLsysSpFlowgateMIB, jnxLsysSpFlowgateEntry=jnxLsysSpFlowgateEntry, jnxLsysSpFlowgateLsysName=jnxLsysSpFlowgateLsysName, jnxLsysSpFlowgateUsedAmount=jnxLsysSpFlowgateUsedAmount, jnxLsysSpFlowgateHeaviestUsage=jnxLsysSpFlowgateHeaviestUsage, jnxLsysSpFlowgateLightestUsage=jnxLsysSpFlowgateLightestUsage, jnxLsysSpFlowgateLightestUser=jnxLsysSpFlowgateLightestUser, jnxLsysSpFlowgateMaxQuota=jnxLsysSpFlowgateMaxQuota, jnxLsysSpFlowgateProfileName=jnxLsysSpFlowgateProfileName, PYSNMP_MODULE_ID=jnxLsysSpFlowgateMIB, jnxLsysSpFlowgateAvailableAmount=jnxLsysSpFlowgateAvailableAmount, jnxLsysSpFlowgateObjects=jnxLsysSpFlowgateObjects, jnxLsysSpFlowgateMaximum=jnxLsysSpFlowgateMaximum, jnxLsysSpFlowgateUsage=jnxLsysSpFlowgateUsage, jnxLsysSpFlowgateReserved=jnxLsysSpFlowgateReserved, jnxLsysSpFlowgateSummary=jnxLsysSpFlowgateSummary, jnxLsysSpFlowgateTable=jnxLsysSpFlowgateTable)
