#
# PySNMP MIB module SMUX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SMUX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:59:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Unsigned32, Bits, TimeTicks, MibIdentifier, ObjectIdentity, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, ModuleIdentity, NotificationType, enterprises, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "Bits", "TimeTicks", "MibIdentifier", "ObjectIdentity", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "ModuleIdentity", "NotificationType", "enterprises", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
unix = MibIdentifier((1, 3, 6, 1, 4, 1, 4))
smux = MibIdentifier((1, 3, 6, 1, 4, 1, 4, 4))
smuxPeerTable = MibTable((1, 3, 6, 1, 4, 1, 4, 4, 1), )
if mibBuilder.loadTexts: smuxPeerTable.setStatus('mandatory')
smuxPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4, 4, 1, 1), ).setIndexNames((0, "SMUX-MIB", "smuxPindex"))
if mibBuilder.loadTexts: smuxPeerEntry.setStatus('mandatory')
smuxPindex = MibTableColumn((1, 3, 6, 1, 4, 1, 4, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smuxPindex.setStatus('mandatory')
smuxPidentity = MibTableColumn((1, 3, 6, 1, 4, 1, 4, 4, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smuxPidentity.setStatus('mandatory')
smuxPdescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4, 4, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smuxPdescription.setStatus('mandatory')
smuxPstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("connecting", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smuxPstatus.setStatus('mandatory')
smuxTreeTable = MibTable((1, 3, 6, 1, 4, 1, 4, 4, 2), )
if mibBuilder.loadTexts: smuxTreeTable.setStatus('mandatory')
smuxTreeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4, 4, 2, 1), ).setIndexNames((0, "SMUX-MIB", "smuxTsubtree"), (0, "SMUX-MIB", "smuxTpriority"))
if mibBuilder.loadTexts: smuxTreeEntry.setStatus('mandatory')
smuxTsubtree = MibTableColumn((1, 3, 6, 1, 4, 1, 4, 4, 2, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smuxTsubtree.setStatus('mandatory')
smuxTpriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: smuxTpriority.setStatus('mandatory')
smuxTindex = MibTableColumn((1, 3, 6, 1, 4, 1, 4, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smuxTindex.setStatus('mandatory')
smuxTstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smuxTstatus.setStatus('mandatory')
mibBuilder.exportSymbols("SMUX-MIB", smuxPdescription=smuxPdescription, smuxPindex=smuxPindex, smuxPeerEntry=smuxPeerEntry, smuxPstatus=smuxPstatus, smuxTpriority=smuxTpriority, smuxTreeEntry=smuxTreeEntry, smuxTindex=smuxTindex, smuxPidentity=smuxPidentity, smuxTsubtree=smuxTsubtree, smuxPeerTable=smuxPeerTable, unix=unix, smuxTstatus=smuxTstatus, smuxTreeTable=smuxTreeTable, smux=smux)
