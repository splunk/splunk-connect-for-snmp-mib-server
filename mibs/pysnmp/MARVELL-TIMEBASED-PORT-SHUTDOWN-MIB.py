#
# PySNMP MIB module MARVELL-TIMEBASED-PORT-SHUTDOWN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MARVELL-TIMEBASED-PORT-SHUTDOWN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:00:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, MibIdentifier, ObjectIdentity, Gauge32, iso, ModuleIdentity, Counter32, TimeTicks, Integer32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "ObjectIdentity", "Gauge32", "iso", "ModuleIdentity", "Counter32", "TimeTicks", "Integer32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
rlTimeBasedPort = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 208))
rlTimeBasedPort.setRevisions(('2011-08-06 00:00',))
if mibBuilder.loadTexts: rlTimeBasedPort.setLastUpdated('201108060000Z')
if mibBuilder.loadTexts: rlTimeBasedPort.setOrganization('Marvell Semiconductor, Inc.')
rlTimeBasedPortVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 208, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTimeBasedPortVersion.setStatus('current')
rlTimeBasedPortTable = MibTable((1, 3, 6, 1, 4, 1, 89, 208, 2), )
if mibBuilder.loadTexts: rlTimeBasedPortTable.setStatus('current')
rlTimeBasedPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 208, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "MARVELL-TIMEBASED-PORT-SHUTDOWN-MIB", "rlTimeBasedPortTimeRangeName"))
if mibBuilder.loadTexts: rlTimeBasedPortEntry.setStatus('current')
rlTimeBasedPortTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 208, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: rlTimeBasedPortTimeRangeName.setStatus('current')
rlTimeBasedPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 208, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeBasedPortAction.setStatus('current')
rlTimeBasedPortActive = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 208, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTimeBasedPortActive.setStatus('current')
rlTimeBasedPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 208, 2, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeBasedPortRowStatus.setStatus('current')
mibBuilder.exportSymbols("MARVELL-TIMEBASED-PORT-SHUTDOWN-MIB", rlTimeBasedPortTable=rlTimeBasedPortTable, rlTimeBasedPortRowStatus=rlTimeBasedPortRowStatus, rlTimeBasedPortTimeRangeName=rlTimeBasedPortTimeRangeName, rlTimeBasedPortActive=rlTimeBasedPortActive, rlTimeBasedPortVersion=rlTimeBasedPortVersion, rlTimeBasedPortEntry=rlTimeBasedPortEntry, PYSNMP_MODULE_ID=rlTimeBasedPort, rlTimeBasedPort=rlTimeBasedPort, rlTimeBasedPortAction=rlTimeBasedPortAction)
