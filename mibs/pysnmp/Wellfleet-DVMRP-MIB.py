#
# PySNMP MIB module Wellfleet-DVMRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-DVMRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Integer32, NotificationType, Counter32, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, Counter64, Gauge32, TimeTicks, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "NotificationType", "Counter32", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "Counter64", "Gauge32", "TimeTicks", "ObjectIdentity", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfDvmrpGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfDvmrpGroup")
wfDvmrpBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1))
wfDvmrpBaseCreate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseCreate.setStatus('mandatory')
wfDvmrpBaseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseEnable.setStatus('mandatory')
wfDvmrpBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpBaseState.setStatus('mandatory')
wfDvmrpBaseFullUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseFullUpdateInterval.setStatus('mandatory')
wfDvmrpBaseTriggeredUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 1000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseTriggeredUpdateInterval.setStatus('mandatory')
wfDvmrpBaseLeafTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 4000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseLeafTimeout.setStatus('mandatory')
wfDvmrpBaseNeighborTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(35, 8000)).clone(35)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseNeighborTimeout.setStatus('mandatory')
wfDvmrpBaseRouteExpirationTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 4000)).clone(140)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseRouteExpirationTimeout.setStatus('mandatory')
wfDvmrpBaseGarbageTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40, 8000)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseGarbageTimeout.setStatus('mandatory')
wfDvmrpBaseEstimatedRoutes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2147483647)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseEstimatedRoutes.setStatus('mandatory')
wfDvmrpBaseNeighborProbeInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseNeighborProbeInterval.setStatus('mandatory')
wfDvmrpBaseRouteSwitchTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 2000)).clone(140)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseRouteSwitchTimeout.setStatus('mandatory')
wfDvmrpBaseActualRoutes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpBaseActualRoutes.setStatus('mandatory')
wfDvmrpBaseDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 14), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseDebugLevel.setStatus('mandatory')
wfDvmrpBasePruningEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBasePruningEnable.setStatus('mandatory')
wfDvmrpBaseFragmentMtuThreshold = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(910, 2147483647)).clone(1514)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseFragmentMtuThreshold.setStatus('obsolete')
wfDvmrpBaseMaxRoutes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseMaxRoutes.setStatus('mandatory')
wfDvmrpBasePolicyEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBasePolicyEnable.setStatus('obsolete')
wfDvmrpBaseHolddownEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpBaseHolddownEnable.setStatus('mandatory')
wfDvmrpCircuitEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2), )
if mibBuilder.loadTexts: wfDvmrpCircuitEntryTable.setStatus('mandatory')
wfDvmrpCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1), ).setIndexNames((0, "Wellfleet-DVMRP-MIB", "wfDvmrpCircuitCCT"))
if mibBuilder.loadTexts: wfDvmrpCircuitEntry.setStatus('mandatory')
wfDvmrpCircuitCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitCreate.setStatus('mandatory')
wfDvmrpCircuitEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitEnable.setStatus('mandatory')
wfDvmrpCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("invalid", 4), ("notpres", 5))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitState.setStatus('mandatory')
wfDvmrpCircuitCCT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitCCT.setStatus('mandatory')
wfDvmrpCircuitRouteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitRouteEnable.setStatus('mandatory')
wfDvmrpCircuitMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitMetric.setStatus('mandatory')
wfDvmrpCircuitRouteThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitRouteThreshold.setStatus('mandatory')
wfDvmrpCircuitInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitInPkts.setStatus('mandatory')
wfDvmrpCircuitOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitOutPkts.setStatus('mandatory')
wfDvmrpCircuitInRouteUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitInRouteUpdates.setStatus('mandatory')
wfDvmrpCircuitOutRouteUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitOutRouteUpdates.setStatus('mandatory')
wfDvmrpCircuitInPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitInPktDiscards.setStatus('mandatory')
wfDvmrpCircuitOutPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitOutPktDiscards.setStatus('mandatory')
wfDvmrpCircuitFwdCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 512)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitFwdCacheSize.setStatus('mandatory')
wfDvmrpCircuitFwdCacheTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(7200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitFwdCacheTTL.setStatus('mandatory')
wfDvmrpCircuitAdvertiseSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitAdvertiseSelf.setStatus('mandatory')
wfDvmrpCircuitFwdCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitFwdCacheEntries.setStatus('mandatory')
wfDvmrpCircuitInPrunePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitInPrunePkts.setStatus('mandatory')
wfDvmrpCircuitOutPrunePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitOutPrunePkts.setStatus('mandatory')
wfDvmrpCircuitInGraftPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitInGraftPkts.setStatus('mandatory')
wfDvmrpCircuitOutGraftPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitOutGraftPkts.setStatus('mandatory')
wfDvmrpCircuitInGraftAckPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitInGraftAckPkts.setStatus('mandatory')
wfDvmrpCircuitOutGraftAckPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitOutGraftAckPkts.setStatus('mandatory')
wfDvmrpCircuitDefaultRouteSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("generate", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitDefaultRouteSupply.setStatus('mandatory')
wfDvmrpCircuitDefaultRouteListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitDefaultRouteListen.setStatus('mandatory')
wfDvmrpCircuitReportDependProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitReportDependProbe.setStatus('mandatory')
wfDvmrpCircuitPruneLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(7200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpCircuitPruneLifeTime.setStatus('mandatory')
wfDvmrpCircuitAcceptAggregateRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitAcceptAggregateRoutes.setStatus('mandatory')
wfDvmrpCircuitAnnounceAggregatedRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpCircuitAnnounceAggregatedRoutes.setStatus('mandatory')
wfDvmrpTunnelEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3), )
if mibBuilder.loadTexts: wfDvmrpTunnelEntryTable.setStatus('mandatory')
wfDvmrpTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1), ).setIndexNames((0, "Wellfleet-DVMRP-MIB", "wfDvmrpTunnelCCT"), (0, "Wellfleet-DVMRP-MIB", "wfDvmrpTunnelLocalRouterIpAddress"), (0, "Wellfleet-DVMRP-MIB", "wfDvmrpTunnelRemoteRouterIpAddress"))
if mibBuilder.loadTexts: wfDvmrpTunnelEntry.setStatus('mandatory')
wfDvmrpTunnelCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelCreate.setStatus('mandatory')
wfDvmrpTunnelEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelEnable.setStatus('mandatory')
wfDvmrpTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("invalid", 4), ("notpres", 5))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelState.setStatus('mandatory')
wfDvmrpTunnelCCT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelCCT.setStatus('mandatory')
wfDvmrpTunnelRemoteRouterIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelRemoteRouterIpAddress.setStatus('mandatory')
wfDvmrpTunnelEncapsMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip-in-ip", 1), ("lssr", 2))).clone('ip-in-ip')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelEncapsMode.setStatus('mandatory')
wfDvmrpTunnelMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelMetric.setStatus('mandatory')
wfDvmrpTunnelThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelThreshold.setStatus('mandatory')
wfDvmrpTunnelInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelInPkts.setStatus('mandatory')
wfDvmrpTunnelOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelOutPkts.setStatus('mandatory')
wfDvmrpTunnelInRouteUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelInRouteUpdates.setStatus('mandatory')
wfDvmrpTunnelOutRouteUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelOutRouteUpdates.setStatus('mandatory')
wfDvmrpTunnelInPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelInPktDiscards.setStatus('mandatory')
wfDvmrpTunnelOutPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelOutPktDiscards.setStatus('mandatory')
wfDvmrpTunnelLocalRouterIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelLocalRouterIpAddress.setStatus('mandatory')
wfDvmrpTunnelFwdCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 512)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelFwdCacheSize.setStatus('mandatory')
wfDvmrpTunnelFwdCacheTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(7200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelFwdCacheTTL.setStatus('mandatory')
wfDvmrpTunnelFwdCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelFwdCacheEntries.setStatus('mandatory')
wfDvmrpTunnelInPrunePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelInPrunePkts.setStatus('mandatory')
wfDvmrpTunnelOutPrunePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelOutPrunePkts.setStatus('mandatory')
wfDvmrpTunnelInGraftPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelInGraftPkts.setStatus('mandatory')
wfDvmrpTunnelOutGraftPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelOutGraftPkts.setStatus('mandatory')
wfDvmrpTunnelInGraftAckPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelInGraftAckPkts.setStatus('mandatory')
wfDvmrpTunnelOutGraftAckPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelOutGraftAckPkts.setStatus('mandatory')
wfDvmrpTunnelDefaultRouteSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("generate", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelDefaultRouteSupply.setStatus('mandatory')
wfDvmrpTunnelDefaultRouteListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelDefaultRouteListen.setStatus('mandatory')
wfDvmrpTunnelCtrlMsgMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("native", 1), ("ip-in-ip", 2))).clone('native')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelCtrlMsgMode.setStatus('mandatory')
wfDvmrpTunnelReportDependProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelReportDependProbe.setStatus('mandatory')
wfDvmrpTunnelPruneLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(7200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDvmrpTunnelPruneLifeTime.setStatus('mandatory')
wfDvmrpTunnelAcceptAggregateRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelAcceptAggregateRoutes.setStatus('mandatory')
wfDvmrpTunnelAnnounceAggregatedRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 3, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpTunnelAnnounceAggregatedRoutes.setStatus('mandatory')
wfDvmrpRouteEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4), )
if mibBuilder.loadTexts: wfDvmrpRouteEntryTable.setStatus('mandatory')
wfDvmrpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1), ).setIndexNames((0, "Wellfleet-DVMRP-MIB", "wfDvmrpRouteSourceNetwork"))
if mibBuilder.loadTexts: wfDvmrpRouteEntry.setStatus('mandatory')
wfDvmrpRouteSourceNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteSourceNetwork.setStatus('mandatory')
wfDvmrpRouteSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteSourceMask.setStatus('mandatory')
wfDvmrpRouteNextHopRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteNextHopRouter.setStatus('mandatory')
wfDvmrpRouteNextHopInterfaceCCT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteNextHopInterfaceCCT.setStatus('mandatory')
wfDvmrpRouteNextHopInterfaceTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteNextHopInterfaceTunnelId.setStatus('mandatory')
wfDvmrpRouteNextHopInterfaceLocalTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteNextHopInterfaceLocalTunnelId.setStatus('mandatory')
wfDvmrpRouteTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteTimer.setStatus('mandatory')
wfDvmrpRouteState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteState.setStatus('mandatory')
wfDvmrpRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteMetric.setStatus('mandatory')
wfDvmrpRouteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteProtocol.setStatus('mandatory')
wfDvmrpRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteType.setStatus('mandatory')
wfDvmrpRouteAggregatedType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteAggregatedType.setStatus('mandatory')
wfDvmrpRouteInterfaceEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5), )
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceEntryTable.setStatus('mandatory')
wfDvmrpRouteInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1), ).setIndexNames((0, "Wellfleet-DVMRP-MIB", "wfDvmrpRouteInterfaceSourceNetwork"), (0, "Wellfleet-DVMRP-MIB", "wfDvmrpRouteInterfaceParentCCT"), (0, "Wellfleet-DVMRP-MIB", "wfDvmrpRouteInterfaceParentLocalTunnelId"), (0, "Wellfleet-DVMRP-MIB", "wfDvmrpRouteInterfaceParentTunnelId"))
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceEntry.setStatus('mandatory')
wfDvmrpRouteInterfaceSourceNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceSourceNetwork.setStatus('mandatory')
wfDvmrpRouteInterfaceSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceSourceMask.setStatus('mandatory')
wfDvmrpRouteInterfaceNextHopInterfaceCCT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceNextHopInterfaceCCT.setStatus('mandatory')
wfDvmrpRouteInterfaceNextHopInterfaceLocalTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceNextHopInterfaceLocalTunnelId.setStatus('mandatory')
wfDvmrpRouteInterfaceNextHopInterfaceTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceNextHopInterfaceTunnelId.setStatus('mandatory')
wfDvmrpRouteInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceState.setStatus('mandatory')
wfDvmrpRouteInterfaceDominantRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceDominantRouter.setStatus('mandatory')
wfDvmrpRouteInterfaceSubordinateRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceSubordinateRouter.setStatus('mandatory')
wfDvmrpRouteInterfaceHoldDownTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceHoldDownTimer.setStatus('mandatory')
wfDvmrpRouteInterfaceSPInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceSPInDiscards.setStatus('obsolete')
wfDvmrpRouteInterfaceSPOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceSPOutDiscards.setStatus('obsolete')
wfDvmrpRouteInterfaceThresholdOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceThresholdOutDiscards.setStatus('obsolete')
wfDvmrpRouteInterfaceInSuccessfulPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceInSuccessfulPkts.setStatus('obsolete')
wfDvmrpRouteInterfaceOutSuccessfulPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceOutSuccessfulPkts.setStatus('obsolete')
wfDvmrpRouteInterfaceParentCCT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceParentCCT.setStatus('mandatory')
wfDvmrpRouteInterfaceParentLocalTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceParentLocalTunnelId.setStatus('mandatory')
wfDvmrpRouteInterfaceParentTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 5, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpRouteInterfaceParentTunnelId.setStatus('mandatory')
wfDvmrpNeighboringRouterEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6), )
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterEntryTable.setStatus('mandatory')
wfDvmrpNeighboringRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1), ).setIndexNames((0, "Wellfleet-DVMRP-MIB", "wfDvmrpNeighboringRouterCCT"), (0, "Wellfleet-DVMRP-MIB", "wfDvmrpNeighboringRouterLocalTunnelId"), (0, "Wellfleet-DVMRP-MIB", "wfDvmrpNeighboringRouterTunnelId"), (0, "Wellfleet-DVMRP-MIB", "wfDvmrpNeighboringRouterIpAddr"))
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterEntry.setStatus('mandatory')
wfDvmrpNeighboringRouterCCT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterCCT.setStatus('mandatory')
wfDvmrpNeighboringRouterLocalTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterLocalTunnelId.setStatus('mandatory')
wfDvmrpNeighboringRouterTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterTunnelId.setStatus('mandatory')
wfDvmrpNeighboringRouterIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterIpAddr.setStatus('mandatory')
wfDvmrpNeighboringRouterState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterState.setStatus('mandatory')
wfDvmrpNeighboringRouterTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterTimer.setStatus('mandatory')
wfDvmrpNeighboringRouterGenId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterGenId.setStatus('mandatory')
wfDvmrpNeighboringRouterMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterMajorVersion.setStatus('mandatory')
wfDvmrpNeighboringRouterMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterMinorVersion.setStatus('mandatory')
wfDvmrpNeighboringRouterCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 12, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDvmrpNeighboringRouterCapabilities.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-DVMRP-MIB", wfDvmrpBaseFullUpdateInterval=wfDvmrpBaseFullUpdateInterval, wfDvmrpRouteInterfaceNextHopInterfaceLocalTunnelId=wfDvmrpRouteInterfaceNextHopInterfaceLocalTunnelId, wfDvmrpNeighboringRouterIpAddr=wfDvmrpNeighboringRouterIpAddr, wfDvmrpCircuitDefaultRouteSupply=wfDvmrpCircuitDefaultRouteSupply, wfDvmrpTunnelOutPrunePkts=wfDvmrpTunnelOutPrunePkts, wfDvmrpNeighboringRouterCCT=wfDvmrpNeighboringRouterCCT, wfDvmrpBaseFragmentMtuThreshold=wfDvmrpBaseFragmentMtuThreshold, wfDvmrpRouteAggregatedType=wfDvmrpRouteAggregatedType, wfDvmrpRouteInterfaceHoldDownTimer=wfDvmrpRouteInterfaceHoldDownTimer, wfDvmrpCircuitEnable=wfDvmrpCircuitEnable, wfDvmrpTunnelDefaultRouteSupply=wfDvmrpTunnelDefaultRouteSupply, wfDvmrpRouteInterfaceSubordinateRouter=wfDvmrpRouteInterfaceSubordinateRouter, wfDvmrpNeighboringRouterEntry=wfDvmrpNeighboringRouterEntry, wfDvmrpTunnelFwdCacheTTL=wfDvmrpTunnelFwdCacheTTL, wfDvmrpBasePolicyEnable=wfDvmrpBasePolicyEnable, wfDvmrpRouteSourceMask=wfDvmrpRouteSourceMask, wfDvmrpCircuitOutGraftAckPkts=wfDvmrpCircuitOutGraftAckPkts, wfDvmrpRouteInterfaceState=wfDvmrpRouteInterfaceState, wfDvmrpBaseActualRoutes=wfDvmrpBaseActualRoutes, wfDvmrpTunnelPruneLifeTime=wfDvmrpTunnelPruneLifeTime, wfDvmrpRouteTimer=wfDvmrpRouteTimer, wfDvmrpCircuitOutRouteUpdates=wfDvmrpCircuitOutRouteUpdates, wfDvmrpTunnelInGraftPkts=wfDvmrpTunnelInGraftPkts, wfDvmrpTunnelMetric=wfDvmrpTunnelMetric, wfDvmrpBaseCreate=wfDvmrpBaseCreate, wfDvmrpRouteMetric=wfDvmrpRouteMetric, wfDvmrpBaseNeighborProbeInterval=wfDvmrpBaseNeighborProbeInterval, wfDvmrpTunnelRemoteRouterIpAddress=wfDvmrpTunnelRemoteRouterIpAddress, wfDvmrpBase=wfDvmrpBase, wfDvmrpTunnelEnable=wfDvmrpTunnelEnable, wfDvmrpCircuitDefaultRouteListen=wfDvmrpCircuitDefaultRouteListen, wfDvmrpRouteInterfaceEntry=wfDvmrpRouteInterfaceEntry, wfDvmrpCircuitReportDependProbe=wfDvmrpCircuitReportDependProbe, wfDvmrpTunnelAcceptAggregateRoutes=wfDvmrpTunnelAcceptAggregateRoutes, wfDvmrpTunnelFwdCacheSize=wfDvmrpTunnelFwdCacheSize, wfDvmrpNeighboringRouterTunnelId=wfDvmrpNeighboringRouterTunnelId, wfDvmrpTunnelEntryTable=wfDvmrpTunnelEntryTable, wfDvmrpNeighboringRouterMajorVersion=wfDvmrpNeighboringRouterMajorVersion, wfDvmrpRouteInterfaceOutSuccessfulPkts=wfDvmrpRouteInterfaceOutSuccessfulPkts, wfDvmrpTunnelOutPkts=wfDvmrpTunnelOutPkts, wfDvmrpBaseMaxRoutes=wfDvmrpBaseMaxRoutes, wfDvmrpTunnelEntry=wfDvmrpTunnelEntry, wfDvmrpNeighboringRouterCapabilities=wfDvmrpNeighboringRouterCapabilities, wfDvmrpNeighboringRouterEntryTable=wfDvmrpNeighboringRouterEntryTable, wfDvmrpCircuitInGraftAckPkts=wfDvmrpCircuitInGraftAckPkts, wfDvmrpBaseRouteExpirationTimeout=wfDvmrpBaseRouteExpirationTimeout, wfDvmrpCircuitState=wfDvmrpCircuitState, wfDvmrpRouteInterfaceSPOutDiscards=wfDvmrpRouteInterfaceSPOutDiscards, wfDvmrpCircuitInRouteUpdates=wfDvmrpCircuitInRouteUpdates, wfDvmrpRouteEntry=wfDvmrpRouteEntry, wfDvmrpRouteInterfaceNextHopInterfaceCCT=wfDvmrpRouteInterfaceNextHopInterfaceCCT, wfDvmrpTunnelLocalRouterIpAddress=wfDvmrpTunnelLocalRouterIpAddress, wfDvmrpBaseHolddownEnable=wfDvmrpBaseHolddownEnable, wfDvmrpNeighboringRouterLocalTunnelId=wfDvmrpNeighboringRouterLocalTunnelId, wfDvmrpTunnelCCT=wfDvmrpTunnelCCT, wfDvmrpTunnelState=wfDvmrpTunnelState, wfDvmrpRouteNextHopInterfaceCCT=wfDvmrpRouteNextHopInterfaceCCT, wfDvmrpCircuitOutPrunePkts=wfDvmrpCircuitOutPrunePkts, wfDvmrpTunnelInPkts=wfDvmrpTunnelInPkts, wfDvmrpTunnelInRouteUpdates=wfDvmrpTunnelInRouteUpdates, wfDvmrpNeighboringRouterTimer=wfDvmrpNeighboringRouterTimer, wfDvmrpNeighboringRouterState=wfDvmrpNeighboringRouterState, wfDvmrpRouteInterfaceSourceMask=wfDvmrpRouteInterfaceSourceMask, wfDvmrpRouteInterfaceParentLocalTunnelId=wfDvmrpRouteInterfaceParentLocalTunnelId, wfDvmrpRouteType=wfDvmrpRouteType, wfDvmrpTunnelCtrlMsgMode=wfDvmrpTunnelCtrlMsgMode, wfDvmrpCircuitInPkts=wfDvmrpCircuitInPkts, wfDvmrpCircuitEntry=wfDvmrpCircuitEntry, wfDvmrpCircuitInPrunePkts=wfDvmrpCircuitInPrunePkts, wfDvmrpCircuitOutGraftPkts=wfDvmrpCircuitOutGraftPkts, wfDvmrpTunnelThreshold=wfDvmrpTunnelThreshold, wfDvmrpTunnelInPrunePkts=wfDvmrpTunnelInPrunePkts, wfDvmrpNeighboringRouterMinorVersion=wfDvmrpNeighboringRouterMinorVersion, wfDvmrpCircuitOutPkts=wfDvmrpCircuitOutPkts, wfDvmrpCircuitFwdCacheEntries=wfDvmrpCircuitFwdCacheEntries, wfDvmrpTunnelFwdCacheEntries=wfDvmrpTunnelFwdCacheEntries, wfDvmrpRouteEntryTable=wfDvmrpRouteEntryTable, wfDvmrpRouteProtocol=wfDvmrpRouteProtocol, wfDvmrpCircuitFwdCacheTTL=wfDvmrpCircuitFwdCacheTTL, wfDvmrpBaseEstimatedRoutes=wfDvmrpBaseEstimatedRoutes, wfDvmrpCircuitRouteThreshold=wfDvmrpCircuitRouteThreshold, wfDvmrpTunnelOutRouteUpdates=wfDvmrpTunnelOutRouteUpdates, wfDvmrpRouteInterfaceDominantRouter=wfDvmrpRouteInterfaceDominantRouter, wfDvmrpBaseTriggeredUpdateInterval=wfDvmrpBaseTriggeredUpdateInterval, wfDvmrpCircuitEntryTable=wfDvmrpCircuitEntryTable, wfDvmrpCircuitAdvertiseSelf=wfDvmrpCircuitAdvertiseSelf, wfDvmrpTunnelReportDependProbe=wfDvmrpTunnelReportDependProbe, wfDvmrpRouteInterfaceParentCCT=wfDvmrpRouteInterfaceParentCCT, wfDvmrpRouteSourceNetwork=wfDvmrpRouteSourceNetwork, wfDvmrpBaseDebugLevel=wfDvmrpBaseDebugLevel, wfDvmrpTunnelInGraftAckPkts=wfDvmrpTunnelInGraftAckPkts, wfDvmrpRouteNextHopRouter=wfDvmrpRouteNextHopRouter, wfDvmrpRouteInterfaceThresholdOutDiscards=wfDvmrpRouteInterfaceThresholdOutDiscards, wfDvmrpRouteState=wfDvmrpRouteState, wfDvmrpRouteInterfaceSPInDiscards=wfDvmrpRouteInterfaceSPInDiscards, wfDvmrpRouteInterfaceNextHopInterfaceTunnelId=wfDvmrpRouteInterfaceNextHopInterfaceTunnelId, wfDvmrpBaseRouteSwitchTimeout=wfDvmrpBaseRouteSwitchTimeout, wfDvmrpCircuitInGraftPkts=wfDvmrpCircuitInGraftPkts, wfDvmrpCircuitCreate=wfDvmrpCircuitCreate, wfDvmrpCircuitAnnounceAggregatedRoutes=wfDvmrpCircuitAnnounceAggregatedRoutes, wfDvmrpRouteInterfaceParentTunnelId=wfDvmrpRouteInterfaceParentTunnelId, wfDvmrpBaseState=wfDvmrpBaseState, wfDvmrpBaseNeighborTimeout=wfDvmrpBaseNeighborTimeout, wfDvmrpTunnelInPktDiscards=wfDvmrpTunnelInPktDiscards, wfDvmrpTunnelOutGraftAckPkts=wfDvmrpTunnelOutGraftAckPkts, wfDvmrpRouteInterfaceSourceNetwork=wfDvmrpRouteInterfaceSourceNetwork, wfDvmrpRouteNextHopInterfaceLocalTunnelId=wfDvmrpRouteNextHopInterfaceLocalTunnelId, wfDvmrpBasePruningEnable=wfDvmrpBasePruningEnable, wfDvmrpBaseGarbageTimeout=wfDvmrpBaseGarbageTimeout, wfDvmrpRouteNextHopInterfaceTunnelId=wfDvmrpRouteNextHopInterfaceTunnelId, wfDvmrpCircuitFwdCacheSize=wfDvmrpCircuitFwdCacheSize, wfDvmrpTunnelDefaultRouteListen=wfDvmrpTunnelDefaultRouteListen, wfDvmrpTunnelOutPktDiscards=wfDvmrpTunnelOutPktDiscards, wfDvmrpBaseLeafTimeout=wfDvmrpBaseLeafTimeout, wfDvmrpTunnelAnnounceAggregatedRoutes=wfDvmrpTunnelAnnounceAggregatedRoutes, wfDvmrpCircuitPruneLifeTime=wfDvmrpCircuitPruneLifeTime, wfDvmrpTunnelOutGraftPkts=wfDvmrpTunnelOutGraftPkts, wfDvmrpCircuitCCT=wfDvmrpCircuitCCT, wfDvmrpCircuitRouteEnable=wfDvmrpCircuitRouteEnable, wfDvmrpRouteInterfaceInSuccessfulPkts=wfDvmrpRouteInterfaceInSuccessfulPkts, wfDvmrpTunnelEncapsMode=wfDvmrpTunnelEncapsMode, wfDvmrpBaseEnable=wfDvmrpBaseEnable, wfDvmrpCircuitInPktDiscards=wfDvmrpCircuitInPktDiscards, wfDvmrpNeighboringRouterGenId=wfDvmrpNeighboringRouterGenId, wfDvmrpCircuitAcceptAggregateRoutes=wfDvmrpCircuitAcceptAggregateRoutes, wfDvmrpTunnelCreate=wfDvmrpTunnelCreate, wfDvmrpCircuitMetric=wfDvmrpCircuitMetric, wfDvmrpRouteInterfaceEntryTable=wfDvmrpRouteInterfaceEntryTable, wfDvmrpCircuitOutPktDiscards=wfDvmrpCircuitOutPktDiscards)
