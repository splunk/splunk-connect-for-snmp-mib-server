#
# PySNMP MIB module VDSL-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VDSL-LINE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:46:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
HCPerfTimeElapsed, HCPerfValidIntervals, HCPerfCurrentCount, HCPerfIntervalCount, HCPerfInvalidIntervals, HCPerfIntervalThreshold = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfTimeElapsed", "HCPerfValidIntervals", "HCPerfCurrentCount", "HCPerfIntervalCount", "HCPerfInvalidIntervals", "HCPerfIntervalThreshold")
ZeroBasedCounter64, = mibBuilder.importSymbols("HCNUM-TC", "ZeroBasedCounter64")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, ObjectIdentity, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, transmission, NotificationType, Counter64, Counter32, IpAddress, Integer32, Bits, ModuleIdentity, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "transmission", "NotificationType", "Counter64", "Counter32", "IpAddress", "Integer32", "Bits", "ModuleIdentity", "Unsigned32", "TimeTicks")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
vdslMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 97))
vdslMIB.setRevisions(('2004-02-19 00:00',))
if mibBuilder.loadTexts: vdslMIB.setLastUpdated('200402190000Z')
if mibBuilder.loadTexts: vdslMIB.setOrganization('ADSLMIB Working Group')
vdslLineMib = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 97, 1))
vdslMibObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 97, 1, 1))
class VdslLineCodingType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("mcm", 2), ("scm", 3))

class VdslLineEntity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("vtuc", 1), ("vtur", 2))

vdslLineTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 1), )
if mibBuilder.loadTexts: vdslLineTable.setStatus('current')
vdslLineEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: vdslLineEntry.setStatus('current')
vdslLineCoding = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 1, 1, 1), VdslLineCodingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineCoding.setStatus('current')
vdslLineType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noChannel", 1), ("fastOnly", 2), ("interleavedOnly", 3), ("fastOrInterleaved", 4), ("fastAndInterleaved", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineType.setStatus('current')
vdslLineConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdslLineConfProfile.setStatus('current')
vdslLineAlarmConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdslLineAlarmConfProfile.setStatus('current')
vdslPhysTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2), )
if mibBuilder.loadTexts: vdslPhysTable.setStatus('current')
vdslPhysEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-MIB", "vdslPhysSide"))
if mibBuilder.loadTexts: vdslPhysEntry.setStatus('current')
vdslPhysSide = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 1), VdslLineEntity())
if mibBuilder.loadTexts: vdslPhysSide.setStatus('current')
vdslPhysInvSerialNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysInvSerialNumber.setStatus('current')
vdslPhysInvVendorID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysInvVendorID.setStatus('current')
vdslPhysInvVersionNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysInvVersionNumber.setStatus('current')
vdslPhysCurrSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127))).setUnits('0.25dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysCurrSnrMgn.setStatus('current')
vdslPhysCurrAtn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('0.25dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysCurrAtn.setStatus('current')
vdslPhysCurrStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 7), Bits().clone(namedValues=NamedValues(("noDefect", 0), ("lossOfFraming", 1), ("lossOfSignal", 2), ("lossOfPower", 3), ("lossOfSignalQuality", 4), ("lossOfLink", 5), ("dataInitFailure", 6), ("configInitFailure", 7), ("protocolInitFailure", 8), ("noPeerVtuPresent", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysCurrStatus.setStatus('current')
vdslPhysCurrOutputPwr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160))).setUnits('0.1dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysCurrOutputPwr.setStatus('current')
vdslPhysCurrAttainableRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 9), Gauge32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysCurrAttainableRate.setStatus('current')
vdslPhysCurrLineRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 2, 1, 10), Gauge32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPhysCurrLineRate.setStatus('current')
vdslChanTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 3), )
if mibBuilder.loadTexts: vdslChanTable.setStatus('current')
vdslChanEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-MIB", "vdslPhysSide"))
if mibBuilder.loadTexts: vdslChanEntry.setStatus('current')
vdslChanInterleaveDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 3, 1, 1), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanInterleaveDelay.setStatus('current')
vdslChanCrcBlockLength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 3, 1, 2), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCrcBlockLength.setStatus('current')
vdslChanCurrTxRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 3, 1, 3), Gauge32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurrTxRate.setStatus('current')
vdslChanCurrTxSlowBurstProtect = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 3, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1275))).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurrTxSlowBurstProtect.setStatus('current')
vdslChanCurrTxFastFec = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 3, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurrTxFastFec.setStatus('current')
vdslPerfDataTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4), )
if mibBuilder.loadTexts: vdslPerfDataTable.setStatus('current')
vdslPerfDataEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-MIB", "vdslPhysSide"))
if mibBuilder.loadTexts: vdslPerfDataEntry.setStatus('current')
vdslPerfDataValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 1), HCPerfValidIntervals()).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataValidIntervals.setStatus('current')
vdslPerfDataInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 2), HCPerfInvalidIntervals()).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataInvalidIntervals.setStatus('current')
vdslPerfDataLofs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataLofs.setStatus('current')
vdslPerfDataLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataLoss.setStatus('current')
vdslPerfDataLprs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataLprs.setStatus('current')
vdslPerfDataLols = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataLols.setStatus('current')
vdslPerfDataESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataESs.setStatus('current')
vdslPerfDataSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataSESs.setStatus('current')
vdslPerfDataUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataUASs.setStatus('current')
vdslPerfDataInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 10), Unsigned32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataInits.setStatus('current')
vdslPerfDataCurr15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 11), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinTimeElapsed.setStatus('current')
vdslPerfDataCurr15MinLofs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 12), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinLofs.setStatus('current')
vdslPerfDataCurr15MinLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 13), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinLoss.setStatus('current')
vdslPerfDataCurr15MinLprs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 14), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinLprs.setStatus('current')
vdslPerfDataCurr15MinLols = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 15), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinLols.setStatus('current')
vdslPerfDataCurr15MinESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 16), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinESs.setStatus('current')
vdslPerfDataCurr15MinSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 17), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinSESs.setStatus('current')
vdslPerfDataCurr15MinUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 18), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinUASs.setStatus('current')
vdslPerfDataCurr15MinInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 19), HCPerfCurrentCount()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr15MinInits.setStatus('current')
vdslPerfData1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 20), HCPerfValidIntervals()).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfData1DayValidIntervals.setStatus('current')
vdslPerfData1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 21), HCPerfInvalidIntervals()).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfData1DayInvalidIntervals.setStatus('current')
vdslPerfDataCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 22), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DayTimeElapsed.setStatus('current')
vdslPerfDataCurr1DayLofs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 23), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DayLofs.setStatus('current')
vdslPerfDataCurr1DayLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 24), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DayLoss.setStatus('current')
vdslPerfDataCurr1DayLprs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 25), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DayLprs.setStatus('current')
vdslPerfDataCurr1DayLols = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 26), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DayLols.setStatus('current')
vdslPerfDataCurr1DayESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 27), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DayESs.setStatus('current')
vdslPerfDataCurr1DaySESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 28), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DaySESs.setStatus('current')
vdslPerfDataCurr1DayUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 29), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DayUASs.setStatus('current')
vdslPerfDataCurr1DayInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 4, 1, 30), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfDataCurr1DayInits.setStatus('current')
vdslPerfIntervalTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5), )
if mibBuilder.loadTexts: vdslPerfIntervalTable.setStatus('current')
vdslPerfIntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-MIB", "vdslPhysSide"), (0, "VDSL-LINE-MIB", "vdslPerfIntervalNumber"))
if mibBuilder.loadTexts: vdslPerfIntervalEntry.setStatus('current')
vdslPerfIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: vdslPerfIntervalNumber.setStatus('current')
vdslPerfIntervalLofs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 2), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfIntervalLofs.setStatus('current')
vdslPerfIntervalLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 3), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfIntervalLoss.setStatus('current')
vdslPerfIntervalLprs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 4), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfIntervalLprs.setStatus('current')
vdslPerfIntervalLols = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 5), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfIntervalLols.setStatus('current')
vdslPerfIntervalESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 6), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfIntervalESs.setStatus('current')
vdslPerfIntervalSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 7), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfIntervalSESs.setStatus('current')
vdslPerfIntervalUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 8), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfIntervalUASs.setStatus('current')
vdslPerfIntervalInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 5, 1, 9), HCPerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerfIntervalInits.setStatus('current')
vdslPerf1DayIntervalTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6), )
if mibBuilder.loadTexts: vdslPerf1DayIntervalTable.setStatus('current')
vdslPerf1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-MIB", "vdslPhysSide"), (0, "VDSL-LINE-MIB", "vdslPerf1DayIntervalNumber"))
if mibBuilder.loadTexts: vdslPerf1DayIntervalEntry.setStatus('current')
vdslPerf1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: vdslPerf1DayIntervalNumber.setStatus('current')
vdslPerf1DayIntervalMoniSecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalMoniSecs.setStatus('current')
vdslPerf1DayIntervalLofs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalLofs.setStatus('current')
vdslPerf1DayIntervalLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalLoss.setStatus('current')
vdslPerf1DayIntervalLprs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalLprs.setStatus('current')
vdslPerf1DayIntervalLols = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalLols.setStatus('current')
vdslPerf1DayIntervalESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalESs.setStatus('current')
vdslPerf1DayIntervalSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalSESs.setStatus('current')
vdslPerf1DayIntervalUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalUASs.setStatus('current')
vdslPerf1DayIntervalInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 6, 1, 10), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslPerf1DayIntervalInits.setStatus('current')
vdslChanPerfDataTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7), )
if mibBuilder.loadTexts: vdslChanPerfDataTable.setStatus('current')
vdslChanPerfDataEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-MIB", "vdslPhysSide"))
if mibBuilder.loadTexts: vdslChanPerfDataEntry.setStatus('current')
vdslChanValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 1), HCPerfValidIntervals()).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanValidIntervals.setStatus('current')
vdslChanInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 2), HCPerfInvalidIntervals()).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanInvalidIntervals.setStatus('current')
vdslChanFixedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 3), ZeroBasedCounter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanFixedOctets.setStatus('current')
vdslChanBadBlks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 4), ZeroBasedCounter64()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanBadBlks.setStatus('current')
vdslChanCurr15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 5), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurr15MinTimeElapsed.setStatus('current')
vdslChanCurr15MinFixedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 6), HCPerfCurrentCount()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurr15MinFixedOctets.setStatus('current')
vdslChanCurr15MinBadBlks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 7), HCPerfCurrentCount()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurr15MinBadBlks.setStatus('current')
vdslChan1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 8), HCPerfValidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChan1DayValidIntervals.setStatus('current')
vdslChan1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 9), HCPerfInvalidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChan1DayInvalidIntervals.setStatus('current')
vdslChanCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 10), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurr1DayTimeElapsed.setStatus('current')
vdslChanCurr1DayFixedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 11), HCPerfCurrentCount()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurr1DayFixedOctets.setStatus('current')
vdslChanCurr1DayBadBlks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 7, 1, 12), HCPerfCurrentCount()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanCurr1DayBadBlks.setStatus('current')
vdslChanIntervalTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 8), )
if mibBuilder.loadTexts: vdslChanIntervalTable.setStatus('current')
vdslChanIntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-MIB", "vdslPhysSide"), (0, "VDSL-LINE-MIB", "vdslChanIntervalNumber"))
if mibBuilder.loadTexts: vdslChanIntervalEntry.setStatus('current')
vdslChanIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: vdslChanIntervalNumber.setStatus('current')
vdslChanIntervalFixedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 8, 1, 2), HCPerfIntervalCount()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanIntervalFixedOctets.setStatus('current')
vdslChanIntervalBadBlks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 8, 1, 3), HCPerfIntervalCount()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChanIntervalBadBlks.setStatus('current')
vdslChan1DayIntervalTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 9), )
if mibBuilder.loadTexts: vdslChan1DayIntervalTable.setStatus('current')
vdslChan1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-MIB", "vdslPhysSide"), (0, "VDSL-LINE-MIB", "vdslChan1DayIntervalNumber"))
if mibBuilder.loadTexts: vdslChan1DayIntervalEntry.setStatus('current')
vdslChan1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: vdslChan1DayIntervalNumber.setStatus('current')
vdslChan1DayIntervalMoniSecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 9, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChan1DayIntervalMoniSecs.setStatus('current')
vdslChan1DayIntervalFixedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 9, 1, 3), HCPerfCurrentCount()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChan1DayIntervalFixedOctets.setStatus('current')
vdslChan1DayIntervalBadBlks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 9, 1, 4), HCPerfCurrentCount()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslChan1DayIntervalBadBlks.setStatus('current')
vdslLineConfProfileTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11), )
if mibBuilder.loadTexts: vdslLineConfProfileTable.setStatus('current')
vdslLineConfProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1), ).setIndexNames((0, "VDSL-LINE-MIB", "vdslLineConfProfileName"))
if mibBuilder.loadTexts: vdslLineConfProfileEntry.setStatus('current')
vdslLineConfProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: vdslLineConfProfileName.setStatus('current')
vdslLineConfDownRateMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("adaptAtInit", 2))).clone('adaptAtInit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownRateMode.setStatus('current')
vdslLineConfUpRateMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("adaptAtInit", 2))).clone('adaptAtInit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpRateMode.setStatus('current')
vdslLineConfDownMaxPwr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 58))).setUnits('0.25dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownMaxPwr.setStatus('current')
vdslLineConfUpMaxPwr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 58))).setUnits('0.25dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpMaxPwr.setStatus('current')
vdslLineConfDownMaxSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setUnits('0.25dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownMaxSnrMgn.setStatus('current')
vdslLineConfDownMinSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setUnits('0.25dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownMinSnrMgn.setStatus('current')
vdslLineConfDownTargetSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setUnits('0.25dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownTargetSnrMgn.setStatus('current')
vdslLineConfUpMaxSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setUnits('0.25dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpMaxSnrMgn.setStatus('current')
vdslLineConfUpMinSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setUnits('0.25dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpMinSnrMgn.setStatus('current')
vdslLineConfUpTargetSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setUnits('0.25dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpTargetSnrMgn.setStatus('current')
vdslLineConfDownFastMaxDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 12), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownFastMaxDataRate.setStatus('current')
vdslLineConfDownFastMinDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 13), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownFastMinDataRate.setStatus('current')
vdslLineConfDownSlowMaxDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 14), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownSlowMaxDataRate.setStatus('current')
vdslLineConfDownSlowMinDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 15), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownSlowMinDataRate.setStatus('current')
vdslLineConfUpFastMaxDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 16), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpFastMaxDataRate.setStatus('current')
vdslLineConfUpFastMinDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 17), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpFastMinDataRate.setStatus('current')
vdslLineConfUpSlowMaxDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 18), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpSlowMaxDataRate.setStatus('current')
vdslLineConfUpSlowMinDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 19), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpSlowMinDataRate.setStatus('current')
vdslLineConfDownRateRatio = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownRateRatio.setStatus('current')
vdslLineConfUpRateRatio = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpRateRatio.setStatus('current')
vdslLineConfDownMaxInterDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownMaxInterDelay.setStatus('current')
vdslLineConfUpMaxInterDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpMaxInterDelay.setStatus('current')
vdslLineConfDownPboControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("auto", 2), ("manual", 3))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownPboControl.setStatus('current')
vdslLineConfUpPboControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("auto", 2), ("manual", 3))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpPboControl.setStatus('current')
vdslLineConfDownPboLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 160))).setUnits('0.25dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownPboLevel.setStatus('current')
vdslLineConfUpPboLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 160))).setUnits('0.25dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpPboLevel.setStatus('current')
vdslLineConfDeploymentScenario = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fttCab", 1), ("fttEx", 2), ("other", 3))).clone('fttCab')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDeploymentScenario.setStatus('current')
vdslLineConfAdslPresence = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("adslOverPots", 2), ("adslOverISDN", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfAdslPresence.setStatus('current')
vdslLineConfApplicableStandard = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ansi", 1), ("etsi", 2), ("itu", 3), ("other", 4))).clone('ansi')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfApplicableStandard.setStatus('current')
vdslLineConfBandPlan = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bandPlan997", 1), ("bandPlan998", 2), ("bandPlanFx", 3), ("other", 4))).clone('bandPlan997')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfBandPlan.setStatus('current')
vdslLineConfBandPlanFx = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3750, 12000)).clone(3750)).setUnits('kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfBandPlanFx.setStatus('current')
vdslLineConfBandOptUsage = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unused", 1), ("upstream", 2), ("downstream", 3))).clone('unused')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfBandOptUsage.setStatus('current')
vdslLineConfUpPsdTemplate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("templateMask1", 1), ("templateMask2", 2))).clone('templateMask1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpPsdTemplate.setStatus('current')
vdslLineConfDownPsdTemplate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("templateMask1", 1), ("templateMask2", 2))).clone('templateMask1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownPsdTemplate.setStatus('current')
vdslLineConfHamBandMask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 36), Bits().clone(namedValues=NamedValues(("customNotch1", 0), ("customNotch2", 1), ("amateurBand30m", 2), ("amateurBand40m", 3), ("amateurBand80m", 4), ("amateurBand160m", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfHamBandMask.setStatus('current')
vdslLineConfCustomNotch1Start = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 37), Unsigned32()).setUnits('kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfCustomNotch1Start.setStatus('current')
vdslLineConfCustomNotch1Stop = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 38), Unsigned32()).setUnits('kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfCustomNotch1Stop.setStatus('current')
vdslLineConfCustomNotch2Start = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 39), Unsigned32()).setUnits('kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfCustomNotch2Start.setStatus('current')
vdslLineConfCustomNotch2Stop = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 40), Unsigned32()).setUnits('kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfCustomNotch2Stop.setStatus('current')
vdslLineConfDownTargetSlowBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 41), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1275))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownTargetSlowBurst.setStatus('current')
vdslLineConfUpTargetSlowBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 42), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1275))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpTargetSlowBurst.setStatus('current')
vdslLineConfDownMaxFastFec = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setUnits('%').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfDownMaxFastFec.setStatus('current')
vdslLineConfUpMaxFastFec = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setUnits('%').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfUpMaxFastFec.setStatus('current')
vdslLineConfLineType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noChannel", 1), ("fastOnly", 2), ("interleavedOnly", 3), ("fastOrInterleaved", 4), ("fastAndInterleaved", 5))).clone('noChannel')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfLineType.setStatus('current')
vdslLineConfProfRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 11, 1, 46), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineConfProfRowStatus.setStatus('current')
vdslLineAlarmConfProfileTable = MibTable((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20), )
if mibBuilder.loadTexts: vdslLineAlarmConfProfileTable.setStatus('current')
vdslLineAlarmConfProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1), ).setIndexNames((0, "VDSL-LINE-MIB", "vdslLineAlarmConfProfileName"))
if mibBuilder.loadTexts: vdslLineAlarmConfProfileEntry.setStatus('current')
vdslLineAlarmConfProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: vdslLineAlarmConfProfileName.setStatus('current')
vdslLineAlarmConfThresh15MinLofs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 2), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfThresh15MinLofs.setStatus('current')
vdslLineAlarmConfThresh15MinLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 3), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfThresh15MinLoss.setStatus('current')
vdslLineAlarmConfThresh15MinLprs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 4), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfThresh15MinLprs.setStatus('current')
vdslLineAlarmConfThresh15MinLols = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 5), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfThresh15MinLols.setStatus('current')
vdslLineAlarmConfThresh15MinESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 6), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfThresh15MinESs.setStatus('current')
vdslLineAlarmConfThresh15MinSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 7), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfThresh15MinSESs.setStatus('current')
vdslLineAlarmConfThresh15MinUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 8), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfThresh15MinUASs.setStatus('current')
vdslLineAlarmConfInitFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfInitFailure.setStatus('current')
vdslLineAlarmConfProfRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 97, 1, 1, 20, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineAlarmConfProfRowStatus.setStatus('current')
vdslNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 97, 1, 0))
vdslPerfLofsThreshNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 1)).setObjects(("VDSL-LINE-MIB", "vdslPerfDataCurr15MinLofs"))
if mibBuilder.loadTexts: vdslPerfLofsThreshNotification.setStatus('current')
vdslPerfLossThreshNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 2)).setObjects(("VDSL-LINE-MIB", "vdslPerfDataCurr15MinLoss"))
if mibBuilder.loadTexts: vdslPerfLossThreshNotification.setStatus('current')
vdslPerfLprsThreshNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 3)).setObjects(("VDSL-LINE-MIB", "vdslPerfDataCurr15MinLprs"))
if mibBuilder.loadTexts: vdslPerfLprsThreshNotification.setStatus('current')
vdslPerfLolsThreshNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 4)).setObjects(("VDSL-LINE-MIB", "vdslPerfDataCurr15MinLols"))
if mibBuilder.loadTexts: vdslPerfLolsThreshNotification.setStatus('current')
vdslPerfESsThreshNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 5)).setObjects(("VDSL-LINE-MIB", "vdslPerfDataCurr15MinESs"))
if mibBuilder.loadTexts: vdslPerfESsThreshNotification.setStatus('current')
vdslPerfSESsThreshNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 6)).setObjects(("VDSL-LINE-MIB", "vdslPerfDataCurr15MinSESs"))
if mibBuilder.loadTexts: vdslPerfSESsThreshNotification.setStatus('current')
vdslPerfUASsThreshNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 7)).setObjects(("VDSL-LINE-MIB", "vdslPerfDataCurr15MinUASs"))
if mibBuilder.loadTexts: vdslPerfUASsThreshNotification.setStatus('current')
vdslDownMaxSnrMgnNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 8)).setObjects(("VDSL-LINE-MIB", "vdslPhysCurrSnrMgn"))
if mibBuilder.loadTexts: vdslDownMaxSnrMgnNotification.setStatus('current')
vdslDownMinSnrMgnNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 9)).setObjects(("VDSL-LINE-MIB", "vdslPhysCurrSnrMgn"))
if mibBuilder.loadTexts: vdslDownMinSnrMgnNotification.setStatus('current')
vdslUpMaxSnrMgnNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 10)).setObjects(("VDSL-LINE-MIB", "vdslPhysCurrSnrMgn"))
if mibBuilder.loadTexts: vdslUpMaxSnrMgnNotification.setStatus('current')
vdslUpMinSnrMgnNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 11)).setObjects(("VDSL-LINE-MIB", "vdslPhysCurrSnrMgn"))
if mibBuilder.loadTexts: vdslUpMinSnrMgnNotification.setStatus('current')
vdslInitFailureNotification = NotificationType((1, 3, 6, 1, 2, 1, 10, 97, 1, 0, 12)).setObjects(("VDSL-LINE-MIB", "vdslPhysCurrStatus"))
if mibBuilder.loadTexts: vdslInitFailureNotification.setStatus('current')
vdslConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 97, 1, 3))
vdslGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 97, 1, 3, 1))
vdslCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 97, 1, 3, 2))
vdslLineMibCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 97, 1, 3, 2, 1)).setObjects(("VDSL-LINE-MIB", "vdslGroup"), ("VDSL-LINE-MIB", "vdslNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vdslLineMibCompliance = vdslLineMibCompliance.setStatus('current')
vdslGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 97, 1, 3, 1, 1)).setObjects(("VDSL-LINE-MIB", "vdslLineCoding"), ("VDSL-LINE-MIB", "vdslLineType"), ("VDSL-LINE-MIB", "vdslLineConfProfile"), ("VDSL-LINE-MIB", "vdslLineAlarmConfProfile"), ("VDSL-LINE-MIB", "vdslPhysInvSerialNumber"), ("VDSL-LINE-MIB", "vdslPhysInvVendorID"), ("VDSL-LINE-MIB", "vdslPhysInvVersionNumber"), ("VDSL-LINE-MIB", "vdslPhysCurrSnrMgn"), ("VDSL-LINE-MIB", "vdslPhysCurrAtn"), ("VDSL-LINE-MIB", "vdslPhysCurrStatus"), ("VDSL-LINE-MIB", "vdslPhysCurrOutputPwr"), ("VDSL-LINE-MIB", "vdslPhysCurrAttainableRate"), ("VDSL-LINE-MIB", "vdslPhysCurrLineRate"), ("VDSL-LINE-MIB", "vdslChanInterleaveDelay"), ("VDSL-LINE-MIB", "vdslChanCrcBlockLength"), ("VDSL-LINE-MIB", "vdslChanCurrTxRate"), ("VDSL-LINE-MIB", "vdslChanCurrTxSlowBurstProtect"), ("VDSL-LINE-MIB", "vdslChanCurrTxFastFec"), ("VDSL-LINE-MIB", "vdslPerfDataValidIntervals"), ("VDSL-LINE-MIB", "vdslPerfDataInvalidIntervals"), ("VDSL-LINE-MIB", "vdslPerfDataLofs"), ("VDSL-LINE-MIB", "vdslPerfDataLoss"), ("VDSL-LINE-MIB", "vdslPerfDataLprs"), ("VDSL-LINE-MIB", "vdslPerfDataLols"), ("VDSL-LINE-MIB", "vdslPerfDataESs"), ("VDSL-LINE-MIB", "vdslPerfDataSESs"), ("VDSL-LINE-MIB", "vdslPerfDataUASs"), ("VDSL-LINE-MIB", "vdslPerfDataInits"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinTimeElapsed"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinLofs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinLoss"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinLprs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinLols"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinESs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinSESs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinUASs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr15MinInits"), ("VDSL-LINE-MIB", "vdslPerfData1DayValidIntervals"), ("VDSL-LINE-MIB", "vdslPerfData1DayInvalidIntervals"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DayTimeElapsed"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DayLofs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DayLoss"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DayLprs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DayLols"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DayESs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DaySESs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DayUASs"), ("VDSL-LINE-MIB", "vdslPerfDataCurr1DayInits"), ("VDSL-LINE-MIB", "vdslPerfIntervalLofs"), ("VDSL-LINE-MIB", "vdslPerfIntervalLoss"), ("VDSL-LINE-MIB", "vdslPerfIntervalLprs"), ("VDSL-LINE-MIB", "vdslPerfIntervalLols"), ("VDSL-LINE-MIB", "vdslPerfIntervalESs"), ("VDSL-LINE-MIB", "vdslPerfIntervalSESs"), ("VDSL-LINE-MIB", "vdslPerfIntervalUASs"), ("VDSL-LINE-MIB", "vdslPerfIntervalInits"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalMoniSecs"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalLofs"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalLoss"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalLprs"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalLols"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalESs"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalSESs"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalUASs"), ("VDSL-LINE-MIB", "vdslPerf1DayIntervalInits"), ("VDSL-LINE-MIB", "vdslChanValidIntervals"), ("VDSL-LINE-MIB", "vdslChanInvalidIntervals"), ("VDSL-LINE-MIB", "vdslChanFixedOctets"), ("VDSL-LINE-MIB", "vdslChanBadBlks"), ("VDSL-LINE-MIB", "vdslChanCurr15MinTimeElapsed"), ("VDSL-LINE-MIB", "vdslChanCurr15MinFixedOctets"), ("VDSL-LINE-MIB", "vdslChanCurr15MinBadBlks"), ("VDSL-LINE-MIB", "vdslChan1DayValidIntervals"), ("VDSL-LINE-MIB", "vdslChan1DayInvalidIntervals"), ("VDSL-LINE-MIB", "vdslChanCurr1DayTimeElapsed"), ("VDSL-LINE-MIB", "vdslChanCurr1DayFixedOctets"), ("VDSL-LINE-MIB", "vdslChanCurr1DayBadBlks"), ("VDSL-LINE-MIB", "vdslChanIntervalFixedOctets"), ("VDSL-LINE-MIB", "vdslChanIntervalBadBlks"), ("VDSL-LINE-MIB", "vdslChan1DayIntervalMoniSecs"), ("VDSL-LINE-MIB", "vdslChan1DayIntervalFixedOctets"), ("VDSL-LINE-MIB", "vdslChan1DayIntervalBadBlks"), ("VDSL-LINE-MIB", "vdslLineConfDownRateMode"), ("VDSL-LINE-MIB", "vdslLineConfUpRateMode"), ("VDSL-LINE-MIB", "vdslLineConfDownMaxPwr"), ("VDSL-LINE-MIB", "vdslLineConfUpMaxPwr"), ("VDSL-LINE-MIB", "vdslLineConfDownMaxSnrMgn"), ("VDSL-LINE-MIB", "vdslLineConfDownMinSnrMgn"), ("VDSL-LINE-MIB", "vdslLineConfDownTargetSnrMgn"), ("VDSL-LINE-MIB", "vdslLineConfUpMaxSnrMgn"), ("VDSL-LINE-MIB", "vdslLineConfUpMinSnrMgn"), ("VDSL-LINE-MIB", "vdslLineConfUpTargetSnrMgn"), ("VDSL-LINE-MIB", "vdslLineConfDownFastMaxDataRate"), ("VDSL-LINE-MIB", "vdslLineConfDownFastMinDataRate"), ("VDSL-LINE-MIB", "vdslLineConfDownSlowMaxDataRate"), ("VDSL-LINE-MIB", "vdslLineConfDownSlowMinDataRate"), ("VDSL-LINE-MIB", "vdslLineConfUpFastMaxDataRate"), ("VDSL-LINE-MIB", "vdslLineConfUpFastMinDataRate"), ("VDSL-LINE-MIB", "vdslLineConfUpSlowMaxDataRate"), ("VDSL-LINE-MIB", "vdslLineConfUpSlowMinDataRate"), ("VDSL-LINE-MIB", "vdslLineConfDownRateRatio"), ("VDSL-LINE-MIB", "vdslLineConfUpRateRatio"), ("VDSL-LINE-MIB", "vdslLineConfDownMaxInterDelay"), ("VDSL-LINE-MIB", "vdslLineConfUpMaxInterDelay"), ("VDSL-LINE-MIB", "vdslLineConfDownPboControl"), ("VDSL-LINE-MIB", "vdslLineConfUpPboControl"), ("VDSL-LINE-MIB", "vdslLineConfDownPboLevel"), ("VDSL-LINE-MIB", "vdslLineConfUpPboLevel"), ("VDSL-LINE-MIB", "vdslLineConfDeploymentScenario"), ("VDSL-LINE-MIB", "vdslLineConfAdslPresence"), ("VDSL-LINE-MIB", "vdslLineConfApplicableStandard"), ("VDSL-LINE-MIB", "vdslLineConfBandPlan"), ("VDSL-LINE-MIB", "vdslLineConfBandPlanFx"), ("VDSL-LINE-MIB", "vdslLineConfBandOptUsage"), ("VDSL-LINE-MIB", "vdslLineConfUpPsdTemplate"), ("VDSL-LINE-MIB", "vdslLineConfDownPsdTemplate"), ("VDSL-LINE-MIB", "vdslLineConfHamBandMask"), ("VDSL-LINE-MIB", "vdslLineConfCustomNotch1Start"), ("VDSL-LINE-MIB", "vdslLineConfCustomNotch1Stop"), ("VDSL-LINE-MIB", "vdslLineConfCustomNotch2Start"), ("VDSL-LINE-MIB", "vdslLineConfCustomNotch2Stop"), ("VDSL-LINE-MIB", "vdslLineConfDownTargetSlowBurst"), ("VDSL-LINE-MIB", "vdslLineConfUpTargetSlowBurst"), ("VDSL-LINE-MIB", "vdslLineConfDownMaxFastFec"), ("VDSL-LINE-MIB", "vdslLineConfUpMaxFastFec"), ("VDSL-LINE-MIB", "vdslLineConfLineType"), ("VDSL-LINE-MIB", "vdslLineConfProfRowStatus"), ("VDSL-LINE-MIB", "vdslLineAlarmConfThresh15MinLofs"), ("VDSL-LINE-MIB", "vdslLineAlarmConfThresh15MinLoss"), ("VDSL-LINE-MIB", "vdslLineAlarmConfThresh15MinLprs"), ("VDSL-LINE-MIB", "vdslLineAlarmConfThresh15MinLols"), ("VDSL-LINE-MIB", "vdslLineAlarmConfThresh15MinESs"), ("VDSL-LINE-MIB", "vdslLineAlarmConfThresh15MinSESs"), ("VDSL-LINE-MIB", "vdslLineAlarmConfThresh15MinUASs"), ("VDSL-LINE-MIB", "vdslLineAlarmConfInitFailure"), ("VDSL-LINE-MIB", "vdslLineAlarmConfProfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vdslGroup = vdslGroup.setStatus('current')
vdslNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 97, 1, 3, 1, 2)).setObjects(("VDSL-LINE-MIB", "vdslPerfLofsThreshNotification"), ("VDSL-LINE-MIB", "vdslPerfLossThreshNotification"), ("VDSL-LINE-MIB", "vdslPerfLprsThreshNotification"), ("VDSL-LINE-MIB", "vdslPerfLolsThreshNotification"), ("VDSL-LINE-MIB", "vdslPerfESsThreshNotification"), ("VDSL-LINE-MIB", "vdslPerfSESsThreshNotification"), ("VDSL-LINE-MIB", "vdslPerfUASsThreshNotification"), ("VDSL-LINE-MIB", "vdslDownMaxSnrMgnNotification"), ("VDSL-LINE-MIB", "vdslDownMinSnrMgnNotification"), ("VDSL-LINE-MIB", "vdslUpMaxSnrMgnNotification"), ("VDSL-LINE-MIB", "vdslUpMinSnrMgnNotification"), ("VDSL-LINE-MIB", "vdslInitFailureNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vdslNotificationGroup = vdslNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("VDSL-LINE-MIB", vdslLineConfUpSlowMinDataRate=vdslLineConfUpSlowMinDataRate, vdslLineConfDownMaxFastFec=vdslLineConfDownMaxFastFec, vdslLineConfUpPsdTemplate=vdslLineConfUpPsdTemplate, vdslPerfData1DayInvalidIntervals=vdslPerfData1DayInvalidIntervals, vdslLineConfBandOptUsage=vdslLineConfBandOptUsage, vdslLineConfDownMinSnrMgn=vdslLineConfDownMinSnrMgn, vdslPerfDataLols=vdslPerfDataLols, vdslLineAlarmConfThresh15MinLols=vdslLineAlarmConfThresh15MinLols, vdslLineConfUpMaxFastFec=vdslLineConfUpMaxFastFec, vdslPerfIntervalLoss=vdslPerfIntervalLoss, vdslPerfDataTable=vdslPerfDataTable, vdslChan1DayIntervalNumber=vdslChan1DayIntervalNumber, vdslChan1DayIntervalBadBlks=vdslChan1DayIntervalBadBlks, vdslPerf1DayIntervalTable=vdslPerf1DayIntervalTable, vdslChanIntervalFixedOctets=vdslChanIntervalFixedOctets, vdslPerf1DayIntervalSESs=vdslPerf1DayIntervalSESs, vdslChanIntervalEntry=vdslChanIntervalEntry, vdslMIB=vdslMIB, vdslChanFixedOctets=vdslChanFixedOctets, vdslChanInvalidIntervals=vdslChanInvalidIntervals, vdslPhysCurrOutputPwr=vdslPhysCurrOutputPwr, vdslLineEntry=vdslLineEntry, vdslLineMibCompliance=vdslLineMibCompliance, vdslPhysInvVendorID=vdslPhysInvVendorID, VdslLineCodingType=VdslLineCodingType, vdslPerfDataCurr1DayUASs=vdslPerfDataCurr1DayUASs, vdslChanCurr1DayFixedOctets=vdslChanCurr1DayFixedOctets, vdslLineConfUpTargetSlowBurst=vdslLineConfUpTargetSlowBurst, vdslChanIntervalNumber=vdslChanIntervalNumber, vdslLineAlarmConfThresh15MinLprs=vdslLineAlarmConfThresh15MinLprs, vdslLineAlarmConfThresh15MinLofs=vdslLineAlarmConfThresh15MinLofs, vdslChan1DayValidIntervals=vdslChan1DayValidIntervals, vdslLineConfUpPboLevel=vdslLineConfUpPboLevel, vdslPerfIntervalLprs=vdslPerfIntervalLprs, vdslLineConfDownMaxSnrMgn=vdslLineConfDownMaxSnrMgn, vdslLineConfDownRateMode=vdslLineConfDownRateMode, vdslPerfDataCurr1DayTimeElapsed=vdslPerfDataCurr1DayTimeElapsed, vdslLineConfUpSlowMaxDataRate=vdslLineConfUpSlowMaxDataRate, vdslLineConfAdslPresence=vdslLineConfAdslPresence, vdslChanPerfDataTable=vdslChanPerfDataTable, vdslPerf1DayIntervalEntry=vdslPerf1DayIntervalEntry, vdslChanCurr15MinBadBlks=vdslChanCurr15MinBadBlks, vdslLineConfCustomNotch2Start=vdslLineConfCustomNotch2Start, vdslChanEntry=vdslChanEntry, vdslPerfDataCurr15MinESs=vdslPerfDataCurr15MinESs, vdslChan1DayIntervalEntry=vdslChan1DayIntervalEntry, vdslDownMinSnrMgnNotification=vdslDownMinSnrMgnNotification, vdslPerfESsThreshNotification=vdslPerfESsThreshNotification, vdslPhysInvSerialNumber=vdslPhysInvSerialNumber, vdslLineConfDownSlowMinDataRate=vdslLineConfDownSlowMinDataRate, vdslPerfDataCurr15MinInits=vdslPerfDataCurr15MinInits, vdslLineConfDownRateRatio=vdslLineConfDownRateRatio, vdslChanCurr1DayTimeElapsed=vdslChanCurr1DayTimeElapsed, vdslMibObjects=vdslMibObjects, vdslLineConfDownSlowMaxDataRate=vdslLineConfDownSlowMaxDataRate, vdslPerfDataCurr15MinTimeElapsed=vdslPerfDataCurr15MinTimeElapsed, vdslLineConfProfile=vdslLineConfProfile, vdslPerfDataCurr15MinUASs=vdslPerfDataCurr15MinUASs, vdslPerfDataCurr1DayInits=vdslPerfDataCurr1DayInits, vdslLineConfUpFastMinDataRate=vdslLineConfUpFastMinDataRate, vdslPhysEntry=vdslPhysEntry, vdslChan1DayIntervalFixedOctets=vdslChan1DayIntervalFixedOctets, vdslChanCrcBlockLength=vdslChanCrcBlockLength, vdslPerfDataLofs=vdslPerfDataLofs, vdslPerfDataInits=vdslPerfDataInits, vdslPerfDataEntry=vdslPerfDataEntry, vdslLineConfDownMaxInterDelay=vdslLineConfDownMaxInterDelay, vdslLineConfProfileTable=vdslLineConfProfileTable, PYSNMP_MODULE_ID=vdslMIB, vdslChanValidIntervals=vdslChanValidIntervals, vdslPerfDataSESs=vdslPerfDataSESs, vdslChanIntervalBadBlks=vdslChanIntervalBadBlks, vdslLineConfUpMaxInterDelay=vdslLineConfUpMaxInterDelay, vdslPerf1DayIntervalLofs=vdslPerf1DayIntervalLofs, vdslPerf1DayIntervalESs=vdslPerf1DayIntervalESs, vdslChan1DayIntervalMoniSecs=vdslChan1DayIntervalMoniSecs, vdslPerfData1DayValidIntervals=vdslPerfData1DayValidIntervals, vdslLineAlarmConfProfileTable=vdslLineAlarmConfProfileTable, vdslPerfLossThreshNotification=vdslPerfLossThreshNotification, vdslLineAlarmConfThresh15MinUASs=vdslLineAlarmConfThresh15MinUASs, vdslChanCurr15MinFixedOctets=vdslChanCurr15MinFixedOctets, vdslLineConfUpMaxPwr=vdslLineConfUpMaxPwr, vdslPerfDataLprs=vdslPerfDataLprs, vdslPhysCurrLineRate=vdslPhysCurrLineRate, vdslPerfDataCurr15MinLprs=vdslPerfDataCurr15MinLprs, vdslPerfDataCurr1DayLols=vdslPerfDataCurr1DayLols, vdslPerf1DayIntervalLprs=vdslPerf1DayIntervalLprs, vdslLineConfProfRowStatus=vdslLineConfProfRowStatus, VdslLineEntity=VdslLineEntity, vdslChanCurrTxSlowBurstProtect=vdslChanCurrTxSlowBurstProtect, vdslPerfDataCurr1DayLofs=vdslPerfDataCurr1DayLofs, vdslPerf1DayIntervalInits=vdslPerf1DayIntervalInits, vdslPhysSide=vdslPhysSide, vdslLineAlarmConfProfileName=vdslLineAlarmConfProfileName, vdslLineAlarmConfThresh15MinSESs=vdslLineAlarmConfThresh15MinSESs, vdslLineTable=vdslLineTable, vdslNotificationGroup=vdslNotificationGroup, vdslDownMaxSnrMgnNotification=vdslDownMaxSnrMgnNotification, vdslPerfDataESs=vdslPerfDataESs, vdslLineConfLineType=vdslLineConfLineType, vdslChanTable=vdslChanTable, vdslLineConfDeploymentScenario=vdslLineConfDeploymentScenario, vdslLineConfDownMaxPwr=vdslLineConfDownMaxPwr, vdslLineConfCustomNotch1Stop=vdslLineConfCustomNotch1Stop, vdslPhysCurrAtn=vdslPhysCurrAtn, vdslPerfIntervalLols=vdslPerfIntervalLols, vdslLineType=vdslLineType, vdslLineConfProfileEntry=vdslLineConfProfileEntry, vdslPerfDataCurr1DayESs=vdslPerfDataCurr1DayESs, vdslLineConfUpMinSnrMgn=vdslLineConfUpMinSnrMgn, vdslChanCurrTxRate=vdslChanCurrTxRate, vdslLineConfUpFastMaxDataRate=vdslLineConfUpFastMaxDataRate, vdslLineConfBandPlan=vdslLineConfBandPlan, vdslChanCurr1DayBadBlks=vdslChanCurr1DayBadBlks, vdslConformance=vdslConformance, vdslPerfDataCurr15MinLofs=vdslPerfDataCurr15MinLofs, vdslPerf1DayIntervalUASs=vdslPerf1DayIntervalUASs, vdslLineAlarmConfProfile=vdslLineAlarmConfProfile, vdslPerfDataCurr15MinLols=vdslPerfDataCurr15MinLols, vdslChan1DayInvalidIntervals=vdslChan1DayInvalidIntervals, vdslPerfDataCurr15MinSESs=vdslPerfDataCurr15MinSESs, vdslLineConfDownPboControl=vdslLineConfDownPboControl, vdslPerf1DayIntervalMoniSecs=vdslPerf1DayIntervalMoniSecs, vdslPerfIntervalLofs=vdslPerfIntervalLofs, vdslPhysCurrSnrMgn=vdslPhysCurrSnrMgn, vdslPerf1DayIntervalLoss=vdslPerf1DayIntervalLoss, vdslChanCurr15MinTimeElapsed=vdslChanCurr15MinTimeElapsed, vdslLineConfUpRateMode=vdslLineConfUpRateMode, vdslPerfLolsThreshNotification=vdslPerfLolsThreshNotification, vdslChanBadBlks=vdslChanBadBlks, vdslPerfLprsThreshNotification=vdslPerfLprsThreshNotification, vdslPhysInvVersionNumber=vdslPhysInvVersionNumber, vdslLineConfDownFastMaxDataRate=vdslLineConfDownFastMaxDataRate, vdslLineConfDownFastMinDataRate=vdslLineConfDownFastMinDataRate, vdslPerfDataCurr1DayLoss=vdslPerfDataCurr1DayLoss, vdslPerfIntervalESs=vdslPerfIntervalESs, vdslLineMib=vdslLineMib, vdslLineConfUpPboControl=vdslLineConfUpPboControl, vdslLineCoding=vdslLineCoding, vdslLineConfUpMaxSnrMgn=vdslLineConfUpMaxSnrMgn, vdslChanIntervalTable=vdslChanIntervalTable, vdslChan1DayIntervalTable=vdslChan1DayIntervalTable, vdslPhysCurrAttainableRate=vdslPhysCurrAttainableRate, vdslLineConfBandPlanFx=vdslLineConfBandPlanFx, vdslLineConfApplicableStandard=vdslLineConfApplicableStandard, vdslPerfIntervalTable=vdslPerfIntervalTable, vdslLineAlarmConfThresh15MinESs=vdslLineAlarmConfThresh15MinESs, vdslPerfIntervalUASs=vdslPerfIntervalUASs, vdslLineConfCustomNotch2Stop=vdslLineConfCustomNotch2Stop, vdslPerfUASsThreshNotification=vdslPerfUASsThreshNotification, vdslChanInterleaveDelay=vdslChanInterleaveDelay, vdslCompliances=vdslCompliances, vdslLineConfCustomNotch1Start=vdslLineConfCustomNotch1Start, vdslLineAlarmConfInitFailure=vdslLineAlarmConfInitFailure, vdslPerfDataUASs=vdslPerfDataUASs, vdslLineConfDownPsdTemplate=vdslLineConfDownPsdTemplate, vdslPerfIntervalNumber=vdslPerfIntervalNumber, vdslPerfLofsThreshNotification=vdslPerfLofsThreshNotification, vdslPerfDataCurr15MinLoss=vdslPerfDataCurr15MinLoss, vdslLineAlarmConfProfileEntry=vdslLineAlarmConfProfileEntry, vdslLineConfDownTargetSlowBurst=vdslLineConfDownTargetSlowBurst, vdslUpMaxSnrMgnNotification=vdslUpMaxSnrMgnNotification, vdslPerfIntervalEntry=vdslPerfIntervalEntry, vdslPerf1DayIntervalNumber=vdslPerf1DayIntervalNumber, vdslPerfDataCurr1DayLprs=vdslPerfDataCurr1DayLprs, vdslUpMinSnrMgnNotification=vdslUpMinSnrMgnNotification, vdslLineConfUpRateRatio=vdslLineConfUpRateRatio, vdslGroup=vdslGroup, vdslPerfIntervalInits=vdslPerfIntervalInits, vdslPerfDataValidIntervals=vdslPerfDataValidIntervals, vdslLineConfHamBandMask=vdslLineConfHamBandMask, vdslLineConfUpTargetSnrMgn=vdslLineConfUpTargetSnrMgn, vdslChanCurrTxFastFec=vdslChanCurrTxFastFec, vdslChanPerfDataEntry=vdslChanPerfDataEntry, vdslLineAlarmConfProfRowStatus=vdslLineAlarmConfProfRowStatus, vdslPerf1DayIntervalLols=vdslPerf1DayIntervalLols, vdslNotifications=vdslNotifications, vdslInitFailureNotification=vdslInitFailureNotification, vdslLineConfDownTargetSnrMgn=vdslLineConfDownTargetSnrMgn, vdslPerfDataCurr1DaySESs=vdslPerfDataCurr1DaySESs, vdslPhysTable=vdslPhysTable, vdslLineAlarmConfThresh15MinLoss=vdslLineAlarmConfThresh15MinLoss, vdslPerfDataLoss=vdslPerfDataLoss, vdslLineConfDownPboLevel=vdslLineConfDownPboLevel, vdslPhysCurrStatus=vdslPhysCurrStatus, vdslPerfIntervalSESs=vdslPerfIntervalSESs, vdslGroups=vdslGroups, vdslPerfDataInvalidIntervals=vdslPerfDataInvalidIntervals, vdslLineConfProfileName=vdslLineConfProfileName, vdslPerfSESsThreshNotification=vdslPerfSESsThreshNotification)
