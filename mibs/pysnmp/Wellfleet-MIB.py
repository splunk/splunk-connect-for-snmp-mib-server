#
# PySNMP MIB module Wellfleet-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WELLFLEET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter64, ModuleIdentity, Integer32, IpAddress, MibIdentifier, TimeTicks, Gauge32, Bits, ObjectIdentity, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "ModuleIdentity", "Integer32", "IpAddress", "MibIdentifier", "TimeTicks", "Gauge32", "Bits", "ObjectIdentity", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wellfleet = MibIdentifier((1, 3, 6, 1, 4, 1, 18))
commServer = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1))
wfMib = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1))
wfXns = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 6))
wfDrs = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 29))
wfBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 31))
wfTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 32))
wfApple = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 34))
wfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 35))
wfIpx = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 41))
wfxnsMib = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1))
wfxnsidp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1))
wfxnsidpForwarding = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("host", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpForwarding.setStatus('mandatory')
wfxnsidpInReceives = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpInReceives.setStatus('mandatory')
wfxnsidpInHdrErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpInHdrErrors.setStatus('mandatory')
wfxnsidpInAddrErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpInAddrErrors.setStatus('mandatory')
wfxnsidpForwDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpForwDatagrams.setStatus('mandatory')
wfxnsidpInUnknownProtos = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpInUnknownProtos.setStatus('mandatory')
wfxnsidpInDiscards = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpInDiscards.setStatus('mandatory')
wfxnsidpInDelivers = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpInDelivers.setStatus('mandatory')
wfxnsidpOutRequests = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpOutRequests.setStatus('mandatory')
wfxnsidpOutDiscards = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpOutDiscards.setStatus('mandatory')
wfxnsidpOutNoRoutes = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpOutNoRoutes.setStatus('mandatory')
wfxnsidpErrs = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12))
wfxnsidpErrSupressed = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrSupressed.setStatus('mandatory')
wfxnsidpErrDestUnspec = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrDestUnspec.setStatus('mandatory')
wfxnsidpErrDestHdrLen = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrDestHdrLen.setStatus('mandatory')
wfxnsidpErrDestProto = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrDestProto.setStatus('mandatory')
wfxnsidpErrDestCksum = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrDestCksum.setStatus('mandatory')
wfxnsidpErrDestBadSock = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrDestBadSock.setStatus('mandatory')
wfxnsidpErrDestNoResrcs = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrDestNoResrcs.setStatus('mandatory')
wfxnsidpErrDestXitUnspec = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrDestXitUnspec.setStatus('mandatory')
wfxnsidpErrXitCksum = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrXitCksum.setStatus('mandatory')
wfxnsidpErrXitUnreach = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrXitUnreach.setStatus('mandatory')
wfxnsidpErrXitHopCnt = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrXitHopCnt.setStatus('mandatory')
wfxnsidpErrXitTooBig = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 12, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpErrXitTooBig.setStatus('mandatory')
wfxnsidpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 13), )
if mibBuilder.loadTexts: wfxnsidpAddrTable.setStatus('mandatory')
wfxnsidpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 13, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfxnsidpAddrAddress"))
if mibBuilder.loadTexts: wfxnsidpAddrEntry.setStatus('mandatory')
wfxnsidpAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 13, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpAddrAddress.setStatus('mandatory')
wfxnsidpAddrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpAddrIfIndex.setStatus('mandatory')
wfxnsidpRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14), )
if mibBuilder.loadTexts: wfxnsidpRoutingTable.setStatus('mandatory')
wfxnsidpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfxnsidpRouteDest"))
if mibBuilder.loadTexts: wfxnsidpRouteEntry.setStatus('mandatory')
wfxnsidpRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpRouteDest.setStatus('mandatory')
wfxnsidpRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpRouteIfIndex.setStatus('mandatory')
wfxnsidpRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpRouteMetric.setStatus('mandatory')
wfxnsidpRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpRouteNextHop.setStatus('mandatory')
wfxnsidpRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpRouteType.setStatus('mandatory')
wfxnsidpRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpRouteProto.setStatus('mandatory')
wfxnsidpRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 6, 1, 1, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfxnsidpRouteAge.setStatus('mandatory')
wfdrsState = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsState.setStatus('mandatory')
wfdrsArea = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsArea.setStatus('mandatory')
wfdrsNode = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsNode.setStatus('mandatory')
wfdrsRouting = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsRouting.setStatus('mandatory')
wfdrsMaxArea = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsMaxArea.setStatus('mandatory')
wfdrsMaxNode = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsMaxNode.setStatus('mandatory')
wfdrsAreaMaxHop = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsAreaMaxHop.setStatus('mandatory')
wfdrsAreaMaxCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsAreaMaxCost.setStatus('mandatory')
wfdrsNodeMaxHop = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsNodeMaxHop.setStatus('mandatory')
wfdrsNodeMaxCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsNodeMaxCost.setStatus('mandatory')
wfdrsMaxVisits = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsMaxVisits.setStatus('mandatory')
wfdrsRoutingTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsRoutingTimer.setStatus('mandatory')
wfdrsBcastRoutTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsBcastRoutTimer.setStatus('mandatory')
wfdrsBcastEnodeAdj = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsBcastEnodeAdj.setStatus('mandatory')
wfdrsIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15), )
if mibBuilder.loadTexts: wfdrsIfTable.setStatus('mandatory')
wfdrsIfTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfdrsIfTabEntIfIndex"))
if mibBuilder.loadTexts: wfdrsIfTabEntry.setStatus('mandatory')
wfdrsIfTabEntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsIfTabEntIfIndex.setStatus('mandatory')
wfdrsIfTabEntState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsIfTabEntState.setStatus('mandatory')
wfdrsIfTabEntName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsIfTabEntName.setStatus('mandatory')
wfdrsIfTabEntCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsIfTabEntCost.setStatus('mandatory')
wfdrsIfTabEntHelloTimr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsIfTabEntHelloTimr.setStatus('mandatory')
wfdrsIfTabEntRtrPrior = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsIfTabEntRtrPrior.setStatus('mandatory')
wfdrsIfTabEntNumRtrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 15, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsIfTabEntNumRtrs.setStatus('mandatory')
wfdrsAreaRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 16), )
if mibBuilder.loadTexts: wfdrsAreaRoutingTable.setStatus('mandatory')
wfdrsAreaRoute = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 16, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfdrsAreaRouteDest"))
if mibBuilder.loadTexts: wfdrsAreaRoute.setStatus('mandatory')
wfdrsAreaRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsAreaRouteDest.setStatus('mandatory')
wfdrsAreaRouteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsAreaRouteCost.setStatus('mandatory')
wfdrsAreaRouteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsAreaRouteHopCount.setStatus('mandatory')
wfdrsAreaRouteNextArea = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 16, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsAreaRouteNextArea.setStatus('mandatory')
wfdrsAreaRouteNextNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 16, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsAreaRouteNextNode.setStatus('mandatory')
wfdrsAreaRouteIf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 16, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsAreaRouteIf.setStatus('mandatory')
wfdrsNodeRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 17), )
if mibBuilder.loadTexts: wfdrsNodeRoutingTable.setStatus('mandatory')
wfdrsNodeRoute = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 17, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfdrsNodeRouteDest"))
if mibBuilder.loadTexts: wfdrsNodeRoute.setStatus('mandatory')
wfdrsNodeRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsNodeRouteDest.setStatus('mandatory')
wfdrsNodeRouteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsNodeRouteCost.setStatus('mandatory')
wfdrsNodeRouteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsNodeRouteHopCount.setStatus('mandatory')
wfdrsNodeRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsNodeRouteNextHop.setStatus('mandatory')
wfdrsNodeRouteIf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 29, 17, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfdrsNodeRouteIf.setStatus('mandatory')
wflbFwdTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 1), )
if mibBuilder.loadTexts: wflbFwdTable.setStatus('mandatory')
wflbFwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 1, 1), ).setIndexNames((0, "Wellfleet-MIB", "wflbFwdEntMacAddr"))
if mibBuilder.loadTexts: wflbFwdEntry.setStatus('mandatory')
wflbFwdEntIf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbFwdEntIf.setStatus('mandatory')
wflbFwdEntMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbFwdEntMacAddr.setStatus('mandatory')
wflbFwdEntSrcDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbFwdEntSrcDisp.setStatus('mandatory')
wflbFwdEntDstDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbFwdEntDstDisp.setStatus('mandatory')
wflbFwdEntIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbFwdEntIfName.setStatus('mandatory')
wflbFwdEntFloodStat = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forwarding", 1), ("flooding", 2), ("dropping", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbFwdEntFloodStat.setStatus('mandatory')
wflbRifTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2), )
if mibBuilder.loadTexts: wflbRifTable.setStatus('mandatory')
pysmiFakeCol1000 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1) + (1000, ), Integer32())
pysmiFakeCol1001 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1) + (1001, ), Integer32())
pysmiFakeCol1002 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1) + (1002, ), Integer32())
pysmiFakeCol1003 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1) + (1003, ), Integer32())
pysmiFakeCol1004 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1) + (1004, ), Integer32())
pysmiFakeCol1005 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1) + (1005, ), Integer32())
wflbRifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1), ).setIndexNames((0, "Wellfleet-MIB", "pysmiFakeCol1000"), (0, "Wellfleet-MIB", "pysmiFakeCol1001"), (0, "Wellfleet-MIB", "pysmiFakeCol1002"), (0, "Wellfleet-MIB", "pysmiFakeCol1003"), (0, "Wellfleet-MIB", "pysmiFakeCol1004"), (0, "Wellfleet-MIB", "pysmiFakeCol1005"))
if mibBuilder.loadTexts: wflbRifEntry.setStatus('mandatory')
wflbRifMacSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbRifMacSrcAddress.setStatus('mandatory')
wflbRifMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbRifMacAddress.setStatus('mandatory')
wflbRifCg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbRifCg.setStatus('mandatory')
wflbRif = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 31, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wflbRif.setStatus('mandatory')
wftftpFilesIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpFilesIn.setStatus('mandatory')
wftftpFilesOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpFilesOut.setStatus('mandatory')
wftftpWRQIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpWRQIn.setStatus('mandatory')
wftftpWRQOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpWRQOut.setStatus('mandatory')
wftftpRRQIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpRRQIn.setStatus('mandatory')
wftftpRRQOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpRRQOut.setStatus('mandatory')
wftftpRxmits = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpRxmits.setStatus('mandatory')
wftftpERRIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpERRIn.setStatus('mandatory')
wftftpERROut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpERROut.setStatus('mandatory')
wftftpAborts = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 32, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wftftpAborts.setStatus('mandatory')
wfappleStation = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 1))
wfappleStationRouting = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleStationRouting.setStatus('mandatory')
wfappleStationVersion = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleStationVersion.setStatus('mandatory')
wfapplePortTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2), )
if mibBuilder.loadTexts: wfapplePortTable.setStatus('mandatory')
wfapplePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfapplePortIfIndex"))
if mibBuilder.loadTexts: wfapplePortEntry.setStatus('mandatory')
wfapplePortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfapplePortIfIndex.setStatus('mandatory')
wfapplePortSeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfapplePortSeed.setStatus('mandatory')
wfapplePortMinNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfapplePortMinNet.setStatus('mandatory')
wfapplePortMaxNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfapplePortMaxNet.setStatus('mandatory')
wfapplePortNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfapplePortNetwork.setStatus('mandatory')
wfapplePortNodeID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfapplePortNodeID.setStatus('mandatory')
wfapplePortDefaultZone = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfapplePortDefaultZone.setStatus('mandatory')
wfappleDDP = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3))
wfappleDDPPktsIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleDDPPktsIn.setStatus('mandatory')
wfappleDDPPktsOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleDDPPktsOut.setStatus('mandatory')
wfappleDDPPktsFwd = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleDDPPktsFwd.setStatus('mandatory')
wfappleDDPDelivers = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleDDPDelivers.setStatus('mandatory')
wfappleDDPUnknownNet = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleDDPUnknownNet.setStatus('mandatory')
wfappleDDPHopsExceeded = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleDDPHopsExceeded.setStatus('mandatory')
wfappleDDPBadChksum = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleDDPBadChksum.setStatus('mandatory')
wfappleDDPDropped = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleDDPDropped.setStatus('mandatory')
wfappleEcho = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 4))
wfappleEchoRequestIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleEchoRequestIn.setStatus('mandatory')
wfappleEchoResponseOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleEchoResponseOut.setStatus('mandatory')
wfappleRTMP = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 5))
wfappleRTMPRequestIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRTMPRequestIn.setStatus('mandatory')
wfappleRTMPResponseOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRTMPResponseOut.setStatus('mandatory')
wfappleRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6), )
if mibBuilder.loadTexts: wfappleRoutingTable.setStatus('mandatory')
wfappleRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfappleRouteMinNet"))
if mibBuilder.loadTexts: wfappleRouteEntry.setStatus('mandatory')
wfappleRouteMinNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRouteMinNet.setStatus('mandatory')
wfappleRouteMaxNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRouteMaxNet.setStatus('mandatory')
wfappleRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRouteIfIndex.setStatus('mandatory')
wfappleRouteDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRouteDistance.setStatus('mandatory')
wfappleRouteNextNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRouteNextNet.setStatus('mandatory')
wfappleRouteNextNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRouteNextNode.setStatus('mandatory')
wfappleRouteState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleRouteState.setStatus('mandatory')
wfappleNBP = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 7))
wfappleNBPFwdReqOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleNBPFwdReqOut.setStatus('mandatory')
wfappleNBPLookupOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleNBPLookupOut.setStatus('mandatory')
wfappleNBPBcastReqIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleNBPBcastReqIn.setStatus('mandatory')
wfappleNBPFwdReqIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleNBPFwdReqIn.setStatus('mandatory')
wfappleZIP = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8))
wfappleZIPRequestOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPRequestOut.setStatus('mandatory')
wfappleZIPReplyOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPReplyOut.setStatus('mandatory')
wfappleZIPNetInfoRepOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPNetInfoRepOut.setStatus('mandatory')
wfappleZIPGetLclZoneOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPGetLclZoneOut.setStatus('mandatory')
wfappleZIPGetLclZoneRepOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPGetLclZoneRepOut.setStatus('mandatory')
wfappleZIPGetZoneListOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPGetZoneListOut.setStatus('mandatory')
wfappleZIPGetNetInfoOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPGetNetInfoOut.setStatus('mandatory')
wfappleZIPGetNetInfoIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPGetNetInfoIn.setStatus('mandatory')
wfappleZIPNetInfoRepIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPNetInfoRepIn.setStatus('mandatory')
wfappleZIPRequestIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPRequestIn.setStatus('mandatory')
wfappleZIPReplyIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPReplyIn.setStatus('mandatory')
wfappleZIPGetZoneListIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPGetZoneListIn.setStatus('mandatory')
wfappleZIPGetLclZoneIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPGetLclZoneIn.setStatus('mandatory')
wfappleZIPGetLclZoneRepIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 8, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleZIPGetLclZoneRepIn.setStatus('mandatory')
wfappleLocalZoneTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 9), )
if mibBuilder.loadTexts: wfappleLocalZoneTable.setStatus('mandatory')
wfappleLZTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 9, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfappleLZTIfIndex"))
if mibBuilder.loadTexts: wfappleLZTEntry.setStatus('mandatory')
wfappleLZTZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 9, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleLZTZoneName.setStatus('mandatory')
wfappleLZTIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleLZTIfIndex.setStatus('mandatory')
wfappleAARPTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 10), )
if mibBuilder.loadTexts: wfappleAARPTable.setStatus('mandatory')
wfappleAARPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 10, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfappleAARPNet"), (0, "Wellfleet-MIB", "wfappleAARPNode"))
if mibBuilder.loadTexts: wfappleAARPEntry.setStatus('mandatory')
wfappleAARPNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleAARPNet.setStatus('mandatory')
wfappleAARPNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleAARPNode.setStatus('mandatory')
wfappleAARPMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleAARPMacAddress.setStatus('mandatory')
wfappleAARPIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 34, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfappleAARPIfIndex.setStatus('mandatory')
wfconfigVersionMajor = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigVersionMajor.setStatus('mandatory')
wfconfigVersionMinor = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigVersionMinor.setStatus('mandatory')
wfconfigImageFileName = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigImageFileName.setStatus('mandatory')
wfconfigConfigFileName = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigConfigFileName.setStatus('mandatory')
wfconfigKeys = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 5))
wfconfigKeysBridge = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigKeysBridge.setStatus('mandatory')
wfconfigKeysDrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigKeysDrs.setStatus('mandatory')
wfconfigKeysIp = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigKeysIp.setStatus('mandatory')
wfconfigKeysX25 = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigKeysX25.setStatus('mandatory')
wfconfigKeysXns = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigKeysXns.setStatus('mandatory')
wfconfigKeysApple = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigKeysApple.setStatus('mandatory')
wfconfigHwTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 6), )
if mibBuilder.loadTexts: wfconfigHwTable.setStatus('mandatory')
wfconfigHwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 6, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfconfigHwSlot"))
if mibBuilder.loadTexts: wfconfigHwEntry.setStatus('mandatory')
wfconfigHwAceSn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigHwAceSn.setStatus('mandatory')
wfconfigHwAceRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigHwAceRev.setStatus('mandatory')
wfconfigHwModSn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigHwModSn.setStatus('mandatory')
wfconfigHwModRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigHwModRev.setStatus('mandatory')
wfconfigHwModID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigHwModID.setStatus('mandatory')
wfconfigHwSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigHwSlot.setStatus('mandatory')
wfconfigBootpRqSrvr = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigBootpRqSrvr.setStatus('mandatory')
wfconfigBootpFileSrvr = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 35, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfconfigBootpFileSrvr.setStatus('mandatory')
wfipxMib = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1))
wfipxidp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1))
wfipxidpForwarding = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("host", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpForwarding.setStatus('mandatory')
wfipxidpInReceives = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpInReceives.setStatus('mandatory')
wfipxidpInHdrErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpInHdrErrors.setStatus('mandatory')
wfipxidpInAddrErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpInAddrErrors.setStatus('mandatory')
wfipxidpForwDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpForwDatagrams.setStatus('mandatory')
wfipxidpInUnknownProtos = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpInUnknownProtos.setStatus('mandatory')
wfipxidpInDiscards = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpInDiscards.setStatus('mandatory')
wfipxidpInDelivers = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpInDelivers.setStatus('mandatory')
wfipxidpOutRequests = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpOutRequests.setStatus('mandatory')
wfipxidpOutDiscards = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpOutDiscards.setStatus('mandatory')
wfipxidpOutNoRoutes = MibScalar((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpOutNoRoutes.setStatus('mandatory')
wfipxidpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 13), )
if mibBuilder.loadTexts: wfipxidpAddrTable.setStatus('mandatory')
wfipxidpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 13, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfipxidpAddrAddress"))
if mibBuilder.loadTexts: wfipxidpAddrEntry.setStatus('mandatory')
wfipxidpAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 13, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpAddrAddress.setStatus('mandatory')
wfipxidpAddrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpAddrIfIndex.setStatus('mandatory')
wfipxidpRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14), )
if mibBuilder.loadTexts: wfipxidpRoutingTable.setStatus('mandatory')
wfipxidpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfipxidpRouteDest"))
if mibBuilder.loadTexts: wfipxidpRouteEntry.setStatus('mandatory')
wfipxidpRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpRouteDest.setStatus('mandatory')
wfipxidpRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpRouteIfIndex.setStatus('mandatory')
wfipxidpRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpRouteMetric.setStatus('mandatory')
wfipxidpRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpRouteNextHop.setStatus('mandatory')
wfipxidpRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpRouteType.setStatus('mandatory')
wfipxidpRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpRouteProto.setStatus('mandatory')
wfipxidpRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpRouteAge.setStatus('mandatory')
wfipxidpSAPTable = MibTable((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15), )
if mibBuilder.loadTexts: wfipxidpSAPTable.setStatus('mandatory')
wfipxidpSAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1), ).setIndexNames((0, "Wellfleet-MIB", "wfipxidpSAPType"), (0, "Wellfleet-MIB", "wfipxidpSAPNet"), (0, "Wellfleet-MIB", "wfipxidpSAPHost"), (0, "Wellfleet-MIB", "wfipxidpSAPSocket"), (0, "Wellfleet-MIB", "wfipxidpSAPIndex"))
if mibBuilder.loadTexts: wfipxidpSAPEntry.setStatus('mandatory')
wfipxidpSAPType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPType.setStatus('mandatory')
wfipxidpSAPNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPNet.setStatus('mandatory')
wfipxidpSAPHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPHost.setStatus('mandatory')
wfipxidpSAPSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPSocket.setStatus('mandatory')
wfipxidpSAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(48, 48)).setFixedLength(48)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPName.setStatus('mandatory')
wfipxidpSAPAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPAge.setStatus('mandatory')
wfipxidpSAPHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPHops.setStatus('mandatory')
wfipxidpSAPIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPIfIndex.setStatus('mandatory')
wfipxidpSAPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 1, 1, 41, 1, 1, 15, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfipxidpSAPIndex.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-MIB", wfipxMib=wfipxMib, wfapplePortTable=wfapplePortTable, wfconfigHwTable=wfconfigHwTable, wfipxidpSAPNet=wfipxidpSAPNet, wfconfigVersionMajor=wfconfigVersionMajor, wfipxidpAddrTable=wfipxidpAddrTable, wfappleEcho=wfappleEcho, wfdrsNodeRoutingTable=wfdrsNodeRoutingTable, wfDrs=wfDrs, wfappleEchoResponseOut=wfappleEchoResponseOut, wfipxidpForwDatagrams=wfipxidpForwDatagrams, wfXns=wfXns, wfIpx=wfIpx, wfappleLZTEntry=wfappleLZTEntry, wfconfigKeysApple=wfconfigKeysApple, wfxnsidpAddrTable=wfxnsidpAddrTable, wfappleZIPGetLclZoneRepIn=wfappleZIPGetLclZoneRepIn, wfdrsNodeRoute=wfdrsNodeRoute, wftftpWRQOut=wftftpWRQOut, wfxnsidpErrDestBadSock=wfxnsidpErrDestBadSock, wfappleDDPDelivers=wfappleDDPDelivers, wfxnsidpRouteAge=wfxnsidpRouteAge, wfappleZIPNetInfoRepIn=wfappleZIPNetInfoRepIn, wftftpFilesOut=wftftpFilesOut, wfxnsidpForwarding=wfxnsidpForwarding, wfipxidpRouteDest=wfipxidpRouteDest, wfxnsidpInDelivers=wfxnsidpInDelivers, wfappleZIP=wfappleZIP, wfconfigBootpRqSrvr=wfconfigBootpRqSrvr, wfdrsMaxVisits=wfdrsMaxVisits, wfconfigKeysDrs=wfconfigKeysDrs, wfappleRouteIfIndex=wfappleRouteIfIndex, wfipxidpRouteProto=wfipxidpRouteProto, wfxnsidpErrXitTooBig=wfxnsidpErrXitTooBig, wfxnsidp=wfxnsidp, wfappleRTMP=wfappleRTMP, wfappleRouteEntry=wfappleRouteEntry, wfipxidpAddrAddress=wfipxidpAddrAddress, wfipxidpSAPIfIndex=wfipxidpSAPIfIndex, wfxnsidpForwDatagrams=wfxnsidpForwDatagrams, wfappleZIPGetNetInfoOut=wfappleZIPGetNetInfoOut, wfdrsAreaRouteNextNode=wfdrsAreaRouteNextNode, wflbRifCg=wflbRifCg, wfdrsIfTabEntry=wfdrsIfTabEntry, wfipxidpInHdrErrors=wfipxidpInHdrErrors, wfipxidpAddrIfIndex=wfipxidpAddrIfIndex, wfxnsidpErrDestHdrLen=wfxnsidpErrDestHdrLen, wfipxidpRouteType=wfipxidpRouteType, wfipxidpRouteAge=wfipxidpRouteAge, wfipxidpSAPHops=wfipxidpSAPHops, wfappleStationVersion=wfappleStationVersion, wfappleNBPFwdReqOut=wfappleNBPFwdReqOut, wfxnsidpOutRequests=wfxnsidpOutRequests, wfipxidpOutDiscards=wfipxidpOutDiscards, wfxnsidpRouteDest=wfxnsidpRouteDest, wfappleAARPEntry=wfappleAARPEntry, wfdrsAreaRouteCost=wfdrsAreaRouteCost, wfconfigHwModSn=wfconfigHwModSn, wfappleRouteMinNet=wfappleRouteMinNet, pysmiFakeCol1005=pysmiFakeCol1005, wfappleNBP=wfappleNBP, wfdrsIfTabEntCost=wfdrsIfTabEntCost, wflbFwdEntDstDisp=wflbFwdEntDstDisp, wfappleEchoRequestIn=wfappleEchoRequestIn, wfconfigHwAceRev=wfconfigHwAceRev, wfxnsidpOutDiscards=wfxnsidpOutDiscards, wflbFwdEntMacAddr=wflbFwdEntMacAddr, wfxnsidpInDiscards=wfxnsidpInDiscards, wfapplePortIfIndex=wfapplePortIfIndex, wfappleDDPPktsIn=wfappleDDPPktsIn, wfappleZIPRequestIn=wfappleZIPRequestIn, wellfleet=wellfleet, wfBridge=wfBridge, wfdrsAreaRouteIf=wfdrsAreaRouteIf, wfdrsIfTabEntHelloTimr=wfdrsIfTabEntHelloTimr, wfApple=wfApple, wflbRifMacAddress=wflbRifMacAddress, wfxnsidpAddrIfIndex=wfxnsidpAddrIfIndex, wflbRifMacSrcAddress=wflbRifMacSrcAddress, wfdrsIfTabEntRtrPrior=wfdrsIfTabEntRtrPrior, wfappleRouteDistance=wfappleRouteDistance, wfipxidpAddrEntry=wfipxidpAddrEntry, wftftpWRQIn=wftftpWRQIn, wfdrsAreaRouteNextArea=wfdrsAreaRouteNextArea, wfappleRouteNextNet=wfappleRouteNextNet, wfconfigHwAceSn=wfconfigHwAceSn, wflbFwdTable=wflbFwdTable, pysmiFakeCol1002=pysmiFakeCol1002, wfappleZIPGetNetInfoIn=wfappleZIPGetNetInfoIn, wfappleLZTIfIndex=wfappleLZTIfIndex, wfappleNBPFwdReqIn=wfappleNBPFwdReqIn, pysmiFakeCol1004=pysmiFakeCol1004, wfconfigHwEntry=wfconfigHwEntry, wfappleDDPPktsOut=wfappleDDPPktsOut, wfipxidpRouteMetric=wfipxidpRouteMetric, wfconfigVersionMinor=wfconfigVersionMinor, wfconfigKeysBridge=wfconfigKeysBridge, commServer=commServer, wfxnsidpOutNoRoutes=wfxnsidpOutNoRoutes, wfappleDDP=wfappleDDP, wfdrsNode=wfdrsNode, wfdrsNodeMaxCost=wfdrsNodeMaxCost, wflbRif=wflbRif, wftftpAborts=wftftpAborts, wfappleZIPGetZoneListIn=wfappleZIPGetZoneListIn, wfdrsIfTable=wfdrsIfTable, wfconfigImageFileName=wfconfigImageFileName, wfipxidpSAPEntry=wfipxidpSAPEntry, wfipxidpForwarding=wfipxidpForwarding, wfxnsidpErrDestProto=wfxnsidpErrDestProto, wfxnsidpErrXitUnreach=wfxnsidpErrXitUnreach, wfconfigHwModID=wfconfigHwModID, wfipxidp=wfipxidp, wfdrsAreaMaxCost=wfdrsAreaMaxCost, wfdrsAreaRoutingTable=wfdrsAreaRoutingTable, wfdrsNodeRouteIf=wfdrsNodeRouteIf, wfappleZIPRequestOut=wfappleZIPRequestOut, wfconfigHwSlot=wfconfigHwSlot, wfappleAARPIfIndex=wfappleAARPIfIndex, wfdrsAreaRouteHopCount=wfdrsAreaRouteHopCount, wfdrsAreaMaxHop=wfdrsAreaMaxHop, wfappleRTMPResponseOut=wfappleRTMPResponseOut, wfdrsIfTabEntState=wfdrsIfTabEntState, wfdrsIfTabEntName=wfdrsIfTabEntName, wfipxidpRoutingTable=wfipxidpRoutingTable, wfxnsidpErrXitCksum=wfxnsidpErrXitCksum, wfdrsIfTabEntIfIndex=wfdrsIfTabEntIfIndex, wfxnsidpAddrAddress=wfxnsidpAddrAddress, wfappleDDPUnknownNet=wfappleDDPUnknownNet, wfipxidpSAPIndex=wfipxidpSAPIndex, wfappleZIPNetInfoRepOut=wfappleZIPNetInfoRepOut, wfdrsNodeMaxHop=wfdrsNodeMaxHop, wfapplePortSeed=wfapplePortSeed, wftftpFilesIn=wftftpFilesIn, wfapplePortMaxNet=wfapplePortMaxNet, wfappleRTMPRequestIn=wfappleRTMPRequestIn, wfconfigHwModRev=wfconfigHwModRev, wfxnsidpRouteIfIndex=wfxnsidpRouteIfIndex, wfappleRouteNextNode=wfappleRouteNextNode, wftftpRxmits=wftftpRxmits, wfdrsNodeRouteCost=wfdrsNodeRouteCost, wfappleLZTZoneName=wfappleLZTZoneName, wfappleAARPMacAddress=wfappleAARPMacAddress, wfipxidpInAddrErrors=wfipxidpInAddrErrors, wfipxidpSAPHost=wfipxidpSAPHost, wflbFwdEntIf=wflbFwdEntIf, wfdrsNodeRouteNextHop=wfdrsNodeRouteNextHop, wfxnsidpRouteNextHop=wfxnsidpRouteNextHop, wfappleStation=wfappleStation, wfappleZIPGetLclZoneOut=wfappleZIPGetLclZoneOut, wfipxidpOutRequests=wfipxidpOutRequests, wfxnsidpRouteProto=wfxnsidpRouteProto, wfxnsidpErrs=wfxnsidpErrs, wfxnsidpInHdrErrors=wfxnsidpInHdrErrors, wfdrsState=wfdrsState, wfappleNBPBcastReqIn=wfappleNBPBcastReqIn, wflbRifEntry=wflbRifEntry, wfappleZIPGetLclZoneIn=wfappleZIPGetLclZoneIn, wfxnsidpErrSupressed=wfxnsidpErrSupressed, wflbFwdEntIfName=wflbFwdEntIfName, wfconfigKeysXns=wfconfigKeysXns, wfappleRouteState=wfappleRouteState, wfipxidpRouteNextHop=wfipxidpRouteNextHop, wfxnsidpErrDestUnspec=wfxnsidpErrDestUnspec, wfappleNBPLookupOut=wfappleNBPLookupOut, wfconfigKeys=wfconfigKeys, wfipxidpRouteIfIndex=wfipxidpRouteIfIndex, wfipxidpSAPType=wfipxidpSAPType, wflbRifTable=wflbRifTable, wfappleDDPPktsFwd=wfappleDDPPktsFwd, wfipxidpSAPTable=wfipxidpSAPTable, wfxnsidpRoutingTable=wfxnsidpRoutingTable, wftftpRRQIn=wftftpRRQIn, wfxnsMib=wfxnsMib, wfxnsidpRouteMetric=wfxnsidpRouteMetric, wfMib=wfMib, wfConfig=wfConfig, wfxnsidpInUnknownProtos=wfxnsidpInUnknownProtos, wfipxidpSAPAge=wfipxidpSAPAge, wfdrsMaxNode=wfdrsMaxNode, wfappleAARPNode=wfappleAARPNode, wfconfigConfigFileName=wfconfigConfigFileName, wfipxidpOutNoRoutes=wfipxidpOutNoRoutes, wfappleLocalZoneTable=wfappleLocalZoneTable, wfconfigBootpFileSrvr=wfconfigBootpFileSrvr, wfapplePortNetwork=wfapplePortNetwork, wfapplePortDefaultZone=wfapplePortDefaultZone, wfappleStationRouting=wfappleStationRouting, wfdrsAreaRouteDest=wfdrsAreaRouteDest, wftftpERRIn=wftftpERRIn, wfdrsAreaRoute=wfdrsAreaRoute, wfapplePortNodeID=wfapplePortNodeID, pysmiFakeCol1000=pysmiFakeCol1000, wfappleDDPBadChksum=wfappleDDPBadChksum, wfconfigKeysX25=wfconfigKeysX25, wflbFwdEntFloodStat=wflbFwdEntFloodStat, wfxnsidpErrDestXitUnspec=wfxnsidpErrDestXitUnspec, wfappleZIPGetZoneListOut=wfappleZIPGetZoneListOut, wfipxidpSAPSocket=wfipxidpSAPSocket, wfxnsidpAddrEntry=wfxnsidpAddrEntry, wfxnsidpErrDestCksum=wfxnsidpErrDestCksum, wftftpERROut=wftftpERROut, wfxnsidpErrDestNoResrcs=wfxnsidpErrDestNoResrcs, wfxnsidpInReceives=wfxnsidpInReceives, pysmiFakeCol1003=pysmiFakeCol1003, wfdrsBcastEnodeAdj=wfdrsBcastEnodeAdj, wflbFwdEntSrcDisp=wflbFwdEntSrcDisp, wfdrsRouting=wfdrsRouting, wfappleDDPHopsExceeded=wfappleDDPHopsExceeded, wfappleAARPNet=wfappleAARPNet, wfapplePortEntry=wfapplePortEntry, wfipxidpInDelivers=wfipxidpInDelivers, wfxnsidpRouteType=wfxnsidpRouteType, wfxnsidpErrXitHopCnt=wfxnsidpErrXitHopCnt, wfipxidpRouteEntry=wfipxidpRouteEntry, wfipxidpInDiscards=wfipxidpInDiscards, wfdrsArea=wfdrsArea, wfdrsIfTabEntNumRtrs=wfdrsIfTabEntNumRtrs, wfdrsRoutingTimer=wfdrsRoutingTimer, wfxnsidpInAddrErrors=wfxnsidpInAddrErrors, wfappleRoutingTable=wfappleRoutingTable, wfappleAARPTable=wfappleAARPTable, wfconfigKeysIp=wfconfigKeysIp, wfappleZIPGetLclZoneRepOut=wfappleZIPGetLclZoneRepOut, wfappleDDPDropped=wfappleDDPDropped, wfTftp=wfTftp, wfappleZIPReplyIn=wfappleZIPReplyIn, wfipxidpInReceives=wfipxidpInReceives, pysmiFakeCol1001=pysmiFakeCol1001, wfappleZIPReplyOut=wfappleZIPReplyOut, wfipxidpSAPName=wfipxidpSAPName, wfdrsNodeRouteDest=wfdrsNodeRouteDest, wfdrsBcastRoutTimer=wfdrsBcastRoutTimer, wfapplePortMinNet=wfapplePortMinNet, wfipxidpInUnknownProtos=wfipxidpInUnknownProtos, wfxnsidpRouteEntry=wfxnsidpRouteEntry, wfappleRouteMaxNet=wfappleRouteMaxNet, wftftpRRQOut=wftftpRRQOut, wfdrsNodeRouteHopCount=wfdrsNodeRouteHopCount, wfdrsMaxArea=wfdrsMaxArea, wflbFwdEntry=wflbFwdEntry)
