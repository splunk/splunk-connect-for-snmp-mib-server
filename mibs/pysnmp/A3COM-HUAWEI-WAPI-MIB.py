#
# PySNMP MIB module A3COM-HUAWEI-WAPI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-WAPI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:53:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Bits, ModuleIdentity, Counter64, iso, IpAddress, ObjectIdentity, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Bits", "ModuleIdentity", "Counter64", "iso", "IpAddress", "ObjectIdentity", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "Counter32", "Gauge32")
MacAddress, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "TruthValue", "DisplayString")
h3cwapiMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77))
if mibBuilder.loadTexts: h3cwapiMIB.setLastUpdated('201012011757Z')
if mibBuilder.loadTexts: h3cwapiMIB.setOrganization('H3C Technologies Co., Ltd.')
h3cwapiMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 1))
h3cwapiMIBStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2))
h3cwapiMIBTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3))
h3cwapiTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4))
h3cwapiModeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiModeEnabled.setStatus('current')
h3cwapiASIPAddressType = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiASIPAddressType.setStatus('current')
h3cwapiASIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiASIPAddress.setStatus('current')
h3cwapiCertificateInstalled = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiCertificateInstalled.setStatus('current')
h3cwapiStatsWAISignatureErrors = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAISignatureErrors.setStatus('current')
h3cwapiStatsWAIHMACErrors = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAIHMACErrors.setStatus('current')
h3cwapiStatsWAIAuthRsltFailures = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAIAuthRsltFailures.setStatus('current')
h3cwapiStatsWAIDiscardCounters = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAIDiscardCounters.setStatus('current')
h3cwapiStatsWAITimeoutCounters = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAITimeoutCounters.setStatus('current')
h3cwapiStatsWAIFormatErrors = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAIFormatErrors.setStatus('current')
h3cwapiStatsWAICtfHskFailures = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAICtfHskFailures.setStatus('current')
h3cwapiStatsWAIUniHskFailures = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAIUniHskFailures.setStatus('current')
h3cwapiStatsWAIMulHskFailures = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiStatsWAIMulHskFailures.setStatus('current')
h3cwapiConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1), )
if mibBuilder.loadTexts: h3cwapiConfigTable.setStatus('current')
h3cwapiConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cwapiConfigEntry.setStatus('current')
h3cwapiConfigASIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigASIPAddressType.setStatus('current')
h3cwapiConfigASIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigASIPAddress.setStatus('current')
h3cwapiConfigAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("certificate", 1), ("psk", 2), ("certificatePsk", 3))).clone('certificate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigAuthMethod.setStatus('current')
h3cwapiConfigAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("radiusExtension", 2))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigAuthMode.setStatus('current')
h3cwapiConfigISPDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigISPDomain.setStatus('current')
h3cwapiConfigCertificateDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigCertificateDomain.setStatus('current')
h3cwapiConfigASName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigASName.setStatus('current')
h3cwapiConfigBKRekeyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigBKRekeyEnabled.setStatus('current')
h3cwapiConfigExtTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2), )
if mibBuilder.loadTexts: h3cwapiConfigExtTable.setStatus('current')
h3cwapiConfigExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-WAPI-MIB", "h3cwapiConfigServicePolicyID"))
if mibBuilder.loadTexts: h3cwapiConfigExtEntry.setStatus('current')
h3cwapiConfigServicePolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cwapiConfigServicePolicyID.setStatus('current')
h3cwapiConfigUnicastCipherEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigUnicastCipherEnabled.setStatus('current')
h3cwapiConfigUnicastCipherSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiConfigUnicastCipherSize.setStatus('current')
h3cwapiConfigAuthenticationSuiteEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiConfigAuthenticationSuiteEnabled.setStatus('current')
h3cwapiConfigAuthenticationSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiConfigAuthenticationSuite.setStatus('current')
h3cwapiCfgExtASIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 6), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiCfgExtASIPAddressType.setStatus('current')
h3cwapiCfgExtASIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 7), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiCfgExtASIPAddress.setStatus('current')
h3cwapiCfgExtASName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiCfgExtASName.setStatus('current')
h3cwapiCfgExtCertDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cwapiCfgExtCertDomain.setStatus('current')
h3cwapiCfgExtCertInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 3, 2, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cwapiCfgExtCertInstalled.setStatus('current')
h3cwapiTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 0))
h3cwapiUserwithInvalidCertificate = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoMacAddr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoAPId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoRadioId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoBSSId"))
if mibBuilder.loadTexts: h3cwapiUserwithInvalidCertificate.setStatus('current')
h3cwapiStationReplayAttack = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoMacAddr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoAPId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoRadioId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoBSSId"))
if mibBuilder.loadTexts: h3cwapiStationReplayAttack.setStatus('current')
h3cwapiTamperAttack = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoMacAddr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoAPId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoRadioId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoBSSId"))
if mibBuilder.loadTexts: h3cwapiTamperAttack.setStatus('current')
h3cwapiLowSafeLevelAttack = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoMacAddr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoAPId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoRadioId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoBSSId"))
if mibBuilder.loadTexts: h3cwapiLowSafeLevelAttack.setStatus('current')
h3cwapiAddressRedirectionAttack = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 0, 5)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoMacAddr"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoAPId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoRadioId"), ("A3COM-HUAWEI-WAPI-MIB", "h3cwapiTrapInfoBSSId"))
if mibBuilder.loadTexts: h3cwapiAddressRedirectionAttack.setStatus('current')
h3cwapiTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 1))
h3cwapiTrapInfoMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cwapiTrapInfoMacAddr.setStatus('current')
h3cwapiTrapInfoAPId = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cwapiTrapInfoAPId.setStatus('current')
h3cwapiTrapInfoRadioId = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cwapiTrapInfoRadioId.setStatus('current')
h3cwapiTrapInfoBSSId = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 77, 4, 1, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cwapiTrapInfoBSSId.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-WAPI-MIB", h3cwapiTamperAttack=h3cwapiTamperAttack, h3cwapiConfigAuthMode=h3cwapiConfigAuthMode, h3cwapiStatsWAISignatureErrors=h3cwapiStatsWAISignatureErrors, h3cwapiAddressRedirectionAttack=h3cwapiAddressRedirectionAttack, h3cwapiConfigTable=h3cwapiConfigTable, h3cwapiTrapInfoMacAddr=h3cwapiTrapInfoMacAddr, h3cwapiTrapInfoBSSId=h3cwapiTrapInfoBSSId, h3cwapiCfgExtCertDomain=h3cwapiCfgExtCertDomain, h3cwapiConfigAuthenticationSuiteEnabled=h3cwapiConfigAuthenticationSuiteEnabled, h3cwapiConfigExtEntry=h3cwapiConfigExtEntry, h3cwapiCfgExtASIPAddressType=h3cwapiCfgExtASIPAddressType, h3cwapiStatsWAIFormatErrors=h3cwapiStatsWAIFormatErrors, h3cwapiTrapInfoAPId=h3cwapiTrapInfoAPId, h3cwapiMIB=h3cwapiMIB, h3cwapiStatsWAIAuthRsltFailures=h3cwapiStatsWAIAuthRsltFailures, h3cwapiConfigASIPAddressType=h3cwapiConfigASIPAddressType, h3cwapiLowSafeLevelAttack=h3cwapiLowSafeLevelAttack, h3cwapiConfigAuthenticationSuite=h3cwapiConfigAuthenticationSuite, h3cwapiConfigUnicastCipherSize=h3cwapiConfigUnicastCipherSize, h3cwapiStatsWAITimeoutCounters=h3cwapiStatsWAITimeoutCounters, h3cwapiConfigAuthMethod=h3cwapiConfigAuthMethod, h3cwapiConfigServicePolicyID=h3cwapiConfigServicePolicyID, h3cwapiMIBObjects=h3cwapiMIBObjects, PYSNMP_MODULE_ID=h3cwapiMIB, h3cwapiUserwithInvalidCertificate=h3cwapiUserwithInvalidCertificate, h3cwapiConfigBKRekeyEnabled=h3cwapiConfigBKRekeyEnabled, h3cwapiModeEnabled=h3cwapiModeEnabled, h3cwapiASIPAddress=h3cwapiASIPAddress, h3cwapiConfigCertificateDomain=h3cwapiConfigCertificateDomain, h3cwapiConfigISPDomain=h3cwapiConfigISPDomain, h3cwapiConfigExtTable=h3cwapiConfigExtTable, h3cwapiCertificateInstalled=h3cwapiCertificateInstalled, h3cwapiCfgExtASIPAddress=h3cwapiCfgExtASIPAddress, h3cwapiCfgExtASName=h3cwapiCfgExtASName, h3cwapiCfgExtCertInstalled=h3cwapiCfgExtCertInstalled, h3cwapiStationReplayAttack=h3cwapiStationReplayAttack, h3cwapiStatsWAIHMACErrors=h3cwapiStatsWAIHMACErrors, h3cwapiMIBStatsObjects=h3cwapiMIBStatsObjects, h3cwapiTrapInfoRadioId=h3cwapiTrapInfoRadioId, h3cwapiConfigUnicastCipherEnabled=h3cwapiConfigUnicastCipherEnabled, h3cwapiASIPAddressType=h3cwapiASIPAddressType, h3cwapiStatsWAICtfHskFailures=h3cwapiStatsWAICtfHskFailures, h3cwapiConfigASName=h3cwapiConfigASName, h3cwapiStatsWAIDiscardCounters=h3cwapiStatsWAIDiscardCounters, h3cwapiConfigEntry=h3cwapiConfigEntry, h3cwapiTrapInfo=h3cwapiTrapInfo, h3cwapiTrap=h3cwapiTrap, h3cwapiStatsWAIUniHskFailures=h3cwapiStatsWAIUniHskFailures, h3cwapiMIBTableObjects=h3cwapiMIBTableObjects, h3cwapiTrapPrefix=h3cwapiTrapPrefix, h3cwapiStatsWAIMulHskFailures=h3cwapiStatsWAIMulHskFailures, h3cwapiConfigASIPAddress=h3cwapiConfigASIPAddress)
