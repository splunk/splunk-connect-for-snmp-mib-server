#
# PySNMP MIB module CENTILLION-BRIDGEGROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CENTILLION-BRIDGEGROUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:15:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
StatusIndicator, EnableIndicator, sysConfig = mibBuilder.importSymbols("CENTILLION-ROOT-MIB", "StatusIndicator", "EnableIndicator", "sysConfig")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, iso, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, TimeTicks, Counter64, Integer32, ModuleIdentity, NotificationType, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "TimeTicks", "Counter64", "Integer32", "ModuleIdentity", "NotificationType", "IpAddress", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class BridgeGroupId(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 32)

bridgeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24))
dot1dBaseGroupIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 1), BridgeGroupId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dBaseGroupIdentifier.setStatus('mandatory')
bridgeGroupTable = MibTable((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2), )
if mibBuilder.loadTexts: bridgeGroupTable.setStatus('mandatory')
bridgeGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1), ).setIndexNames((0, "CENTILLION-BRIDGEGROUP-MIB", "bridgeGroupIdentifier"))
if mibBuilder.loadTexts: bridgeGroupEntry.setStatus('mandatory')
bridgeGroupIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1, 1), BridgeGroupId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupIdentifier.setStatus('mandatory')
bridgeGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1, 2), StatusIndicator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupStatus.setStatus('mandatory')
bridgeGroupBaseType = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("transparent-only", 3), ("sourceroute-only", 4), ("srt", 5), ("translation", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupBaseType.setStatus('mandatory')
bridgeGroupStpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("decLb100", 3), ("ieee8021d", 4), ("ibm", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupStpProtocol.setStatus('mandatory')
bridgeGroupPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("token-ring", 2), ("ethernet", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupPortType.setStatus('mandatory')
bridgeGroupNextPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bridgeGroupNextPortIndex.setStatus('mandatory')
bridgeGroupTbRifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1, 7), EnableIndicator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupTbRifEnable.setStatus('mandatory')
bridgeGroupTbRifRing = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupTbRifRing.setStatus('mandatory')
bridgeGroupPortTable = MibTable((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 3), )
if mibBuilder.loadTexts: bridgeGroupPortTable.setStatus('mandatory')
bridgeGroupPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 3, 1), ).setIndexNames((0, "CENTILLION-BRIDGEGROUP-MIB", "bridgeGroupPortGroupId"), (0, "CENTILLION-BRIDGEGROUP-MIB", "bridgeGroupPortIndex"))
if mibBuilder.loadTexts: bridgeGroupPortEntry.setStatus('mandatory')
bridgeGroupPortGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 3, 1, 1), BridgeGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bridgeGroupPortGroupId.setStatus('mandatory')
bridgeGroupPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bridgeGroupPortIndex.setStatus('mandatory')
bridgeGroupPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 3, 1, 3), StatusIndicator()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bridgeGroupPortStatus.setStatus('mandatory')
bridgeGroupPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupPortIfIndex.setStatus('mandatory')
bridgeGroupPortSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto-span", 1), ("disabled", 2), ("forced", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupPortSpanMode.setStatus('mandatory')
bridgeGroupPortFastStart = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 2, 24, 3, 1, 6), EnableIndicator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bridgeGroupPortFastStart.setStatus('mandatory')
mibBuilder.exportSymbols("CENTILLION-BRIDGEGROUP-MIB", bridgeGroupPortEntry=bridgeGroupPortEntry, bridgeGroupStatus=bridgeGroupStatus, bridgeGroupPortTable=bridgeGroupPortTable, BridgeGroupId=BridgeGroupId, bridgeGroupPortSpanMode=bridgeGroupPortSpanMode, bridgeGroupPortGroupId=bridgeGroupPortGroupId, bridgeGroupPortStatus=bridgeGroupPortStatus, bridgeGroupEntry=bridgeGroupEntry, bridgeGroupStpProtocol=bridgeGroupStpProtocol, bridgeGroupIdentifier=bridgeGroupIdentifier, bridgeGroupBaseType=bridgeGroupBaseType, dot1dBaseGroupIdentifier=dot1dBaseGroupIdentifier, bridgeGroupPortFastStart=bridgeGroupPortFastStart, bridgeGroupTable=bridgeGroupTable, bridgeGroup=bridgeGroup, bridgeGroupPortIndex=bridgeGroupPortIndex, bridgeGroupPortIfIndex=bridgeGroupPortIfIndex, bridgeGroupTbRifRing=bridgeGroupTbRifRing, bridgeGroupNextPortIndex=bridgeGroupNextPortIndex, bridgeGroupPortType=bridgeGroupPortType, bridgeGroupTbRifEnable=bridgeGroupTbRifEnable)
