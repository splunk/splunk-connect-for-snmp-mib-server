#
# PySNMP MIB module OPTIX-SONET-LPBK-MIB-V2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OPTIX-SONET-LPBK-MIB-V2
# Produced by pysmi-0.3.4 at Mon Apr 29 20:26:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
optixCommonSonet, = mibBuilder.importSymbols("OPTIX-OID-MIB", "optixCommonSonet")
MOD2Type, = mibBuilder.importSymbols("OPTIX-SONET-TC-MIB", "MOD2Type")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, Unsigned32, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, NotificationType, TimeTicks, Counter64, Counter32, ObjectIdentity, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "NotificationType", "TimeTicks", "Counter64", "Counter32", "ObjectIdentity", "Integer32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
optixSonetMaintenance = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50))
if mibBuilder.loadTexts: optixSonetMaintenance.setLastUpdated('200602231756Z')
if mibBuilder.loadTexts: optixSonetMaintenance.setOrganization('Huawei Technologies Co.,Ltd.')
class LpbkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(255, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("noloop", 255), ("terminal", 1), ("facility", 2), ("crs", 3), ("ds1feac", 4), ("ds3feac", 5), ("fac2ni", 6))

optixSonetLoopback = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10))
lpbkStateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10), )
if mibBuilder.loadTexts: lpbkStateTable.setStatus('current')
lpbkStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10, 1), ).setIndexNames((0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkStateMOD2"), (0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkStateSlot"), (0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkStatePort"), (0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkStatePath"), (0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkStateVT"))
if mibBuilder.loadTexts: lpbkStateEntry.setStatus('current')
lpbkStateMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkStateMOD2.setStatus('current')
lpbkStateSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkStateSlot.setStatus('current')
lpbkStatePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkStatePort.setStatus('current')
lpbkStatePath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkStatePath.setStatus('current')
lpbkStateVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkStateVT.setStatus('current')
lpbkStateLpbkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10, 1, 6), LpbkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkStateLpbkType.setStatus('current')
lpbkStateTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 10, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkStateTimeout.setStatus('current')
lpbkFlagTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20), )
if mibBuilder.loadTexts: lpbkFlagTable.setStatus('current')
lpbkFlagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1), ).setIndexNames((0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagMOD2"), (0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagSlot"), (0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagPort"), (0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagPath"), (0, "OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagVT"))
if mibBuilder.loadTexts: lpbkFlagEntry.setStatus('current')
lpbkFlagMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkFlagMOD2.setStatus('current')
lpbkFlagSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkFlagSlot.setStatus('current')
lpbkFlagPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkFlagPort.setStatus('current')
lpbkFlagPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkFlagPath.setStatus('current')
lpbkFlagVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkFlagVT.setStatus('current')
lpbkFlagLpbkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1, 6), LpbkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkFlagLpbkType.setStatus('current')
lpbkFlagEnFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkFlagEnFlag.setStatus('current')
lpbkFlagTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 10, 20, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpbkFlagTimeout.setStatus('current')
optixSonetMaintenanceConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 11))
optixSonetMaintenanceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 11, 1))
currentObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 11, 1, 1)).setObjects(("OPTIX-SONET-LPBK-MIB-V2", "lpbkStateMOD2"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkStateSlot"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkStatePort"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkStatePath"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkStateVT"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkStateLpbkType"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkStateTimeout"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagMOD2"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagSlot"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagPort"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagPath"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagVT"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagLpbkType"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagEnFlag"), ("OPTIX-SONET-LPBK-MIB-V2", "lpbkFlagTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    currentObjectGroup = currentObjectGroup.setStatus('current')
optixSonetMaintenanceCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 11, 2))
basicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 50, 11, 2, 1)).setObjects(("OPTIX-SONET-LPBK-MIB-V2", "currentObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    basicCompliance = basicCompliance.setStatus('current')
mibBuilder.exportSymbols("OPTIX-SONET-LPBK-MIB-V2", PYSNMP_MODULE_ID=optixSonetMaintenance, optixSonetLoopback=optixSonetLoopback, currentObjectGroup=currentObjectGroup, lpbkFlagMOD2=lpbkFlagMOD2, optixSonetMaintenanceConformance=optixSonetMaintenanceConformance, lpbkStateLpbkType=lpbkStateLpbkType, lpbkStatePath=lpbkStatePath, lpbkStateMOD2=lpbkStateMOD2, optixSonetMaintenanceCompliances=optixSonetMaintenanceCompliances, lpbkFlagLpbkType=lpbkFlagLpbkType, lpbkFlagTable=lpbkFlagTable, lpbkStateEntry=lpbkStateEntry, lpbkStateSlot=lpbkStateSlot, lpbkStateTimeout=lpbkStateTimeout, lpbkStateVT=lpbkStateVT, lpbkFlagEnFlag=lpbkFlagEnFlag, basicCompliance=basicCompliance, optixSonetMaintenance=optixSonetMaintenance, LpbkType=LpbkType, lpbkFlagTimeout=lpbkFlagTimeout, lpbkFlagPath=lpbkFlagPath, optixSonetMaintenanceGroups=optixSonetMaintenanceGroups, lpbkFlagVT=lpbkFlagVT, lpbkStatePort=lpbkStatePort, lpbkStateTable=lpbkStateTable, lpbkFlagEntry=lpbkFlagEntry, lpbkFlagPort=lpbkFlagPort, lpbkFlagSlot=lpbkFlagSlot)
