#
# PySNMP MIB module CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
CiscoLwappDot11ClientReqStatus, CiscoLwappDot11ClientEAPMethod, CiscoLwappDot11ClientCredentialType, CiscoLwappDot11ClientKeyMgmtMethod, CiscoLwappDot11ClientEncryptionMethod, CiscoLwappDot11ClientAuthMethod, CiscoLwappDot11ClientTxPowerMode, CiscoLwappDot11ClientRadioType, CiscoLwappDot11ClientSSId, CiscoLwappDot11ClientPowerSaveMode = mibBuilder.importSymbols("CISCO-LWAPP-DOT11-CLIENT-CCX-TC-MIB", "CiscoLwappDot11ClientReqStatus", "CiscoLwappDot11ClientEAPMethod", "CiscoLwappDot11ClientCredentialType", "CiscoLwappDot11ClientKeyMgmtMethod", "CiscoLwappDot11ClientEncryptionMethod", "CiscoLwappDot11ClientAuthMethod", "CiscoLwappDot11ClientTxPowerMode", "CiscoLwappDot11ClientRadioType", "CiscoLwappDot11ClientSSId", "CiscoLwappDot11ClientPowerSaveMode")
ciscoLwappDot11ClientCcxMIBObjects, cldcClientMacAddress = mibBuilder.importSymbols("CISCO-LWAPP-DOT11-CLIENT-MIB", "ciscoLwappDot11ClientCcxMIBObjects", "cldcClientMacAddress")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CvE164Address, = mibBuilder.importSymbols("CISCO-TC", "CvE164Address")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, Bits, Counter64, Counter32, TimeTicks, ModuleIdentity, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, NotificationType, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Counter64", "Counter32", "TimeTicks", "ModuleIdentity", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "NotificationType", "iso", "ObjectIdentity")
MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention")
ciscoLwappDot11ClientCCXv5ReportingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4))
ciscoLwappDot11ClientCCXv5ReportingMIB.setRevisions(('2006-12-04 00:00',))
if mibBuilder.loadTexts: ciscoLwappDot11ClientCCXv5ReportingMIB.setLastUpdated('200612040000Z')
if mibBuilder.loadTexts: ciscoLwappDot11ClientCCXv5ReportingMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappDot11ClientCCXv5ReportingMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1))
ciscoLwappDot11ClientCCXv5ReportingMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 2))
ciscoClientCcxManuReporting = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1))
ciscoClientCcxOperReporting = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2))
ciscoClientCcxProfileReporting = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3))
ciscoClientCcxCapabilityReporting = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4))
cldccManufacturerInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1), )
if mibBuilder.loadTexts: cldccManufacturerInfoTable.setStatus('current')
cldccManufacturerInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccManufacturerInfoEntry.setStatus('current')
cldccManufacturerInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 1), CiscoLwappDot11ClientReqStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldccManufacturerInfoStatus.setStatus('current')
cldccManufacturerInfoOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManufacturerInfoOUI.setStatus('current')
cldccManufacturerInfoID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManufacturerInfoID.setStatus('current')
cldccManufacturerInfoModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManufacturerInfoModel.setStatus('current')
cldccManufacturerInfoSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManufacturerInfoSerialNum.setStatus('current')
cldccManufacturerInfoRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManufacturerInfoRadioType.setStatus('current')
cldccManufacturerInfoMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManufacturerInfoMacAddress.setStatus('current')
cldccManufacturerInfoAntennaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("omniDirectionalCollinear", 0), ("omniDirectionalDiversity", 1), ("omniDirectionalOther", 2), ("directionalYagi", 3), ("directionalPanel", 4), ("directionalSector", 5), ("directionalOther", 6), ("unknown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManufacturerInfoAntennaType.setStatus('current')
cldccManufacturerInfoAntennaGain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 40))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManufacturerInfoAntennaGain.setStatus('current')
cldccManuRxSensTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 2), )
if mibBuilder.loadTexts: cldccManuRxSensTable.setStatus('current')
cldccManuRxSensEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccManuRxSensRadioIndex"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccManuRxSensRadioDataRateIndex"))
if mibBuilder.loadTexts: cldccManuRxSensEntry.setStatus('current')
cldccManuRxSensRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccManuRxSensRadioIndex.setStatus('current')
cldccManuRxSensRadioDataRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cldccManuRxSensRadioDataRateIndex.setStatus('current')
cldccManuRxSensRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 2, 1, 3), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManuRxSensRadioType.setStatus('current')
cldccManuRxSensRadioDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManuRxSensRadioDataRate.setStatus('current')
cldccManuRxSensMinRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManuRxSensMinRssi.setStatus('current')
cldccManuRxSensMaxRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccManuRxSensMaxRssi.setStatus('current')
cldccCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 1), )
if mibBuilder.loadTexts: cldccCapabilityTable.setStatus('current')
cldccCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccCapabilityEntry.setStatus('current')
cldccCapabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 1, 1, 1), CiscoLwappDot11ClientReqStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldccCapabilityStatus.setStatus('current')
cldccCapabilityRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccCapabilityRadioType.setStatus('current')
cldccServiceCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccServiceCapability.setStatus('current')
cldccCapabilityChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 2), )
if mibBuilder.loadTexts: cldccCapabilityChannelsTable.setStatus('current')
cldccCapabilityChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccCapabilityRadioIndex"))
if mibBuilder.loadTexts: cldccCapabilityChannelsEntry.setStatus('current')
cldccCapabilityRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccCapabilityRadioIndex.setStatus('current')
cldccCapabilityChRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 2, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccCapabilityChRadioType.setStatus('current')
cldccCapabilityRadioChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccCapabilityRadioChannels.setStatus('current')
cldccCapabilityTxPowerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 3), )
if mibBuilder.loadTexts: cldccCapabilityTxPowerTable.setStatus('current')
cldccCapabilityTxPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccCapabilityTxPowerIndex"))
if mibBuilder.loadTexts: cldccCapabilityTxPowerEntry.setStatus('current')
cldccCapabilityTxPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccCapabilityTxPowerIndex.setStatus('current')
cldccCapabilityTxPowerRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 3, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccCapabilityTxPowerRadioType.setStatus('current')
cldccCapabilityTxPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fixed", 0), ("automatic", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccCapabilityTxPowerMode.setStatus('current')
cldccCapabilityTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccCapabilityTxPower.setStatus('current')
cldccCapabilityDataRateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 4), )
if mibBuilder.loadTexts: cldccCapabilityDataRateTable.setStatus('current')
cldccCapabilityDataRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccCapabilityDataRateIndex"))
if mibBuilder.loadTexts: cldccCapabilityDataRateEntry.setStatus('current')
cldccCapabilityDataRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccCapabilityDataRateIndex.setStatus('current')
cldccCapabilityDataRateRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 4, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccCapabilityDataRateRadioType.setStatus('current')
cldccCapabilityDataRates = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 4, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccCapabilityDataRates.setStatus('current')
cldccOperParamsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1), )
if mibBuilder.loadTexts: cldccOperParamsTable.setStatus('current')
cldccOperParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccOperParamsEntry.setStatus('current')
cldccOperParamsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 1), CiscoLwappDot11ClientReqStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldccOperParamsStatus.setStatus('current')
cldccOperParamsRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsRadioType.setStatus('current')
cldccOperParamsSSId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 7), CiscoLwappDot11ClientSSId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsSSId.setStatus('current')
cldccOperParamsDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsDeviceName.setStatus('current')
cldccOperParamsDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 255))).clone(namedValues=NamedValues(("laptop", 0), ("pc", 1), ("pda", 2), ("dot11MobilePhone", 3), ("dualModePhone", 4), ("wgb", 5), ("scanner", 6), ("tabletPc", 7), ("printer", 8), ("projector", 9), ("videoConfSystem", 10), ("camera", 11), ("gamingSystem", 12), ("dot11DeskPhone", 13), ("cashRegister", 14), ("radioTag", 15), ("rfidSensor", 16), ("server", 17), ("appSpecific", 18), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsDeviceType.setStatus('current')
cldccOperParamsOSId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsOSId.setStatus('current')
cldccOperParamsOSVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsOSVersion.setStatus('current')
cldccOperParamsIpAddressMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("static", 0), ("dhcp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsIpAddressMode.setStatus('current')
cldccOperParamsIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsIpv4Address.setStatus('current')
cldccOperParamsIpv4SubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsIpv4SubnetMask.setStatus('current')
cldccOperParamsIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsIpv6Address.setStatus('current')
cldccOperParamsIpv6SubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsIpv6SubnetMask.setStatus('current')
cldccOperParamsDefaultGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsDefaultGateway.setStatus('current')
cldccOperParamsEntPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 18), CvE164Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsEntPhone.setStatus('current')
cldccOperParamsCellPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 19), CvE164Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsCellPhone.setStatus('current')
cldccOperParamsFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsFirmwareVersion.setStatus('current')
cldccOperParamsDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsDriverVersion.setStatus('current')
cldccOperParamsPowerSaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 22), CiscoLwappDot11ClientPowerSaveMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsPowerSaveMode.setStatus('current')
cldccOperParamsAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 23), CiscoLwappDot11ClientAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsAuthMethod.setStatus('current')
cldccOperParamsKeyMgmtMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 25), CiscoLwappDot11ClientKeyMgmtMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsKeyMgmtMethod.setStatus('current')
cldccOperParamsEncrMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 26), CiscoLwappDot11ClientEncryptionMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsEncrMethod.setStatus('current')
cldccOperParamsDot1xSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsDot1xSecurity.setStatus('current')
cldccOperParamsSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsSysName.setStatus('current')
cldccOperParamsLocalization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 1, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsLocalization.setStatus('current')
cldccOperParamsDNSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 2), )
if mibBuilder.loadTexts: cldccOperParamsDNSTable.setStatus('current')
cldccOperParamsDNSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccOperParamsDNSServerIndex"))
if mibBuilder.loadTexts: cldccOperParamsDNSEntry.setStatus('current')
cldccOperParamsDNSServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccOperParamsDNSServerIndex.setStatus('current')
cldccOperParamsDNSServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsDNSServerAddress.setStatus('current')
cldccOperParamsWINSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 3), )
if mibBuilder.loadTexts: cldccOperParamsWINSTable.setStatus('current')
cldccOperParamsWINSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccOperParamsWINSServerIndex"))
if mibBuilder.loadTexts: cldccOperParamsWINSEntry.setStatus('current')
cldccOperParamsWINSServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccOperParamsWINSServerIndex.setStatus('current')
cldccOperParamsWINSServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperParamsWINSServerAddress.setStatus('current')
cldccOperChannelsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 4), )
if mibBuilder.loadTexts: cldccOperChannelsTable.setStatus('current')
cldccOperChannelsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccOperRadioIndex"))
if mibBuilder.loadTexts: cldccOperChannelsEntry.setStatus('current')
cldccOperRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccOperRadioIndex.setStatus('current')
cldccOperRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 4, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperRadioType.setStatus('current')
cldccOperRadioChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperRadioChannels.setStatus('current')
cldccOperTxPowerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 5), )
if mibBuilder.loadTexts: cldccOperTxPowerTable.setStatus('current')
cldccOperTxPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccOperTxPowerIndex"))
if mibBuilder.loadTexts: cldccOperTxPowerEntry.setStatus('current')
cldccOperTxPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccOperTxPowerIndex.setStatus('current')
cldccOperTxPowerRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 5, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperTxPowerRadioType.setStatus('current')
cldccOperTxPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fixed", 0), ("automatic", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperTxPowerMode.setStatus('current')
cldccOperTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperTxPower.setStatus('current')
cldccOperDataRateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 6), )
if mibBuilder.loadTexts: cldccOperDataRateTable.setStatus('current')
cldccOperDataRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccOperDataRateIndex"))
if mibBuilder.loadTexts: cldccOperDataRateEntry.setStatus('current')
cldccOperDataRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccOperDataRateIndex.setStatus('current')
cldccOperDataRateRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 6, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperDataRateRadioType.setStatus('current')
cldccOperDataRates = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 2, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccOperDataRates.setStatus('current')
cldccProfileReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 1), )
if mibBuilder.loadTexts: cldccProfileReqTable.setStatus('current')
cldccProfileReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccProfileReqEntry.setStatus('current')
cldccProfileReqNumProfiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileReqNumProfiles.setStatus('current')
cldccProfileReqCurrentProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileReqCurrentProfile.setStatus('current')
cldccProfileReqReportingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 1, 1, 3), CiscoLwappDot11ClientReqStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldccProfileReqReportingStatus.setStatus('current')
cldccProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2), )
if mibBuilder.loadTexts: cldccProfileTable.setStatus('current')
cldccProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileIndex"))
if mibBuilder.loadTexts: cldccProfileEntry.setStatus('current')
cldccProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccProfileIndex.setStatus('current')
cldccProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileName.setStatus('current')
cldccProfileSSId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 4), CiscoLwappDot11ClientSSId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileSSId.setStatus('current')
cldccProfileAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 5), CiscoLwappDot11ClientAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileAuthMethod.setStatus('current')
cldccProfileKeyMgmtMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 6), CiscoLwappDot11ClientKeyMgmtMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileKeyMgmtMethod.setStatus('current')
cldccProfileEncrMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 7), CiscoLwappDot11ClientEncryptionMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileEncrMethod.setStatus('current')
cldccProfileDot1xSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileDot1xSecurity.setStatus('current')
cldccProfilePowerSaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 9), CiscoLwappDot11ClientPowerSaveMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfilePowerSaveMode.setStatus('current')
cldccProfileRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileRadioType.setStatus('current')
cldccProfileProprietaryOptionName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileProprietaryOptionName.setStatus('current')
cldccProfileProprietaryOptionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileProprietaryOptionValue.setStatus('current')
cldccProfileAPTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 3), )
if mibBuilder.loadTexts: cldccProfileAPTable.setStatus('current')
cldccProfileAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileIndex"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfilePreferredAPIndex"))
if mibBuilder.loadTexts: cldccProfileAPEntry.setStatus('current')
cldccProfilePreferredAPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccProfilePreferredAPIndex.setStatus('current')
cldccProfilePreferredAP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfilePreferredAP.setStatus('current')
cldccProfileTxPowerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 4), )
if mibBuilder.loadTexts: cldccProfileTxPowerTable.setStatus('current')
cldccProfileTxPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileIndex"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileTxPowerIndex"))
if mibBuilder.loadTexts: cldccProfileTxPowerEntry.setStatus('current')
cldccProfileTxPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccProfileTxPowerIndex.setStatus('current')
cldccProfileTxPowerRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 4, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileTxPowerRadioType.setStatus('current')
cldccProfileTxPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fixed", 0), ("automatic", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileTxPowerMode.setStatus('current')
cldccProfileTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileTxPower.setStatus('current')
cldccProfileChannelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 5), )
if mibBuilder.loadTexts: cldccProfileChannelTable.setStatus('current')
cldccProfileChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 5, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileIndex"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileChannelIndex"))
if mibBuilder.loadTexts: cldccProfileChannelEntry.setStatus('current')
cldccProfileChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccProfileChannelIndex.setStatus('current')
cldccProfileChRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 5, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileChRadioType.setStatus('current')
cldccProfileChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileChannels.setStatus('current')
cldccProfileDataRateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 6), )
if mibBuilder.loadTexts: cldccProfileDataRateTable.setStatus('current')
cldccProfileDataRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 6, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileIndex"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileDataRateIndex"))
if mibBuilder.loadTexts: cldccProfileDataRateEntry.setStatus('current')
cldccProfileDataRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccProfileDataRateIndex.setStatus('current')
cldccProfileDataRateRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 6, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileDataRateRadioType.setStatus('current')
cldccProfileDataRates = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileDataRates.setStatus('current')
cldccProfileRadioOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 7), )
if mibBuilder.loadTexts: cldccProfileRadioOptionsTable.setStatus('current')
cldccProfileRadioOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 7, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileIndex"), (0, "CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", "cldccProfileRadioOptionIndex"))
if mibBuilder.loadTexts: cldccProfileRadioOptionsEntry.setStatus('current')
cldccProfileRadioOptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)))
if mibBuilder.loadTexts: cldccProfileRadioOptionIndex.setStatus('current')
cldccProfileRadioOptionsRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 7, 1, 2), CiscoLwappDot11ClientRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileRadioOptionsRadioType.setStatus('current')
cldccProfilePreambleType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("short", 0), ("long", 1), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfilePreambleType.setStatus('current')
cldccProfileCCAMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("energyDetect", 0), ("carrierDetect", 1), ("energyCarrierDetect", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileCCAMethod.setStatus('current')
cldccProfileDataRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileDataRetries.setStatus('current')
cldccProfileFragmentThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 4, 1, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccProfileFragmentThreshold.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-DOT11-CLIENT-CCXV5-REPORTING-MIB", cldccProfileRadioOptionsRadioType=cldccProfileRadioOptionsRadioType, cldccProfileTxPower=cldccProfileTxPower, cldccOperParamsPowerSaveMode=cldccOperParamsPowerSaveMode, cldccProfileDataRates=cldccProfileDataRates, cldccOperParamsCellPhone=cldccOperParamsCellPhone, cldccOperDataRateEntry=cldccOperDataRateEntry, cldccOperParamsFirmwareVersion=cldccOperParamsFirmwareVersion, cldccOperParamsEntPhone=cldccOperParamsEntPhone, cldccProfilePreferredAPIndex=cldccProfilePreferredAPIndex, cldccOperTxPowerMode=cldccOperTxPowerMode, cldccProfileKeyMgmtMethod=cldccProfileKeyMgmtMethod, ciscoClientCcxOperReporting=ciscoClientCcxOperReporting, cldccProfileTxPowerIndex=cldccProfileTxPowerIndex, cldccOperParamsDNSEntry=cldccOperParamsDNSEntry, cldccOperParamsOSVersion=cldccOperParamsOSVersion, cldccProfileChRadioType=cldccProfileChRadioType, ciscoClientCcxProfileReporting=ciscoClientCcxProfileReporting, cldccOperTxPowerIndex=cldccOperTxPowerIndex, cldccProfileRadioOptionIndex=cldccProfileRadioOptionIndex, cldccOperParamsSysName=cldccOperParamsSysName, cldccCapabilityChRadioType=cldccCapabilityChRadioType, cldccOperParamsSSId=cldccOperParamsSSId, cldccOperDataRateIndex=cldccOperDataRateIndex, cldccProfileReqTable=cldccProfileReqTable, PYSNMP_MODULE_ID=ciscoLwappDot11ClientCCXv5ReportingMIB, cldccManufacturerInfoID=cldccManufacturerInfoID, cldccOperParamsEncrMethod=cldccOperParamsEncrMethod, cldccProfileTxPowerEntry=cldccProfileTxPowerEntry, cldccProfileTxPowerMode=cldccProfileTxPowerMode, cldccOperRadioIndex=cldccOperRadioIndex, cldccOperParamsWINSServerIndex=cldccOperParamsWINSServerIndex, cldccOperParamsKeyMgmtMethod=cldccOperParamsKeyMgmtMethod, cldccOperParamsStatus=cldccOperParamsStatus, cldccProfileRadioType=cldccProfileRadioType, cldccProfileChannels=cldccProfileChannels, cldccCapabilityRadioType=cldccCapabilityRadioType, cldccCapabilityTxPowerRadioType=cldccCapabilityTxPowerRadioType, cldccCapabilityChannelsEntry=cldccCapabilityChannelsEntry, cldccOperChannelsEntry=cldccOperChannelsEntry, cldccProfileFragmentThreshold=cldccProfileFragmentThreshold, cldccManufacturerInfoSerialNum=cldccManufacturerInfoSerialNum, cldccOperParamsWINSServerAddress=cldccOperParamsWINSServerAddress, cldccCapabilityDataRateEntry=cldccCapabilityDataRateEntry, cldccProfileDataRateTable=cldccProfileDataRateTable, cldccProfileRadioOptionsEntry=cldccProfileRadioOptionsEntry, cldccOperParamsIpAddressMode=cldccOperParamsIpAddressMode, cldccProfileReqCurrentProfile=cldccProfileReqCurrentProfile, cldccOperParamsDNSServerIndex=cldccOperParamsDNSServerIndex, cldccOperChannelsTable=cldccOperChannelsTable, cldccManufacturerInfoModel=cldccManufacturerInfoModel, cldccProfileAuthMethod=cldccProfileAuthMethod, cldccManufacturerInfoAntennaType=cldccManufacturerInfoAntennaType, cldccProfileChannelTable=cldccProfileChannelTable, cldccProfileEncrMethod=cldccProfileEncrMethod, cldccManufacturerInfoRadioType=cldccManufacturerInfoRadioType, cldccOperParamsIpv4Address=cldccOperParamsIpv4Address, cldccProfileEntry=cldccProfileEntry, cldccProfileDot1xSecurity=cldccProfileDot1xSecurity, cldccOperParamsDeviceName=cldccOperParamsDeviceName, cldccOperParamsIpv6SubnetMask=cldccOperParamsIpv6SubnetMask, cldccManufacturerInfoAntennaGain=cldccManufacturerInfoAntennaGain, cldccManufacturerInfoOUI=cldccManufacturerInfoOUI, cldccCapabilityTxPowerEntry=cldccCapabilityTxPowerEntry, cldccOperRadioChannels=cldccOperRadioChannels, cldccOperParamsEntry=cldccOperParamsEntry, ciscoLwappDot11ClientCCXv5ReportingMIBConform=ciscoLwappDot11ClientCCXv5ReportingMIBConform, cldccOperParamsIpv6Address=cldccOperParamsIpv6Address, cldccOperParamsDeviceType=cldccOperParamsDeviceType, cldccOperParamsTable=cldccOperParamsTable, cldccOperParamsDNSServerAddress=cldccOperParamsDNSServerAddress, cldccProfileReqEntry=cldccProfileReqEntry, cldccProfileTable=cldccProfileTable, cldccManuRxSensMaxRssi=cldccManuRxSensMaxRssi, cldccCapabilityDataRates=cldccCapabilityDataRates, cldccOperTxPower=cldccOperTxPower, cldccProfileRadioOptionsTable=cldccProfileRadioOptionsTable, cldccOperParamsDefaultGateway=cldccOperParamsDefaultGateway, cldccCapabilityTxPowerIndex=cldccCapabilityTxPowerIndex, cldccProfileDataRateEntry=cldccProfileDataRateEntry, ciscoLwappDot11ClientCCXv5ReportingMIBObjects=ciscoLwappDot11ClientCCXv5ReportingMIBObjects, cldccProfileProprietaryOptionName=cldccProfileProprietaryOptionName, cldccServiceCapability=cldccServiceCapability, cldccProfileCCAMethod=cldccProfileCCAMethod, cldccProfileChannelIndex=cldccProfileChannelIndex, cldccProfileDataRetries=cldccProfileDataRetries, cldccOperTxPowerTable=cldccOperTxPowerTable, cldccManuRxSensEntry=cldccManuRxSensEntry, cldccManuRxSensRadioDataRate=cldccManuRxSensRadioDataRate, cldccProfileChannelEntry=cldccProfileChannelEntry, cldccOperParamsDNSTable=cldccOperParamsDNSTable, cldccCapabilityEntry=cldccCapabilityEntry, cldccCapabilityTxPower=cldccCapabilityTxPower, cldccCapabilityTable=cldccCapabilityTable, cldccManufacturerInfoEntry=cldccManufacturerInfoEntry, cldccCapabilityTxPowerMode=cldccCapabilityTxPowerMode, cldccCapabilityRadioIndex=cldccCapabilityRadioIndex, cldccOperTxPowerEntry=cldccOperTxPowerEntry, cldccProfileName=cldccProfileName, ciscoClientCcxManuReporting=ciscoClientCcxManuReporting, cldccProfileAPTable=cldccProfileAPTable, cldccOperDataRates=cldccOperDataRates, cldccProfilePreambleType=cldccProfilePreambleType, cldccCapabilityRadioChannels=cldccCapabilityRadioChannels, cldccProfileProprietaryOptionValue=cldccProfileProprietaryOptionValue, cldccProfileDataRateRadioType=cldccProfileDataRateRadioType, cldccCapabilityDataRateRadioType=cldccCapabilityDataRateRadioType, cldccProfileReqNumProfiles=cldccProfileReqNumProfiles, cldccOperDataRateRadioType=cldccOperDataRateRadioType, cldccManuRxSensTable=cldccManuRxSensTable, cldccManuRxSensRadioType=cldccManuRxSensRadioType, cldccOperRadioType=cldccOperRadioType, cldccOperParamsWINSTable=cldccOperParamsWINSTable, cldccCapabilityTxPowerTable=cldccCapabilityTxPowerTable, cldccOperParamsOSId=cldccOperParamsOSId, cldccOperParamsWINSEntry=cldccOperParamsWINSEntry, cldccProfileTxPowerTable=cldccProfileTxPowerTable, cldccOperParamsLocalization=cldccOperParamsLocalization, cldccOperDataRateTable=cldccOperDataRateTable, cldccCapabilityChannelsTable=cldccCapabilityChannelsTable, cldccManufacturerInfoTable=cldccManufacturerInfoTable, cldccProfileSSId=cldccProfileSSId, cldccManuRxSensMinRssi=cldccManuRxSensMinRssi, cldccProfileTxPowerRadioType=cldccProfileTxPowerRadioType, cldccManufacturerInfoStatus=cldccManufacturerInfoStatus, cldccProfileAPEntry=cldccProfileAPEntry, cldccProfileIndex=cldccProfileIndex, cldccOperTxPowerRadioType=cldccOperTxPowerRadioType, cldccOperParamsDriverVersion=cldccOperParamsDriverVersion, cldccProfilePowerSaveMode=cldccProfilePowerSaveMode, cldccOperParamsDot1xSecurity=cldccOperParamsDot1xSecurity, cldccCapabilityDataRateIndex=cldccCapabilityDataRateIndex, cldccOperParamsAuthMethod=cldccOperParamsAuthMethod, cldccManuRxSensRadioDataRateIndex=cldccManuRxSensRadioDataRateIndex, cldccManufacturerInfoMacAddress=cldccManufacturerInfoMacAddress, cldccOperParamsIpv4SubnetMask=cldccOperParamsIpv4SubnetMask, cldccManuRxSensRadioIndex=cldccManuRxSensRadioIndex, cldccCapabilityStatus=cldccCapabilityStatus, cldccProfilePreferredAP=cldccProfilePreferredAP, cldccCapabilityDataRateTable=cldccCapabilityDataRateTable, ciscoClientCcxCapabilityReporting=ciscoClientCcxCapabilityReporting, ciscoLwappDot11ClientCCXv5ReportingMIB=ciscoLwappDot11ClientCCXv5ReportingMIB, cldccProfileReqReportingStatus=cldccProfileReqReportingStatus, cldccOperParamsRadioType=cldccOperParamsRadioType, cldccProfileDataRateIndex=cldccProfileDataRateIndex)
