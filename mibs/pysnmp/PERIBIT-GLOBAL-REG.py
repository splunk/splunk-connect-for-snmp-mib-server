#
# PySNMP MIB module PERIBIT-GLOBAL-REG (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PERIBIT-GLOBAL-REG
# Produced by pysmi-0.3.4 at Mon Apr 29 20:31:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, NotificationType, iso, ModuleIdentity, ObjectIdentity, Counter32, Counter64, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, Bits, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "NotificationType", "iso", "ModuleIdentity", "ObjectIdentity", "Counter32", "Counter64", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "Bits", "TimeTicks", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pnGlobalRegModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 1, 1))
pnGlobalRegModule.setRevisions(('2004-03-15 14:00', '2003-06-26 20:00', '2001-07-29 22:00',))
if mibBuilder.loadTexts: pnGlobalRegModule.setLastUpdated('200107292200Z')
if mibBuilder.loadTexts: pnGlobalRegModule.setOrganization('Peribit Networks, Inc')
peribitRoot = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239))
if mibBuilder.loadTexts: peribitRoot.setStatus('current')
pnReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1))
if mibBuilder.loadTexts: pnReg.setStatus('current')
pnModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 1))
if mibBuilder.loadTexts: pnModules.setStatus('current')
pnMibs = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2))
if mibBuilder.loadTexts: pnMibs.setStatus('current')
pnCaps = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 3))
if mibBuilder.loadTexts: pnCaps.setStatus('current')
pnReqs = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 4))
if mibBuilder.loadTexts: pnReqs.setStatus('current')
pnExpr = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 5))
if mibBuilder.loadTexts: pnExpr.setStatus('current')
pnCommonMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1))
if mibBuilder.loadTexts: pnCommonMib.setStatus('current')
pnSpecificMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2))
if mibBuilder.loadTexts: pnSpecificMib.setStatus('current')
pnProductSr = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2))
if mibBuilder.loadTexts: pnProductSr.setStatus('current')
pnProductSr50 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 1))
if mibBuilder.loadTexts: pnProductSr50.setStatus('current')
pnProductSr55 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 2))
if mibBuilder.loadTexts: pnProductSr55.setStatus('current')
pnProductSr20 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 3))
if mibBuilder.loadTexts: pnProductSr20.setStatus('current')
pnProductSr80 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 4))
if mibBuilder.loadTexts: pnProductSr80.setStatus('current')
pnProductSr100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 5))
if mibBuilder.loadTexts: pnProductSr100.setStatus('current')
pnProductSm500 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 6))
if mibBuilder.loadTexts: pnProductSm500.setStatus('current')
pnProductSr15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 2, 7))
if mibBuilder.loadTexts: pnProductSr15.setStatus('current')
mibBuilder.exportSymbols("PERIBIT-GLOBAL-REG", pnProductSr20=pnProductSr20, PYSNMP_MODULE_ID=pnGlobalRegModule, pnMibs=pnMibs, pnCaps=pnCaps, pnProductSr55=pnProductSr55, pnGlobalRegModule=pnGlobalRegModule, pnProductSr50=pnProductSr50, pnReqs=pnReqs, pnProductSr80=pnProductSr80, pnModules=pnModules, pnSpecificMib=pnSpecificMib, pnProductSr100=pnProductSr100, pnProductSm500=pnProductSm500, pnCommonMib=pnCommonMib, pnReg=pnReg, pnProductSr15=pnProductSr15, peribitRoot=peribitRoot, pnProductSr=pnProductSr, pnExpr=pnExpr)
