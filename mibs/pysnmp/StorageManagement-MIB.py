#
# PySNMP MIB module StorageManagement-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/StorageManagement-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:07:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, ModuleIdentity, NotificationType, iso, Counter64, ObjectIdentity, Unsigned32, IpAddress, NotificationType, enterprises, MibIdentifier, Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "NotificationType", "iso", "Counter64", "ObjectIdentity", "Unsigned32", "IpAddress", "NotificationType", "enterprises", "MibIdentifier", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DellStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("ok", 3), ("nonCritical", 4), ("critical", 5), ("nonRecoverable", 6))

dell = MibIdentifier((1, 3, 6, 1, 4, 1, 674))
storage = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10893))
software = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10893, 1))
storageManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20))
softwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersion.setStatus('mandatory')
globalStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("critical", 1), ("warning", 2), ("normal", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalStatus.setStatus('mandatory')
softwareManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareManufacturer.setStatus('mandatory')
softwareProduct = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareProduct.setStatus('mandatory')
softwareDescription = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareDescription.setStatus('mandatory')
storageManagementInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 100))
displayName = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 100, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: displayName.setStatus('mandatory')
description = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 100, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: description.setStatus('mandatory')
agentVendor = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 100, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVendor.setStatus('mandatory')
agentVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 100, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVersion.setStatus('obsolete')
globalData = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110))
agentSystemGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("nonCriticalError", 3), ("failure", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSystemGlobalStatus.setStatus('obsolete')
agentLastGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("nonCriticalError", 3), ("failure", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLastGlobalStatus.setStatus('obsolete')
agentTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTimeStamp.setStatus('mandatory')
agentGetTimeout = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGetTimeout.setStatus('mandatory')
agentModifiers = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentModifiers.setStatus('mandatory')
agentRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRefreshRate.setStatus('mandatory')
agentHostname = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentHostname.setStatus('obsolete')
agentIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPAddress.setStatus('obsolete')
agentSoftwareStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("databaseUp", 1), ("databaseDown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSoftwareStatus.setStatus('obsolete')
agentSnmpVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpVersion.setStatus('obsolete')
agentMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibVersion.setStatus('mandatory')
agentManagementSoftwareURLName = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentManagementSoftwareURLName.setStatus('mandatory')
agentGlobalSystemStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 13), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGlobalSystemStatus.setStatus('mandatory')
agentLastGlobalSystemStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 14), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLastGlobalSystemStatus.setStatus('mandatory')
agentSmartThermalShutdown = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 110, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSmartThermalShutdown.setStatus('mandatory')
physicalDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130))
channelTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2), )
if mibBuilder.loadTexts: channelTable.setStatus('mandatory')
channelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1), ).setIndexNames((0, "StorageManagement-MIB", "channelNumber"))
if mibBuilder.loadTexts: channelEntry.setStatus('mandatory')
channelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelNumber.setStatus('mandatory')
channelName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelName.setStatus('mandatory')
channelState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("online", 3), ("offline", 4), ("degraded", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelState.setStatus('mandatory')
channelSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelSeverity.setStatus('obsolete')
channelTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wide", 1), ("narrow", 2), ("notTerminated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelTermination.setStatus('mandatory')
channelSCSIID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelSCSIID.setStatus('mandatory')
channelRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 7), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelRollUpStatus.setStatus('mandatory')
channelComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 8), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelComponentStatus.setStatus('mandatory')
channelNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelNexusID.setStatus('mandatory')
channelDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelDataRate.setStatus('mandatory')
channelBusType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("scsi", 1), ("ide", 2), ("fibreChannel", 3), ("ssa", 4), ("usb", 6), ("sata", 7), ("sas", 8), ("pcie", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelBusType.setStatus('mandatory')
enclosureTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3), )
if mibBuilder.loadTexts: enclosureTable.setStatus('mandatory')
enclosureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1), ).setIndexNames((0, "StorageManagement-MIB", "enclosureNumber"))
if mibBuilder.loadTexts: enclosureEntry.setStatus('mandatory')
enclosureNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureNumber.setStatus('mandatory')
enclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureName.setStatus('mandatory')
enclosureVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureVendor.setStatus('mandatory')
enclosureState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("online", 3), ("offline", 4), ("degraded", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureState.setStatus('mandatory')
enclosureSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSeverity.setStatus('obsolete')
enclosureID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureID.setStatus('mandatory')
enclosureProcessorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureProcessorVersion.setStatus('obsolete')
enclosureServiceTag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureServiceTag.setStatus('mandatory')
enclosureAssetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureAssetTag.setStatus('mandatory')
enclosureAssetName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureAssetName.setStatus('mandatory')
enclosureSplitBusPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSplitBusPartNumber.setStatus('mandatory')
enclosureProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureProductID.setStatus('mandatory')
enclosureKernelVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureKernelVersion.setStatus('obsolete')
enclosureESM1PartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureESM1PartNumber.setStatus('obsolete')
enclosureESM2PartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureESM2PartNumber.setStatus('obsolete')
enclosureType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("internal", 1), ("dELLPV200SPV201S", 2), ("dELLPV210SPV211S", 3), ("dELLPV220SPV221S", 4), ("dELLPV660F", 5), ("dELLPV224F", 6), ("dELLPV660F224F", 7), ("md1000", 8), ("md1120", 9), ("md1200", 10), ("md1220", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureType.setStatus('mandatory')
enclosureProcessor2Version = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureProcessor2Version.setStatus('mandatory')
enclosureConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("joined", 1), ("splitBus", 2), ("clustered", 3), ("unified", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureConfig.setStatus('mandatory')
enclosureChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureChannelNumber.setStatus('mandatory')
enclosureAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureAlarm.setStatus('mandatory')
enclosureBackplanePartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureBackplanePartNumber.setStatus('mandatory')
enclosureSCSIID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSCSIID.setStatus('mandatory')
enclosureRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 23), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureRollUpStatus.setStatus('mandatory')
enclosureComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 24), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureComponentStatus.setStatus('mandatory')
enclosureNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureNexusID.setStatus('mandatory')
enclosureFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureFirmwareVersion.setStatus('mandatory')
enclosureSCSIRate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSCSIRate.setStatus('mandatory')
enclosurePartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosurePartNumber.setStatus('mandatory')
enclosureSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSerialNumber.setStatus('mandatory')
enclosureSASAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSASAddress.setStatus('mandatory')
enclosureOccupiedSlotCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureOccupiedSlotCount.setStatus('mandatory')
enclosureTotalSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureTotalSlots.setStatus('mandatory')
enclosureEmptySlotCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureEmptySlotCount.setStatus('mandatory')
enclosureExpressServiceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 3, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureExpressServiceCode.setStatus('mandatory')
arrayDiskTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4), )
if mibBuilder.loadTexts: arrayDiskTable.setStatus('mandatory')
arrayDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1), ).setIndexNames((0, "StorageManagement-MIB", "arrayDiskNumber"))
if mibBuilder.loadTexts: arrayDiskEntry.setStatus('mandatory')
arrayDiskNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskNumber.setStatus('mandatory')
arrayDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskName.setStatus('mandatory')
arrayDiskVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskVendor.setStatus('mandatory')
arrayDiskState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 11, 13, 14, 15, 22, 23, 24, 25, 26, 28, 34, 35, 39, 40, 41, 53, 56))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("online", 3), ("offline", 4), ("degraded", 6), ("recovering", 7), ("removed", 11), ("non-raid", 13), ("notReady", 14), ("resynching", 15), ("replacing", 22), ("spinningDown", 23), ("rebuild", 24), ("noMedia", 25), ("formatting", 26), ("diagnostics", 28), ("predictiveFailure", 34), ("initializing", 35), ("foreign", 39), ("clear", 40), ("unsupported", 41), ("incompatible", 53), ("readOnly", 56)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskState.setStatus('mandatory')
arrayDiskSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskSeverity.setStatus('obsolete')
arrayDiskProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskProductID.setStatus('mandatory')
arrayDiskSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskSerialNo.setStatus('mandatory')
arrayDiskRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskRevision.setStatus('mandatory')
arrayDiskEnclosureID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEnclosureID.setStatus('mandatory')
arrayDiskChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskChannel.setStatus('mandatory')
arrayDiskLengthInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLengthInMB.setStatus('mandatory')
arrayDiskLengthInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLengthInBytes.setStatus('mandatory')
arrayDiskLargestContiguousFreeSpaceInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLargestContiguousFreeSpaceInMB.setStatus('mandatory')
arrayDiskLargestContiguousFreeSpaceInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLargestContiguousFreeSpaceInBytes.setStatus('mandatory')
arrayDiskTargetID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskTargetID.setStatus('mandatory')
arrayDiskLunID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLunID.setStatus('mandatory')
arrayDiskUsedSpaceInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskUsedSpaceInMB.setStatus('mandatory')
arrayDiskUsedSpaceInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskUsedSpaceInBytes.setStatus('mandatory')
arrayDiskFreeSpaceInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskFreeSpaceInMB.setStatus('mandatory')
arrayDiskFreeSpaceInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskFreeSpaceInBytes.setStatus('mandatory')
arrayDiskBusType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("scsi", 1), ("ide", 2), ("fibre", 3), ("ssa", 4), ("usb", 6), ("sata", 7), ("sas", 8), ("pcie", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskBusType.setStatus('mandatory')
arrayDiskSpareState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 99))).clone(namedValues=NamedValues(("memberVD", 1), ("memberDG", 2), ("globalHotSpare", 3), ("dedicatedHotSpare", 4), ("notASpare", 5), ("notApplicable", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskSpareState.setStatus('mandatory')
arrayDiskRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 23), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskRollUpStatus.setStatus('mandatory')
arrayDiskComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 24), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskComponentStatus.setStatus('mandatory')
arrayDiskDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskDeviceName.setStatus('mandatory')
arrayDiskNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskNexusID.setStatus('mandatory')
arrayDiskPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskPartNumber.setStatus('mandatory')
arrayDiskSASAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskSASAddress.setStatus('mandatory')
arrayDiskNegotiatedSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskNegotiatedSpeed.setStatus('mandatory')
arrayDiskCapableSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskCapableSpeed.setStatus('mandatory')
arrayDiskSmartAlertIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskSmartAlertIndication.setStatus('mandatory')
arrayDiskManufactureDay = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskManufactureDay.setStatus('mandatory')
arrayDiskManufactureWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskManufactureWeek.setStatus('mandatory')
arrayDiskManufactureYear = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskManufactureYear.setStatus('mandatory')
arrayDiskMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("hdd", 2), ("ssd", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskMediaType.setStatus('mandatory')
arrayDiskDellCertified = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskDellCertified.setStatus('mandatory')
arrayDiskAltaVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskAltaVendorId.setStatus('obsolete')
arrayDiskAltaProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskAltaProductId.setStatus('obsolete')
arrayDiskAltaRevisionId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskAltaRevisionId.setStatus('obsolete')
arrayDiskEncryptionCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEncryptionCapable.setStatus('mandatory')
arrayDiskEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEncrypted.setStatus('mandatory')
arrayDiskPowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskPowerState.setStatus('mandatory')
arrayDiskDriveWriteCache = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskDriveWriteCache.setStatus('mandatory')
arrayDiskModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskModelNumber.setStatus('mandatory')
arrayDiskLifeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLifeRemaining.setStatus('mandatory')
arrayDiskDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskDriverVersion.setStatus('mandatory')
arrayDiskDeviceLifeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskDeviceLifeStatus.setStatus('mandatory')
arrayDiskReadOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskReadOnly.setStatus('mandatory')
arrayDiskRemainingRatedWriteEndurance = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskRemainingRatedWriteEndurance.setStatus('mandatory')
arrayDiskSectorSize = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskSectorSize.setStatus('mandatory')
arrayDiskPICapable = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskPICapable.setStatus('mandatory')
arrayDiskMaxLinkWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskMaxLinkWidth.setStatus('mandatory')
arrayDiskNegotiatedLinkWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 4, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskNegotiatedLinkWidth.setStatus('mandatory')
arrayDiskEnclosureConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5), )
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionTable.setStatus('mandatory')
arrayDiskEnclosureConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5, 1), ).setIndexNames((0, "StorageManagement-MIB", "arrayDiskEnclosureConnectionNumber"))
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionEntry.setStatus('mandatory')
arrayDiskEnclosureConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionNumber.setStatus('mandatory')
arrayDiskEnclosureConnectionArrayDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionArrayDiskName.setStatus('mandatory')
arrayDiskEnclosureConnectionArrayDiskNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionArrayDiskNumber.setStatus('mandatory')
arrayDiskEnclosureConnectionEnclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionEnclosureName.setStatus('mandatory')
arrayDiskEnclosureConnectionEnclosureNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionEnclosureNumber.setStatus('mandatory')
arrayDiskEnclosureConnectionControllerName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionControllerName.setStatus('mandatory')
arrayDiskEnclosureConnectionControllerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskEnclosureConnectionControllerNumber.setStatus('mandatory')
arrayDiskChannelConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6), )
if mibBuilder.loadTexts: arrayDiskChannelConnectionTable.setStatus('mandatory')
arrayDiskChannelConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6, 1), ).setIndexNames((0, "StorageManagement-MIB", "arrayDiskChannelConnectionNumber"))
if mibBuilder.loadTexts: arrayDiskChannelConnectionEntry.setStatus('mandatory')
arrayDiskChannelConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskChannelConnectionNumber.setStatus('mandatory')
arrayDiskChannelConnectionArrayDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskChannelConnectionArrayDiskName.setStatus('mandatory')
arrayDiskChannelConnectionArrayDiskNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskChannelConnectionArrayDiskNumber.setStatus('mandatory')
arrayDiskChannelConnectionChannelName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskChannelConnectionChannelName.setStatus('mandatory')
arrayDiskChannelConnectionChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskChannelConnectionChannelNumber.setStatus('mandatory')
arrayDiskChannelConnectionControllerName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskChannelConnectionControllerName.setStatus('mandatory')
arrayDiskChannelConnectionControllerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskChannelConnectionControllerNumber.setStatus('mandatory')
fanTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7), )
if mibBuilder.loadTexts: fanTable.setStatus('mandatory')
fanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1), ).setIndexNames((0, "StorageManagement-MIB", "fanNumber"))
if mibBuilder.loadTexts: fanEntry.setStatus('mandatory')
fanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanNumber.setStatus('mandatory')
fanName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanName.setStatus('mandatory')
fanVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanVendor.setStatus('mandatory')
fanState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 11, 21))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("degraded", 6), ("removed", 11), ("missing", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanState.setStatus('mandatory')
fanSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanSeverity.setStatus('obsolete')
fanProbeUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanProbeUnit.setStatus('obsolete')
fanProbeMinWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanProbeMinWarning.setStatus('obsolete')
fanProbeMinCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanProbeMinCritical.setStatus('obsolete')
fanProbeMaxWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanProbeMaxWarning.setStatus('obsolete')
fanProbeMaxCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanProbeMaxCritical.setStatus('obsolete')
fanProbeCurrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanProbeCurrValue.setStatus('mandatory')
fan1PartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fan1PartNumber.setStatus('mandatory')
fan2PartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fan2PartNumber.setStatus('obsolete')
fanRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 14), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanRollUpStatus.setStatus('mandatory')
fanComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 15), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanComponentStatus.setStatus('mandatory')
fanNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanNexusID.setStatus('mandatory')
fanRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 7, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanRevision.setStatus('mandatory')
fanConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 8), )
if mibBuilder.loadTexts: fanConnectionTable.setStatus('mandatory')
fanConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 8, 1), ).setIndexNames((0, "StorageManagement-MIB", "fanConnectionNumber"))
if mibBuilder.loadTexts: fanConnectionEntry.setStatus('mandatory')
fanConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanConnectionNumber.setStatus('mandatory')
fanConnectionFanName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanConnectionFanName.setStatus('mandatory')
fanConnectionFanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanConnectionFanNumber.setStatus('mandatory')
fanConnectionEnclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanConnectionEnclosureName.setStatus('mandatory')
fanConnectionEnclosureNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanConnectionEnclosureNumber.setStatus('mandatory')
powerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9), )
if mibBuilder.loadTexts: powerSupplyTable.setStatus('mandatory')
powerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1), ).setIndexNames((0, "StorageManagement-MIB", "powerSupplyNumber"))
if mibBuilder.loadTexts: powerSupplyEntry.setStatus('mandatory')
powerSupplyNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyNumber.setStatus('mandatory')
powerSupplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyName.setStatus('mandatory')
powerSupplyVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyVendor.setStatus('mandatory')
powerSupplyState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 11, 21))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("notInstalled", 5), ("degraded", 6), ("removed", 11), ("missing", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyState.setStatus('mandatory')
powerSupplySeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplySeverity.setStatus('obsolete')
powerSupply1PartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupply1PartNumber.setStatus('mandatory')
powerSupply2PartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupply2PartNumber.setStatus('obsolete')
powerSupplyRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 8), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyRollUpStatus.setStatus('mandatory')
powerSupplyComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 9), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyComponentStatus.setStatus('mandatory')
powerSupplyNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyNexusID.setStatus('mandatory')
powerSupplyRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 9, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyRevision.setStatus('mandatory')
powerSupplyConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 10), )
if mibBuilder.loadTexts: powerSupplyConnectionTable.setStatus('mandatory')
powerSupplyConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 10, 1), ).setIndexNames((0, "StorageManagement-MIB", "powerSupplyConnectionNumber"))
if mibBuilder.loadTexts: powerSupplyConnectionEntry.setStatus('mandatory')
powerSupplyConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyConnectionNumber.setStatus('mandatory')
powerSupplyConnectionPowersupplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyConnectionPowersupplyName.setStatus('mandatory')
powerSupplyConnectionPowersupplyNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyConnectionPowersupplyNumber.setStatus('mandatory')
powerSupplyConnectionEnclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyConnectionEnclosureName.setStatus('mandatory')
powerSupplyConnectionEnclosureNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyConnectionEnclosureNumber.setStatus('mandatory')
powerSupplyConnectionFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyConnectionFirmwareVersion.setStatus('mandatory')
temperatureProbeTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11), )
if mibBuilder.loadTexts: temperatureProbeTable.setStatus('mandatory')
temperatureProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1), ).setIndexNames((0, "StorageManagement-MIB", "temperatureProbeNumber"))
if mibBuilder.loadTexts: temperatureProbeEntry.setStatus('mandatory')
temperatureProbeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeNumber.setStatus('mandatory')
temperatureProbeName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeName.setStatus('mandatory')
temperatureProbeVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeVendor.setStatus('mandatory')
temperatureProbeState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 6, 9, 21))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("offline", 4), ("degraded", 6), ("inactive", 9), ("missing", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeState.setStatus('mandatory')
temperatureProbeSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeSeverity.setStatus('obsolete')
temperatureProbeUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeUnit.setStatus('mandatory')
temperatureProbeMinWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeMinWarning.setStatus('mandatory')
temperatureProbeMinCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeMinCritical.setStatus('mandatory')
temperatureProbeMaxWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeMaxWarning.setStatus('mandatory')
temperatureProbeMaxCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeMaxCritical.setStatus('mandatory')
temperatureProbeCurValue = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeCurValue.setStatus('mandatory')
temperatureProbeRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 12), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeRollUpStatus.setStatus('mandatory')
temperatureProbeComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 13), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeComponentStatus.setStatus('mandatory')
temperatureProbeNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 11, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureProbeNexusID.setStatus('mandatory')
temperatureConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 12), )
if mibBuilder.loadTexts: temperatureConnectionTable.setStatus('mandatory')
temperatureConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 12, 1), ).setIndexNames((0, "StorageManagement-MIB", "temperatureConnectionNumber"))
if mibBuilder.loadTexts: temperatureConnectionEntry.setStatus('mandatory')
temperatureConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureConnectionNumber.setStatus('mandatory')
temperatureConnectionTemperatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureConnectionTemperatureName.setStatus('mandatory')
temperatureConnectionTemperatureNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureConnectionTemperatureNumber.setStatus('mandatory')
temperatureConnectionEnclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureConnectionEnclosureName.setStatus('mandatory')
temperatureConnectionEnclosureNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureConnectionEnclosureNumber.setStatus('mandatory')
enclosureManagementModuleTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13), )
if mibBuilder.loadTexts: enclosureManagementModuleTable.setStatus('mandatory')
enclosureManagementModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1), ).setIndexNames((0, "StorageManagement-MIB", "enclosureManagementModuleNumber"))
if mibBuilder.loadTexts: enclosureManagementModuleEntry.setStatus('mandatory')
enclosureManagementModuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleNumber.setStatus('mandatory')
enclosureManagementModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleName.setStatus('mandatory')
enclosureManagementModuleVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleVendor.setStatus('mandatory')
enclosureManagementModuleState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 21))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("online", 3), ("offline", 4), ("notInstalled", 5), ("degraded", 6), ("missing", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleState.setStatus('mandatory')
enclosureManagementModuleSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleSeverity.setStatus('obsolete')
enclosureManagementModulePartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModulePartNumber.setStatus('mandatory')
enclosureManagementModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eMM", 1), ("terminationCard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleType.setStatus('mandatory')
enclosureManagementModuleFWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleFWVersion.setStatus('mandatory')
enclosureManagementModuleMaxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleMaxSpeed.setStatus('mandatory')
enclosureManagementModuleRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 10), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleRollUpStatus.setStatus('mandatory')
enclosureManagementModuleComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 11), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleComponentStatus.setStatus('mandatory')
enclosureManagementModuleNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleNexusID.setStatus('mandatory')
enclosureManagementModuleRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 13, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleRevision.setStatus('mandatory')
enclosureManagementModuleConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 14), )
if mibBuilder.loadTexts: enclosureManagementModuleConnectionTable.setStatus('mandatory')
enclosureManagementModuleConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 14, 1), ).setIndexNames((0, "StorageManagement-MIB", "enclosureManagementModuleConnectionNumber"))
if mibBuilder.loadTexts: enclosureManagementModuleConnectionEntry.setStatus('mandatory')
enclosureManagementModuleConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleConnectionNumber.setStatus('mandatory')
enclosureManagementModuleConnectionEMMName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleConnectionEMMName.setStatus('mandatory')
enclosureManagementModuleConnectionEMMNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleConnectionEMMNumber.setStatus('mandatory')
enclosureManagementModuleConnectionEnclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 14, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleConnectionEnclosureName.setStatus('mandatory')
enclosureManagementModuleConnectionEnclosureNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureManagementModuleConnectionEnclosureNumber.setStatus('mandatory')
batteryTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15), )
if mibBuilder.loadTexts: batteryTable.setStatus('mandatory')
batteryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1), ).setIndexNames((0, "StorageManagement-MIB", "batteryNumber"))
if mibBuilder.loadTexts: batteryEntry.setStatus('mandatory')
batteryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryNumber.setStatus('mandatory')
batteryName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryName.setStatus('mandatory')
batteryVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryVendor.setStatus('mandatory')
batteryState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 7, 9, 10, 12, 21, 36))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("degraded", 6), ("reconditioning", 7), ("high", 9), ("low", 10), ("charging", 12), ("missing", 21), ("learning", 36)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryState.setStatus('mandatory')
batteryRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 5), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryRollUpStatus.setStatus('mandatory')
batteryComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 6), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryComponentStatus.setStatus('mandatory')
batteryChargeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryChargeCount.setStatus('mandatory')
batteryMaxChargeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryMaxChargeCount.setStatus('mandatory')
batteryNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryNexusID.setStatus('mandatory')
batteryPredictedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("failed", 1), ("ready", 2), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryPredictedCapacity.setStatus('obsolete')
batteryNextLearnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryNextLearnTime.setStatus('deprecated')
batteryLearnState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("failed", 1), ("active", 2), ("timedOut", 4), ("requested", 8), ("idle", 16), ("due", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryLearnState.setStatus('deprecated')
batteryID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryID.setStatus('mandatory')
batteryMaxLearnDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryMaxLearnDelay.setStatus('deprecated')
batteryLearnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 15, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("auto", 1), ("warn", 2), ("autowarn", 4), ("unknown", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: batteryLearnMode.setStatus('deprecated')
batteryConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 16), )
if mibBuilder.loadTexts: batteryConnectionTable.setStatus('mandatory')
batteryConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 16, 1), ).setIndexNames((0, "StorageManagement-MIB", "batteryConnectionNumber"))
if mibBuilder.loadTexts: batteryConnectionEntry.setStatus('mandatory')
batteryConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryConnectionNumber.setStatus('mandatory')
batteryConnectionBatteryName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 16, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryConnectionBatteryName.setStatus('mandatory')
batteryConnectionBatteryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryConnectionBatteryNumber.setStatus('mandatory')
batteryConnectionControllerName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 16, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryConnectionControllerName.setStatus('mandatory')
batteryConnectionControllerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 16, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryConnectionControllerNumber.setStatus('mandatory')
controllerTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1), )
if mibBuilder.loadTexts: controllerTable.setStatus('mandatory')
controllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1), ).setIndexNames((0, "StorageManagement-MIB", "controllerNumber"))
if mibBuilder.loadTexts: controllerEntry.setStatus('mandatory')
controllerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerNumber.setStatus('mandatory')
controllerName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerName.setStatus('mandatory')
controllerVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerVendor.setStatus('mandatory')
controllerType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 9))).clone(namedValues=NamedValues(("scsi", 1), ("pv660F", 2), ("pv662F", 3), ("ide", 4), ("sata", 5), ("sas", 6), ("pciessd", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerType.setStatus('mandatory')
controllerState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("online", 3), ("offline", 4), ("degraded", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerState.setStatus('mandatory')
controllerSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerSeverity.setStatus('obsolete')
controllerRebuildRateInPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerRebuildRateInPercent.setStatus('mandatory')
controllerFWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerFWVersion.setStatus('mandatory')
controllerCacheSizeInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerCacheSizeInMB.setStatus('mandatory')
controllerCacheSizeInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerCacheSizeInBytes.setStatus('mandatory')
controllerPhysicalDeviceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPhysicalDeviceCount.setStatus('mandatory')
controllerLogicalDeviceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerLogicalDeviceCount.setStatus('mandatory')
controllerPartnerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPartnerStatus.setStatus('obsolete')
controllerHostPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerHostPortCount.setStatus('obsolete')
controllerMemorySizeInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerMemorySizeInMB.setStatus('mandatory')
controllerMemorySizeInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerMemorySizeInBytes.setStatus('mandatory')
controllerDriveChannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerDriveChannelCount.setStatus('obsolete')
controllerFaultTolerant = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerFaultTolerant.setStatus('mandatory')
controllerC0Port0WWN = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC0Port0WWN.setStatus('obsolete')
controllerC0Port0Name = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC0Port0Name.setStatus('obsolete')
controllerC0Port0ID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC0Port0ID.setStatus('obsolete')
controllerC0Target = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC0Target.setStatus('obsolete')
controllerC0Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC0Channel.setStatus('obsolete')
controllerC0OSController = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC0OSController.setStatus('obsolete')
controllerC0BatteryState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 7, 9, 10, 12, 21))).clone(namedValues=NamedValues(("ok", 1), ("failed", 2), ("reconditioning", 7), ("high", 9), ("low", 10), ("charging", 12), ("missing", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC0BatteryState.setStatus('obsolete')
controllerC1Port0WWN = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC1Port0WWN.setStatus('obsolete')
controllerC1Port0Name = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC1Port0Name.setStatus('obsolete')
controllerC1Port0ID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC1Port0ID.setStatus('obsolete')
controllerC1Target = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC1Target.setStatus('obsolete')
controllerC1Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC1Channel.setStatus('obsolete')
controllerC1OSController = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC1OSController.setStatus('obsolete')
controllerC1BatteryState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 7, 9, 10, 12, 21))).clone(namedValues=NamedValues(("ok", 1), ("failed", 2), ("reconditioning", 7), ("high", 9), ("low", 10), ("charging", 12), ("missing", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC1BatteryState.setStatus('obsolete')
controllerNodeWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerNodeWWN.setStatus('obsolete')
controllerC0Port1WWN = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC0Port1WWN.setStatus('obsolete')
controllerC1Port1WWN = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerC1Port1WWN.setStatus('obsolete')
controllerBatteryChargeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerBatteryChargeCount.setStatus('obsolete')
controllerRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 37), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerRollUpStatus.setStatus('mandatory')
controllerComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 38), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerComponentStatus.setStatus('mandatory')
controllerNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerNexusID.setStatus('mandatory')
controllerAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("not-applicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerAlarmState.setStatus('mandatory')
controllerDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerDriverVersion.setStatus('mandatory')
controllerPCISlot = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 42), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPCISlot.setStatus('mandatory')
controllerClusterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("active", 3), ("notApplicable", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerClusterMode.setStatus('mandatory')
controllerMinFWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerMinFWVersion.setStatus('mandatory')
controllerMinDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerMinDriverVersion.setStatus('mandatory')
controllerSCSIInitiatorID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerSCSIInitiatorID.setStatus('mandatory')
controllerChannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerChannelCount.setStatus('mandatory')
controllerReconstructRate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerReconstructRate.setStatus('mandatory')
controllerPatrolReadRate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPatrolReadRate.setStatus('mandatory')
controllerBGIRate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerBGIRate.setStatus('mandatory')
controllerCheckConsistencyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerCheckConsistencyRate.setStatus('mandatory')
controllerPatrolReadMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPatrolReadMode.setStatus('mandatory')
controllerPatrolReadState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("stopped", 1), ("ready", 2), ("active", 4), ("aborted", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPatrolReadState.setStatus('mandatory')
controllerPatrolReadIterations = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPatrolReadIterations.setStatus('mandatory')
controllerStorportDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 55), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerStorportDriverVersion.setStatus('mandatory')
controllerMinRequiredStorportVer = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerMinRequiredStorportVer.setStatus('mandatory')
controllerEncryptionCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerEncryptionCapable.setStatus('mandatory')
controllerEncryptionKeyPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 58), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: controllerEncryptionKeyPresent.setStatus('mandatory')
controllerPersistentHotSpare = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPersistentHotSpare.setStatus('mandatory')
controllerSpinDownUnconfiguredDrives = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerSpinDownUnconfiguredDrives.setStatus('mandatory')
controllerSpinDownHotSpareDrives = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerSpinDownHotSpareDrives.setStatus('mandatory')
controllerSpinDownTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: controllerSpinDownTimeInterval.setStatus('mandatory')
controllerEncryptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerEncryptionMode.setStatus('mandatory')
controllerCacheCade = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerCacheCade.setStatus('mandatory')
controllerSpinDownConfiguredDrives = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerSpinDownConfiguredDrives.setStatus('mandatory')
controllerAutomaticPowerSaving = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerAutomaticPowerSaving.setStatus('mandatory')
controllerConfiguredDrivesSpinUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 67), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerConfiguredDrivesSpinUpTime.setStatus('mandatory')
controllerConfiguredDrivesSpinUpTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerConfiguredDrivesSpinUpTimeInterval.setStatus('mandatory')
controllerPreservedCache = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPreservedCache.setStatus('mandatory')
controllerPIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 1, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: controllerPIEnable.setStatus('mandatory')
tapeDriveTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17), )
if mibBuilder.loadTexts: tapeDriveTable.setStatus('mandatory')
tapeDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1), ).setIndexNames((0, "StorageManagement-MIB", "tapeDriveNumber"))
if mibBuilder.loadTexts: tapeDriveEntry.setStatus('mandatory')
tapeDriveNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeDriveNumber.setStatus('mandatory')
tapeDriveName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeDriveName.setStatus('mandatory')
tapeDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeDriveVendor.setStatus('mandatory')
tapeDriveProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeDriveProductID.setStatus('mandatory')
tapeDriveNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeDriveNexusID.setStatus('mandatory')
tapeDriveBusType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8))).clone(namedValues=NamedValues(("sas", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeDriveBusType.setStatus('mandatory')
tapeDriveSASAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeDriveSASAddress.setStatus('mandatory')
tapeDriveMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 130, 17, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4))).clone(namedValues=NamedValues(("tape", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeDriveMediaType.setStatus('mandatory')
logicalDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140))
arrayDiskLogicalConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3), )
if mibBuilder.loadTexts: arrayDiskLogicalConnectionTable.setStatus('mandatory')
arrayDiskLogicalConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3, 1), ).setIndexNames((0, "StorageManagement-MIB", "arrayDiskLogicalConnectionNumber"))
if mibBuilder.loadTexts: arrayDiskLogicalConnectionEntry.setStatus('mandatory')
arrayDiskLogicalConnectionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLogicalConnectionNumber.setStatus('mandatory')
arrayDiskLogicalConnectionArrayDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLogicalConnectionArrayDiskName.setStatus('mandatory')
arrayDiskLogicalConnectionArrayDiskNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLogicalConnectionArrayDiskNumber.setStatus('mandatory')
arrayDiskLogicalConnectionVirtualDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLogicalConnectionVirtualDiskName.setStatus('mandatory')
arrayDiskLogicalConnectionVirtualDiskNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLogicalConnectionVirtualDiskNumber.setStatus('mandatory')
arrayDiskLogicalConnectionDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLogicalConnectionDiskName.setStatus('mandatory')
arrayDiskLogicalConnectionDiskNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayDiskLogicalConnectionDiskNumber.setStatus('mandatory')
virtualDiskTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1), )
if mibBuilder.loadTexts: virtualDiskTable.setStatus('mandatory')
virtualDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1), ).setIndexNames((0, "StorageManagement-MIB", "virtualDiskNumber"))
if mibBuilder.loadTexts: virtualDiskEntry.setStatus('mandatory')
virtualDiskNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskNumber.setStatus('mandatory')
virtualDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskName.setStatus('mandatory')
virtualDiskDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskDeviceName.setStatus('mandatory')
virtualDiskState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 15, 16, 18, 24, 26, 32, 35, 36, 52))).clone(namedValues=NamedValues(("ready", 1), ("failed", 2), ("online", 3), ("offline", 4), ("degraded", 6), ("verifying", 7), ("resynching", 15), ("regenerating", 16), ("failedRedundancy", 18), ("rebuilding", 24), ("formatting", 26), ("reconstructing", 32), ("initializing", 35), ("backgroundInit", 36), ("permanentlyDegraded", 52)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskState.setStatus('mandatory')
virtualDiskSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("warning", 1), ("error", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskSeverity.setStatus('obsolete')
virtualDiskLengthInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskLengthInMB.setStatus('mandatory')
virtualDiskLengthInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskLengthInBytes.setStatus('mandatory')
virtualDiskFreeSpaceInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskFreeSpaceInMB.setStatus('obsolete')
virtualDiskFreeSpaceInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskFreeSpaceInBytes.setStatus('obsolete')
virtualDiskWritePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 9))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("writeBack", 3), ("writeThrough", 4), ("enabledAlways", 5), ("enabledAlwaysSAS", 6), ("notApplicable", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskWritePolicy.setStatus('mandatory')
virtualDiskReadPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 9))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("readAhead", 3), ("adaptiveReadAhead", 4), ("noReadAhead", 5), ("notApplicable", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskReadPolicy.setStatus('mandatory')
virtualDiskCachePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("directIO", 1), ("cachedIO", 2), ("not-applicable", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskCachePolicy.setStatus('mandatory')
virtualDiskLayout = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("concatenated", 1), ("raid-0", 2), ("raid-1", 3), ("raid-2", 4), ("raid-3", 5), ("raid-4", 6), ("raid-5", 7), ("raid-6", 8), ("raid-7", 9), ("raid-10", 10), ("raid-30", 11), ("raid-50", 12), ("addSpares", 13), ("deleteLogical", 14), ("transformLogical", 15), ("raid-0-plus-1", 18), ("concatRaid-1", 19), ("concatRaid-5", 20), ("noRaid", 21), ("volume", 22), ("raidMorph", 23), ("raid-60", 24), ("cacheCade", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskLayout.setStatus('mandatory')
virtualDiskCurStripeSizeInMB = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskCurStripeSizeInMB.setStatus('mandatory')
virtualDiskCurStripeSizeInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskCurStripeSizeInBytes.setStatus('mandatory')
virtualDiskChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskChannel.setStatus('obsolete')
virtualDiskTargetID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskTargetID.setStatus('mandatory')
virtualDiskLunID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskLunID.setStatus('obsolete')
virtualDiskRollUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 19), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskRollUpStatus.setStatus('mandatory')
virtualDiskComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 20), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskComponentStatus.setStatus('mandatory')
virtualDiskNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskNexusID.setStatus('mandatory')
virtualDiskArrayDiskType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("sas", 1), ("sata", 2), ("scsi", 3), ("ide", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskArrayDiskType.setStatus('mandatory')
virtualDiskBadBlocksDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskBadBlocksDetected.setStatus('mandatory')
virtualDiskEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskEncrypted.setStatus('mandatory')
virtualDiskIsCacheCade = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskIsCacheCade.setStatus('mandatory')
virtualDiskDiskCachePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskDiskCachePolicy.setStatus('mandatory')
virtualDiskAssociatedFluidCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskAssociatedFluidCacheStatus.setStatus('mandatory')
virtualDiskPIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskPIEnable.setStatus('mandatory')
virtualDiskPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 2), )
if mibBuilder.loadTexts: virtualDiskPartitionTable.setStatus('mandatory')
virtualDiskPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 2, 1), ).setIndexNames((0, "StorageManagement-MIB", "virtualDiskPartitionNumber"))
if mibBuilder.loadTexts: virtualDiskPartitionEntry.setStatus('mandatory')
virtualDiskPartitionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskPartitionNumber.setStatus('mandatory')
virtualDiskPartitionDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskPartitionDeviceName.setStatus('mandatory')
virtualDiskPartitionState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("no", 2), ("removing", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskPartitionState.setStatus('mandatory')
virtualDiskPartitionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskPartitionSize.setStatus('mandatory')
virtualDiskPartitionFluidCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 2, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskPartitionFluidCacheStatus.setStatus('mandatory')
virtualDiskPartitionNexusID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: virtualDiskPartitionNexusID.setStatus('mandatory')
fluidCacheTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4), )
if mibBuilder.loadTexts: fluidCacheTable.setStatus('mandatory')
fluidCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1), ).setIndexNames((0, "StorageManagement-MIB", "fluidCacheNumber"))
if mibBuilder.loadTexts: fluidCacheEntry.setStatus('mandatory')
fluidCacheNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheNumber.setStatus('mandatory')
fluidCacheName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheName.setStatus('mandatory')
fluidCacheLicenseState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseState.setStatus('mandatory')
fluidCacheLicenseValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseValidity.setStatus('mandatory')
fluidCacheLicenseEntitlementID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseEntitlementID.setStatus('mandatory')
fluidCacheLicenseDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseDuration.setStatus('mandatory')
fluidCacheLicenseCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseCapacity.setStatus('mandatory')
fluidCacheLicenseRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fluidCacheLicenseRemaining.setStatus('mandatory')
fluidCacheLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseType.setStatus('mandatory')
fluidCacheLicenseVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseVendor.setStatus('mandatory')
fluidCacheLicenseProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseProductId.setStatus('mandatory')
fluidCacheLicenseDateSold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseDateSold.setStatus('mandatory')
fluidCacheLicenseGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseGeneration.setStatus('mandatory')
fluidCacheLicenseFeatureID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseFeatureID.setStatus('mandatory')
fluidCacheLicenseFeatureDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheLicenseFeatureDescription.setStatus('mandatory')
fluidCacheNexus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 4, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheNexus.setStatus('mandatory')
fluidCacheDiskTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5), )
if mibBuilder.loadTexts: fluidCacheDiskTable.setStatus('mandatory')
fluidCacheDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1), ).setIndexNames((0, "StorageManagement-MIB", "fluidCacheDiskNumber"))
if mibBuilder.loadTexts: fluidCacheDiskEntry.setStatus('mandatory')
fluidCacheDiskNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskNumber.setStatus('mandatory')
fluidCacheDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskName.setStatus('mandatory')
fluidCacheDiskState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskState.setStatus('mandatory')
fluidCacheDiskBackendDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskBackendDeviceType.setStatus('mandatory')
fluidCacheDiskBackendDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskBackendDeviceName.setStatus('mandatory')
fluidCacheDiskBackendDeviceSize = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskBackendDeviceSize.setStatus('mandatory')
fluidCacheDiskOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskOperatingMode.setStatus('mandatory')
fluidCacheDiskConfiguredMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskConfiguredMode.setStatus('mandatory')
fluidCacheDiskNexus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fluidCacheDiskNexus.setStatus('mandatory')
fluidCacheDiskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCacheDiskStatus.setStatus('mandatory')
fluidCachePoolTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6), )
if mibBuilder.loadTexts: fluidCachePoolTable.setStatus('mandatory')
fluidCachePoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1), ).setIndexNames((0, "StorageManagement-MIB", "fluidCachePoolNumber"))
if mibBuilder.loadTexts: fluidCachePoolEntry.setStatus('mandatory')
fluidCachePoolNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCachePoolNumber.setStatus('mandatory')
fluidCachePoolStoreCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCachePoolStoreCount.setStatus('mandatory')
fluidCachePoolUUID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCachePoolUUID.setStatus('mandatory')
fluidCachePoolLicenseState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCachePoolLicenseState.setStatus('mandatory')
fluidCachePoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCachePoolSize.setStatus('mandatory')
fluidCachePoolHighAvailabilityState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCachePoolHighAvailabilityState.setStatus('mandatory')
fluidCachePoolNexus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCachePoolNexus.setStatus('mandatory')
fluidCachePoolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 140, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fluidCachePoolStatus.setStatus('mandatory')
storageManagementEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200))
messageIDEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: messageIDEvent.setStatus('mandatory')
descriptionEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: descriptionEvent.setStatus('mandatory')
locationEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: locationEvent.setStatus('mandatory')
objectNameEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectNameEvent.setStatus('mandatory')
objectOIDEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectOIDEvent.setStatus('mandatory')
objectNexusEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectNexusEvent.setStatus('mandatory')
currentStatusEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 7), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentStatusEvent.setStatus('mandatory')
previousStatusEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 8), DellStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: previousStatusEvent.setStatus('mandatory')
enhancedMessageIDEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enhancedMessageIDEvent.setStatus('mandatory')
systemFQDNEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFQDNEvent.setStatus('mandatory')
serviceTagEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceTagEvent.setStatus('mandatory')
chassisServiceTagEvent = MibScalar((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisServiceTagEvent.setStatus('mandatory')
alertStorageManagementInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,101)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"))
alertStorageManagementNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,102)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"))
alertStorageManagementWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,103)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"))
alertStorageManagementFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,104)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"))
alertStorageManagementNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,105)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"))
alertControllerInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,751)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertControllerNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,752)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertControllerWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,753)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertControllerFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,754)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertControllerNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,755)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertChannelInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,801)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertChannelNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,802)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertChannelWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,803)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertChannelFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,804)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertChannelNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,805)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEnclosureInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,851)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEnclosureNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,852)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEnclosureWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,853)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEnclosureFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,854)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEnclosureNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,855)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertArrayDiskInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,901)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertArrayDiskNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,902)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertArrayDiskWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,903)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertArrayDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,904)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertArrayDiskNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,905)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEMMInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,951)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEMMNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,952)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEMMWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,953)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEMMFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,954)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEMMNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,955)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertPowerSupplyInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1001)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertPowerSupplyNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1002)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertPowerSupplyWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1003)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1004)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertPowerSupplyNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1005)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertTemperatureProbeInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1051)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertTemperatureProbeNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1052)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertTemperatureProbeWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1053)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertTemperatureProbeFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1054)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertTemperatureProbeNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1055)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFanInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1101)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFanNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1102)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFanWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1103)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1104)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFanNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1105)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertBatteryInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1151)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertBatteryNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1152)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertBatteryWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1153)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertBatteryFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1154)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertBatteryNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1155)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertVirtualDiskInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1201)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertVirtualDiskNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1202)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertVirtualDiskWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1203)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertVirtualDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1204)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertVirtualDiskNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1205)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertRedundancyNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1304)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertRedundancyDegraded = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1305)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertRedundancyLost = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1306)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFluidCacheDiskInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1401)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertfluidCacheDiskWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1403)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFluidCacheDisklFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1404)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertVirtualDiskPartitionInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1501)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertVirtualDiskPartitionWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1503)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertVirtualDiskPartitionFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1504)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFluidCacheInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1601)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertfluidCacheWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1603)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFluidCacheFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1604)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFluidCachePoolInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1701)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertfluidCachePoolWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1703)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertFluidCachePoolFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,1704)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"))
alertEEMIStorageManagementInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,10100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIStorageManagementNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,10200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIStorageManagementWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,10300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIStorageManagementFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,10400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIStorageManagementNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,10500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIControllerInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,75100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIControllerNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,75200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIControllerWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,75300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIControllerFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,75400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIControllerNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,75500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIChannelInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,80100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIChannelNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,80200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIChannelWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,80300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIChannelFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,80400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIChannelNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,80500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEnclosureInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,85100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEnclosureNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,85200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEnclosureWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,85300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEnclosureFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,85400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEnclosureNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,85500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIArrayDiskInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,90100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIArrayDiskNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,90200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIArrayDiskWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,90300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIArrayDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,90400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIArrayDiskNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,90500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEMMEMMInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,95100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEMMNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,95200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEMMWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,95300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEMMFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,95400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIEMMNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,95500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIPowerSupplyInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,100100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIPowerSupplyNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,100200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIPowerSupplyWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,100300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,100400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIPowerSupplyNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,100500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMITemperatureProbeInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,105100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMITemperatureProbeNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,105200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMITemperatureProbeWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,105300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMITemperatureProbeFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,105400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMITemperatureProbeNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,105500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFanInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,110100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFanNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,110200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFanWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,110300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,110400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFanNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,110500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIBatteryInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,115100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIBatteryNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,115200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIBatteryWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,115300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIBatteryFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,115400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIBatteryNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,115500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIVirtualDiskInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,120100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIVirtualDiskNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,120200)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIVirtualDiskWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,120300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIVirtualDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,120400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIVirtualDiskNonRecoverable = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,120500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIRedundancyNormal = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,130400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIRedundancyDegraded = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,130500)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIRedundancyLost = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,130600)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFluidCacheDiskInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,140100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIfluidCacheDiskWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,140300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFluidCacheDisklFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,140400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIVirtualDiskPartitionInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,150100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIVirtualDiskPartitionWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,150300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIVirtualDiskPartitionFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,150400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFluidCacheInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,160100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIfluidCacheWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,160300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFluidCacheFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,160400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFluidCachePoolInformation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,170100)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIfluidCachePoolWarning = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,170300)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
alertEEMIFluidCachePoolFailure = NotificationType((1, 3, 6, 1, 4, 1, 674, 10893, 1, 20, 200) + (0,170400)).setObjects(("StorageManagement-MIB", "messageIDEvent"), ("StorageManagement-MIB", "descriptionEvent"), ("StorageManagement-MIB", "locationEvent"), ("StorageManagement-MIB", "objectNameEvent"), ("StorageManagement-MIB", "objectOIDEvent"), ("StorageManagement-MIB", "objectNexusEvent"), ("StorageManagement-MIB", "currentStatusEvent"), ("StorageManagement-MIB", "previousStatusEvent"), ("StorageManagement-MIB", "enhancedMessageIDEvent"), ("StorageManagement-MIB", "systemFQDNEvent"), ("StorageManagement-MIB", "serviceTagEvent"), ("StorageManagement-MIB", "chassisServiceTagEvent"))
mibBuilder.exportSymbols("StorageManagement-MIB", controllerMinDriverVersion=controllerMinDriverVersion, arrayDiskLargestContiguousFreeSpaceInMB=arrayDiskLargestContiguousFreeSpaceInMB, agentGlobalSystemStatus=agentGlobalSystemStatus, arrayDiskUsedSpaceInBytes=arrayDiskUsedSpaceInBytes, controllerPartnerStatus=controllerPartnerStatus, enclosureManagementModuleConnectionEMMNumber=enclosureManagementModuleConnectionEMMNumber, arrayDiskDriveWriteCache=arrayDiskDriveWriteCache, alertEMMFailure=alertEMMFailure, softwareDescription=softwareDescription, arrayDiskChannel=arrayDiskChannel, tapeDriveBusType=tapeDriveBusType, fluidCacheDiskNexus=fluidCacheDiskNexus, alertEEMITemperatureProbeNormal=alertEEMITemperatureProbeNormal, agentIPAddress=agentIPAddress, virtualDiskWritePolicy=virtualDiskWritePolicy, alertVirtualDiskPartitionInformation=alertVirtualDiskPartitionInformation, alertEEMIFanInformation=alertEEMIFanInformation, alertEEMIPowerSupplyNonRecoverable=alertEEMIPowerSupplyNonRecoverable, fanTable=fanTable, arrayDiskLargestContiguousFreeSpaceInBytes=arrayDiskLargestContiguousFreeSpaceInBytes, arrayDiskChannelConnectionTable=arrayDiskChannelConnectionTable, controllerFaultTolerant=controllerFaultTolerant, channelTable=channelTable, controllerTable=controllerTable, powerSupplyConnectionFirmwareVersion=powerSupplyConnectionFirmwareVersion, alertEEMIRedundancyDegraded=alertEEMIRedundancyDegraded, enclosureProductID=enclosureProductID, arrayDiskLogicalConnectionVirtualDiskNumber=arrayDiskLogicalConnectionVirtualDiskNumber, virtualDiskFreeSpaceInMB=virtualDiskFreeSpaceInMB, virtualDiskPartitionDeviceName=virtualDiskPartitionDeviceName, fluidCacheLicenseGeneration=fluidCacheLicenseGeneration, alertEnclosureFailure=alertEnclosureFailure, controllerC0OSController=controllerC0OSController, arrayDiskProductID=arrayDiskProductID, agentRefreshRate=agentRefreshRate, alertEEMIPowerSupplyInformation=alertEEMIPowerSupplyInformation, alertPowerSupplyWarning=alertPowerSupplyWarning, controllerPreservedCache=controllerPreservedCache, alertEEMIFluidCacheDisklFailure=alertEEMIFluidCacheDisklFailure, agentSmartThermalShutdown=agentSmartThermalShutdown, powerSupplyConnectionNumber=powerSupplyConnectionNumber, batteryConnectionBatteryNumber=batteryConnectionBatteryNumber, fluidCacheLicenseType=fluidCacheLicenseType, fanConnectionEnclosureNumber=fanConnectionEnclosureNumber, arrayDiskSpareState=arrayDiskSpareState, tapeDriveTable=tapeDriveTable, softwareProduct=softwareProduct, fluidCachePoolEntry=fluidCachePoolEntry, physicalDevices=physicalDevices, controllerAutomaticPowerSaving=controllerAutomaticPowerSaving, channelState=channelState, powerSupplyRollUpStatus=powerSupplyRollUpStatus, batteryPredictedCapacity=batteryPredictedCapacity, arrayDiskPowerState=arrayDiskPowerState, temperatureConnectionTable=temperatureConnectionTable, arrayDiskLogicalConnectionArrayDiskName=arrayDiskLogicalConnectionArrayDiskName, temperatureProbeVendor=temperatureProbeVendor, arrayDiskChannelConnectionEntry=arrayDiskChannelConnectionEntry, virtualDiskPartitionState=virtualDiskPartitionState, controllerFWVersion=controllerFWVersion, arrayDiskNegotiatedSpeed=arrayDiskNegotiatedSpeed, fluidCachePoolHighAvailabilityState=fluidCachePoolHighAvailabilityState, fluidCacheDiskTable=fluidCacheDiskTable, alertEnclosureNormal=alertEnclosureNormal, alertEEMIBatteryInformation=alertEEMIBatteryInformation, alertFluidCacheFailure=alertFluidCacheFailure, enclosureServiceTag=enclosureServiceTag, alertEEMIfluidCacheWarning=alertEEMIfluidCacheWarning, virtualDiskDiskCachePolicy=virtualDiskDiskCachePolicy, enclosureManagementModuleConnectionTable=enclosureManagementModuleConnectionTable, fluidCacheDiskState=fluidCacheDiskState, virtualDiskCurStripeSizeInBytes=virtualDiskCurStripeSizeInBytes, controllerNexusID=controllerNexusID, alertEEMIControllerInformation=alertEEMIControllerInformation, controllerReconstructRate=controllerReconstructRate, virtualDiskEntry=virtualDiskEntry, currentStatusEvent=currentStatusEvent, enclosureManagementModuleRollUpStatus=enclosureManagementModuleRollUpStatus, controllerPhysicalDeviceCount=controllerPhysicalDeviceCount, fanConnectionFanNumber=fanConnectionFanNumber, controllerCacheCade=controllerCacheCade, enclosureRollUpStatus=enclosureRollUpStatus, alertBatteryFailure=alertBatteryFailure, alertEEMIStorageManagementInformation=alertEEMIStorageManagementInformation, powerSupplyName=powerSupplyName, tapeDriveName=tapeDriveName, alertEEMIFluidCachePoolInformation=alertEEMIFluidCachePoolInformation, alertEMMEMMInformation=alertEMMEMMInformation, fanConnectionTable=fanConnectionTable, arrayDiskSectorSize=arrayDiskSectorSize, alertArrayDiskNormal=alertArrayDiskNormal, alertPowerSupplyFailure=alertPowerSupplyFailure, fluidCacheLicenseVendor=fluidCacheLicenseVendor, arrayDiskEnclosureConnectionArrayDiskNumber=arrayDiskEnclosureConnectionArrayDiskNumber, controllerC1Channel=controllerC1Channel, alertEEMIFanNormal=alertEEMIFanNormal, enclosureManagementModuleFWVersion=enclosureManagementModuleFWVersion, batteryName=batteryName, enclosureManagementModuleNumber=enclosureManagementModuleNumber, enclosureFirmwareVersion=enclosureFirmwareVersion, controllerC0BatteryState=controllerC0BatteryState, controllerC0Target=controllerC0Target, alertEEMIStorageManagementNonRecoverable=alertEEMIStorageManagementNonRecoverable, alertChannelFailure=alertChannelFailure, alertFluidCacheDiskInformation=alertFluidCacheDiskInformation, alertEEMIVirtualDiskWarning=alertEEMIVirtualDiskWarning, temperatureProbeUnit=temperatureProbeUnit, controllerPatrolReadState=controllerPatrolReadState, storageManagement=storageManagement, channelBusType=channelBusType, enhancedMessageIDEvent=enhancedMessageIDEvent, alertFluidCachePoolInformation=alertFluidCachePoolInformation, alertFanNonRecoverable=alertFanNonRecoverable, arrayDiskPartNumber=arrayDiskPartNumber, controllerPatrolReadIterations=controllerPatrolReadIterations, batteryState=batteryState, alertArrayDiskWarning=alertArrayDiskWarning, enclosureChannelNumber=enclosureChannelNumber, enclosureESM1PartNumber=enclosureESM1PartNumber, fluidCacheLicenseRemaining=fluidCacheLicenseRemaining, arrayDiskSASAddress=arrayDiskSASAddress, controllerAlarmState=controllerAlarmState, enclosureManagementModuleComponentStatus=enclosureManagementModuleComponentStatus, controllerChannelCount=controllerChannelCount, globalData=globalData, temperatureProbeSeverity=temperatureProbeSeverity, dell=dell, arrayDiskLogicalConnectionArrayDiskNumber=arrayDiskLogicalConnectionArrayDiskNumber, alertEEMIFanNonRecoverable=alertEEMIFanNonRecoverable, arrayDiskLogicalConnectionTable=arrayDiskLogicalConnectionTable, controllerConfiguredDrivesSpinUpTimeInterval=controllerConfiguredDrivesSpinUpTimeInterval, alertEMMNonRecoverable=alertEMMNonRecoverable, alertPowerSupplyInformation=alertPowerSupplyInformation, alertEEMITemperatureProbeFailure=alertEEMITemperatureProbeFailure, alertEEMIEMMWarning=alertEEMIEMMWarning, fluidCacheLicenseValidity=fluidCacheLicenseValidity, enclosureNumber=enclosureNumber, virtualDiskState=virtualDiskState, temperatureProbeState=temperatureProbeState, controllerSpinDownConfiguredDrives=controllerSpinDownConfiguredDrives, alertVirtualDiskPartitionWarning=alertVirtualDiskPartitionWarning, powerSupplyConnectionPowersupplyNumber=powerSupplyConnectionPowersupplyNumber, storage=storage, arrayDiskLifeRemaining=arrayDiskLifeRemaining, controllerEntry=controllerEntry, alertPowerSupplyNormal=alertPowerSupplyNormal, powerSupplyNexusID=powerSupplyNexusID, alertEEMIPowerSupplyNormal=alertEEMIPowerSupplyNormal, temperatureProbeMaxCritical=temperatureProbeMaxCritical, tapeDriveSASAddress=tapeDriveSASAddress, channelNumber=channelNumber, arrayDiskLengthInBytes=arrayDiskLengthInBytes, arrayDiskManufactureYear=arrayDiskManufactureYear, chassisServiceTagEvent=chassisServiceTagEvent, fluidCacheName=fluidCacheName, powerSupply1PartNumber=powerSupply1PartNumber, virtualDiskFreeSpaceInBytes=virtualDiskFreeSpaceInBytes, alertStorageManagementWarning=alertStorageManagementWarning, alertEEMIStorageManagementWarning=alertEEMIStorageManagementWarning, controllerSpinDownUnconfiguredDrives=controllerSpinDownUnconfiguredDrives, controllerMemorySizeInBytes=controllerMemorySizeInBytes, alertEEMITemperatureProbeNonRecoverable=alertEEMITemperatureProbeNonRecoverable, alertEEMIFanFailure=alertEEMIFanFailure, fanEntry=fanEntry, arrayDiskAltaProductId=arrayDiskAltaProductId, enclosureManagementModuleName=enclosureManagementModuleName, enclosureType=enclosureType, tapeDriveNumber=tapeDriveNumber, controllerC0Port0WWN=controllerC0Port0WWN, alertPowerSupplyNonRecoverable=alertPowerSupplyNonRecoverable, enclosureManagementModuleConnectionEMMName=enclosureManagementModuleConnectionEMMName, arrayDiskNegotiatedLinkWidth=arrayDiskNegotiatedLinkWidth, fluidCacheNexus=fluidCacheNexus, batteryConnectionEntry=batteryConnectionEntry, virtualDiskNumber=virtualDiskNumber, controllerSpinDownTimeInterval=controllerSpinDownTimeInterval, fan2PartNumber=fan2PartNumber, fluidCachePoolTable=fluidCachePoolTable, objectNameEvent=objectNameEvent, alertFanFailure=alertFanFailure, alertEEMIBatteryWarning=alertEEMIBatteryWarning, virtualDiskReadPolicy=virtualDiskReadPolicy, controllerC0Port1WWN=controllerC0Port1WWN, alertTemperatureProbeNormal=alertTemperatureProbeNormal, fluidCacheDiskBackendDeviceName=fluidCacheDiskBackendDeviceName, alertEEMIChannelWarning=alertEEMIChannelWarning, tapeDriveProductID=tapeDriveProductID, alertFluidCachePoolFailure=alertFluidCachePoolFailure, arrayDiskSeverity=arrayDiskSeverity, controllerDriverVersion=controllerDriverVersion, enclosureSASAddress=enclosureSASAddress, arrayDiskEnclosureConnectionTable=arrayDiskEnclosureConnectionTable, fanProbeUnit=fanProbeUnit, fluidCachePoolSize=fluidCachePoolSize, channelTermination=channelTermination, arrayDiskEnclosureConnectionEntry=arrayDiskEnclosureConnectionEntry, arrayDiskAltaVendorId=arrayDiskAltaVendorId, controllerBatteryChargeCount=controllerBatteryChargeCount, agentSoftwareStatus=agentSoftwareStatus, temperatureProbeCurValue=temperatureProbeCurValue, fan1PartNumber=fan1PartNumber, fluidCachePoolNumber=fluidCachePoolNumber, arrayDiskBusType=arrayDiskBusType, arrayDiskChannelConnectionControllerName=arrayDiskChannelConnectionControllerName, alertChannelInformation=alertChannelInformation, enclosureName=enclosureName, virtualDiskIsCacheCade=virtualDiskIsCacheCade, alertEEMIArrayDiskWarning=alertEEMIArrayDiskWarning, fanRevision=fanRevision, enclosureManagementModuleConnectionNumber=enclosureManagementModuleConnectionNumber, virtualDiskRollUpStatus=virtualDiskRollUpStatus, fanNexusID=fanNexusID, agentLastGlobalSystemStatus=agentLastGlobalSystemStatus, alertFanInformation=alertFanInformation, controllerLogicalDeviceCount=controllerLogicalDeviceCount, fluidCacheDiskNumber=fluidCacheDiskNumber, agentManagementSoftwareURLName=agentManagementSoftwareURLName, arrayDiskMediaType=arrayDiskMediaType, enclosureBackplanePartNumber=enclosureBackplanePartNumber, fanProbeMinWarning=fanProbeMinWarning, controllerMemorySizeInMB=controllerMemorySizeInMB, virtualDiskSeverity=virtualDiskSeverity, tapeDriveEntry=tapeDriveEntry, arrayDiskRevision=arrayDiskRevision, alertEEMIEnclosureNormal=alertEEMIEnclosureNormal, systemFQDNEvent=systemFQDNEvent, fanConnectionEnclosureName=fanConnectionEnclosureName, controllerConfiguredDrivesSpinUpTime=controllerConfiguredDrivesSpinUpTime, alertVirtualDiskNonRecoverable=alertVirtualDiskNonRecoverable, fluidCacheEntry=fluidCacheEntry, alertEEMIEnclosureInformation=alertEEMIEnclosureInformation, alertFanWarning=alertFanWarning, controllerC1Port1WWN=controllerC1Port1WWN, alertEEMIChannelInformation=alertEEMIChannelInformation, alertEEMIRedundancyNormal=alertEEMIRedundancyNormal, controllerC1Target=controllerC1Target, controllerPCISlot=controllerPCISlot, fluidCacheLicenseDuration=fluidCacheLicenseDuration, arrayDiskUsedSpaceInMB=arrayDiskUsedSpaceInMB, fluidCachePoolUUID=fluidCachePoolUUID, arrayDiskLunID=arrayDiskLunID, virtualDiskArrayDiskType=virtualDiskArrayDiskType, channelName=channelName, alertEnclosureInformation=alertEnclosureInformation, alertEEMIRedundancyLost=alertEEMIRedundancyLost, alertEEMIControllerWarning=alertEEMIControllerWarning, temperatureConnectionEnclosureName=temperatureConnectionEnclosureName, fanName=fanName, arrayDiskNexusID=arrayDiskNexusID, virtualDiskPIEnable=virtualDiskPIEnable, arrayDiskFreeSpaceInBytes=arrayDiskFreeSpaceInBytes, virtualDiskChannel=virtualDiskChannel, arrayDiskChannelConnectionArrayDiskNumber=arrayDiskChannelConnectionArrayDiskNumber, virtualDiskLayout=virtualDiskLayout)
mibBuilder.exportSymbols("StorageManagement-MIB", arrayDiskLogicalConnectionDiskNumber=arrayDiskLogicalConnectionDiskNumber, controllerEncryptionKeyPresent=controllerEncryptionKeyPresent, enclosureState=enclosureState, batteryNumber=batteryNumber, channelNexusID=channelNexusID, arrayDiskChannelConnectionControllerNumber=arrayDiskChannelConnectionControllerNumber, arrayDiskManufactureDay=arrayDiskManufactureDay, powerSupplyConnectionTable=powerSupplyConnectionTable, agentModifiers=agentModifiers, arrayDiskPICapable=arrayDiskPICapable, controllerPersistentHotSpare=controllerPersistentHotSpare, alertEEMIChannelFailure=alertEEMIChannelFailure, alertEEMIEMMNormal=alertEEMIEMMNormal, powerSupplyEntry=powerSupplyEntry, powerSupply2PartNumber=powerSupply2PartNumber, controllerCheckConsistencyRate=controllerCheckConsistencyRate, alertChannelNormal=alertChannelNormal, alertStorageManagementNormal=alertStorageManagementNormal, virtualDiskLengthInMB=virtualDiskLengthInMB, arrayDiskDeviceLifeStatus=arrayDiskDeviceLifeStatus, fanProbeCurrValue=fanProbeCurrValue, batteryNexusID=batteryNexusID, objectNexusEvent=objectNexusEvent, alertEEMIVirtualDiskNonRecoverable=alertEEMIVirtualDiskNonRecoverable, agentVersion=agentVersion, globalStatus=globalStatus, enclosureConfig=enclosureConfig, controllerMinRequiredStorportVer=controllerMinRequiredStorportVer, alertArrayDiskFailure=alertArrayDiskFailure, alertEEMIVirtualDiskPartitionInformation=alertEEMIVirtualDiskPartitionInformation, fluidCacheLicenseEntitlementID=fluidCacheLicenseEntitlementID, arrayDiskChannelConnectionChannelNumber=arrayDiskChannelConnectionChannelNumber, enclosureNexusID=enclosureNexusID, alertEEMIChannelNormal=alertEEMIChannelNormal, agentLastGlobalStatus=agentLastGlobalStatus, fanConnectionFanName=fanConnectionFanName, displayName=displayName, fluidCacheNumber=fluidCacheNumber, controllerVendor=controllerVendor, fluidCachePoolLicenseState=fluidCachePoolLicenseState, alertEEMIfluidCachePoolWarning=alertEEMIfluidCachePoolWarning, alertEEMIPowerSupplyFailure=alertEEMIPowerSupplyFailure, fluidCachePoolNexus=fluidCachePoolNexus, alertfluidCacheDiskWarning=alertfluidCacheDiskWarning, alertEEMIEnclosureFailure=alertEEMIEnclosureFailure, alertVirtualDiskPartitionFailure=alertVirtualDiskPartitionFailure, powerSupplyState=powerSupplyState, software=software, enclosureManagementModuleMaxSpeed=enclosureManagementModuleMaxSpeed, virtualDiskAssociatedFluidCacheStatus=virtualDiskAssociatedFluidCacheStatus, controllerType=controllerType, agentHostname=agentHostname, temperatureProbeComponentStatus=temperatureProbeComponentStatus, arrayDiskChannelConnectionNumber=arrayDiskChannelConnectionNumber, powerSupplyVendor=powerSupplyVendor, previousStatusEvent=previousStatusEvent, alertEEMIfluidCacheDiskWarning=alertEEMIfluidCacheDiskWarning, softwareVersion=softwareVersion, enclosureManagementModuleTable=enclosureManagementModuleTable, alertEEMIEnclosureNonRecoverable=alertEEMIEnclosureNonRecoverable, enclosureAssetTag=enclosureAssetTag, arrayDiskLogicalConnectionNumber=arrayDiskLogicalConnectionNumber, temperatureConnectionNumber=temperatureConnectionNumber, tapeDriveNexusID=tapeDriveNexusID, virtualDiskPartitionFluidCacheStatus=virtualDiskPartitionFluidCacheStatus, temperatureProbeEntry=temperatureProbeEntry, arrayDiskCapableSpeed=arrayDiskCapableSpeed, arrayDiskEnclosureConnectionNumber=arrayDiskEnclosureConnectionNumber, controllerHostPortCount=controllerHostPortCount, arrayDiskSmartAlertIndication=arrayDiskSmartAlertIndication, powerSupplyComponentStatus=powerSupplyComponentStatus, controllerC1Port0ID=controllerC1Port0ID, alertFanNormal=alertFanNormal, arrayDiskComponentStatus=arrayDiskComponentStatus, alertEEMIVirtualDiskPartitionFailure=alertEEMIVirtualDiskPartitionFailure, controllerRollUpStatus=controllerRollUpStatus, alertTemperatureProbeNonRecoverable=alertTemperatureProbeNonRecoverable, controllerNodeWWN=controllerNodeWWN, controllerCacheSizeInMB=controllerCacheSizeInMB, virtualDiskCurStripeSizeInMB=virtualDiskCurStripeSizeInMB, enclosureManagementModuleVendor=enclosureManagementModuleVendor, fluidCacheLicenseFeatureDescription=fluidCacheLicenseFeatureDescription, fluidCacheDiskName=fluidCacheDiskName, locationEvent=locationEvent, descriptionEvent=descriptionEvent, enclosureSCSIRate=enclosureSCSIRate, alertStorageManagementFailure=alertStorageManagementFailure, tapeDriveMediaType=tapeDriveMediaType, alertEEMIBatteryFailure=alertEEMIBatteryFailure, virtualDiskPartitionNexusID=virtualDiskPartitionNexusID, controllerNumber=controllerNumber, virtualDiskCachePolicy=virtualDiskCachePolicy, alertBatteryWarning=alertBatteryWarning, arrayDiskDriverVersion=arrayDiskDriverVersion, alertArrayDiskNonRecoverable=alertArrayDiskNonRecoverable, arrayDiskEnclosureConnectionArrayDiskName=arrayDiskEnclosureConnectionArrayDiskName, fanState=fanState, fanProbeMaxCritical=fanProbeMaxCritical, enclosureAlarm=enclosureAlarm, batteryConnectionBatteryName=batteryConnectionBatteryName, fluidCacheDiskConfiguredMode=fluidCacheDiskConfiguredMode, temperatureProbeNexusID=temperatureProbeNexusID, arrayDiskFreeSpaceInMB=arrayDiskFreeSpaceInMB, powerSupplyConnectionEnclosureName=powerSupplyConnectionEnclosureName, alertVirtualDiskFailure=alertVirtualDiskFailure, enclosurePartNumber=enclosurePartNumber, alertEMMWarning=alertEMMWarning, fanConnectionEntry=fanConnectionEntry, alertfluidCacheWarning=alertfluidCacheWarning, arrayDiskEntry=arrayDiskEntry, alertfluidCachePoolWarning=alertfluidCachePoolWarning, alertBatteryNonRecoverable=alertBatteryNonRecoverable, enclosureSerialNumber=enclosureSerialNumber, fanVendor=fanVendor, enclosureManagementModuleNexusID=enclosureManagementModuleNexusID, controllerC0Port0ID=controllerC0Port0ID, arrayDiskTargetID=arrayDiskTargetID, alertBatteryInformation=alertBatteryInformation, arrayDiskSerialNo=arrayDiskSerialNo, virtualDiskTargetID=virtualDiskTargetID, alertEEMITemperatureProbeWarning=alertEEMITemperatureProbeWarning, enclosureOccupiedSlotCount=enclosureOccupiedSlotCount, alertEEMIControllerNormal=alertEEMIControllerNormal, controllerPIEnable=controllerPIEnable, alertStorageManagementNonRecoverable=alertStorageManagementNonRecoverable, enclosureProcessorVersion=enclosureProcessorVersion, enclosureKernelVersion=enclosureKernelVersion, enclosureManagementModuleEntry=enclosureManagementModuleEntry, alertEEMIChannelNonRecoverable=alertEEMIChannelNonRecoverable, alertEEMIEMMNonRecoverable=alertEEMIEMMNonRecoverable, channelEntry=channelEntry, arrayDiskName=arrayDiskName, arrayDiskEnclosureConnectionEnclosureNumber=arrayDiskEnclosureConnectionEnclosureNumber, arrayDiskChannelConnectionArrayDiskName=arrayDiskChannelConnectionArrayDiskName, alertEEMIFluidCacheInformation=alertEEMIFluidCacheInformation, powerSupplyConnectionEntry=powerSupplyConnectionEntry, batteryVendor=batteryVendor, controllerDriveChannelCount=controllerDriveChannelCount, fanRollUpStatus=fanRollUpStatus, storageManagementEvent=storageManagementEvent, enclosureComponentStatus=enclosureComponentStatus, fluidCacheLicenseDateSold=fluidCacheLicenseDateSold, alertEnclosureNonRecoverable=alertEnclosureNonRecoverable, fanNumber=fanNumber, arrayDiskEnclosureConnectionEnclosureName=arrayDiskEnclosureConnectionEnclosureName, arrayDiskEnclosureConnectionControllerNumber=arrayDiskEnclosureConnectionControllerNumber, batteryID=batteryID, arrayDiskLogicalConnectionVirtualDiskName=arrayDiskLogicalConnectionVirtualDiskName, alertControllerWarning=alertControllerWarning, alertEnclosureWarning=alertEnclosureWarning, powerSupplyConnectionEnclosureNumber=powerSupplyConnectionEnclosureNumber, batteryLearnMode=batteryLearnMode, powerSupplyConnectionPowersupplyName=powerSupplyConnectionPowersupplyName, alertControllerInformation=alertControllerInformation, controllerC1BatteryState=controllerC1BatteryState, fluidCacheLicenseState=fluidCacheLicenseState, fluidCacheLicenseProductId=fluidCacheLicenseProductId, fluidCacheDiskStatus=fluidCacheDiskStatus, enclosureSCSIID=enclosureSCSIID, powerSupplyNumber=powerSupplyNumber, virtualDiskTable=virtualDiskTable, virtualDiskBadBlocksDetected=virtualDiskBadBlocksDetected, enclosureTable=enclosureTable, fanProbeMaxWarning=fanProbeMaxWarning, alertVirtualDiskWarning=alertVirtualDiskWarning, alertEEMIFanWarning=alertEEMIFanWarning, alertEEMIVirtualDiskNormal=alertEEMIVirtualDiskNormal, enclosureManagementModuleType=enclosureManagementModuleType, alertTemperatureProbeInformation=alertTemperatureProbeInformation, alertEMMNormal=alertEMMNormal, messageIDEvent=messageIDEvent, arrayDiskModelNumber=arrayDiskModelNumber, batteryConnectionTable=batteryConnectionTable, alertEEMITemperatureProbeInformation=alertEEMITemperatureProbeInformation, virtualDiskComponentStatus=virtualDiskComponentStatus, controllerC0Channel=controllerC0Channel, arrayDiskAltaRevisionId=arrayDiskAltaRevisionId, alertEEMIStorageManagementFailure=alertEEMIStorageManagementFailure, arrayDiskMaxLinkWidth=arrayDiskMaxLinkWidth, temperatureConnectionEnclosureNumber=temperatureConnectionEnclosureNumber, alertFluidCacheDisklFailure=alertFluidCacheDisklFailure, channelDataRate=channelDataRate, alertChannelWarning=alertChannelWarning, alertEEMIVirtualDiskInformation=alertEEMIVirtualDiskInformation, alertStorageManagementInformation=alertStorageManagementInformation, batteryChargeCount=batteryChargeCount, storageManagementInfo=storageManagementInfo, DellStatus=DellStatus, powerSupplyTable=powerSupplyTable, enclosureVendor=enclosureVendor, fluidCacheDiskBackendDeviceType=fluidCacheDiskBackendDeviceType, fluidCacheLicenseCapacity=fluidCacheLicenseCapacity, arrayDiskEnclosureConnectionControllerName=arrayDiskEnclosureConnectionControllerName, batteryConnectionNumber=batteryConnectionNumber, virtualDiskDeviceName=virtualDiskDeviceName, arrayDiskTable=arrayDiskTable, temperatureProbeName=temperatureProbeName, alertEMMInformation=alertEMMInformation, arrayDiskReadOnly=arrayDiskReadOnly, enclosureExpressServiceCode=enclosureExpressServiceCode, enclosureManagementModuleConnectionEnclosureName=enclosureManagementModuleConnectionEnclosureName, temperatureConnectionEntry=temperatureConnectionEntry, temperatureProbeMaxWarning=temperatureProbeMaxWarning, controllerMinFWVersion=controllerMinFWVersion, alertControllerNormal=alertControllerNormal, alertEEMIBatteryNonRecoverable=alertEEMIBatteryNonRecoverable, controllerCacheSizeInBytes=controllerCacheSizeInBytes, arrayDiskLogicalConnectionDiskName=arrayDiskLogicalConnectionDiskName, tapeDriveVendor=tapeDriveVendor, temperatureProbeMinCritical=temperatureProbeMinCritical, controllerC0Port0Name=controllerC0Port0Name, virtualDiskName=virtualDiskName, batteryNextLearnTime=batteryNextLearnTime, alertEEMIVirtualDiskFailure=alertEEMIVirtualDiskFailure, arrayDiskDeviceName=arrayDiskDeviceName, agentSnmpVersion=agentSnmpVersion, alertEEMIControllerFailure=alertEEMIControllerFailure, controllerC1Port0WWN=controllerC1Port0WWN, virtualDiskNexusID=virtualDiskNexusID, serviceTagEvent=serviceTagEvent, alertEEMIPowerSupplyWarning=alertEEMIPowerSupplyWarning, temperatureConnectionTemperatureName=temperatureConnectionTemperatureName, virtualDiskPartitionEntry=virtualDiskPartitionEntry, arrayDiskNumber=arrayDiskNumber, alertEEMIArrayDiskFailure=alertEEMIArrayDiskFailure, controllerPatrolReadRate=controllerPatrolReadRate, arrayDiskVendor=arrayDiskVendor, arrayDiskEncrypted=arrayDiskEncrypted, arrayDiskLogicalConnectionEntry=arrayDiskLogicalConnectionEntry, temperatureProbeNumber=temperatureProbeNumber, controllerBGIRate=controllerBGIRate, arrayDiskDellCertified=arrayDiskDellCertified, alertEEMIArrayDiskNormal=alertEEMIArrayDiskNormal, alertEEMIArrayDiskInformation=alertEEMIArrayDiskInformation, alertEEMIStorageManagementNormal=alertEEMIStorageManagementNormal, virtualDiskEncrypted=virtualDiskEncrypted, fanSeverity=fanSeverity, alertEEMIFluidCacheFailure=alertEEMIFluidCacheFailure, channelSCSIID=channelSCSIID, fanConnectionNumber=fanConnectionNumber, controllerSpinDownHotSpareDrives=controllerSpinDownHotSpareDrives, alertRedundancyNormal=alertRedundancyNormal, controllerC1Port0Name=controllerC1Port0Name, fluidCacheDiskEntry=fluidCacheDiskEntry, arrayDiskRemainingRatedWriteEndurance=arrayDiskRemainingRatedWriteEndurance, objectOIDEvent=objectOIDEvent, alertEEMIBatteryNormal=alertEEMIBatteryNormal, alertControllerFailure=alertControllerFailure, alertArrayDiskInformation=alertArrayDiskInformation, arrayDiskEncryptionCapable=arrayDiskEncryptionCapable, enclosureManagementModuleRevision=enclosureManagementModuleRevision, enclosureManagementModuleConnectionEntry=enclosureManagementModuleConnectionEntry, fluidCachePoolStoreCount=fluidCachePoolStoreCount, arrayDiskLengthInMB=arrayDiskLengthInMB)
mibBuilder.exportSymbols("StorageManagement-MIB", batteryLearnState=batteryLearnState, arrayDiskRollUpStatus=arrayDiskRollUpStatus, alertVirtualDiskNormal=alertVirtualDiskNormal, alertRedundancyDegraded=alertRedundancyDegraded, alertRedundancyLost=alertRedundancyLost, alertEEMIEnclosureWarning=alertEEMIEnclosureWarning, fluidCachePoolStatus=fluidCachePoolStatus, batteryConnectionControllerNumber=batteryConnectionControllerNumber, controllerSCSIInitiatorID=controllerSCSIInitiatorID, controllerEncryptionMode=controllerEncryptionMode, channelRollUpStatus=channelRollUpStatus, powerSupplyRevision=powerSupplyRevision, batteryTable=batteryTable, agentVendor=agentVendor, enclosureManagementModuleSeverity=enclosureManagementModuleSeverity, virtualDiskLunID=virtualDiskLunID, agentGetTimeout=agentGetTimeout, batteryMaxChargeCount=batteryMaxChargeCount, fluidCacheDiskOperatingMode=fluidCacheDiskOperatingMode, virtualDiskPartitionSize=virtualDiskPartitionSize, controllerName=controllerName, alertControllerNonRecoverable=alertControllerNonRecoverable, enclosureManagementModuleState=enclosureManagementModuleState, temperatureProbeRollUpStatus=temperatureProbeRollUpStatus, temperatureProbeMinWarning=temperatureProbeMinWarning, controllerSeverity=controllerSeverity, alertTemperatureProbeWarning=alertTemperatureProbeWarning, arrayDiskManufactureWeek=arrayDiskManufactureWeek, fanProbeMinCritical=fanProbeMinCritical, enclosureTotalSlots=enclosureTotalSlots, agentTimeStamp=agentTimeStamp, arrayDiskState=arrayDiskState, enclosureEntry=enclosureEntry, softwareManufacturer=softwareManufacturer, arrayDiskEnclosureID=arrayDiskEnclosureID, agentMibVersion=agentMibVersion, enclosureProcessor2Version=enclosureProcessor2Version, batteryConnectionControllerName=batteryConnectionControllerName, channelComponentStatus=channelComponentStatus, controllerStorportDriverVersion=controllerStorportDriverVersion, alertEEMIEMMFailure=alertEEMIEMMFailure, virtualDiskPartitionNumber=virtualDiskPartitionNumber, enclosureSeverity=enclosureSeverity, alertChannelNonRecoverable=alertChannelNonRecoverable, fanComponentStatus=fanComponentStatus, controllerPatrolReadMode=controllerPatrolReadMode, controllerEncryptionCapable=controllerEncryptionCapable, powerSupplySeverity=powerSupplySeverity, batteryEntry=batteryEntry, alertEEMIFluidCachePoolFailure=alertEEMIFluidCachePoolFailure, controllerState=controllerState, enclosureID=enclosureID, enclosureESM2PartNumber=enclosureESM2PartNumber, temperatureConnectionTemperatureNumber=temperatureConnectionTemperatureNumber, fluidCacheDiskBackendDeviceSize=fluidCacheDiskBackendDeviceSize, alertEEMIArrayDiskNonRecoverable=alertEEMIArrayDiskNonRecoverable, temperatureProbeTable=temperatureProbeTable, channelSeverity=channelSeverity, alertTemperatureProbeFailure=alertTemperatureProbeFailure, virtualDiskPartitionTable=virtualDiskPartitionTable, alertBatteryNormal=alertBatteryNormal, enclosureSplitBusPartNumber=enclosureSplitBusPartNumber, alertVirtualDiskInformation=alertVirtualDiskInformation, alertFluidCacheInformation=alertFluidCacheInformation, fluidCacheTable=fluidCacheTable, enclosureEmptySlotCount=enclosureEmptySlotCount, batteryMaxLearnDelay=batteryMaxLearnDelay, arrayDiskChannelConnectionChannelName=arrayDiskChannelConnectionChannelName, enclosureAssetName=enclosureAssetName, alertEEMIControllerNonRecoverable=alertEEMIControllerNonRecoverable, controllerClusterMode=controllerClusterMode, agentSystemGlobalStatus=agentSystemGlobalStatus, enclosureManagementModulePartNumber=enclosureManagementModulePartNumber, fluidCacheLicenseFeatureID=fluidCacheLicenseFeatureID, enclosureManagementModuleConnectionEnclosureNumber=enclosureManagementModuleConnectionEnclosureNumber, controllerC1OSController=controllerC1OSController, logicalDevices=logicalDevices, virtualDiskLengthInBytes=virtualDiskLengthInBytes, alertEEMIVirtualDiskPartitionWarning=alertEEMIVirtualDiskPartitionWarning, controllerRebuildRateInPercent=controllerRebuildRateInPercent, batteryComponentStatus=batteryComponentStatus, controllerComponentStatus=controllerComponentStatus, batteryRollUpStatus=batteryRollUpStatus, description=description, alertEEMIFluidCacheDiskInformation=alertEEMIFluidCacheDiskInformation)
