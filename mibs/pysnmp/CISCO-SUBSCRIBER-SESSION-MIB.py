#
# PySNMP MIB module CISCO-SUBSCRIBER-SESSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SUBSCRIBER-SESSION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:56:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
CbpElementName, = mibBuilder.importSymbols("CISCO-CBP-TC-MIB", "CbpElementName")
DynamicTemplateName, = mibBuilder.importSymbols("CISCO-DYNAMIC-TEMPLATE-TC-MIB", "DynamicTemplateName")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SubscriberTunnelName, SubSessionIdentities, SubscriberUsername, SubscriberCircuitId, SubscriberMediaType, SubscriberAcctSessionId, SubSessionIdentity, SubscriberProtocolType, SubscriberLocationName, SubscriberServiceName, SubscriberNasPort, SubscriberDomain, SubscriberLabel, SubscriberVRF, SubscriberDhcpClass, SubscriberPbhk, SubscriberRemoteId, SubscriberDnis = mibBuilder.importSymbols("CISCO-SUBSCRIBER-IDENTITY-TC-MIB", "SubscriberTunnelName", "SubSessionIdentities", "SubscriberUsername", "SubscriberCircuitId", "SubscriberMediaType", "SubscriberAcctSessionId", "SubSessionIdentity", "SubscriberProtocolType", "SubscriberLocationName", "SubscriberServiceName", "SubscriberNasPort", "SubscriberDomain", "SubscriberLabel", "SubscriberVRF", "SubscriberDhcpClass", "SubscriberPbhk", "SubscriberRemoteId", "SubscriberDnis")
SubSessionType, SubSessionState, SubSessionRedundancyMode = mibBuilder.importSymbols("CISCO-SUBSCRIBER-SESSION-TC-MIB", "SubSessionType", "SubSessionState", "SubSessionRedundancyMode")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
PerfIntervalCount, PerfCurrentCount, PerfTotalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfIntervalCount", "PerfCurrentCount", "PerfTotalCount")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ObjectIdentity, MibIdentifier, iso, Unsigned32, IpAddress, Gauge32, Counter64, Counter32, Bits, Integer32, TimeTicks, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "iso", "Unsigned32", "IpAddress", "Gauge32", "Counter64", "Counter32", "Bits", "Integer32", "TimeTicks", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, MacAddress, DisplayString, TruthValue, TimeStamp, DateAndTime, TextualConvention, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "DisplayString", "TruthValue", "TimeStamp", "DateAndTime", "TextualConvention", "StorageType")
ciscoSubscriberSessionMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 786))
ciscoSubscriberSessionMIB.setRevisions(('2012-08-08 00:00', '2012-03-12 00:00', '2011-09-12 00:00',))
if mibBuilder.loadTexts: ciscoSubscriberSessionMIB.setLastUpdated('201208080000Z')
if mibBuilder.loadTexts: ciscoSubscriberSessionMIB.setOrganization('Cisco Systems, Inc.')
class SubscriberJobIdentifier(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class SubscriberJobIdentifierOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

ciscoSubscriberSessionMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 0))
ciscoSubscriberSessionMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 1))
ciscoSubscriberSessionMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 2))
csubSession = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1))
csubAggStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2))
csubJob = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3))
csubAggThresh = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 4))
csubSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1), )
if mibBuilder.loadTexts: csubSessionTable.setStatus('current')
csubSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: csubSessionEntry.setStatus('current')
csubSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 1), SubSessionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionType.setStatus('current')
csubSessionIpAddrAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("static", 3), ("localPool", 4), ("dhcpv4", 5), ("dhcpv6", 6), ("userProfileIpAddr", 7), ("userProfileIpSubnet", 8), ("userProfileNamedPool", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionIpAddrAssignment.setStatus('current')
csubSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 3), SubSessionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionState.setStatus('current')
csubSessionAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionAuthenticated.setStatus('current')
csubSessionRedundancyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 5), SubSessionRedundancyMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionRedundancyMode.setStatus('current')
csubSessionCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionCreationTime.setStatus('current')
csubSessionDerivedCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 7), DynamicTemplateName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionDerivedCfg.setStatus('current')
csubSessionAvailableIdentities = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 8), SubSessionIdentities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionAvailableIdentities.setStatus('current')
csubSessionSubscriberLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 9), SubscriberLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionSubscriberLabel.setStatus('current')
csubSessionMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionMacAddress.setStatus('current')
csubSessionNativeVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 11), SubscriberVRF()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionNativeVrf.setStatus('current')
csubSessionNativeIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionNativeIpAddrType.setStatus('current')
csubSessionNativeIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionNativeIpAddr.setStatus('current')
csubSessionNativeIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionNativeIpMask.setStatus('current')
csubSessionDomainVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 15), SubscriberVRF()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionDomainVrf.setStatus('current')
csubSessionDomainIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 16), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionDomainIpAddrType.setStatus('current')
csubSessionDomainIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 17), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionDomainIpAddr.setStatus('current')
csubSessionDomainIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 18), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionDomainIpMask.setStatus('current')
csubSessionPbhk = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 19), SubscriberPbhk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionPbhk.setStatus('current')
csubSessionRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 20), SubscriberRemoteId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionRemoteId.setStatus('current')
csubSessionCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 21), SubscriberCircuitId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionCircuitId.setStatus('current')
csubSessionNasPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 22), SubscriberNasPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionNasPort.setStatus('current')
csubSessionDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 23), SubscriberDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionDomain.setStatus('current')
csubSessionUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 24), SubscriberUsername()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionUsername.setStatus('current')
csubSessionAcctSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 25), SubscriberAcctSessionId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionAcctSessionId.setStatus('current')
csubSessionDnis = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 26), SubscriberDnis()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionDnis.setStatus('current')
csubSessionMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 27), SubscriberMediaType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionMedia.setStatus('current')
csubSessionMlpNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionMlpNegotiated.setStatus('current')
csubSessionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 29), SubscriberProtocolType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionProtocol.setStatus('current')
csubSessionDhcpClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 30), SubscriberDhcpClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionDhcpClass.setStatus('current')
csubSessionTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 31), SubscriberTunnelName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionTunnelName.setStatus('current')
csubSessionLocationIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 32), SubscriberLocationName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionLocationIdentifier.setStatus('current')
csubSessionServiceIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 33), SubscriberServiceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionServiceIdentifier.setStatus('current')
csubSessionLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 34), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionLastChanged.setStatus('current')
csubSessionNativeIpAddrType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 35), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionNativeIpAddrType2.setStatus('current')
csubSessionNativeIpAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 36), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionNativeIpAddr2.setStatus('current')
csubSessionNativeIpMask2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 1, 1, 37), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionNativeIpMask2.setStatus('current')
csubSessionByTypeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 2), )
if mibBuilder.loadTexts: csubSessionByTypeTable.setStatus('current')
csubSessionByTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionByType"), (0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionIfIndex"))
if mibBuilder.loadTexts: csubSessionByTypeEntry.setStatus('current')
csubSessionByType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 2, 1, 1), SubSessionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionByType.setStatus('current')
csubSessionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 1, 2, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubSessionIfIndex.setStatus('current')
csubAggStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1), )
if mibBuilder.loadTexts: csubAggStatsTable.setStatus('current')
csubAggStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsPointType"), (0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsPoint"), (0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsSessionType"))
if mibBuilder.loadTexts: csubAggStatsEntry.setStatus('current')
csubAggStatsPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("physical", 1), ("interface", 2))))
if mibBuilder.loadTexts: csubAggStatsPointType.setStatus('current')
csubAggStatsPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: csubAggStatsPoint.setStatus('current')
csubAggStatsSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 3), SubSessionType())
if mibBuilder.loadTexts: csubAggStatsSessionType.setStatus('current')
csubAggStatsPendingSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 4), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsPendingSessions.setStatus('current')
csubAggStatsUpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 5), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsUpSessions.setStatus('current')
csubAggStatsAuthSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 6), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsAuthSessions.setStatus('current')
csubAggStatsUnAuthSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 7), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsUnAuthSessions.setStatus('current')
csubAggStatsLightWeightSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 8), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsLightWeightSessions.setStatus('current')
csubAggStatsRedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 9), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsRedSessions.setStatus('current')
csubAggStatsHighUpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 10), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsHighUpSessions.setStatus('current')
csubAggStatsAvgSessionUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 11), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsAvgSessionUptime.setStatus('current')
csubAggStatsAvgSessionRPM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 12), Gauge32()).setUnits('sessions per minute').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsAvgSessionRPM.setStatus('current')
csubAggStatsAvgSessionRPH = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 13), Gauge32()).setUnits('sessions per hour').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsAvgSessionRPH.setStatus('current')
csubAggStatsThrottleEngagements = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 14), Counter64()).setUnits('engagements').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsThrottleEngagements.setStatus('current')
csubAggStatsTotalCreatedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 15), Counter64()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsTotalCreatedSessions.setStatus('current')
csubAggStatsTotalFailedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 16), Counter64()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsTotalFailedSessions.setStatus('current')
csubAggStatsTotalUpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 17), Counter64()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsTotalUpSessions.setStatus('current')
csubAggStatsTotalAuthSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 18), Counter64()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsTotalAuthSessions.setStatus('current')
csubAggStatsTotalDiscSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 19), Counter64()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsTotalDiscSessions.setStatus('current')
csubAggStatsTotalLightWeightSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 20), Counter64()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsTotalLightWeightSessions.setStatus('current')
csubAggStatsTotalFlowsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 21), Counter64()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsTotalFlowsUp.setStatus('current')
csubAggStatsDayCreatedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 22), PerfTotalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsDayCreatedSessions.setStatus('current')
csubAggStatsDayFailedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 23), PerfTotalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsDayFailedSessions.setStatus('current')
csubAggStatsDayUpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 24), PerfTotalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsDayUpSessions.setStatus('current')
csubAggStatsDayAuthSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 25), PerfTotalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsDayAuthSessions.setStatus('current')
csubAggStatsDayDiscSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 26), PerfTotalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsDayDiscSessions.setStatus('current')
csubAggStatsCurrTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 27), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 899))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrTimeElapsed.setStatus('current')
csubAggStatsCurrValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 28), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrValidIntervals.setStatus('current')
csubAggStatsCurrInvalidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 29), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrInvalidIntervals.setStatus('current')
csubAggStatsCurrFlowsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 30), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setUnits('intervals').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrFlowsUp.setStatus('current')
csubAggStatsCurrCreatedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 31), PerfCurrentCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrCreatedSessions.setStatus('current')
csubAggStatsCurrFailedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 32), PerfCurrentCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrFailedSessions.setStatus('current')
csubAggStatsCurrUpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 33), PerfCurrentCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrUpSessions.setStatus('current')
csubAggStatsCurrAuthSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 34), PerfCurrentCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrAuthSessions.setStatus('current')
csubAggStatsCurrDiscSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 35), PerfCurrentCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsCurrDiscSessions.setStatus('current')
csubAggStatsDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 1, 1, 36), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsDiscontinuityTime.setStatus('current')
csubAggStatsIntTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2), )
if mibBuilder.loadTexts: csubAggStatsIntTable.setStatus('current')
csubAggStatsIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsPointType"), (0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsPoint"), (0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsSessionType"), (0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsIntNumber"))
if mibBuilder.loadTexts: csubAggStatsIntEntry.setStatus('current')
csubAggStatsIntNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: csubAggStatsIntNumber.setStatus('current')
csubAggStatsIntValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsIntValid.setStatus('current')
csubAggStatsIntCreatedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2, 1, 3), PerfIntervalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsIntCreatedSessions.setStatus('current')
csubAggStatsIntFailedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2, 1, 4), PerfIntervalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsIntFailedSessions.setStatus('current')
csubAggStatsIntUpSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2, 1, 5), PerfIntervalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsIntUpSessions.setStatus('current')
csubAggStatsIntAuthSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2, 1, 6), PerfIntervalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsIntAuthSessions.setStatus('current')
csubAggStatsIntDiscSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 2, 1, 7), PerfIntervalCount()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubAggStatsIntDiscSessions.setStatus('current')
csubAggStatsThreshTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 3), )
if mibBuilder.loadTexts: csubAggStatsThreshTable.setStatus('current')
csubAggStatsThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionRisingThresh"))
if mibBuilder.loadTexts: csubAggStatsThreshEntry.setStatus('current')
csubSessionRisingThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csubSessionRisingThresh.setStatus('current')
csubSessionFallingThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csubSessionFallingThresh.setStatus('current')
csubSessionDeltaPercentFallingThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csubSessionDeltaPercentFallingThresh.setStatus('current')
csubSessionThreshEvalInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 2, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csubSessionThreshEvalInterval.setStatus('current')
csubJobFinishedNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csubJobFinishedNotifyEnable.setStatus('current')
csubJobIndexedAttributes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 2), SubSessionIdentities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobIndexedAttributes.setStatus('current')
csubJobIdNext = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 3), SubscriberJobIdentifierOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobIdNext.setStatus('current')
csubJobMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('jobs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: csubJobMaxNumber.setStatus('current')
csubJobMaxLife = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: csubJobMaxLife.setStatus('current')
csubJobCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 6), Gauge32()).setUnits('jobs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobCount.setStatus('current')
csubJobTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7), )
if mibBuilder.loadTexts: csubJobTable.setStatus('current')
csubJobEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubJobId"))
if mibBuilder.loadTexts: csubJobEntry.setStatus('current')
csubJobId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 1), SubscriberJobIdentifier())
if mibBuilder.loadTexts: csubJobId.setStatus('current')
csubJobStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobStatus.setStatus('current')
csubJobStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 3), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobStorage.setStatus('current')
csubJobType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noop", 1), ("query", 2), ("clear", 3))).clone('noop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobType.setStatus('current')
csubJobControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noop", 1), ("start", 2), ("abort", 3), ("release", 4))).clone('noop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobControl.setStatus('current')
csubJobState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("pending", 2), ("inProgress", 3), ("finished", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobState.setStatus('current')
csubJobStartedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobStartedTime.setStatus('current')
csubJobFinishedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobFinishedTime.setStatus('current')
csubJobFinishedReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("invalid", 1), ("other", 2), ("normal", 3), ("aborted", 4), ("insufficientResources", 5), ("error", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobFinishedReason.setStatus('current')
csubJobMatchParamsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8), )
if mibBuilder.loadTexts: csubJobMatchParamsTable.setStatus('current')
csubJobMatchParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubJobId"))
if mibBuilder.loadTexts: csubJobMatchParamsEntry.setStatus('current')
csubJobMatchIdentities = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 1), SubSessionIdentities()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchIdentities.setStatus('current')
csubJobMatchOtherParams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 2), Bits().clone(namedValues=NamedValues(("danglingDuration", 0), ("state", 1), ("authenticated", 2), ("redundancyMode", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchOtherParams.setStatus('current')
csubJobMatchSubscriberLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 3), SubscriberLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchSubscriberLabel.setStatus('current')
csubJobMatchMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 4), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchMacAddress.setStatus('current')
csubJobMatchNativeVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 5), SubscriberVRF()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchNativeVrf.setStatus('current')
csubJobMatchNativeIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 6), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchNativeIpAddrType.setStatus('current')
csubJobMatchNativeIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 7), InetAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchNativeIpAddr.setStatus('current')
csubJobMatchNativeIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 8), InetAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchNativeIpMask.setStatus('current')
csubJobMatchDomainVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 9), SubscriberVRF()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchDomainVrf.setStatus('current')
csubJobMatchDomainIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 10), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchDomainIpAddrType.setStatus('current')
csubJobMatchDomainIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 11), InetAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchDomainIpAddr.setStatus('current')
csubJobMatchDomainIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 12), InetAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchDomainIpMask.setStatus('current')
csubJobMatchPbhk = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 13), SubscriberPbhk().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchPbhk.setStatus('current')
csubJobMatchRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 14), SubscriberRemoteId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchRemoteId.setStatus('current')
csubJobMatchCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 15), SubscriberCircuitId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchCircuitId.setStatus('current')
csubJobMatchNasPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 16), SubscriberNasPort().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchNasPort.setStatus('current')
csubJobMatchDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 17), SubscriberDomain()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchDomain.setStatus('current')
csubJobMatchUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 18), SubscriberUsername()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchUsername.setStatus('current')
csubJobMatchAcctSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 20), SubscriberAcctSessionId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchAcctSessionId.setStatus('current')
csubJobMatchDnis = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 21), SubscriberDnis()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchDnis.setStatus('current')
csubJobMatchMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 22), SubscriberMediaType().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchMedia.setStatus('current')
csubJobMatchMlpNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 23), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchMlpNegotiated.setStatus('current')
csubJobMatchProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 24), SubscriberProtocolType().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchProtocol.setStatus('current')
csubJobMatchServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 25), CbpElementName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchServiceName.setStatus('current')
csubJobMatchDhcpClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 26), SubscriberDhcpClass()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchDhcpClass.setStatus('current')
csubJobMatchTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 27), SubscriberTunnelName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchTunnelName.setStatus('current')
csubJobMatchDanglingDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchDanglingDuration.setStatus('current')
csubJobMatchState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 29), SubSessionState().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchState.setStatus('current')
csubJobMatchAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 30), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchAuthenticated.setStatus('current')
csubJobMatchRedundancyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 8, 1, 31), SubSessionRedundancyMode().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobMatchRedundancyMode.setStatus('current')
csubJobQueryParamsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 9), )
if mibBuilder.loadTexts: csubJobQueryParamsTable.setStatus('current')
csubJobQueryParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 9, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubJobId"))
if mibBuilder.loadTexts: csubJobQueryParamsEntry.setStatus('current')
csubJobQuerySortKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 9, 1, 1), SubSessionIdentity().clone('subscriberLabel')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobQuerySortKey1.setStatus('current')
csubJobQuerySortKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 9, 1, 2), SubSessionIdentity().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobQuerySortKey2.setStatus('current')
csubJobQuerySortKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 9, 1, 3), SubSessionIdentity().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: csubJobQuerySortKey3.setStatus('current')
csubJobQueryResultingReportSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobQueryResultingReportSize.setStatus('current')
csubJobQueueTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 10), )
if mibBuilder.loadTexts: csubJobQueueTable.setStatus('current')
csubJobQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 10, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubJobQueueNumber"))
if mibBuilder.loadTexts: csubJobQueueEntry.setStatus('current')
csubJobQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: csubJobQueueNumber.setStatus('current')
csubJobQueueJobId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 10, 1, 2), SubscriberJobIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobQueueJobId.setStatus('current')
csubJobReportTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 11), )
if mibBuilder.loadTexts: csubJobReportTable.setStatus('current')
csubJobReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 11, 1), ).setIndexNames((0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubJobId"), (0, "CISCO-SUBSCRIBER-SESSION-MIB", "csubJobReportId"))
if mibBuilder.loadTexts: csubJobReportEntry.setStatus('current')
csubJobReportId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: csubJobReportId.setStatus('current')
csubJobReportSession = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 3, 11, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csubJobReportSession.setStatus('current')
csubAggStatsThreshNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 786, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csubAggStatsThreshNotifEnable.setStatus('current')
csubJobFinishedNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 786, 0, 1)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobStartedTime"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobFinishedTime"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobFinishedReason"))
if mibBuilder.loadTexts: csubJobFinishedNotify.setStatus('current')
csubSessionRisingNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 786, 0, 2)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionRisingThresh"))
if mibBuilder.loadTexts: csubSessionRisingNotif.setStatus('current')
csubSessionFallingNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 786, 0, 3)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionFallingThresh"))
if mibBuilder.loadTexts: csubSessionFallingNotif.setStatus('current')
csubSessionDeltaPercentFallingThreshNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 786, 0, 4)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDeltaPercentFallingThresh"))
if mibBuilder.loadTexts: csubSessionDeltaPercentFallingThreshNotif.setStatus('current')
ciscoSubscriberSessionMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 1))
ciscoSubscriberSessionMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2))
ciscoSubscriberSessionR1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 1, 1)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchParamsGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobQueryParamsGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobNotifGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsIntGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsDayGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobQueueGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSubscriberSessionR1Compliance = ciscoSubscriberSessionR1Compliance.setStatus('obsolete')
ciscoSubscriberSessionR2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 1, 2)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsThreshGroup"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSubscriberSessionR2Compliance = ciscoSubscriberSessionR2Compliance.setStatus('current')
csubSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 1)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionType"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionIpAddrAssignment"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionState"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionAuthenticated"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionRedundancyMode"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionCreationTime"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDerivedCfg"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionAvailableIdentities"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionSubscriberLabel"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionMacAddress"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionNativeVrf"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionNativeIpAddrType"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionNativeIpAddr"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionNativeIpMask"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDomainVrf"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDomainIpAddrType"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDomainIpAddr"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDomainIpMask"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionPbhk"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionRemoteId"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionCircuitId"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionNasPort"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDomain"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionUsername"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionAcctSessionId"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDnis"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionMedia"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionMlpNegotiated"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionProtocol"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDhcpClass"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionTunnelName"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubSessionGroup = csubSessionGroup.setStatus('current')
csubAggStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 2)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsPendingSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsAuthSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsRedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsHighUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsAvgSessionUptime"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsAvgSessionRPM"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsAvgSessionRPH"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsThrottleEngagements"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsTotalCreatedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsTotalFailedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsTotalUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsTotalAuthSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsTotalDiscSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubAggStatsGroup = csubAggStatsGroup.setStatus('current')
csubAggStatsCurrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 3)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrTimeElapsed"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrValidIntervals"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrInvalidIntervals"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrCreatedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrFailedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrAuthSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsCurrDiscSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubAggStatsCurrGroup = csubAggStatsCurrGroup.setStatus('current')
csubAggStatsIntGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 4)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsIntValid"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsIntCreatedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsIntFailedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsIntUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsIntAuthSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsIntDiscSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubAggStatsIntGroup = csubAggStatsIntGroup.setStatus('current')
csubAggStatsDayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 5)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsDayCreatedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsDayFailedSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsDayUpSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsDayAuthSessions"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsDayDiscSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubAggStatsDayGroup = csubAggStatsDayGroup.setStatus('current')
csubJobGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 6)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobFinishedNotifyEnable"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobIndexedAttributes"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobIdNext"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMaxNumber"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMaxLife"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobCount"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobStatus"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobStorage"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobType"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobControl"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobState"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobStartedTime"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobFinishedTime"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobFinishedReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubJobGroup = csubJobGroup.setStatus('current')
csubJobMatchParamsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 7)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchIdentities"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchOtherParams"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchSubscriberLabel"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchMacAddress"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchNativeVrf"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchNativeIpAddrType"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchNativeIpAddr"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchNativeIpMask"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchDomainVrf"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchDomainIpAddrType"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchDomainIpAddr"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchDomainIpMask"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchPbhk"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchRemoteId"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchCircuitId"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchNasPort"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchDomain"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchUsername"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchAcctSessionId"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchDnis"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchMedia"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchMlpNegotiated"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchProtocol"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchServiceName"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchDhcpClass"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchTunnelName"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchDanglingDuration"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchState"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchAuthenticated"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobMatchRedundancyMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubJobMatchParamsGroup = csubJobMatchParamsGroup.setStatus('current')
csubJobQueryParamsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 8)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobQuerySortKey1"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobQuerySortKey2"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobQuerySortKey3"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobQueryResultingReportSize"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobReportSession"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubJobQueryParamsGroup = csubJobQueryParamsGroup.setStatus('current')
csubJobQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 9)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobQueueJobId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubJobQueueGroup = csubJobQueueGroup.setStatus('current')
csubJobNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 10)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubJobFinishedNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubJobNotifGroup = csubJobNotifGroup.setStatus('current')
csubAggStatsThreshGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 11)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionRisingThresh"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionFallingThresh"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDeltaPercentFallingThresh"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionThreshEvalInterval"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubAggStatsThreshNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubAggStatsThreshGroup = csubAggStatsThreshGroup.setStatus('current')
csubAggStatsNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 786, 2, 2, 12)).setObjects(("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionRisingNotif"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionFallingNotif"), ("CISCO-SUBSCRIBER-SESSION-MIB", "csubSessionDeltaPercentFallingThreshNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csubAggStatsNotifGroup = csubAggStatsNotifGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SUBSCRIBER-SESSION-MIB", csubJobMatchDnis=csubJobMatchDnis, csubJobMatchAcctSessionId=csubJobMatchAcctSessionId, csubJobQuerySortKey2=csubJobQuerySortKey2, csubSessionTunnelName=csubSessionTunnelName, csubAggStatsTotalLightWeightSessions=csubAggStatsTotalLightWeightSessions, csubSessionDeltaPercentFallingThresh=csubSessionDeltaPercentFallingThresh, csubJobMatchNasPort=csubJobMatchNasPort, csubJobMatchRedundancyMode=csubJobMatchRedundancyMode, csubSessionDerivedCfg=csubSessionDerivedCfg, csubJobMatchMacAddress=csubJobMatchMacAddress, csubJobType=csubJobType, ciscoSubscriberSessionMIBCompliances=ciscoSubscriberSessionMIBCompliances, csubSessionAvailableIdentities=csubSessionAvailableIdentities, csubSessionPbhk=csubSessionPbhk, csubJobStartedTime=csubJobStartedTime, csubJobMatchDhcpClass=csubJobMatchDhcpClass, csubJobQueueEntry=csubJobQueueEntry, csubAggStatsDayFailedSessions=csubAggStatsDayFailedSessions, csubAggStatsNotifGroup=csubAggStatsNotifGroup, csubJobQueryParamsGroup=csubJobQueryParamsGroup, csubJobQueueJobId=csubJobQueueJobId, csubJobMatchParamsGroup=csubJobMatchParamsGroup, csubAggStatsPointType=csubAggStatsPointType, csubAggStatsCurrInvalidIntervals=csubAggStatsCurrInvalidIntervals, csubJobMatchNativeIpAddr=csubJobMatchNativeIpAddr, csubJobMatchMlpNegotiated=csubJobMatchMlpNegotiated, csubJobMatchDomainVrf=csubJobMatchDomainVrf, csubSessionNativeIpAddr2=csubSessionNativeIpAddr2, csubJobMatchProtocol=csubJobMatchProtocol, csubSessionIfIndex=csubSessionIfIndex, csubAggStatsThreshGroup=csubAggStatsThreshGroup, csubAggStatsThreshNotifEnable=csubAggStatsThreshNotifEnable, csubSessionUsername=csubSessionUsername, csubSessionNativeIpAddrType2=csubSessionNativeIpAddrType2, csubAggStatsIntAuthSessions=csubAggStatsIntAuthSessions, ciscoSubscriberSessionMIBNotifs=ciscoSubscriberSessionMIBNotifs, csubSessionAuthenticated=csubSessionAuthenticated, csubSessionCircuitId=csubSessionCircuitId, csubSessionLastChanged=csubSessionLastChanged, csubAggStatsDayUpSessions=csubAggStatsDayUpSessions, csubJobMatchServiceName=csubJobMatchServiceName, csubAggStatsTable=csubAggStatsTable, csubAggStatsCurrGroup=csubAggStatsCurrGroup, csubJobQuerySortKey3=csubJobQuerySortKey3, csubAggStatsIntUpSessions=csubAggStatsIntUpSessions, csubJobControl=csubJobControl, PYSNMP_MODULE_ID=ciscoSubscriberSessionMIB, csubAggStatsIntCreatedSessions=csubAggStatsIntCreatedSessions, csubJobMatchMedia=csubJobMatchMedia, ciscoSubscriberSessionMIBGroups=ciscoSubscriberSessionMIBGroups, csubJobMatchCircuitId=csubJobMatchCircuitId, csubJobQueueTable=csubJobQueueTable, csubSessionDhcpClass=csubSessionDhcpClass, csubJobMatchIdentities=csubJobMatchIdentities, csubAggStatsThreshTable=csubAggStatsThreshTable, csubSessionDomainIpAddrType=csubSessionDomainIpAddrType, csubJobQueryParamsTable=csubJobQueryParamsTable, csubSessionDnis=csubSessionDnis, csubJobMatchPbhk=csubJobMatchPbhk, csubSessionGroup=csubSessionGroup, ciscoSubscriberSessionMIBConform=ciscoSubscriberSessionMIBConform, csubAggStatsDayAuthSessions=csubAggStatsDayAuthSessions, csubAggStatsCurrAuthSessions=csubAggStatsCurrAuthSessions, csubJobState=csubJobState, csubAggStatsDayGroup=csubAggStatsDayGroup, csubJobQueueGroup=csubJobQueueGroup, csubAggStatsHighUpSessions=csubAggStatsHighUpSessions, csubAggStatsDayCreatedSessions=csubAggStatsDayCreatedSessions, csubJobMatchState=csubJobMatchState, csubSessionDeltaPercentFallingThreshNotif=csubSessionDeltaPercentFallingThreshNotif, csubSessionServiceIdentifier=csubSessionServiceIdentifier, csubSessionSubscriberLabel=csubSessionSubscriberLabel, csubJobMatchParamsTable=csubJobMatchParamsTable, csubSessionFallingNotif=csubSessionFallingNotif, csubJobMatchNativeIpMask=csubJobMatchNativeIpMask, csubJobMaxLife=csubJobMaxLife, csubJobReportId=csubJobReportId, csubJobNotifGroup=csubJobNotifGroup, csubAggStatsTotalDiscSessions=csubAggStatsTotalDiscSessions, csubJobReportTable=csubJobReportTable, csubSessionLocationIdentifier=csubSessionLocationIdentifier, csubJobMaxNumber=csubJobMaxNumber, csubAggStatsIntFailedSessions=csubAggStatsIntFailedSessions, csubJobMatchDomainIpMask=csubJobMatchDomainIpMask, csubSessionDomainIpAddr=csubSessionDomainIpAddr, csubJobMatchTunnelName=csubJobMatchTunnelName, csubAggStatsEntry=csubAggStatsEntry, csubSessionByTypeEntry=csubSessionByTypeEntry, csubAggStatsTotalAuthSessions=csubAggStatsTotalAuthSessions, csubAggStatsIntEntry=csubAggStatsIntEntry, csubSessionMacAddress=csubSessionMacAddress, csubJobMatchDomainIpAddr=csubJobMatchDomainIpAddr, csubJobEntry=csubJobEntry, csubJobMatchDanglingDuration=csubJobMatchDanglingDuration, csubSessionNasPort=csubSessionNasPort, csubJobMatchDomainIpAddrType=csubJobMatchDomainIpAddrType, ciscoSubscriberSessionMIB=ciscoSubscriberSessionMIB, csubJobGroup=csubJobGroup, SubscriberJobIdentifierOrZero=SubscriberJobIdentifierOrZero, csubAggStatsPoint=csubAggStatsPoint, csubJobIndexedAttributes=csubJobIndexedAttributes, csubJobMatchNativeVrf=csubJobMatchNativeVrf, ciscoSubscriberSessionR1Compliance=ciscoSubscriberSessionR1Compliance, csubAggStatsCurrUpSessions=csubAggStatsCurrUpSessions, csubSessionRemoteId=csubSessionRemoteId, csubAggStatsDiscontinuityTime=csubAggStatsDiscontinuityTime, csubJobMatchSubscriberLabel=csubJobMatchSubscriberLabel, csubAggStatsDayDiscSessions=csubAggStatsDayDiscSessions, csubAggStatsTotalUpSessions=csubAggStatsTotalUpSessions, csubSessionTable=csubSessionTable, csubJobFinishedReason=csubJobFinishedReason, csubJobMatchDomain=csubJobMatchDomain, csubSessionType=csubSessionType, csubAggStatsCurrCreatedSessions=csubAggStatsCurrCreatedSessions, csubAggStatsTotalFailedSessions=csubAggStatsTotalFailedSessions, csubSessionNativeIpMask=csubSessionNativeIpMask, csubAggStatsThreshEntry=csubAggStatsThreshEntry, csubJobId=csubJobId, csubAggStatsIntValid=csubAggStatsIntValid, SubscriberJobIdentifier=SubscriberJobIdentifier, csubAggStatsIntDiscSessions=csubAggStatsIntDiscSessions, csubAggStatsRedSessions=csubAggStatsRedSessions, csubSessionState=csubSessionState, ciscoSubscriberSessionR2Compliance=ciscoSubscriberSessionR2Compliance, csubSessionByType=csubSessionByType, csubAggStatsPendingSessions=csubAggStatsPendingSessions, csubSessionDomainVrf=csubSessionDomainVrf, csubJobStatus=csubJobStatus, csubJobTable=csubJobTable, csubJobFinishedTime=csubJobFinishedTime, csubSessionRisingNotif=csubSessionRisingNotif, csubAggStatsLightWeightSessions=csubAggStatsLightWeightSessions, csubAggStatsThrottleEngagements=csubAggStatsThrottleEngagements, csubJobIdNext=csubJobIdNext, csubSessionNativeIpAddrType=csubSessionNativeIpAddrType, csubSessionNativeIpAddr=csubSessionNativeIpAddr, csubSessionNativeIpMask2=csubSessionNativeIpMask2, csubAggStatsTotalFlowsUp=csubAggStatsTotalFlowsUp, csubAggStatsIntGroup=csubAggStatsIntGroup, csubAggStatsSessionType=csubAggStatsSessionType, csubJobQueueNumber=csubJobQueueNumber, csubAggStats=csubAggStats, csubAggStatsCurrTimeElapsed=csubAggStatsCurrTimeElapsed, csubAggStatsUpSessions=csubAggStatsUpSessions, csubAggStatsAuthSessions=csubAggStatsAuthSessions, csubJobQueryResultingReportSize=csubJobQueryResultingReportSize, csubSessionRedundancyMode=csubSessionRedundancyMode, csubAggStatsIntTable=csubAggStatsIntTable, csubSessionFallingThresh=csubSessionFallingThresh, csubSessionAcctSessionId=csubSessionAcctSessionId, csubAggStatsAvgSessionRPM=csubAggStatsAvgSessionRPM, csubAggStatsIntNumber=csubAggStatsIntNumber, csubSessionMlpNegotiated=csubSessionMlpNegotiated, csubJobCount=csubJobCount, ciscoSubscriberSessionMIBObjects=ciscoSubscriberSessionMIBObjects, csubSessionDomain=csubSessionDomain, csubAggStatsGroup=csubAggStatsGroup, csubAggStatsAvgSessionRPH=csubAggStatsAvgSessionRPH, csubSession=csubSession, csubJobMatchParamsEntry=csubJobMatchParamsEntry, csubSessionIpAddrAssignment=csubSessionIpAddrAssignment, csubJobFinishedNotifyEnable=csubJobFinishedNotifyEnable, csubSessionNativeVrf=csubSessionNativeVrf, csubAggStatsCurrDiscSessions=csubAggStatsCurrDiscSessions, csubAggStatsTotalCreatedSessions=csubAggStatsTotalCreatedSessions, csubJobReportEntry=csubJobReportEntry, csubSessionDomainIpMask=csubSessionDomainIpMask, csubJobMatchNativeIpAddrType=csubJobMatchNativeIpAddrType, csubJobMatchAuthenticated=csubJobMatchAuthenticated, csubAggStatsCurrFlowsUp=csubAggStatsCurrFlowsUp, csubJob=csubJob, csubJobQuerySortKey1=csubJobQuerySortKey1, csubSessionByTypeTable=csubSessionByTypeTable, csubSessionMedia=csubSessionMedia, csubSessionProtocol=csubSessionProtocol, csubSessionCreationTime=csubSessionCreationTime, csubAggStatsCurrFailedSessions=csubAggStatsCurrFailedSessions, csubJobMatchRemoteId=csubJobMatchRemoteId, csubSessionRisingThresh=csubSessionRisingThresh, csubSessionThreshEvalInterval=csubSessionThreshEvalInterval, csubJobMatchOtherParams=csubJobMatchOtherParams, csubJobQueryParamsEntry=csubJobQueryParamsEntry, csubSessionEntry=csubSessionEntry, csubJobFinishedNotify=csubJobFinishedNotify, csubJobStorage=csubJobStorage, csubJobMatchUsername=csubJobMatchUsername, csubAggStatsCurrValidIntervals=csubAggStatsCurrValidIntervals, csubAggStatsAvgSessionUptime=csubAggStatsAvgSessionUptime, csubJobReportSession=csubJobReportSession, csubAggThresh=csubAggThresh, csubAggStatsUnAuthSessions=csubAggStatsUnAuthSessions)
