#
# PySNMP MIB module TIMETRA-SAS-FILTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-SAS-FILTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:14:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InetAddressPrefixLength, InetAddressIPv6 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddressIPv6")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, TimeTicks, ModuleIdentity, Integer32, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, Gauge32, ObjectIdentity, MibIdentifier, Opaque, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "ModuleIdentity", "Integer32", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "Gauge32", "ObjectIdentity", "MibIdentifier", "Opaque", "Bits", "NotificationType")
TimeStamp, RowPointer, MacAddress, RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowPointer", "MacAddress", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
tIPFilterEntry, tIPv6FilterEntry = mibBuilder.importSymbols("TIMETRA-FILTER-MIB", "tIPFilterEntry", "tIPv6FilterEntry")
tmnxSRNotifyPrefix, timetraSRMIBModules, tmnxSRConfs, tmnxSRObjs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRNotifyPrefix", "timetraSRMIBModules", "tmnxSRConfs", "tmnxSRObjs")
timetraSASModules, timetraSASConfs, timetraSASNotifyPrefix, timetraSASObjs = mibBuilder.importSymbols("TIMETRA-SAS-GLOBAL-MIB", "timetraSASModules", "timetraSASConfs", "timetraSASNotifyPrefix", "timetraSASObjs")
TTcpUdpPortOperator, TDSCPNameOrEmpty, TNamedItem, SdpBindId, IpAddressPrefixLength, TmnxEncapVal, ServiceAccessPoint, TmnxOperState, TTcpUdpPort, TmnxAdminState, Dot1PPriority, TItemDescription, TNamedItemOrEmpty, TmnxServId, TFrameType, TmnxPortID, TDSCPFilterActionValue, TIpOption, TIpProtocol = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TTcpUdpPortOperator", "TDSCPNameOrEmpty", "TNamedItem", "SdpBindId", "IpAddressPrefixLength", "TmnxEncapVal", "ServiceAccessPoint", "TmnxOperState", "TTcpUdpPort", "TmnxAdminState", "Dot1PPriority", "TItemDescription", "TNamedItemOrEmpty", "TmnxServId", "TFrameType", "TmnxPortID", "TDSCPFilterActionValue", "TIpOption", "TIpProtocol")
timetraSASFilterMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 6, 2, 1, 1, 16))
timetraSASFilterMIBModule.setRevisions(('1912-04-01 00:00',))
if mibBuilder.loadTexts: timetraSASFilterMIBModule.setLastUpdated('1204010000Z')
if mibBuilder.loadTexts: timetraSASFilterMIBModule.setOrganization('Alcatel')
tmnxSASFilterObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21))
tSASFilterObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1))
tIPFilterExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 1), )
if mibBuilder.loadTexts: tIPFilterExtnTable.setStatus('current')
tIPFilterExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 1, 1), )
tIPFilterEntry.registerAugmentions(("TIMETRA-SAS-FILTER-MIB", "tIPFilterExtnEntry"))
tIPFilterExtnEntry.setIndexNames(*tIPFilterEntry.getIndexNames())
if mibBuilder.loadTexts: tIPFilterExtnEntry.setStatus('current')
tFilterUseIpv6Resource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilterUseIpv6Resource.setStatus('current')
tIPv6FilterExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 2), )
if mibBuilder.loadTexts: tIPv6FilterExtnTable.setStatus('current')
tIPv6FilterExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 2, 1), )
tIPv6FilterEntry.registerAugmentions(("TIMETRA-SAS-FILTER-MIB", "tIPv6FilterExtnEntry"))
tIPv6FilterExtnEntry.setIndexNames(*tIPv6FilterEntry.getIndexNames())
if mibBuilder.loadTexts: tIPv6FilterExtnEntry.setStatus('current')
tFilter64Bitsor128 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 21, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv6128", 1), ("ipv664", 2))).clone('ipv6128')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFilter64Bitsor128.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-SAS-FILTER-MIB", tIPv6FilterExtnTable=tIPv6FilterExtnTable, tFilter64Bitsor128=tFilter64Bitsor128, tSASFilterObjects=tSASFilterObjects, timetraSASFilterMIBModule=timetraSASFilterMIBModule, tIPFilterExtnTable=tIPFilterExtnTable, tmnxSASFilterObjs=tmnxSASFilterObjs, tIPFilterExtnEntry=tIPFilterExtnEntry, PYSNMP_MODULE_ID=timetraSASFilterMIBModule, tFilterUseIpv6Resource=tFilterUseIpv6Resource, tIPv6FilterExtnEntry=tIPv6FilterExtnEntry)
