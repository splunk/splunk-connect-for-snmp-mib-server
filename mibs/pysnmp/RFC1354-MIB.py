#
# PySNMP MIB module RFC1354-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RFC1354-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:48:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ip, = mibBuilder.importSymbols("IP-MIB", "ip")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, ObjectIdentity, TimeTicks, NotificationType, IpAddress, Counter64, Unsigned32, MibIdentifier, Bits, iso, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "NotificationType", "IpAddress", "Counter64", "Unsigned32", "MibIdentifier", "Bits", "iso", "Integer32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ipForward = MibIdentifier((1, 3, 6, 1, 2, 1, 4, 24))
ipForwardNumber = MibScalar((1, 3, 6, 1, 2, 1, 4, 24, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipForwardNumber.setStatus('mandatory')
ipForwardTable = MibTable((1, 3, 6, 1, 2, 1, 4, 24, 2), )
if mibBuilder.loadTexts: ipForwardTable.setStatus('mandatory')
ipForwardEntry = MibTableRow((1, 3, 6, 1, 2, 1, 4, 24, 2, 1), ).setIndexNames((0, "RFC1354-MIB", "ipForwardDest"), (0, "RFC1354-MIB", "ipForwardProto"), (0, "RFC1354-MIB", "ipForwardPolicy"), (0, "RFC1354-MIB", "ipForwardNextHop"))
if mibBuilder.loadTexts: ipForwardEntry.setStatus('mandatory')
ipForwardDest = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipForwardDest.setStatus('mandatory')
ipForwardMask = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardMask.setStatus('mandatory')
ipForwardPolicy = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipForwardPolicy.setStatus('mandatory')
ipForwardNextHop = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipForwardNextHop.setStatus('mandatory')
ipForwardIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardIfIndex.setStatus('mandatory')
ipForwardType = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("local", 3), ("remote", 4))).clone('invalid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardType.setStatus('mandatory')
ipForwardProto = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("is-is", 9), ("es-is", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14), ("idpr", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipForwardProto.setStatus('mandatory')
ipForwardAge = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipForwardAge.setStatus('mandatory')
ipForwardInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 9), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardInfo.setStatus('mandatory')
ipForwardNextHopAS = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardNextHopAS.setStatus('mandatory')
ipForwardMetric1 = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 11), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardMetric1.setStatus('mandatory')
ipForwardMetric2 = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 12), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardMetric2.setStatus('mandatory')
ipForwardMetric3 = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 13), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardMetric3.setStatus('mandatory')
ipForwardMetric4 = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 14), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardMetric4.setStatus('mandatory')
ipForwardMetric5 = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 24, 2, 1, 15), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardMetric5.setStatus('mandatory')
mibBuilder.exportSymbols("RFC1354-MIB", ipForwardEntry=ipForwardEntry, ipForwardMask=ipForwardMask, ipForwardPolicy=ipForwardPolicy, ipForwardNumber=ipForwardNumber, ipForwardNextHop=ipForwardNextHop, ipForwardIfIndex=ipForwardIfIndex, ipForwardDest=ipForwardDest, ipForwardMetric5=ipForwardMetric5, ipForwardMetric3=ipForwardMetric3, ipForwardMetric4=ipForwardMetric4, ipForwardMetric1=ipForwardMetric1, ipForward=ipForward, ipForwardAge=ipForwardAge, ipForwardNextHopAS=ipForwardNextHopAS, ipForwardType=ipForwardType, ipForwardTable=ipForwardTable, ipForwardInfo=ipForwardInfo, ipForwardProto=ipForwardProto, ipForwardMetric2=ipForwardMetric2)
