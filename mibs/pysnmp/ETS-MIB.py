#
# PySNMP MIB module ETS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ETS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:52:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, Gauge32, ObjectIdentity, enterprises, IpAddress, ModuleIdentity, MibIdentifier, Unsigned32, Bits, iso, Integer32, NotificationType, Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "ObjectIdentity", "enterprises", "IpAddress", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Bits", "iso", "Integer32", "NotificationType", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiEts = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 17))
if mibBuilder.loadTexts: aiEts.setLastUpdated('9703131900Z')
if mibBuilder.loadTexts: aiEts.setOrganization('Applied Innovation Inc.')
aiEtsSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 17, 1))
aiCardType = MibScalar((1, 3, 6, 1, 4, 1, 539, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("headEndCard", 1), ("remoteEndCard", 2))).clone('remoteEndCard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiCardType.setStatus('current')
aiPollRetryLimit = MibScalar((1, 3, 6, 1, 4, 1, 539, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiPollRetryLimit.setStatus('current')
aiHealthMessageInterval = MibScalar((1, 3, 6, 1, 4, 1, 539, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 65535)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiHealthMessageInterval.setStatus('current')
aiReconnectionTimeOutPeriod = MibScalar((1, 3, 6, 1, 4, 1, 539, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 65535)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiReconnectionTimeOutPeriod.setStatus('current')
aiEtsConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 539, 17, 2), )
if mibBuilder.loadTexts: aiEtsConnectionTable.setStatus('current')
aiEtsConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 17, 2, 1), ).setIndexNames((0, "ETS-MIB", "aiConnectionIndex"))
if mibBuilder.loadTexts: aiEtsConnectionEntry.setStatus('current')
aiConnectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiConnectionIndex.setStatus('current')
aiIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiIpAddress.setStatus('current')
aiConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noActiveConnection", 1), ("connecting", 2), ("activeConnection", 3), ("suspended", 4))).clone('noActiveConnection')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiConnectionStatus.setStatus('current')
aiE2aLinkTable = MibTable((1, 3, 6, 1, 4, 1, 539, 17, 3), )
if mibBuilder.loadTexts: aiE2aLinkTable.setStatus('current')
aiE2aLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 17, 3, 1), ).setIndexNames((0, "ETS-MIB", "aiE2aLinkIndex"))
if mibBuilder.loadTexts: aiE2aLinkEntry.setStatus('current')
aiE2aLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiE2aLinkIndex.setStatus('current')
aiProvisioned = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notProvisioned", 1), ("provisioned", 2))).clone('provisioned')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiProvisioned.setStatus('current')
aiLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linkOnLine", 1), ("linkOffLine", 2))).clone('linkOffLine')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiLinkStatus.setStatus('current')
aiBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e2aBaud600", 1), ("e2aBaud1200", 2))).clone('e2aBaud1200')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiBaudRate.setStatus('current')
aiProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("protocolE2", 1), ("protocolE2A", 2))).clone('protocolE2A')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiProtocol.setStatus('current')
aiTxMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiTxMessages.setStatus('current')
aiTxWords = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiTxWords.setStatus('current')
aiTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiTxErrors.setStatus('current')
aiRxMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRxMessages.setStatus('current')
aiRxWords = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRxWords.setStatus('current')
aiRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRxErrors.setStatus('current')
aiRxTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRxTimeouts.setStatus('current')
aiFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiFlushes.setStatus('current')
aiE2aRtuTable = MibTable((1, 3, 6, 1, 4, 1, 539, 17, 4), )
if mibBuilder.loadTexts: aiE2aRtuTable.setStatus('current')
aiE2aRtuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 17, 4, 1), ).setIndexNames((0, "ETS-MIB", "aiE2aRtuIndex"))
if mibBuilder.loadTexts: aiE2aRtuEntry.setStatus('current')
aiE2aRtuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiE2aRtuIndex.setStatus('current')
aiE2aLink = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiE2aLink.setStatus('current')
aiRtuAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRtuAddress.setStatus('current')
aiRtuType = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("e2aSacRtu", 1), ("e2aAprRtu", 2), ("e2aDasRtu", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiRtuType.setStatus('current')
aiCommunicationState = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rtuOffLine", 1), ("rtuOnLine", 2))).clone('rtuOffLine')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiCommunicationState.setStatus('current')
aiInitialPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiInitialPoll.setStatus('current')
aiEtsConnectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiEtsConnectionIndex.setStatus('current')
aiE2aRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiE2aRequests.setStatus('current')
aiE2aResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiE2aResponses.setStatus('current')
aiPollRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiPollRequests.setStatus('current')
aiPollResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiPollResponses.setStatus('current')
aiLatchingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiLatchingRequests.setStatus('current')
aiLatchingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiLatchingResponses.setStatus('current')
aiMomentaryRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiMomentaryRequests.setStatus('current')
aiMomentaryResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiMomentaryResponses.setStatus('current')
aiTestRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiTestRequests.setStatus('current')
aiTestResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiTestResponses.setStatus('current')
aiUnknownRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiUnknownRequests.setStatus('current')
aiUnknownResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 17, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiUnknownResponses.setStatus('current')
mibBuilder.exportSymbols("ETS-MIB", aiTxMessages=aiTxMessages, aiMomentaryResponses=aiMomentaryResponses, aiIpAddress=aiIpAddress, aiEts=aiEts, aiRtuType=aiRtuType, aiProvisioned=aiProvisioned, aiEtsConnectionTable=aiEtsConnectionTable, aiTxWords=aiTxWords, aiE2aResponses=aiE2aResponses, aiLatchingRequests=aiLatchingRequests, aiPollRequests=aiPollRequests, aiLatchingResponses=aiLatchingResponses, aiUnknownRequests=aiUnknownRequests, aiConnectionStatus=aiConnectionStatus, aiTestRequests=aiTestRequests, aiHealthMessageInterval=aiHealthMessageInterval, aiPollResponses=aiPollResponses, aiInitialPoll=aiInitialPoll, aiE2aLink=aiE2aLink, aiE2aLinkIndex=aiE2aLinkIndex, aiE2aRtuEntry=aiE2aRtuEntry, aiEtsConnectionEntry=aiEtsConnectionEntry, aiE2aRtuTable=aiE2aRtuTable, aiMomentaryRequests=aiMomentaryRequests, aiRxErrors=aiRxErrors, aiRtuAddress=aiRtuAddress, aiTestResponses=aiTestResponses, aiTxErrors=aiTxErrors, aiEtsConnectionIndex=aiEtsConnectionIndex, aiLinkStatus=aiLinkStatus, aiCardType=aiCardType, aiPollRetryLimit=aiPollRetryLimit, aiCommunicationState=aiCommunicationState, aiFlushes=aiFlushes, aiEtsSystem=aiEtsSystem, aiRxTimeouts=aiRxTimeouts, aiRxMessages=aiRxMessages, aiRxWords=aiRxWords, aiE2aLinkEntry=aiE2aLinkEntry, aiBaudRate=aiBaudRate, PYSNMP_MODULE_ID=aiEts, aiUnknownResponses=aiUnknownResponses, aiConnectionIndex=aiConnectionIndex, aiReconnectionTimeOutPeriod=aiReconnectionTimeOutPeriod, aii=aii, aiE2aRtuIndex=aiE2aRtuIndex, aiE2aLinkTable=aiE2aLinkTable, aiE2aRequests=aiE2aRequests, aiProtocol=aiProtocol)
