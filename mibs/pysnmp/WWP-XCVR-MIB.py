#
# PySNMP MIB module WWP-XCVR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-XCVR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, TimeTicks, NotificationType, MibIdentifier, Integer32, IpAddress, Bits, Gauge32, Counter64, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "NotificationType", "MibIdentifier", "Integer32", "IpAddress", "Bits", "Gauge32", "Counter64", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpXcvrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 14))
wwpXcvrMIB.setRevisions(('2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpXcvrMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpXcvrMIB.setOrganization('World Wide Packets, Inc')
wwpXcvrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1))
wwpXcvr = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1))
wwpXcvrNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 2))
wwpXcvrMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 14, 2))
wwpXcvrMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 14, 2, 0))
wwpXcvrMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 14, 3))
wwpXcvrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 14, 3, 1))
wwpXcvrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 14, 3, 2))
wwpXcvrTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1), )
if mibBuilder.loadTexts: wwpXcvrTable.setStatus('current')
wwpXcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1), ).setIndexNames((0, "WWP-XCVR-MIB", "wwpXcvrPortXcvrId"), (0, "WWP-XCVR-MIB", "wwpXcvrId"))
if mibBuilder.loadTexts: wwpXcvrEntry.setStatus('current')
wwpXcvrPortXcvrId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrPortXcvrId.setStatus('current')
wwpXcvrId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrId.setStatus('current')
wwpXcvrFiberType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("lx", 1), ("sx", 2), ("cx", 3), ("t", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrFiberType.setStatus('current')
wwpXcvrVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrVendorName.setStatus('current')
wwpXcvrPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrPartNum.setStatus('current')
wwpXcvrPartRev = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrPartRev.setStatus('current')
wwpXcvrTxEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpXcvrTxEnabled.setStatus('current')
wwpXcvrRxSignalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("detected", 1), ("notDetected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrRxSignalStatus.setStatus('current')
wwpXcvrTxFaultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fault", 1), ("noFault", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrTxFaultStatus.setStatus('current')
wwpXcvrPortTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 2), )
if mibBuilder.loadTexts: wwpXcvrPortTable.setStatus('current')
wwpXcvrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 2, 1), ).setIndexNames((0, "WWP-XCVR-MIB", "wwpXcvrPortId"))
if mibBuilder.loadTexts: wwpXcvrPortEntry.setStatus('current')
wwpXcvrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrPortId.setStatus('current')
wwpXcvrPortHoldDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpXcvrPortHoldDownTime.setStatus('deprecated')
wwpXcvrPortRedOrDiagMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpXcvrPortRedOrDiagMode.setStatus('current')
wwpXcvrPortPreferredXcvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpXcvrPortPreferredXcvr.setStatus('current')
wwpXcvrPortActiveXcvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrPortActiveXcvr.setStatus('current')
wwpXcvrEventType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("up", 1), ("down", 2), ("select", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrEventType.setStatus('current')
wwpXcvrErrorType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 14, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("chksumFailed", 1), ("opticalFault", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpXcvrErrorType.setStatus('current')
wwpXcvrLinkStateChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 14, 2, 0, 4)).setObjects(("WWP-XCVR-MIB", "wwpXcvrPortId"), ("WWP-XCVR-MIB", "wwpXcvrId"), ("WWP-XCVR-MIB", "wwpXcvrEventType"))
if mibBuilder.loadTexts: wwpXcvrLinkStateChangeNotification.setStatus('current')
wwpXcvrErrorTypeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 14, 2, 0, 5)).setObjects(("WWP-XCVR-MIB", "wwpXcvrPortId"), ("WWP-XCVR-MIB", "wwpXcvrId"), ("WWP-XCVR-MIB", "wwpXcvrErrorType"))
if mibBuilder.loadTexts: wwpXcvrErrorTypeNotification.setStatus('current')
mibBuilder.exportSymbols("WWP-XCVR-MIB", wwpXcvrPortPreferredXcvr=wwpXcvrPortPreferredXcvr, wwpXcvrId=wwpXcvrId, wwpXcvrPortTable=wwpXcvrPortTable, wwpXcvrMIBObjects=wwpXcvrMIBObjects, wwpXcvrEventType=wwpXcvrEventType, wwpXcvr=wwpXcvr, wwpXcvrTxEnabled=wwpXcvrTxEnabled, wwpXcvrMIBConformance=wwpXcvrMIBConformance, wwpXcvrTable=wwpXcvrTable, wwpXcvrVendorName=wwpXcvrVendorName, wwpXcvrTxFaultStatus=wwpXcvrTxFaultStatus, wwpXcvrFiberType=wwpXcvrFiberType, wwpXcvrPartRev=wwpXcvrPartRev, wwpXcvrErrorType=wwpXcvrErrorType, wwpXcvrRxSignalStatus=wwpXcvrRxSignalStatus, wwpXcvrEntry=wwpXcvrEntry, wwpXcvrNotif=wwpXcvrNotif, wwpXcvrMIBGroups=wwpXcvrMIBGroups, wwpXcvrPortId=wwpXcvrPortId, wwpXcvrMIBNotificationPrefix=wwpXcvrMIBNotificationPrefix, wwpXcvrMIBNotifications=wwpXcvrMIBNotifications, PYSNMP_MODULE_ID=wwpXcvrMIB, wwpXcvrPortEntry=wwpXcvrPortEntry, wwpXcvrPortRedOrDiagMode=wwpXcvrPortRedOrDiagMode, wwpXcvrMIBCompliances=wwpXcvrMIBCompliances, wwpXcvrErrorTypeNotification=wwpXcvrErrorTypeNotification, wwpXcvrLinkStateChangeNotification=wwpXcvrLinkStateChangeNotification, wwpXcvrPortActiveXcvr=wwpXcvrPortActiveXcvr, wwpXcvrMIB=wwpXcvrMIB, wwpXcvrPartNum=wwpXcvrPartNum, wwpXcvrPortXcvrId=wwpXcvrPortXcvrId, wwpXcvrPortHoldDownTime=wwpXcvrPortHoldDownTime)
