#
# PySNMP MIB module HH3C-DVPN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-DVPN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, Counter64, Unsigned32, Integer32, Gauge32, TimeTicks, iso, IpAddress, Counter32, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "Counter64", "Unsigned32", "Integer32", "Gauge32", "TimeTicks", "iso", "IpAddress", "Counter32", "MibIdentifier", "ModuleIdentity")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hh3cDvpn = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 57))
if mibBuilder.loadTexts: hh3cDvpn.setLastUpdated('200507011936Z')
if mibBuilder.loadTexts: hh3cDvpn.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class DvpnAlgorithmSuite(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("dvpnDesCbcMd5PreShaModp768", 1), ("dvpnDesCbcMd5PreShaModp1024", 2), ("dvpnDesCbcSha1PreShaModp768", 3), ("dvpnDesCbcSha1PreShaModp1024", 4), ("dvpn3DesCbcMd5PreShaModp768", 5), ("dvpn3DesCbcMd5PreShaModp1024", 6), ("dvpn3DesCbcSha1PreShaModp768", 7), ("dvpn3DesCbcSha1PreShaModp1024", 8), ("dvpnAesCbcMd5PreShaModp768", 9), ("dvpnAesCbcMd5PreShaModp1024", 10), ("dvpnAesCbcSHA1Sha1PreShaModp768", 11), ("dvpnAesCbcSHA1Sha1PreShaModp1024", 12), ("dvpnAlgorithmNone", 13))

class DvpnCommunicateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("clientToserver", 1), ("serverToclient", 2), ("serverToserver", 3), ("clientToclient", 4))

hh3cDvpnMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1))
hh3cDvpnMibGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1))
hh3cDvpnMibTableTroop = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2))
hh3cDvpnMibNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 3))
hh3cDvpnMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4))
hh3cDvpnServiceEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnServiceEnable.setStatus('current')
hh3cDvpnClassNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnClassNumber.setStatus('current')
hh3cDvpnClientNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnClientNumber.setStatus('current')
hh3cDvpnMapAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 180)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnMapAgeTime.setStatus('current')
hh3cDvpnClientRegisterInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 60)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnClientRegisterInterval.setStatus('current')
hh3cDvpnClientRegisterDumb = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnClientRegisterDumb.setStatus('current')
hh3cDvpnClientRegisterRetry = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnClientRegisterRetry.setStatus('current')
hh3cDvpnInputPkt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnInputPkt.setStatus('current')
hh3cDvpnDropPkt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDropPkt.setStatus('current')
hh3cDvpnOutputPkt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnOutputPkt.setStatus('current')
hh3cDvpnOutputErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnOutputErrorPkt.setStatus('current')
hh3cDvpnEncryptErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnEncryptErrorPkt.setStatus('current')
hh3cDvpnCurrentDeviceRole = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("server", 2), ("client", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnCurrentDeviceRole.setStatus('current')
hh3cDvpnDomainNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDomainNumber.setStatus('current')
hh3cDvpnMapNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapNumber.setStatus('current')
hh3cDvpnSessionNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionNumber.setStatus('current')
hh3cDvpnServerPreSharedKey = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnServerPreSharedKey.setStatus('current')
hh3cDvpnMapTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnMapTrapEnable.setStatus('current')
hh3cDvpnSessionTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnSessionTrapEnable.setStatus('current')
hh3cDvpnVersion = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("version2", 1), ("version3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnVersion.setStatus('current')
hh3cDvpnClearDomainAllConection = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnClearDomainAllConection.setStatus('current')
hh3cDvpnClearDvpnStaInfo = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnClearDvpnStaInfo.setStatus('current')
hh3cDvpnTotalRedirectNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnTotalRedirectNumber.setStatus('current')
hh3cDvpnGlobalAuthenClientType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pap", 2), ("chap", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnGlobalAuthenClientType.setStatus('current')
hh3cDvpnGlobalUserDefAAADomain = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnGlobalUserDefAAADomain.setStatus('current')
hh3cDvpnLocalDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnLocalDeviceId.setStatus('current')
hh3cDvpnSessionHisAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnSessionHisAgeTime.setStatus('current')
hh3cDvpnSessionHisReset = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnSessionHisReset.setStatus('current')
hh3cDvpnPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cDvpnPolicyTable.setStatus('current')
hh3cDvpnPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-DVPN-MIB", "hh3cDvpnPolicyName"))
if mibBuilder.loadTexts: hh3cDvpnPolicyEntry.setStatus('current')
hh3cDvpnPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hh3cDvpnPolicyName.setStatus('current')
hh3cDvpnPoAuthenClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pap", 2), ("chap", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoAuthenClientType.setStatus('current')
hh3cDvpnPoSessionAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 3), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoSessionAlgorithmSuite.setStatus('current')
hh3cDvpnPoSessionIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoSessionIdleTime.setStatus('current')
hh3cDvpnPoSessionKeepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoSessionKeepTime.setStatus('current')
hh3cDvpnPoSessionSetupInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoSessionSetupInterval.setStatus('current')
hh3cDvpnPoDataAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 7), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoDataAlgorithmSuite.setStatus('current')
hh3cDvpnPoSaSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(180, 604800)).clone(3600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoSaSeconds.setStatus('current')
hh3cDvpnPoUserDefAAADomain = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoUserDefAAADomain.setStatus('current')
hh3cDvpnPoRefTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnPoRefTimes.setStatus('current')
hh3cDvpnPoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnPoRowStatus.setStatus('current')
hh3cDvpnDomainInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cDvpnDomainInfoTable.setStatus('current')
hh3cDvpnDomainInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-DVPN-MIB", "hh3cDvpnDomainID"))
if mibBuilder.loadTexts: hh3cDvpnDomainInfoEntry.setStatus('current')
hh3cDvpnDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cDvpnDomainID.setStatus('current')
hh3cDvpnDomainSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDomainSessionNum.setStatus('current')
hh3cDvpnDomainRedirectNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDomainRedirectNum.setStatus('current')
hh3cDvpnDomainInputPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDomainInputPkt.setStatus('current')
hh3cDvpnDomainDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDomainDropPkt.setStatus('current')
hh3cDvpnDomainOutputPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDomainOutputPkt.setStatus('current')
hh3cDvpnDomainOutputErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDomainOutputErrorPkt.setStatus('current')
hh3cDvpnDomainEncryptErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnDomainEncryptErrorPkt.setStatus('current')
hh3cDvpnClassTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3), )
if mibBuilder.loadTexts: hh3cDvpnClassTable.setStatus('current')
hh3cDvpnClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1), ).setIndexNames((0, "HH3C-DVPN-MIB", "hh3cDvpnClassName"))
if mibBuilder.loadTexts: hh3cDvpnClassEntry.setStatus('current')
hh3cDvpnClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hh3cDvpnClassName.setStatus('current')
hh3cDvpnClServerPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClServerPublicIpType.setStatus('current')
hh3cDvpnClServerPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClServerPublicIp.setStatus('current')
hh3cDvpnClServerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClServerPriIpType.setStatus('current')
hh3cDvpnClServerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClServerPriIp.setStatus('current')
hh3cDvpnClAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 6), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClAlgorithmSuite.setStatus('current')
hh3cDvpnClAuthenServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("preShareKey", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClAuthenServerType.setStatus('current')
hh3cDvpnClPreShareKey = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClPreShareKey.setStatus('current')
hh3cDvpnClUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClUserName.setStatus('current')
hh3cDvpnClPwdEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("simple", 1), ("cipher", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClPwdEncrypted.setStatus('current')
hh3cDvpnClPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 11), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClPasswd.setStatus('current')
hh3cDvpnClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDvpnClassRowStatus.setStatus('current')
hh3cDvpnTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 4), )
if mibBuilder.loadTexts: hh3cDvpnTunnelTable.setStatus('current')
hh3cDvpnTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cDvpnTunnelEntry.setStatus('current')
hh3cDvpnTunnelInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2))).clone('client')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnTunnelInterfaceType.setStatus('current')
hh3cDvpnTunnelAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnTunnelAcl.setStatus('current')
hh3cDvpnTunnelClientRegType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undistributed", 1), ("forward", 2), ("undistributedandforward", 3), ("normal", 4))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnTunnelClientRegType.setStatus('current')
hh3cDvpnTunnelDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnTunnelDvpnId.setStatus('current')
hh3cDvpnTunnelPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnTunnelPolicy.setStatus('current')
hh3cDvpnTunnelClass = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDvpnTunnelClass.setStatus('current')
hh3cDvpnMapTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5), )
if mibBuilder.loadTexts: hh3cDvpnMapTable.setStatus('current')
hh3cDvpnMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1), ).setIndexNames((0, "HH3C-DVPN-MIB", "hh3cDvpnMapIndex"))
if mibBuilder.loadTexts: hh3cDvpnMapEntry.setStatus('current')
hh3cDvpnMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDvpnMapIndex.setStatus('current')
hh3cDvpnMapPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapPeerDeviceId.setStatus('current')
hh3cDvpnMapDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapDvpnId.setStatus('current')
hh3cDvpnMapBuildTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapBuildTime.setStatus('current')
hh3cDvpnMapPeerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapPeerPriIpType.setStatus('current')
hh3cDvpnMapPeerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapPeerPriIp.setStatus('current')
hh3cDvpnMapPeerPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapPeerPublicIpType.setStatus('current')
hh3cDvpnMapPeerPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapPeerPublicIp.setStatus('current')
hh3cDvpnMapLocalPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapLocalPriIpType.setStatus('current')
hh3cDvpnMapLocalPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapLocalPriIp.setStatus('current')
hh3cDvpnMapLocalPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapLocalPublicIpType.setStatus('current')
hh3cDvpnMapLocalPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 12), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapLocalPublicIp.setStatus('current')
hh3cDvpnMapUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapUserName.setStatus('current')
hh3cDvpnMapUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapUdpPort.setStatus('current')
hh3cDvpnMapControlId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapControlId.setStatus('current')
hh3cDvpnMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 16), DvpnCommunicateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapType.setStatus('current')
hh3cDvpnMapState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("mapClientInit", 1), ("mapClientBegin", 2), ("mapClientAlgreq", 3), ("mapClientKexReq", 4), ("mapClientAuthenReq", 5), ("mapClientConfigReq", 6), ("mapClientReq", 7), ("mapClientSuccess", 8), ("mapServerBegin", 9), ("mapServerAlgorithm", 10), ("mapServerKexInit", 11), ("mapServerAuthenInit", 12), ("mapServerConfigInit", 13), ("mapServerInit", 14), ("mapServerFinished", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnMapState.setStatus('current')
hh3cDvpnSessionTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6), )
if mibBuilder.loadTexts: hh3cDvpnSessionTable.setStatus('current')
hh3cDvpnSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1), ).setIndexNames((0, "HH3C-DVPN-MIB", "hh3cDvpnSessionDvpnId"), (0, "HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPriIpType"), (0, "HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPriIp"))
if mibBuilder.loadTexts: hh3cDvpnSessionEntry.setStatus('current')
hh3cDvpnSessionDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDvpnSessionDvpnId.setStatus('current')
hh3cDvpnSessionPeerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDvpnSessionPeerPriIpType.setStatus('current')
hh3cDvpnSessionPeerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDvpnSessionPeerPriIp.setStatus('current')
hh3cDvpnSessionPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionPeerDeviceId.setStatus('current')
hh3cDvpnSessionBuildTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionBuildTime.setStatus('current')
hh3cDvpnSessionPeerPubIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionPeerPubIpType.setStatus('current')
hh3cDvpnSessionPeerPubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionPeerPubIp.setStatus('current')
hh3cDvpnSessionLocalPubIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionLocalPubIpType.setStatus('current')
hh3cDvpnSessionLocalPubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionLocalPubIp.setStatus('current')
hh3cDvpnSessionLocalPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionLocalPriIpType.setStatus('current')
hh3cDvpnSessionLocalPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 11), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionLocalPriIp.setStatus('current')
hh3cDvpnSessionPeerUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionPeerUdpPort.setStatus('current')
hh3cDvpnSessionInitiator = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionInitiator.setStatus('current')
hh3cDvpnSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionUserName.setStatus('current')
hh3cDvpnSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sessionSetupInit", 1), ("sessionSetupReq", 2), ("sessionSetupSuccess", 3), ("sessionRekeyReq", 4), ("sessionRekeyRep", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionState.setStatus('current')
hh3cDvpnSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 16), DvpnCommunicateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionType.setStatus('current')
hh3cDvpnSessionPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("router", 1), ("pcClient", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionPeerType.setStatus('current')
hh3cDvpnSessionHisTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7), )
if mibBuilder.loadTexts: hh3cDvpnSessionHisTable.setStatus('current')
hh3cDvpnSessionHisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1), ).setIndexNames((0, "HH3C-DVPN-MIB", "hh3cDvpnSessionHisDvpnID"), (0, "HH3C-DVPN-MIB", "hh3cDvpnSessionHisPeerPriIPType"), (0, "HH3C-DVPN-MIB", "hh3cDvpnSessionHisPeerPriIP"))
if mibBuilder.loadTexts: hh3cDvpnSessionHisEntry.setStatus('current')
hh3cDvpnSessionHisDvpnID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cDvpnSessionHisDvpnID.setStatus('current')
hh3cDvpnSessionHisPeerPriIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisPeerPriIPType.setStatus('current')
hh3cDvpnSessionHisPeerPriIP = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 3), InetAddress())
if mibBuilder.loadTexts: hh3cDvpnSessionHisPeerPriIP.setStatus('current')
hh3cDvpnSessionHisSendPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisSendPkt.setStatus('current')
hh3cDvpnSessionHisRcvPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisRcvPkt.setStatus('current')
hh3cDvpnSessionHisOnlineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisOnlineNumber.setStatus('current')
hh3cDvpnSessionHisFirstUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisFirstUpTime.setStatus('current')
hh3cDvpnSessionHisLastUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisLastUpTime.setStatus('current')
hh3cDvpnSessionHisLastDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisLastDownTime.setStatus('current')
hh3cDvpnSessionHisOnlineFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisOnlineFlag.setStatus('current')
hh3cDvpnSessionHisPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 2, 7, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDvpnSessionHisPeerDeviceId.setStatus('current')
hh3cDvpnNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 3, 0))
hh3cDvpnSessionBuildNotification = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 3, 0, 1)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnSessionDvpnId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnLocalDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPubIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPubIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPubIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPubIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerUdpPort"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionUserName"))
if mibBuilder.loadTexts: hh3cDvpnSessionBuildNotification.setStatus('current')
hh3cDvpnSessionDelNotification = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 3, 0, 2)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnSessionDvpnId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnLocalDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPubIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPubIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPubIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPubIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerUdpPort"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionUserName"))
if mibBuilder.loadTexts: hh3cDvpnSessionDelNotification.setStatus('current')
hh3cDvpnMapBuildNotification = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 3, 0, 3)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnMapIndex"), ("HH3C-DVPN-MIB", "hh3cDvpnMapDvpnId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPublicIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPublicIp"), ("HH3C-DVPN-MIB", "hh3cDvpnLocalDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPublicIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPublicIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapUserName"))
if mibBuilder.loadTexts: hh3cDvpnMapBuildNotification.setStatus('current')
hh3cDvpnMapDelNotification = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 3, 0, 4)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnMapIndex"), ("HH3C-DVPN-MIB", "hh3cDvpnMapDvpnId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPublicIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPublicIp"), ("HH3C-DVPN-MIB", "hh3cDvpnLocalDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPublicIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPublicIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapUserName"))
if mibBuilder.loadTexts: hh3cDvpnMapDelNotification.setStatus('current')
hh3cDvpnMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 1))
hh3cDvpnMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 1, 1)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnGlobalGroup"), ("HH3C-DVPN-MIB", "hh3cDvpnDomainInfoGroup"), ("HH3C-DVPN-MIB", "hh3cDvpnPolicyGroup"), ("HH3C-DVPN-MIB", "hh3cDvpnClassGroup"), ("HH3C-DVPN-MIB", "hh3cDvpnTunnelGroup"), ("HH3C-DVPN-MIB", "hh3cDvpnMapGroup"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionGroup"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisGroup"), ("HH3C-DVPN-MIB", "hh3cDvpnNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnMibCompliance = hh3cDvpnMibCompliance.setStatus('current')
hh3cDvpnMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2))
hh3cDvpnGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 1)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnServiceEnable"), ("HH3C-DVPN-MIB", "hh3cDvpnClassNumber"), ("HH3C-DVPN-MIB", "hh3cDvpnClientNumber"), ("HH3C-DVPN-MIB", "hh3cDvpnMapAgeTime"), ("HH3C-DVPN-MIB", "hh3cDvpnClientRegisterInterval"), ("HH3C-DVPN-MIB", "hh3cDvpnClientRegisterDumb"), ("HH3C-DVPN-MIB", "hh3cDvpnClientRegisterRetry"), ("HH3C-DVPN-MIB", "hh3cDvpnInputPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnDropPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnOutputPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnOutputErrorPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnEncryptErrorPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnCurrentDeviceRole"), ("HH3C-DVPN-MIB", "hh3cDvpnDomainNumber"), ("HH3C-DVPN-MIB", "hh3cDvpnMapNumber"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionNumber"), ("HH3C-DVPN-MIB", "hh3cDvpnServerPreSharedKey"), ("HH3C-DVPN-MIB", "hh3cDvpnMapTrapEnable"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionTrapEnable"), ("HH3C-DVPN-MIB", "hh3cDvpnVersion"), ("HH3C-DVPN-MIB", "hh3cDvpnClearDomainAllConection"), ("HH3C-DVPN-MIB", "hh3cDvpnClearDvpnStaInfo"), ("HH3C-DVPN-MIB", "hh3cDvpnTotalRedirectNumber"), ("HH3C-DVPN-MIB", "hh3cDvpnGlobalAuthenClientType"), ("HH3C-DVPN-MIB", "hh3cDvpnGlobalUserDefAAADomain"), ("HH3C-DVPN-MIB", "hh3cDvpnLocalDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisAgeTime"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnGlobalGroup = hh3cDvpnGlobalGroup.setStatus('current')
hh3cDvpnPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 2)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnPoAuthenClientType"), ("HH3C-DVPN-MIB", "hh3cDvpnPoSessionAlgorithmSuite"), ("HH3C-DVPN-MIB", "hh3cDvpnPoSessionIdleTime"), ("HH3C-DVPN-MIB", "hh3cDvpnPoSessionKeepTime"), ("HH3C-DVPN-MIB", "hh3cDvpnPoSessionSetupInterval"), ("HH3C-DVPN-MIB", "hh3cDvpnPoDataAlgorithmSuite"), ("HH3C-DVPN-MIB", "hh3cDvpnPoSaSeconds"), ("HH3C-DVPN-MIB", "hh3cDvpnPoUserDefAAADomain"), ("HH3C-DVPN-MIB", "hh3cDvpnPoRefTimes"), ("HH3C-DVPN-MIB", "hh3cDvpnPoRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnPolicyGroup = hh3cDvpnPolicyGroup.setStatus('current')
hh3cDvpnDomainInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 3)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnDomainSessionNum"), ("HH3C-DVPN-MIB", "hh3cDvpnDomainRedirectNum"), ("HH3C-DVPN-MIB", "hh3cDvpnDomainInputPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnDomainDropPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnDomainOutputPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnDomainOutputErrorPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnDomainEncryptErrorPkt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnDomainInfoGroup = hh3cDvpnDomainInfoGroup.setStatus('current')
hh3cDvpnClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 4)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnClServerPublicIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnClServerPublicIp"), ("HH3C-DVPN-MIB", "hh3cDvpnClServerPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnClServerPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnClAlgorithmSuite"), ("HH3C-DVPN-MIB", "hh3cDvpnClAuthenServerType"), ("HH3C-DVPN-MIB", "hh3cDvpnClPreShareKey"), ("HH3C-DVPN-MIB", "hh3cDvpnClUserName"), ("HH3C-DVPN-MIB", "hh3cDvpnClPwdEncrypted"), ("HH3C-DVPN-MIB", "hh3cDvpnClPasswd"), ("HH3C-DVPN-MIB", "hh3cDvpnClassRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnClassGroup = hh3cDvpnClassGroup.setStatus('current')
hh3cDvpnTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 5)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnTunnelInterfaceType"), ("HH3C-DVPN-MIB", "hh3cDvpnTunnelAcl"), ("HH3C-DVPN-MIB", "hh3cDvpnTunnelClientRegType"), ("HH3C-DVPN-MIB", "hh3cDvpnTunnelDvpnId"), ("HH3C-DVPN-MIB", "hh3cDvpnTunnelPolicy"), ("HH3C-DVPN-MIB", "hh3cDvpnTunnelClass"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnTunnelGroup = hh3cDvpnTunnelGroup.setStatus('current')
hh3cDvpnMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 6)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnMapIndex"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapDvpnId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapBuildTime"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPublicIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapPeerPublicIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPublicIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapLocalPublicIp"), ("HH3C-DVPN-MIB", "hh3cDvpnMapUserName"), ("HH3C-DVPN-MIB", "hh3cDvpnMapUdpPort"), ("HH3C-DVPN-MIB", "hh3cDvpnMapControlId"), ("HH3C-DVPN-MIB", "hh3cDvpnMapType"), ("HH3C-DVPN-MIB", "hh3cDvpnMapState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnMapGroup = hh3cDvpnMapGroup.setStatus('current')
hh3cDvpnSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 7)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnSessionDvpnId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerDeviceId"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionBuildTime"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPubIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPubIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPubIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPubIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPriIpType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionLocalPriIp"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerUdpPort"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionInitiator"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionUserName"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionState"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionPeerType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnSessionGroup = hh3cDvpnSessionGroup.setStatus('current')
hh3cDvpnSessionHisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 8)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnSessionHisPeerPriIPType"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisSendPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisRcvPkt"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisOnlineNumber"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisFirstUpTime"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisLastUpTime"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisLastDownTime"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisOnlineFlag"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionHisPeerDeviceId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnSessionHisGroup = hh3cDvpnSessionHisGroup.setStatus('current')
hh3cDvpnNotificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 57, 1, 4, 2, 9)).setObjects(("HH3C-DVPN-MIB", "hh3cDvpnSessionBuildNotification"), ("HH3C-DVPN-MIB", "hh3cDvpnSessionDelNotification"), ("HH3C-DVPN-MIB", "hh3cDvpnMapBuildNotification"), ("HH3C-DVPN-MIB", "hh3cDvpnMapDelNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cDvpnNotificationGroup = hh3cDvpnNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HH3C-DVPN-MIB", hh3cDvpnClientNumber=hh3cDvpnClientNumber, hh3cDvpnDomainInfoGroup=hh3cDvpnDomainInfoGroup, hh3cDvpnMapPeerPriIp=hh3cDvpnMapPeerPriIp, hh3cDvpnSessionHisOnlineNumber=hh3cDvpnSessionHisOnlineNumber, hh3cDvpnDomainEncryptErrorPkt=hh3cDvpnDomainEncryptErrorPkt, hh3cDvpnDropPkt=hh3cDvpnDropPkt, hh3cDvpnSessionHisRcvPkt=hh3cDvpnSessionHisRcvPkt, hh3cDvpnMibGroups=hh3cDvpnMibGroups, hh3cDvpnClientRegisterInterval=hh3cDvpnClientRegisterInterval, hh3cDvpnSessionHisFirstUpTime=hh3cDvpnSessionHisFirstUpTime, hh3cDvpnNotification=hh3cDvpnNotification, hh3cDvpnMapState=hh3cDvpnMapState, hh3cDvpnMibCompliance=hh3cDvpnMibCompliance, hh3cDvpnGlobalUserDefAAADomain=hh3cDvpnGlobalUserDefAAADomain, hh3cDvpnSessionPeerDeviceId=hh3cDvpnSessionPeerDeviceId, hh3cDvpnPolicyName=hh3cDvpnPolicyName, hh3cDvpnMapAgeTime=hh3cDvpnMapAgeTime, hh3cDvpnMapUdpPort=hh3cDvpnMapUdpPort, hh3cDvpnClientRegisterRetry=hh3cDvpnClientRegisterRetry, hh3cDvpnSessionPeerUdpPort=hh3cDvpnSessionPeerUdpPort, hh3cDvpnSessionPeerPriIpType=hh3cDvpnSessionPeerPriIpType, hh3cDvpnMapBuildTime=hh3cDvpnMapBuildTime, hh3cDvpnMapGroup=hh3cDvpnMapGroup, hh3cDvpnClServerPublicIp=hh3cDvpnClServerPublicIp, hh3cDvpnSessionHisTable=hh3cDvpnSessionHisTable, hh3cDvpnSessionBuildTime=hh3cDvpnSessionBuildTime, hh3cDvpnDomainInputPkt=hh3cDvpnDomainInputPkt, hh3cDvpnClAuthenServerType=hh3cDvpnClAuthenServerType, hh3cDvpnDomainInfoEntry=hh3cDvpnDomainInfoEntry, hh3cDvpnOutputPkt=hh3cDvpnOutputPkt, hh3cDvpnMapPeerPriIpType=hh3cDvpnMapPeerPriIpType, hh3cDvpnPolicyGroup=hh3cDvpnPolicyGroup, hh3cDvpnCurrentDeviceRole=hh3cDvpnCurrentDeviceRole, hh3cDvpnMapDelNotification=hh3cDvpnMapDelNotification, hh3cDvpnMapTable=hh3cDvpnMapTable, hh3cDvpnSessionLocalPubIpType=hh3cDvpnSessionLocalPubIpType, hh3cDvpnMapControlId=hh3cDvpnMapControlId, hh3cDvpnPoRefTimes=hh3cDvpnPoRefTimes, hh3cDvpnSessionEntry=hh3cDvpnSessionEntry, hh3cDvpnNotificationGroup=hh3cDvpnNotificationGroup, hh3cDvpnPoRowStatus=hh3cDvpnPoRowStatus, hh3cDvpnGlobalGroup=hh3cDvpnGlobalGroup, hh3cDvpnSessionHisLastUpTime=hh3cDvpnSessionHisLastUpTime, hh3cDvpnSessionPeerType=hh3cDvpnSessionPeerType, hh3cDvpnDomainRedirectNum=hh3cDvpnDomainRedirectNum, hh3cDvpnDomainID=hh3cDvpnDomainID, hh3cDvpnSessionLocalPriIp=hh3cDvpnSessionLocalPriIp, hh3cDvpnMapPeerPublicIp=hh3cDvpnMapPeerPublicIp, hh3cDvpnClassName=hh3cDvpnClassName, hh3cDvpnSessionHisEntry=hh3cDvpnSessionHisEntry, hh3cDvpnDomainOutputPkt=hh3cDvpnDomainOutputPkt, hh3cDvpnDomainOutputErrorPkt=hh3cDvpnDomainOutputErrorPkt, hh3cDvpnMibNotification=hh3cDvpnMibNotification, hh3cDvpnMibGlobal=hh3cDvpnMibGlobal, hh3cDvpnSessionDvpnId=hh3cDvpnSessionDvpnId, hh3cDvpnClassNumber=hh3cDvpnClassNumber, hh3cDvpnPoDataAlgorithmSuite=hh3cDvpnPoDataAlgorithmSuite, hh3cDvpnMapDvpnId=hh3cDvpnMapDvpnId, hh3cDvpnMibTableTroop=hh3cDvpnMibTableTroop, hh3cDvpnServerPreSharedKey=hh3cDvpnServerPreSharedKey, hh3cDvpnSessionHisOnlineFlag=hh3cDvpnSessionHisOnlineFlag, hh3cDvpnSessionBuildNotification=hh3cDvpnSessionBuildNotification, hh3cDvpnClassRowStatus=hh3cDvpnClassRowStatus, hh3cDvpnSessionNumber=hh3cDvpnSessionNumber, hh3cDvpnVersion=hh3cDvpnVersion, hh3cDvpnEncryptErrorPkt=hh3cDvpnEncryptErrorPkt, PYSNMP_MODULE_ID=hh3cDvpn, hh3cDvpnClientRegisterDumb=hh3cDvpnClientRegisterDumb, hh3cDvpnMapPeerDeviceId=hh3cDvpnMapPeerDeviceId, hh3cDvpnOutputErrorPkt=hh3cDvpnOutputErrorPkt, hh3cDvpnTotalRedirectNumber=hh3cDvpnTotalRedirectNumber, hh3cDvpnSessionType=hh3cDvpnSessionType, hh3cDvpnDomainNumber=hh3cDvpnDomainNumber, hh3cDvpnPoSessionAlgorithmSuite=hh3cDvpnPoSessionAlgorithmSuite, hh3cDvpnPolicyTable=hh3cDvpnPolicyTable, hh3cDvpnSessionHisGroup=hh3cDvpnSessionHisGroup, hh3cDvpnTunnelInterfaceType=hh3cDvpnTunnelInterfaceType, hh3cDvpnMapBuildNotification=hh3cDvpnMapBuildNotification, hh3cDvpnSessionLocalPriIpType=hh3cDvpnSessionLocalPriIpType, hh3cDvpnTunnelAcl=hh3cDvpnTunnelAcl, DvpnCommunicateType=DvpnCommunicateType, hh3cDvpnInputPkt=hh3cDvpnInputPkt, hh3cDvpnMibCompliances=hh3cDvpnMibCompliances, hh3cDvpnClPasswd=hh3cDvpnClPasswd, hh3cDvpnClServerPublicIpType=hh3cDvpnClServerPublicIpType, hh3cDvpnSessionHisAgeTime=hh3cDvpnSessionHisAgeTime, hh3cDvpnMapLocalPublicIpType=hh3cDvpnMapLocalPublicIpType, hh3cDvpnMapLocalPublicIp=hh3cDvpnMapLocalPublicIp, hh3cDvpnMapUserName=hh3cDvpnMapUserName, hh3cDvpnMapPeerPublicIpType=hh3cDvpnMapPeerPublicIpType, DvpnAlgorithmSuite=DvpnAlgorithmSuite, hh3cDvpnClServerPriIpType=hh3cDvpnClServerPriIpType, hh3cDvpnTunnelPolicy=hh3cDvpnTunnelPolicy, hh3cDvpnMapTrapEnable=hh3cDvpnMapTrapEnable, hh3cDvpnClPwdEncrypted=hh3cDvpnClPwdEncrypted, hh3cDvpnDomainDropPkt=hh3cDvpnDomainDropPkt, hh3cDvpnSessionLocalPubIp=hh3cDvpnSessionLocalPubIp, hh3cDvpnDomainInfoTable=hh3cDvpnDomainInfoTable, hh3cDvpnMapIndex=hh3cDvpnMapIndex, hh3cDvpnServiceEnable=hh3cDvpnServiceEnable, hh3cDvpnPoSaSeconds=hh3cDvpnPoSaSeconds, hh3cDvpnMibConformance=hh3cDvpnMibConformance, hh3cDvpnPoAuthenClientType=hh3cDvpnPoAuthenClientType, hh3cDvpnTunnelClientRegType=hh3cDvpnTunnelClientRegType, hh3cDvpnSessionInitiator=hh3cDvpnSessionInitiator, hh3cDvpnClassGroup=hh3cDvpnClassGroup, hh3cDvpnSessionDelNotification=hh3cDvpnSessionDelNotification, hh3cDvpnSessionTable=hh3cDvpnSessionTable, hh3cDvpnMapEntry=hh3cDvpnMapEntry, hh3cDvpnDomainSessionNum=hh3cDvpnDomainSessionNum, hh3cDvpnSessionGroup=hh3cDvpnSessionGroup, hh3cDvpnMapLocalPriIpType=hh3cDvpnMapLocalPriIpType, hh3cDvpnSessionPeerPubIpType=hh3cDvpnSessionPeerPubIpType, hh3cDvpnLocalDeviceId=hh3cDvpnLocalDeviceId, hh3cDvpnSessionHisReset=hh3cDvpnSessionHisReset, hh3cDvpnSessionHisDvpnID=hh3cDvpnSessionHisDvpnID, hh3cDvpnSessionHisPeerPriIP=hh3cDvpnSessionHisPeerPriIP, hh3cDvpnSessionUserName=hh3cDvpnSessionUserName, hh3cDvpnClUserName=hh3cDvpnClUserName, hh3cDvpnClAlgorithmSuite=hh3cDvpnClAlgorithmSuite, hh3cDvpnPoSessionSetupInterval=hh3cDvpnPoSessionSetupInterval, hh3cDvpnSessionPeerPriIp=hh3cDvpnSessionPeerPriIp, hh3cDvpnTunnelClass=hh3cDvpnTunnelClass, hh3cDvpnTunnelGroup=hh3cDvpnTunnelGroup, hh3cDvpnClearDomainAllConection=hh3cDvpnClearDomainAllConection, hh3cDvpnClPreShareKey=hh3cDvpnClPreShareKey, hh3cDvpnTunnelEntry=hh3cDvpnTunnelEntry, hh3cDvpnTunnelTable=hh3cDvpnTunnelTable, hh3cDvpnSessionState=hh3cDvpnSessionState, hh3cDvpnMapLocalPriIp=hh3cDvpnMapLocalPriIp, hh3cDvpnPoSessionIdleTime=hh3cDvpnPoSessionIdleTime, hh3cDvpnMapType=hh3cDvpnMapType, hh3cDvpnSessionHisPeerPriIPType=hh3cDvpnSessionHisPeerPriIPType, hh3cDvpnMapNumber=hh3cDvpnMapNumber, hh3cDvpnClServerPriIp=hh3cDvpnClServerPriIp, hh3cDvpnSessionTrapEnable=hh3cDvpnSessionTrapEnable, hh3cDvpnClassTable=hh3cDvpnClassTable, hh3cDvpnSessionHisLastDownTime=hh3cDvpnSessionHisLastDownTime, hh3cDvpnTunnelDvpnId=hh3cDvpnTunnelDvpnId, hh3cDvpnSessionHisPeerDeviceId=hh3cDvpnSessionHisPeerDeviceId, hh3cDvpnClassEntry=hh3cDvpnClassEntry, hh3cDvpnSessionPeerPubIp=hh3cDvpnSessionPeerPubIp, hh3cDvpnMibObjects=hh3cDvpnMibObjects, hh3cDvpnPolicyEntry=hh3cDvpnPolicyEntry, hh3cDvpnPoUserDefAAADomain=hh3cDvpnPoUserDefAAADomain, hh3cDvpn=hh3cDvpn, hh3cDvpnGlobalAuthenClientType=hh3cDvpnGlobalAuthenClientType, hh3cDvpnClearDvpnStaInfo=hh3cDvpnClearDvpnStaInfo, hh3cDvpnPoSessionKeepTime=hh3cDvpnPoSessionKeepTime, hh3cDvpnSessionHisSendPkt=hh3cDvpnSessionHisSendPkt)
