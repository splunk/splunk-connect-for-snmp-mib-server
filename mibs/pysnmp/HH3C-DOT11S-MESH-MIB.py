#
# PySNMP MIB module HH3C-DOT11S-MESH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-DOT11S-MESH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hh3cDot11APElementIndex, Hh3cDot11RadioElementIndex, hh3cDot11 = mibBuilder.importSymbols("HH3C-DOT11-REF-MIB", "hh3cDot11APElementIndex", "Hh3cDot11RadioElementIndex", "hh3cDot11")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, NotificationType, Gauge32, IpAddress, Counter64, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, TimeTicks, ModuleIdentity, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "Gauge32", "IpAddress", "Counter64", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "iso", "MibIdentifier")
TextualConvention, DisplayString, RowStatus, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue", "MacAddress")
hh3cDot11sMesh = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11))
hh3cDot11sMesh.setRevisions(('2009-08-01 10:00', '2008-11-07 10:00', '2008-07-08 18:00',))
if mibBuilder.loadTexts: hh3cDot11sMesh.setLastUpdated('200908011000Z')
if mibBuilder.loadTexts: hh3cDot11sMesh.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cDot11sConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1))
hh3cDot11sWDSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 2))
hh3cDot11sMeshStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3))
hh3cDot11sMeshGlobalPara = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 1))
hh3cDot11sMeshMkdID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 1, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11sMeshMkdID.setStatus('current')
hh3cDot11sMeshPflTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2), )
if mibBuilder.loadTexts: hh3cDot11sMeshPflTable.setStatus('current')
hh3cDot11sMeshPflEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1), ).setIndexNames((0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sMeshPflIndex"))
if mibBuilder.loadTexts: hh3cDot11sMeshPflEntry.setStatus('current')
hh3cDot11sMeshPflIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cDot11sMeshPflIndex.setStatus('current')
hh3cDot11sMeshPflMeshID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMeshPflMeshID.setStatus('current')
hh3cDot11sMeshPflBindIntNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1, 3), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMeshPflBindIntNum.setStatus('current')
hh3cDot11sMeshPflKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMeshPflKeepAlive.setStatus('current')
hh3cDot11sMeshPflBackhaulRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1, 5), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMeshPflBackhaulRate.setStatus('current')
hh3cDot11sMeshMkdServEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMeshMkdServEnable.setStatus('current')
hh3cDot11sMeshPflEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMeshPflEnable.setStatus('current')
hh3cDot11sMeshPflRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMeshPflRowStatus.setStatus('current')
hh3cDot11sMpPlcyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3), )
if mibBuilder.loadTexts: hh3cDot11sMpPlcyTable.setStatus('current')
hh3cDot11sMpPlcyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1), ).setIndexNames((0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sMpPlcyIndex"))
if mibBuilder.loadTexts: hh3cDot11sMpPlcyEntry.setStatus('current')
hh3cDot11sMpPlcyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cDot11sMpPlcyIndex.setStatus('current')
hh3cDot11sMpPlcyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMpPlcyName.setStatus('current')
hh3cDot11sMpPlcyInitEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 3), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMpPlcyInitEnable.setStatus('current')
hh3cDot11sMlspEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMlspEnable.setStatus('current')
hh3cDot11sProbReqInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 5), Integer32()).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sProbReqInterval.setStatus('current')
hh3cDot11sRoleAuthEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sRoleAuthEnable.setStatus('current')
hh3cDot11sLinkHoldRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 100))).setUnits('dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sLinkHoldRSSI.setStatus('current')
hh3cDot11sLinkHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 20000))).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sLinkHoldTime.setStatus('current')
hh3cDot11sSwitchMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sSwitchMargin.setStatus('current')
hh3cDot11sLinkSaturationRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 150))).setUnits('dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sLinkSaturationRSSI.setStatus('current')
hh3cDot11sLinkRateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("realtime", 2))).clone('fixed')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sLinkRateMode.setStatus('current')
hh3cDot11sMaxLinkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMaxLinkNum.setStatus('current')
hh3cDot11sMpPlcyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMpPlcyRowStatus.setStatus('current')
hh3cDot11sMlspCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 4), )
if mibBuilder.loadTexts: hh3cDot11sMlspCfgTable.setStatus('current')
hh3cDot11sMlspCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 4, 1), ).setIndexNames((0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sMpPlcyIndex"), (0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sMlspProxyIndex"))
if mibBuilder.loadTexts: hh3cDot11sMlspCfgEntry.setStatus('current')
hh3cDot11sMlspProxyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cDot11sMlspProxyIndex.setStatus('current')
hh3cDot11sMlspProxyMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 4, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMlspProxyMac.setStatus('current')
hh3cDot11sMlspRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sMlspRowStatus.setStatus('current')
hh3cDot11sRadioCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 5), )
if mibBuilder.loadTexts: hh3cDot11sRadioCfgTable.setStatus('current')
hh3cDot11sRadioCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 5, 1), ).setIndexNames((0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sCfgRadioIndex"))
if mibBuilder.loadTexts: hh3cDot11sRadioCfgEntry.setStatus('current')
hh3cDot11sCfgRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 5, 1, 1), Hh3cDot11RadioElementIndex())
if mibBuilder.loadTexts: hh3cDot11sCfgRadioIndex.setStatus('current')
hh3cDot11sMeshPflMap = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11sMeshPflMap.setStatus('current')
hh3cDot11sMpPlcyMap = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 5, 1, 3), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11sMpPlcyMap.setStatus('current')
hh3cDot11sAPCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 6), )
if mibBuilder.loadTexts: hh3cDot11sAPCfgTable.setStatus('current')
hh3cDot11sAPCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 6, 1), ).setIndexNames((0, "HH3C-DOT11-REF-MIB", "hh3cDot11APElementIndex"))
if mibBuilder.loadTexts: hh3cDot11sAPCfgEntry.setStatus('current')
hh3cDot11sPortalEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 1, 6, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11sPortalEnable.setStatus('current')
hh3cDot11sWDSPeerMacTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 2, 1), )
if mibBuilder.loadTexts: hh3cDot11sWDSPeerMacTable.setStatus('current')
hh3cDot11sWDSPeerMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 2, 1, 1), ).setIndexNames((0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sCfgRadioIndex"), (0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sWDSPeerMacIndex"))
if mibBuilder.loadTexts: hh3cDot11sWDSPeerMacEntry.setStatus('current')
hh3cDot11sWDSPeerMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cDot11sWDSPeerMacIndex.setStatus('current')
hh3cDot11sWDSPeerMacAddrss = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 2, 1, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sWDSPeerMacAddrss.setStatus('current')
hh3cDot11sWDSPeerMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11sWDSPeerMacRowStatus.setStatus('current')
hh3cDot11sMeshLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 1), )
if mibBuilder.loadTexts: hh3cDot11sMeshLinkStatusTable.setStatus('current')
hh3cDot11sMeshLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 1, 1), ).setIndexNames((0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sMeshLinkIfIndex"))
if mibBuilder.loadTexts: hh3cDot11sMeshLinkStatusEntry.setStatus('current')
hh3cDot11sMeshLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cDot11sMeshLinkIfIndex.setStatus('current')
hh3cDot11sMeshLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkName.setStatus('current')
hh3cDot11sMeshLinkBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkBSSID.setStatus('current')
hh3cDot11sMeshLinkPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkPeerMac.setStatus('current')
hh3cDot11sMeshLinkExistDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 1, 1, 5), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkExistDuration.setStatus('current')
hh3cDot11sMeshLinkStatisTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2), )
if mibBuilder.loadTexts: hh3cDot11sMeshLinkStatisTable.setStatus('current')
hh3cDot11sMeshLinkStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1), ).setIndexNames((0, "HH3C-DOT11-REF-MIB", "hh3cDot11APElementIndex"), (0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sMeshLinkStatIfIndex"))
if mibBuilder.loadTexts: hh3cDot11sMeshLinkStatisEntry.setStatus('current')
hh3cDot11sMeshLinkStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cDot11sMeshLinkStatIfIndex.setStatus('current')
hh3cDot11sMeshLinkNbrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkNbrIndex.setStatus('current')
hh3cDot11sMeshLinkRxTotByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkRxTotByte.setStatus('current')
hh3cDot11sMeshLinkRxTotPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkRxTotPkt.setStatus('current')
hh3cDot11sMeshLinkRxUniPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkRxUniPkt.setStatus('current')
hh3cDot11sMeshLinkRxBrocPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkRxBrocPkt.setStatus('current')
hh3cDot11sMeshLinkRxMuticPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkRxMuticPkt.setStatus('current')
hh3cDot11sMeshLinkRxDiscPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkRxDiscPkt.setStatus('current')
hh3cDot11sMeshLinkTxTotByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkTxTotByte.setStatus('current')
hh3cDot11sMeshLinkTxTotPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkTxTotPkt.setStatus('current')
hh3cDot11sMeshLinkTxUniPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkTxUniPkt.setStatus('current')
hh3cDot11sMeshLinkTxBrocPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkTxBrocPkt.setStatus('current')
hh3cDot11sMeshLinkTxMuticPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkTxMuticPkt.setStatus('current')
hh3cDot11sMeshLinkTxDiscPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkTxDiscPkt.setStatus('current')
hh3cDot11sMeshLinkIFName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 2, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkIFName.setStatus('current')
hh3cDot11sMeshNbrStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3), )
if mibBuilder.loadTexts: hh3cDot11sMeshNbrStatusTable.setStatus('current')
hh3cDot11sMeshNbrStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1), ).setIndexNames((0, "HH3C-DOT11-REF-MIB", "hh3cDot11APElementIndex"), (0, "HH3C-DOT11S-MESH-MIB", "hh3cDot11sMeshNbrIndex"))
if mibBuilder.loadTexts: hh3cDot11sMeshNbrStatusEntry.setStatus('current')
hh3cDot11sMeshNbrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cDot11sMeshNbrIndex.setStatus('current')
hh3cDot11sMeshNbrRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshNbrRadioID.setStatus('current')
hh3cDot11sMeshLocalMeshID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLocalMeshID.setStatus('current')
hh3cDot11sMeshNbrMeshID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshNbrMeshID.setStatus('current')
hh3cDot11sMeshNbrBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshNbrBSSID.setStatus('current')
hh3cDot11sMeshNbrPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshNbrPeerMac.setStatus('current')
hh3cDot11sMeshLinkInMp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshLinkInMp.setStatus('current')
hh3cDot11sMeshMPLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("processing", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshMPLinkStatus.setStatus('current')
hh3cDot11sMeshNbrChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshNbrChannel.setStatus('current')
hh3cDot11sMeshNbrLinkDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 10), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshNbrLinkDuration.setStatus('current')
hh3cDot11sMeshNbrRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshNbrRSSI.setStatus('current')
hh3cDot11sMeshNbrSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 11, 3, 3, 1, 12), Integer32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11sMeshNbrSNR.setStatus('current')
mibBuilder.exportSymbols("HH3C-DOT11S-MESH-MIB", hh3cDot11sWDSConfigGroup=hh3cDot11sWDSConfigGroup, hh3cDot11sAPCfgEntry=hh3cDot11sAPCfgEntry, hh3cDot11sMeshLinkRxMuticPkt=hh3cDot11sMeshLinkRxMuticPkt, hh3cDot11sRoleAuthEnable=hh3cDot11sRoleAuthEnable, hh3cDot11sMeshLinkBSSID=hh3cDot11sMeshLinkBSSID, hh3cDot11sMeshMPLinkStatus=hh3cDot11sMeshMPLinkStatus, hh3cDot11sRadioCfgTable=hh3cDot11sRadioCfgTable, hh3cDot11sAPCfgTable=hh3cDot11sAPCfgTable, hh3cDot11sMeshLinkRxBrocPkt=hh3cDot11sMeshLinkRxBrocPkt, hh3cDot11sMlspCfgEntry=hh3cDot11sMlspCfgEntry, hh3cDot11sMeshGlobalPara=hh3cDot11sMeshGlobalPara, hh3cDot11sMaxLinkNum=hh3cDot11sMaxLinkNum, hh3cDot11sWDSPeerMacAddrss=hh3cDot11sWDSPeerMacAddrss, hh3cDot11sLinkHoldRSSI=hh3cDot11sLinkHoldRSSI, hh3cDot11sMeshLinkTxTotPkt=hh3cDot11sMeshLinkTxTotPkt, hh3cDot11sMeshPflBindIntNum=hh3cDot11sMeshPflBindIntNum, hh3cDot11sMeshNbrLinkDuration=hh3cDot11sMeshNbrLinkDuration, hh3cDot11sMpPlcyEntry=hh3cDot11sMpPlcyEntry, hh3cDot11sMeshLinkStatusEntry=hh3cDot11sMeshLinkStatusEntry, hh3cDot11sMeshPflEntry=hh3cDot11sMeshPflEntry, hh3cDot11sMeshNbrRadioID=hh3cDot11sMeshNbrRadioID, hh3cDot11sMlspCfgTable=hh3cDot11sMlspCfgTable, hh3cDot11sMeshLinkTxBrocPkt=hh3cDot11sMeshLinkTxBrocPkt, hh3cDot11sMeshPflIndex=hh3cDot11sMeshPflIndex, hh3cDot11sMpPlcyName=hh3cDot11sMpPlcyName, hh3cDot11sMeshLinkTxTotByte=hh3cDot11sMeshLinkTxTotByte, hh3cDot11sMeshLinkPeerMac=hh3cDot11sMeshLinkPeerMac, hh3cDot11sMeshPflKeepAlive=hh3cDot11sMeshPflKeepAlive, hh3cDot11sMeshMkdServEnable=hh3cDot11sMeshMkdServEnable, hh3cDot11sCfgRadioIndex=hh3cDot11sCfgRadioIndex, hh3cDot11sLinkSaturationRSSI=hh3cDot11sLinkSaturationRSSI, hh3cDot11sMeshMkdID=hh3cDot11sMeshMkdID, hh3cDot11sMeshLinkInMp=hh3cDot11sMeshLinkInMp, hh3cDot11sMeshPflRowStatus=hh3cDot11sMeshPflRowStatus, hh3cDot11sSwitchMargin=hh3cDot11sSwitchMargin, hh3cDot11sMeshNbrChannel=hh3cDot11sMeshNbrChannel, hh3cDot11sMpPlcyInitEnable=hh3cDot11sMpPlcyInitEnable, hh3cDot11sWDSPeerMacRowStatus=hh3cDot11sWDSPeerMacRowStatus, hh3cDot11sMesh=hh3cDot11sMesh, hh3cDot11sMeshLinkName=hh3cDot11sMeshLinkName, hh3cDot11sMpPlcyMap=hh3cDot11sMpPlcyMap, hh3cDot11sMeshNbrStatusTable=hh3cDot11sMeshNbrStatusTable, PYSNMP_MODULE_ID=hh3cDot11sMesh, hh3cDot11sMeshLinkIFName=hh3cDot11sMeshLinkIFName, hh3cDot11sMeshLinkRxDiscPkt=hh3cDot11sMeshLinkRxDiscPkt, hh3cDot11sWDSPeerMacTable=hh3cDot11sWDSPeerMacTable, hh3cDot11sMeshPflEnable=hh3cDot11sMeshPflEnable, hh3cDot11sMeshLinkTxMuticPkt=hh3cDot11sMeshLinkTxMuticPkt, hh3cDot11sMeshPflTable=hh3cDot11sMeshPflTable, hh3cDot11sMlspEnable=hh3cDot11sMlspEnable, hh3cDot11sMeshLocalMeshID=hh3cDot11sMeshLocalMeshID, hh3cDot11sMeshLinkIfIndex=hh3cDot11sMeshLinkIfIndex, hh3cDot11sMlspProxyIndex=hh3cDot11sMlspProxyIndex, hh3cDot11sWDSPeerMacIndex=hh3cDot11sWDSPeerMacIndex, hh3cDot11sMeshPflMap=hh3cDot11sMeshPflMap, hh3cDot11sMlspProxyMac=hh3cDot11sMlspProxyMac, hh3cDot11sMeshNbrRSSI=hh3cDot11sMeshNbrRSSI, hh3cDot11sMeshLinkRxTotPkt=hh3cDot11sMeshLinkRxTotPkt, hh3cDot11sMeshLinkRxUniPkt=hh3cDot11sMeshLinkRxUniPkt, hh3cDot11sMlspRowStatus=hh3cDot11sMlspRowStatus, hh3cDot11sMeshLinkStatIfIndex=hh3cDot11sMeshLinkStatIfIndex, hh3cDot11sMeshNbrPeerMac=hh3cDot11sMeshNbrPeerMac, hh3cDot11sMeshLinkStatisEntry=hh3cDot11sMeshLinkStatisEntry, hh3cDot11sMeshPflBackhaulRate=hh3cDot11sMeshPflBackhaulRate, hh3cDot11sMeshStatusGroup=hh3cDot11sMeshStatusGroup, hh3cDot11sLinkHoldTime=hh3cDot11sLinkHoldTime, hh3cDot11sRadioCfgEntry=hh3cDot11sRadioCfgEntry, hh3cDot11sWDSPeerMacEntry=hh3cDot11sWDSPeerMacEntry, hh3cDot11sProbReqInterval=hh3cDot11sProbReqInterval, hh3cDot11sMeshLinkNbrIndex=hh3cDot11sMeshLinkNbrIndex, hh3cDot11sLinkRateMode=hh3cDot11sLinkRateMode, hh3cDot11sMeshLinkTxUniPkt=hh3cDot11sMeshLinkTxUniPkt, hh3cDot11sMeshNbrIndex=hh3cDot11sMeshNbrIndex, hh3cDot11sMpPlcyTable=hh3cDot11sMpPlcyTable, hh3cDot11sMeshLinkStatusTable=hh3cDot11sMeshLinkStatusTable, hh3cDot11sMeshLinkExistDuration=hh3cDot11sMeshLinkExistDuration, hh3cDot11sMeshLinkRxTotByte=hh3cDot11sMeshLinkRxTotByte, hh3cDot11sMeshPflMeshID=hh3cDot11sMeshPflMeshID, hh3cDot11sMeshNbrSNR=hh3cDot11sMeshNbrSNR, hh3cDot11sConfigGroup=hh3cDot11sConfigGroup, hh3cDot11sMeshLinkTxDiscPkt=hh3cDot11sMeshLinkTxDiscPkt, hh3cDot11sMpPlcyIndex=hh3cDot11sMpPlcyIndex, hh3cDot11sMpPlcyRowStatus=hh3cDot11sMpPlcyRowStatus, hh3cDot11sMeshNbrBSSID=hh3cDot11sMeshNbrBSSID, hh3cDot11sMeshNbrMeshID=hh3cDot11sMeshNbrMeshID, hh3cDot11sMeshLinkStatisTable=hh3cDot11sMeshLinkStatisTable, hh3cDot11sMeshNbrStatusEntry=hh3cDot11sMeshNbrStatusEntry, hh3cDot11sPortalEnable=hh3cDot11sPortalEnable)
