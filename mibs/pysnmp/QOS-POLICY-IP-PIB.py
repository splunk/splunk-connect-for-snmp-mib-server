#
# PySNMP MIB module QOS-POLICY-IP-PIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/QOS-POLICY-IP-PIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:15:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
PolicyInstanceId, RoleCombination = mibBuilder.importSymbols("POLICY-FRAMEWORK-PIB", "PolicyInstanceId", "RoleCombination")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, NotificationType, Counter64, ModuleIdentity, Gauge32, iso, TimeTicks, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "NotificationType", "Counter64", "ModuleIdentity", "Gauge32", "iso", "TimeTicks", "Unsigned32", "MibIdentifier")
TextualConvention, StorageType, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "StorageType", "RowStatus", "DisplayString", "TruthValue")
policy, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "policy")
qosPolicyIpPib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 4, 2))
if mibBuilder.loadTexts: qosPolicyIpPib.setLastUpdated('0107201800Z')
if mibBuilder.loadTexts: qosPolicyIpPib.setOrganization('IETF RAP WG')
qosPolicyGenPibClasses = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 1))
qosPolicyIpPibClasses = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 2))
class Dscp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 63)

class PolicyInstanceIdOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class QosInterfaceQueueCount(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 64)

qosIfParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1))
qosInterfaceTypeTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 1), )
if mibBuilder.loadTexts: qosInterfaceTypeTable.setStatus('current')
qosInterfaceTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 1, 1), ).setIndexNames((0, "QOS-POLICY-IP-PIB", "qosInterfaceTypeId"))
if mibBuilder.loadTexts: qosInterfaceTypeEntry.setStatus('current')
qosInterfaceTypeId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 1, 1, 1), PolicyInstanceId())
if mibBuilder.loadTexts: qosInterfaceTypeId.setStatus('current')
qosInterfaceTypeRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 1, 1, 2), RoleCombination()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosInterfaceTypeRoles.setStatus('current')
qosInterfaceTypeQueueSet = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 1, 1, 3), PolicyInstanceId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosInterfaceTypeQueueSet.setStatus('current')
qosInterfaceTypeCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 1, 1, 4), Bits().clone(namedValues=NamedValues(("other", 0), ("inputIpClassification", 1), ("outputIpClassification", 2), ("input802Classification", 3), ("output802Classification", 4), ("singleQueuingDiscipline", 5), ("hybridQueuingDiscipline", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosInterfaceTypeCapabilities.setStatus('current')
qosInterfaceTypeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 1, 1, 5), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosInterfaceTypeStorageType.setStatus('current')
qosInterfaceTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosInterfaceTypeStatus.setStatus('current')
qosIfQueueTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2), )
if mibBuilder.loadTexts: qosIfQueueTable.setStatus('current')
qosIfQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1), ).setIndexNames((0, "QOS-POLICY-IP-PIB", "qosIfQueueId"))
if mibBuilder.loadTexts: qosIfQueueEntry.setStatus('current')
qosIfQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 1), PolicyInstanceId())
if mibBuilder.loadTexts: qosIfQueueId.setStatus('current')
qosIfQueueSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueSetId.setStatus('current')
qosIfQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 3), QosInterfaceQueueCount()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueIndex.setStatus('current')
qosIfQueueGenDiscipline = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("fifo", 2), ("pq", 3), ("fq", 4), ("wfq", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueGenDiscipline.setStatus('current')
qosIfQueueExtDiscipline = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 5), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueExtDiscipline.setStatus('current')
qosIfQueueDrainSize = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueDrainSize.setStatus('current')
qosIfQueueAbsBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueAbsBandwidth.setStatus('current')
qosIfQueueBandwidthAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absolute", 1), ("relative", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueBandwidthAllocation.setStatus('current')
qosIfQueueServiceOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 9), QosInterfaceQueueCount()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueServiceOrder.setStatus('current')
qosIfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueSize.setStatus('current')
qosIfQueueStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 11), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueStorageType.setStatus('current')
qosIfQueueStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfQueueStatus.setStatus('current')
qosIfDscpAssignmentTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 3), )
if mibBuilder.loadTexts: qosIfDscpAssignmentTable.setStatus('current')
qosIfDscpAssignmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 3, 1), ).setIndexNames((0, "QOS-POLICY-IP-PIB", "qosIfDscpAssignmentId"))
if mibBuilder.loadTexts: qosIfDscpAssignmentEntry.setStatus('current')
qosIfDscpAssignmentId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 3, 1, 1), PolicyInstanceId())
if mibBuilder.loadTexts: qosIfDscpAssignmentId.setStatus('current')
qosIfDscpAssignmentRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 3, 1, 2), RoleCombination()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfDscpAssignmentRoles.setStatus('current')
qosIfDscpAssignmentDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 3, 1, 3), Dscp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfDscpAssignmentDscp.setStatus('current')
qosIfDscpAssignmentQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 3, 1, 4), QosInterfaceQueueCount()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfDscpAssignmentQueue.setStatus('current')
qosIfDscpAssignmentStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 3, 1, 5), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfDscpAssignmentStorageType.setStatus('current')
qosIfDscpAssignmentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIfDscpAssignmentStatus.setStatus('current')
qosMeter = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2))
qosMeterTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1), )
if mibBuilder.loadTexts: qosMeterTable.setStatus('current')
qosMeterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1), ).setIndexNames((0, "QOS-POLICY-IP-PIB", "qosMeterId"))
if mibBuilder.loadTexts: qosMeterEntry.setStatus('current')
qosMeterId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 1), PolicyInstanceId())
if mibBuilder.loadTexts: qosMeterId.setStatus('current')
qosMeterDataSpecification = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noMeterData", 1), ("committedData", 2), ("peakData", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterDataSpecification.setStatus('current')
qosMeterCommittedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterCommittedRate.setStatus('current')
qosMeterCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterCommittedBurst.setStatus('current')
qosMeterPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterPeakRate.setStatus('current')
qosMeterPeakBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterPeakBurst.setStatus('current')
qosMeterHighConfAction = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 7), PolicyInstanceIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterHighConfAction.setStatus('current')
qosMeterMedConfAction = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 8), PolicyInstanceIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterMedConfAction.setStatus('current')
qosMeterLowConfAction = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 9), PolicyInstanceIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterLowConfAction.setStatus('current')
qosMeterStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 10), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterStorageType.setStatus('current')
qosMeterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterStatus.setStatus('current')
qosMeterLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 2, 1, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMeterLabel.setStatus('current')
qosAction = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3))
qosActionTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1), )
if mibBuilder.loadTexts: qosActionTable.setStatus('current')
qosActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1, 1), ).setIndexNames((0, "QOS-POLICY-IP-PIB", "qosActionId"))
if mibBuilder.loadTexts: qosActionEntry.setStatus('current')
qosActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1, 1, 1), PolicyInstanceId())
if mibBuilder.loadTexts: qosActionId.setStatus('current')
qosActionDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosActionDrop.setStatus('current')
qosActionUpdateDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosActionUpdateDSCP.setStatus('current')
qosActionMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1, 1, 4), PolicyInstanceId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosActionMeter.setStatus('current')
qosActionStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1, 1, 5), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosActionStorageType.setStatus('current')
qosActionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosActionStatus.setStatus('current')
qosActionLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 1, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosActionLabel.setStatus('current')
qosTargetTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2), )
if mibBuilder.loadTexts: qosTargetTable.setStatus('current')
qosTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1), ).setIndexNames((0, "QOS-POLICY-IP-PIB", "qosTargetId"))
if mibBuilder.loadTexts: qosTargetEntry.setStatus('current')
qosTargetId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 1), PolicyInstanceId())
if mibBuilder.loadTexts: qosTargetId.setStatus('current')
qosTargetAclId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 2), PolicyInstanceId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetAclId.setStatus('current')
qosTargetAclType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetAclType.setStatus('current')
qosTargetInterfaceRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 4), RoleCombination()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetInterfaceRoles.setStatus('current')
qosTargetInterfaceDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetInterfaceDirection.setStatus('current')
qosTargetOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetOrder.setStatus('current')
qosTargetMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 7), PolicyInstanceIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetMeter.setStatus('current')
qosTargetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 8), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetStorageType.setStatus('current')
qosTargetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetStatus.setStatus('current')
qosTargetShapingParams = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 10), PolicyInstanceIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetShapingParams.setStatus('current')
qosTargetShapingGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetShapingGroup.setStatus('current')
qosTargetLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetLabel.setStatus('current')
qosTargetInProfileAction = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 13), PolicyInstanceIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetInProfileAction.setStatus('current')
qosTargetOutOfProfileAction = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 1, 3, 2, 1, 14), PolicyInstanceIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosTargetOutOfProfileAction.setStatus('current')
qosIpQos = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1))
qosIpAceTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1), )
if mibBuilder.loadTexts: qosIpAceTable.setStatus('current')
qosIpAceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1), ).setIndexNames((0, "QOS-POLICY-IP-PIB", "qosIpAceId"))
if mibBuilder.loadTexts: qosIpAceEntry.setStatus('current')
qosIpAceId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 1), PolicyInstanceId())
if mibBuilder.loadTexts: qosIpAceId.setStatus('current')
qosIpAceDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceDstAddr.setStatus('current')
qosIpAceDstAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceDstAddrMask.setStatus('current')
qosIpAceSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceSrcAddr.setStatus('current')
qosIpAceSrcAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceSrcAddrMask.setStatus('current')
qosIpAceDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceDscp.setStatus('current')
qosIpAceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceProtocol.setStatus('current')
qosIpAceDstL4PortMin = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceDstL4PortMin.setStatus('current')
qosIpAceDstL4PortMax = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceDstL4PortMax.setStatus('current')
qosIpAceSrcL4PortMin = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceSrcL4PortMin.setStatus('current')
qosIpAceSrcL4PortMax = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceSrcL4PortMax.setStatus('current')
qosIpAcePermit = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAcePermit.setStatus('current')
qosIpAceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 13), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceStorageType.setStatus('current')
qosIpAceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAceStatus.setStatus('current')
qosIpAclDefinitionTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2), )
if mibBuilder.loadTexts: qosIpAclDefinitionTable.setStatus('current')
qosIpAclDefinitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2, 1), ).setIndexNames((0, "QOS-POLICY-IP-PIB", "qosIpAclDefinitionId"))
if mibBuilder.loadTexts: qosIpAclDefinitionEntry.setStatus('current')
qosIpAclDefinitionId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2, 1, 1), PolicyInstanceId())
if mibBuilder.loadTexts: qosIpAclDefinitionId.setStatus('current')
qosIpAclDefinitionAclId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2, 1, 2), PolicyInstanceId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAclDefinitionAclId.setStatus('current')
qosIpAclDefinitionAceId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2, 1, 3), PolicyInstanceId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAclDefinitionAceId.setStatus('current')
qosIpAclDefinitionAceOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAclDefinitionAceOrder.setStatus('current')
qosIpAclDefinitionStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2, 1, 5), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAclDefinitionStorageType.setStatus('current')
qosIpAclDefinitionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAclDefinitionStatus.setStatus('current')
qosIpAclDefinitionLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 2, 2, 1, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIpAclDefinitionLabel.setStatus('current')
qosPolicyIpPibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 3))
qosPolicyIpPibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 1))
qosPolicyIpPibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2))
qosPolicyIpPibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 1, 1)).setObjects(("QOS-POLICY-IP-PIB", "qosInterfaceTypeGroup"), ("QOS-POLICY-IP-PIB", "qosIfQueueGroup"), ("QOS-POLICY-IP-PIB", "qosMeterGroup"), ("QOS-POLICY-IP-PIB", "qosActionGroup"), ("QOS-POLICY-IP-PIB", "qosTargetGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosPolicyIpPibCompliance = qosPolicyIpPibCompliance.setStatus('current')
qosInterfaceTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2, 1)).setObjects(("QOS-POLICY-IP-PIB", "qosInterfaceTypeRoles"), ("QOS-POLICY-IP-PIB", "qosInterfaceTypeQueueSet"), ("QOS-POLICY-IP-PIB", "qosInterfaceTypeCapabilities"), ("QOS-POLICY-IP-PIB", "qosInterfaceTypeStorageType"), ("QOS-POLICY-IP-PIB", "qosInterfaceTypeStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosInterfaceTypeGroup = qosInterfaceTypeGroup.setStatus('current')
qosIfQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2, 2)).setObjects(("QOS-POLICY-IP-PIB", "qosIfQueueSetId"), ("QOS-POLICY-IP-PIB", "qosIfQueueIndex"), ("QOS-POLICY-IP-PIB", "qosIfQueueGenDiscipline"), ("QOS-POLICY-IP-PIB", "qosIfQueueExtDiscipline"), ("QOS-POLICY-IP-PIB", "qosIfQueueDrainSize"), ("QOS-POLICY-IP-PIB", "qosIfQueueAbsBandwidth"), ("QOS-POLICY-IP-PIB", "qosIfQueueBandwidthAllocation"), ("QOS-POLICY-IP-PIB", "qosIfQueueServiceOrder"), ("QOS-POLICY-IP-PIB", "qosIfQueueSize"), ("QOS-POLICY-IP-PIB", "qosIfQueueStorageType"), ("QOS-POLICY-IP-PIB", "qosIfQueueStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosIfQueueGroup = qosIfQueueGroup.setStatus('current')
qosIfDscpAssignmentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2, 3)).setObjects(("QOS-POLICY-IP-PIB", "qosIfDscpAssignmentRoles"), ("QOS-POLICY-IP-PIB", "qosIfDscpAssignmentDscp"), ("QOS-POLICY-IP-PIB", "qosIfDscpAssignmentQueue"), ("QOS-POLICY-IP-PIB", "qosIfDscpAssignmentStorageType"), ("QOS-POLICY-IP-PIB", "qosIfDscpAssignmentStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosIfDscpAssignmentGroup = qosIfDscpAssignmentGroup.setStatus('current')
qosMeterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2, 4)).setObjects(("QOS-POLICY-IP-PIB", "qosMeterDataSpecification"), ("QOS-POLICY-IP-PIB", "qosMeterCommittedRate"), ("QOS-POLICY-IP-PIB", "qosMeterCommittedBurst"), ("QOS-POLICY-IP-PIB", "qosMeterPeakRate"), ("QOS-POLICY-IP-PIB", "qosMeterPeakBurst"), ("QOS-POLICY-IP-PIB", "qosMeterHighConfAction"), ("QOS-POLICY-IP-PIB", "qosMeterMedConfAction"), ("QOS-POLICY-IP-PIB", "qosMeterLowConfAction"), ("QOS-POLICY-IP-PIB", "qosMeterStorageType"), ("QOS-POLICY-IP-PIB", "qosMeterStatus"), ("QOS-POLICY-IP-PIB", "qosMeterLabel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosMeterGroup = qosMeterGroup.setStatus('current')
qosActionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2, 5)).setObjects(("QOS-POLICY-IP-PIB", "qosActionDrop"), ("QOS-POLICY-IP-PIB", "qosActionUpdateDSCP"), ("QOS-POLICY-IP-PIB", "qosActionMeter"), ("QOS-POLICY-IP-PIB", "qosActionStorageType"), ("QOS-POLICY-IP-PIB", "qosActionStatus"), ("QOS-POLICY-IP-PIB", "qosActionLabel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosActionGroup = qosActionGroup.setStatus('current')
qosTargetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2, 6)).setObjects(("QOS-POLICY-IP-PIB", "qosTargetAclId"), ("QOS-POLICY-IP-PIB", "qosTargetAclType"), ("QOS-POLICY-IP-PIB", "qosTargetInterfaceRoles"), ("QOS-POLICY-IP-PIB", "qosTargetInterfaceDirection"), ("QOS-POLICY-IP-PIB", "qosTargetOrder"), ("QOS-POLICY-IP-PIB", "qosTargetMeter"), ("QOS-POLICY-IP-PIB", "qosTargetStorageType"), ("QOS-POLICY-IP-PIB", "qosTargetStatus"), ("QOS-POLICY-IP-PIB", "qosTargetShapingParams"), ("QOS-POLICY-IP-PIB", "qosTargetShapingGroup"), ("QOS-POLICY-IP-PIB", "qosTargetLabel"), ("QOS-POLICY-IP-PIB", "qosTargetInProfileAction"), ("QOS-POLICY-IP-PIB", "qosTargetOutOfProfileAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosTargetGroup = qosTargetGroup.setStatus('current')
qosIpAceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2, 7)).setObjects(("QOS-POLICY-IP-PIB", "qosIpAceDstAddr"), ("QOS-POLICY-IP-PIB", "qosIpAceDstAddrMask"), ("QOS-POLICY-IP-PIB", "qosIpAceSrcAddr"), ("QOS-POLICY-IP-PIB", "qosIpAceSrcAddrMask"), ("QOS-POLICY-IP-PIB", "qosIpAceDscp"), ("QOS-POLICY-IP-PIB", "qosIpAceProtocol"), ("QOS-POLICY-IP-PIB", "qosIpAceDstL4PortMin"), ("QOS-POLICY-IP-PIB", "qosIpAceDstL4PortMax"), ("QOS-POLICY-IP-PIB", "qosIpAceSrcL4PortMin"), ("QOS-POLICY-IP-PIB", "qosIpAceSrcL4PortMax"), ("QOS-POLICY-IP-PIB", "qosIpAcePermit"), ("QOS-POLICY-IP-PIB", "qosIpAceStorageType"), ("QOS-POLICY-IP-PIB", "qosIpAceStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosIpAceGroup = qosIpAceGroup.setStatus('current')
qosIpAclDefinitionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 2, 3, 2, 8)).setObjects(("QOS-POLICY-IP-PIB", "qosIpAclDefinitionAclId"), ("QOS-POLICY-IP-PIB", "qosIpAclDefinitionAceId"), ("QOS-POLICY-IP-PIB", "qosIpAclDefinitionAceOrder"), ("QOS-POLICY-IP-PIB", "qosIpAclDefinitionStorageType"), ("QOS-POLICY-IP-PIB", "qosIpAclDefinitionStatus"), ("QOS-POLICY-IP-PIB", "qosIpAclDefinitionLabel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qosIpAclDefinitionGroup = qosIpAclDefinitionGroup.setStatus('current')
mibBuilder.exportSymbols("QOS-POLICY-IP-PIB", qosIpAclDefinitionId=qosIpAclDefinitionId, PolicyInstanceIdOrZero=PolicyInstanceIdOrZero, qosIfQueueEntry=qosIfQueueEntry, qosMeterLabel=qosMeterLabel, qosPolicyIpPibCompliances=qosPolicyIpPibCompliances, qosMeterStorageType=qosMeterStorageType, qosIfDscpAssignmentTable=qosIfDscpAssignmentTable, qosMeterDataSpecification=qosMeterDataSpecification, qosIfDscpAssignmentEntry=qosIfDscpAssignmentEntry, qosIpAclDefinitionEntry=qosIpAclDefinitionEntry, qosIfDscpAssignmentDscp=qosIfDscpAssignmentDscp, qosMeterEntry=qosMeterEntry, qosIpAceStatus=qosIpAceStatus, PYSNMP_MODULE_ID=qosPolicyIpPib, qosIfQueueExtDiscipline=qosIfQueueExtDiscipline, qosIfDscpAssignmentQueue=qosIfDscpAssignmentQueue, qosIpAceTable=qosIpAceTable, qosInterfaceTypeEntry=qosInterfaceTypeEntry, qosIfQueueTable=qosIfQueueTable, qosIpAceDstL4PortMin=qosIpAceDstL4PortMin, qosInterfaceTypeTable=qosInterfaceTypeTable, qosIfQueueStatus=qosIfQueueStatus, qosInterfaceTypeStatus=qosInterfaceTypeStatus, qosIpAclDefinitionTable=qosIpAclDefinitionTable, qosIfQueueServiceOrder=qosIfQueueServiceOrder, qosIfDscpAssignmentStorageType=qosIfDscpAssignmentStorageType, qosInterfaceTypeRoles=qosInterfaceTypeRoles, qosPolicyIpPibCompliance=qosPolicyIpPibCompliance, QosInterfaceQueueCount=QosInterfaceQueueCount, qosTargetEntry=qosTargetEntry, qosMeterCommittedBurst=qosMeterCommittedBurst, qosIfDscpAssignmentRoles=qosIfDscpAssignmentRoles, Dscp=Dscp, qosTargetInProfileAction=qosTargetInProfileAction, qosTargetStorageType=qosTargetStorageType, qosTargetId=qosTargetId, qosTargetOutOfProfileAction=qosTargetOutOfProfileAction, qosIpAclDefinitionStorageType=qosIpAclDefinitionStorageType, qosIfQueueAbsBandwidth=qosIfQueueAbsBandwidth, qosMeterId=qosMeterId, qosInterfaceTypeQueueSet=qosInterfaceTypeQueueSet, qosInterfaceTypeCapabilities=qosInterfaceTypeCapabilities, qosIpAclDefinitionAclId=qosIpAclDefinitionAclId, qosIpAceEntry=qosIpAceEntry, qosIpAceId=qosIpAceId, qosIpAceProtocol=qosIpAceProtocol, qosInterfaceTypeGroup=qosInterfaceTypeGroup, qosMeterMedConfAction=qosMeterMedConfAction, qosTargetMeter=qosTargetMeter, qosIpQos=qosIpQos, qosTargetGroup=qosTargetGroup, qosTargetAclType=qosTargetAclType, qosIpAcePermit=qosIpAcePermit, qosActionGroup=qosActionGroup, qosIpAclDefinitionAceId=qosIpAclDefinitionAceId, qosIfDscpAssignmentId=qosIfDscpAssignmentId, qosMeterGroup=qosMeterGroup, qosIfQueueSetId=qosIfQueueSetId, qosIpAceSrcAddr=qosIpAceSrcAddr, qosInterfaceTypeStorageType=qosInterfaceTypeStorageType, qosPolicyIpPibGroups=qosPolicyIpPibGroups, qosPolicyGenPibClasses=qosPolicyGenPibClasses, qosMeterStatus=qosMeterStatus, qosMeterPeakRate=qosMeterPeakRate, qosIfQueueGenDiscipline=qosIfQueueGenDiscipline, qosIpAceDscp=qosIpAceDscp, qosActionTable=qosActionTable, qosIfDscpAssignmentStatus=qosIfDscpAssignmentStatus, qosPolicyIpPib=qosPolicyIpPib, qosIfQueueDrainSize=qosIfQueueDrainSize, qosIfQueueSize=qosIfQueueSize, qosActionMeter=qosActionMeter, qosMeterPeakBurst=qosMeterPeakBurst, qosTargetAclId=qosTargetAclId, qosActionId=qosActionId, qosIpAceDstL4PortMax=qosIpAceDstL4PortMax, qosPolicyIpPibConformance=qosPolicyIpPibConformance, qosTargetStatus=qosTargetStatus, qosIpAceSrcL4PortMax=qosIpAceSrcL4PortMax, qosActionEntry=qosActionEntry, qosTargetInterfaceRoles=qosTargetInterfaceRoles, qosMeterHighConfAction=qosMeterHighConfAction, qosActionDrop=qosActionDrop, qosIfQueueBandwidthAllocation=qosIfQueueBandwidthAllocation, qosIpAceDstAddrMask=qosIpAceDstAddrMask, qosActionUpdateDSCP=qosActionUpdateDSCP, qosIfDscpAssignmentGroup=qosIfDscpAssignmentGroup, qosPolicyIpPibClasses=qosPolicyIpPibClasses, qosTargetShapingGroup=qosTargetShapingGroup, qosIpAceDstAddr=qosIpAceDstAddr, qosIfQueueGroup=qosIfQueueGroup, qosIpAceSrcL4PortMin=qosIpAceSrcL4PortMin, qosIpAclDefinitionStatus=qosIpAclDefinitionStatus, qosIfQueueStorageType=qosIfQueueStorageType, qosInterfaceTypeId=qosInterfaceTypeId, qosMeterCommittedRate=qosMeterCommittedRate, qosTargetShapingParams=qosTargetShapingParams, qosIfQueueIndex=qosIfQueueIndex, qosMeterLowConfAction=qosMeterLowConfAction, qosIpAclDefinitionAceOrder=qosIpAclDefinitionAceOrder, qosIfParameters=qosIfParameters, qosIpAceGroup=qosIpAceGroup, qosActionLabel=qosActionLabel, qosTargetLabel=qosTargetLabel, qosTargetTable=qosTargetTable, qosTargetInterfaceDirection=qosTargetInterfaceDirection, qosIfQueueId=qosIfQueueId, qosIpAceStorageType=qosIpAceStorageType, qosIpAclDefinitionLabel=qosIpAclDefinitionLabel, qosMeterTable=qosMeterTable, qosIpAclDefinitionGroup=qosIpAclDefinitionGroup, qosActionStatus=qosActionStatus, qosIpAceSrcAddrMask=qosIpAceSrcAddrMask, qosAction=qosAction, qosMeter=qosMeter, qosActionStorageType=qosActionStorageType, qosTargetOrder=qosTargetOrder)
