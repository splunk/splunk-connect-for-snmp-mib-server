#
# PySNMP MIB module CISCO-ISCSI-GW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ISCSI-GW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
cIscsiInstanceAttributesEntry, cIscsiSessionAttributesEntry, cIscsiNodeAttributesEntry, cIscsiInstIndex = mibBuilder.importSymbols("CISCO-ISCSI-MIB", "cIscsiInstanceAttributesEntry", "cIscsiSessionAttributesEntry", "cIscsiNodeAttributesEntry", "cIscsiInstIndex")
ciscoScsiLuEntry, ScsiName, ScsiLUNOrZero = mibBuilder.importSymbols("CISCO-SCSI-MIB", "ciscoScsiLuEntry", "ScsiName", "ScsiLUNOrZero")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
VsanIndex, FcNameIdOrZero, FcNameId = mibBuilder.importSymbols("CISCO-ST-TC", "VsanIndex", "FcNameIdOrZero", "FcNameId")
CiscoPort, ListIndex, ListIndexOrZero = mibBuilder.importSymbols("CISCO-TC", "CiscoPort", "ListIndex", "ListIndexOrZero")
FcList, = mibBuilder.importSymbols("CISCO-ZS-MIB", "FcList")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, Counter64, Integer32, Bits, ObjectIdentity, iso, IpAddress, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, TimeTicks, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "Integer32", "Bits", "ObjectIdentity", "iso", "IpAddress", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "TimeTicks", "ModuleIdentity")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
ciscoIscsiGwMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 317))
ciscoIscsiGwMIB.setRevisions(('2005-04-29 00:00', '2004-11-16 00:00', '2003-12-08 00:00', '2003-11-14 00:00', '2003-08-18 00:00', '2003-05-22 00:00', '2003-04-10 00:00', '2003-02-11 00:00', '2002-10-05 00:00',))
if mibBuilder.loadTexts: ciscoIscsiGwMIB.setLastUpdated('200504290000Z')
if mibBuilder.loadTexts: ciscoIscsiGwMIB.setOrganization('Cisco Systems Inc. ')
ciscoiScsiGwMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 317, 0))
ciscoiScsiGwMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 317, 1))
ciscoiScsiGwMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 317, 2))
ciScsiConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1))
ciScsiStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2))
class CIscsiTargetDomains(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("fibreChannel", 0))

class CIscsiNodeRoles(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("targetTypeNode", 0), ("initiatorTypeNode", 1))

class IscsiName(TextualConvention, OctetString):
    reference = 'iSCSI Protocol Specification, Section 3.2.6, iSCSI Names.'
    status = 'current'
    displayHint = '223a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 223)

class IscsiAuthMethod(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("none", 0), ("chap", 1))

class CIscsiIntrIdentificationMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("name", 1), ("ipaddress", 2))

iscsiImprtExprtTgtsConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 1), )
if mibBuilder.loadTexts: iscsiImprtExprtTgtsConfTable.setStatus('current')
iscsiImprtExprtTgtsConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 1, 1), )
cIscsiInstanceAttributesEntry.registerAugmentions(("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfEntry"))
iscsiImprtExprtTgtsConfEntry.setIndexNames(*cIscsiInstanceAttributesEntry.getIndexNames())
if mibBuilder.loadTexts: iscsiImprtExprtTgtsConfEntry.setStatus('current')
iscsiImprtExprtTgtsConfImport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 1, 1, 1), CIscsiTargetDomains()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiImprtExprtTgtsConfImport.setStatus('current')
iscsiImprtExprtTgtsConfExport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 1, 1, 2), CIscsiTargetDomains()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiImprtExprtTgtsConfExport.setStatus('current')
iscsiAuthMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 2), IscsiAuthMethod()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiAuthMethod.setStatus('current')
iscsi2FcNodeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3), )
if mibBuilder.loadTexts: iscsi2FcNodeTable.setStatus('current')
iscsi2FcNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-ISCSI-MIB", "cIscsiInstIndex"), (0, "CISCO-ISCSI-GW-MIB", "iscsi2FcNodeIndex"))
if mibBuilder.loadTexts: iscsi2FcNodeEntry.setStatus('current')
iscsi2FcNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: iscsi2FcNodeIndex.setStatus('current')
iscsi2FcNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 2), IscsiName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeName.setStatus('current')
iscsi2FcNodeRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 3), CIscsiNodeRoles()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeRole.setStatus('current')
iscsi2FcNodePersistentFCAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodePersistentFCAddr.setStatus('current')
iscsi2FcPortPersistentFCAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcPortPersistentFCAddr.setStatus('current')
iscsi2FcPortNumFCAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcPortNumFCAddr.setStatus('current')
iscsi2FcNodeFCAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 7), FcNameIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeFCAddr.setStatus('current')
iscsi2FcPortFCAddrListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 8), ListIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcPortFCAddrListIndex.setStatus('current')
iscsi2FcNodeVsanList2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 9), FcList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeVsanList2k.setStatus('current')
iscsi2FcNodeVsanList4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 10), FcList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeVsanList4k.setStatus('current')
iscsi2FcNodeDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeDiscovered.setStatus('current')
iscsi2FcNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeRowStatus.setStatus('current')
iscsi2FcNodeFcAddrAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2))).clone('auto')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeFcAddrAssignment.setStatus('current')
iscsi2FcNodeAuthUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 14), SnmpAdminString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcNodeAuthUser.setStatus('current')
iscsi2FcTargetUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 15), SnmpAdminString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcTargetUserName.setStatus('current')
iscsi2FcTargetPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 3, 1, 16), SnmpAdminString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsi2FcTargetPassword.setStatus('current')
fc2IscsiNodeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4), )
if mibBuilder.loadTexts: fc2IscsiNodeTable.setStatus('current')
fc2IscsiNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1), )
cIscsiNodeAttributesEntry.registerAugmentions(("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeEntry"))
fc2IscsiNodeEntry.setIndexNames(*cIscsiNodeAttributesEntry.getIndexNames())
if mibBuilder.loadTexts: fc2IscsiNodeEntry.setStatus('current')
fc2IscsiNodeRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 1), CIscsiNodeRoles()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiNodeRole.setStatus('current')
fc2IscsiNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 2), IscsiName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiNodeName.setStatus('current')
fc2IscsiPortFCAddrListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 3), ListIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiPortFCAddrListIndex.setStatus('current')
fc2IscsiNodePermitListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 4), ListIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiNodePermitListIndex.setStatus('current')
fc2IscsiNodeAdvIntfListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 5), ListIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiNodeAdvIntfListIndex.setStatus('current')
fc2IscsiNodeAllIntrAccessAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiNodeAllIntrAccessAllowed.setStatus('current')
fc2IscsiNodeDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fc2IscsiNodeDiscovered.setStatus('current')
fc2IscsiNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiNodeRowStatus.setStatus('current')
fc2IscsiNodeTrespassMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiNodeTrespassMode.setStatus('current')
fc2IscsiNodeRevertToPrimaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 4, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fc2IscsiNodeRevertToPrimaryPort.setStatus('current')
fcAddressListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 5), )
if mibBuilder.loadTexts: fcAddressListTable.setStatus('current')
fcAddressListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-ISCSI-GW-MIB", "fcAddressListIndex"), (0, "CISCO-ISCSI-GW-MIB", "fcAddressIndex"))
if mibBuilder.loadTexts: fcAddressListEntry.setStatus('current')
fcAddressListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 5, 1, 1), ListIndex())
if mibBuilder.loadTexts: fcAddressListIndex.setStatus('current')
fcAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: fcAddressIndex.setStatus('current')
fcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 5, 1, 3), FcNameId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcAddress.setStatus('current')
fcSecondaryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 5, 1, 4), FcNameIdOrZero().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcSecondaryAddress.setStatus('current')
fcAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcAddressRowStatus.setStatus('current')
iscsiNodeNameListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 6), )
if mibBuilder.loadTexts: iscsiNodeNameListTable.setStatus('current')
iscsiNodeNameListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-ISCSI-GW-MIB", "iscsiNodeNameListIndex"), (0, "CISCO-ISCSI-GW-MIB", "iscsiNodeNameIndex"))
if mibBuilder.loadTexts: iscsiNodeNameListEntry.setStatus('current')
iscsiNodeNameListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 6, 1, 1), ListIndex())
if mibBuilder.loadTexts: iscsiNodeNameListIndex.setStatus('current')
iscsiNodeNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: iscsiNodeNameIndex.setStatus('current')
iscsiNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 6, 1, 3), IscsiName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsiNodeName.setStatus('current')
iscsiNodeNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: iscsiNodeNameRowStatus.setStatus('current')
nodeAdvIntfListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 7), )
if mibBuilder.loadTexts: nodeAdvIntfListTable.setStatus('current')
nodeAdvIntfListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-ISCSI-GW-MIB", "nodeAdvIntfListIndex"), (0, "CISCO-ISCSI-GW-MIB", "nodeAdvIntfIndex"))
if mibBuilder.loadTexts: nodeAdvIntfListEntry.setStatus('current')
nodeAdvIntfListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nodeAdvIntfListIndex.setStatus('current')
nodeAdvIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nodeAdvIntfIndex.setStatus('current')
nodeAdvIntfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 7, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nodeAdvIntfIfIndex.setStatus('current')
nodeAdvIntfIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nodeAdvIntfIfRowStatus.setStatus('current')
scsiLuExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8), )
if mibBuilder.loadTexts: scsiLuExtTable.setStatus('current')
scsiLuExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8, 1), )
ciscoScsiLuEntry.registerAugmentions(("CISCO-ISCSI-GW-MIB", "scsiLuExtEntry"))
scsiLuExtEntry.setIndexNames(*ciscoScsiLuEntry.getIndexNames())
if mibBuilder.loadTexts: scsiLuExtEntry.setStatus('current')
scsiLuExtRemotePortFcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8, 1, 1), FcNameId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scsiLuExtRemotePortFcAddress.setStatus('current')
scsiLuExtRemotePortSecFcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8, 1, 2), FcNameIdOrZero().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scsiLuExtRemotePortSecFcAddress.setStatus('current')
scsiLuExtLocalTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8, 1, 3), ScsiName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scsiLuExtLocalTargetAddress.setStatus('current')
scsiLuExtRemoteLun = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8, 1, 4), ScsiLUNOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scsiLuExtRemoteLun.setStatus('current')
scsiLuExtLocalLun = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8, 1, 5), ScsiLUNOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scsiLuExtLocalLun.setStatus('current')
scsiLuExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scsiLuExtRowStatus.setStatus('current')
scsiLuExtRemoteSecLun = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 8, 1, 7), ScsiLUNOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: scsiLuExtRemoteSecLun.setStatus('current')
iscsiIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9), )
if mibBuilder.loadTexts: iscsiIfTable.setStatus('current')
iscsiIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: iscsiIfEntry.setStatus('current')
iscsiIfTcpKeepAliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpKeepAliveTimeout.setStatus('current')
iscsiIfTcpMaxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 1000000))).setUnits('kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpMaxBandwidth.setStatus('current')
iscsiIfTcpMaxRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpMaxRetransmissions.setStatus('current')
iscsiIfTcpMinRetransmitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(250, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpMinRetransmitTime.setStatus('current')
iscsiIfTcpPMTUEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpPMTUEnable.setStatus('current')
iscsiIfTcpQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpQOS.setStatus('current')
iscsiIfTcpSACKEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpSACKEnable.setStatus('current')
iscsiIfTcpSendBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpSendBufferSize.setStatus('current')
iscsiIfTcpMinBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 1000000))).setUnits('kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpMinBandwidth.setStatus('current')
iscsiIfTcpPMTUResetTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpPMTUResetTimeout.setStatus('current')
iscsiIfTcpLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 11), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiIfTcpLocalPort.setStatus('deprecated')
iscsiIfForwardingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("passThrough", 1), ("storeAndForward", 2), ("cutThrough", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfForwardingMode.setStatus('current')
iscsiIfIntrProxyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfIntrProxyMode.setStatus('current')
iscsiIfIntrProxyModeNodeFcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 14), FcNameIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfIntrProxyModeNodeFcAddr.setStatus('current')
iscsiIfIntrProxyModePortFcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 15), FcNameIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfIntrProxyModePortFcAddr.setStatus('current')
iscsiIfIntrProxyModeFcAddrAsgnmt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfIntrProxyModeFcAddrAsgnmt.setStatus('current')
iscsiIfIntrIdentificationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 17), CIscsiIntrIdentificationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfIntrIdentificationMode.setStatus('current')
iscsiIfTcpRndTrpTimeEst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 300000))).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpRndTrpTimeEst.setStatus('current')
iscsiIfTcpLocalTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 19), CiscoPort()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpLocalTcpPort.setStatus('current')
iscsiIfNumNormalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiIfNumNormalConnections.setStatus('current')
iscsiIfNumDiscovConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiIfNumDiscovConnections.setStatus('current')
iscsiIfTcpCWMEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 22), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpCWMEnable.setStatus('current')
iscsiIfTcpCWMBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(50)).setUnits('kilobytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpCWMBurstSize.setStatus('current')
iscsiIfTcpMaxJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 9, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(500)).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIfTcpMaxJitter.setStatus('current')
iscsiGigEIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 10), )
if mibBuilder.loadTexts: iscsiGigEIfTable.setStatus('current')
iscsiGigEIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: iscsiGigEIfEntry.setStatus('current')
iscsiGigEIfAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 10, 1, 1), IscsiAuthMethod()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiGigEIfAuthMethod.setStatus('current')
iscsiGigEIfIsnsServerProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 10, 1, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiGigEIfIsnsServerProfileName.setStatus('current')
iscsiGigEIfIscsiSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiGigEIfIscsiSessions.setStatus('current')
iscsiInitiatorIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiInitiatorIdleTimeout.setStatus('current')
iscsiIntrIdentificationMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 12), CIscsiIntrIdentificationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiIntrIdentificationMode.setStatus('current')
iscsiTargetUserName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 13), SnmpAdminString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiTargetUserName.setStatus('current')
iscsiTargetPassword = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 1, 14), SnmpAdminString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iscsiTargetPassword.setStatus('current')
iscsiSessionAttributesExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 1), )
if mibBuilder.loadTexts: iscsiSessionAttributesExtTable.setStatus('current')
iscsiSessionAttributesExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 1, 1), )
cIscsiSessionAttributesEntry.registerAugmentions(("CISCO-ISCSI-GW-MIB", "iscsiSessionAttributesExtEntry"))
iscsiSessionAttributesExtEntry.setIndexNames(*cIscsiSessionAttributesEntry.getIndexNames())
if mibBuilder.loadTexts: iscsiSessionAttributesExtEntry.setStatus('current')
iscsiSsnVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 1, 1, 1), VsanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiSsnVsan.setStatus('current')
ciscsiConnectionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 2), )
if mibBuilder.loadTexts: ciscsiConnectionStatsTable.setStatus('current')
ciscsiConnectionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ISCSI-MIB", "cIscsiInstIndex"), (0, "CISCO-ISCSI-GW-MIB", "cIscsiStatsNodeIndex"), (0, "CISCO-ISCSI-GW-MIB", "cIscsiStatsSessionIndex"), (0, "CISCO-ISCSI-GW-MIB", "cIscsiStatsConnectionIndex"))
if mibBuilder.loadTexts: ciscsiConnectionStatsEntry.setStatus('current')
cIscsiStatsNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cIscsiStatsNodeIndex.setStatus('current')
cIscsiStatsSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cIscsiStatsSessionIndex.setStatus('current')
cIscsiStatsConnectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cIscsiStatsConnectionIndex.setStatus('current')
cIscsiStatsConnectionRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIscsiStatsConnectionRxBytes.setStatus('current')
cIscsiStatsConnectionTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIscsiStatsConnectionTxBytes.setStatus('current')
cIscsiStatsIpSecInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 317, 1, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIscsiStatsIpSecInUse.setStatus('current')
ciscoiScsiGwMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 1))
ciscoiScsiGwMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2))
ciscoiScsiGwMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 1, 1)).setObjects(("CISCO-ISCSI-GW-MIB", "cigConfigurationGroup"), ("CISCO-ISCSI-GW-MIB", "cigLuConfigurationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoiScsiGwMIBCompliance = ciscoiScsiGwMIBCompliance.setStatus('deprecated')
ciscoiScsiGwMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 1, 2)).setObjects(("CISCO-ISCSI-GW-MIB", "cigConfigurationGroupRev1"), ("CISCO-ISCSI-GW-MIB", "cigSessionStatsGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiIfGroup"), ("CISCO-ISCSI-GW-MIB", "cigLuConfigurationGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoiScsiGwMIBCompliance1 = ciscoiScsiGwMIBCompliance1.setStatus('deprecated')
ciscoiScsiGwMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 1, 3)).setObjects(("CISCO-ISCSI-GW-MIB", "cigConfigurationGroupRev2"), ("CISCO-ISCSI-GW-MIB", "cigSessionStatsGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiIfGroupRev1"), ("CISCO-ISCSI-GW-MIB", "cigIscsiAuthGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiGigEIfGroup"), ("CISCO-ISCSI-GW-MIB", "cigLuConfigurationGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoiScsiGwMIBCompliance2 = ciscoiScsiGwMIBCompliance2.setStatus('deprecated')
ciscoiScsiGwMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 1, 4)).setObjects(("CISCO-ISCSI-GW-MIB", "cigConfigurationGroupRev3"), ("CISCO-ISCSI-GW-MIB", "cigSessionStatsGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiIfGroupRev3"), ("CISCO-ISCSI-GW-MIB", "cigIscsiAuthGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiGigEIfGroup"), ("CISCO-ISCSI-GW-MIB", "cigLuConfigurationGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoiScsiGwMIBCompliance3 = ciscoiScsiGwMIBCompliance3.setStatus('deprecated')
ciscoiScsiGwMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 1, 5)).setObjects(("CISCO-ISCSI-GW-MIB", "cigConfigurationGroupRev3"), ("CISCO-ISCSI-GW-MIB", "cigSessionStatsGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiIfGroupRev4"), ("CISCO-ISCSI-GW-MIB", "cigIscsiAuthGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiGigEIfGroup"), ("CISCO-ISCSI-GW-MIB", "cigLuConfigurationGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoiScsiGwMIBCompliance4 = ciscoiScsiGwMIBCompliance4.setStatus('deprecated')
ciscoiScsiGwMIBCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 1, 6)).setObjects(("CISCO-ISCSI-GW-MIB", "cigConfigurationGroupRev3"), ("CISCO-ISCSI-GW-MIB", "cigConfigurationGroupSup1"), ("CISCO-ISCSI-GW-MIB", "cigSessionStatsGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiIfGroupRev4"), ("CISCO-ISCSI-GW-MIB", "cigIscsiIfGroupSup1"), ("CISCO-ISCSI-GW-MIB", "cigIscsiAuthGroup"), ("CISCO-ISCSI-GW-MIB", "cigIscsiAuthGroupSup1"), ("CISCO-ISCSI-GW-MIB", "cigIscsiGigEIfGroup"), ("CISCO-ISCSI-GW-MIB", "cigConnectionStatsGroup"), ("CISCO-ISCSI-GW-MIB", "cigLuConfigurationGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoiScsiGwMIBCompliance5 = ciscoiScsiGwMIBCompliance5.setStatus('current')
cigConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 1)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfImport"), ("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfExport"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeName"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeRole"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodePersistentFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortPersistentFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortNumFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortFCAddrListIndex"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeVsanList2k"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeVsanList4k"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeDiscovered"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeRowStatus"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRole"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeName"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiPortFCAddrListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodePermitListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeAdvIntfListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeAllIntrAccessAllowed"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeDiscovered"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRowStatus"), ("CISCO-ISCSI-GW-MIB", "fcAddress"), ("CISCO-ISCSI-GW-MIB", "fcSecondaryAddress"), ("CISCO-ISCSI-GW-MIB", "fcAddressRowStatus"), ("CISCO-ISCSI-GW-MIB", "iscsiNodeName"), ("CISCO-ISCSI-GW-MIB", "iscsiNodeNameRowStatus"), ("CISCO-ISCSI-GW-MIB", "nodeAdvIntfIfIndex"), ("CISCO-ISCSI-GW-MIB", "nodeAdvIntfIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigConfigurationGroup = cigConfigurationGroup.setStatus('deprecated')
cigLuConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 2)).setObjects(("CISCO-ISCSI-GW-MIB", "scsiLuExtRemotePortFcAddress"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtRemotePortSecFcAddress"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtLocalTargetAddress"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtRemoteLun"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtLocalLun"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigLuConfigurationGroup = cigLuConfigurationGroup.setStatus('deprecated')
cigSessionStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 3)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiSsnVsan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigSessionStatsGroup = cigSessionStatsGroup.setStatus('current')
cigConfigurationGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 4)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfImport"), ("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfExport"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeName"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeRole"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodePersistentFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortPersistentFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortNumFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortFCAddrListIndex"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeVsanList2k"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeVsanList4k"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeDiscovered"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeRowStatus"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeFcAddrAssignment"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRole"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeName"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiPortFCAddrListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodePermitListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeAdvIntfListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeAllIntrAccessAllowed"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeDiscovered"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRowStatus"), ("CISCO-ISCSI-GW-MIB", "fcAddress"), ("CISCO-ISCSI-GW-MIB", "fcSecondaryAddress"), ("CISCO-ISCSI-GW-MIB", "fcAddressRowStatus"), ("CISCO-ISCSI-GW-MIB", "iscsiNodeName"), ("CISCO-ISCSI-GW-MIB", "iscsiNodeNameRowStatus"), ("CISCO-ISCSI-GW-MIB", "nodeAdvIntfIfIndex"), ("CISCO-ISCSI-GW-MIB", "nodeAdvIntfIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigConfigurationGroupRev1 = cigConfigurationGroupRev1.setStatus('deprecated')
cigLuConfigurationGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 5)).setObjects(("CISCO-ISCSI-GW-MIB", "scsiLuExtRemotePortFcAddress"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtRemotePortSecFcAddress"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtLocalTargetAddress"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtRemoteLun"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtLocalLun"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtRowStatus"), ("CISCO-ISCSI-GW-MIB", "scsiLuExtRemoteSecLun"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigLuConfigurationGroupRev1 = cigLuConfigurationGroupRev1.setStatus('current')
cigIscsiIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 6)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiIfTcpKeepAliveTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxRetransmissions"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinRetransmitTime"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpQOS"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSACKEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSendBufferSize"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUResetTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpLocalPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiIfGroup = cigIscsiIfGroup.setStatus('deprecated')
cigIscsiIfGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 7)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiIfTcpKeepAliveTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxRetransmissions"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinRetransmitTime"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpQOS"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSACKEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSendBufferSize"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUResetTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpLocalPort"), ("CISCO-ISCSI-GW-MIB", "iscsiIfForwardingMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModeNodeFcAddr"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModePortFcAddr"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModeFcAddrAsgnmt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiIfGroupRev1 = cigIscsiIfGroupRev1.setStatus('deprecated')
cigIscsiAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 8)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiAuthMethod"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeAuthUser"), ("CISCO-ISCSI-GW-MIB", "iscsiGigEIfAuthMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiAuthGroup = cigIscsiAuthGroup.setStatus('current')
cigConfigurationGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 9)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfImport"), ("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfExport"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeName"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeRole"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodePersistentFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortPersistentFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortNumFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortFCAddrListIndex"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeVsanList2k"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeVsanList4k"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeDiscovered"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeRowStatus"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeFcAddrAssignment"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRole"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeName"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiPortFCAddrListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodePermitListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeAdvIntfListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeAllIntrAccessAllowed"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeDiscovered"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRowStatus"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeTrespassMode"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRevertToPrimaryPort"), ("CISCO-ISCSI-GW-MIB", "fcAddress"), ("CISCO-ISCSI-GW-MIB", "fcSecondaryAddress"), ("CISCO-ISCSI-GW-MIB", "fcAddressRowStatus"), ("CISCO-ISCSI-GW-MIB", "iscsiNodeName"), ("CISCO-ISCSI-GW-MIB", "iscsiNodeNameRowStatus"), ("CISCO-ISCSI-GW-MIB", "nodeAdvIntfIfIndex"), ("CISCO-ISCSI-GW-MIB", "nodeAdvIntfIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigConfigurationGroupRev2 = cigConfigurationGroupRev2.setStatus('deprecated')
cigIscsiGigEIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 10)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiGigEIfIsnsServerProfileName"), ("CISCO-ISCSI-GW-MIB", "iscsiGigEIfIscsiSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiGigEIfGroup = cigIscsiGigEIfGroup.setStatus('current')
cigIscsiIfGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 11)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiIfTcpKeepAliveTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxRetransmissions"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinRetransmitTime"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpQOS"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSACKEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSendBufferSize"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUResetTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpLocalPort"), ("CISCO-ISCSI-GW-MIB", "iscsiIfForwardingMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModeNodeFcAddr"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModePortFcAddr"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModeFcAddrAsgnmt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiIfGroupRev2 = cigIscsiIfGroupRev2.setStatus('deprecated')
cigConfigurationGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 12)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfImport"), ("CISCO-ISCSI-GW-MIB", "iscsiImprtExprtTgtsConfExport"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeName"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeRole"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodePersistentFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortPersistentFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortNumFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeFCAddr"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcPortFCAddrListIndex"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeVsanList2k"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeVsanList4k"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeDiscovered"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeRowStatus"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcNodeFcAddrAssignment"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRole"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeName"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiPortFCAddrListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodePermitListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeAdvIntfListIndex"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeAllIntrAccessAllowed"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeDiscovered"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRowStatus"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeTrespassMode"), ("CISCO-ISCSI-GW-MIB", "fc2IscsiNodeRevertToPrimaryPort"), ("CISCO-ISCSI-GW-MIB", "fcAddress"), ("CISCO-ISCSI-GW-MIB", "fcSecondaryAddress"), ("CISCO-ISCSI-GW-MIB", "fcAddressRowStatus"), ("CISCO-ISCSI-GW-MIB", "iscsiNodeName"), ("CISCO-ISCSI-GW-MIB", "iscsiNodeNameRowStatus"), ("CISCO-ISCSI-GW-MIB", "nodeAdvIntfIfIndex"), ("CISCO-ISCSI-GW-MIB", "nodeAdvIntfIfRowStatus"), ("CISCO-ISCSI-GW-MIB", "iscsiInitiatorIdleTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIntrIdentificationMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigConfigurationGroupRev3 = cigConfigurationGroupRev3.setStatus('current')
cigIscsiIfGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 13)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiIfTcpKeepAliveTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxRetransmissions"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinRetransmitTime"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpQOS"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSACKEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSendBufferSize"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUResetTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpLocalPort"), ("CISCO-ISCSI-GW-MIB", "iscsiIfForwardingMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModeNodeFcAddr"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModePortFcAddr"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModeFcAddrAsgnmt"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrIdentificationMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiIfGroupRev3 = cigIscsiIfGroupRev3.setStatus('deprecated')
cigIscsiIfGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 14)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiIfTcpKeepAliveTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxRetransmissions"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinRetransmitTime"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpQOS"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSACKEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpSendBufferSize"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMinBandwidth"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpPMTUResetTimeout"), ("CISCO-ISCSI-GW-MIB", "iscsiIfForwardingMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModeNodeFcAddr"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModePortFcAddr"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrProxyModeFcAddrAsgnmt"), ("CISCO-ISCSI-GW-MIB", "iscsiIfIntrIdentificationMode"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpLocalTcpPort"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpRndTrpTimeEst"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiIfGroupRev4 = cigIscsiIfGroupRev4.setStatus('current')
cigIscsiIfGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 15)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiIfNumNormalConnections"), ("CISCO-ISCSI-GW-MIB", "iscsiIfNumDiscovConnections"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpCWMEnable"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpCWMBurstSize"), ("CISCO-ISCSI-GW-MIB", "iscsiIfTcpMaxJitter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiIfGroupSup1 = cigIscsiIfGroupSup1.setStatus('current')
cigConnectionStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 16)).setObjects(("CISCO-ISCSI-GW-MIB", "cIscsiStatsConnectionTxBytes"), ("CISCO-ISCSI-GW-MIB", "cIscsiStatsConnectionRxBytes"), ("CISCO-ISCSI-GW-MIB", "cIscsiStatsIpSecInUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigConnectionStatsGroup = cigConnectionStatsGroup.setStatus('current')
cigConfigurationGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 17)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsiTargetUserName"), ("CISCO-ISCSI-GW-MIB", "iscsiTargetPassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigConfigurationGroupSup1 = cigConfigurationGroupSup1.setStatus('current')
cigIscsiAuthGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 317, 2, 2, 18)).setObjects(("CISCO-ISCSI-GW-MIB", "iscsi2FcTargetUserName"), ("CISCO-ISCSI-GW-MIB", "iscsi2FcTargetPassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cigIscsiAuthGroupSup1 = cigIscsiAuthGroupSup1.setStatus('current')
mibBuilder.exportSymbols("CISCO-ISCSI-GW-MIB", cigIscsiAuthGroupSup1=cigIscsiAuthGroupSup1, iscsiNodeNameListTable=iscsiNodeNameListTable, cIscsiStatsConnectionIndex=cIscsiStatsConnectionIndex, IscsiAuthMethod=IscsiAuthMethod, iscsiIfTcpQOS=iscsiIfTcpQOS, cigIscsiIfGroupRev4=cigIscsiIfGroupRev4, scsiLuExtLocalLun=scsiLuExtLocalLun, iscsiNodeNameRowStatus=iscsiNodeNameRowStatus, ciscoiScsiGwMIBCompliance=ciscoiScsiGwMIBCompliance, iscsi2FcNodeFcAddrAssignment=iscsi2FcNodeFcAddrAssignment, fc2IscsiNodeEntry=fc2IscsiNodeEntry, iscsiIfTcpMaxBandwidth=iscsiIfTcpMaxBandwidth, scsiLuExtRowStatus=scsiLuExtRowStatus, iscsiIfTcpCWMEnable=iscsiIfTcpCWMEnable, iscsiSessionAttributesExtTable=iscsiSessionAttributesExtTable, PYSNMP_MODULE_ID=ciscoIscsiGwMIB, cigConfigurationGroup=cigConfigurationGroup, scsiLuExtRemoteLun=scsiLuExtRemoteLun, iscsiIfTcpSACKEnable=iscsiIfTcpSACKEnable, cIscsiStatsSessionIndex=cIscsiStatsSessionIndex, iscsi2FcNodeEntry=iscsi2FcNodeEntry, iscsiIfTcpMinBandwidth=iscsiIfTcpMinBandwidth, iscsiNodeNameListIndex=iscsiNodeNameListIndex, iscsi2FcNodeVsanList4k=iscsi2FcNodeVsanList4k, fc2IscsiNodeTrespassMode=fc2IscsiNodeTrespassMode, scsiLuExtTable=scsiLuExtTable, iscsi2FcPortFCAddrListIndex=iscsi2FcPortFCAddrListIndex, iscsiImprtExprtTgtsConfExport=iscsiImprtExprtTgtsConfExport, fcSecondaryAddress=fcSecondaryAddress, cigConfigurationGroupRev1=cigConfigurationGroupRev1, iscsi2FcPortNumFCAddr=iscsi2FcPortNumFCAddr, iscsiIfNumDiscovConnections=iscsiIfNumDiscovConnections, ciscsiConnectionStatsEntry=ciscsiConnectionStatsEntry, cigIscsiIfGroupSup1=cigIscsiIfGroupSup1, iscsi2FcTargetUserName=iscsi2FcTargetUserName, iscsiIfIntrProxyModeFcAddrAsgnmt=iscsiIfIntrProxyModeFcAddrAsgnmt, fcAddressRowStatus=fcAddressRowStatus, fc2IscsiNodeRole=fc2IscsiNodeRole, ciscoiScsiGwMIBCompliance1=ciscoiScsiGwMIBCompliance1, iscsiSsnVsan=iscsiSsnVsan, ciScsiStatistics=ciScsiStatistics, iscsiIfNumNormalConnections=iscsiIfNumNormalConnections, ciscoiScsiGwMIBCompliance2=ciscoiScsiGwMIBCompliance2, CIscsiIntrIdentificationMode=CIscsiIntrIdentificationMode, iscsiInitiatorIdleTimeout=iscsiInitiatorIdleTimeout, cIscsiStatsNodeIndex=cIscsiStatsNodeIndex, scsiLuExtRemoteSecLun=scsiLuExtRemoteSecLun, cigConfigurationGroupRev2=cigConfigurationGroupRev2, cigIscsiIfGroupRev3=cigIscsiIfGroupRev3, nodeAdvIntfListTable=nodeAdvIntfListTable, nodeAdvIntfIndex=nodeAdvIntfIndex, cigIscsiIfGroupRev1=cigIscsiIfGroupRev1, cigLuConfigurationGroupRev1=cigLuConfigurationGroupRev1, ciscoiScsiGwMIBObjects=ciscoiScsiGwMIBObjects, iscsi2FcNodePersistentFCAddr=iscsi2FcNodePersistentFCAddr, iscsi2FcNodeRole=iscsi2FcNodeRole, IscsiName=IscsiName, iscsiIfTcpLocalPort=iscsiIfTcpLocalPort, iscsiGigEIfIscsiSessions=iscsiGigEIfIscsiSessions, iscsi2FcNodeTable=iscsi2FcNodeTable, fc2IscsiNodeTable=fc2IscsiNodeTable, fc2IscsiNodeAdvIntfListIndex=fc2IscsiNodeAdvIntfListIndex, ciScsiConfig=ciScsiConfig, ciscoiScsiGwMIBCompliance4=ciscoiScsiGwMIBCompliance4, scsiLuExtLocalTargetAddress=scsiLuExtLocalTargetAddress, CIscsiNodeRoles=CIscsiNodeRoles, nodeAdvIntfListEntry=nodeAdvIntfListEntry, iscsiNodeName=iscsiNodeName, iscsiIfTcpSendBufferSize=iscsiIfTcpSendBufferSize, iscsiIfTcpCWMBurstSize=iscsiIfTcpCWMBurstSize, iscsiTargetUserName=iscsiTargetUserName, ciscoiScsiGwMIBConformance=ciscoiScsiGwMIBConformance, iscsi2FcNodeAuthUser=iscsi2FcNodeAuthUser, fcAddressListTable=fcAddressListTable, iscsi2FcPortPersistentFCAddr=iscsi2FcPortPersistentFCAddr, cigConfigurationGroupRev3=cigConfigurationGroupRev3, scsiLuExtRemotePortSecFcAddress=scsiLuExtRemotePortSecFcAddress, iscsi2FcNodeDiscovered=iscsi2FcNodeDiscovered, ciscoiScsiGwMIBCompliance5=ciscoiScsiGwMIBCompliance5, iscsiAuthMethod=iscsiAuthMethod, iscsiIfForwardingMode=iscsiIfForwardingMode, cIscsiStatsConnectionRxBytes=cIscsiStatsConnectionRxBytes, cigIscsiGigEIfGroup=cigIscsiGigEIfGroup, iscsiIfTcpKeepAliveTimeout=iscsiIfTcpKeepAliveTimeout, fc2IscsiNodeName=fc2IscsiNodeName, iscsiIfIntrProxyMode=iscsiIfIntrProxyMode, fc2IscsiNodePermitListIndex=fc2IscsiNodePermitListIndex, cigIscsiIfGroup=cigIscsiIfGroup, ciscsiConnectionStatsTable=ciscsiConnectionStatsTable, iscsi2FcNodeFCAddr=iscsi2FcNodeFCAddr, cIscsiStatsConnectionTxBytes=cIscsiStatsConnectionTxBytes, iscsiImprtExprtTgtsConfImport=iscsiImprtExprtTgtsConfImport, iscsiIfEntry=iscsiIfEntry, iscsiGigEIfTable=iscsiGigEIfTable, fcAddress=fcAddress, iscsiIfTcpPMTUResetTimeout=iscsiIfTcpPMTUResetTimeout, cigLuConfigurationGroup=cigLuConfigurationGroup, ciscoiScsiGwMIBCompliances=ciscoiScsiGwMIBCompliances, iscsiImprtExprtTgtsConfTable=iscsiImprtExprtTgtsConfTable, ciscoIscsiGwMIB=ciscoIscsiGwMIB, ciscoiScsiGwMIBCompliance3=ciscoiScsiGwMIBCompliance3, iscsiGigEIfEntry=iscsiGigEIfEntry, scsiLuExtEntry=scsiLuExtEntry, iscsiIfTable=iscsiIfTable, cigIscsiIfGroupRev2=cigIscsiIfGroupRev2, iscsiIfTcpMaxJitter=iscsiIfTcpMaxJitter, iscsiIfIntrIdentificationMode=iscsiIfIntrIdentificationMode, iscsi2FcNodeName=iscsi2FcNodeName, iscsiIntrIdentificationMode=iscsiIntrIdentificationMode, cigConnectionStatsGroup=cigConnectionStatsGroup, scsiLuExtRemotePortFcAddress=scsiLuExtRemotePortFcAddress, iscsiNodeNameListEntry=iscsiNodeNameListEntry, iscsiImprtExprtTgtsConfEntry=iscsiImprtExprtTgtsConfEntry, cigConfigurationGroupSup1=cigConfigurationGroupSup1, iscsiNodeNameIndex=iscsiNodeNameIndex, iscsiIfTcpMaxRetransmissions=iscsiIfTcpMaxRetransmissions, cigSessionStatsGroup=cigSessionStatsGroup, nodeAdvIntfListIndex=nodeAdvIntfListIndex, iscsiIfTcpRndTrpTimeEst=iscsiIfTcpRndTrpTimeEst, iscsiIfTcpLocalTcpPort=iscsiIfTcpLocalTcpPort, ciscoiScsiGwMIBNotifications=ciscoiScsiGwMIBNotifications, ciscoiScsiGwMIBGroups=ciscoiScsiGwMIBGroups, fc2IscsiPortFCAddrListIndex=fc2IscsiPortFCAddrListIndex, fc2IscsiNodeRowStatus=fc2IscsiNodeRowStatus, cIscsiStatsIpSecInUse=cIscsiStatsIpSecInUse, iscsi2FcNodeRowStatus=iscsi2FcNodeRowStatus, fc2IscsiNodeAllIntrAccessAllowed=fc2IscsiNodeAllIntrAccessAllowed, iscsi2FcNodeIndex=iscsi2FcNodeIndex, iscsiIfTcpPMTUEnable=iscsiIfTcpPMTUEnable, iscsi2FcNodeVsanList2k=iscsi2FcNodeVsanList2k, cigIscsiAuthGroup=cigIscsiAuthGroup, iscsiIfTcpMinRetransmitTime=iscsiIfTcpMinRetransmitTime, iscsi2FcTargetPassword=iscsi2FcTargetPassword, CIscsiTargetDomains=CIscsiTargetDomains, iscsiTargetPassword=iscsiTargetPassword, iscsiGigEIfAuthMethod=iscsiGigEIfAuthMethod, iscsiIfIntrProxyModeNodeFcAddr=iscsiIfIntrProxyModeNodeFcAddr, iscsiGigEIfIsnsServerProfileName=iscsiGigEIfIsnsServerProfileName, fcAddressListIndex=fcAddressListIndex, iscsiSessionAttributesExtEntry=iscsiSessionAttributesExtEntry, nodeAdvIntfIfRowStatus=nodeAdvIntfIfRowStatus, fc2IscsiNodeDiscovered=fc2IscsiNodeDiscovered, fcAddressListEntry=fcAddressListEntry, nodeAdvIntfIfIndex=nodeAdvIntfIfIndex, fcAddressIndex=fcAddressIndex, iscsiIfIntrProxyModePortFcAddr=iscsiIfIntrProxyModePortFcAddr, fc2IscsiNodeRevertToPrimaryPort=fc2IscsiNodeRevertToPrimaryPort)
