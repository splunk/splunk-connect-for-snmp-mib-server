#
# PySNMP MIB module PETH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PETH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:31:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
dot3, = mibBuilder.importSymbols("EtherLike-MIB", "dot3")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, Gauge32, iso, Counter64, MibIdentifier, Counter32, IpAddress, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Gauge32", "iso", "Counter64", "MibIdentifier", "Counter32", "IpAddress", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "TimeTicks")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
powerEthernetMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 7, 20))
if mibBuilder.loadTexts: powerEthernetMIB.setLastUpdated('200106200000Z')
if mibBuilder.loadTexts: powerEthernetMIB.setOrganization('IETF Ethernet Interfaces and Hub MIB Working Group')
pethObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 20, 1))
pethNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 20, 2))
pethConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 20, 3))
pethPsePortTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1), )
if mibBuilder.loadTexts: pethPsePortTable.setStatus('current')
pethPsePortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1), ).setIndexNames((0, "PETH-MIB", "pethPsePortGroupIndex"), (0, "PETH-MIB", "pethPsePortIndex"))
if mibBuilder.loadTexts: pethPsePortEntry.setStatus('current')
pethPsePortGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pethPsePortGroupIndex.setStatus('current')
pethPsePortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pethPsePortIndex.setStatus('current')
pethPsePortPowerEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortPowerEnable.setStatus('current')
pethPsePortPowerIdPairsControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortPowerIdPairsControl.setStatus('current')
pethPsePortPowerIdPairs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("signal", 1), ("spare", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortPowerIdPairs.setStatus('current')
pethPsePortPowerDetectionStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("off", 2), ("test", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortPowerDetectionStatus.setStatus('current')
pethPsePortDetectionOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deliveringPower", 1), ("off", 2), ("searching", 3), ("fault", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortDetectionOperStatus.setStatus('current')
pethPsePortPowerPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("low", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortPowerPriority.setStatus('current')
pethPsePortDenyError = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("lowPriority", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortDenyError.setStatus('current')
pethPsePortStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("underCurrent", 2), ("overCurrent", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortStatus.setStatus('current')
pethPsePortStatusClear = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortStatusClear.setStatus('current')
pethPsePortType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("telephone", 2), ("webcam", 3), ("wireless", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethPsePortType.setStatus('current')
pethPsePortPowerClassifications = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("class0", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("class4", 5), ("class5", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPsePortPowerClassifications.setStatus('current')
pethPdPortTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 2), )
if mibBuilder.loadTexts: pethPdPortTable.setStatus('current')
pethPdPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 2, 1), ).setIndexNames((0, "PETH-MIB", "pethPdPortIndex"))
if mibBuilder.loadTexts: pethPdPortEntry.setStatus('current')
pethPdPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: pethPdPortIndex.setStatus('current')
pethPdPortPowerPairs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("signal", 1), ("spare", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPdPortPowerPairs.setStatus('current')
pethPdPortDetectionOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("receivingPower", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPdPortDetectionOperStatus.setStatus('current')
pethPdPortType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("telephone", 2), ("webcam", 3), ("wireless", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethPdPortType.setStatus('current')
pethMainPseObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3))
pethMainPseTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1), )
if mibBuilder.loadTexts: pethMainPseTable.setStatus('current')
pethMainPseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1, 1), ).setIndexNames((0, "PETH-MIB", "pethMainPseGroupIndex"))
if mibBuilder.loadTexts: pethMainPseEntry.setStatus('current')
pethMainPseGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: pethMainPseGroupIndex.setStatus('current')
pethMainPsePower = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethMainPsePower.setStatus('current')
pethMainPseOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("faulty", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethMainPseOperStatus.setStatus('current')
pethMainPseConsumptionPower = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethMainPseConsumptionPower.setStatus('current')
pethMainPseBackupPresent = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("present", 1), ("notPresent", 2), ("faulty", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethMainPseBackupPresent.setStatus('current')
pethMainPseBackupActivated = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activated", 1), ("notActivated", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pethMainPseBackupActivated.setStatus('current')
pethMainPseUsageThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethMainPseUsageThreshold.setStatus('current')
pethTrapsControl = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 4))
pethTrapsControlTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 4, 1), )
if mibBuilder.loadTexts: pethTrapsControlTable.setStatus('current')
pethTrapsControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 4, 1, 1), ).setIndexNames((0, "PETH-MIB", "pethTrapsControlGroupIndex"))
if mibBuilder.loadTexts: pethTrapsControlEntry.setStatus('current')
pethTrapsControlGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: pethTrapsControlGroupIndex.setStatus('current')
pethTrapsControlEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 20, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pethTrapsControlEnable.setStatus('current')
pethPsePortOnOffTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 7, 20, 2, 1)).setObjects(("PETH-MIB", "pethPsePortGroupIndex"), ("PETH-MIB", "pethPsePortIndex"), ("PETH-MIB", "pethPsePortDetectionOperStatus"))
if mibBuilder.loadTexts: pethPsePortOnOffTrap.setStatus('current')
pethPsePortDenyTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 7, 20, 2, 2)).setObjects(("PETH-MIB", "pethPsePortGroupIndex"), ("PETH-MIB", "pethPsePortIndex"), ("PETH-MIB", "pethPsePortDenyError"))
if mibBuilder.loadTexts: pethPsePortDenyTrap.setStatus('current')
pethPsePortStatusTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 7, 20, 2, 3)).setObjects(("PETH-MIB", "pethPsePortGroupIndex"), ("PETH-MIB", "pethPsePortIndex"), ("PETH-MIB", "pethPsePortStatus"))
if mibBuilder.loadTexts: pethPsePortStatusTrap.setStatus('current')
pethMainPseBackUpActivatedTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 7, 20, 2, 4)).setObjects(("PETH-MIB", "pethPsePortGroupIndex"), ("PETH-MIB", "pethMainPseBackupActivated"))
if mibBuilder.loadTexts: pethMainPseBackUpActivatedTrap.setStatus('current')
pethMainPowerUsageTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 7, 20, 2, 5)).setObjects(("PETH-MIB", "pethPsePortGroupIndex"))
if mibBuilder.loadTexts: pethMainPowerUsageTrap.setStatus('current')
pethCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 20, 3, 1))
pethGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 20, 3, 2))
pethCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 7, 20, 3, 1, 1)).setObjects(("PETH-MIB", "pethPsePortGroup"), ("PETH-MIB", "pethPdPortGroup"), ("PETH-MIB", "pethMainPseGroup"), ("PETH-MIB", "pethTrapsControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethCompliance = pethCompliance.setStatus('current')
pethPsePortGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 7, 20, 3, 2, 1)).setObjects(("PETH-MIB", "pethPsePortPowerEnable"), ("PETH-MIB", "pethPsePortPowerIdPairsControl"), ("PETH-MIB", "pethPsePortPowerIdPairs"), ("PETH-MIB", "pethPsePortPowerDetectionStatus"), ("PETH-MIB", "pethPsePortDetectionOperStatus"), ("PETH-MIB", "pethPsePortPowerPriority"), ("PETH-MIB", "pethPsePortDenyError"), ("PETH-MIB", "pethPsePortStatus"), ("PETH-MIB", "pethPsePortStatusClear"), ("PETH-MIB", "pethPsePortType"), ("PETH-MIB", "pethPsePortPowerClassifications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethPsePortGroup = pethPsePortGroup.setStatus('current')
pethPdPortGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 7, 20, 3, 2, 2)).setObjects(("PETH-MIB", "pethPdPortPowerPairs"), ("PETH-MIB", "pethPdPortDetectionOperStatus"), ("PETH-MIB", "pethPdPortType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethPdPortGroup = pethPdPortGroup.setStatus('current')
pethMainPseGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 7, 20, 3, 2, 3)).setObjects(("PETH-MIB", "pethMainPsePower"), ("PETH-MIB", "pethMainPseOperStatus"), ("PETH-MIB", "pethMainPseConsumptionPower"), ("PETH-MIB", "pethMainPseBackupPresent"), ("PETH-MIB", "pethMainPseBackupActivated"), ("PETH-MIB", "pethMainPseUsageThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethMainPseGroup = pethMainPseGroup.setStatus('current')
pethTrapsControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 7, 20, 3, 2, 4)).setObjects(("PETH-MIB", "pethTrapsControlEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pethTrapsControlGroup = pethTrapsControlGroup.setStatus('current')
mibBuilder.exportSymbols("PETH-MIB", pethPsePortDetectionOperStatus=pethPsePortDetectionOperStatus, pethPsePortDenyTrap=pethPsePortDenyTrap, pethMainPseBackUpActivatedTrap=pethMainPseBackUpActivatedTrap, pethCompliances=pethCompliances, pethMainPsePower=pethMainPsePower, pethPdPortPowerPairs=pethPdPortPowerPairs, pethPdPortIndex=pethPdPortIndex, pethPsePortIndex=pethPsePortIndex, pethNotifications=pethNotifications, pethTrapsControlEntry=pethTrapsControlEntry, pethGroups=pethGroups, pethMainPseBackupActivated=pethMainPseBackupActivated, pethMainPseObjects=pethMainPseObjects, pethTrapsControlGroup=pethTrapsControlGroup, pethPsePortPowerClassifications=pethPsePortPowerClassifications, powerEthernetMIB=powerEthernetMIB, pethPdPortEntry=pethPdPortEntry, pethPsePortTable=pethPsePortTable, pethPsePortPowerEnable=pethPsePortPowerEnable, pethMainPseTable=pethMainPseTable, pethPsePortPowerDetectionStatus=pethPsePortPowerDetectionStatus, pethMainPseGroup=pethMainPseGroup, pethPsePortOnOffTrap=pethPsePortOnOffTrap, pethMainPseEntry=pethMainPseEntry, pethTrapsControl=pethTrapsControl, pethTrapsControlEnable=pethTrapsControlEnable, pethPsePortStatusTrap=pethPsePortStatusTrap, pethPsePortDenyError=pethPsePortDenyError, pethPsePortType=pethPsePortType, pethMainPowerUsageTrap=pethMainPowerUsageTrap, pethPsePortGroupIndex=pethPsePortGroupIndex, pethPdPortTable=pethPdPortTable, pethMainPseGroupIndex=pethMainPseGroupIndex, pethPdPortType=pethPdPortType, pethTrapsControlGroupIndex=pethTrapsControlGroupIndex, pethMainPseUsageThreshold=pethMainPseUsageThreshold, pethPsePortPowerIdPairs=pethPsePortPowerIdPairs, pethPsePortStatusClear=pethPsePortStatusClear, pethMainPseOperStatus=pethMainPseOperStatus, pethPdPortGroup=pethPdPortGroup, pethPsePortPowerIdPairsControl=pethPsePortPowerIdPairsControl, pethTrapsControlTable=pethTrapsControlTable, pethPsePortEntry=pethPsePortEntry, pethObjects=pethObjects, pethPsePortGroup=pethPsePortGroup, pethPsePortStatus=pethPsePortStatus, pethCompliance=pethCompliance, pethPdPortDetectionOperStatus=pethPdPortDetectionOperStatus, pethMainPseBackupPresent=pethMainPseBackupPresent, pethMainPseConsumptionPower=pethMainPseConsumptionPower, pethPsePortPowerPriority=pethPsePortPowerPriority, PYSNMP_MODULE_ID=powerEthernetMIB, pethConformance=pethConformance)
