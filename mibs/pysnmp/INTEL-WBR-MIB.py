#
# PySNMP MIB module INTEL-WBR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-WBR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Counter64, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, Integer32, IpAddress, NotificationType, MibIdentifier, Unsigned32, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "Integer32", "IpAddress", "NotificationType", "MibIdentifier", "Unsigned32", "iso", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wbr = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 25))
wbrBase = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 25, 1))
wbrStp = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 25, 2))
wbrTp = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 25, 3))
wbrBaseLastConfigTime = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrBaseLastConfigTime.setStatus('mandatory')
wbrBaseBridging = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrBaseBridging.setStatus('mandatory')
wbrBaseBridgingIP = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrBaseBridgingIP.setStatus('mandatory')
wbrBaseBridgingIPX = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrBaseBridgingIPX.setStatus('mandatory')
wbrStpBridgeAgeingTime = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpBridgeAgeingTime.setStatus('mandatory')
wbrStpBridgeIsRoot = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpBridgeIsRoot.setStatus('mandatory')
wbrStpRxBPDUs = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpRxBPDUs.setStatus('mandatory')
wbrStpTxBPDUs = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpTxBPDUs.setStatus('mandatory')
wbrStpTxBPDUsFailed = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpTxBPDUsFailed.setStatus('mandatory')
wbrStpRxSpoofBPDUs = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpRxSpoofBPDUs.setStatus('mandatory')
wbrStpTxSpoofBPDUs = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpTxSpoofBPDUs.setStatus('mandatory')
wbrStpTxSpoofFailed = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpTxSpoofFailed.setStatus('mandatory')
wbrStpTxSpoofData = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpTxSpoofData.setStatus('mandatory')
wbrStpLinkTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10), )
if mibBuilder.loadTexts: wbrStpLinkTable.setStatus('mandatory')
wbrStpLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1), ).setIndexNames((0, "INTEL-WBR-MIB", "wbrStpLinkIfIndex"))
if mibBuilder.loadTexts: wbrStpLinkEntry.setStatus('mandatory')
wbrStpLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkIfIndex.setStatus('mandatory')
wbrStpLinkRxProtocolBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkRxProtocolBytes.setStatus('mandatory')
wbrStpLinkTxProtocolBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkTxProtocolBytes.setStatus('mandatory')
wbrStpLinkRxBPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkRxBPDUs.setStatus('mandatory')
wbrStpLinkTxBPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkTxBPDUs.setStatus('mandatory')
wbrStpLinkTxBPDUsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkTxBPDUsFailed.setStatus('mandatory')
wbrStpLinkRxSpoofBPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkRxSpoofBPDUs.setStatus('mandatory')
wbrStpLinkTxSpoofBPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkTxSpoofBPDUs.setStatus('mandatory')
wbrStpLinkTxSpoofFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkTxSpoofFailed.setStatus('mandatory')
wbrStpLinkTxSpoofData = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkTxSpoofData.setStatus('mandatory')
wbrStpLinkSPTStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(30, 30)).setFixedLength(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkSPTStatus.setStatus('mandatory')
wbrStpLinkConfigBPDUPending = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkConfigBPDUPending.setStatus('mandatory')
wbrStpLinkTopologyChangeAck = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkTopologyChangeAck.setStatus('mandatory')
wbrStpLinkConfigBPDUAgeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkConfigBPDUAgeActive.setStatus('mandatory')
wbrStpLinkConfigBPDUAge = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkConfigBPDUAge.setStatus('mandatory')
wbrStpLinkBPDUSpoofing = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkBPDUSpoofing.setStatus('mandatory')
wbrStpLinkNonBPDUSpoofing = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkNonBPDUSpoofing.setStatus('mandatory')
wbrStpLinkSpoofing = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 2, 10, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrStpLinkSpoofing.setStatus('mandatory')
wbrTpRxPackets = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRxPackets.setStatus('mandatory')
wbrTpTxPackets = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpTxPackets.setStatus('mandatory')
wbrTpTxFailed = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpTxFailed.setStatus('mandatory')
wbrTpRxRejUnknown = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRxRejUnknown.setStatus('mandatory')
wbrTpRxRejTotal = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRxRejTotal.setStatus('mandatory')
wbrTpRxInvalid = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRxInvalid.setStatus('mandatory')
wbrTpRejUnicast = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRejUnicast.setStatus('mandatory')
wbrTpRejDefaultUnicast = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRejDefaultUnicast.setStatus('mandatory')
wbrTpRejMulticast = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRejMulticast.setStatus('mandatory')
wbrTpRejDefaultMulticast = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRejDefaultMulticast.setStatus('mandatory')
wbrTpRejSource = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRejSource.setStatus('mandatory')
wbrTpRejDefaultSource = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRejDefaultSource.setStatus('mandatory')
wbrTpRejType = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRejType.setStatus('mandatory')
wbrTpRejDefaultType = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpRejDefaultType.setStatus('mandatory')
wbrTpLinkTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15), )
if mibBuilder.loadTexts: wbrTpLinkTable.setStatus('mandatory')
wbrTpLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1), ).setIndexNames((0, "INTEL-WBR-MIB", "wbrTpLinkIfIndex"))
if mibBuilder.loadTexts: wbrTpLinkEntry.setStatus('mandatory')
wbrTpLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkIfIndex.setStatus('mandatory')
wbrTpLinkRxOtherBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxOtherBytes.setStatus('mandatory')
wbrTpLinkTxOtherBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkTxOtherBytes.setStatus('mandatory')
wbrTpLinkRxRejectedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejectedBytes.setStatus('mandatory')
wbrTpLinkTxRejectedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkTxRejectedBytes.setStatus('mandatory')
wbrTpLinkRxRejUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejUnknown.setStatus('mandatory')
wbrTpLinkRxInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxInvalid.setStatus('mandatory')
wbrTpLinkTxFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkTxFailed.setStatus('mandatory')
wbrTpLinkRxRejUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejUnicast.setStatus('mandatory')
wbrTpLinkRxRejMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejMulticast.setStatus('mandatory')
wbrTpLinkRxRejSource = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejSource.setStatus('mandatory')
wbrTpLinkRxRejType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejType.setStatus('mandatory')
wbrTpLinkRxRejDefaultUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejDefaultUnicast.setStatus('mandatory')
wbrTpLinkRxRejDefaultMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejDefaultMulticast.setStatus('mandatory')
wbrTpLinkRxRejDefaultSource = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejDefaultSource.setStatus('mandatory')
wbrTpLinkRxRejDefaultType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 25, 3, 15, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wbrTpLinkRxRejDefaultType.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-WBR-MIB", wbrTpRxPackets=wbrTpRxPackets, wbrBase=wbrBase, wbrStpLinkTxSpoofData=wbrStpLinkTxSpoofData, wbrTpLinkRxOtherBytes=wbrTpLinkRxOtherBytes, wbrStpLinkRxSpoofBPDUs=wbrStpLinkRxSpoofBPDUs, wbrTp=wbrTp, wbrTpLinkRxRejUnknown=wbrTpLinkRxRejUnknown, wbrBaseBridging=wbrBaseBridging, wbrTpLinkTable=wbrTpLinkTable, wbrTpRejDefaultType=wbrTpRejDefaultType, wbrStpLinkRxBPDUs=wbrStpLinkRxBPDUs, wbrStpLinkTopologyChangeAck=wbrStpLinkTopologyChangeAck, wbrStpLinkBPDUSpoofing=wbrStpLinkBPDUSpoofing, wbrTpRejDefaultMulticast=wbrTpRejDefaultMulticast, wbrTpTxFailed=wbrTpTxFailed, wbrBaseLastConfigTime=wbrBaseLastConfigTime, wbrStpLinkConfigBPDUPending=wbrStpLinkConfigBPDUPending, wbrStpTxSpoofData=wbrStpTxSpoofData, wbrTpLinkRxRejDefaultUnicast=wbrTpLinkRxRejDefaultUnicast, wbrStpTxBPDUs=wbrStpTxBPDUs, wbrStpLinkIfIndex=wbrStpLinkIfIndex, wbrTpLinkRxRejUnicast=wbrTpLinkRxRejUnicast, wbrStpLinkEntry=wbrStpLinkEntry, wbrBaseBridgingIPX=wbrBaseBridgingIPX, wbrStpTxSpoofBPDUs=wbrStpTxSpoofBPDUs, wbrStpTxBPDUsFailed=wbrStpTxBPDUsFailed, wbrTpRxRejUnknown=wbrTpRxRejUnknown, wbrStpBridgeIsRoot=wbrStpBridgeIsRoot, wbrTpLinkRxRejSource=wbrTpLinkRxRejSource, wbrStpLinkConfigBPDUAgeActive=wbrStpLinkConfigBPDUAgeActive, wbrStpLinkRxProtocolBytes=wbrStpLinkRxProtocolBytes, wbrTpRxRejTotal=wbrTpRxRejTotal, wbrTpLinkIfIndex=wbrTpLinkIfIndex, wbrTpLinkRxRejType=wbrTpLinkRxRejType, wbrTpRejSource=wbrTpRejSource, wbrStpLinkTxSpoofBPDUs=wbrStpLinkTxSpoofBPDUs, wbrTpTxPackets=wbrTpTxPackets, wbrTpLinkEntry=wbrTpLinkEntry, wbrTpLinkTxOtherBytes=wbrTpLinkTxOtherBytes, wbrStpLinkConfigBPDUAge=wbrStpLinkConfigBPDUAge, wbrStpLinkSPTStatus=wbrStpLinkSPTStatus, wbrStpLinkNonBPDUSpoofing=wbrStpLinkNonBPDUSpoofing, wbrStpLinkTable=wbrStpLinkTable, wbrTpLinkRxRejectedBytes=wbrTpLinkRxRejectedBytes, wbrStpRxSpoofBPDUs=wbrStpRxSpoofBPDUs, wbrStpBridgeAgeingTime=wbrStpBridgeAgeingTime, wbrTpLinkTxFailed=wbrTpLinkTxFailed, wbrTpLinkRxRejDefaultType=wbrTpLinkRxRejDefaultType, wbrTpLinkRxInvalid=wbrTpLinkRxInvalid, wbrStpRxBPDUs=wbrStpRxBPDUs, wbrTpRejMulticast=wbrTpRejMulticast, wbrTpRejDefaultUnicast=wbrTpRejDefaultUnicast, wbrTpLinkTxRejectedBytes=wbrTpLinkTxRejectedBytes, wbrTpLinkRxRejDefaultSource=wbrTpLinkRxRejDefaultSource, wbrStpLinkTxBPDUsFailed=wbrStpLinkTxBPDUsFailed, wbrTpLinkRxRejDefaultMulticast=wbrTpLinkRxRejDefaultMulticast, wbrStpLinkTxProtocolBytes=wbrStpLinkTxProtocolBytes, wbrStpLinkTxBPDUs=wbrStpLinkTxBPDUs, wbrTpRxInvalid=wbrTpRxInvalid, wbrTpRejDefaultSource=wbrTpRejDefaultSource, wbrStpLinkSpoofing=wbrStpLinkSpoofing, wbrTpRejUnicast=wbrTpRejUnicast, wbr=wbr, wbrStp=wbrStp, wbrTpLinkRxRejMulticast=wbrTpLinkRxRejMulticast, wbrBaseBridgingIP=wbrBaseBridgingIP, wbrStpLinkTxSpoofFailed=wbrStpLinkTxSpoofFailed, wbrStpTxSpoofFailed=wbrStpTxSpoofFailed, wbrTpRejType=wbrTpRejType)
