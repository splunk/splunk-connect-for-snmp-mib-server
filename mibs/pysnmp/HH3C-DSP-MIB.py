#
# PySNMP MIB module HH3C-DSP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-DSP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Bits, MibIdentifier, ModuleIdentity, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Unsigned32, NotificationType, Counter32, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "MibIdentifier", "ModuleIdentity", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Unsigned32", "NotificationType", "Counter32", "Gauge32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hh3cDSP = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 89))
hh3cDSP.setRevisions(('2008-01-16 13:00',))
if mibBuilder.loadTexts: hh3cDSP.setLastUpdated('200801161300Z')
if mibBuilder.loadTexts: hh3cDSP.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cVPMStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 89, 1), )
if mibBuilder.loadTexts: hh3cVPMStatusTable.setStatus('current')
hh3cVPMStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 89, 1, 1), ).setIndexNames((0, "HH3C-DSP-MIB", "hh3cVPMIndex"))
if mibBuilder.loadTexts: hh3cVPMStatusEntry.setStatus('current')
hh3cVPMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVPMIndex.setStatus('current')
hh3cVPMEnPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 1, 1, 2), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVPMEnPhysicalIndex.setStatus('current')
hh3cVPMState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("fatal", 3), ("offLine", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVPMState.setStatus('current')
hh3cVPMResourceUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVPMResourceUtilization.setStatus('current')
hh3cVPMHiWaterUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVPMHiWaterUtilization.setStatus('current')
hh3cVPMMaxChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVPMMaxChannel.setStatus('current')
hh3cDSPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2), )
if mibBuilder.loadTexts: hh3cDSPStatusTable.setStatus('current')
hh3cDSPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2, 1), ).setIndexNames((0, "HH3C-DSP-MIB", "hh3cDSPIndex"))
if mibBuilder.loadTexts: hh3cDSPStatusEntry.setStatus('current')
hh3cDSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDSPIndex.setStatus('current')
hh3cDSPVPMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDSPVPMIndex.setStatus('current')
hh3cDSPEnPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2, 1, 3), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDSPEnPhysicalIndex.setStatus('current')
hh3cDSPResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDSPResetTime.setStatus('current')
hh3cDSPMaxChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDSPMaxChannel.setStatus('current')
hh3cDSPState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("fatal", 3), ("offLine", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDSPState.setStatus('current')
hh3cDSPInUseChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 89, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDSPInUseChannel.setStatus('current')
hh3cDSPTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 89, 3))
hh3cDSPTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 89, 3, 0))
hh3cVPMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 89, 3, 0, 1)).setObjects(("HH3C-DSP-MIB", "hh3cVPMIndex"), ("HH3C-DSP-MIB", "hh3cVPMEnPhysicalIndex"), ("HH3C-DSP-MIB", "hh3cVPMState"))
if mibBuilder.loadTexts: hh3cVPMStateChange.setStatus('current')
hh3cDSPStateChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 89, 3, 0, 2)).setObjects(("HH3C-DSP-MIB", "hh3cDSPIndex"), ("HH3C-DSP-MIB", "hh3cDSPVPMIndex"), ("HH3C-DSP-MIB", "hh3cDSPEnPhysicalIndex"), ("HH3C-DSP-MIB", "hh3cDSPState"))
if mibBuilder.loadTexts: hh3cDSPStateChange.setStatus('current')
mibBuilder.exportSymbols("HH3C-DSP-MIB", hh3cDSPIndex=hh3cDSPIndex, hh3cDSPTrap=hh3cDSPTrap, hh3cVPMState=hh3cVPMState, hh3cVPMResourceUtilization=hh3cVPMResourceUtilization, hh3cDSPVPMIndex=hh3cDSPVPMIndex, hh3cVPMStatusEntry=hh3cVPMStatusEntry, hh3cDSPStateChange=hh3cDSPStateChange, hh3cDSPStatusEntry=hh3cDSPStatusEntry, PYSNMP_MODULE_ID=hh3cDSP, hh3cDSPStatusTable=hh3cDSPStatusTable, hh3cDSPInUseChannel=hh3cDSPInUseChannel, hh3cDSPTrapPrex=hh3cDSPTrapPrex, hh3cVPMStatusTable=hh3cVPMStatusTable, hh3cVPMHiWaterUtilization=hh3cVPMHiWaterUtilization, hh3cVPMEnPhysicalIndex=hh3cVPMEnPhysicalIndex, hh3cDSPEnPhysicalIndex=hh3cDSPEnPhysicalIndex, hh3cVPMMaxChannel=hh3cVPMMaxChannel, hh3cVPMIndex=hh3cVPMIndex, hh3cDSPState=hh3cDSPState, hh3cDSPResetTime=hh3cDSPResetTime, hh3cVPMStateChange=hh3cVPMStateChange, hh3cDSP=hh3cDSP, hh3cDSPMaxChannel=hh3cDSPMaxChannel)
