#
# PySNMP MIB module Unisphere-Data-V35-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-V35-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:26:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, MibIdentifier, Integer32, iso, Counter64, ModuleIdentity, TimeTicks, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "MibIdentifier", "Integer32", "iso", "Counter64", "ModuleIdentity", "TimeTicks", "IpAddress", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
usdV35MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59))
usdV35MIB.setRevisions(('2002-02-08 16:25',))
if mibBuilder.loadTexts: usdV35MIB.setLastUpdated('200202081625Z')
if mibBuilder.loadTexts: usdV35MIB.setOrganization('Unisphere Networks, Inc.')
usdV35Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1))
usdV35IfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2), )
if mibBuilder.loadTexts: usdV35IfTable.setStatus('current')
usdV35IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1), ).setIndexNames((0, "Unisphere-Data-V35-MIB", "usdV35IfIndex"))
if mibBuilder.loadTexts: usdV35IfEntry.setStatus('current')
usdV35IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdV35IfIndex.setStatus('current')
usdV35IfType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("x21", 0), ("v35", 1), ("interfaceTypeNoCable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdV35IfType.setStatus('current')
usdV35IfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("dte", 0), ("dce", 1), ("interfaceModeNoCable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdV35IfMode.setStatus('current')
usdV35IfClockRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1, 4), Unsigned32().clone(2048000)).setUnits('hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdV35IfClockRate.setStatus('current')
usdV35IfNrzEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("inverted", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdV35IfNrzEncoding.setStatus('current')
usdV35IfTxClock = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("inverted", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdV35IfTxClock.setStatus('current')
usdV35IfIgnoreDcd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ignoredNone", 0), ("dcdIgnored", 1), ("linkStateIgnored", 2))).clone('ignoredNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdV35IfIgnoreDcd.setStatus('current')
usdV35IfLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("loopback", 1))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdV35IfLoopback.setStatus('current')
usdV35Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 4))
usdV35Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 4, 1))
usdV35Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 4, 2))
usdV35Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 4, 1, 1)).setObjects(("Unisphere-Data-V35-MIB", "usdV35Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdV35Compliance = usdV35Compliance.setStatus('current')
usdV35Group = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 59, 4, 2, 1)).setObjects(("Unisphere-Data-V35-MIB", "usdV35IfType"), ("Unisphere-Data-V35-MIB", "usdV35IfMode"), ("Unisphere-Data-V35-MIB", "usdV35IfClockRate"), ("Unisphere-Data-V35-MIB", "usdV35IfNrzEncoding"), ("Unisphere-Data-V35-MIB", "usdV35IfTxClock"), ("Unisphere-Data-V35-MIB", "usdV35IfIgnoreDcd"), ("Unisphere-Data-V35-MIB", "usdV35IfLoopback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdV35Group = usdV35Group.setStatus('current')
mibBuilder.exportSymbols("Unisphere-Data-V35-MIB", usdV35IfMode=usdV35IfMode, usdV35IfClockRate=usdV35IfClockRate, usdV35Compliance=usdV35Compliance, usdV35IfIgnoreDcd=usdV35IfIgnoreDcd, usdV35Groups=usdV35Groups, usdV35Objects=usdV35Objects, usdV35IfTable=usdV35IfTable, usdV35MIB=usdV35MIB, usdV35IfNrzEncoding=usdV35IfNrzEncoding, usdV35Group=usdV35Group, usdV35IfIndex=usdV35IfIndex, usdV35IfLoopback=usdV35IfLoopback, usdV35IfEntry=usdV35IfEntry, usdV35Compliances=usdV35Compliances, usdV35IfTxClock=usdV35IfTxClock, PYSNMP_MODULE_ID=usdV35MIB, usdV35Conformance=usdV35Conformance, usdV35IfType=usdV35IfType)
