#
# PySNMP MIB module Fore-Callrecord-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-Callrecord-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:03:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
EntryStatus, software = mibBuilder.importSymbols("Fore-Common-MIB", "EntryStatus", "software")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Gauge32, Bits, Integer32, IpAddress, NotificationType, MibIdentifier, iso, Counter64, Unsigned32, Counter32, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "Bits", "Integer32", "IpAddress", "NotificationType", "MibIdentifier", "iso", "Counter64", "Unsigned32", "Counter32", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
crGroup = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1))
if mibBuilder.loadTexts: crGroup.setLastUpdated('9911050000Z')
if mibBuilder.loadTexts: crGroup.setOrganization('FORE')
crXfrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1))
crConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2))
crStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 3))
perfConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 4))
crFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5))
class CrXfrTrapStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("crXfrNoError", 1), ("crXfrNoResponseFromServer", 2), ("crXfrAccessViolation", 3), ("crXfrDiskFullorAllocationExceeded", 4), ("crXfrOtherError", 5))

crXfrTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1), )
if mibBuilder.loadTexts: crXfrTable.setStatus('current')
crXfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1), ).setIndexNames((0, "Fore-Callrecord-MIB", "crXfrIndex"))
if mibBuilder.loadTexts: crXfrEntry.setStatus('current')
crXfrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("callrecord", 1), ("performance", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crXfrIndex.setStatus('current')
crXfrPrimaryUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrPrimaryUrl.setStatus('current')
crXfrSecondaryUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrSecondaryUrl.setStatus('current')
crXfrRecordingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 4), Integer32().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrRecordingInterval.setStatus('current')
crXfrUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrUserId.setStatus('obsolete')
crXfrPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrPassword.setStatus('obsolete')
crXfrTransferStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("primaryInProgress", 1), ("secondaryInProgress", 2), ("primarySucceeded", 3), ("secondarySucceeded", 4), ("bothFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crXfrTransferStatus.setStatus('current')
crXfrStatusText = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crXfrStatusText.setStatus('current')
crXfrPrimaryTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 9), CrXfrTrapStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crXfrPrimaryTrapStatus.setStatus('current')
crXfrSecondaryTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 10), CrXfrTrapStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crXfrSecondaryTrapStatus.setStatus('current')
crXfrPrimaryXfrFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crXfrPrimaryXfrFailed.setStatus('current')
crXfrSecondaryXfrFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crXfrSecondaryXfrFailed.setStatus('current')
crXfrEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 13), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrEntryStatus.setStatus('current')
crXfrPrimaryUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 14), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrPrimaryUserId.setStatus('current')
crXfrPrimaryPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 15), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrPrimaryPassword.setStatus('current')
crXfrSecondaryUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 16), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrSecondaryUserId.setStatus('current')
crXfrSecondaryPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 1, 1, 1, 17), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crXfrSecondaryPassword.setStatus('current')
crAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crAdminStatus.setStatus('current')
crMemoryAllocated = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crMemoryAllocated.setStatus('obsolete')
crMemOflowAction = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rejectCall", 1), ("dontRecordCall", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crMemOflowAction.setStatus('current')
crAdminMinRecords = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crAdminMinRecords.setStatus('current')
crAdminMaxRecords = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crAdminMaxRecords.setStatus('current')
crOperRecords = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crOperRecords.setStatus('current')
crAdminMinDTBs = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crAdminMinDTBs.setStatus('current')
crAdminMaxDTBs = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crAdminMaxDTBs.setStatus('current')
crOperDTBs = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crOperDTBs.setStatus('current')
crOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("shutting-down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crOperStatus.setStatus('current')
crCounterCollectionInterval = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crCounterCollectionInterval.setStatus('current')
crCallsRejected = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crCallsRejected.setStatus('current')
crCallsNotRecorded = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crCallsNotRecorded.setStatus('current')
crCallsOpened = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crCallsOpened.setStatus('current')
crIntervalsSkipped = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crIntervalsSkipped.setStatus('current')
crTermCallsLost = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crTermCallsLost.setStatus('current')
crUpTime = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 3, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crUpTime.setStatus('current')
crCurrentCallsRecorded = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crCurrentCallsRecorded.setStatus('current')
perfAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: perfAdminStatus.setStatus('current')
crFilterTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1), )
if mibBuilder.loadTexts: crFilterTable.setStatus('current')
crFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1), ).setIndexNames((0, "Fore-Callrecord-MIB", "crFilterPort"), (0, "Fore-Callrecord-MIB", "crFilterVpi"), (0, "Fore-Callrecord-MIB", "crFilterVci"))
if mibBuilder.loadTexts: crFilterEntry.setStatus('current')
crFilterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crFilterPort.setStatus('current')
crFilterVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crFilterVpi.setStatus('current')
crFilterVci = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crFilterVci.setStatus('current')
crFilterPVCSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unspecified", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crFilterPVCSupport.setStatus('current')
crFilterPVPSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unspecified", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crFilterPVPSupport.setStatus('current')
crFilterSVCSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unspecified", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crFilterSVCSupport.setStatus('current')
crFilterSVPSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unspecified", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crFilterSVPSupport.setStatus('current')
crFilterSPVCSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unspecified", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crFilterSPVCSupport.setStatus('current')
crFilterSPVPSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unspecified", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crFilterSPVPSupport.setStatus('current')
crFilterFailedCallSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unspecified", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crFilterFailedCallSupport.setStatus('current')
crFilterEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 2, 3, 1, 5, 1, 1, 11), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crFilterEntryStatus.setStatus('current')
mibBuilder.exportSymbols("Fore-Callrecord-MIB", perfConfGroup=perfConfGroup, crXfrPrimaryXfrFailed=crXfrPrimaryXfrFailed, crConfGroup=crConfGroup, crCallsNotRecorded=crCallsNotRecorded, crOperStatus=crOperStatus, crAdminMaxDTBs=crAdminMaxDTBs, crOperDTBs=crOperDTBs, crXfrPrimaryTrapStatus=crXfrPrimaryTrapStatus, crMemOflowAction=crMemOflowAction, crCurrentCallsRecorded=crCurrentCallsRecorded, crFilterSVCSupport=crFilterSVCSupport, crXfrRecordingInterval=crXfrRecordingInterval, crFilterTable=crFilterTable, crFilterFailedCallSupport=crFilterFailedCallSupport, crFilterGroup=crFilterGroup, crXfrTable=crXfrTable, crCallsOpened=crCallsOpened, crFilterEntry=crFilterEntry, crXfrStatusText=crXfrStatusText, crAdminMinRecords=crAdminMinRecords, crXfrUserId=crXfrUserId, crXfrPrimaryPassword=crXfrPrimaryPassword, crFilterSVPSupport=crFilterSVPSupport, crFilterSPVCSupport=crFilterSPVCSupport, crUpTime=crUpTime, crXfrEntryStatus=crXfrEntryStatus, crAdminStatus=crAdminStatus, crXfrGroup=crXfrGroup, CrXfrTrapStatus=CrXfrTrapStatus, crAdminMaxRecords=crAdminMaxRecords, crMemoryAllocated=crMemoryAllocated, crCallsRejected=crCallsRejected, perfAdminStatus=perfAdminStatus, crFilterPVPSupport=crFilterPVPSupport, crXfrSecondaryTrapStatus=crXfrSecondaryTrapStatus, crFilterPort=crFilterPort, PYSNMP_MODULE_ID=crGroup, crCounterCollectionInterval=crCounterCollectionInterval, crStatsGroup=crStatsGroup, crXfrSecondaryUrl=crXfrSecondaryUrl, crIntervalsSkipped=crIntervalsSkipped, crFilterPVCSupport=crFilterPVCSupport, crFilterVpi=crFilterVpi, crGroup=crGroup, crTermCallsLost=crTermCallsLost, crXfrPrimaryUserId=crXfrPrimaryUserId, crFilterEntryStatus=crFilterEntryStatus, crFilterVci=crFilterVci, crXfrSecondaryPassword=crXfrSecondaryPassword, crXfrIndex=crXfrIndex, crOperRecords=crOperRecords, crXfrSecondaryUserId=crXfrSecondaryUserId, crFilterSPVPSupport=crFilterSPVPSupport, crAdminMinDTBs=crAdminMinDTBs, crXfrTransferStatus=crXfrTransferStatus, crXfrEntry=crXfrEntry, crXfrSecondaryXfrFailed=crXfrSecondaryXfrFailed, crXfrPassword=crXfrPassword, crXfrPrimaryUrl=crXfrPrimaryUrl)
