#
# PySNMP MIB module AWC-VLAN-CFG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AWC-VLAN-CFG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
AwcDot11MicAlgorithm, AwcVlanId, AwcDot11WEPKeyPermuteAlgorithm, AwcPolId, awcVx, AwcPfPriority, WEPKeytype128 = mibBuilder.importSymbols("AWCVX-MIB", "AwcDot11MicAlgorithm", "AwcVlanId", "AwcDot11WEPKeyPermuteAlgorithm", "AwcPolId", "awcVx", "AwcPfPriority", "WEPKeytype128")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, ModuleIdentity, Gauge32, IpAddress, ObjectIdentity, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, Counter64, NotificationType, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Gauge32", "IpAddress", "ObjectIdentity", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "Counter64", "NotificationType", "MibIdentifier", "iso")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
awcVlanCfgMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 522, 3, 21))
awcVlanCfgMIB.setRevisions(('2001-07-11 00:00',))
if mibBuilder.loadTexts: awcVlanCfgMIB.setLastUpdated('200209060000Z')
if mibBuilder.loadTexts: awcVlanCfgMIB.setOrganization('Cisco Systems, Inc.')
awcVlanCfgObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 21, 1))
class AwcVlanIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4095)

class AwcVlanEncapType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("dot1qDisabled", 1), ("dot1qPriority", 2), ("dot1qHybrid", 3), ("dot1qTrunk", 4))

awcMaxVlanIds = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcMaxVlanIds.setStatus('current')
awcVlanEncapMode = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 2), AwcVlanEncapType().clone('dot1qDisabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcVlanEncapMode.setStatus('current')
awcNativeVlanId = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 3), AwcVlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcNativeVlanId.setStatus('current')
awcVlanAllowEncrypted = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcVlanAllowEncrypted.setStatus('current')
awcVlanAnyEnabled = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcVlanAnyEnabled.setStatus('current')
awcVlanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6), )
if mibBuilder.loadTexts: awcVlanCfgTable.setStatus('current')
awcVlanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1), ).setIndexNames((0, "AWC-VLAN-CFG-MIB", "awcVlanIndex"))
if mibBuilder.loadTexts: awcVlanCfgEntry.setStatus('current')
awcVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 1), AwcVlanIndex())
if mibBuilder.loadTexts: awcVlanIndex.setStatus('current')
awcVlanPolId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 2), AwcPolId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanPolId.setStatus('current')
awcVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanEnabled.setStatus('current')
awcVlanNUcastKeyRotationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanNUcastKeyRotationInterval.setStatus('current')
awcVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanRowStatus.setStatus('current')
awcVlanMicAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 6), AwcDot11MicAlgorithm().clone('micNone')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanMicAlgorithm.setStatus('current')
awcVlanWEPKeyPermuteAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 7), AwcDot11WEPKeyPermuteAlgorithm().clone('wepPermuteNone')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanWEPKeyPermuteAlgorithm.setStatus('current')
awcVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 8), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanName.setStatus('current')
awcVlanDefaultUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 9), AwcPfPriority().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanDefaultUserPriority.setStatus('current')
awcVlanAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 6, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcVlanAlert.setStatus('current')
awcVlanNUcastKeyTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 7), )
if mibBuilder.loadTexts: awcVlanNUcastKeyTable.setStatus('current')
awcVlanNUcastKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 7, 1), ).setIndexNames((0, "AWC-VLAN-CFG-MIB", "awcVlanIndex"), (0, "AWC-VLAN-CFG-MIB", "awcVlanNUcastKeyIndex"))
if mibBuilder.loadTexts: awcVlanNUcastKeyEntry.setStatus('current')
awcVlanNUcastKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: awcVlanNUcastKeyIndex.setStatus('current')
awcVlanNUcastKeyLen = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcVlanNUcastKeyLen.setStatus('current')
awcVlanNUcastKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 7, 1, 3), WEPKeytype128()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcVlanNUcastKeyValue.setStatus('current')
awcVlanAllowUnencryptedVlanId = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 21, 1, 8), AwcVlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcVlanAllowUnencryptedVlanId.setStatus('current')
awcVlanCfgNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 21, 2))
awcVlanCfgConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 21, 3))
awcVlanCfgCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 21, 3, 1))
awcVlanCfgGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 21, 3, 2))
awcVlanCfgCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 522, 3, 21, 3, 1, 1)).setObjects(("AWC-VLAN-CFG-MIB", "awcVlanCfgObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcVlanCfgCompliance = awcVlanCfgCompliance.setStatus('current')
awcVlanCfgObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 21, 3, 2, 1)).setObjects(("AWC-VLAN-CFG-MIB", "awcMaxVlanIds"), ("AWC-VLAN-CFG-MIB", "awcVlanEncapMode"), ("AWC-VLAN-CFG-MIB", "awcNativeVlanId"), ("AWC-VLAN-CFG-MIB", "awcVlanAllowEncrypted"), ("AWC-VLAN-CFG-MIB", "awcVlanPolId"), ("AWC-VLAN-CFG-MIB", "awcVlanEnabled"), ("AWC-VLAN-CFG-MIB", "awcVlanNUcastKeyRotationInterval"), ("AWC-VLAN-CFG-MIB", "awcVlanRowStatus"), ("AWC-VLAN-CFG-MIB", "awcVlanMicAlgorithm"), ("AWC-VLAN-CFG-MIB", "awcVlanWEPKeyPermuteAlgorithm"), ("AWC-VLAN-CFG-MIB", "awcVlanName"), ("AWC-VLAN-CFG-MIB", "awcVlanDefaultUserPriority"), ("AWC-VLAN-CFG-MIB", "awcVlanAlert"), ("AWC-VLAN-CFG-MIB", "awcVlanNUcastKeyLen"), ("AWC-VLAN-CFG-MIB", "awcVlanNUcastKeyValue"), ("AWC-VLAN-CFG-MIB", "awcVlanAllowUnencryptedVlanId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcVlanCfgObjectsGroup = awcVlanCfgObjectsGroup.setStatus('current')
mibBuilder.exportSymbols("AWC-VLAN-CFG-MIB", awcVlanEnabled=awcVlanEnabled, awcVlanPolId=awcVlanPolId, awcVlanNUcastKeyValue=awcVlanNUcastKeyValue, awcVlanCfgNotifications=awcVlanCfgNotifications, awcVlanRowStatus=awcVlanRowStatus, awcVlanNUcastKeyEntry=awcVlanNUcastKeyEntry, awcVlanNUcastKeyLen=awcVlanNUcastKeyLen, awcVlanCfgGroups=awcVlanCfgGroups, awcVlanCfgObjectsGroup=awcVlanCfgObjectsGroup, awcVlanNUcastKeyRotationInterval=awcVlanNUcastKeyRotationInterval, awcVlanCfgObjects=awcVlanCfgObjects, awcVlanAllowUnencryptedVlanId=awcVlanAllowUnencryptedVlanId, AwcVlanEncapType=AwcVlanEncapType, awcVlanCfgMIB=awcVlanCfgMIB, awcVlanEncapMode=awcVlanEncapMode, awcVlanCfgCompliance=awcVlanCfgCompliance, awcVlanName=awcVlanName, awcVlanWEPKeyPermuteAlgorithm=awcVlanWEPKeyPermuteAlgorithm, awcVlanDefaultUserPriority=awcVlanDefaultUserPriority, awcVlanCfgConformance=awcVlanCfgConformance, AwcVlanIndex=AwcVlanIndex, PYSNMP_MODULE_ID=awcVlanCfgMIB, awcVlanMicAlgorithm=awcVlanMicAlgorithm, awcMaxVlanIds=awcMaxVlanIds, awcVlanCfgCompliances=awcVlanCfgCompliances, awcVlanIndex=awcVlanIndex, awcVlanAllowEncrypted=awcVlanAllowEncrypted, awcVlanNUcastKeyIndex=awcVlanNUcastKeyIndex, awcNativeVlanId=awcNativeVlanId, awcVlanNUcastKeyTable=awcVlanNUcastKeyTable, awcVlanCfgEntry=awcVlanCfgEntry, awcVlanCfgTable=awcVlanCfgTable, awcVlanAlert=awcVlanAlert, awcVlanAnyEnabled=awcVlanAnyEnabled)
