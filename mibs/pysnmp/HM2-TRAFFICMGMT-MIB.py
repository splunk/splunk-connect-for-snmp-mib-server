#
# PySNMP MIB module HM2-TRAFFICMGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-TRAFFICMGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:19:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
hm2ConfigurationMibs, HmEnabledStatus = mibBuilder.importSymbols("HM2-TC-MIB", "hm2ConfigurationMibs", "HmEnabledStatus")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Counter32, IpAddress, TimeTicks, Gauge32, Counter64, ModuleIdentity, Bits, MibIdentifier, Integer32, NotificationType, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "IpAddress", "TimeTicks", "Gauge32", "Counter64", "ModuleIdentity", "Bits", "MibIdentifier", "Integer32", "NotificationType", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hm2TrafficMgmtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 11, 31))
hm2TrafficMgmtMib.setRevisions(('2011-03-16 00:00',))
if mibBuilder.loadTexts: hm2TrafficMgmtMib.setLastUpdated('201103160000Z')
if mibBuilder.loadTexts: hm2TrafficMgmtMib.setOrganization('Hirschmann Automation and Control GmbH')
hm2TrafficMgmtMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 31, 0))
hm2TrafficMgmtMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 31, 1))
hm2TrafficMgmtIfTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1), )
if mibBuilder.loadTexts: hm2TrafficMgmtIfTable.setStatus('current')
hm2TrafficMgmtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hm2TrafficMgmtIfEntry.setStatus('current')
hm2TrafficMgmtIfFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 1), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfFlowControl.setStatus('current')
hm2TrafficMgmtIfEgressShapingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfEgressShapingRate.setStatus('current')
hm2TrafficMgmtIfEgressShapingRateUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("kbps", 2))).clone('percent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2TrafficMgmtIfEgressShapingRateUnit.setStatus('current')
hm2TrafficMgmtIfIngressStormCtlThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfIngressStormCtlThresholdUnit.setStatus('current')
hm2TrafficMgmtIfIngressStormCtlBcastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 5), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfIngressStormCtlBcastMode.setStatus('current')
hm2TrafficMgmtIfIngressStormCtlBcastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfIngressStormCtlBcastThreshold.setStatus('current')
hm2TrafficMgmtIfIngressStormCtlMcastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 7), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfIngressStormCtlMcastMode.setStatus('current')
hm2TrafficMgmtIfIngressStormCtlMcastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfIngressStormCtlMcastThreshold.setStatus('current')
hm2TrafficMgmtIfIngressStormCtlUcastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 9), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfIngressStormCtlUcastMode.setStatus('current')
hm2TrafficMgmtIfIngressStormCtlUcastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtIfIngressStormCtlUcastThreshold.setStatus('current')
hm2TrafficMgmtFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 2), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2TrafficMgmtFlowControl.setStatus('current')
hm2TrafficMgmtIngressStormBucketType = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 31, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("single-bucket", 1), ("multi-bucket", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2TrafficMgmtIngressStormBucketType.setStatus('current')
mibBuilder.exportSymbols("HM2-TRAFFICMGMT-MIB", hm2TrafficMgmtIfIngressStormCtlBcastThreshold=hm2TrafficMgmtIfIngressStormCtlBcastThreshold, PYSNMP_MODULE_ID=hm2TrafficMgmtMib, hm2TrafficMgmtIngressStormBucketType=hm2TrafficMgmtIngressStormBucketType, hm2TrafficMgmtIfEgressShapingRateUnit=hm2TrafficMgmtIfEgressShapingRateUnit, hm2TrafficMgmtMibNotifications=hm2TrafficMgmtMibNotifications, hm2TrafficMgmtIfIngressStormCtlBcastMode=hm2TrafficMgmtIfIngressStormCtlBcastMode, hm2TrafficMgmtIfIngressStormCtlThresholdUnit=hm2TrafficMgmtIfIngressStormCtlThresholdUnit, hm2TrafficMgmtIfIngressStormCtlMcastThreshold=hm2TrafficMgmtIfIngressStormCtlMcastThreshold, hm2TrafficMgmtIfTable=hm2TrafficMgmtIfTable, hm2TrafficMgmtFlowControl=hm2TrafficMgmtFlowControl, hm2TrafficMgmtIfIngressStormCtlMcastMode=hm2TrafficMgmtIfIngressStormCtlMcastMode, hm2TrafficMgmtIfIngressStormCtlUcastMode=hm2TrafficMgmtIfIngressStormCtlUcastMode, hm2TrafficMgmtIfEgressShapingRate=hm2TrafficMgmtIfEgressShapingRate, hm2TrafficMgmtMib=hm2TrafficMgmtMib, hm2TrafficMgmtIfFlowControl=hm2TrafficMgmtIfFlowControl, hm2TrafficMgmtMibObjects=hm2TrafficMgmtMibObjects, hm2TrafficMgmtIfEntry=hm2TrafficMgmtIfEntry, hm2TrafficMgmtIfIngressStormCtlUcastThreshold=hm2TrafficMgmtIfIngressStormCtlUcastThreshold)
