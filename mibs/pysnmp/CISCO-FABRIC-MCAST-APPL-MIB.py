#
# PySNMP MIB module CISCO-FABRIC-MCAST-APPL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FABRIC-MCAST-APPL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:40:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
CfmPoolIndex, = mibBuilder.importSymbols("CISCO-FABRIC-MCAST-MIB", "CfmPoolIndex")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entLogicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entLogicalIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Unsigned32, Counter32, Integer32, Counter64, NotificationType, MibIdentifier, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "Counter32", "Integer32", "Counter64", "NotificationType", "MibIdentifier", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "IpAddress", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoFabricMcastApplMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 256))
ciscoFabricMcastApplMIB.setRevisions(('2002-12-18 00:00',))
if mibBuilder.loadTexts: ciscoFabricMcastApplMIB.setLastUpdated('200212180000Z')
if mibBuilder.loadTexts: ciscoFabricMcastApplMIB.setOrganization('Cisco Systems, Inc.')
ciscoFabricMcastApplMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 1))
cfmaAppl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1))
cfmaApplTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1), )
if mibBuilder.loadTexts: cfmaApplTable.setStatus('current')
cfmaApplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entLogicalIndex"), (0, "CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplId"))
if mibBuilder.loadTexts: cfmaApplEntry.setStatus('current')
cfmaApplId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cfmaApplId.setStatus('current')
cfmaApplName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmaApplName.setStatus('current')
cfmaApplInuseFgids = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 3), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmaApplInuseFgids.setStatus('current')
cfmaApplHighWaterInuseFGIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 4), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmaApplHighWaterInuseFGIDs.setStatus('current')
cfmaApplPoolId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 256, 1, 1, 1, 1, 5), CfmPoolIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmaApplPoolId.setStatus('current')
cfmaMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 2))
cfmaMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 2, 0))
cfmaMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 3))
cfmaMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 3, 1))
cfmaMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 256, 3, 2))
cfmaMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 256, 3, 1, 1)).setObjects(("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmaMIBCompliance = cfmaMIBCompliance.setStatus('current')
cfmaApplGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 256, 3, 2, 1)).setObjects(("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplName"), ("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplInuseFgids"), ("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplHighWaterInuseFGIDs"), ("CISCO-FABRIC-MCAST-APPL-MIB", "cfmaApplPoolId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmaApplGroup = cfmaApplGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FABRIC-MCAST-APPL-MIB", PYSNMP_MODULE_ID=ciscoFabricMcastApplMIB, cfmaApplInuseFgids=cfmaApplInuseFgids, cfmaMIBNotifications=cfmaMIBNotifications, ciscoFabricMcastApplMIBObjects=ciscoFabricMcastApplMIBObjects, cfmaApplId=cfmaApplId, cfmaApplName=cfmaApplName, cfmaMIBConformance=cfmaMIBConformance, cfmaApplGroup=cfmaApplGroup, cfmaApplTable=cfmaApplTable, cfmaAppl=cfmaAppl, cfmaApplPoolId=cfmaApplPoolId, cfmaMIBCompliance=cfmaMIBCompliance, cfmaMIBNotificationPrefix=cfmaMIBNotificationPrefix, cfmaMIBCompliances=cfmaMIBCompliances, cfmaApplEntry=cfmaApplEntry, cfmaMIBGroups=cfmaMIBGroups, cfmaApplHighWaterInuseFGIDs=cfmaApplHighWaterInuseFGIDs, ciscoFabricMcastApplMIB=ciscoFabricMcastApplMIB)
