#
# PySNMP MIB module WWP-LEOS-SYSLOG-COLLECTOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-SYSLOG-COLLECTOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, Unsigned32, IpAddress, Bits, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, ObjectIdentity, NotificationType, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "Unsigned32", "IpAddress", "Bits", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "ObjectIdentity", "NotificationType", "iso", "Counter64")
TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosSyslogCollectorMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21))
wwpLeosSyslogCollectorMIB.setRevisions(('2012-04-05 00:00', '2006-04-18 10:12', '2003-01-21 10:12',))
if mibBuilder.loadTexts: wwpLeosSyslogCollectorMIB.setLastUpdated('201204050000Z')
if mibBuilder.loadTexts: wwpLeosSyslogCollectorMIB.setOrganization(' Ciena Inc')
class SyslogFacility(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))
    namedValues = NamedValues(("kernel", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authPriv", 10), ("ftp", 11), ("ntp", 12), ("security", 13), ("console", 14), ("clockd2", 15), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23), ("noMap", 24))

class SyslogSeverity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 99))
    namedValues = NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7), ("other", 99))

wwpLeosSyslogCollMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1))
wwpLeosSyslogSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 1))
wwpLeosSyslogColl = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2))
wwpLeosSyslogCollMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 2))
wwpLeosSyslogCollMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 2, 0))
wwpLeosSyslogCollMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 3))
wwpLeosSyslogCollMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 3, 1))
wwpLeosSyslogCollMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 3, 2))
wwpLeosSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSyslogEnable.setStatus('current')
wwpLeosSyslogCollectorTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1), )
if mibBuilder.loadTexts: wwpLeosSyslogCollectorTable.setStatus('current')
wwpLeosSyslogCollectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1), ).setIndexNames((0, "WWP-LEOS-SYSLOG-COLLECTOR-MIB", "wwpLeosSyslogIndex"))
if mibBuilder.loadTexts: wwpLeosSyslogCollectorEntry.setStatus('current')
wwpLeosSyslogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: wwpLeosSyslogIndex.setStatus('current')
wwpLeosSyslogCollectorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorAddr.setStatus('current')
wwpLeosSyslogCollectorResolvedAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorResolvedAddr.setStatus('current')
wwpLeosSyslogCollectorUDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(514)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorUDPPort.setStatus('current')
wwpLeosSyslogCollectorFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 5), SyslogFacility().clone('daemon')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorFacility.setStatus('current')
wwpLeosSyslogCollectorMinSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 6), SyslogSeverity().clone('alert')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorMinSeverity.setStatus('deprecated')
wwpLeosSyslogCollectorMaxSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 7), SyslogSeverity().clone('emergency')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorMaxSeverity.setStatus('deprecated')
wwpLeosSyslogCollectorUserAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorUserAdminState.setStatus('current')
wwpLeosSyslogCollectorDhcpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorDhcpAdminState.setStatus('current')
wwpLeosSyslogCollectorOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorOperState.setStatus('current')
wwpLeosSyslogCollectorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorStatus.setStatus('current')
wwpLeosSyslogCollectorCustomPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorCustomPrefix.setStatus('current')
wwpLeosSyslogCollectorResolvedInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 13), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorResolvedInetAddrType.setStatus('current')
wwpLeosSyslogCollectorResolvedInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 1, 1, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorResolvedInetAddress.setStatus('current')
wwpLeosSyslogCollectorSeverityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 2), )
if mibBuilder.loadTexts: wwpLeosSyslogCollectorSeverityTable.setStatus('current')
wwpLeosSyslogCollectorSeverityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 2, 1), ).setIndexNames((0, "WWP-LEOS-SYSLOG-COLLECTOR-MIB", "wwpLeosSyslogIndex"), (0, "WWP-LEOS-SYSLOG-COLLECTOR-MIB", "wwpLeosSyslogCollectorSeverity"))
if mibBuilder.loadTexts: wwpLeosSyslogCollectorSeverityEntry.setStatus('current')
wwpLeosSyslogCollectorSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 2, 1, 1), SyslogSeverity())
if mibBuilder.loadTexts: wwpLeosSyslogCollectorSeverity.setStatus('current')
wwpLeosSyslogCollectorSeverityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 21, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosSyslogCollectorSeverityRowStatus.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-SYSLOG-COLLECTOR-MIB", wwpLeosSyslogCollectorResolvedInetAddress=wwpLeosSyslogCollectorResolvedInetAddress, wwpLeosSyslogCollectorEntry=wwpLeosSyslogCollectorEntry, PYSNMP_MODULE_ID=wwpLeosSyslogCollectorMIB, wwpLeosSyslogCollMIBCompliances=wwpLeosSyslogCollMIBCompliances, wwpLeosSyslogCollectorTable=wwpLeosSyslogCollectorTable, wwpLeosSyslogCollectorResolvedInetAddrType=wwpLeosSyslogCollectorResolvedInetAddrType, wwpLeosSyslogCollMIBNotifications=wwpLeosSyslogCollMIBNotifications, SyslogFacility=SyslogFacility, wwpLeosSyslogSystem=wwpLeosSyslogSystem, wwpLeosSyslogCollectorSeverityEntry=wwpLeosSyslogCollectorSeverityEntry, wwpLeosSyslogIndex=wwpLeosSyslogIndex, wwpLeosSyslogCollMIBGroups=wwpLeosSyslogCollMIBGroups, wwpLeosSyslogCollectorUserAdminState=wwpLeosSyslogCollectorUserAdminState, wwpLeosSyslogCollectorMIB=wwpLeosSyslogCollectorMIB, wwpLeosSyslogCollMIBConformance=wwpLeosSyslogCollMIBConformance, wwpLeosSyslogCollectorResolvedAddr=wwpLeosSyslogCollectorResolvedAddr, wwpLeosSyslogCollectorFacility=wwpLeosSyslogCollectorFacility, wwpLeosSyslogCollectorSeverityTable=wwpLeosSyslogCollectorSeverityTable, wwpLeosSyslogCollectorAddr=wwpLeosSyslogCollectorAddr, wwpLeosSyslogColl=wwpLeosSyslogColl, wwpLeosSyslogCollectorStatus=wwpLeosSyslogCollectorStatus, wwpLeosSyslogCollectorUDPPort=wwpLeosSyslogCollectorUDPPort, wwpLeosSyslogCollectorOperState=wwpLeosSyslogCollectorOperState, wwpLeosSyslogCollectorMaxSeverity=wwpLeosSyslogCollectorMaxSeverity, wwpLeosSyslogCollectorSeverity=wwpLeosSyslogCollectorSeverity, wwpLeosSyslogCollectorSeverityRowStatus=wwpLeosSyslogCollectorSeverityRowStatus, wwpLeosSyslogCollMIBObjects=wwpLeosSyslogCollMIBObjects, wwpLeosSyslogCollMIBNotificationPrefix=wwpLeosSyslogCollMIBNotificationPrefix, wwpLeosSyslogCollectorCustomPrefix=wwpLeosSyslogCollectorCustomPrefix, wwpLeosSyslogCollectorDhcpAdminState=wwpLeosSyslogCollectorDhcpAdminState, wwpLeosSyslogCollectorMinSeverity=wwpLeosSyslogCollectorMinSeverity, wwpLeosSyslogEnable=wwpLeosSyslogEnable, SyslogSeverity=SyslogSeverity)
