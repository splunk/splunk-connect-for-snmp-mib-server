#
# PySNMP MIB module HPN-ICF-POWER-ETH-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-POWER-ETH-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
pethMainPseGroupIndex, pethPsePortGroupIndex, pethPsePortDetectionStatus, pethPsePortIndex = mibBuilder.importSymbols("POWER-ETHERNET-MIB", "pethMainPseGroupIndex", "pethPsePortGroupIndex", "pethPsePortDetectionStatus", "pethPsePortIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, ObjectIdentity, IpAddress, iso, ModuleIdentity, Bits, TimeTicks, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "IpAddress", "iso", "ModuleIdentity", "Bits", "TimeTicks", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64", "Integer32", "NotificationType")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hpnicfPowerEthernetExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14))
if mibBuilder.loadTexts: hpnicfPowerEthernetExt.setLastUpdated('200407261023Z')
if mibBuilder.loadTexts: hpnicfPowerEthernetExt.setOrganization('')
hpnicfPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 1), )
if mibBuilder.loadTexts: hpnicfPsePortTable.setStatus('current')
hpnicfPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 1, 1), ).setIndexNames((0, "POWER-ETHERNET-MIB", "pethPsePortGroupIndex"), (0, "POWER-ETHERNET-MIB", "pethPsePortIndex"))
if mibBuilder.loadTexts: hpnicfPsePortEntry.setStatus('current')
hpnicfPsePortFaultDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPsePortFaultDescription.setStatus('current')
hpnicfPsePortPeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPsePortPeakPower.setStatus('current')
hpnicfPsePortAveragePower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPsePortAveragePower.setStatus('current')
hpnicfPsePortCurrentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPsePortCurrentPower.setStatus('current')
hpnicfPsePortPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPsePortPowerLimit.setStatus('current')
hpnicfPsePortProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPsePortProfileIndex.setStatus('current')
hpnicfMainPseTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2), )
if mibBuilder.loadTexts: hpnicfMainPseTable.setStatus('current')
hpnicfMainPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2, 1), ).setIndexNames((0, "POWER-ETHERNET-MIB", "pethMainPseGroupIndex"))
if mibBuilder.loadTexts: hpnicfMainPseEntry.setStatus('current')
hpnicfMainPsePowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMainPsePowerLimit.setStatus('current')
hpnicfMainPseAveragePower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMainPseAveragePower.setStatus('current')
hpnicfMainPsePeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMainPsePeakPower.setStatus('current')
hpnicfMainGuaranteedPowerRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMainGuaranteedPowerRemaining.setStatus('current')
hpnicfMainPsePriorityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnection", 0), ("non-disconnection", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMainPsePriorityMode.setStatus('current')
hpnicfMainPseLegacy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMainPseLegacy.setStatus('current')
hpnicfMainPsePowerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("low", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMainPsePowerPriority.setStatus('current')
hpnicfPseProfilesTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7), )
if mibBuilder.loadTexts: hpnicfPseProfilesTable.setStatus('current')
hpnicfPseProfilesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1), ).setIndexNames((0, "HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfileIndex"))
if mibBuilder.loadTexts: hpnicfPseProfilesEntry.setStatus('current')
hpnicfPseProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: hpnicfPseProfileIndex.setStatus('current')
hpnicfPseProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPseProfileName.setStatus('current')
hpnicfPseProfilePowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("powerDisabled", 1), ("powerEnabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPseProfilePowerMode.setStatus('current')
hpnicfPseProfilePowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15400))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPseProfilePowerLimit.setStatus('current')
hpnicfPseProfilePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("low", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPseProfilePriority.setStatus('current')
hpnicfPseProfilePairs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("signal", 1), ("spare", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPseProfilePairs.setStatus('current')
hpnicfPseProfileApplyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPseProfileApplyNum.setStatus('current')
hpnicfPseProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPseProfileRowStatus.setStatus('current')
hpnicfPseAutoDetectActive = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPseAutoDetectActive.setStatus('current')
hpnicfPsePowerMaxValue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPsePowerMaxValue.setStatus('current')
hpnicfPsePolicyMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPsePolicyMode.setStatus('current')
hpnicfPDPolicyMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPDPolicyMode.setStatus('current')
hpnicfpseportNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6))
hpnicfpsePDChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 1)).setObjects(("POWER-ETHERNET-MIB", "pethPsePortDetectionStatus"))
if mibBuilder.loadTexts: hpnicfpsePDChangeNotification.setStatus('current')
hpnicfPOEDisconnectNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 2)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleDisconnect"))
if mibBuilder.loadTexts: hpnicfPOEDisconnectNotification.setStatus('current')
hpnicfPOEInputErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 3)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleInputError"))
if mibBuilder.loadTexts: hpnicfPOEInputErrorNotification.setStatus('current')
hpnicfPOEOutputErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 4)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleOutputError"))
if mibBuilder.loadTexts: hpnicfPOEOutputErrorNotification.setStatus('current')
hpnicfPOEOverVoltageNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 5)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleOverVoltage"))
if mibBuilder.loadTexts: hpnicfPOEOverVoltageNotification.setStatus('current')
hpnicfPOEOverTempNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 6)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleOverTemp"))
if mibBuilder.loadTexts: hpnicfPOEOverTempNotification.setStatus('current')
hpnicfPOEFanErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 7)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleFanError"))
if mibBuilder.loadTexts: hpnicfPOEFanErrorNotification.setStatus('current')
hpnicfPOEModuleShutdownNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 8)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleShutdown"))
if mibBuilder.loadTexts: hpnicfPOEModuleShutdownNotification.setStatus('current')
hpnicfPOECurRestrictedNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 9)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleCurRestricted"))
if mibBuilder.loadTexts: hpnicfPOECurRestrictedNotification.setStatus('current')
hpnicfPOEACSwitchNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 10)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEACSwitchStateIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEACSwitchState"))
if mibBuilder.loadTexts: hpnicfPOEACSwitchNotification.setStatus('current')
hpnicfPOEACInCurANotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 11)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEInCurAState"))
if mibBuilder.loadTexts: hpnicfPOEACInCurANotification.setStatus('current')
hpnicfPOEACInCurBNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 12)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEInCurBState"))
if mibBuilder.loadTexts: hpnicfPOEACInCurBNotification.setStatus('current')
hpnicfPOEACInCurCNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 13)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEInCurCState"))
if mibBuilder.loadTexts: hpnicfPOEACInCurCNotification.setStatus('current')
hpnicfPOEACSwitchVolABNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 14)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESwitchStateVolExIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESwitchStateInVolAB"))
if mibBuilder.loadTexts: hpnicfPOEACSwitchVolABNotification.setStatus('current')
hpnicfPOEACSwitchVolBCNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 15)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESwitchStateVolExIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESwitchStateInVolBC"))
if mibBuilder.loadTexts: hpnicfPOEACSwitchVolBCNotification.setStatus('current')
hpnicfPOEACSwitchVolCANotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 16)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESwitchStateVolExIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESwitchStateInVolCA"))
if mibBuilder.loadTexts: hpnicfPOEACSwitchVolCANotification.setStatus('current')
hpnicfPOEDCOutVolNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 17)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEDCOutStateIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEDCOutDCVolAlarm"))
if mibBuilder.loadTexts: hpnicfPOEDCOutVolNotification.setStatus('current')
hpnicfPOEShutdownNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 6, 18))
if mibBuilder.loadTexts: hpnicfPOEShutdownNotification.setStatus('current')
hpnicfPseComformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4))
hpnicfPseCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 1))
hpnicfPseCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 1, 1)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePortGroup"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfMainPseGroup"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseScalarGroup"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePDNotificationGroup"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfilesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPseCompliance = hpnicfPseCompliance.setStatus('current')
hpnicfPseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2))
hpnicfPsePortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 1)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePortProfileIndex"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePortPowerLimit"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePortCurrentPower"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePortAveragePower"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePortPeakPower"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePortFaultDescription"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfMainPsePriorityMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPsePortGroup = hpnicfPsePortGroup.setStatus('current')
hpnicfMainPseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 2)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfMainPsePowerLimit"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfMainPseAveragePower"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfMainPsePeakPower"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfMainGuaranteedPowerRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfMainPseGroup = hpnicfMainPseGroup.setStatus('current')
hpnicfPseScalarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 3)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseAutoDetectActive"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePowerMaxValue"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPsePolicyMode"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPDPolicyMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPseScalarGroup = hpnicfPseScalarGroup.setStatus('current')
hpnicfPsePDNotificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 4)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfpsePDChangeNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPsePDNotificationGroup = hpnicfPsePDNotificationGroup.setStatus('current')
hpnicfPseProfilesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 5)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfileName"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfilePowerMode"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfilePowerLimit"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfilePriority"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfilePairs"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfileApplyNum"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPseProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPseProfilesGroup = hpnicfPseProfilesGroup.setStatus('current')
hpnicfPOEPowerThresholdLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 6)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEThresholdACMimimum"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEThresholdACMaximum"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEThresholdDCMinimum"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEThresholdDCMaximum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPOEPowerThresholdLimitGroup = hpnicfPOEPowerThresholdLimitGroup.setStatus('current')
hpnicfPOEPowerSupInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 7)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEPowerType"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEPowerModuleNum"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESupervisionModuleName"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESMMajorVersion"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESMMinorVersion"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESMFactorName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPOEPowerSupInfoGroup = hpnicfPOEPowerSupInfoGroup.setStatus('current')
hpnicfPOEPowerDCOutStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 8)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEDCOutStateModuleNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPOEPowerDCOutStateGroup = hpnicfPOEPowerDCOutStateGroup.setStatus('current')
hpnicfPOEPowerDCOutInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 9)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEDCOutCurNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPOEPowerDCOutInfoGroup = hpnicfPOEPowerDCOutInfoGroup.setStatus('current')
hpnicfPOEPowerACSwitchStateModuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 10)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEACSwitchStateModuleNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPOEPowerACSwitchStateModuleGroup = hpnicfPOEPowerACSwitchStateModuleGroup.setStatus('current')
hpnicfPOEPowerInCurStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 11)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEInCurStateModuleNum"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEInCurAState"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEInCurBState"), ("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEInCurCState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPOEPowerInCurStateGroup = hpnicfPOEPowerInCurStateGroup.setStatus('current')
hpnicfPOEPowerAlarmStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 4, 2, 12)).setObjects(("HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmStateModuleNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfPOEPowerAlarmStateGroup = hpnicfPOEPowerAlarmStateGroup.setStatus('current')
class ACAlarmState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("normal", 1), ("underLimit", 2), ("aboveLimit", 3), ("lackPhrase", 4), ("fuseBroken", 5), ("switchOff", 6), ("otherError", 7))

class DCAlarmState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("normal", 1), ("underLimit", 2), ("aboveLimit", 3), ("fuseBroken", 4), ("switchOff", 5), ("otherError", 6))

class SwitchState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("on", 1), ("off", 2), ("highVoltInput", 3), ("lowVoltInput", 4))

class ModuleAlarmState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("normal", 1), ("alarm", 2))

hpnicfPOEPowerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8))
hpnicfPOEThresholdLimitObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 1))
hpnicfPOEThresholdACMimimum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPOEThresholdACMimimum.setStatus('current')
hpnicfPOEThresholdACMaximum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPOEThresholdACMaximum.setStatus('current')
hpnicfPOEThresholdDCMinimum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPOEThresholdDCMinimum.setStatus('current')
hpnicfPOEThresholdDCMaximum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPOEThresholdDCMaximum.setStatus('current')
hpnicfPOESupModuleInfoObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2))
hpnicfPOEPowerType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEPowerType.setStatus('current')
hpnicfPOEPowerModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEPowerModuleNum.setStatus('current')
hpnicfPOESupervisionModuleName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOESupervisionModuleName.setStatus('current')
hpnicfPOESMMajorVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOESMMajorVersion.setStatus('current')
hpnicfPOESMMinorVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOESMMinorVersion.setStatus('current')
hpnicfPOESMFactorName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOESMFactorName.setStatus('current')
hpnicfPOEModuleInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 7), )
if mibBuilder.loadTexts: hpnicfPOEModuleInfoTable.setStatus('current')
hpnicfPOEModuleInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 7, 1), ).setIndexNames((0, "HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEModuleIndex"))
if mibBuilder.loadTexts: hpnicfPOEModuleInfoEntry.setStatus('current')
hpnicfPOEModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPOEModuleIndex.setStatus('current')
hpnicfPOEModuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleID.setStatus('current')
hpnicfPOEModuleInfoPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleInfoPower.setStatus('current')
hpnicfPOEModuleHardVerInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 2, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleHardVerInfo.setStatus('current')
hpnicfPOEDCOutStateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 3))
hpnicfPOEDCOutStateModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEDCOutStateModuleNum.setStatus('current')
hpnicfPOEDCOutStateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 3, 2), )
if mibBuilder.loadTexts: hpnicfPOEDCOutStateTable.setStatus('current')
hpnicfPOEDCOutStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 3, 2, 1), ).setIndexNames((0, "HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEDCOutStateIndex"))
if mibBuilder.loadTexts: hpnicfPOEDCOutStateEntry.setStatus('current')
hpnicfPOEDCOutStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPOEDCOutStateIndex.setStatus('current')
hpnicfPOEDCOutDCVolAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 3, 2, 1, 2), DCAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEDCOutDCVolAlarm.setStatus('current')
hpnicfPOEDCOutInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 4))
hpnicfPOEDCOutCurNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEDCOutCurNum.setStatus('current')
hpnicfPOEDCOutInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 4, 2), )
if mibBuilder.loadTexts: hpnicfPOEDCOutInfoTable.setStatus('current')
hpnicfPOEDCOutInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 4, 2, 1), ).setIndexNames((0, "HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEDCOutInfoIndex"))
if mibBuilder.loadTexts: hpnicfPOEDCOutInfoEntry.setStatus('current')
hpnicfPOEDCOutInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPOEDCOutInfoIndex.setStatus('current')
hpnicfPOEDCOutVol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEDCOutVol.setStatus('current')
hpnicfPOEDCOutInfoLoadCur = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEDCOutInfoLoadCur.setStatus('current')
hpnicfPOEACSwitchStateModuleObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 5))
hpnicfPOEACSwitchStateModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEACSwitchStateModuleNum.setStatus('current')
hpnicfPOEACSwitchStateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 5, 2), )
if mibBuilder.loadTexts: hpnicfPOEACSwitchStateTable.setStatus('current')
hpnicfPOEACSwitchStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 5, 2, 1), ).setIndexNames((0, "HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEACSwitchStateIndex"))
if mibBuilder.loadTexts: hpnicfPOEACSwitchStateEntry.setStatus('current')
hpnicfPOEACSwitchStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPOEACSwitchStateIndex.setStatus('current')
hpnicfPOEACSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 5, 2, 1, 2), SwitchState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEACSwitchState.setStatus('current')
hpnicfPOEInCurStateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6))
hpnicfPOEInCurStateModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEInCurStateModuleNum.setStatus('current')
hpnicfPOEInCurAState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 2), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEInCurAState.setStatus('current')
hpnicfPOEInCurBState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 3), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEInCurBState.setStatus('current')
hpnicfPOEInCurCState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 4), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEInCurCState.setStatus('current')
hpnicfPOESwitchStateVolExTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 5), )
if mibBuilder.loadTexts: hpnicfPOESwitchStateVolExTable.setStatus('current')
hpnicfPOESwitchStateVolExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 5, 1), ).setIndexNames((0, "HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOESwitchStateVolExIndex"))
if mibBuilder.loadTexts: hpnicfPOESwitchStateVolExEntry.setStatus('current')
hpnicfPOESwitchStateVolExIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPOESwitchStateVolExIndex.setStatus('current')
hpnicfPOESwitchStateInVolAB = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 5, 1, 2), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOESwitchStateInVolAB.setStatus('current')
hpnicfPOESwitchStateInVolBC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 5, 1, 3), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOESwitchStateInVolBC.setStatus('current')
hpnicfPOESwitchStateInVolCA = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 6, 5, 1, 4), ACAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOESwitchStateInVolCA.setStatus('current')
hpnicfPOEAlarmStateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7))
hpnicfPOEAlarmStateModuleNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEAlarmStateModuleNum.setStatus('current')
hpnicfPOEAlarmStateInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2), )
if mibBuilder.loadTexts: hpnicfPOEAlarmStateInfoTable.setStatus('current')
hpnicfPOEAlarmStateInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1), ).setIndexNames((0, "HPN-ICF-POWER-ETH-EXT-MIB", "hpnicfPOEAlarmModuleInfoIndex"))
if mibBuilder.loadTexts: hpnicfPOEAlarmStateInfoEntry.setStatus('current')
hpnicfPOEAlarmModuleInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPOEAlarmModuleInfoIndex.setStatus('current')
hpnicfPOEModuleDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 2), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleDisconnect.setStatus('current')
hpnicfPOEModuleInputError = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 3), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleInputError.setStatus('current')
hpnicfPOEModuleOutputError = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 4), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleOutputError.setStatus('current')
hpnicfPOEModuleOverVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 5), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleOverVoltage.setStatus('current')
hpnicfPOEModuleOverTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 6), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleOverTemp.setStatus('current')
hpnicfPOEModuleFanError = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 7), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleFanError.setStatus('current')
hpnicfPOEModuleShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 8), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleShutdown.setStatus('current')
hpnicfPOEModuleCurRestricted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 14, 8, 7, 2, 1, 9), ModuleAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPOEModuleCurRestricted.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-POWER-ETH-EXT-MIB", hpnicfMainPseEntry=hpnicfMainPseEntry, ACAlarmState=ACAlarmState, hpnicfPOEACInCurANotification=hpnicfPOEACInCurANotification, hpnicfPOEDCOutStateObjects=hpnicfPOEDCOutStateObjects, hpnicfPsePortTable=hpnicfPsePortTable, hpnicfPOEModuleShutdownNotification=hpnicfPOEModuleShutdownNotification, hpnicfMainPsePriorityMode=hpnicfMainPsePriorityMode, hpnicfPOEModuleInfoTable=hpnicfPOEModuleInfoTable, hpnicfPOEDCOutInfoObjects=hpnicfPOEDCOutInfoObjects, hpnicfPseProfilePriority=hpnicfPseProfilePriority, hpnicfPOEInputErrorNotification=hpnicfPOEInputErrorNotification, hpnicfPOEDisconnectNotification=hpnicfPOEDisconnectNotification, hpnicfPOEModuleInfoEntry=hpnicfPOEModuleInfoEntry, hpnicfPOEDCOutInfoLoadCur=hpnicfPOEDCOutInfoLoadCur, hpnicfPOEPowerSupInfoGroup=hpnicfPOEPowerSupInfoGroup, hpnicfPOEOutputErrorNotification=hpnicfPOEOutputErrorNotification, hpnicfPOEModuleFanError=hpnicfPOEModuleFanError, hpnicfpsePDChangeNotification=hpnicfpsePDChangeNotification, hpnicfPOEInCurStateObjects=hpnicfPOEInCurStateObjects, hpnicfPOEPowerACSwitchStateModuleGroup=hpnicfPOEPowerACSwitchStateModuleGroup, SwitchState=SwitchState, hpnicfPOEInCurCState=hpnicfPOEInCurCState, hpnicfPOESMFactorName=hpnicfPOESMFactorName, hpnicfPseComformance=hpnicfPseComformance, hpnicfPOEDCOutInfoEntry=hpnicfPOEDCOutInfoEntry, hpnicfPseProfilePairs=hpnicfPseProfilePairs, hpnicfPseAutoDetectActive=hpnicfPseAutoDetectActive, ModuleAlarmState=ModuleAlarmState, hpnicfPOEDCOutDCVolAlarm=hpnicfPOEDCOutDCVolAlarm, hpnicfPseProfilesEntry=hpnicfPseProfilesEntry, hpnicfPOEDCOutStateModuleNum=hpnicfPOEDCOutStateModuleNum, hpnicfPOEPowerDCOutStateGroup=hpnicfPOEPowerDCOutStateGroup, hpnicfPOESwitchStateInVolAB=hpnicfPOESwitchStateInVolAB, hpnicfpseportNotification=hpnicfpseportNotification, hpnicfPOEDCOutVol=hpnicfPOEDCOutVol, hpnicfPOEACInCurBNotification=hpnicfPOEACInCurBNotification, hpnicfMainGuaranteedPowerRemaining=hpnicfMainGuaranteedPowerRemaining, hpnicfPOEPowerModuleNum=hpnicfPOEPowerModuleNum, hpnicfPsePortEntry=hpnicfPsePortEntry, hpnicfPOEThresholdACMimimum=hpnicfPOEThresholdACMimimum, hpnicfMainPseAveragePower=hpnicfMainPseAveragePower, hpnicfPOEDCOutStateEntry=hpnicfPOEDCOutStateEntry, hpnicfPOEDCOutStateTable=hpnicfPOEDCOutStateTable, hpnicfPOEModuleID=hpnicfPOEModuleID, hpnicfPOEAlarmStateInfoTable=hpnicfPOEAlarmStateInfoTable, hpnicfPOEPowerInCurStateGroup=hpnicfPOEPowerInCurStateGroup, hpnicfPOEACSwitchStateTable=hpnicfPOEACSwitchStateTable, hpnicfPseProfileApplyNum=hpnicfPseProfileApplyNum, hpnicfPOEPowerType=hpnicfPOEPowerType, hpnicfPOEThresholdACMaximum=hpnicfPOEThresholdACMaximum, hpnicfPsePDNotificationGroup=hpnicfPsePDNotificationGroup, hpnicfMainPsePeakPower=hpnicfMainPsePeakPower, hpnicfPOEACSwitchStateEntry=hpnicfPOEACSwitchStateEntry, hpnicfPsePowerMaxValue=hpnicfPsePowerMaxValue, hpnicfPseProfileRowStatus=hpnicfPseProfileRowStatus, hpnicfPOEACSwitchVolBCNotification=hpnicfPOEACSwitchVolBCNotification, hpnicfPseProfilesGroup=hpnicfPseProfilesGroup, hpnicfPsePortAveragePower=hpnicfPsePortAveragePower, hpnicfPOEModuleHardVerInfo=hpnicfPOEModuleHardVerInfo, hpnicfPDPolicyMode=hpnicfPDPolicyMode, hpnicfPOEShutdownNotification=hpnicfPOEShutdownNotification, hpnicfPOESMMajorVersion=hpnicfPOESMMajorVersion, hpnicfPseProfileIndex=hpnicfPseProfileIndex, hpnicfPOEInCurBState=hpnicfPOEInCurBState, hpnicfPOEPowerAlarmStateGroup=hpnicfPOEPowerAlarmStateGroup, hpnicfPOESupModuleInfoObjs=hpnicfPOESupModuleInfoObjs, hpnicfPOESwitchStateVolExTable=hpnicfPOESwitchStateVolExTable, hpnicfPOESwitchStateInVolCA=hpnicfPOESwitchStateInVolCA, hpnicfMainPseLegacy=hpnicfMainPseLegacy, hpnicfPOEModuleInputError=hpnicfPOEModuleInputError, hpnicfPOEPowerThresholdLimitGroup=hpnicfPOEPowerThresholdLimitGroup, hpnicfPOEACInCurCNotification=hpnicfPOEACInCurCNotification, hpnicfPOEOverVoltageNotification=hpnicfPOEOverVoltageNotification, hpnicfPOEACSwitchState=hpnicfPOEACSwitchState, hpnicfPOEAlarmStateObjects=hpnicfPOEAlarmStateObjects, hpnicfPsePolicyMode=hpnicfPsePolicyMode, hpnicfPOESupervisionModuleName=hpnicfPOESupervisionModuleName, hpnicfPseScalarGroup=hpnicfPseScalarGroup, hpnicfPseProfilePowerMode=hpnicfPseProfilePowerMode, hpnicfPOEFanErrorNotification=hpnicfPOEFanErrorNotification, hpnicfPOEModuleInfoPower=hpnicfPOEModuleInfoPower, hpnicfPOEAlarmStateInfoEntry=hpnicfPOEAlarmStateInfoEntry, hpnicfPseProfilesTable=hpnicfPseProfilesTable, hpnicfPOEAlarmModuleInfoIndex=hpnicfPOEAlarmModuleInfoIndex, hpnicfPOESwitchStateInVolBC=hpnicfPOESwitchStateInVolBC, PYSNMP_MODULE_ID=hpnicfPowerEthernetExt, hpnicfPOEModuleOutputError=hpnicfPOEModuleOutputError, hpnicfPOEACSwitchVolABNotification=hpnicfPOEACSwitchVolABNotification, hpnicfPOEAlarmStateModuleNum=hpnicfPOEAlarmStateModuleNum, hpnicfPOEDCOutInfoTable=hpnicfPOEDCOutInfoTable, hpnicfPOEModuleOverTemp=hpnicfPOEModuleOverTemp, hpnicfPsePortProfileIndex=hpnicfPsePortProfileIndex, hpnicfPOEOverTempNotification=hpnicfPOEOverTempNotification, hpnicfPsePortFaultDescription=hpnicfPsePortFaultDescription, hpnicfPOECurRestrictedNotification=hpnicfPOECurRestrictedNotification, hpnicfPowerEthernetExt=hpnicfPowerEthernetExt, hpnicfPsePortPeakPower=hpnicfPsePortPeakPower, hpnicfPOEACSwitchNotification=hpnicfPOEACSwitchNotification, DCAlarmState=DCAlarmState, hpnicfPOEModuleCurRestricted=hpnicfPOEModuleCurRestricted, hpnicfPOEModuleShutdown=hpnicfPOEModuleShutdown, hpnicfPseProfileName=hpnicfPseProfileName, hpnicfPOEModuleIndex=hpnicfPOEModuleIndex, hpnicfPseCompliances=hpnicfPseCompliances, hpnicfPOEACSwitchStateModuleObjs=hpnicfPOEACSwitchStateModuleObjs, hpnicfMainPsePowerPriority=hpnicfMainPsePowerPriority, hpnicfPseCompliance=hpnicfPseCompliance, hpnicfPOEACSwitchStateModuleNum=hpnicfPOEACSwitchStateModuleNum, hpnicfPOEDCOutVolNotification=hpnicfPOEDCOutVolNotification, hpnicfPseGroup=hpnicfPseGroup, hpnicfMainPsePowerLimit=hpnicfMainPsePowerLimit, hpnicfPOEModuleDisconnect=hpnicfPOEModuleDisconnect, hpnicfPOESMMinorVersion=hpnicfPOESMMinorVersion, hpnicfPsePortPowerLimit=hpnicfPsePortPowerLimit, hpnicfPOEPowerObjects=hpnicfPOEPowerObjects, hpnicfPOEACSwitchVolCANotification=hpnicfPOEACSwitchVolCANotification, hpnicfPsePortCurrentPower=hpnicfPsePortCurrentPower, hpnicfPOESwitchStateVolExEntry=hpnicfPOESwitchStateVolExEntry, hpnicfPOEThresholdLimitObjs=hpnicfPOEThresholdLimitObjs, hpnicfPOEModuleOverVoltage=hpnicfPOEModuleOverVoltage, hpnicfPOEInCurStateModuleNum=hpnicfPOEInCurStateModuleNum, hpnicfPOEThresholdDCMinimum=hpnicfPOEThresholdDCMinimum, hpnicfMainPseGroup=hpnicfMainPseGroup, hpnicfPOEDCOutCurNum=hpnicfPOEDCOutCurNum, hpnicfMainPseTable=hpnicfMainPseTable, hpnicfPOEDCOutInfoIndex=hpnicfPOEDCOutInfoIndex, hpnicfPsePortGroup=hpnicfPsePortGroup, hpnicfPOEDCOutStateIndex=hpnicfPOEDCOutStateIndex, hpnicfPOEPowerDCOutInfoGroup=hpnicfPOEPowerDCOutInfoGroup, hpnicfPseProfilePowerLimit=hpnicfPseProfilePowerLimit, hpnicfPOEACSwitchStateIndex=hpnicfPOEACSwitchStateIndex, hpnicfPOEInCurAState=hpnicfPOEInCurAState, hpnicfPOEThresholdDCMaximum=hpnicfPOEThresholdDCMaximum, hpnicfPOESwitchStateVolExIndex=hpnicfPOESwitchStateVolExIndex)
