#
# PySNMP MIB module RADLAN-rlFft (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-rlFft
# Produced by pysmi-0.3.4 at Mon Apr 29 20:42:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, TimeTicks, NotificationType, Bits, ObjectIdentity, Integer32, ModuleIdentity, Gauge32, Counter64, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "TimeTicks", "NotificationType", "Bits", "ObjectIdentity", "Integer32", "ModuleIdentity", "Gauge32", "Counter64", "Unsigned32", "IpAddress")
TextualConvention, TruthValue, RowStatus, PhysAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "PhysAddress", "DisplayString")
class Percents(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 100)

class NetNumber(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

rlFFT = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 47))
rlFFT.setRevisions(('2004-06-01 00:00',))
if mibBuilder.loadTexts: rlFFT.setLastUpdated('200406010000Z')
if mibBuilder.loadTexts: rlFFT.setOrganization('')
rlIpFFT = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 47, 1))
rlIpFftMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftMibVersion.setStatus('current')
rlIpMaxFftNumber = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpMaxFftNumber.setStatus('current')
rlIpFftDynamicSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftDynamicSupported.setStatus('current')
rlIpFftSubnetSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubnetSupported.setStatus('current')
rlIpFftUnknownAddrMsgUsed = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("used", 1), ("unused", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftUnknownAddrMsgUsed.setStatus('current')
rlIpFftAgingTimeSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftAgingTimeSupported.setStatus('current')
rlIpFftSrcAddrSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSrcAddrSupported.setStatus('current')
rlIpFftAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpFftAgingTimeout.setStatus('current')
rlIpFftRedBoundary = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 9), Percents()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpFftRedBoundary.setStatus('current')
rlIpFftYellowBoundary = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 1, 10), Percents()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpFftYellowBoundary.setStatus('current')
rlIpFftNumTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 1, 12), )
if mibBuilder.loadTexts: rlIpFftNumTable.setStatus('current')
rlIpFftNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 1, 12, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpFftNumIndex"))
if mibBuilder.loadTexts: rlIpFftNumEntry.setStatus('current')
rlIpFftNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNumIndex.setStatus('current')
rlIpFftNumStnRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNumStnRoutesNumber.setStatus('current')
rlIpFftNumSubRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNumSubRoutesNumber.setStatus('current')
rlIpFftStnTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 1, 13), )
if mibBuilder.loadTexts: rlIpFftStnTable.setStatus('current')
rlIpFftStnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpFftStnIndex"), (0, "RADLAN-rlFft", "rlIpFftStnMrid"), (0, "RADLAN-rlFft", "rlIpFftStnDstIpAddress"))
if mibBuilder.loadTexts: rlIpFftStnEntry.setStatus('current')
rlIpFftStnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnIndex.setStatus('current')
rlIpFftStnMrid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnMrid.setStatus('current')
rlIpFftStnDstIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnDstIpAddress.setStatus('current')
rlIpFftStnDstRouteIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnDstRouteIpMask.setStatus('current')
rlIpFftStnDstIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnDstIpAddrType.setStatus('current')
rlIpFftStnDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnDstMacAddress.setStatus('current')
rlIpFftStnSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnSrcMacAddress.setStatus('current')
rlIpFftStnOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnOutIfIndex.setStatus('current')
rlIpFftStnVid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnVid.setStatus('current')
rlIpFftStnTaggedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("untagged", 1), ("tagged", 2), ("basedPortConfig", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnTaggedMode.setStatus('current')
rlIpFftStnAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 13, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftStnAge.setStatus('current')
rlIpFftSubTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 1, 14), )
if mibBuilder.loadTexts: rlIpFftSubTable.setStatus('current')
rlIpFftSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpFftSubMrid"), (0, "RADLAN-rlFft", "rlIpFftSubDstIpSubnet"), (0, "RADLAN-rlFft", "rlIpFftSubDstIpMask"))
if mibBuilder.loadTexts: rlIpFftSubEntry.setStatus('current')
rlIpFftSubMrid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubMrid.setStatus('current')
rlIpFftSubDstIpSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubDstIpSubnet.setStatus('current')
rlIpFftSubDstIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubDstIpMask.setStatus('current')
rlIpFftSubAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubAge.setStatus('current')
rlIpFftSubNextHopSetRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopSetRefCount.setStatus('current')
rlIpFftSubNextHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopCount.setStatus('current')
rlIpFftSubNextHopIfindex1 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIfindex1.setStatus('current')
rlIpFftSubNextHopIpAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIpAddr1.setStatus('current')
rlIpFftSubNextHopIfindex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIfindex2.setStatus('current')
rlIpFftSubNextHopIpAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIpAddr2.setStatus('current')
rlIpFftSubNextHopIfindex3 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIfindex3.setStatus('current')
rlIpFftSubNextHopIpAddr3 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIpAddr3.setStatus('current')
rlIpFftSubNextHopIfindex4 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIfindex4.setStatus('current')
rlIpFftSubNextHopIpAddr4 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIpAddr4.setStatus('current')
rlIpFftSubNextHopIfindex5 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIfindex5.setStatus('current')
rlIpFftSubNextHopIpAddr5 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIpAddr5.setStatus('current')
rlIpFftSubNextHopIfindex6 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIfindex6.setStatus('current')
rlIpFftSubNextHopIpAddr6 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 18), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIpAddr6.setStatus('current')
rlIpFftSubNextHopIfindex7 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIfindex7.setStatus('current')
rlIpFftSubNextHopIpAddr7 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIpAddr7.setStatus('current')
rlIpFftSubNextHopIfindex8 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIfindex8.setStatus('current')
rlIpFftSubNextHopIpAddr8 = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 14, 1, 22), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftSubNextHopIpAddr8.setStatus('current')
rlIpFftCountersTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 1, 15), )
if mibBuilder.loadTexts: rlIpFftCountersTable.setStatus('current')
rlIpFftCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 1, 15, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpFftCountersIndex"))
if mibBuilder.loadTexts: rlIpFftCountersEntry.setStatus('current')
rlIpFftCountersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftCountersIndex.setStatus('current')
rlIpFftInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftInReceives.setStatus('current')
rlIpFftForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftForwDatagrams.setStatus('current')
rlIpFftInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftInDiscards.setStatus('current')
rlIpFftNextHopTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 1, 16), )
if mibBuilder.loadTexts: rlIpFftNextHopTable.setStatus('current')
rlIpFftNextHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpFftNextHopifindex"), (0, "RADLAN-rlFft", "rlIpFftNextHopIpAddress"))
if mibBuilder.loadTexts: rlIpFftNextHopEntry.setStatus('current')
rlIpFftNextHopifindex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopifindex.setStatus('current')
rlIpFftNextHopIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopIpAddress.setStatus('current')
rlIpFftNextHopValid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopValid.setStatus('current')
rlIpFftNextHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("reject", 3), ("drop", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopType.setStatus('current')
rlIpFftNextHopReferenceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopReferenceCount.setStatus('current')
rlIpFftNextHopNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopNetAddress.setStatus('current')
rlIpFftNextHopVid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopVid.setStatus('current')
rlIpFftNextHopMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 8), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopMacAddress.setStatus('current')
rlIpFftNextHopOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 16, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftNextHopOutIfIndex.setStatus('current')
rlIpFftL2InfoTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 1, 17), )
if mibBuilder.loadTexts: rlIpFftL2InfoTable.setStatus('current')
rlIpFftL2InfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpFftL2InfoIfindex"), (0, "RADLAN-rlFft", "rlIpFftL2InfoDstMacAddress"))
if mibBuilder.loadTexts: rlIpFftL2InfoEntry.setStatus('current')
rlIpFftL2InfoIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoIfindex.setStatus('current')
rlIpFftL2InfoDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoDstMacAddress.setStatus('current')
rlIpFftL2InfoValid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoValid.setStatus('current')
rlIpFftL2InfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("vlan", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoType.setStatus('current')
rlIpFftL2InfoReferenceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoReferenceCount.setStatus('current')
rlIpFftL2InfoVid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoVid.setStatus('current')
rlIpFftL2InfoSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoSrcMacAddress.setStatus('current')
rlIpFftL2InfoOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoOutIfIndex.setStatus('current')
rlIpFftL2InfoTaggedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 1, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("untagged", 1), ("tagged", 2), ("basedPortConfig", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpFftL2InfoTaggedMode.setStatus('current')
rlIpxFFT = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 47, 2))
rlIpxFftMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftMibVersion.setStatus('current')
rlIpxMaxFftNumber = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxMaxFftNumber.setStatus('current')
rlIpxFftDynamicSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftDynamicSupported.setStatus('current')
rlIpxFftNetworkSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftNetworkSupported.setStatus('current')
rlIpxFftUnknownAddrMsgUsed = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("used", 1), ("unused", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftUnknownAddrMsgUsed.setStatus('current')
rlIpxFftAgingTimeSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftAgingTimeSupported.setStatus('current')
rlIpxFftSrcAddrSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSrcAddrSupported.setStatus('current')
rlIpxFftAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpxFftAgingTimeout.setStatus('current')
rlIpxFftRedBoundary = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpxFftRedBoundary.setStatus('current')
rlIpxFftYellowBoundary = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 2, 10), Percents()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpxFftYellowBoundary.setStatus('current')
rlIpxFftNumTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 2, 12), )
if mibBuilder.loadTexts: rlIpxFftNumTable.setStatus('current')
rlIpxFftNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 2, 12, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpxFftNumIndex"))
if mibBuilder.loadTexts: rlIpxFftNumEntry.setStatus('current')
rlIpxFftNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftNumIndex.setStatus('current')
rlIpxFftNumStnRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftNumStnRoutesNumber.setStatus('current')
rlIpxFftNumSubRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftNumSubRoutesNumber.setStatus('current')
rlIpxFftStnTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 2, 13), )
if mibBuilder.loadTexts: rlIpxFftStnTable.setStatus('current')
rlIpxFftStnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpxFftStnIndex"), (0, "RADLAN-rlFft", "rlIpxFftStnDstNetid"), (0, "RADLAN-rlFft", "rlIpxFftStnDstNode"), (0, "RADLAN-rlFft", "rlIpxFftStnSrcNetid"), (0, "RADLAN-rlFft", "rlIpxFftStnSrcNode"))
if mibBuilder.loadTexts: rlIpxFftStnEntry.setStatus('current')
rlIpxFftStnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnIndex.setStatus('current')
rlIpxFftStnDstNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 2), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnDstNetid.setStatus('current')
rlIpxFftStnDstNode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnDstNode.setStatus('current')
rlIpxFftStnSrcNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 4), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnSrcNetid.setStatus('current')
rlIpxFftStnSrcNode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 5), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnSrcNode.setStatus('current')
rlIpxFftStnDstIpxAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnDstIpxAddrType.setStatus('current')
rlIpxFftStnEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("novell", 1), ("ethernet", 2), ("llc", 3), ("snap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnEncapsulation.setStatus('current')
rlIpxFftStnDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 8), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnDstMacAddress.setStatus('current')
rlIpxFftStnSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 9), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnSrcMacAddress.setStatus('current')
rlIpxFftStnOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnOutIfIndex.setStatus('current')
rlIpxFftStnTci = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnTci.setStatus('current')
rlIpxFftStnFacsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnFacsIndex.setStatus('current')
rlIpxFftStnAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 13, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftStnAge.setStatus('current')
rlIpxFftSubTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 2, 14), )
if mibBuilder.loadTexts: rlIpxFftSubTable.setStatus('current')
rlIpxFftSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpxFftSubIndex"), (0, "RADLAN-rlFft", "rlIpxFftSubDstNetid"))
if mibBuilder.loadTexts: rlIpxFftSubEntry.setStatus('current')
rlIpxFftSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubIndex.setStatus('current')
rlIpxFftSubDstNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 2), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubDstNetid.setStatus('current')
rlIpxFftSubEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("novell", 1), ("ethernet", 2), ("llc", 3), ("snap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubEncapsulation.setStatus('current')
rlIpxFftSubDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubDstMacAddress.setStatus('current')
rlIpxFftSubSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 5), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubSrcMacAddress.setStatus('current')
rlIpxFftSubOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubOutIfIndex.setStatus('current')
rlIpxFftSubTci = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubTci.setStatus('current')
rlIpxFftSubFacsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubFacsIndex.setStatus('current')
rlIpxFftSubAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 14, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftSubAge.setStatus('current')
rlIpxFftCountersTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 2, 15), )
if mibBuilder.loadTexts: rlIpxFftCountersTable.setStatus('current')
rlIpxFftCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 2, 15, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpxFftCountersIndex"))
if mibBuilder.loadTexts: rlIpxFftCountersEntry.setStatus('current')
rlIpxFftCountersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftCountersIndex.setStatus('current')
rlIpxFftInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftInReceives.setStatus('current')
rlIpxFftForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftForwDatagrams.setStatus('current')
rlIpxFftInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 2, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpxFftInDiscards.setStatus('current')
rlIpmFFT = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 47, 3))
rlIpmFftMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftMibVersion.setStatus('current')
rlIpmMaxFftNumber = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmMaxFftNumber.setStatus('current')
rlIpmFftDynamicSupported = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftDynamicSupported.setStatus('current')
rlIpmFftUnknownAddrMsgUsed = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("used", 1), ("unused", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftUnknownAddrMsgUsed.setStatus('current')
rlIpmFftUserAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 3, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIpmFftUserAgingTimeout.setStatus('current')
rlIpmFftRouterAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 89, 47, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftRouterAgingTimeout.setStatus('current')
rlIpmFftNumTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 3, 8), )
if mibBuilder.loadTexts: rlIpmFftNumTable.setStatus('current')
rlIpmFftNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 3, 8, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpmFftNumIndex"))
if mibBuilder.loadTexts: rlIpmFftNumEntry.setStatus('current')
rlIpmFftNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftNumIndex.setStatus('current')
rlIpmFftNumRoutesNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftNumRoutesNumber.setStatus('current')
rlIpmFftTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 3, 9), )
if mibBuilder.loadTexts: rlIpmFftTable.setStatus('current')
rlIpmFftEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpmFftIndex"), (0, "RADLAN-rlFft", "rlIpmFftSrcIpAddress"), (0, "RADLAN-rlFft", "rlIpmFftDstIpAddress"))
if mibBuilder.loadTexts: rlIpmFftEntry.setStatus('current')
rlIpmFftIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftIndex.setStatus('current')
rlIpmFftSrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftSrcIpAddress.setStatus('current')
rlIpmFftDstIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftDstIpAddress.setStatus('current')
rlIpmFftSrcIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftSrcIpMask.setStatus('current')
rlIpmFftInputIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInputIfIndex.setStatus('current')
rlIpmFftInputVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInputVlanTag.setStatus('current')
rlIpmFftForwardAction = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftForwardAction.setStatus('current')
rlIpmFftInportAction = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sentToCPU", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInportAction.setStatus('current')
rlIpmFftAge = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftAge.setStatus('current')
rlIpmFftPortTagTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 3, 10), )
if mibBuilder.loadTexts: rlIpmFftPortTagTable.setStatus('current')
rlIpmFftPortTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 3, 10, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpmFftPortIndex"), (0, "RADLAN-rlFft", "rlIpmFftPortSrcIpAddress"), (0, "RADLAN-rlFft", "rlIpmFftPortDstIpAddress"), (0, "RADLAN-rlFft", "rlIpmFftPortOutputifIndex"), (0, "RADLAN-rlFft", "rlIpmFftPortOutputTag"))
if mibBuilder.loadTexts: rlIpmFftPortTagEntry.setStatus('current')
rlIpmFftPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortIndex.setStatus('current')
rlIpmFftPortSrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortSrcIpAddress.setStatus('current')
rlIpmFftPortDstIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortDstIpAddress.setStatus('current')
rlIpmFftPortOutputifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortOutputifIndex.setStatus('current')
rlIpmFftPortOutputTag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftPortOutputTag.setStatus('current')
rlIpmFftCountersTable = MibTable((1, 3, 6, 1, 4, 1, 89, 47, 3, 11), )
if mibBuilder.loadTexts: rlIpmFftCountersTable.setStatus('current')
rlIpmFftCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 47, 3, 11, 1), ).setIndexNames((0, "RADLAN-rlFft", "rlIpmFftCountersIndex"))
if mibBuilder.loadTexts: rlIpmFftCountersEntry.setStatus('current')
rlIpmFftCountersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftCountersIndex.setStatus('current')
rlIpmFftInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInReceives.setStatus('current')
rlIpmFftForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftForwDatagrams.setStatus('current')
rlIpmFftInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 47, 3, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIpmFftInDiscards.setStatus('current')
mibBuilder.exportSymbols("RADLAN-rlFft", rlIpxFftStnDstNode=rlIpxFftStnDstNode, rlIpmFftSrcIpMask=rlIpmFftSrcIpMask, rlIpFftSubNextHopIpAddr5=rlIpFftSubNextHopIpAddr5, rlIpFftNextHopVid=rlIpFftNextHopVid, rlIpxFftNumIndex=rlIpxFftNumIndex, rlIpmFftIndex=rlIpmFftIndex, rlIpmFftRouterAgingTimeout=rlIpmFftRouterAgingTimeout, rlIpmFftInReceives=rlIpmFftInReceives, rlIpFftSubTable=rlIpFftSubTable, rlIpFftL2InfoIfindex=rlIpFftL2InfoIfindex, rlIpmFftMibVersion=rlIpmFftMibVersion, rlIpmFftTable=rlIpmFftTable, rlIpxFftStnDstMacAddress=rlIpxFftStnDstMacAddress, rlIpxFftCountersTable=rlIpxFftCountersTable, rlIpFftYellowBoundary=rlIpFftYellowBoundary, rlIpmFftInDiscards=rlIpmFftInDiscards, rlIpxFftStnFacsIndex=rlIpxFftStnFacsIndex, rlIpmFftInportAction=rlIpmFftInportAction, rlIpFftSubEntry=rlIpFftSubEntry, rlIpFftSubNextHopIpAddr1=rlIpFftSubNextHopIpAddr1, rlIpFftL2InfoOutIfIndex=rlIpFftL2InfoOutIfIndex, rlIpFftNextHopEntry=rlIpFftNextHopEntry, rlIpFftStnDstIpAddrType=rlIpFftStnDstIpAddrType, rlIpMaxFftNumber=rlIpMaxFftNumber, rlIpxFftSubAge=rlIpxFftSubAge, rlIpxFftStnSrcMacAddress=rlIpxFftStnSrcMacAddress, rlIpmFftCountersTable=rlIpmFftCountersTable, rlIpFftCountersTable=rlIpFftCountersTable, rlIpFftAgingTimeSupported=rlIpFftAgingTimeSupported, rlIpxFftForwDatagrams=rlIpxFftForwDatagrams, rlIpxFftUnknownAddrMsgUsed=rlIpxFftUnknownAddrMsgUsed, rlIpmFFT=rlIpmFFT, rlIpFftForwDatagrams=rlIpFftForwDatagrams, rlIpmMaxFftNumber=rlIpmMaxFftNumber, rlIpmFftNumIndex=rlIpmFftNumIndex, rlIpFftStnTable=rlIpFftStnTable, rlIpFftNextHopMacAddress=rlIpFftNextHopMacAddress, rlIpmFftPortTagTable=rlIpmFftPortTagTable, rlIpxFftSubSrcMacAddress=rlIpxFftSubSrcMacAddress, rlIpmFftInputIfIndex=rlIpmFftInputIfIndex, rlIpmFftForwDatagrams=rlIpmFftForwDatagrams, rlIpFftStnIndex=rlIpFftStnIndex, rlFFT=rlFFT, rlIpFftNumEntry=rlIpFftNumEntry, rlIpFftL2InfoEntry=rlIpFftL2InfoEntry, rlIpFftSubNextHopIfindex4=rlIpFftSubNextHopIfindex4, rlIpxFftNumTable=rlIpxFftNumTable, rlIpFftRedBoundary=rlIpFftRedBoundary, rlIpxFftStnEntry=rlIpxFftStnEntry, rlIpmFftAge=rlIpmFftAge, rlIpmFftPortOutputifIndex=rlIpmFftPortOutputifIndex, rlIpFftSubNextHopIfindex1=rlIpFftSubNextHopIfindex1, rlIpxFftMibVersion=rlIpxFftMibVersion, rlIpFftSubNextHopIfindex7=rlIpFftSubNextHopIfindex7, rlIpxFftSubFacsIndex=rlIpxFftSubFacsIndex, rlIpmFftNumRoutesNumber=rlIpmFftNumRoutesNumber, rlIpxFftCountersIndex=rlIpxFftCountersIndex, rlIpFftNumStnRoutesNumber=rlIpFftNumStnRoutesNumber, rlIpFftSubNextHopIpAddr2=rlIpFftSubNextHopIpAddr2, rlIpFftSubNextHopIfindex2=rlIpFftSubNextHopIfindex2, rlIpFftNextHopValid=rlIpFftNextHopValid, rlIpxFftAgingTimeSupported=rlIpxFftAgingTimeSupported, rlIpmFftNumTable=rlIpmFftNumTable, NetNumber=NetNumber, rlIpFftL2InfoReferenceCount=rlIpFftL2InfoReferenceCount, rlIpxFftCountersEntry=rlIpxFftCountersEntry, rlIpFftStnDstMacAddress=rlIpFftStnDstMacAddress, rlIpFftNextHopTable=rlIpFftNextHopTable, rlIpFftL2InfoVid=rlIpFftL2InfoVid, rlIpmFftPortIndex=rlIpmFftPortIndex, rlIpFftL2InfoTable=rlIpFftL2InfoTable, rlIpFftSubNextHopIfindex6=rlIpFftSubNextHopIfindex6, rlIpxFftInDiscards=rlIpxFftInDiscards, rlIpFftCountersEntry=rlIpFftCountersEntry, rlIpFftStnTaggedMode=rlIpFftStnTaggedMode, rlIpmFftUserAgingTimeout=rlIpmFftUserAgingTimeout, rlIpFftStnSrcMacAddress=rlIpFftStnSrcMacAddress, rlIpFftSubNextHopIpAddr3=rlIpFftSubNextHopIpAddr3, rlIpmFftSrcIpAddress=rlIpmFftSrcIpAddress, rlIpFftSubNextHopIpAddr6=rlIpFftSubNextHopIpAddr6, rlIpxFftStnSrcNetid=rlIpxFftStnSrcNetid, rlIpFftNextHopifindex=rlIpFftNextHopifindex, rlIpxFftNumSubRoutesNumber=rlIpxFftNumSubRoutesNumber, rlIpxFftSubOutIfIndex=rlIpxFftSubOutIfIndex, rlIpFftSrcAddrSupported=rlIpFftSrcAddrSupported, rlIpFftSubnetSupported=rlIpFftSubnetSupported, rlIpxFftStnEncapsulation=rlIpxFftStnEncapsulation, rlIpxMaxFftNumber=rlIpxMaxFftNumber, rlIpxFftSubTci=rlIpxFftSubTci, rlIpmFftPortDstIpAddress=rlIpmFftPortDstIpAddress, rlIpFftStnEntry=rlIpFftStnEntry, rlIpxFftSubDstNetid=rlIpxFftSubDstNetid, rlIpFftInDiscards=rlIpFftInDiscards, rlIpFftNextHopOutIfIndex=rlIpFftNextHopOutIfIndex, rlIpxFftStnTci=rlIpxFftStnTci, rlIpmFftCountersIndex=rlIpmFftCountersIndex, rlIpFftAgingTimeout=rlIpFftAgingTimeout, rlIpFftStnAge=rlIpFftStnAge, rlIpFftL2InfoTaggedMode=rlIpFftL2InfoTaggedMode, rlIpxFFT=rlIpxFFT, rlIpFftUnknownAddrMsgUsed=rlIpFftUnknownAddrMsgUsed, rlIpFftSubNextHopCount=rlIpFftSubNextHopCount, rlIpFftSubNextHopIpAddr8=rlIpFftSubNextHopIpAddr8, rlIpFftSubMrid=rlIpFftSubMrid, rlIpFftInReceives=rlIpFftInReceives, rlIpmFftPortTagEntry=rlIpmFftPortTagEntry, rlIpFftL2InfoSrcMacAddress=rlIpFftL2InfoSrcMacAddress, rlIpFftStnDstIpAddress=rlIpFftStnDstIpAddress, rlIpmFftPortSrcIpAddress=rlIpmFftPortSrcIpAddress, rlIpFftStnOutIfIndex=rlIpFftStnOutIfIndex, rlIpFftSubAge=rlIpFftSubAge, rlIpxFftYellowBoundary=rlIpxFftYellowBoundary, rlIpxFftStnSrcNode=rlIpxFftStnSrcNode, rlIpxFftStnDstIpxAddrType=rlIpxFftStnDstIpxAddrType, rlIpFftNumSubRoutesNumber=rlIpFftNumSubRoutesNumber, rlIpFftSubNextHopSetRefCount=rlIpFftSubNextHopSetRefCount, rlIpxFftNumStnRoutesNumber=rlIpxFftNumStnRoutesNumber, rlIpxFftRedBoundary=rlIpxFftRedBoundary, rlIpFftDynamicSupported=rlIpFftDynamicSupported, rlIpFftNextHopIpAddress=rlIpFftNextHopIpAddress, rlIpmFftEntry=rlIpmFftEntry, rlIpxFftStnIndex=rlIpxFftStnIndex, rlIpxFftDynamicSupported=rlIpxFftDynamicSupported, rlIpmFftUnknownAddrMsgUsed=rlIpmFftUnknownAddrMsgUsed, rlIpFftStnDstRouteIpMask=rlIpFftStnDstRouteIpMask, rlIpFftNumIndex=rlIpFftNumIndex, rlIpFftCountersIndex=rlIpFftCountersIndex, rlIpmFftDstIpAddress=rlIpmFftDstIpAddress, rlIpFftNumTable=rlIpFftNumTable, rlIpFftSubNextHopIfindex5=rlIpFftSubNextHopIfindex5, rlIpxFftInReceives=rlIpxFftInReceives, rlIpFftL2InfoType=rlIpFftL2InfoType, rlIpFftL2InfoDstMacAddress=rlIpFftL2InfoDstMacAddress, rlIpFftSubNextHopIpAddr7=rlIpFftSubNextHopIpAddr7, rlIpxFftStnAge=rlIpxFftStnAge, rlIpFftMibVersion=rlIpFftMibVersion, rlIpFftSubDstIpMask=rlIpFftSubDstIpMask, rlIpxFftNumEntry=rlIpxFftNumEntry, rlIpFftNextHopReferenceCount=rlIpFftNextHopReferenceCount, rlIpxFftNetworkSupported=rlIpxFftNetworkSupported, rlIpxFftStnTable=rlIpxFftStnTable, rlIpFftNextHopType=rlIpFftNextHopType, rlIpmFftCountersEntry=rlIpmFftCountersEntry, rlIpmFftPortOutputTag=rlIpmFftPortOutputTag, rlIpmFftInputVlanTag=rlIpmFftInputVlanTag, rlIpFFT=rlIpFFT, rlIpxFftSubEncapsulation=rlIpxFftSubEncapsulation, rlIpFftSubNextHopIfindex3=rlIpFftSubNextHopIfindex3, rlIpxFftSubTable=rlIpxFftSubTable, rlIpFftL2InfoValid=rlIpFftL2InfoValid, rlIpmFftDynamicSupported=rlIpmFftDynamicSupported, rlIpxFftSubEntry=rlIpxFftSubEntry, rlIpxFftSubIndex=rlIpxFftSubIndex, Percents=Percents, rlIpFftStnMrid=rlIpFftStnMrid, rlIpFftSubNextHopIfindex8=rlIpFftSubNextHopIfindex8, rlIpxFftStnOutIfIndex=rlIpxFftStnOutIfIndex, rlIpmFftForwardAction=rlIpmFftForwardAction, rlIpFftSubNextHopIpAddr4=rlIpFftSubNextHopIpAddr4, rlIpxFftAgingTimeout=rlIpxFftAgingTimeout, rlIpxFftSrcAddrSupported=rlIpxFftSrcAddrSupported, PYSNMP_MODULE_ID=rlFFT, rlIpFftSubDstIpSubnet=rlIpFftSubDstIpSubnet, rlIpFftNextHopNetAddress=rlIpFftNextHopNetAddress, rlIpxFftSubDstMacAddress=rlIpxFftSubDstMacAddress, rlIpmFftNumEntry=rlIpmFftNumEntry, rlIpFftStnVid=rlIpFftStnVid, rlIpxFftStnDstNetid=rlIpxFftStnDstNetid)
