#
# PySNMP MIB module S5-ETHERNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/S5-ETHERNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:51:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
s5Eth, = mibBuilder.importSymbols("S5-ROOT-MIB", "s5Eth")
TimeIntervalSec, = mibBuilder.importSymbols("S5-TCS-MIB", "TimeIntervalSec")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter32, ModuleIdentity, ObjectIdentity, Bits, Counter64, NotificationType, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "ModuleIdentity", "ObjectIdentity", "Bits", "Counter64", "NotificationType", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "Integer32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
s5EthernetMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 0))
s5EthernetMib.setRevisions(('2004-07-20 00:00',))
if mibBuilder.loadTexts: s5EthernetMib.setLastUpdated('200407200000Z')
if mibBuilder.loadTexts: s5EthernetMib.setOrganization('Nortel Networks')
s5EnCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 1))
s5EnStat = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 2))
s5EnMisc = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3))
s5EnPIntconTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 1), )
if mibBuilder.loadTexts: s5EnPIntconTable.setStatus('current')
s5EnPIntconEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 1, 1), ).setIndexNames((0, "S5-ETHERNET-MIB", "s5EnPIntconIfIndx"), (0, "S5-ETHERNET-MIB", "s5EnPIntconBrdIndx"), (0, "S5-ETHERNET-MIB", "s5EnPIntconPortIndx"))
if mibBuilder.loadTexts: s5EnPIntconEntry.setStatus('current')
s5EnPIntconIfIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5EnPIntconIfIndx.setStatus('current')
s5EnPIntconBrdIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5EnPIntconBrdIndx.setStatus('current')
s5EnPIntconPortIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5EnPIntconPortIndx.setStatus('current')
s5EnPIntconIntconStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("interconnect", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5EnPIntconIntconStatus.setStatus('current')
s5EnPIntconAddrCollect = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("neverCollect", 2), ("alwaysCollect", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5EnPIntconAddrCollect.setStatus('current')
s5EnNodeInactInterval = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 2), TimeIntervalSec().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5EnNodeInactInterval.setStatus('current')
s5EnNodeAgeInterval = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 6, 3, 3), TimeIntervalSec().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5EnNodeAgeInterval.setStatus('current')
mibBuilder.exportSymbols("S5-ETHERNET-MIB", s5EnCfg=s5EnCfg, s5EnNodeInactInterval=s5EnNodeInactInterval, PYSNMP_MODULE_ID=s5EthernetMib, s5EnPIntconIfIndx=s5EnPIntconIfIndx, s5EthernetMib=s5EthernetMib, s5EnPIntconEntry=s5EnPIntconEntry, s5EnPIntconIntconStatus=s5EnPIntconIntconStatus, s5EnNodeAgeInterval=s5EnNodeAgeInterval, s5EnPIntconTable=s5EnPIntconTable, s5EnStat=s5EnStat, s5EnPIntconAddrCollect=s5EnPIntconAddrCollect, s5EnPIntconBrdIndx=s5EnPIntconBrdIndx, s5EnPIntconPortIndx=s5EnPIntconPortIndx, s5EnMisc=s5EnMisc)
