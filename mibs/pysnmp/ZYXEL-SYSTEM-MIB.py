#
# PySNMP MIB module ZYXEL-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:45:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, NotificationType, TimeTicks, Unsigned32, iso, Counter32, Gauge32, Counter64, Bits, ModuleIdentity, ObjectIdentity, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "TimeTicks", "Unsigned32", "iso", "Counter32", "Gauge32", "Counter64", "Bits", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82))
if mibBuilder.loadTexts: zyxelSystem.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelSystem.setOrganization('Enterprise Solution ZyXEL')
zyxelDateTimeSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1))
zyxelSysInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2))
zyxelDateTimeTrapNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 3))
zyDateTimeServerType = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("daytime", 2), ("time", 3), ("ntp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeServerType.setStatus('current')
zyDateTimeServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeServerIpAddress.setStatus('current')
zyDateTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeZone.setStatus('current')
zyDateTimeNewDateYear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeNewDateYear.setStatus('current')
zyDateTimeNewDateMonth = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeNewDateMonth.setStatus('current')
zyDateTimeNewDateDay = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeNewDateDay.setStatus('current')
zyDateTimeNewTimeHour = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeNewTimeHour.setStatus('current')
zyDateTimeNewTimeMinute = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeNewTimeMinute.setStatus('current')
zyDateTimeNewTimeSecond = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDateTimeNewTimeSecond.setStatus('current')
zyxelDateTimeDaylightSavingTimeSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10))
zyDaylightSavingTimeState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeState.setStatus('current')
zyDaylightSavingTimeStartDateWeek = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("first", 1), ("second", 2), ("third", 3), ("fourth", 4), ("last", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeStartDateWeek.setStatus('current')
zyDaylightSavingTimeStartDateDay = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sunday", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeStartDateDay.setStatus('current')
zyDaylightSavingTimeStartDateMonth = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeStartDateMonth.setStatus('current')
zyDaylightSavingTimeStartDateHour = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeStartDateHour.setStatus('current')
zyDaylightSavingTimeEndDateWeek = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("first", 1), ("second", 2), ("third", 3), ("fourth", 4), ("last", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeEndDateWeek.setStatus('current')
zyDaylightSavingTimeEndDateDay = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sunday", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeEndDateDay.setStatus('current')
zyDaylightSavingTimeEndDateMonth = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeEndDateMonth.setStatus('current')
zyDaylightSavingTimeEndDateHour = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 1, 10, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDaylightSavingTimeEndDateHour.setStatus('current')
zySysSwPlatformMajorVers = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSwPlatformMajorVers.setStatus('current')
zySysSwPlatformMinorVers = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSwPlatformMinorVers.setStatus('current')
zySysSwModelString = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSwModelString.setStatus('current')
zySysSwVersionControlNbr = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSwVersionControlNbr.setStatus('current')
zySysSwDay = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSwDay.setStatus('current')
zySysSwMonth = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSwMonth.setStatus('current')
zySysSwYear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSwYear.setStatus('current')
zySysHwMajorVers = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysHwMajorVers.setStatus('current')
zySysHwMinorVers = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysHwMinorVers.setStatus('current')
zySysSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSerialNumber.setStatus('current')
zySysSwBootUpImage = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("image1", 1), ("image2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySysSwBootUpImage.setStatus('current')
zyDateTimeTrapTimeServerNotReachable = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 3, 1))
if mibBuilder.loadTexts: zyDateTimeTrapTimeServerNotReachable.setStatus('current')
zyDateTimeTrapTimeServerNotReachableRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 82, 3, 2))
if mibBuilder.loadTexts: zyDateTimeTrapTimeServerNotReachableRecovered.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-SYSTEM-MIB", zyDateTimeNewTimeMinute=zyDateTimeNewTimeMinute, zySysSwPlatformMajorVers=zySysSwPlatformMajorVers, zyDaylightSavingTimeStartDateWeek=zyDaylightSavingTimeStartDateWeek, zyDateTimeTrapTimeServerNotReachable=zyDateTimeTrapTimeServerNotReachable, zyxelSysInfo=zyxelSysInfo, zyDateTimeTrapTimeServerNotReachableRecovered=zyDateTimeTrapTimeServerNotReachableRecovered, zySysSwModelString=zySysSwModelString, zySysSwDay=zySysSwDay, zyDateTimeNewTimeHour=zyDateTimeNewTimeHour, zyDateTimeNewDateYear=zyDateTimeNewDateYear, PYSNMP_MODULE_ID=zyxelSystem, zyDateTimeZone=zyDateTimeZone, zySysSwPlatformMinorVers=zySysSwPlatformMinorVers, zySysSerialNumber=zySysSerialNumber, zyDateTimeServerIpAddress=zyDateTimeServerIpAddress, zySysSwVersionControlNbr=zySysSwVersionControlNbr, zyDaylightSavingTimeEndDateMonth=zyDaylightSavingTimeEndDateMonth, zyDaylightSavingTimeEndDateHour=zyDaylightSavingTimeEndDateHour, zyxelSystem=zyxelSystem, zyDaylightSavingTimeStartDateDay=zyDaylightSavingTimeStartDateDay, zyDaylightSavingTimeStartDateHour=zyDaylightSavingTimeStartDateHour, zySysSwMonth=zySysSwMonth, zyDateTimeNewTimeSecond=zyDateTimeNewTimeSecond, zyDaylightSavingTimeStartDateMonth=zyDaylightSavingTimeStartDateMonth, zyxelDateTimeSetup=zyxelDateTimeSetup, zyxelDateTimeTrapNotifications=zyxelDateTimeTrapNotifications, zyDaylightSavingTimeState=zyDaylightSavingTimeState, zySysSwBootUpImage=zySysSwBootUpImage, zySysHwMajorVers=zySysHwMajorVers, zyDaylightSavingTimeEndDateDay=zyDaylightSavingTimeEndDateDay, zySysHwMinorVers=zySysHwMinorVers, zyDateTimeNewDateDay=zyDateTimeNewDateDay, zyDateTimeServerType=zyDateTimeServerType, zyxelDateTimeDaylightSavingTimeSetup=zyxelDateTimeDaylightSavingTimeSetup, zyDateTimeNewDateMonth=zyDateTimeNewDateMonth, zySysSwYear=zySysSwYear, zyDaylightSavingTimeEndDateWeek=zyDaylightSavingTimeEndDateWeek)
