#
# PySNMP MIB module LANCOM-L310-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LANCOM-L310-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:54:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysDescr, sysName = mibBuilder.importSymbols("SNMPv2-MIB", "sysDescr", "sysName")
Unsigned32, IpAddress, Counter64, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, ModuleIdentity, Gauge32, ObjectIdentity, MibIdentifier, enterprises, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "Counter64", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "ModuleIdentity", "Gauge32", "ObjectIdentity", "MibIdentifier", "enterprises", "Counter32", "iso")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
lancom_systems = MibIdentifier((1, 3, 6, 1, 4, 1, 2356)).setLabel("lancom-systems")
wlan_systems = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600)).setLabel("wlan-systems")
lan_router = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6)).setLabel("lan-router")
lancom_l310 = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310)).setLabel("lancom-l310")
sta = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1))
set = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2))
fir = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3))
oth = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 4))
staOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staOpera.setStatus('current')
staWlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3))
staWlanInterfTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51), )
if mibBuilder.loadTexts: staWlanInterfTable.setStatus('current')
staWlanInterfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanInterfIfc"))
if mibBuilder.loadTexts: staWlanInterfEntry.setStatus('current')
staWlanInterfIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfIfc.setStatus('current')
staWlanInterfOperatin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfOperatin.setStatus('current')
staWlanInterfOperatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("access-point", 1), ("managed-ap", 4), ("station", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfOperatio.setStatus('current')
staWlanInterfCardid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfCardid.setStatus('current')
staWlanInterfSerialnu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfSerialnu.setStatus('current')
staWlanInterfFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfFirmware.setStatus('current')
staWlanInterfMacaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfMacaddre.setStatus('current')
staWlanInterfNumstati = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfNumstati.setStatus('current')
staWlanInterfQueuepac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 51, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfQueuepac.setStatus('current')
staWlanNetworTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56), )
if mibBuilder.loadTexts: staWlanNetworTable.setStatus('current')
staWlanNetworEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanNetworIfc"))
if mibBuilder.loadTexts: staWlanNetworEntry.setStatus('current')
staWlanNetworIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworIfc.setStatus('current')
staWlanNetworOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworOpe.setStatus('current')
staWlanNetworNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworNet.setStatus('current')
staWlanNetworBss = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworBss.setStatus('current')
staWlanNetworVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworVla.setStatus('current')
staWlanNetworNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworNum.setStatus('current')
staWlanNetworMca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 56, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworMca.setStatus('current')
staWlanBytetrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52), )
if mibBuilder.loadTexts: staWlanBytetrTable.setStatus('current')
staWlanBytetrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanBytetrIfc"))
if mibBuilder.loadTexts: staWlanBytetrEntry.setStatus('current')
staWlanBytetrIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrIfc.setStatus('current')
staWlanBytetrTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrTxbyte.setStatus('current')
staWlanBytetrRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrRxbyte.setStatus('current')
staWlanBytetrThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrThroug.setStatus('current')
staWlanBytetrMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrMaxthr.setStatus('current')
staWlanBytetrBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrBytest.setStatus('current')
staWlanBytetrBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 52, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrBytesm.setStatus('current')
staWlanPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53), )
if mibBuilder.loadTexts: staWlanPacketTable.setStatus('current')
staWlanPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanPacketIfc"))
if mibBuilder.loadTexts: staWlanPacketEntry.setStatus('current')
staWlanPacketIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketIfc.setStatus('current')
staWlanPacketRxpacke = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxpacke.setStatus('current')
staWlanPacketTxpacke = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxpacke.setStatus('current')
staWlanPacketRxbroad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxbroad.setStatus('current')
staWlanPacketRxmulti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxmulti.setStatus('current')
staWlanPacketRxunica = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxunica.setStatus('current')
staWlanPacketRxaggre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxaggre.setStatus('current')
staWlanPacketRxaggrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxaggrf.setStatus('current')
staWlanPacketTxbroad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxbroad.setStatus('current')
staWlanPacketTxmulti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxmulti.setStatus('current')
staWlanPacketTxunica = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxunica.setStatus('current')
staWlanPacketTxaggre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxaggre.setStatus('current')
staWlanPacketTxaggrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 53, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxaggrf.setStatus('current')
staWlanErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54), )
if mibBuilder.loadTexts: staWlanErrorsTable.setStatus('current')
staWlanErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanErrorsIfc"))
if mibBuilder.loadTexts: staWlanErrorsEntry.setStatus('current')
staWlanErrorsIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsIfc.setStatus('current')
staWlanErrorsRxe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsRxe.setStatus('current')
staWlanErrorsTxe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsTxe.setStatus('current')
staWlanErrorsSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsSta.setStatus('current')
staWlanErrorsNic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsNic.setStatus('current')
staWlanErrorsQue = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsQue.setStatus('current')
staWlanErrorsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsTxd.setStatus('current')
staWlanErrorsRet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsRet.setStatus('current')
staWlanErrorsMul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsMul.setStatus('current')
staWlanErrorsSof = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsSof.setStatus('current')
staWlanErrorsDup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsDup.setStatus('current')
staWlanErrorsUnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsUnd.setStatus('current')
staWlanErrorsAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsAge.setStatus('current')
staWlanErrorsMic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsMic.setStatus('current')
staWlanErrorsIvs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsIvs.setStatus('current')
staWlanErrorsRxc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsRxc.setStatus('current')
staWlanErrorsRxa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 54, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsRxa.setStatus('current')
staWlanWlanpaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55), )
if mibBuilder.loadTexts: staWlanWlanpaTable.setStatus('current')
staWlanWlanpaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanWlanpaIfc"))
if mibBuilder.loadTexts: staWlanWlanpaEntry.setStatus('current')
staWlanWlanpaIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaIfc.setStatus('current')
staWlanWlanpaRadioband = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaRadioband.setStatus('current')
staWlanWlanpaRadiochannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaRadiochannel.setStatus('current')
staWlanWlanpa108mbpsmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpa108mbpsmode.setStatus('current')
staWlanWlanpaNoiselevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaNoiselevel.setStatus('current')
staWlanWlanpaModemload = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaModemload.setStatus('current')
staWlanWlanpaTransmitpower = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaTransmitpower.setStatus('current')
staWlanWlanpaEirp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaEirp.setStatus('current')
staWlanWlanpaExceirp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaExceirp.setStatus('current')
staWlanWlanpaBeaconperiod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaBeaconperiod.setStatus('current')
staWlanWlanpaRegulatorydoma = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16, 32, 48, 49, 50, 64, 65, 80, 96))).clone(namedValues=NamedValues(("undefined", 0), ("fcc", 16), ("canada", 32), ("eu-etsi", 48), ("spain", 49), ("france", 50), ("mkk-japan", 64), ("mkk2-japan", 65), ("israel", 80), ("world", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaRegulatorydoma.setStatus('current')
staWlanWlanpaPhytype = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 254))).clone(namedValues=NamedValues(("proprietary", 0), ("fhss", 1), ("dsss", 2), ("infrared", 3), ("ofdm", 4), ("hr-dsss", 5), ("erp", 6), ("ht", 7), ("pbcc", 254)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaPhytype.setStatus('current')
staWlanWlanpaTxchains = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaTxchains.setStatus('current')
staWlanWlanpaRxchains = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaRxchains.setStatus('current')
staWlanWlanpaWepsupport = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("yes-40-bits", 1), ("yes-104-bits", 2), ("yes-128-bits", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaWepsupport.setStatus('current')
staWlanWlanpaTkipsupport = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaTkipsupport.setStatus('current')
staWlanWlanpaAessupport = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("ocb", 1), ("ccm", 2), ("ocb-plus-ccm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaAessupport.setStatus('current')
staWlanWlanpaMinimumrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 12), ("e9m", 13), ("e12m", 14), ("e18m", 15), ("e24m", 16), ("e36m", 17), ("e48m", 18), ("e54m", 19), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaMinimumrate.setStatus('current')
staWlanWlanpaMaximumrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 12), ("e9m", 13), ("e12m", 14), ("e18m", 15), ("e24m", 16), ("e36m", 17), ("e48m", 18), ("e54m", 19), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaMaximumrate.setStatus('current')
staWlanWlanpaTemperatureran = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("commercial-0-plus-40-degree-c", 1), ("industrial-minus-30-plus-70-degree-c", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaTemperatureran.setStatus('current')
staWlanWlanpaPhyvariant = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaPhyvariant.setStatus('current')
staWlanWlanpaSupportedbands = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportedbands.setStatus('current')
staWlanWlanpaSupports40mhz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupports40mhz.setStatus('current')
staWlanWlanpaSupportsshortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportsshortp.setStatus('current')
staWlanWlanpaSupportsshorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportsshorts.setStatus('current')
staWlanWlanpaSupportsshortg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("e20mhz", 1), ("e40mhz", 2), ("e20-40mhz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportsshortg.setStatus('current')
staWlanWlanpaSupportscompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 55, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportscompre.setStatus('current')
staWlanRadiosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57), )
if mibBuilder.loadTexts: staWlanRadiosTable.setStatus('current')
staWlanRadiosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanRadiosIfc"))
if mibBuilder.loadTexts: staWlanRadiosEntry.setStatus('current')
staWlanRadiosIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosIfc.setStatus('current')
staWlanRadiosRadioband = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosRadioband.setStatus('current')
staWlanRadiosRadiochannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosRadiochannel.setStatus('current')
staWlanRadios108mbpsmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadios108mbpsmode.setStatus('current')
staWlanRadiosExtchannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("above", 1), ("below", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosExtchannel.setStatus('current')
staWlanRadiosNoiselevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosNoiselevel.setStatus('current')
staWlanRadiosModemload = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosModemload.setStatus('current')
staWlanRadiosTransmitpower = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosTransmitpower.setStatus('current')
staWlanRadiosEirp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosEirp.setStatus('current')
staWlanRadiosExceirp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosExceirp.setStatus('current')
staWlanRadiosBackgroundscan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosBackgroundscan.setStatus('current')
staWlanRadiosBackgroundscanu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 57, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("seconds", 0), ("milliseconds", 1), ("microseconds", 2), ("minutes", 3), ("hours", 4), ("days", 5), ("weeks", 6), ("fortnights", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosBackgroundscanu.setStatus('current')
staWlanScanreTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34), )
if mibBuilder.loadTexts: staWlanScanreTable.setStatus('current')
staWlanScanreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanScanreBssid"), (0, "LANCOM-L310-MIB", "staWlanScanreInterf"))
if mibBuilder.loadTexts: staWlanScanreEntry.setStatus('current')
staWlanScanreBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreBssid.setStatus('current')
staWlanScanreInterf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreInterf.setStatus('current')
staWlanScanreNetwor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreNetwor.setStatus('current')
staWlanScanreOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("adhoc", 1), ("infrastructure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreOperat.setStatus('current')
staWlanScanreEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("tkip", 2), ("aes", 3), ("aes-plus-tkip", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreEncryp.setStatus('current')
staWlanScanreBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreBeacon.setStatus('current')
staWlanScanreDtimpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreDtimpe.setStatus('current')
staWlanScanrePcffun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("delivery", 1), ("delivery-plus-polling", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanrePcffun.setStatus('current')
staWlanScanreQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreQos.setStatus('current')
staWlanScanreMaxamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreMaxamp.setStatus('current')
staWlanScanreMaxams = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreMaxams.setStatus('current')
staWlanScanreRadiob = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreRadiob.setStatus('current')
staWlanScanreRadioc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreRadioc.setStatus('current')
staWlanScanre108mbp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanre108mbp.setStatus('current')
staWlanScanreExtcha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("above", 1), ("below", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreExtcha.setStatus('current')
staWlanScanrePhysig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanrePhysig.setStatus('current')
staWlanScanreSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreSignal.setStatus('current')
staWlanScanreNoisel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreNoisel.setStatus('current')
staWlanScanreLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreLoad.setStatus('current')
staWlanScanreShortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreShortp.setStatus('current')
staWlanScanreShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreShorts.setStatus('current')
staWlanScanre40mhzm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanre40mhzm.setStatus('current')
staWlanScanre40mhzi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanre40mhzi.setStatus('current')
staWlanScanreShortg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("e20mhz", 1), ("e40mhz", 2), ("e20-40mhz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreShortg.setStatus('current')
staWlanScanreCompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreCompre.setStatus('current')
staWlanScanreAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreAge.setStatus('current')
staWlanScanreRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 12), ("e9m", 13), ("e12m", 14), ("e18m", 15), ("e24m", 16), ("e36m", 17), ("e48m", 18), ("e54m", 19), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreRate.setStatus('current')
staWlanScanreNonerp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreNonerp.setStatus('current')
staWlanScanreIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreIdenti.setStatus('current')
staWlanScanreInterp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 34, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreInterp.setStatus('current')
staWlanInterp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36))
staWlanInterpAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1), )
if mibBuilder.loadTexts: staWlanInterpAccTable.setStatus('current')
staWlanInterpAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanInterpAccIndex"))
if mibBuilder.loadTexts: staWlanInterpAccEntry.setStatus('current')
staWlanInterpAccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("p2p-1-1", 1), ("p2p-1-2", 2), ("p2p-1-3", 3), ("p2p-1-4", 4), ("p2p-1-5", 5), ("p2p-1-6", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccIndex.setStatus('current')
staWlanInterpAccMacadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccMacadd.setStatus('current')
staWlanInterpAccRxphys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxphys.setStatus('current')
staWlanInterpAccTxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccTxrate.setStatus('current')
staWlanInterpAccRxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxrate.setStatus('current')
staWlanInterpAccEfftxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccEfftxr.setStatus('current')
staWlanInterpAccEffrxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccEffrxr.setStatus('current')
staWlanInterpAccLinkph = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccLinkph.setStatus('current')
staWlanInterpAccIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccIdenti.setStatus('current')
staWlanInterpAccInterp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccInterp.setStatus('current')
staWlanInterpAccQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccQos.setStatus('current')
staWlanInterpAcc40mhzm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAcc40mhzm.setStatus('current')
staWlanInterpAccMaxams = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccMaxams.setStatus('current')
staWlanInterpAccMaxamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccMaxamp.setStatus('current')
staWlanInterpAccShortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccShortp.setStatus('current')
staWlanInterpAccShortg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("e20mhz", 1), ("e40mhz", 2), ("e20-40mhz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccShortg.setStatus('current')
staWlanInterpAccKeyhan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("supplicant", 1), ("authenticator", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccKeyhan.setStatus('current')
staWlanInterpAccKeying = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("pending", 1), ("done", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccKeying.setStatus('current')
staWlanInterpAccWpaver = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("wpa1", 1), ("wpa2", 2), ("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccWpaver.setStatus('current')
staWlanInterpAccTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccTxbyte.setStatus('current')
staWlanInterpAccRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxbyte.setStatus('current')
staWlanInterpAccThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccThroug.setStatus('current')
staWlanInterpAccMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccMaxthr.setStatus('current')
staWlanInterpAccBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccBytest.setStatus('current')
staWlanInterpAccBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccBytesm.setStatus('current')
staWlanInterpAccTxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccTxpack.setStatus('current')
staWlanInterpAccRxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxpack.setStatus('current')
staWlanInterpAccTxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccTxlimi.setStatus('current')
staWlanInterpAccRxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxlimi.setStatus('current')
staWlanInterpKeyTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 3), )
if mibBuilder.loadTexts: staWlanInterpKeyTable.setStatus('current')
staWlanInterpKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanInterpKeyInde"))
if mibBuilder.loadTexts: staWlanInterpKeyEntry.setStatus('current')
staWlanInterpKeyInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("p2p-1-1", 1), ("p2p-1-2", 2), ("p2p-1-3", 3), ("p2p-1-4", 4), ("p2p-1-5", 5), ("p2p-1-6", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyInde.setStatus('current')
staWlanInterpKeySour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeySour.setStatus('current')
staWlanInterpKeyKeyt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 13, 16, 64, 65, 66))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16), ("tkip", 64), ("aes-ocb", 65), ("aes-ccm", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyKeyt.setStatus('current')
staWlanInterpKeyKeyv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyKeyv.setStatus('current')
staWlanInterpKeyTsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyTsc.setStatus('current')
staWlanInterpKeyRsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 36, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyRsc.setStatus('current')
staWlanIapptaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 38), )
if mibBuilder.loadTexts: staWlanIapptaTable.setStatus('current')
staWlanIapptaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 38, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanIapptaBssid"), (0, "LANCOM-L310-MIB", "staWlanIapptaIpadd"), (0, "LANCOM-L310-MIB", "staWlanIapptaNetwo"))
if mibBuilder.loadTexts: staWlanIapptaEntry.setStatus('current')
staWlanIapptaBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 38, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaBssid.setStatus('current')
staWlanIapptaIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 38, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaIpadd.setStatus('current')
staWlanIapptaNetwo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 38, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaNetwo.setStatus('current')
staWlanIapptaTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 38, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaTimer.setStatus('current')
staWlanIapptaTimeo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 38, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaTimeo.setStatus('current')
staWlanIapptaCapab = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 38, 1, 5), Bits().clone(namedValues=NamedValues(("wep", 32), ("forward", 64)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaCapab.setStatus('current')
staWlanForeigTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 40), )
if mibBuilder.loadTexts: staWlanForeigTable.setStatus('current')
staWlanForeigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 40, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanForeigMac"))
if mibBuilder.loadTexts: staWlanForeigEntry.setStatus('current')
staWlanForeigMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 40, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanForeigMac.setStatus('current')
staWlanGroupeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 41), )
if mibBuilder.loadTexts: staWlanGroupeTable.setStatus('current')
staWlanGroupeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 41, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanGroupeInde"))
if mibBuilder.loadTexts: staWlanGroupeEntry.setStatus('current')
staWlanGroupeInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 41, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeInde.setStatus('current')
staWlanGroupeSour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 41, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeSour.setStatus('current')
staWlanGroupeKeyt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 41, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 13, 16, 64, 65, 66))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16), ("tkip", 64), ("aes-ocb", 65), ("aes-ccm", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeKeyt.setStatus('current')
staWlanGroupeKeyv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 41, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeKeyv.setStatus('current')
staWlanGroupeTsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 41, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeTsc.setStatus('current')
staWlanGroupeRsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 41, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeRsc.setStatus('current')
staWlanChanneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42), )
if mibBuilder.loadTexts: staWlanChanneTable.setStatus('current')
staWlanChanneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanChanneRadiob"), (0, "LANCOM-L310-MIB", "staWlanChanneRadioc"))
if mibBuilder.loadTexts: staWlanChanneEntry.setStatus('current')
staWlanChanneRadiob = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRadiob.setStatus('current')
staWlanChanneRadioc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRadioc.setStatus('current')
staWlanChanne108mbp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanne108mbp.setStatus('current')
staWlanChanneInterf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneInterf.setStatus('current')
staWlanChanneDfssta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 0, 1))).clone(namedValues=NamedValues(("unknown", 2), ("clear", 0), ("blocked", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneDfssta.setStatus('current')
staWlanChanneRemtim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRemtim.setStatus('current')
staWlanChanneScanne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneScanne.setStatus('current')
staWlanChanneNoisel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneNoisel.setStatus('current')
staWlanChanneNumbss = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneNumbss.setStatus('current')
staWlanChannePulsec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChannePulsec.setStatus('current')
staWlanChanneRadard = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRadard.setStatus('current')
staWlanChanneRadarp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 42, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRadarp.setStatus('current')
staWlanClient = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43))
staWlanClientIptranTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 1), )
if mibBuilder.loadTexts: staWlanClientIptranTable.setStatus('current')
staWlanClientIptranEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanClientIptranIpa"))
if mibBuilder.loadTexts: staWlanClientIptranEntry.setStatus('current')
staWlanClientIptranIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientIptranIpa.setStatus('current')
staWlanClientIptranMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientIptranMac.setStatus('current')
staWlanClientIptranAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientIptranAge.setStatus('current')
staWlanClientPppoeiTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 10), )
if mibBuilder.loadTexts: staWlanClientPppoeiTable.setStatus('current')
staWlanClientPppoeiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanClientPppoeiSes"))
if mibBuilder.loadTexts: staWlanClientPppoeiEntry.setStatus('current')
staWlanClientPppoeiSes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeiSes.setStatus('current')
staWlanClientPppoeiMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 10, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeiMac.setStatus('current')
staWlanClientPppoeiAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeiAge.setStatus('current')
staWlanClientPppoeuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 11), )
if mibBuilder.loadTexts: staWlanClientPppoeuTable.setStatus('current')
staWlanClientPppoeuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanClientPppoeuHostuniql"), (0, "LANCOM-L310-MIB", "staWlanClientPppoeuHostuniq"))
if mibBuilder.loadTexts: staWlanClientPppoeuEntry.setStatus('current')
staWlanClientPppoeuHostuniql = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeuHostuniql.setStatus('current')
staWlanClientPppoeuHostuniq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeuHostuniq.setStatus('current')
staWlanClientPppoeuMacaddres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 11, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeuMacaddres.setStatus('current')
staWlanClientPppoeuAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeuAge.setStatus('current')
staWlanClientInterfTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51), )
if mibBuilder.loadTexts: staWlanClientInterfTable.setStatus('current')
staWlanClientInterfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanClientInterfIfc"))
if mibBuilder.loadTexts: staWlanClientInterfEntry.setStatus('current')
staWlanClientInterfIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfIfc.setStatus('current')
staWlanClientInterfState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 6, 5, 7, 2, 9, 10, 8, 3))).clone(namedValues=NamedValues(("none", 0), ("scanning", 6), ("joined", 5), ("challenge", 7), ("authenticated", 2), ("associated", 9), ("e1x-negotiation", 10), ("key-handshake", 8), ("connected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfState.setStatus('current')
staWlanClientInterfStatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("adhoc", 1), ("infrastructure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfStatio.setStatus('current')
staWlanClientInterfConnec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfConnec.setStatus('current')
staWlanClientInterfAid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfAid.setStatus('current')
staWlanClientInterfPhysig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfPhysig.setStatus('current')
staWlanClientInterfLinkph = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfLinkph.setStatus('current')
staWlanClientInterfLinksi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfLinksi.setStatus('current')
staWlanClientInterfIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfIdenti.setStatus('current')
staWlanClientInterfTxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfTxrate.setStatus('current')
staWlanClientInterfRxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfRxrate.setStatus('current')
staWlanClientInterfEfftxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfEfftxr.setStatus('current')
staWlanClientInterfEffrxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfEffrxr.setStatus('current')
staWlanClientInterfTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfTxbyte.setStatus('current')
staWlanClientInterfRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfRxbyte.setStatus('current')
staWlanClientInterfThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfThroug.setStatus('current')
staWlanClientInterfMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfMaxthr.setStatus('current')
staWlanClientInterfBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfBytest.setStatus('current')
staWlanClientInterfBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfBytesm.setStatus('current')
staWlanClientInterfTxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfTxpack.setStatus('current')
staWlanClientInterfRxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfRxpack.setStatus('current')
staWlanClientInterfTxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfTxlimi.setStatus('current')
staWlanClientInterfRxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfRxlimi.setStatus('current')
staWlanClientInterfClbrgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfClbrgs.setStatus('current')
staWlanClientInterfWpaver = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("wpa1", 1), ("wpa2", 2), ("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfWpaver.setStatus('current')
staWlanClientInterfQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfQos.setStatus('current')
staWlanClientInterfMaxamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfMaxamp.setStatus('current')
staWlanClientInterfMaxams = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 43, 51, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfMaxams.setStatus('current')
staWlanSeenclTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45), )
if mibBuilder.loadTexts: staWlanSeenclTable.setStatus('current')
staWlanSeenclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanSeenclMac"), (0, "LANCOM-L310-MIB", "staWlanSeenclInt"))
if mibBuilder.loadTexts: staWlanSeenclEntry.setStatus('current')
staWlanSeenclMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclMac.setStatus('current')
staWlanSeenclInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclInt.setStatus('current')
staWlanSeenclSig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclSig.setStatus('current')
staWlanSeenclRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclRxp.setStatus('current')
staWlanSeenclAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclAge.setStatus('current')
staWlanSeenclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclNum.setStatus('current')
staWlanSeenclNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 45, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclNet.setStatus('current')
staWlanLogtabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 46), )
if mibBuilder.loadTexts: staWlanLogtabTable.setStatus('current')
staWlanLogtabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 46, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanLogtabInd"))
if mibBuilder.loadTexts: staWlanLogtabEntry.setStatus('current')
staWlanLogtabInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 46, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabInd.setStatus('current')
staWlanLogtabTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 46, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabTim.setStatus('current')
staWlanLogtabInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 46, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("wlan-1", 1), ("wlan-1-2", 16), ("wlan-1-3", 17), ("wlan-1-4", 18), ("wlan-1-5", 19), ("wlan-1-6", 20), ("wlan-1-7", 21), ("wlan-1-8", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabInt.setStatus('current')
staWlanLogtabEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 46, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 90))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabEve.setStatus('current')
staWlanLogtabAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 46, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabAdd.setStatus('current')
staWlanLogtabRea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 46, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabRea.setStatus('current')
staWlanDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWlanDelete.setStatus('current')
staWlanPairwiTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 47), )
if mibBuilder.loadTexts: staWlanPairwiTable.setStatus('current')
staWlanPairwiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 47, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanPairwiInde"))
if mibBuilder.loadTexts: staWlanPairwiEntry.setStatus('current')
staWlanPairwiInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiInde.setStatus('current')
staWlanPairwiKeyt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 47, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 13, 16, 64, 65, 66))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16), ("tkip", 64), ("aes-ocb", 65), ("aes-ccm", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiKeyt.setStatus('current')
staWlanPairwiKeyv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 47, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiKeyv.setStatus('current')
staWlanPairwiTsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 47, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiTsc.setStatus('current')
staWlanPairwiRsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 47, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiRsc.setStatus('current')
staWlanStatioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32), )
if mibBuilder.loadTexts: staWlanStatioTable.setStatus('current')
staWlanStatioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanStatioIndex"))
if mibBuilder.loadTexts: staWlanStatioEntry.setStatus('current')
staWlanStatioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioIndex.setStatus('current')
staWlanStatioAid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioAid.setStatus('current')
staWlanStatioInterf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioInterf.setStatus('current')
staWlanStatioNetwor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("e1", 0), ("e2", 1), ("e3", 2), ("e4", 3), ("e5", 4), ("e6", 5), ("e7", 6), ("e8", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioNetwor.setStatus('current')
staWlanStatioVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioVlanid.setStatus('current')
staWlanStatioIdleti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioIdleti.setStatus('current')
staWlanStatioPhysig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioPhysig.setStatus('current')
staWlanStatioMacadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioMacadd.setStatus('current')
staWlanStatioUserna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioUserna.setStatus('current')
staWlanStatioIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioIdenti.setStatus('current')
staWlanStatioTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioTxbyte.setStatus('current')
staWlanStatioRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioRxbyte.setStatus('current')
staWlanStatioThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioThroug.setStatus('current')
staWlanStatioMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioMaxthr.setStatus('current')
staWlanStatioBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioBytest.setStatus('current')
staWlanStatioBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioBytesm.setStatus('current')
staWlanStatioTxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioTxpack.setStatus('current')
staWlanStatioRxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioRxpack.setStatus('current')
staWlanStatioTxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioTxlimi.setStatus('current')
staWlanStatioRxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioRxlimi.setStatus('current')
staWlanStatioState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 9, 4, 10, 8))).clone(namedValues=NamedValues(("none", 0), ("adhoc", 1), ("authenticated", 2), ("connected", 3), ("associated", 9), ("mac-check", 4), ("e1x-negotiation", 10), ("key-handshake", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioState.setStatus('current')
staWlanStatioMacche = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("local", 1), ("radius", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioMacche.setStatus('current')
staWlanStatioLastev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("auth-success", 1), ("deauth", 2), ("assoc-success", 3), ("reassoc-success", 4), ("disassoc", 5), ("radius-success", 6), ("auth-reject", 7), ("assoc-reject", 8), ("keyhandshake-success", 9), ("keyhandshake-timeout", 10), ("keyhandshake-failure", 11), ("radius-reject", 12), ("supervision", 13), ("e802-1x-success", 14), ("e802-1x-failure", 15), ("idle-timeout", 16), ("admin-deassoc", 17), ("roamed", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioLastev.setStatus('current')
staWlanStatioLaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("auth-success", 1), ("deauth", 2), ("assoc-success", 3), ("reassoc-success", 4), ("disassoc", 5), ("radius-success", 6), ("auth-reject", 7), ("assoc-reject", 8), ("keyhandshake-success", 9), ("keyhandshake-timeout", 10), ("keyhandshake-failure", 11), ("radius-reject", 12), ("supervision", 13), ("e802-1x-success", 14), ("e802-1x-failure", 15), ("idle-timeout", 16), ("admin-deassoc", 17), ("roamed", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioLaster.setStatus('current')
staWlanStatioTxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioTxrate.setStatus('current')
staWlanStatioRxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioRxrate.setStatus('current')
staWlanStatioEfftxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioEfftxr.setStatus('current')
staWlanStatioEffrxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioEffrxr.setStatus('current')
staWlanStatioWpaver = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("wpa1", 1), ("wpa2", 2), ("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioWpaver.setStatus('current')
staWlanStatioQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioQos.setStatus('current')
staWlanStatioKeytyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 13, 16, 64, 65, 66))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16), ("tkip", 64), ("aes-ocb", 65), ("aes-ccm", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioKeytyp.setStatus('current')
staWlanStatioPowers = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioPowers.setStatus('current')
staWlanStatioListen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioListen.setStatus('current')
staWlanStatioConnec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioConnec.setStatus('current')
staWlanStatio40mhzm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatio40mhzm.setStatus('current')
staWlanStatioMaxams = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioMaxams.setStatus('current')
staWlanStatioMaxamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioMaxamp.setStatus('current')
staWlanStatio40mhzi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatio40mhzi.setStatus('current')
staWlanStatioShortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioShortp.setStatus('current')
staWlanStatioShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioShorts.setStatus('current')
staWlanStatioShortg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("e20mhz", 1), ("e40mhz", 2), ("e20-40mhz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioShortg.setStatus('current')
staWlanStatioClbrgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioClbrgs.setStatus('current')
staWlanStatioIpaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 32, 1, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioIpaddr.setStatus('current')
staWlanDeasso = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWlanDeasso.setStatus('current')
staWlanCompetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44), )
if mibBuilder.loadTexts: staWlanCompetTable.setStatus('current')
staWlanCompetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanCompetBssid"), (0, "LANCOM-L310-MIB", "staWlanCompetInterf"))
if mibBuilder.loadTexts: staWlanCompetEntry.setStatus('current')
staWlanCompetBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetBssid.setStatus('current')
staWlanCompetInterf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetInterf.setStatus('current')
staWlanCompetNetwor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetNetwor.setStatus('current')
staWlanCompetOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("adhoc", 1), ("infrastructure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetOperat.setStatus('current')
staWlanCompetEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("tkip", 2), ("aes", 3), ("aes-plus-tkip", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetEncryp.setStatus('current')
staWlanCompetBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetBeacon.setStatus('current')
staWlanCompetDtimpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetDtimpe.setStatus('current')
staWlanCompetPcffun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("delivery", 1), ("delivery-plus-polling", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetPcffun.setStatus('current')
staWlanCompetQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetQos.setStatus('current')
staWlanCompetMaxamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetMaxamp.setStatus('current')
staWlanCompetMaxams = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetMaxams.setStatus('current')
staWlanCompetRadiob = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetRadiob.setStatus('current')
staWlanCompetRadioc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetRadioc.setStatus('current')
staWlanCompet108mbp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompet108mbp.setStatus('current')
staWlanCompetExtcha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("above", 1), ("below", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetExtcha.setStatus('current')
staWlanCompetPhysig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetPhysig.setStatus('current')
staWlanCompetSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetSignal.setStatus('current')
staWlanCompetNoisel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetNoisel.setStatus('current')
staWlanCompetLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetLoad.setStatus('current')
staWlanCompetShortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetShortp.setStatus('current')
staWlanCompetShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetShorts.setStatus('current')
staWlanCompet40mhzm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompet40mhzm.setStatus('current')
staWlanCompet40mhzi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompet40mhzi.setStatus('current')
staWlanCompetShortg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("e20mhz", 1), ("e40mhz", 2), ("e20-40mhz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetShortg.setStatus('current')
staWlanCompetCompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetCompre.setStatus('current')
staWlanCompetAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetAge.setStatus('current')
staWlanCompetRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 12), ("e9m", 13), ("e12m", 14), ("e18m", 15), ("e24m", 16), ("e36m", 17), ("e48m", 18), ("e54m", 19), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetRate.setStatus('current')
staWlanCompetNonerp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetNonerp.setStatus('current')
staWlanCompetIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetIdenti.setStatus('current')
staWlanCompetInterp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 44, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetInterp.setStatus('current')
staWlanRadiusTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 48), )
if mibBuilder.loadTexts: staWlanRadiusTable.setStatus('current')
staWlanRadiusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 48, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanRadiusMac"))
if mibBuilder.loadTexts: staWlanRadiusEntry.setStatus('current')
staWlanRadiusMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 48, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiusMac.setStatus('current')
staWlanRadiusAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 48, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiusAll.setStatus('current')
staWlanRadiusAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 3, 48, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiusAge.setStatus('current')
staWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4))
staWanBytetransTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 1), )
if mibBuilder.loadTexts: staWanBytetransTable.setStatus('current')
staWanBytetransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWanBytetransIfc"))
if mibBuilder.loadTexts: staWanBytetransEntry.setStatus('current')
staWanBytetransIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransIfc.setStatus('current')
staWanBytetransCrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransCrx.setStatus('current')
staWanBytetransRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransRxb.setStatus('current')
staWanBytetransTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransTxb.setStatus('current')
staWanBytetransCtx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransCtx.setStatus('current')
staWanPackettraTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 2), )
if mibBuilder.loadTexts: staWanPackettraTable.setStatus('current')
staWanPackettraEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWanPackettraIfc"))
if mibBuilder.loadTexts: staWanPackettraEntry.setStatus('current')
staWanPackettraIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraIfc.setStatus('current')
staWanPackettraRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraRx.setStatus('current')
staWanPackettraTxt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxt.setStatus('current')
staWanPackettraTxn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxn.setStatus('current')
staWanPackettraTxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxr.setStatus('current')
staWanPackettraTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxu.setStatus('current')
staWanErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 3), )
if mibBuilder.loadTexts: staWanErrorsTable.setStatus('current')
staWanErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWanErrorsIfc"))
if mibBuilder.loadTexts: staWanErrorsEntry.setStatus('current')
staWanErrorsIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsIfc.setStatus('current')
staWanErrorsRxl1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl1.setStatus('current')
staWanErrorsRxl2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl2.setStatus('current')
staWanErrorsRxl3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl3.setStatus('current')
staWanErrorsStac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsStac.setStatus('current')
staWanErrorsTxer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsTxer.setStatus('current')
staWanWantxdisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWantxdisc.setStatus('current')
staWanWanheappa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanheappa.setStatus('current')
staWanWanqueuep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuep.setStatus('current')
staWanWanqueuee = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuee.setStatus('current')
staWanWanqueuem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuem.setStatus('current')
staWanThroughpuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 8), )
if mibBuilder.loadTexts: staWanThroughpuTable.setStatus('current')
staWanThroughpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 8, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWanThroughpuIfc"))
if mibBuilder.loadTexts: staWanThroughpuEntry.setStatus('current')
staWanThroughpuIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuIfc.setStatus('current')
staWanThroughpuRxsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuRxsc.setStatus('current')
staWanThroughpuTxsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuTxsc.setStatus('current')
staWanThroughpuRxsa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuRxsa.setStatus('current')
staWanThroughpuTxsa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuTxsa.setStatus('current')
staWanDeleteval = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanDeleteval.setStatus('current')
staWanConnectio = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanConnectio.setStatus('current')
staWanMtuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 11), )
if mibBuilder.loadTexts: staWanMtuTable.setStatus('current')
staWanMtuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWanMtuPee"))
if mibBuilder.loadTexts: staWanMtuEntry.setStatus('current')
staWanMtuPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanMtuPee.setStatus('current')
staWanMtuMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanMtuMtu.setStatus('current')
staWanActions = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20))
staWanActionsActTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 1), )
if mibBuilder.loadTexts: staWanActionsActTable.setStatus('current')
staWanActionsActEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWanActionsActTim"))
if mibBuilder.loadTexts: staWanActionsActEntry.setStatus('current')
staWanActionsActTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActTim.setStatus('current')
staWanActionsActAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActAct.setStatus('current')
staWanActionsActRes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActRes.setStatus('current')
staWanActionsLocTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 2), )
if mibBuilder.loadTexts: staWanActionsLocTable.setStatus('current')
staWanActionsLocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWanActionsLocInd"))
if mibBuilder.loadTexts: staWanActionsLocEntry.setStatus('current')
staWanActionsLocInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsLocInd.setStatus('current')
staWanActionsLocRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 4, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsLocRem.setStatus('current')
staLan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5))
staLanLanh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanLanh.setStatus('current')
staLanDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staLanDele.setStatus('current')
staLanLanq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanLanq.setStatus('current')
staLanIeee = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 80))
staLanIeeeSupTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 80, 1), )
if mibBuilder.loadTexts: staLanIeeeSupTable.setStatus('current')
staLanIeeeSupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 80, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanIeeeSupIfc"))
if mibBuilder.loadTexts: staLanIeeeSupEntry.setStatus('current')
staLanIeeeSupIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 80, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("lan-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanIeeeSupIfc.setStatus('current')
staLanIeeeSupMet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 80, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1024, 3328, 5383, 5384, 5567, 5402, 5380, 6426, 6406))).clone(namedValues=NamedValues(("none", 0), ("md5", 1024), ("tls", 3328), ("ttls-pap", 5383), ("ttls-chap", 5384), ("ttls-mschap", 5567), ("ttls-mschapv2", 5402), ("ttls-md5", 5380), ("peap-mschapv2", 6426), ("peap-gtc", 6406)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanIeeeSupMet.setStatus('current')
staLanIeeeSupSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 80, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("unauthorized", 1), ("authorized", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanIeeeSupSta.setStatus('current')
staLanIeeeSupAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 80, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanIeeeSupAut.setStatus('current')
staLanInteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 51), )
if mibBuilder.loadTexts: staLanInteTable.setStatus('current')
staLanInteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 51, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanInteIfc"))
if mibBuilder.loadTexts: staLanInteEntry.setStatus('current')
staLanInteIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 51, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteIfc.setStatus('current')
staLanInteQue = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 51, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteQue.setStatus('current')
staLanInteLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 51, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteLin.setStatus('current')
staLanInteCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 51, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 33, 34, 1, 2, 3, 4, 6, 255))).clone(namedValues=NamedValues(("none", 0), ("e10b-2", 33), ("e10b-5", 34), ("e10b-t", 1), ("fd10b-tx", 2), ("e100b-tx", 3), ("fd100b-tx", 4), ("fd1000b-tx", 6), ("power-down", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteCon.setStatus('current')
staLanInteNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 51, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteNeg.setStatus('current')
staLanInteFlo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 51, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteFlo.setStatus('current')
staLanByteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52), )
if mibBuilder.loadTexts: staLanByteTable.setStatus('current')
staLanByteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanByteIfc"))
if mibBuilder.loadTexts: staLanByteEntry.setStatus('current')
staLanByteIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteIfc.setStatus('current')
staLanByteTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteTxbyte.setStatus('current')
staLanByteRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteRxbyte.setStatus('current')
staLanByteThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteThroug.setStatus('current')
staLanByteMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteMaxthr.setStatus('current')
staLanByteBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteBytest.setStatus('current')
staLanByteBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 52, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteBytesm.setStatus('current')
staLanPackTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53), )
if mibBuilder.loadTexts: staLanPackTable.setStatus('current')
staLanPackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanPackIfc"))
if mibBuilder.loadTexts: staLanPackEntry.setStatus('current')
staLanPackIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackIfc.setStatus('current')
staLanPackRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxp.setStatus('current')
staLanPackTxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxp.setStatus('current')
staLanPackRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxb.setStatus('current')
staLanPackRxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxm.setStatus('current')
staLanPackRxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxu.setStatus('current')
staLanPackTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxb.setStatus('current')
staLanPackTxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxm.setStatus('current')
staLanPackTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 53, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxu.setStatus('current')
staLanErroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54), )
if mibBuilder.loadTexts: staLanErroTable.setStatus('current')
staLanErroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanErroIfc"))
if mibBuilder.loadTexts: staLanErroEntry.setStatus('current')
staLanErroIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroIfc.setStatus('current')
staLanErroRxe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxe.setStatus('current')
staLanErroTxe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroTxe.setStatus('current')
staLanErroSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroSta.setStatus('current')
staLanErroNic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroNic.setStatus('current')
staLanErroQue = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroQue.setStatus('current')
staLanErroRxc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxc.setStatus('current')
staLanErroCol = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 5, 54, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroCol.setStatus('current')
staPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6))
staPppPppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 1), )
if mibBuilder.loadTexts: staPppPppTable.setStatus('current')
staPppPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staPppPppIfc"))
if mibBuilder.loadTexts: staPppPppEntry.setStatus('current')
staPppPppIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppIfc.setStatus('current')
staPppPppPha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dead", 1), ("establish", 2), ("terminate", 3), ("authenticate", 4), ("callback", 5), ("network", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppPha.setStatus('current')
staPppPppLcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppLcp.setStatus('current')
staPppPppIpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppIpc.setStatus('current')
staPppPppCcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppCcp.setStatus('current')
staPppLcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2))
staPppLcpRxerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxerrors.setStatus('current')
staPppLcpRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxdiscarded.setStatus('current')
staPppLcpRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigrequ.setStatus('current')
staPppLcpRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigack.setStatus('current')
staPppLcpRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfignak.setStatus('current')
staPppLcpRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigreje.setStatus('current')
staPppLcpRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxterminater.setStatus('current')
staPppLcpRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxterminatea.setStatus('current')
staPppLcpRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxcodereject.setStatus('current')
staPppLcpRxprotocolre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxprotocolre.setStatus('current')
staPppLcpRxechoreques = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxechoreques.setStatus('current')
staPppLcpRxechoreply = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxechoreply.setStatus('current')
staPppLcpRxdiscardreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxdiscardreq.setStatus('current')
staPppLcpTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigrequ.setStatus('current')
staPppLcpTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigack.setStatus('current')
staPppLcpTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfignak.setStatus('current')
staPppLcpTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigreje.setStatus('current')
staPppLcpTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxterminater.setStatus('current')
staPppLcpTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxterminatea.setStatus('current')
staPppLcpTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxcodereject.setStatus('current')
staPppLcpTxprotocolre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxprotocolre.setStatus('current')
staPppLcpTxechoreques = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxechoreques.setStatus('current')
staPppLcpTxechoreply = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxechoreply.setStatus('current')
staPppLcpTxdiscardreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxdiscardreq.setStatus('current')
staPppLcpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 2, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppLcpDeletevalues.setStatus('current')
staPppPap = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3))
staPppPapRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxdis.setStatus('current')
staPppPapRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxreq.setStatus('current')
staPppPapRxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxsuc.setStatus('current')
staPppPapRxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxfai.setStatus('current')
staPppPapTxret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxret.setStatus('current')
staPppPapTxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxreq.setStatus('current')
staPppPapTxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxsuc.setStatus('current')
staPppPapTxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxfai.setStatus('current')
staPppPapDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppPapDelet.setStatus('current')
staPppCha = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4))
staPppChaRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxdis.setStatus('current')
staPppChaRxcha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxcha.setStatus('current')
staPppChaRxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxres.setStatus('current')
staPppChaRxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxsuc.setStatus('current')
staPppChaRxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxfai.setStatus('current')
staPppChaTxret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxret.setStatus('current')
staPppChaTxcha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxcha.setStatus('current')
staPppChaTxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxres.setStatus('current')
staPppChaTxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxsuc.setStatus('current')
staPppChaTxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxfai.setStatus('current')
staPppChaDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 4, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppChaDelet.setStatus('current')
staPppIpc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6))
staPppIpcRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxdiscarded.setStatus('current')
staPppIpcRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigrequ.setStatus('current')
staPppIpcRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigack.setStatus('current')
staPppIpcRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfignak.setStatus('current')
staPppIpcRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigreje.setStatus('current')
staPppIpcRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxterminater.setStatus('current')
staPppIpcRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxterminatea.setStatus('current')
staPppIpcRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxcodereject.setStatus('current')
staPppIpcTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigrequ.setStatus('current')
staPppIpcTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigack.setStatus('current')
staPppIpcTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfignak.setStatus('current')
staPppIpcTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigreje.setStatus('current')
staPppIpcTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxterminater.setStatus('current')
staPppIpcTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxterminatea.setStatus('current')
staPppIpcTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxcodereject.setStatus('current')
staPppIpcDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 6, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppIpcDeletevalues.setStatus('current')
staPppCcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10))
staPppCcpRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxdiscarded.setStatus('current')
staPppCcpRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigrequ.setStatus('current')
staPppCcpRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigack.setStatus('current')
staPppCcpRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfignak.setStatus('current')
staPppCcpRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigreje.setStatus('current')
staPppCcpRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxterminater.setStatus('current')
staPppCcpRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxterminatea.setStatus('current')
staPppCcpRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxcodereject.setStatus('current')
staPppCcpRxresetreque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxresetreque.setStatus('current')
staPppCcpRxresetack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxresetack.setStatus('current')
staPppCcpTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigrequ.setStatus('current')
staPppCcpTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigack.setStatus('current')
staPppCcpTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfignak.setStatus('current')
staPppCcpTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigreje.setStatus('current')
staPppCcpTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxterminater.setStatus('current')
staPppCcpTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxterminatea.setStatus('current')
staPppCcpTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxcodereject.setStatus('current')
staPppCcpTxresetreque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxresetreque.setStatus('current')
staPppCcpTxresetack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxresetack.setStatus('current')
staPppCcpCompressione = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpCompressione.setStatus('current')
staPppCcpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppCcpDeletevalues.setStatus('current')
staPppRxo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8))
staPppRxoLcpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 1), )
if mibBuilder.loadTexts: staPppRxoLcpTable.setStatus('current')
staPppRxoLcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staPppRxoLcpIfc"))
if mibBuilder.loadTexts: staPppRxoLcpEntry.setStatus('current')
staPppRxoLcpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpIfc.setStatus('current')
staPppRxoLcpMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpMru.setStatus('current')
staPppRxoLcpAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("chap", 8), ("pap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpAut.setStatus('current')
staPppRxoLcpMag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpMag.setStatus('current')
staPppRxoIpcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 3), )
if mibBuilder.loadTexts: staPppRxoIpcTable.setStatus('current')
staPppRxoIpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staPppRxoIpcIfc"))
if mibBuilder.loadTexts: staPppRxoIpcEntry.setStatus('current')
staPppRxoIpcIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcIfc.setStatus('current')
staPppRxoIpcIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcIpadd.setStatus('current')
staPppRxoIpcDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcDnsde.setStatus('current')
staPppRxoIpcDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcDnsba.setStatus('current')
staPppRxoIpcNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcNbnsd.setStatus('current')
staPppRxoIpcNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 8, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcNbnsb.setStatus('current')
staPppTxo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9))
staPppTxoLcpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 1), )
if mibBuilder.loadTexts: staPppTxoLcpTable.setStatus('current')
staPppTxoLcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staPppTxoLcpIfc"))
if mibBuilder.loadTexts: staPppTxoLcpEntry.setStatus('current')
staPppTxoLcpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpIfc.setStatus('current')
staPppTxoLcpMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpMru.setStatus('current')
staPppTxoLcpAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("chap", 8), ("pap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpAut.setStatus('current')
staPppTxoLcpMag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpMag.setStatus('current')
staPppTxoIpcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 3), )
if mibBuilder.loadTexts: staPppTxoIpcTable.setStatus('current')
staPppTxoIpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staPppTxoIpcIfc"))
if mibBuilder.loadTexts: staPppTxoIpcEntry.setStatus('current')
staPppTxoIpcIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcIfc.setStatus('current')
staPppTxoIpcIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcIpadd.setStatus('current')
staPppTxoIpcDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcDnsde.setStatus('current')
staPppTxoIpcDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcDnsba.setStatus('current')
staPppTxoIpcNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcNbnsd.setStatus('current')
staPppTxoIpcNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 9, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcNbnsb.setStatus('current')
staPppDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 6, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppDel.setStatus('current')
staTcpip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9))
staTcpipArp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1))
staTcpipArpLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpLanr.setStatus('current')
staTcpipArpLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpLant.setStatus('current')
staTcpipArpLane = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpLane.setStatus('current')
staTcpipArpWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpWanr.setStatus('current')
staTcpipArpWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpWant.setStatus('current')
staTcpipArpWane = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpWane.setStatus('current')
staTcpipArpTablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 7), )
if mibBuilder.loadTexts: staTcpipArpTablTable.setStatus('current')
staTcpipArpTablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipArpTablIpa"))
if mibBuilder.loadTexts: staTcpipArpTablEntry.setStatus('current')
staTcpipArpTablIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablIpa.setStatus('current')
staTcpipArpTablMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 7, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablMac.setStatus('current')
staTcpipArpTablLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablLas.setStatus('current')
staTcpipArpTablCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("wan", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablCon.setStatus('current')
staTcpipArpTablVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablVla.setStatus('current')
staTcpipArpTablPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablPee.setStatus('current')
staTcpipArpDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipArpDele.setStatus('current')
staTcpipIp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2))
staTcpipIpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanrx.setStatus('current')
staTcpipIpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLantx.setStatus('current')
staTcpipIpLanchecksumerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanchecksumerrors.setStatus('current')
staTcpipIpLanserviceerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanserviceerrors.setStatus('current')
staTcpipIpLanfragmentationer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanfragmentationer.setStatus('current')
staTcpipIpLanfragmentations = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanfragmentations.setStatus('current')
staTcpipIpLanfragmentationsf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanfragmentationsf.setStatus('current')
staTcpipIpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanrx.setStatus('current')
staTcpipIpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWantx.setStatus('current')
staTcpipIpWanchecksumerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanchecksumerrors.setStatus('current')
staTcpipIpWanserviceerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanserviceerrors.setStatus('current')
staTcpipIpWanfragmentationer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanfragmentationer.setStatus('current')
staTcpipIpWanfragmentations = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanfragmentations.setStatus('current')
staTcpipIpWanfragmentationsf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanfragmentationsf.setStatus('current')
staTcpipIpWanrxdisconnect = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanrxdisconnect.setStatus('current')
staTcpipIpLooperror = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLooperror.setStatus('current')
staTcpipIpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 2, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipIpDeletevalues.setStatus('current')
staTcpipIcmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3))
staTcpipIcmpLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpLanr.setStatus('current')
staTcpipIcmpLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpLant.setStatus('current')
staTcpipIcmpLanc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpLanc.setStatus('current')
staTcpipIcmpLans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpLans.setStatus('current')
staTcpipIcmpWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpWanr.setStatus('current')
staTcpipIcmpWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpWant.setStatus('current')
staTcpipIcmpWanc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpWanc.setStatus('current')
staTcpipIcmpWans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpWans.setStatus('current')
staTcpipIcmpDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipIcmpDele.setStatus('current')
staTcpipTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4))
staTcpipTftpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrx.setStatus('current')
staTcpipTftpLanrxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxr.setStatus('current')
staTcpipTftpLanrxw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxw.setStatus('current')
staTcpipTftpLanrxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxd.setStatus('current')
staTcpipTftpLanrxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxa.setStatus('current')
staTcpipTftpLanrxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxo.setStatus('current')
staTcpipTftpLanrxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxe.setStatus('current')
staTcpipTftpLanrxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxb.setStatus('current')
staTcpipTftpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantx.setStatus('current')
staTcpipTftpLantxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxd.setStatus('current')
staTcpipTftpLantxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxa.setStatus('current')
staTcpipTftpLantxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxo.setStatus('current')
staTcpipTftpLantxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxe.setStatus('current')
staTcpipTftpLantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxr.setStatus('current')
staTcpipTftpLancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLancon.setStatus('current')
staTcpipTftpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrx.setStatus('current')
staTcpipTftpWanrxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxr.setStatus('current')
staTcpipTftpWanrxw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxw.setStatus('current')
staTcpipTftpWanrxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxd.setStatus('current')
staTcpipTftpWanrxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxa.setStatus('current')
staTcpipTftpWanrxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxo.setStatus('current')
staTcpipTftpWanrxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxe.setStatus('current')
staTcpipTftpWanrxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxb.setStatus('current')
staTcpipTftpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantx.setStatus('current')
staTcpipTftpWantxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxd.setStatus('current')
staTcpipTftpWantxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxa.setStatus('current')
staTcpipTftpWantxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxo.setStatus('current')
staTcpipTftpWantxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxe.setStatus('current')
staTcpipTftpWantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxr.setStatus('current')
staTcpipTftpWancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWancon.setStatus('current')
staTcpipTftpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 4, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipTftpDelete.setStatus('current')
staTcpipTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5))
staTcpipTcpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLanrx.setStatus('current')
staTcpipTcpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLantx.setStatus('current')
staTcpipTcpLantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLantxr.setStatus('current')
staTcpipTcpLanche = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLanche.setStatus('current')
staTcpipTcpLanser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLanser.setStatus('current')
staTcpipTcpLancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLancon.setStatus('current')
staTcpipTcpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWanrx.setStatus('current')
staTcpipTcpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWantx.setStatus('current')
staTcpipTcpWantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWantxr.setStatus('current')
staTcpipTcpWanche = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWanche.setStatus('current')
staTcpipTcpWanser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWanser.setStatus('current')
staTcpipTcpWancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWancon.setStatus('current')
staTcpipTcpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 5, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipTcpDelete.setStatus('current')
staTcpipDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6))
staTcpipDhcpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpLanrx.setStatus('current')
staTcpipDhcpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpLantx.setStatus('current')
staTcpipDhcpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpWanrx.setStatus('current')
staTcpipDhcpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpWantx.setStatus('current')
staTcpipDhcpDisca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDisca.setStatus('current')
staTcpipDhcpRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxdis.setStatus('current')
staTcpipDhcpRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxreq.setStatus('current')
staTcpipDhcpRxdec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxdec.setStatus('current')
staTcpipDhcpRxinf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxinf.setStatus('current')
staTcpipDhcpRxrel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxrel.setStatus('current')
staTcpipDhcpTxoff = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpTxoff.setStatus('current')
staTcpipDhcpTxack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpTxack.setStatus('current')
staTcpipDhcpTxnak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpTxnak.setStatus('current')
staTcpipDhcpServe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpServe.setStatus('current')
staTcpipDhcpAssig = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpAssig.setStatus('current')
staTcpipDhcpMacco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpMacco.setStatus('current')
staTcpipDhcpNetwoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20), )
if mibBuilder.loadTexts: staTcpipDhcpNetwoTable.setStatus('current')
staTcpipDhcpNetwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipDhcpNetwoNetworknam"))
if mibBuilder.loadTexts: staTcpipDhcpNetwoEntry.setStatus('current')
staTcpipDhcpNetwoNetworknam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoNetworknam.setStatus('current')
staTcpipDhcpNetwoStartaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoStartaddre.setStatus('current')
staTcpipDhcpNetwoEndaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoEndaddress.setStatus('current')
staTcpipDhcpNetwoNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoNetmask.setStatus('current')
staTcpipDhcpNetwoBroadcasta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoBroadcasta.setStatus('current')
staTcpipDhcpNetwoGatewayadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoGatewayadd.setStatus('current')
staTcpipDhcpNetwoDnsdefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoDnsdefault.setStatus('current')
staTcpipDhcpNetwoDnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoDnsbackup.setStatus('current')
staTcpipDhcpNetwoNbnsdefaul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoNbnsdefaul.setStatus('current')
staTcpipDhcpNetwoNbnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoNbnsbackup.setStatus('current')
staTcpipDhcpNetwoServerflag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoServerflag.setStatus('current')
staTcpipDhcpNetwoBroadcastb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoBroadcastb.setStatus('current')
staTcpipDhcpNetwoServerid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoServerid.setStatus('current')
staTcpipDhcpNetwoLanifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoLanifc.setStatus('current')
staTcpipDhcpNetwoVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoVlanid.setStatus('current')
staTcpipDhcpNetwoMasterserv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoMasterserv.setStatus('current')
staTcpipDhcpNetwoCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoCache.setStatus('current')
staTcpipDhcpNetwoAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 20, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoAdaption.setStatus('current')
staTcpipDhcpDhcptTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16), )
if mibBuilder.loadTexts: staTcpipDhcpDhcptTable.setStatus('current')
staTcpipDhcpDhcptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipDhcpDhcptIpa"), (0, "LANCOM-L310-MIB", "staTcpipDhcpDhcptNet"))
if mibBuilder.loadTexts: staTcpipDhcpDhcptEntry.setStatus('current')
staTcpipDhcpDhcptIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptIpa.setStatus('current')
staTcpipDhcpDhcptMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptMac.setStatus('current')
staTcpipDhcpDhcptTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptTim.setStatus('current')
staTcpipDhcpDhcptHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptHos.setStatus('current')
staTcpipDhcpDhcptTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1, 5), Bits().clone(namedValues=NamedValues(("new", 1), ("new", 2), ("dyn", 16), ("unkn", 4), ("stat", 8), ("bootp", 32), ("relay", 2048)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptTyp.setStatus('current')
staTcpipDhcpDhcptLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptLan.setStatus('current')
staTcpipDhcpDhcptVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptVla.setStatus('current')
staTcpipDhcpDhcptNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 16, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptNet.setStatus('current')
staTcpipDhcpDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 6, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipDhcpDelet.setStatus('current')
staTcpipDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipDeletev.setStatus('current')
staTcpipNetbios = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8))
staTcpipNetbiosLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosLanr.setStatus('current')
staTcpipNetbiosLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosLant.setStatus('current')
staTcpipNetbiosWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosWanr.setStatus('current')
staTcpipNetbiosWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosWant.setStatus('current')
staTcpipNetbiosRegi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosRegi.setStatus('current')
staTcpipNetbiosConf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosConf.setStatus('current')
staTcpipNetbiosRele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosRele.setStatus('current')
staTcpipNetbiosRefr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosRefr.setStatus('current')
staTcpipNetbiosTime = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosTime.setStatus('current')
staTcpipNetbiosHost = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosHost.setStatus('current')
staTcpipNetbiosGrou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosGrou.setStatus('current')
staTcpipNetbiosBnod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosBnod.setStatus('current')
staTcpipNetbiosPnod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPnod.setStatus('current')
staTcpipNetbiosMnod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosMnod.setStatus('current')
staTcpipNetbiosWnod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosWnod.setStatus('current')
staTcpipNetbiosPeerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 16), )
if mibBuilder.loadTexts: staTcpipNetbiosPeerTable.setStatus('current')
staTcpipNetbiosPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 16, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipNetbiosPeerNam"))
if mibBuilder.loadTexts: staTcpipNetbiosPeerEntry.setStatus('current')
staTcpipNetbiosPeerNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPeerNam.setStatus('current')
staTcpipNetbiosPeerTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("workstation", 1), ("router", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPeerTyp.setStatus('current')
staTcpipNetbiosPeerBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPeerBac.setStatus('current')
staTcpipNetbiosPeerTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPeerTim.setStatus('current')
staTcpipNetbiosNetwTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 18), )
if mibBuilder.loadTexts: staTcpipNetbiosNetwTable.setStatus('current')
staTcpipNetbiosNetwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 18, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipNetbiosNetwNet"))
if mibBuilder.loadTexts: staTcpipNetbiosNetwEntry.setStatus('current')
staTcpipNetbiosNetwNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 18, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwNet.setStatus('current')
staTcpipNetbiosNetwNtd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwNtd.setStatus('current')
staTcpipNetbiosNetwRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwRtg.setStatus('current')
staTcpipNetbiosNetwInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwInt.setStatus('current')
staTcpipNetbiosNetwVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwVla.setStatus('current')
staTcpipNetbiosDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 8, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipNetbiosDele.setStatus('current')
staTcpipDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9))
staTcpipDnsLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsLanr.setStatus('current')
staTcpipDnsLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsLant.setStatus('current')
staTcpipDnsWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsWanr.setStatus('current')
staTcpipDnsWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsWant.setStatus('current')
staTcpipDnsForw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsForw.setStatus('current')
staTcpipDnsErro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsErro.setStatus('current')
staTcpipDnsDnsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsDnsa.setStatus('current')
staTcpipDnsDhcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsDhcp.setStatus('current')
staTcpipDnsNetb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsNetb.setStatus('current')
staTcpipDnsFilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsFilt.setStatus('current')
staTcpipDnsHitlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 11), )
if mibBuilder.loadTexts: staTcpipDnsHitlTable.setStatus('current')
staTcpipDnsHitlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipDnsHitlDom"))
if mibBuilder.loadTexts: staTcpipDnsHitlEntry.setStatus('current')
staTcpipDnsHitlDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsHitlDom.setStatus('current')
staTcpipDnsHitlReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsHitlReq.setStatus('current')
staTcpipDnsHitlTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsHitlTim.setStatus('current')
staTcpipDnsHitlIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsHitlIpa.setStatus('current')
staTcpipDnsDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 9, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipDnsDele.setStatus('current')
staTcpipHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10))
staTcpipHttpHttpac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttpac.setStatus('current')
staTcpipHttpHttpsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttpsa.setStatus('current')
staTcpipHttpHttpno = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttpno.setStatus('current')
staTcpipHttpHttpau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttpau.setStatus('current')
staTcpipHttpHttppr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttppr.setStatus('current')
staTcpipHttpAgentlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 7), )
if mibBuilder.loadTexts: staTcpipHttpAgentlTable.setStatus('current')
staTcpipHttpAgentlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipHttpAgentlAge"))
if mibBuilder.loadTexts: staTcpipHttpAgentlEntry.setStatus('current')
staTcpipHttpAgentlAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 67))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpAgentlAge.setStatus('current')
staTcpipHttpAgentlAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpAgentlAcc.setStatus('current')
staTcpipHttpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipHttpDelete.setStatus('current')
staTcpipHttpActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8), )
if mibBuilder.loadTexts: staTcpipHttpActiveTable.setStatus('current')
staTcpipHttpActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipHttpActiveIndex"))
if mibBuilder.loadTexts: staTcpipHttpActiveEntry.setStatus('current')
staTcpipHttpActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveIndex.setStatus('current')
staTcpipHttpActiveRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveRemotea.setStatus('current')
staTcpipHttpActiveRemotep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveRemotep.setStatus('current')
staTcpipHttpActiveLocalho = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveLocalho.setStatus('current')
staTcpipHttpActiveLocalpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveLocalpo.setStatus('current')
staTcpipHttpActiveLocalrt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveLocalrt.setStatus('current')
staTcpipHttpActiveIdletim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveIdletim.setStatus('current')
staTcpipHttpActiveNumconn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 10, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveNumconn.setStatus('current')
staTcpipNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20), )
if mibBuilder.loadTexts: staTcpipNetworkTable.setStatus('current')
staTcpipNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipNetworkNet"))
if mibBuilder.loadTexts: staTcpipNetworkEntry.setStatus('current')
staTcpipNetworkNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkNet.setStatus('current')
staTcpipNetworkIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkIpa.setStatus('current')
staTcpipNetworkIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkIpn.setStatus('current')
staTcpipNetworkVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkVla.setStatus('current')
staTcpipNetworkInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 512, 768, 769, 770, 771, 772, 773, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("wlan-1", 512), ("p2p-1-1", 768), ("p2p-1-2", 769), ("p2p-1-3", 770), ("p2p-1-4", 771), ("p2p-1-5", 772), ("p2p-1-6", 773), ("wlan-1-2", 1024), ("wlan-1-3", 1025), ("wlan-1-4", 1026), ("wlan-1-5", 1027), ("wlan-1-6", 1028), ("wlan-1-7", 1029), ("wlan-1-8", 1030), ("brg-1", 1536), ("brg-2", 1537), ("brg-3", 1538), ("brg-4", 1539), ("brg-5", 1540), ("brg-6", 1541), ("brg-7", 1542), ("brg-8", 1543), ("any", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkInt.setStatus('current')
staTcpipNetworkSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("strict", 1), ("loose", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkSrc.setStatus('current')
staTcpipNetworkTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("intranet", 1), ("dmz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkTyp.setStatus('current')
staTcpipNetworkRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkRtg.setStatus('current')
staTcpipSyslog = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 11))
staTcpipSyslogLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 11, 11), )
if mibBuilder.loadTexts: staTcpipSyslogLasTable.setStatus('current')
staTcpipSyslogLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 11, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipSyslogLasIdx"))
if mibBuilder.loadTexts: staTcpipSyslogLasEntry.setStatus('current')
staTcpipSyslogLasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 11, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasIdx.setStatus('current')
staTcpipSyslogLasTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 11, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasTim.setStatus('current')
staTcpipSyslogLasSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 11, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasSou.setStatus('current')
staTcpipSyslogLasLev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 11, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alarm", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasLev.setStatus('current')
staTcpipSyslogLasMes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 11, 11, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasMes.setStatus('current')
staTcpipRadiusc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13))
staTcpipRadiuscInvalidau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscInvalidau.setStatus('current')
staTcpipRadiuscAuthenticTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2), )
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticTable.setStatus('current')
staTcpipRadiuscAuthenticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipRadiuscAuthenticIpaddress"), (0, "LANCOM-L310-MIB", "staTcpipRadiuscAuthenticPort"))
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticEntry.setStatus('current')
staTcpipRadiuscAuthenticIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticIpaddress.setStatus('current')
staTcpipRadiuscAuthenticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticPort.setStatus('current')
staTcpipRadiuscAuthenticLastreque = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticLastreque.setStatus('current')
staTcpipRadiuscAuthenticRoundtrip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticRoundtrip.setStatus('current')
staTcpipRadiuscAuthenticAccessreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessreq.setStatus('current')
staTcpipRadiuscAuthenticAccessret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessret.setStatus('current')
staTcpipRadiuscAuthenticAccessacc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessacc.setStatus('current')
staTcpipRadiuscAuthenticAccessrej = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessrej.setStatus('current')
staTcpipRadiuscAuthenticAccesscha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccesscha.setStatus('current')
staTcpipRadiuscAuthenticMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticMalformed.setStatus('current')
staTcpipRadiuscAuthenticBadauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticBadauthen.setStatus('current')
staTcpipRadiuscAuthenticPendingre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticPendingre.setStatus('current')
staTcpipRadiuscAuthenticTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticTimeouts.setStatus('current')
staTcpipRadiuscAuthenticUnknownty = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticUnknownty.setStatus('current')
staTcpipRadiuscAuthenticDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticDropped.setStatus('current')
staTcpipRadiuscInvalidac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscInvalidac.setStatus('current')
staTcpipRadiuscAccountinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12), )
if mibBuilder.loadTexts: staTcpipRadiuscAccountinTable.setStatus('current')
staTcpipRadiuscAccountinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipRadiuscAccountinIpaddress"), (0, "LANCOM-L310-MIB", "staTcpipRadiuscAccountinPort"))
if mibBuilder.loadTexts: staTcpipRadiuscAccountinEntry.setStatus('current')
staTcpipRadiuscAccountinIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinIpaddress.setStatus('current')
staTcpipRadiuscAccountinPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinPort.setStatus('current')
staTcpipRadiuscAccountinLastrequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinLastrequest.setStatus('current')
staTcpipRadiuscAccountinRoundtriptime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinRoundtriptime.setStatus('current')
staTcpipRadiuscAccountinAccountingreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingreq.setStatus('current')
staTcpipRadiuscAccountinAccountingret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingret.setStatus('current')
staTcpipRadiuscAccountinAccountingres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingres.setStatus('current')
staTcpipRadiuscAccountinMalformedacco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinMalformedacco.setStatus('current')
staTcpipRadiuscAccountinBadauthentica = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinBadauthentica.setStatus('current')
staTcpipRadiuscAccountinPendingreques = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinPendingreques.setStatus('current')
staTcpipRadiuscAccountinTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinTimeouts.setStatus('current')
staTcpipRadiuscAccountinUnknowntypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinUnknowntypes.setStatus('current')
staTcpipRadiuscAccountinDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 13, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinDropped.setStatus('current')
staTcpipRadiuss = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12))
staTcpipRadiussAcce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1))
staTcpipRadiussAcceDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipRadiussAcceDeletevalues.setStatus('current')
staTcpipRadiussAcceClientsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15), )
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsTable.setStatus('current')
staTcpipRadiussAcceClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipRadiussAcceClientsIpaddress"))
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsEntry.setStatus('current')
staTcpipRadiussAcceClientsIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsIpaddress.setStatus('current')
staTcpipRadiussAcceClientsLastreque = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsLastreque.setStatus('current')
staTcpipRadiussAcceClientsNasident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsNasident.setStatus('current')
staTcpipRadiussAcceClientsAccessreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessreq.setStatus('current')
staTcpipRadiussAcceClientsDuplicate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsDuplicate.setStatus('current')
staTcpipRadiussAcceClientsAccessacc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessacc.setStatus('current')
staTcpipRadiussAcceClientsAccessrej = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessrej.setStatus('current')
staTcpipRadiussAcceClientsAccesscha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccesscha.setStatus('current')
staTcpipRadiussAcceClientsMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsMalformed.setStatus('current')
staTcpipRadiussAcceClientsBadauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsBadauthen.setStatus('current')
staTcpipRadiussAcceClientsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsDropped.setStatus('current')
staTcpipRadiussAcceClientsUnknownty = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsUnknownty.setStatus('current')
staTcpipRadiussAcceTotalaccessreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessreq.setStatus('current')
staTcpipRadiussAcceTotalinvalidac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalinvalidac.setStatus('current')
staTcpipRadiussAcceTotalduplicate = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalduplicate.setStatus('current')
staTcpipRadiussAcceTotalaccessacc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessacc.setStatus('current')
staTcpipRadiussAcceTotalaccessrej = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessrej.setStatus('current')
staTcpipRadiussAcceTotalaccesscha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccesscha.setStatus('current')
staTcpipRadiussAcceTotalmalformed = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalmalformed.setStatus('current')
staTcpipRadiussAcceTotalaccessbad = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessbad.setStatus('current')
staTcpipRadiussAcceTotalaccessdro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessdro.setStatus('current')
staTcpipRadiussAcceTotalaccessunk = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessunk.setStatus('current')
staTcpipRadiussAcco = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2))
staTcpipRadiussAccoDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipRadiussAccoDeletevalues.setStatus('current')
staTcpipRadiussAccoClientsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15), )
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsTable.setStatus('current')
staTcpipRadiussAccoClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipRadiussAccoClientsIpaddress"))
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsEntry.setStatus('current')
staTcpipRadiussAccoClientsIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsIpaddress.setStatus('current')
staTcpipRadiussAccoClientsLastreques = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsLastreques.setStatus('current')
staTcpipRadiussAccoClientsNasident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsNasident.setStatus('current')
staTcpipRadiussAccoClientsAccountreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountreq.setStatus('current')
staTcpipRadiussAccoClientsDuplicater = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsDuplicater.setStatus('current')
staTcpipRadiussAccoClientsAccountres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountres.setStatus('current')
staTcpipRadiussAccoClientsAccountnor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountnor.setStatus('current')
staTcpipRadiussAccoClientsMalformeda = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsMalformeda.setStatus('current')
staTcpipRadiussAccoClientsBadauthent = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsBadauthent.setStatus('current')
staTcpipRadiussAccoClientsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsDropped.setStatus('current')
staTcpipRadiussAccoClientsUnknowntyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsUnknowntyp.setStatus('current')
staTcpipRadiussAccoActiveaccountinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16), )
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinTable.setStatus('current')
staTcpipRadiussAccoActiveaccountinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipRadiussAccoActiveaccountinIndex"))
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinEntry.setStatus('current')
staTcpipRadiussAccoActiveaccountinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinIndex.setStatus('current')
staTcpipRadiussAccoActiveaccountinStarttim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinStarttim.setStatus('current')
staTcpipRadiussAccoActiveaccountinLastupda = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinLastupda.setStatus('current')
staTcpipRadiussAccoActiveaccountinUpdatede = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinUpdatede.setStatus('current')
staTcpipRadiussAccoActiveaccountinNasipadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasipadd.setStatus('current')
staTcpipRadiussAccoActiveaccountinNasident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasident.setStatus('current')
staTcpipRadiussAccoActiveaccountinNasportt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1))).clone(namedValues=NamedValues(("async", 0), ("sync", 1), ("isdn-sync", 2), ("v-120", 3), ("v-110", 4), ("virtual", 5), ("piafs", 6), ("hdlc-clear-channel", 7), ("x-25", 8), ("x-75", 9), ("g-3-fax", 10), ("sdsl", 11), ("adsl-cap", 12), ("adsl-dmt", 13), ("idsl", 14), ("ethernet", 15), ("xdsl", 16), ("cable", 17), ("wireless-other", 18), ("wireless-802-11", 19), ("token-ring", 20), ("fddi", 21), ("wireless-cdma2000", 22), ("wireless-umts", 23), ("wireless-1x-ev", 24), ("iapp", 25), ("fttp", 26), ("wireless-802-16", 27), ("wireless-802-20", 28), ("wireless-802-22", 29), ("pppoa", 30), ("pppoeoa", 31), ("pppoeoe", 32), ("pppoeovlan", 33), ("pppoeoqinq", 34), ("xpon", 35), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasportt.setStatus('current')
staTcpipRadiussAccoActiveaccountinNasporti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasporti.setStatus('current')
staTcpipRadiussAccoActiveaccountinSessioni = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinSessioni.setStatus('current')
staTcpipRadiussAccoActiveaccountinCalledst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinCalledst.setStatus('current')
staTcpipRadiussAccoActiveaccountinCallings = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinCallings.setStatus('current')
staTcpipRadiussAccoActiveaccountinUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinUsername.setStatus('current')
staTcpipRadiussAccoActiveaccountinSessiont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinSessiont.setStatus('current')
staTcpipRadiussAccoActiveaccountinInputpac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinInputpac.setStatus('current')
staTcpipRadiussAccoActiveaccountinOutputpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinOutputpa.setStatus('current')
staTcpipRadiussAccoActiveaccountinInputoct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinInputoct.setStatus('current')
staTcpipRadiussAccoActiveaccountinOutputoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinOutputoc.setStatus('current')
staTcpipRadiussAccoActiveaccountinIpaddres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 16, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinIpaddres.setStatus('current')
staTcpipRadiussAccoCompletedaccounTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17), )
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounTable.setStatus('current')
staTcpipRadiussAccoCompletedaccounEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipRadiussAccoCompletedaccounIndex"))
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounEntry.setStatus('current')
staTcpipRadiussAccoCompletedaccounIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounIndex.setStatus('current')
staTcpipRadiussAccoCompletedaccounStarttim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounStarttim.setStatus('current')
staTcpipRadiussAccoCompletedaccounStoptime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounStoptime.setStatus('current')
staTcpipRadiussAccoCompletedaccounTerminat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("user-request", 1), ("lost-carrier", 2), ("lost-service", 3), ("idle-timeout", 4), ("session-timeout", 5), ("admin-reset", 6), ("admin-reboot", 7), ("port-error", 8), ("nas-error", 9), ("nas-request", 10), ("nas-reboot", 11), ("port-unneeded", 12), ("port-preempted", 13), ("port-suspended", 14), ("service-unavailable", 15), ("callback", 16), ("user-error", 17), ("host-request", 18), ("supplicant-restart", 19), ("reauthentication-failure", 20), ("port-reinit", 21), ("port-admin-disabled", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounTerminat.setStatus('current')
staTcpipRadiussAccoCompletedaccounNasipadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasipadd.setStatus('current')
staTcpipRadiussAccoCompletedaccounNasident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasident.setStatus('current')
staTcpipRadiussAccoCompletedaccounNasportt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1))).clone(namedValues=NamedValues(("async", 0), ("sync", 1), ("isdn-sync", 2), ("v-120", 3), ("v-110", 4), ("virtual", 5), ("piafs", 6), ("hdlc-clear-channel", 7), ("x-25", 8), ("x-75", 9), ("g-3-fax", 10), ("sdsl", 11), ("adsl-cap", 12), ("adsl-dmt", 13), ("idsl", 14), ("ethernet", 15), ("xdsl", 16), ("cable", 17), ("wireless-other", 18), ("wireless-802-11", 19), ("token-ring", 20), ("fddi", 21), ("wireless-cdma2000", 22), ("wireless-umts", 23), ("wireless-1x-ev", 24), ("iapp", 25), ("fttp", 26), ("wireless-802-16", 27), ("wireless-802-20", 28), ("wireless-802-22", 29), ("pppoa", 30), ("pppoeoa", 31), ("pppoeoe", 32), ("pppoeovlan", 33), ("pppoeoqinq", 34), ("xpon", 35), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasportt.setStatus('current')
staTcpipRadiussAccoCompletedaccounNasporti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasporti.setStatus('current')
staTcpipRadiussAccoCompletedaccounSessioni = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounSessioni.setStatus('current')
staTcpipRadiussAccoCompletedaccounCalledst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounCalledst.setStatus('current')
staTcpipRadiussAccoCompletedaccounCallings = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounCallings.setStatus('current')
staTcpipRadiussAccoCompletedaccounUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounUsername.setStatus('current')
staTcpipRadiussAccoCompletedaccounSessiont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounSessiont.setStatus('current')
staTcpipRadiussAccoCompletedaccounInputpac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounInputpac.setStatus('current')
staTcpipRadiussAccoCompletedaccounOutputpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounOutputpa.setStatus('current')
staTcpipRadiussAccoCompletedaccounInputoct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounInputoct.setStatus('current')
staTcpipRadiussAccoCompletedaccounOutputoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounOutputoc.setStatus('current')
staTcpipRadiussAccoCompletedaccounIpaddres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 17, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounIpaddres.setStatus('current')
staTcpipRadiussAccoTotalaccountreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountreq.setStatus('current')
staTcpipRadiussAccoTotalinvalidacc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalinvalidacc.setStatus('current')
staTcpipRadiussAccoTotalduplicatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalduplicatea.setStatus('current')
staTcpipRadiussAccoTotalaccountres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountres.setStatus('current')
staTcpipRadiussAccoTotalmalformeda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalmalformeda.setStatus('current')
staTcpipRadiussAccoTotalaccountbad = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountbad.setStatus('current')
staTcpipRadiussAccoTotalaccountdro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountdro.setStatus('current')
staTcpipRadiussAccoTotalaccountnor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountnor.setStatus('current')
staTcpipRadiussAccoTotalaccountunk = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountunk.setStatus('current')
staTcpipRadiussLogtTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 10), )
if mibBuilder.loadTexts: staTcpipRadiussLogtTable.setStatus('current')
staTcpipRadiussLogtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTcpipRadiussLogtInd"))
if mibBuilder.loadTexts: staTcpipRadiussLogtEntry.setStatus('current')
staTcpipRadiussLogtInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussLogtInd.setStatus('current')
staTcpipRadiussLogtTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussLogtTim.setStatus('current')
staTcpipRadiussLogtEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussLogtEve.setStatus('current')
staTcpipRadiussDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 9, 12, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipRadiussDele.setStatus('current')
staIprou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10))
staIprouLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanrx.setStatus('current')
staIprouLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLantx.setStatus('current')
staIprouLanlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanlo.setStatus('current')
staIprouLanne = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanne.setStatus('current')
staIprouLanro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanro.setStatus('current')
staIprouLantt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLantt.setStatus('current')
staIprouLanfi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanfi.setStatus('current')
staIprouLandi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLandi.setStatus('current')
staIprouWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWanrx.setStatus('current')
staIprouWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWantx.setStatus('current')
staIprouWanne = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWanne.setStatus('current')
staIprouWantt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWantt.setStatus('current')
staIprouWanfi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWanfi.setStatus('current')
staIprouWandi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWandi.setStatus('current')
staIprouWanty = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWanty.setStatus('current')
staIprouArper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouArper.setStatus('current')
staIprouEstabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17), )
if mibBuilder.loadTexts: staIprouEstabTable.setStatus('current')
staIprouEstabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouEstabTim"), (0, "LANCOM-L310-MIB", "staIprouEstabCou"))
if mibBuilder.loadTexts: staIprouEstabEntry.setStatus('current')
staIprouEstabTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabTim.setStatus('current')
staIprouEstabDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabDes.setStatus('current')
staIprouEstabSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabSrc.setStatus('current')
staIprouEstabPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 17, 47, 50, 51, 62, 108, 112, 119))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggt", 3), ("ipip", 4), ("tcp", 6), ("egp", 8), ("udp", 17), ("gre", 47), ("esp", 50), ("ah", 51), ("cftp", 62), ("ipcomp", 108), ("vrrp", 112), ("srp", 119)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabPro.setStatus('current')
staIprouEstabDpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabDpo.setStatus('current')
staIprouEstabSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabSou.setStatus('current')
staIprouEstabCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabCou.setStatus('current')
staIprouProtoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 18), )
if mibBuilder.loadTexts: staIprouProtoTable.setStatus('current')
staIprouProtoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 18, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouProtoPro"))
if mibBuilder.loadTexts: staIprouProtoEntry.setStatus('current')
staIprouProtoPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 17, 47, 50, 51, 62, 108, 112, 119))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggt", 3), ("ipip", 4), ("tcp", 6), ("egp", 8), ("udp", 17), ("gre", 47), ("esp", 50), ("ah", 51), ("cftp", 62), ("ipcomp", 108), ("vrrp", 112), ("srp", 119)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouProtoPro.setStatus('current')
staIprouProtoLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouProtoLan.setStatus('current')
staIprouProtoWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouProtoWan.setStatus('current')
staIprouRip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19))
staIprouRipRx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipRx.setStatus('current')
staIprouRipRequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipRequ.setStatus('current')
staIprouRipResp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipResp.setStatus('current')
staIprouRipDisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDisc.setStatus('current')
staIprouRipErro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipErro.setStatus('current')
staIprouRipEntr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipEntr.setStatus('current')
staIprouRipTx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipTx.setStatus('current')
staIprouRipIpriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8), )
if mibBuilder.loadTexts: staIprouRipIpriTable.setStatus('current')
staIprouRipIpriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouRipIpriIpa"), (0, "LANCOM-L310-MIB", "staIprouRipIpriIpn"), (0, "LANCOM-L310-MIB", "staIprouRipIpriRtg"))
if mibBuilder.loadTexts: staIprouRipIpriEntry.setStatus('current')
staIprouRipIpriIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriIpa.setStatus('current')
staIprouRipIpriIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriIpn.setStatus('current')
staIprouRipIpriRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriRtg.setStatus('current')
staIprouRipIpriTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriTim.setStatus('current')
staIprouRipIpriDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriDis.setStatus('current')
staIprouRipIpriGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriGat.setStatus('current')
staIprouRipIpriPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriPee.setStatus('current')
staIprouRipIpriPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriPor.setStatus('current')
staIprouRipIpriVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriVla.setStatus('current')
staIprouRipIpriNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 8, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriNet.setStatus('current')
staIprouRipDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIprouRipDele.setStatus('current')
staIprouRipLansTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10), )
if mibBuilder.loadTexts: staIprouRipLansTable.setStatus('current')
staIprouRipLansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouRipLansNetw"))
if mibBuilder.loadTexts: staIprouRipLansEntry.setStatus('current')
staIprouRipLansNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansNetw.setStatus('current')
staIprouRipLansRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansRipt.setStatus('current')
staIprouRipLansRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansRipa.setStatus('current')
staIprouRipLansProp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansProp.setStatus('current')
staIprouRipLansPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansPois.setStatus('current')
staIprouRipLansDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansDftr.setStatus('current')
staIprouRipLansRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansRtgt.setStatus('current')
staIprouRipLansRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansRxfi.setStatus('current')
staIprouRipLansTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansTxfi.setStatus('current')
staIprouRipLansPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansPort.setStatus('current')
staIprouRipLansVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansVlan.setStatus('current')
staIprouRipVrrpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 12), )
if mibBuilder.loadTexts: staIprouRipVrrpTable.setStatus('current')
staIprouRipVrrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 12, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouRipVrrpNet"), (0, "LANCOM-L310-MIB", "staIprouRipVrrpRou"))
if mibBuilder.loadTexts: staIprouRipVrrpEntry.setStatus('current')
staIprouRipVrrpNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipVrrpNet.setStatus('current')
staIprouRipVrrpRip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipVrrpRip.setStatus('current')
staIprouRipVrrpRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipVrrpRou.setStatus('current')
staIprouRipWansTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11), )
if mibBuilder.loadTexts: staIprouRipWansTable.setStatus('current')
staIprouRipWansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouRipWansPeer"))
if mibBuilder.loadTexts: staIprouRipWansEntry.setStatus('current')
staIprouRipWansPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansPeer.setStatus('current')
staIprouRipWansRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRipt.setStatus('current')
staIprouRipWansRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRipa.setStatus('current')
staIprouRipWansMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansMasq.setStatus('current')
staIprouRipWansPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansPois.setStatus('current')
staIprouRipWansRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRfc2.setStatus('current')
staIprouRipWansGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansGate.setStatus('current')
staIprouRipWansDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansDftr.setStatus('current')
staIprouRipWansRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRtgt.setStatus('current')
staIprouRipWansRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRxfi.setStatus('current')
staIprouRipWansTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 11, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansTxfi.setStatus('current')
staIprouRipDynlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13), )
if mibBuilder.loadTexts: staIprouRipDynlTable.setStatus('current')
staIprouRipDynlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouRipDynlGate"))
if mibBuilder.loadTexts: staIprouRipDynlEntry.setStatus('current')
staIprouRipDynlGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlGate.setStatus('current')
staIprouRipDynlRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlRipt.setStatus('current')
staIprouRipDynlRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlRipa.setStatus('current')
staIprouRipDynlPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlPois.setStatus('current')
staIprouRipDynlDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlDftr.setStatus('current')
staIprouRipDynlRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlRtgt.setStatus('current')
staIprouRipDynlRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlRxfi.setStatus('current')
staIprouRipDynlTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlTxfi.setStatus('current')
staIprouRipDynlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlPort.setStatus('current')
staIprouRipDynlVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlVlan.setStatus('current')
staIprouRipDynwTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14), )
if mibBuilder.loadTexts: staIprouRipDynwTable.setStatus('current')
staIprouRipDynwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouRipDynwPeer"))
if mibBuilder.loadTexts: staIprouRipDynwEntry.setStatus('current')
staIprouRipDynwPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwPeer.setStatus('current')
staIprouRipDynwRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRipt.setStatus('current')
staIprouRipDynwRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRipa.setStatus('current')
staIprouRipDynwMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwMasq.setStatus('current')
staIprouRipDynwPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwPois.setStatus('current')
staIprouRipDynwRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRfc2.setStatus('current')
staIprouRipDynwGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwGate.setStatus('current')
staIprouRipDynwDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwDftr.setStatus('current')
staIprouRipDynwRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRtgt.setStatus('current')
staIprouRipDynwRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRxfi.setStatus('current')
staIprouRipDynwTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 14, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwTxfi.setStatus('current')
staIprouRipFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 15), )
if mibBuilder.loadTexts: staIprouRipFiltTable.setStatus('current')
staIprouRipFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 15, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouRipFiltIdx"))
if mibBuilder.loadTexts: staIprouRipFiltEntry.setStatus('current')
staIprouRipFiltIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltIdx.setStatus('current')
staIprouRipFiltNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltNam.setStatus('current')
staIprouRipFiltIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 15, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltIpa.setStatus('current')
staIprouRipFiltIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 15, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltIpn.setStatus('current')
staIprouRipFiltTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 19, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltTyp.setStatus('current')
staIprouDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIprouDelet.setStatus('current')
staIprouServiTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21), )
if mibBuilder.loadTexts: staIprouServiTable.setStatus('current')
staIprouServiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouServiService"))
if mibBuilder.loadTexts: staIprouServiEntry.setStatus('current')
staIprouServiService = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("icmp", 1), ("ftp", 2), ("http", 3), ("smtp", 4), ("dns", 5), ("telnet", 6), ("tftp", 7), ("dhcp", 8), ("pop3", 9), ("netbios", 10), ("imap2", 11), ("news", 12), ("irc", 13), ("snmp", 14), ("other", 15), ("total", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiService.setStatus('current')
staIprouServiPacketrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiPacketrx.setStatus('current')
staIprouServiPackettx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiPackettx.setStatus('current')
staIprouServiPacketre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiPacketre.setStatus('current')
staIprouServiKbytesrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiKbytesrx.setStatus('current')
staIprouServiKbytestx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiKbytestx.setStatus('current')
staIprouServiKbytesre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 21, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiKbytesre.setStatus('current')
staIprouFilteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22), )
if mibBuilder.loadTexts: staIprouFilteTable.setStatus('current')
staIprouFilteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouFilteIdx"))
if mibBuilder.loadTexts: staIprouFilteEntry.setStatus('current')
staIprouFilteIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteIdx.setStatus('current')
staIprouFilteProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteProt.setStatus('current')
staIprouFilteSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteSrcm.setStatus('current')
staIprouFilteSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteSrca.setStatus('current')
staIprouFilteSrcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteSrcn.setStatus('current')
staIprouFilteSst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteSst.setStatus('current')
staIprouFilteSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteSend.setStatus('current')
staIprouFilteDstm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteDstm.setStatus('current')
staIprouFilteDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteDsta.setStatus('current')
staIprouFilteDstn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteDstn.setStatus('current')
staIprouFilteDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteDst.setStatus('current')
staIprouFilteDend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteDend.setStatus('current')
staIprouFilteActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteActi.setStatus('current')
staIprouFilteLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteLink.setStatus('current')
staIprouFiltePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFiltePrio.setStatus('current')
staIprouFilteRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 22, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilteRtgt.setStatus('current')
staIprouConneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23), )
if mibBuilder.loadTexts: staIprouConneTable.setStatus('current')
staIprouConneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouConneSrca"), (0, "LANCOM-L310-MIB", "staIprouConneDsta"), (0, "LANCOM-L310-MIB", "staIprouConneProt"), (0, "LANCOM-L310-MIB", "staIprouConneSrcp"), (0, "LANCOM-L310-MIB", "staIprouConneDstp"))
if mibBuilder.loadTexts: staIprouConneEntry.setStatus('current')
staIprouConneSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneSrca.setStatus('current')
staIprouConneDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneDsta.setStatus('current')
staIprouConneProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneProt.setStatus('current')
staIprouConneSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneSrcp.setStatus('current')
staIprouConneDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneDstp.setStatus('current')
staIprouConneRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneRtgt.setStatus('current')
staIprouConneTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneTime.setStatus('current')
staIprouConneFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneFlag.setStatus('current')
staIprouConneFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneFilt.setStatus('current')
staIprouConneSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneSrcr.setStatus('current')
staIprouConneDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 23, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConneDest.setStatus('current')
staIprouOpenpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29), )
if mibBuilder.loadTexts: staIprouOpenpTable.setStatus('current')
staIprouOpenpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouOpenpSrca"), (0, "LANCOM-L310-MIB", "staIprouOpenpDsta"), (0, "LANCOM-L310-MIB", "staIprouOpenpProt"), (0, "LANCOM-L310-MIB", "staIprouOpenpDstp"))
if mibBuilder.loadTexts: staIprouOpenpEntry.setStatus('current')
staIprouOpenpSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenpSrca.setStatus('current')
staIprouOpenpDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenpDsta.setStatus('current')
staIprouOpenpProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenpProt.setStatus('current')
staIprouOpenpDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenpDstp.setStatus('current')
staIprouOpenpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenpTime.setStatus('current')
staIprouOpenpFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenpFilt.setStatus('current')
staIprouOpenpSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 29, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenpSrcr.setStatus('current')
staIprouHostbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 24), )
if mibBuilder.loadTexts: staIprouHostbTable.setStatus('current')
staIprouHostbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 24, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouHostbSrc"))
if mibBuilder.loadTexts: staIprouHostbEntry.setStatus('current')
staIprouHostbSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 24, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHostbSrc.setStatus('current')
staIprouHostbTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHostbTim.setStatus('current')
staIprouHostbFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 24, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHostbFil.setStatus('current')
staIprouPortbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 25), )
if mibBuilder.loadTexts: staIprouPortbTable.setStatus('current')
staIprouPortbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 25, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouPortbDsta"))
if mibBuilder.loadTexts: staIprouPortbEntry.setStatus('current')
staIprouPortbDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 25, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbDsta.setStatus('current')
staIprouPortbProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbProt.setStatus('current')
staIprouPortbDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbDstp.setStatus('current')
staIprouPortbTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbTime.setStatus('current')
staIprouPortbFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 25, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbFilt.setStatus('current')
staIprouLogtaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26), )
if mibBuilder.loadTexts: staIprouLogtaTable.setStatus('current')
staIprouLogtaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouLogtaIdx"))
if mibBuilder.loadTexts: staIprouLogtaEntry.setStatus('current')
staIprouLogtaIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaIdx.setStatus('current')
staIprouLogtaSyst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaSyst.setStatus('current')
staIprouLogtaSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaSrca.setStatus('current')
staIprouLogtaDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaDsta.setStatus('current')
staIprouLogtaProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaProt.setStatus('current')
staIprouLogtaSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaSrcp.setStatus('current')
staIprouLogtaDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaDstp.setStatus('current')
staIprouLogtaFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaFilt.setStatus('current')
staIprouLogtaLimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaLimi.setStatus('current')
staIprouLogtaThre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaThre.setStatus('current')
staIprouLogtaActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 26, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtaActi.setStatus('current')
staIprouHoconTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 27), )
if mibBuilder.loadTexts: staIprouHoconTable.setStatus('current')
staIprouHoconEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 27, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouHoconDst"))
if mibBuilder.loadTexts: staIprouHoconEntry.setStatus('current')
staIprouHoconDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 27, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHoconDst.setStatus('current')
staIprouHoconNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 27, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHoconNum.setStatus('current')
staIprouHoconTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 27, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHoconTim.setStatus('current')
staIprouQosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28), )
if mibBuilder.loadTexts: staIprouQosTable.setStatus('current')
staIprouQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouQosIfc"))
if mibBuilder.loadTexts: staIprouQosEntry.setStatus('current')
staIprouQosIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosIfc.setStatus('current')
staIprouQosPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosPeer.setStatus('current')
staIprouQosUpstr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosUpstr.setStatus('current')
staIprouQosDowns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosDowns.setStatus('current')
staIprouQosRxres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosRxres.setStatus('current')
staIprouQosRxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosRxreq.setStatus('current')
staIprouQosRxblo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosRxblo.setStatus('current')
staIprouQosTxres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosTxres.setStatus('current')
staIprouQosTxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosTxreq.setStatus('current')
staIprouQosTxfav = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosTxfav.setStatus('current')
staIprouQosTxblo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosTxblo.setStatus('current')
staIprouQosFragm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosFragm.setStatus('current')
staIprouQosPmtus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 28, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosPmtus.setStatus('current')
staIprouL4err = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouL4err.setStatus('current')
staIprouVrrp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33))
staIprouVrrpOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpOpe.setStatus('current')
staIprouVrrpRx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpRx.setStatus('current')
staIprouVrrpTx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpTx.setStatus('current')
staIprouVrrpErr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpErr.setStatus('current')
staIprouVrrpDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpDro.setStatus('current')
staIprouVrrpInt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpInt.setStatus('current')
staIprouVrrpVirTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10), )
if mibBuilder.loadTexts: staIprouVrrpVirTable.setStatus('current')
staIprouVrrpVirEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouVrrpVirRou"))
if mibBuilder.loadTexts: staIprouVrrpVirEntry.setStatus('current')
staIprouVrrpVirRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirRou.setStatus('current')
staIprouVrrpVirVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirVir.setStatus('current')
staIprouVrrpVirPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirPri.setStatus('current')
staIprouVrrpVirBpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirBpr.setStatus('current')
staIprouVrrpVirPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirPee.setStatus('current')
staIprouVrrpVirSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("init", 0), ("listen", 1), ("standby", 2), ("master", 3), ("down", 4), ("reconnect", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirSta.setStatus('current')
staIprouVrrpVirBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirBac.setStatus('current')
staIprouVrrpVirMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirMas.setStatus('current')
staIprouVrrpVirPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirPor.setStatus('current')
staIprouVrrpVirVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirVla.setStatus('current')
staIprouVrrpVirNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 10, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirNet.setStatus('current')
staIprouVrrpMacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 11), )
if mibBuilder.loadTexts: staIprouVrrpMacTable.setStatus('current')
staIprouVrrpMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouVrrpMacVir"))
if mibBuilder.loadTexts: staIprouVrrpMacEntry.setStatus('current')
staIprouVrrpMacVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpMacVir.setStatus('current')
staIprouVrrpMacMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 11, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpMacMac.setStatus('current')
staIprouVrrpMacRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpMacRou.setStatus('current')
staIprouVrrpEveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 12), )
if mibBuilder.loadTexts: staIprouVrrpEveTable.setStatus('current')
staIprouVrrpEveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 12, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouVrrpEveIdx"))
if mibBuilder.loadTexts: staIprouVrrpEveEntry.setStatus('current')
staIprouVrrpEveIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveIdx.setStatus('current')
staIprouVrrpEveSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveSys.setStatus('current')
staIprouVrrpEveSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveSrc.setStatus('current')
staIprouVrrpEveVri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveVri.setStatus('current')
staIprouVrrpEveEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("invalid-ttl", 1), ("invalid-version", 2), ("bad-number-of-virtual-addresses", 3), ("bad-authentication-type", 4), ("bad-advertisement-interval", 5), ("invalid-vrid", 6), ("invalid-router-address", 7), ("invalid-priority", 8), ("virtual-router-stopped", 9), ("virtual-router-started", 10), ("link-up", 11), ("link-down", 12), ("new-master", 13), ("backup-started", 14), ("backup-ended", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveEve.setStatus('current')
staIprouVrrpEveInf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveInf.setStatus('current')
staIprouVrrpDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 33, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIprouVrrpDel.setStatus('current')
staIprouActipTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30), )
if mibBuilder.loadTexts: staIprouActipTable.setStatus('current')
staIprouActipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIprouActipIpa"), (0, "LANCOM-L310-MIB", "staIprouActipIpn"), (0, "LANCOM-L310-MIB", "staIprouActipRtg"))
if mibBuilder.loadTexts: staIprouActipEntry.setStatus('current')
staIprouActipIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActipIpa.setStatus('current')
staIprouActipIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActipIpn.setStatus('current')
staIprouActipRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActipRtg.setStatus('current')
staIprouActipGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActipGat.setStatus('current')
staIprouActipPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActipPee.setStatus('current')
staIprouActipDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActipDis.setStatus('current')
staIprouActipMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("no", 0), ("on", 1), ("intranet", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActipMas.setStatus('current')
staIprouActipTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 10, 30, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("static", 1), ("rip", 2), ("vpn", 3), ("capwap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActipTyp.setStatus('current')
staConfi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11))
staConfiLanactiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLanactiv.setStatus('current')
staConfiLantotal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLantotal.setStatus('current')
staConfiWanactiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiWanactiv.setStatus('current')
staConfiWantotal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiWantotal.setStatus('current')
staConfiOutbanda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiOutbanda.setStatus('current')
staConfiOutbandt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiOutbandt.setStatus('current')
staConfiOutbandb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiOutbandb.setStatus('current')
staConfiLoginerr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLoginerr.setStatus('current')
staConfiLoginloc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLoginloc.setStatus('current')
staConfiLoginrej = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLoginrej.setStatus('current')
staConfiStartsca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfiStartsca.setStatus('current')
staConfiScanresuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14), )
if mibBuilder.loadTexts: staConfiScanresuTable.setStatus('current')
staConfiScanresuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staConfiScanresuIpadd"), (0, "LANCOM-L310-MIB", "staConfiScanresuRtgta"))
if mibBuilder.loadTexts: staConfiScanresuEntry.setStatus('current')
staConfiScanresuIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuIpadd.setStatus('current')
staConfiScanresuRtgta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuRtgta.setStatus('current')
staConfiScanresuName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuName.setStatus('current')
staConfiScanresuDevic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuDevic.setStatus('current')
staConfiScanresuVersi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuVersi.setStatus('current')
staConfiScanresuCapip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuCapip.setStatus('current')
staConfiScanresuHttpp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuHttpp.setStatus('current')
staConfiScanresuHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuHttps.setStatus('current')
staConfiScanresuState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("scanning", 0), ("ready", 1), ("error", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuState.setStatus('current')
staConfiFeaturesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 16), )
if mibBuilder.loadTexts: staConfiFeaturesTable.setStatus('current')
staConfiFeaturesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 16, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staConfiFeaturesFea"))
if mibBuilder.loadTexts: staConfiFeaturesEntry.setStatus('current')
staConfiFeaturesFea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("ipx", 1), ("lan-bridge", 2), ("lancapi", 3), ("leased-line", 4), ("switched-line", 5), ("dsl-interface", 6), ("fax", 7), ("modem", 8), ("vpn-5", 9), ("vpn-25", 10), ("vpn-25-old", 11), ("vpn-50-old", 12), ("vpn-100", 13), ("wlc-4025-100", 14), ("wlan-point-to-point", 15), ("public-spot", 16), ("vpn-200", 17), ("vpn-500", 18), ("vpn-1000", 19), ("hermes1-wpa", 20), ("vpn-3", 21), ("umts", 22), ("dynamic-vpn", 23), ("wlan-5ghz", 24), ("wlan-no-encryption", 25), ("voip-advanced-32", 26), ("voip-basic", 27), ("wlan-fcc-restrictions", 28), ("wlc-4025-50", 29), ("wlc-4006-12", 30), ("voip-advanced-8", 31), ("unused", 32), ("unused", 33), ("utm-antivirus-small", 34), ("utm-antispam-small", 35), ("utm-contentfilter-small", 36), ("wlc-public-spot", 37)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiFeaturesFea.setStatus('current')
staConfiFeaturesExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiFeaturesExp.setStatus('current')
staConfiDeleteva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfiDeleteva.setStatus('current')
staConfiEventlogTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12), )
if mibBuilder.loadTexts: staConfiEventlogTable.setStatus('current')
staConfiEventlogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staConfiEventlogIdx"))
if mibBuilder.loadTexts: staConfiEventlogEntry.setStatus('current')
staConfiEventlogIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogIdx.setStatus('current')
staConfiEventlogSyste = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogSyste.setStatus('current')
staConfiEventlogEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29))).clone(namedValues=NamedValues(("fwuplstart", 4), ("uplsucc", 5), ("uplfailto", 6), ("uplfailincl", 7), ("uplfailbaddev", 8), ("login", 9), ("logout", 10), ("cnfuplstart", 11), ("cnfdnlstart", 12), ("cnfdnlsucc", 13), ("errlogin", 29)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogEvent.setStatus('current')
staConfiEventlogAcces = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 254, 255))).clone(namedValues=NamedValues(("outband", 0), ("telnet", 1), ("tftp", 2), ("http", 3), ("snmp", 4), ("https", 5), ("telnet-ssl", 6), ("ssh", 7), ("ppp", 254), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogAcces.setStatus('current')
staConfiEventlogIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogIpadd.setStatus('current')
staConfiEventlogInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogInfo1.setStatus('current')
staConfiEventlogInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 11, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogInfo2.setStatus('current')
staQueue = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12))
staQueueLanheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueLanheap.setStatus('current')
staQueueWanheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueWanheap.setStatus('current')
staQueueWanqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueWanqueu.setStatus('current')
staQueueArpquer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueArpquer.setStatus('current')
staQueueArpqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueArpqueu.setStatus('current')
staQueueIpqueue = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueIpqueue.setStatus('current')
staQueueIpurgen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueIpurgen.setStatus('current')
staQueueIcmpque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueIcmpque.setStatus('current')
staQueueTcpqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueTcpqueu.setStatus('current')
staQueueTftpser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueTftpser.setStatus('current')
staQueueSnmpque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueSnmpque.setStatus('current')
staQueueProthea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueProthea.setStatus('current')
staQueueDhcpser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueDhcpser.setStatus('current')
staQueueDhcpcli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueDhcpcli.setStatus('current')
staQueueIprripq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueIprripq.setStatus('current')
staQueueDnstxqu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueDnstxqu.setStatus('current')
staQueueDnsrxqu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueDnsrxqu.setStatus('current')
staQueueWlanman = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 12, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueWlanman.setStatus('current')
staConneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13), )
if mibBuilder.loadTexts: staConneTable.setStatus('current')
staConneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staConneIfc"))
if mibBuilder.loadTexts: staConneEntry.setStatus('current')
staConneIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneIfc.setStatus('current')
staConneConn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneConn.setStatus('current')
staConneActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneActi.setStatus('current')
staConnePass = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnePass.setStatus('current')
staConneErro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneErro.setStatus('current')
staConneCont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneCont.setStatus('current')
staConneChar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneChar.setStatus('current')
staInfocTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14), )
if mibBuilder.loadTexts: staInfocTable.setStatus('current')
staInfocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staInfocIfc"))
if mibBuilder.loadTexts: staInfocEntry.setStatus('current')
staInfocIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocIfc.setStatus('current')
staInfocSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocSta.setStatus('current')
staInfocMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 9))).clone(namedValues=NamedValues(("unknown", 0), ("active", 4), ("passive", 5), ("callback", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocMod.setStatus('current')
staInfocDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocDia.setStatus('current')
staInfocPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocPee.setStatus('current')
staInfocB1d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocB1d.setStatus('current')
staInfocB2d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocB2d.setStatus('current')
staLayerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15), )
if mibBuilder.loadTexts: staLayerTable.setStatus('current')
staLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLayerIfc"))
if mibBuilder.loadTexts: staLayerEntry.setStatus('current')
staLayerIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerIfc.setStatus('current')
staLayerWanl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerWanl.setStatus('current')
staLayerEnca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("ether", 0), ("trans", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerEnca.setStatus('current')
staLayerLay3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("trans", 0), ("ppp", 4), ("appp", 5), ("scppp", 6), ("scappp", 7), ("sctrans", 8), ("dhcp", 9), ("trans", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerLay3.setStatus('current')
staLayerLay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 5, 0, 1))).clone(namedValues=NamedValues(("sscop", 6), ("pppoe", 5), ("x-75lapb", 0), ("trans", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerLay2.setStatus('current')
staLayerL2op = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 2))).clone(namedValues=NamedValues(("none", 255), ("compr", 0), ("bundle", 1), ("bnd-plus-cmpr", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerL2op.setStatus('current')
staLayerLay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 0, 1, 5))).clone(namedValues=NamedValues(("aal-5", 2), ("eth", 4), ("hdlc64k", 0), ("hdlc56k", 1), ("modem", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerLay1.setStatus('current')
staLayerL1pa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("none", 0), ("v-21-300", 1), ("v-23-600", 2), ("v-23-1200", 3), ("v-22-1200", 4), ("v-22bis-2400", 5), ("v-32qam-4800", 6), ("v-32qam-9600", 7), ("v-32bis-7200", 8), ("v-32tcm-9600", 9), ("v-32bis-12000", 10), ("v-32bis-14400", 11), ("v-34-2400", 12), ("v-34-4800", 13), ("v-34-7200", 14), ("v-34-9600", 15), ("v-34-12000", 16), ("v-34-14400", 17), ("v-34-16800", 18), ("v-34-19200", 19), ("v-34-21600", 20), ("v-34-24000", 21), ("v-34-26400", 22), ("v-34-28800", 23), ("v-34-31200", 24), ("v-34-33600", 25), ("v-90-28000", 26), ("v-90-29333", 27), ("v-90-30667", 28), ("v-90-32000", 29), ("v-90-33333", 30), ("v-90-34667", 31), ("v-90-36000", 32), ("v-90-37333", 33), ("v-90-38667", 34), ("v-90-40000", 35), ("v-90-41333", 36), ("v-90-42667", 37), ("v-90-44000", 38), ("v-90-45333", 39), ("v-90-46667", 40), ("v-90-48000", 41), ("v-90-49333", 42), ("v-90-50667", 43), ("v-90-52000", 44), ("v-90-53333", 45), ("v-90-54667", 46), ("v-90-56000", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerL1pa.setStatus('current')
staCalliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16), )
if mibBuilder.loadTexts: staCalliTable.setStatus('current')
staCalliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staCalliSys"), (0, "LANCOM-L310-MIB", "staCalliCou"))
if mibBuilder.loadTexts: staCalliEntry.setStatus('current')
staCalliSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliSys.setStatus('current')
staCalliIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliIfc.setStatus('current')
staCalliCli = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliCli.setStatus('current')
staCalliDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliDia.setStatus('current')
staCalliCap = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 3, 67, 131, 5, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 255), ("hdlc64k", 0), ("hdlc56k", 1), ("v110-9k6", 3), ("v110-19k2", 67), ("v110-38k4", 131), ("modem", 5), ("a-3-1khz", 13), ("speech", 14), ("fax-g2-3", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliCap.setStatus('current')
staCalliBch = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliBch.setStatus('current')
staCalliCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliCou.setStatus('current')
staRemotTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17), )
if mibBuilder.loadTexts: staRemotTable.setStatus('current')
staRemotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staRemotConns"), (0, "LANCOM-L310-MIB", "staRemotCount"))
if mibBuilder.loadTexts: staRemotEntry.setStatus('current')
staRemotConns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotConns.setStatus('current')
staRemotRemot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotRemot.setStatus('current')
staRemotMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 9))).clone(namedValues=NamedValues(("unknown", 0), ("active", 4), ("passive", 5), ("callback", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotMode.setStatus('current')
staRemotIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotIfc.setStatus('current')
staRemotConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotConnt.setStatus('current')
staRemotCharg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotCharg.setStatus('current')
staRemotCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 17, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotCount.setStatus('current')
staCurre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCurre.setStatus('current')
staTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21))
staTimeCur = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeCur.setStatus('current')
staTimeSou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 9, 10, 11, 8, 0))).clone(namedValues=NamedValues(("manual", 1), ("lan", 3), ("ram", 4), ("ntp", 9), ("capwap", 10), ("rtc", 11), ("lanconfig", 8), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeSou.setStatus('current')
staTimeSet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeSet.setStatus('current')
staTimeTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244))).clone(namedValues=NamedValues(("e0", 0), ("plus-1", 1), ("plus-2", 2), ("plus-3", 3), ("plus-4", 4), ("plus-5", 5), ("plus-6", 6), ("plus-7", 7), ("plus-8", 8), ("plus-9", 9), ("plus-10", 10), ("plus-11", 11), ("plus-12", 12), ("plus-13", 13), ("plus-14", 14), ("minus-1", 255), ("minus-2", 254), ("minus-3", 253), ("minus-4", 252), ("minus-5", 251), ("minus-6", 250), ("minus-7", 249), ("minus-8", 248), ("minus-9", 247), ("minus-10", 246), ("minus-11", 245), ("minus-12", 244)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeTim.setStatus('current')
staTimeDay = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("europe-eu", 2), ("russia", 3), ("usa", 4), ("user-defined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeDay.setStatus('current')
staTimeDstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12), )
if mibBuilder.loadTexts: staTimeDstTable.setStatus('current')
staTimeDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staTimeDstEve"))
if mibBuilder.loadTexts: staTimeDstEntry.setStatus('current')
staTimeDstEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeDstEve.setStatus('current')
staTimeDstInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(252, 253, 254, 255, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e4-last", 252), ("e3-last", 253), ("e2-last", 254), ("last", 255), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstInd.setStatus('current')
staTimeDstDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstDay.setStatus('current')
staTimeDstMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstMon.setStatus('current')
staTimeDstHou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstHou.setStatus('current')
staTimeDstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstMin.setStatus('current')
staTimeDstTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 21, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("utc", 1), ("lst", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstTim.setStatus('current')
staLcr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22))
staLcrTot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrTot.setStatus('current')
staLcrFou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrFou.setStatus('current')
staLcrNot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrNot.setStatus('current')
staLcrMis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrMis.setStatus('current')
staLcrProTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 6), )
if mibBuilder.loadTexts: staLcrProTable.setStatus('current')
staLcrProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLcrProPro"))
if mibBuilder.loadTexts: staLcrProEntry.setStatus('current')
staLcrProPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProPro.setStatus('current')
staLcrProFai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProFai.setStatus('current')
staLcrProSuc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProSuc.setStatus('current')
staLcrDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 22, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staLcrDel.setStatus('current')
staCharg = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24))
staChargSpareda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargSpareda.setStatus('current')
staChargSpservere = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargSpservere.setStatus('current')
staChargRouters = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargRouters.setStatus('current')
staChargSpareds = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargSpareds.setStatus('current')
staChargRouterd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargRouterd.setStatus('current')
staChargTimetabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 2), )
if mibBuilder.loadTexts: staChargTimetabTable.setStatus('current')
staChargTimetabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staChargTimetabIfc"))
if mibBuilder.loadTexts: staChargTimetabEntry.setStatus('current')
staChargTimetabIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("router-dsl-broadband", 1), ("router-serial", 2), ("lancapi", 3), ("ab-1", 4), ("ab-2", 5), ("ab-3", 6), ("ab-4", 7), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabIfc.setStatus('current')
staChargTimetabBudgetmi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabBudgetmi.setStatus('current')
staChargTimetabSparemin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabSparemin.setStatus('current')
staChargTimetabMinutesa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabMinutesa.setStatus('current')
staChargTimetabMinutesp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabMinutesp.setStatus('current')
staChargDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 24, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staChargDeletev.setStatus('current')
staDsl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25))
staDslRxpack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxpack.setStatus('current')
staDslTxpack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxpack.setStatus('current')
staDslRxerro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxerro.setStatus('current')
staDslTxerro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxerro.setStatus('current')
staDslRxnoco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxnoco.setStatus('current')
staDslNicerr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslNicerr.setStatus('current')
staDslQueuep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslQueuep.setStatus('current')
staDslQueuee = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslQueuee.setStatus('current')
staDslRxbyte = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxbyte.setStatus('current')
staDslTxbyte = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxbyte.setStatus('current')
staDslRxunic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxunic.setStatus('current')
staDslTxbroa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxbroa.setStatus('current')
staDslTxunic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxunic.setStatus('current')
staDslLinkac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslLinkac.setStatus('current')
staDslPppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23))
staDslPppoeTxpadi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxpadi.setStatus('current')
staDslPppoeRxpado = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxpado.setStatus('current')
staDslPppoeTxpadr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxpadr.setStatus('current')
staDslPppoeRxpads = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxpads.setStatus('current')
staDslPppoeTxpadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxpadt.setStatus('current')
staDslPppoeRxpadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxpadt.setStatus('current')
staDslPppoeTxprot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxprot.setStatus('current')
staDslPppoeRxprot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxprot.setStatus('current')
staDslPppoeTxdata = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxdata.setStatus('current')
staDslPppoeRxdata = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxdata.setStatus('current')
staDslPppoeRxbad = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxbad.setStatus('current')
staDslPppoeAcname = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeAcname.setStatus('current')
staDslPppoeServic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeServic.setStatus('current')
staDslPppoeDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 23, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDslPppoeDelete.setStatus('current')
staDslDslol = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 24))
staDslDslolIpconfig = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolIpconfig.setStatus('current')
staDslDslolIpnetwor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 24, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolIpnetwor.setStatus('current')
staDslDslolIpnetmas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 24, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolIpnetmas.setStatus('current')
staDslDslolGatewayi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 24, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolGatewayi.setStatus('current')
staDslDslolGatewaym = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 24, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolGatewaym.setStatus('current')
staDslDslolCatchdhc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 24, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolCatchdhc.setStatus('current')
staDslDslolExclusiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 24, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolExclusiv.setStatus('current')
staDslDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 25, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDslDelete.setStatus('current')
staPptp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27))
staPptpRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpRxp.setStatus('current')
staPptpTxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTxp.setStatus('current')
staPptpEch = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpEch.setStatus('current')
staPptpAck = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpAck.setStatus('current')
staPptpDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpDro.setStatus('current')
staPptpRxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpRxe.setStatus('current')
staPptpTcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTcp.setStatus('current')
staPptpCal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpCal.setStatus('current')
staPptpConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9), )
if mibBuilder.loadTexts: staPptpConTable.setStatus('current')
staPptpConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staPptpConChann"))
if mibBuilder.loadTexts: staPptpConEntry.setStatus('current')
staPptpConChann = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConChann.setStatus('current')
staPptpConState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConState.setStatus('current')
staPptpConLaste = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160, 267, 275, 277, 278, 279, 280, 513, 514, 515, 516, 517, 518, 32768, 32769, 32770, 32771, 32784, 32785, 32786, 32787, 32788, 32789, 32800, 32801, 32802, 32803, 32804, 32805, 32816, 32817, 32818, 32819, 32832, 32848, 33008))).clone(namedValues=NamedValues(("none", 0), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160), ("remote-doubled", 267), ("icmp-conn-error", 275), ("dhcp-timeout", 277), ("pptp-no-response", 278), ("vpn-no-response", 279), ("arp-no-response", 280), ("pptp-no-channel", 513), ("pptp-bad-format", 514), ("pptp-bad-value", 515), ("pptp-no-ressource", 516), ("pptp-bad-call-id", 517), ("pptp-gen-error", 518), ("lcp-rejected", 32768), ("auth-error", 32769), ("auth-rejected", 32770), ("lcp-conn-error", 32771), ("pap-rejected", 32784), ("pap-rx-timeout", 32785), ("pap-tx-timeout", 32786), ("wrong-pap-req", 32787), ("pap-nak-received", 32788), ("unkn-pap-peer", 32789), ("chap-rejected", 32800), ("chap-rx-timeout", 32801), ("chap-tx-timeout", 32802), ("wrong-chap-resp", 32803), ("chap-fail-recvd", 32804), ("unkn-chap-peer", 32805), ("ipxcp-rejected", 32816), ("wrong-ipxcp-net", 32817), ("ipxcp-net-reject", 32818), ("ipxcp-route-unkn", 32819), ("ipcp-rejected", 32832), ("ccp-rejected", 32848), ("no-ncp-available", 33008)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPptpConLaste.setStatus('current')
staPptpConMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 0))).clone(namedValues=NamedValues(("active", 128), ("passive", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConMode.setStatus('current')
staPptpConShtim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConShtim.setStatus('current')
staPptpConPhysc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConPhysc.setStatus('current')
staPptpConPeera = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConPeera.setStatus('current')
staPptpConIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConIpadd.setStatus('current')
staPptpConDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConDnsde.setStatus('current')
staPptpConDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConDnsba.setStatus('current')
staPptpConNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConNbnsd.setStatus('current')
staPptpConNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConNbnsb.setStatus('current')
staPptpConConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConConnt.setStatus('current')
staPptpTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTun.setStatus('current')
staPptpDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPptpDel.setStatus('current')
staPptpFlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 27, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpFlo.setStatus('current')
staLanbr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31))
staLanbrAddTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1), )
if mibBuilder.loadTexts: staLanbrAddTable.setStatus('current')
staLanbrAddEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanbrAddInd"))
if mibBuilder.loadTexts: staLanbrAddEntry.setStatus('current')
staLanbrAddInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddInd.setStatus('current')
staLanbrAddAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddAge.setStatus('current')
staLanbrAddMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddMac.setStatus('current')
staLanbrAddVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddVla.setStatus('current')
staLanbrAddBri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("brg-1", 0), ("brg-2", 1), ("brg-3", 2), ("brg-4", 3), ("brg-5", 4), ("brg-6", 5), ("brg-7", 6), ("brg-8", 7), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddBri.setStatus('current')
staLanbrAddPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddPor.setStatus('current')
staLanbrAddBrg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddBrg.setStatus('current')
staLanbrPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 11), )
if mibBuilder.loadTexts: staLanbrPorTable.setStatus('current')
staLanbrPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanbrPorPor"))
if mibBuilder.loadTexts: staLanbrPorEntry.setStatus('current')
staLanbrPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrPorPor.setStatus('current')
staLanbrPorOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("not-present", 6), ("lower-layer-down", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrPorOpe.setStatus('current')
staLanbrPorPoi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrPorPoi.setStatus('current')
staLanbrConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9), )
if mibBuilder.loadTexts: staLanbrConTable.setStatus('current')
staLanbrConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanbrConIndex"))
if mibBuilder.loadTexts: staLanbrConEntry.setStatus('current')
staLanbrConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConIndex.setStatus('current')
staLanbrConInterfa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConInterfa.setStatus('current')
staLanbrConProtoco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConProtoco.setStatus('current')
staLanbrConSubprot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConSubprot.setStatus('current')
staLanbrConSourcea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConSourcea.setStatus('current')
staLanbrConSourcep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConSourcep.setStatus('current')
staLanbrConDestpor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConDestpor.setStatus('current')
staLanbrConDestadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConDestadd.setStatus('current')
staLanbrConDestmac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConDestmac.setStatus('current')
staLanbrConAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConAge.setStatus('current')
staLanbrDhcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 10), )
if mibBuilder.loadTexts: staLanbrDhcTable.setStatus('current')
staLanbrDhcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanbrDhcMac"))
if mibBuilder.loadTexts: staLanbrDhcEntry.setStatus('current')
staLanbrDhcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 10, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrDhcMac.setStatus('current')
staLanbrDhcPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrDhcPor.setStatus('current')
staLanbrDhcSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrDhcSrc.setStatus('current')
staLanbrDhcIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrDhcIpa.setStatus('current')
staLanbrSpa = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20))
staLanbrSpaOperati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaOperati.setStatus('current')
staLanbrSpaBridgei = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaBridgei.setStatus('current')
staLanbrSpaRootbri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRootbri.setStatus('current')
staLanbrSpaRootpor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("is-root-bridge", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRootpor.setStatus('current')
staLanbrSpaRootpat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRootpat.setStatus('current')
staLanbrSpaPorttabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 6), )
if mibBuilder.loadTexts: staLanbrSpaPorttabTable.setStatus('current')
staLanbrSpaPorttabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanbrSpaPorttabDes"))
if mibBuilder.loadTexts: staLanbrSpaPorttabEntry.setStatus('current')
staLanbrSpaPorttabDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabDes.setStatus('current')
staLanbrSpaPorttabPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabPri.setStatus('current')
staLanbrSpaPorttabSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("listening", 1), ("learning", 2), ("forwarding", 3), ("blocking", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabSta.setStatus('current')
staLanbrSpaPorttabRoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabRoo.setStatus('current')
staLanbrSpaPorttabBri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabBri.setStatus('current')
staLanbrSpaPorttabPat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabPat.setStatus('current')
staLanbrSpaProtoco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaProtoco.setStatus('current')
staLanbrSpaPathcos = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPathcos.setStatus('current')
staLanbrSpaBridgep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaBridgep.setStatus('current')
staLanbrSpaRstpporTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10), )
if mibBuilder.loadTexts: staLanbrSpaRstpporTable.setStatus('current')
staLanbrSpaRstpporEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staLanbrSpaRstpporDes"))
if mibBuilder.loadTexts: staLanbrSpaRstpporEntry.setStatus('current')
staLanbrSpaRstpporDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporDes.setStatus('current')
staLanbrSpaRstpporRol = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("root", 0), ("designated", 1), ("alternate", 2), ("backup", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporRol.setStatus('current')
staLanbrSpaRstpporLea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporLea.setStatus('current')
staLanbrSpaRstpporFor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporFor.setStatus('current')
staLanbrSpaRstpporEdg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporEdg.setStatus('current')
staLanbrSpaRstpporPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporPro.setStatus('current')
staLanbrSpaRstpporPat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 31, 20, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporPat.setStatus('current')
staDhcpc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32))
staDhcpcWanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20), )
if mibBuilder.loadTexts: staDhcpcWanTable.setStatus('current')
staDhcpcWanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staDhcpcWanIfc"))
if mibBuilder.loadTexts: staDhcpcWanEntry.setStatus('current')
staDhcpcWanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanIfc.setStatus('current')
staDhcpcWanIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanIpadd.setStatus('current')
staDhcpcWanIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanIpnet.setStatus('current')
staDhcpcWanGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanGatew.setStatus('current')
staDhcpcWanDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanDnsde.setStatus('current')
staDhcpcWanDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanDnsba.setStatus('current')
staDhcpcWanNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanNbnsd.setStatus('current')
staDhcpcWanNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanNbnsb.setStatus('current')
staDhcpcWanDomai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanDomai.setStatus('current')
staDhcpcWanDhcps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 20, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanDhcps.setStatus('current')
staDhcpcLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21), )
if mibBuilder.loadTexts: staDhcpcLanTable.setStatus('current')
staDhcpcLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staDhcpcLanIfc"))
if mibBuilder.loadTexts: staDhcpcLanEntry.setStatus('current')
staDhcpcLanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanIfc.setStatus('current')
staDhcpcLanIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanIpadd.setStatus('current')
staDhcpcLanIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanIpnet.setStatus('current')
staDhcpcLanGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanGatew.setStatus('current')
staDhcpcLanDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanDnsde.setStatus('current')
staDhcpcLanDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanDnsba.setStatus('current')
staDhcpcLanNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanNbnsd.setStatus('current')
staDhcpcLanNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanNbnsb.setStatus('current')
staDhcpcLanDomai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanDomai.setStatus('current')
staDhcpcLanDhcps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 32, 21, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanDhcps.setStatus('current')
staSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 35))
staSnmpEveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 35, 1), )
if mibBuilder.loadTexts: staSnmpEveTable.setStatus('current')
staSnmpEveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 35, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staSnmpEveTra"), (0, "LANCOM-L310-MIB", "staSnmpEveVen"))
if mibBuilder.loadTexts: staSnmpEveEntry.setStatus('current')
staSnmpEveTra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 35, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("coldstart", 255), ("warmstart", 1), ("linkdown", 2), ("linkup", 3), ("authfail", 4), ("epgnloss", 5), ("enterprise", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveTra.setStatus('current')
staSnmpEveVen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 35, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 28, 39, 2000, 2001, 26, 41, 14, 15, 16, 22, 25, 33, 55, 56, 57, 59, 58, 48, 49, 50, 51, 42, 17, 18, 19, 20, 21, 52, 54, 53, 46, 35, 47, 1000, 1002, 1001, 1))).clone(namedValues=NamedValues(("fwuplstart", 4), ("uplsucc", 5), ("uplfailto", 6), ("uplfailincl", 7), ("uplfailbaddev", 8), ("login", 9), ("logout", 10), ("cnfuplstart", 11), ("cnfdnlstart", 12), ("cnfdnlsucc", 13), ("errlogin", 29), ("pptpconn", 28), ("pppoesconn", 39), ("http-tunnel-open", 2000), ("http-tunnel-close", 2001), ("ipfwflt", 26), ("vrrp", 41), ("bssscan", 14), ("bssstart", 15), ("bssjoin", 16), ("assrej", 22), ("cardhung", 25), ("keyhandshake-timeout", 33), ("cl-lostconn", 55), ("cl-authfail", 56), ("cl-assocfail", 57), ("cl-802-1x-fail", 59), ("cl-connected", 58), ("wlanovertemp", 48), ("wlanovertempend", 49), ("wlanundertemp", 50), ("wlanundertempend", 51), ("exceirp", 42), ("authstation", 17), ("deauthstation", 18), ("assstation", 19), ("reassstation", 20), ("disassstation", 21), ("macchkfail", 52), ("connected", 54), ("roamed", 53), ("idle-timeout", 46), ("supervision", 35), ("admin-deassoc", 47), ("spgtree-portstatchg", 1000), ("spgtree-rootportchg", 1002), ("spgtree-rstpstatchg", 1001), ("statchan", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveVen.setStatus('current')
staSnmpEveCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 35, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveCou.setStatus('current')
staMail = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 43))
staMailBuf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 43, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailBuf.setStatus('current')
staMailSen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 43, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailSen.setStatus('current')
staMailDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 43, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailDis.setStatus('current')
staMailCle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 43, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staMailCle.setStatus('current')
staMailDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 43, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staMailDel.setStatus('current')
staIeee8 = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46))
staIeee8StaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1), )
if mibBuilder.loadTexts: staIeee8StaTable.setStatus('current')
staIeee8StaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staIeee8StaMacad"))
if mibBuilder.loadTexts: staIeee8StaEntry.setStatus('current')
staIeee8StaMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaMacad.setStatus('current')
staIeee8StaAuthi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaAuthi.setStatus('current')
staIeee8StaCommi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaCommi.setStatus('current')
staIeee8StaSessi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaSessi.setStatus('current')
staIeee8StaPortm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("force-unauth", 0), ("force-auth", 1), ("auto", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaPortm.setStatus('current')
staIeee8StaPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unauthorized", 0), ("authorized", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaPorts.setStatus('current')
staIeee8StaUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaUsern.setStatus('current')
staIeee8StaReply = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 46, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaReply.setStatus('current')
staHardw = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47))
staHardwMode = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwMode.setStatus('current')
staHardwSeri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwSeri.setStatus('current')
staHardwBoar = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwBoar.setStatus('current')
staHardwCput = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwCput.setStatus('current')
staHardwCpuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwCpuc.setStatus('current')
staHardwCpul = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwCpul.setStatus('current')
staHardwTota = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwTota.setStatus('current')
staHardwFree = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwFree.setStatus('current')
staHardwSwve = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwSwve.setStatus('current')
staHardwPcidTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30), )
if mibBuilder.loadTexts: staHardwPcidTable.setStatus('current')
staHardwPcidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staHardwPcidIndex"))
if mibBuilder.loadTexts: staHardwPcidEntry.setStatus('current')
staHardwPcidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidIndex.setStatus('current')
staHardwPcidBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidBus.setStatus('current')
staHardwPcidDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidDevice.setStatus('current')
staHardwPcidFunctio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidFunctio.setStatus('current')
staHardwPcidDevicei = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidDevicei.setStatus('current')
staHardwPcidSubsyst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidSubsyst.setStatus('current')
staHardwPcidClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(131072, 131328, 163840, 395008, 393472, 787200, 787216, 787232, 786448))).clone(namedValues=NamedValues(("ethernet", 131072), ("token-ring", 131328), ("network", 163840), ("cardbus-bridge", 395008), ("isa-bridge", 393472), ("usb-uhci", 787200), ("usb-ohci", 787216), ("usb-ehci", 787232), ("ohci1394", 786448)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidClass.setStatus('current')
staHardwTemp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 47, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwTemp.setStatus('current')
staChannTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48), )
if mibBuilder.loadTexts: staChannTable.setStatus('current')
staChannEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staChannChan"))
if mibBuilder.loadTexts: staChannEntry.setStatus('current')
staChannChan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dsl-err", 1), ("dsl-line", 2), ("ext-err", 3), ("ext", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannChan.setStatus('current')
staChannPhcha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannPhcha.setStatus('current')
staChannPlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannPlci.setStatus('current')
staChannBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannBus.setStatus('current')
staChannState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannState.setStatus('current')
staChannApp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("none", 0), ("router", 1), ("capi", 2), ("a-b", 3), ("time-module", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannApp.setStatus('current')
staChannMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unk", 0), ("act", 1), ("pas", 2), ("perm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannMode.setStatus('current')
staChannCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staChannCause.setStatus('current')
staChannNumbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannNumbe.setStatus('current')
staChannSubad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannSubad.setStatus('current')
staChannCharg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannCharg.setStatus('current')
staChannConns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannConns.setStatus('current')
staChannConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannConnt.setStatus('current')
staChannExtra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannExtra.setStatus('current')
staChannIsdnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannIsdnd.setStatus('current')
staChannPptpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 48, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannPptpc.setStatus('current')
staUmtsm = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 49))
staUmtsmOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 49, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("modem", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmOpe.setStatus('current')
staUmtsmMod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 49, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmMod.setStatus('current')
staUmtsmCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 49, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmCon.setStatus('current')
staUmtsmSta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 49, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15, 0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("wait-for-device", 15), ("deactivated", 0), ("device-detection", 1), ("reset", 2), ("initializing", 3), ("modem-id", 4), ("ready", 5), ("connecting", 6), ("pass-connecting", 7), ("data-mode", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmSta.setStatus('current')
staUmtsmDat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 49, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmDat.setStatus('current')
staUmtsmDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 49, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmDro.setStatus('current')
staFiles = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 50))
staFilesConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 50, 1), )
if mibBuilder.loadTexts: staFilesConTable.setStatus('current')
staFilesConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 50, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staFilesConNam"))
if mibBuilder.loadTexts: staFilesConEntry.setStatus('current')
staFilesConNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 50, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staFilesConNam.setStatus('current')
staFilesConSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 50, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staFilesConSiz.setStatus('current')
staPppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52))
staPppoeRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeRxp.setStatus('current')
staPppoeTxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeTxp.setStatus('current')
staPppoeDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeDro.setStatus('current')
staPppoeRxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeRxe.setStatus('current')
staPppoeSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeSes.setStatus('current')
staPppoeConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9), )
if mibBuilder.loadTexts: staPppoeConTable.setStatus('current')
staPppoeConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staPppoeConCha"), (0, "LANCOM-L310-MIB", "staPppoeConMac"))
if mibBuilder.loadTexts: staPppoeConEntry.setStatus('current')
staPppoeConCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConCha.setStatus('current')
staPppoeConMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConMac.setStatus('current')
staPppoeConSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConSta.setStatus('current')
staPppoeConLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160, 267, 275, 277, 278, 279, 280, 513, 514, 515, 516, 517, 518, 32768, 32769, 32770, 32771, 32784, 32785, 32786, 32787, 32788, 32789, 32800, 32801, 32802, 32803, 32804, 32805, 32816, 32817, 32818, 32819, 32832, 32848, 33008))).clone(namedValues=NamedValues(("none", 0), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160), ("remote-doubled", 267), ("icmp-conn-error", 275), ("dhcp-timeout", 277), ("pptp-no-response", 278), ("vpn-no-response", 279), ("arp-no-response", 280), ("pptp-no-channel", 513), ("pptp-bad-format", 514), ("pptp-bad-value", 515), ("pptp-no-ressource", 516), ("pptp-bad-call-id", 517), ("pptp-gen-error", 518), ("lcp-rejected", 32768), ("auth-error", 32769), ("auth-rejected", 32770), ("lcp-conn-error", 32771), ("pap-rejected", 32784), ("pap-rx-timeout", 32785), ("pap-tx-timeout", 32786), ("wrong-pap-req", 32787), ("pap-nak-received", 32788), ("unkn-pap-peer", 32789), ("chap-rejected", 32800), ("chap-rx-timeout", 32801), ("chap-tx-timeout", 32802), ("wrong-chap-resp", 32803), ("chap-fail-recvd", 32804), ("unkn-chap-peer", 32805), ("ipxcp-rejected", 32816), ("wrong-ipxcp-net", 32817), ("ipxcp-net-reject", 32818), ("ipxcp-route-unkn", 32819), ("ipcp-rejected", 32832), ("ccp-rejected", 32848), ("no-ncp-available", 33008)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppoeConLas.setStatus('current')
staPppoeConSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConSht.setStatus('current')
staPppoeConPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConPee.setStatus('current')
staPppoeConCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConCon.setStatus('current')
staPppoeNum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeNum.setStatus('current')
staPppoeDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 52, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppoeDel.setStatus('current')
staAccou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56))
staAccouCurTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1), )
if mibBuilder.loadTexts: staAccouCurTable.setStatus('current')
staAccouCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staAccouCurUsern"), (0, "LANCOM-L310-MIB", "staAccouCurMacad"), (0, "LANCOM-L310-MIB", "staAccouCurPeer"), (0, "LANCOM-L310-MIB", "staAccouCurConnt"))
if mibBuilder.loadTexts: staAccouCurEntry.setStatus('current')
staAccouCurUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurUsern.setStatus('current')
staAccouCurMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurMacad.setStatus('current')
staAccouCurPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurPeer.setStatus('current')
staAccouCurConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurConnt.setStatus('current')
staAccouCurRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurRxkby.setStatus('current')
staAccouCurTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurTxkby.setStatus('current')
staAccouCurTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurTotal.setStatus('current')
staAccouCurConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurConne.setStatus('current')
staAccouAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2), )
if mibBuilder.loadTexts: staAccouAccTable.setStatus('current')
staAccouAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staAccouAccUsern"), (0, "LANCOM-L310-MIB", "staAccouAccMacad"), (0, "LANCOM-L310-MIB", "staAccouAccPeer"), (0, "LANCOM-L310-MIB", "staAccouAccConnt"))
if mibBuilder.loadTexts: staAccouAccEntry.setStatus('current')
staAccouAccUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccUsern.setStatus('current')
staAccouAccMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccMacad.setStatus('current')
staAccouAccPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccPeer.setStatus('current')
staAccouAccConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccConnt.setStatus('current')
staAccouAccRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccRxkby.setStatus('current')
staAccouAccTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccTxkby.setStatus('current')
staAccouAccTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccTotal.setStatus('current')
staAccouAccConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccConne.setStatus('current')
staAccouLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3), )
if mibBuilder.loadTexts: staAccouLasTable.setStatus('current')
staAccouLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staAccouLasUsern"), (0, "LANCOM-L310-MIB", "staAccouLasMacad"), (0, "LANCOM-L310-MIB", "staAccouLasPeer"), (0, "LANCOM-L310-MIB", "staAccouLasConnt"))
if mibBuilder.loadTexts: staAccouLasEntry.setStatus('current')
staAccouLasUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasUsern.setStatus('current')
staAccouLasMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasMacad.setStatus('current')
staAccouLasPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasPeer.setStatus('current')
staAccouLasConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasConnt.setStatus('current')
staAccouLasRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasRxkby.setStatus('current')
staAccouLasTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasTxkby.setStatus('current')
staAccouLasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasTotal.setStatus('current')
staAccouLasConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasConne.setStatus('current')
staAccouTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 5), )
if mibBuilder.loadTexts: staAccouTimTable.setStatus('current')
staAccouTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staAccouTimSys"))
if mibBuilder.loadTexts: staAccouTimEntry.setStatus('current')
staAccouTimSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouTimSys.setStatus('current')
staAccouDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 56, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staAccouDel.setStatus('current')
staWlanm = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59))
staWlanmApconnTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1), )
if mibBuilder.loadTexts: staWlanmApconnTable.setStatus('current')
staWlanmApconnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanmApconnId"))
if mibBuilder.loadTexts: staWlanmApconnEntry.setStatus('current')
staWlanmApconnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnId.setStatus('current')
staWlanmApconnIpad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnIpad.setStatus('current')
staWlanmApconnPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnPort.setStatus('current')
staWlanmApconnPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unspec", 0), ("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnPrio.setStatus('current')
staWlanmApconnResu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 300, 301, 302))).clone(namedValues=NamedValues(("success", 0), ("failure", 1), ("success-nat", 2), ("join-fail-unspecified", 3), ("join-fail-resource-depletion", 4), ("join-fail-unknwn-src", 5), ("join-fail-incorrect-data", 6), ("join-fail-session-id-in-use", 7), ("join-fail-wtp-not-supported", 8), ("join-fail-binding-not-supp", 9), ("reset-fail-unable-to-reset", 10), ("reset-fail-firmw-write-err", 11), ("fail-missing-mand-msg-elem", 20), ("fail-unrecognized-msg-elem", 21), ("unsupported-loader-version", 300), ("unsupported-firmware-version", 301), ("minus-minus", 302)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnResu.setStatus('current')
staWlanmApconnResp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnResp.setStatus('current')
staWlanmApconnUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnUtil.setStatus('current')
staWlanmApconnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnName.setStatus('current')
staWlanmApconnStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 100))).clone(namedValues=NamedValues(("unknown", 0), ("idle", 5), ("discovery", 10), ("dtls-setup", 15), ("join", 20), ("configure", 25), ("image-data", 30), ("reset", 35), ("dtls-teardown", 40), ("sulking", 45), ("run", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnStat.setStatus('current')
staWlanmLastwlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 100), )
if mibBuilder.loadTexts: staWlanmLastwlTable.setStatus('current')
staWlanmLastwlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 100, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanmLastwlIpa"))
if mibBuilder.loadTexts: staWlanmLastwlEntry.setStatus('current')
staWlanmLastwlIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 100, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlIpa.setStatus('current')
staWlanmLastwlPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 100, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlPor.setStatus('current')
staWlanmLastwlNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 100, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlNam.setStatus('current')
staWlanmLastwlMgm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 100, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlMgm.setStatus('current')
staWlanmLastwlRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 100, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlRou.setStatus('current')
staWlanmLastwlTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 100, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlTyp.setStatus('current')
staWlanmRadiopTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101), )
if mibBuilder.loadTexts: staWlanmRadiopTable.setStatus('current')
staWlanmRadiopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanmRadiopName"))
if mibBuilder.loadTexts: staWlanmRadiopEntry.setStatus('current')
staWlanmRadiopName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopName.setStatus('current')
staWlanmRadiopCountry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 32, 36, 40, 48, 50, 112, 56, 70, 76, 96, 100, 124, 152, 156, 170, 188, 191, 196, 203, 208, 218, 999, 818, 233, 246, 250, 276, 288, 300, 320, 340, 344, 348, 352, 356, 360, 372, 376, 380, 392, 400, 410, 414, 428, 422, 438, 440, 442, 446, 807, 458, 470, 484, 498, 504, 528, 554, 558, 578, 512, 586, 591, 600, 604, 608, 616, 620, 630, 634, 642, 643, 682, 702, 703, 705, 710, 724, 752, 756, 158, 834, 764, 788, 792, 800, 804, 784, 826, 840, 858, 862))).clone(namedValues=NamedValues(("default", 0), ("albania", 8), ("argentina", 32), ("australia", 36), ("austria", 40), ("bahrain", 48), ("bangladesh", 50), ("belarus", 112), ("belgium", 56), ("bosnia-herzegovina", 70), ("brazil", 76), ("brunei-darussalam", 96), ("bulgaria", 100), ("canada", 124), ("chile", 152), ("china", 156), ("colombia", 170), ("costa-rica", 188), ("croatia", 191), ("cyprus", 196), ("czech", 203), ("denmark", 208), ("ecuador", 218), ("egalistan", 999), ("egypt", 818), ("estonia", 233), ("finland", 246), ("france", 250), ("germany", 276), ("ghana", 288), ("greece", 300), ("guatemala", 320), ("honduras", 340), ("hong-kong", 344), ("hungary", 348), ("iceland", 352), ("india", 356), ("indonesia", 360), ("ireland", 372), ("israel", 376), ("italy", 380), ("japan", 392), ("jordan", 400), ("south-korea", 410), ("kuwait", 414), ("latvia", 428), ("lebanon", 422), ("liechtenstein", 438), ("lithuania", 440), ("luxembourg", 442), ("macau", 446), ("macedonia", 807), ("malaysia", 458), ("malta", 470), ("mexico", 484), ("moldavia", 498), ("morocco", 504), ("netherlands", 528), ("new-zealand", 554), ("nicaragua", 558), ("norway", 578), ("oman", 512), ("pakistan", 586), ("panama", 591), ("paraguay", 600), ("peru", 604), ("philippines", 608), ("poland", 616), ("portugal", 620), ("puerto-rico", 630), ("qatar", 634), ("romania", 642), ("russia", 643), ("saudi-arabia", 682), ("singapore", 702), ("slovak", 703), ("slovenia", 705), ("south-africa", 710), ("spain", 724), ("sweden", 752), ("switzerland", 756), ("taiwan", 158), ("tanzania", 834), ("thailand", 764), ("tunisia", 788), ("turkey", 792), ("uganda", 800), ("ukraine", 804), ("united-arab-emirates", 784), ("united-kingdom", 826), ("united-states-fcc", 840), ("uruguay", 858), ("venezuela", 862)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopCountry.setStatus('current')
staWlanmRadiop24ghzmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 1, 4, 5, 6))).clone(namedValues=NamedValues(("e11bg-mixed", 0), ("e11b-only", 2), ("e11g-only", 1), ("e11bgn-mixed", 4), ("e11gn-mixed", 5), ("greenfield", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiop24ghzmode.setStatus('current')
staWlanmRadiop5ghzmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5))).clone(namedValues=NamedValues(("normal", 0), ("e11an-mixed", 4), ("greenfield", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiop5ghzmode.setStatus('current')
staWlanmRadiopSubbands = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("band-1", 1), ("band-2", 2), ("band-3", 3), ("band-1-plus-2", 4), ("band-1-plus-3", 5), ("band-2-plus-3", 6), ("band-1-plus-2-plus-3", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopSubbands.setStatus('current')
staWlanmRadiopQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopQos.setStatus('current')
staWlanmRadiopDtimperio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopDtimperio.setStatus('current')
staWlanmRadiopBackgroun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopBackgroun.setStatus('current')
staWlanmRadiopAntennaga = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopAntennaga.setStatus('current')
staWlanmRadiopTxpowerre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopTxpowerre.setStatus('current')
staWlanmRadiopMgmtvlani = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopMgmtvlani.setStatus('current')
staWlanmRadiopMgmtvlant = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 101, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopMgmtvlant.setStatus('current')
staWlanmRadiomTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102), )
if mibBuilder.loadTexts: staWlanmRadiomTable.setStatus('current')
staWlanmRadiomEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanmRadiomIndex"))
if mibBuilder.loadTexts: staWlanmRadiomEntry.setStatus('current')
staWlanmRadiomIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomIndex.setStatus('current')
staWlanmRadiomRadiom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("off", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomRadiom.setStatus('current')
staWlanmRadiomOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomOperat.setStatus('current')
staWlanmRadiomRadioc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("auto", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomRadioc.setStatus('current')
staWlanmRadiomChanne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomChanne.setStatus('current')
staWlanmRadiomAllow4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomAllow4.setStatus('current')
staWlanmRadiomAntenn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 102, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 5, 7))).clone(namedValues=NamedValues(("auto", 0), ("antenna-1", 1), ("antenna-1-plus-2", 3), ("antenna-1-plus-3", 5), ("antenna-1-plus-2-plus-3", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomAntenn.setStatus('current')
staWlanmNetworTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103), )
if mibBuilder.loadTexts: staWlanmNetworTable.setStatus('current')
staWlanmNetworEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staWlanmNetworName"))
if mibBuilder.loadTexts: staWlanmNetworEntry.setStatus('current')
staWlanmNetworName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworName.setStatus('current')
staWlanmNetworSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworSsid.setStatus('current')
staWlanmNetworOpera = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworOpera.setStatus('current')
staWlanmNetworVlani = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworVlani.setStatus('current')
staWlanmNetworEncry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("e802-11i-wpa-psk", 0), ("e802-11i-wpa-802-1x", 1), ("wep-104-bits", 2), ("wep-40-bits", 3), ("wep-104-bits-802-1x", 4), ("wep-40-bits-802-1x", 5), ("none", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworEncry.setStatus('current')
staWlanmNetworWpase = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("tkip-aes", 0), ("aes", 1), ("tkip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworWpase.setStatus('current')
staWlanmNetworWpave = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wpa1-2", 0), ("wpa1", 1), ("wpa2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworWpave.setStatus('current')
staWlanmNetworKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworKey.setStatus('current')
staWlanmNetworRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("e2-4ghz-5ghz", 0), ("e2-4ghz", 1), ("e5ghz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworRadio.setStatus('current')
staWlanmNetworConti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworConti.setStatus('current')
staWlanmNetworMintx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("auto", 0), ("e1m", 1), ("e2m", 2), ("e5-5m", 3), ("e11m", 4), ("e6m", 5), ("e9m", 6), ("e12m", 7), ("e18m", 8), ("e24m", 9), ("e36m", 10), ("e48m", 11), ("e54m", 12), ("t-72m", 13), ("t-96m", 14), ("t-108m", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMintx.setStatus('current')
staWlanmNetworMaxtx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("auto", 0), ("e1m", 1), ("e2m", 2), ("e5-5m", 3), ("e11m", 4), ("e6m", 5), ("e9m", 6), ("e12m", 7), ("e18m", 8), ("e24m", 9), ("e36m", 10), ("e48m", 11), ("e54m", 12), ("t-72m", 13), ("t-96m", 14), ("t-108m", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMaxtx.setStatus('current')
staWlanmNetworBasic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("e1m", 1), ("e2m", 0), ("e5-5m", 3), ("e11m", 4), ("e6m", 5), ("e9m", 6), ("e12m", 7), ("e18m", 8), ("e24m", 9), ("e36m", 10), ("e48m", 11), ("e54m", 12), ("t-72m", 13), ("t-96m", 14), ("t-108m", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworBasic.setStatus('current')
staWlanmNetwor11bpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("long", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetwor11bpr.setStatus('current')
staWlanmNetworMacfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMacfi.setStatus('current')
staWlanmNetworClbrg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworClbrg.setStatus('current')
staWlanmNetworMaxst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMaxst.setStatus('current')
staWlanmNetworSsidb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworSsidb.setStatus('current')
staWlanmNetworVlant = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworVlant.setStatus('current')
staWlanmNetworMinht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("auto", 0), ("mcs-0-8", 1), ("mcs-1-9", 2), ("mcs-2-10", 3), ("mcs-3-11", 4), ("mcs-4-12", 5), ("mcs-5-13", 6), ("mcs-6-14", 7), ("mcs-7-15", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMinht.setStatus('current')
staWlanmNetworMaxht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("auto", 0), ("mcs-0-8", 1), ("mcs-1-9", 2), ("mcs-2-10", 3), ("mcs-3-11", 4), ("mcs-4-12", 5), ("mcs-5-13", 6), ("mcs-6-14", 7), ("mcs-7-15", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMaxht.setStatus('current')
staWlanmNetworShort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworShort.setStatus('current')
staWlanmNetworMaxsp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMaxsp.setStatus('current')
staWlanmNetworSenda = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 59, 103, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworSenda.setStatus('current')
staCerti = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61))
staCertiSce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1))
staCertiSceNumca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceNumca.setStatus('current')
staCertiSceNumra = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceNumra.setStatus('current')
staCertiSceNumce = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceNumce.setStatus('current')
staCertiSceCasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4), )
if mibBuilder.loadTexts: staCertiSceCasTable.setStatus('current')
staCertiSceCasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staCertiSceCasIdx"))
if mibBuilder.loadTexts: staCertiSceCasEntry.setStatus('current')
staCertiSceCasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasIdx.setStatus('current')
staCertiSceCasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasName.setStatus('current')
staCertiSceCasExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasExpire.setStatus('current')
staCertiSceCasIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasIssued.setStatus('current')
staCertiSceCasKeyusa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasKeyusa.setStatus('current')
staCertiSceCasIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasIssuer.setStatus('current')
staCertiSceCasSubjec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasSubjec.setStatus('current')
staCertiSceCasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasStatus.setStatus('current')
staCertiSceCasMd5fin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasMd5fin.setStatus('current')
staCertiSceCasSha1fi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 58))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasSha1fi.setStatus('current')
staCertiSceCasExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasExpsnm.setStatus('current')
staCertiSceCasIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasIsssnm.setStatus('current')
staCertiSceRasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5), )
if mibBuilder.loadTexts: staCertiSceRasTable.setStatus('current')
staCertiSceRasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staCertiSceRasIdx"))
if mibBuilder.loadTexts: staCertiSceRasEntry.setStatus('current')
staCertiSceRasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasIdx.setStatus('current')
staCertiSceRasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasName.setStatus('current')
staCertiSceRasExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasExpire.setStatus('current')
staCertiSceRasIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasIssued.setStatus('current')
staCertiSceRasKeyusa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasKeyusa.setStatus('current')
staCertiSceRasIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasIssuer.setStatus('current')
staCertiSceRasSubjec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasSubjec.setStatus('current')
staCertiSceRasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasStatus.setStatus('current')
staCertiSceRasExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasExpsnm.setStatus('current')
staCertiSceRasIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasIsssnm.setStatus('current')
staCertiSceCertsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6), )
if mibBuilder.loadTexts: staCertiSceCertsTable.setStatus('current')
staCertiSceCertsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staCertiSceCertsIdx"))
if mibBuilder.loadTexts: staCertiSceCertsEntry.setStatus('current')
staCertiSceCertsIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsIdx.setStatus('current')
staCertiSceCertsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsName.setStatus('current')
staCertiSceCertsExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsExpires.setStatus('current')
staCertiSceCertsIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsIssued.setStatus('current')
staCertiSceCertsKeyusage = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsKeyusage.setStatus('current')
staCertiSceCertsExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsExtended.setStatus('current')
staCertiSceCertsSubjecta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsSubjecta.setStatus('current')
staCertiSceCertsIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsIssuer.setStatus('current')
staCertiSceCertsSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsSubject.setStatus('current')
staCertiSceCertsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsStatus.setStatus('current')
staCertiSceCertsExpsnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsExpsnmp.setStatus('current')
staCertiSceCertsIsssnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsIsssnmp.setStatus('current')
staCertiSceDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 61, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staCertiSceDelet.setStatus('current')
staVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62))
staVlanOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanOpe.setStatus('current')
staVlanNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 1), )
if mibBuilder.loadTexts: staVlanNetTable.setStatus('current')
staVlanNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staVlanNetVla"))
if mibBuilder.loadTexts: staVlanNetEntry.setStatus('current')
staVlanNetVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanNetVla.setStatus('current')
staVlanNetPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanNetPor.setStatus('current')
staVlanPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 2), )
if mibBuilder.loadTexts: staVlanPorTable.setStatus('current')
staVlanPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "staVlanPorPor"))
if mibBuilder.loadTexts: staVlanPorEntry.setStatus('current')
staVlanPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanPorPor.setStatus('current')
staVlanPorTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 62, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ingress-mixed", 0), ("never", 1), ("mixed", 2), ("always", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanPorTag.setStatus('current')
staDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 1, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDelet.setStatus('current')
setName = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setName.setStatus('current')
setWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2))
setWanDialuppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 2), )
if mibBuilder.loadTexts: setWanDialuppTable.setStatus('current')
setWanDialuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanDialuppPee"))
if mibBuilder.loadTexts: setWanDialuppEntry.setStatus('current')
setWanDialuppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppPee.setStatus('current')
setWanDialuppDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppDia.setStatus('current')
setWanDialuppB1d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppB1d.setStatus('current')
setWanDialuppB2d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppB2d.setStatus('current')
setWanDialuppWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppWan.setStatus('current')
setWanDialuppCal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 9, 2))).clone(namedValues=NamedValues(("no", 0), ("auto", 1), ("name", 5), ("fast", 9), ("looser", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppCal.setStatus('current')
setWanRoundroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 3), )
if mibBuilder.loadTexts: setWanRoundroTable.setStatus('current')
setWanRoundroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanRoundroPee"))
if mibBuilder.loadTexts: setWanRoundroEntry.setStatus('current')
setWanRoundroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroPee.setStatus('current')
setWanRoundroRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroRou.setStatus('current')
setWanRoundroHea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("last", 0), ("first", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroHea.setStatus('current')
setWanLayerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 4), )
if mibBuilder.loadTexts: setWanLayerTable.setStatus('current')
setWanLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanLayerWanl"))
if mibBuilder.loadTexts: setWanLayerEntry.setStatus('current')
setWanLayerWanl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerWanl.setStatus('current')
setWanLayerEnca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("ether", 0), ("trans", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerEnca.setStatus('current')
setWanLayerLay3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("ppp", 4), ("appp", 5), ("scppp", 6), ("scappp", 7), ("sctrans", 8), ("dhcp", 9), ("trans", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay3.setStatus('current')
setWanLayerLay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 1))).clone(namedValues=NamedValues(("pppoe", 5), ("trans", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay2.setStatus('current')
setWanLayerL2op = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0))).clone(namedValues=NamedValues(("none", 255), ("compr", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerL2op.setStatus('current')
setWanLayerLay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 6))).clone(namedValues=NamedValues(("eth", 4), ("serial", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay1.setStatus('current')
setWanPppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5), )
if mibBuilder.loadTexts: setWanPppTable.setStatus('current')
setWanPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanPppPee"))
if mibBuilder.loadTexts: setWanPppEntry.setStatus('current')
setWanPppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppPee.setStatus('current')
setWanPppAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("chap", 8), ("pap", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppAut.setStatus('current')
setWanPppKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppKey.setStatus('current')
setWanPppTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTim.setStatus('current')
setWanPppTry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTry.setStatus('current')
setWanPppCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppCon.setStatus('current')
setWanPppFai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppFai.setStatus('current')
setWanPppTer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTer.setStatus('current')
setWanPppUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppUse.setStatus('current')
setWanPppRig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("ip", 1), ("ip-plus-nbt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppRig.setStatus('current')
setWanDslbroaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19), )
if mibBuilder.loadTexts: setWanDslbroaTable.setStatus('current')
setWanDslbroaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanDslbroaPee"))
if mibBuilder.loadTexts: setWanDslbroaEntry.setStatus('current')
setWanDslbroaPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaPee.setStatus('current')
setWanDslbroaSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaSht.setStatus('current')
setWanDslbroaAcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaAcn.setStatus('current')
setWanDslbroaSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaSer.setStatus('current')
setWanDslbroaWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaWan.setStatus('current')
setWanDslbroaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("gserverl", 1), ("local", 0), ("user-def", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaMac.setStatus('current')
setWanDslbroaUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1, 13), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaUse.setStatus('current')
setWanDslbroaVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 19, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaVla.setStatus('current')
setWanMtulistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 26), )
if mibBuilder.loadTexts: setWanMtulistTable.setStatus('current')
setWanMtulistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 26, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanMtulistPee"))
if mibBuilder.loadTexts: setWanMtulistEntry.setStatus('current')
setWanMtulistPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 26, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanMtulistPee.setStatus('current')
setWanMtulistMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanMtulistMtu.setStatus('current')
setWanIplistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20), )
if mibBuilder.loadTexts: setWanIplistTable.setStatus('current')
setWanIplistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanIplistPeer"))
if mibBuilder.loadTexts: setWanIplistEntry.setStatus('current')
setWanIplistPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistPeer.setStatus('current')
setWanIplistIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistIpadd.setStatus('current')
setWanIplistIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistIpnet.setStatus('current')
setWanIplistMasqi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistMasqi.setStatus('current')
setWanIplistGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistGatew.setStatus('current')
setWanIplistDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistDnsde.setStatus('current')
setWanIplistDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistDnsba.setStatus('current')
setWanIplistNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistNbnsd.setStatus('current')
setWanIplistNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 20, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistNbnsb.setStatus('current')
setWanPptppeeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 21), )
if mibBuilder.loadTexts: setWanPptppeeTable.setStatus('current')
setWanPptppeeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 21, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanPptppeePee"))
if mibBuilder.loadTexts: setWanPptppeeEntry.setStatus('current')
setWanPptppeePee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeePee.setStatus('current')
setWanPptppeeIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 21, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeIpa.setStatus('current')
setWanPptppeeRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeRtg.setStatus('current')
setWanPptppeePor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeePor.setStatus('current')
setWanPptppeeSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeSht.setStatus('current')
setWanRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22))
setWanRadiusOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusOpera.setStatus('current')
setWanRadiusServe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusServe.setStatus('current')
setWanRadiusAuthp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusAuthp.setStatus('current')
setWanRadiusLoopb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusLoopb.setStatus('current')
setWanRadiusProto = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusProto.setStatus('current')
setWanRadiusSecre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusSecre.setStatus('current')
setWanRadiusPppop = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusPppop.setStatus('current')
setWanRadiusClipo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusClipo.setStatus('current')
setWanRadiusClipp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 22, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusClipp.setStatus('current')
setWanPollingTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23), )
if mibBuilder.loadTexts: setWanPollingTable.setStatus('current')
setWanPollingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanPollingPeer"))
if mibBuilder.loadTexts: setWanPollingEntry.setStatus('current')
setWanPollingPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingPeer.setStatus('current')
setWanPollingIpaddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress1.setStatus('current')
setWanPollingIpaddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress2.setStatus('current')
setWanPollingIpaddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress3.setStatus('current')
setWanPollingIpaddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress4.setStatus('current')
setWanPollingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingTime.setStatus('current')
setWanPollingTry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingTry.setStatus('current')
setWanPollingLoopbackad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 23, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingLoopbackad.setStatus('current')
setWanBackuppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 24), )
if mibBuilder.loadTexts: setWanBackuppTable.setStatus('current')
setWanBackuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 24, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanBackuppPee"))
if mibBuilder.loadTexts: setWanBackuppEntry.setStatus('current')
setWanBackuppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 24, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppPee.setStatus('current')
setWanBackuppAlt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 24, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppAlt.setStatus('current')
setWanBackuppHea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("last", 0), ("first", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppHea.setStatus('current')
setWanActiontTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25), )
if mibBuilder.loadTexts: setWanActiontTable.setStatus('current')
setWanActiontEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanActiontIndex"))
if mibBuilder.loadTexts: setWanActiontEntry.setStatus('current')
setWanActiontIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontIndex.setStatus('current')
setWanActiontActiv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontActiv.setStatus('current')
setWanActiontHostn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontHostn.setStatus('current')
setWanActiontPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontPeer.setStatus('current')
setWanActiontLockt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontLockt.setStatus('current')
setWanActiontCondi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("establish", 0), ("disconnect", 1), ("broken", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontCondi.setStatus('current')
setWanActiontActio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontActio.setStatus('current')
setWanActiontCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontCheck.setStatus('current')
setWanActiontOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 25, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontOwner.setStatus('current')
setWanBackupd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackupd.setStatus('current')
setWanIncominTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 6), )
if mibBuilder.loadTexts: setWanIncominTable.setStatus('current')
setWanIncominEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanIncominDia"))
if mibBuilder.loadTexts: setWanIncominEntry.setStatus('current')
setWanIncominDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIncominDia.setStatus('current')
setWanIncominPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIncominPee.setStatus('current')
setWanScriptsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 8), )
if mibBuilder.loadTexts: setWanScriptsTable.setStatus('current')
setWanScriptsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 8, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanScriptsPee"))
if mibBuilder.loadTexts: setWanScriptsEntry.setStatus('current')
setWanScriptsPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanScriptsPee.setStatus('current')
setWanScriptsScr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 58))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanScriptsScr.setStatus('current')
setWanProtect = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4))).clone(namedValues=NamedValues(("none", 0), ("number", 2), ("screened", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanProtect.setStatus('current')
setWanCallbac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanCallbac.setStatus('current')
setWanManuald = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 13))
setWanManualdCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 13, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanManualdCon.setStatus('current')
setWanManualdDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 13, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanManualdDis.setStatus('current')
setWanRouteriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 11), )
if mibBuilder.loadTexts: setWanRouteriTable.setStatus('current')
setWanRouteriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWanRouteriIfc"))
if mibBuilder.loadTexts: setWanRouteriEntry.setStatus('current')
setWanRouteriIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWanRouteriIfc.setStatus('current')
setWanRouteriMsn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriMsn.setStatus('current')
setWanRouteriYc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriYc.setStatus('current')
setWanRouteriCli = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriCli.setStatus('current')
setWanRouteriAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 128))).clone(namedValues=NamedValues(("all", 0), ("none", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriAcc.setStatus('current')
setWanRouteriTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWanRouteriTyp.setStatus('current')
setWanDialpre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)))
if mibBuilder.loadTexts: setWanDialpre.setStatus('current')
setAccou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18))
setAccouOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouOpe.setStatus('current')
setAccouSav = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouSav.setStatus('current')
setAccouDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mac-address", 0), ("ip-address", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouDis.setStatus('current')
setAccouSor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("time", 0), ("data", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouSor.setStatus('current')
setAccouCurTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4), )
if mibBuilder.loadTexts: setAccouCurTable.setStatus('current')
setAccouCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setAccouCurUsern"), (0, "LANCOM-L310-MIB", "setAccouCurMacad"), (0, "LANCOM-L310-MIB", "setAccouCurPeer"), (0, "LANCOM-L310-MIB", "setAccouCurConnt"))
if mibBuilder.loadTexts: setAccouCurEntry.setStatus('current')
setAccouCurUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurUsern.setStatus('current')
setAccouCurMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurMacad.setStatus('current')
setAccouCurPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurPeer.setStatus('current')
setAccouCurConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurConnt.setStatus('current')
setAccouCurRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurRxkby.setStatus('current')
setAccouCurTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurTxkby.setStatus('current')
setAccouCurTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurTotal.setStatus('current')
setAccouCurConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurConne.setStatus('current')
setAccouAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5), )
if mibBuilder.loadTexts: setAccouAccTable.setStatus('current')
setAccouAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setAccouAccUsern"), (0, "LANCOM-L310-MIB", "setAccouAccMacad"), (0, "LANCOM-L310-MIB", "setAccouAccPeer"), (0, "LANCOM-L310-MIB", "setAccouAccConnt"))
if mibBuilder.loadTexts: setAccouAccEntry.setStatus('current')
setAccouAccUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccUsern.setStatus('current')
setAccouAccMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccMacad.setStatus('current')
setAccouAccPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccPeer.setStatus('current')
setAccouAccConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccConnt.setStatus('current')
setAccouAccRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccRxkby.setStatus('current')
setAccouAccTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccTxkby.setStatus('current')
setAccouAccTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccTotal.setStatus('current')
setAccouAccConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccConne.setStatus('current')
setAccouDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouDel.setStatus('current')
setAccouTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8), )
if mibBuilder.loadTexts: setAccouTimTable.setStatus('current')
setAccouTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setAccouTimInde"))
if mibBuilder.loadTexts: setAccouTimEntry.setStatus('current')
setAccouTimInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouTimInde.setStatus('current')
setAccouTimActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimActi.setStatus('current')
setAccouTimType = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monthly", 0), ("weekly", 1), ("daily", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimType.setStatus('current')
setAccouTimDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimDay.setStatus('current')
setAccouTimDayo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimDayo.setStatus('current')
setAccouTimHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimHour.setStatus('current')
setAccouTimMinu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimMinu.setStatus('current')
setAccouLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9), )
if mibBuilder.loadTexts: setAccouLasTable.setStatus('current')
setAccouLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setAccouLasUsern"), (0, "LANCOM-L310-MIB", "setAccouLasMacad"), (0, "LANCOM-L310-MIB", "setAccouLasPeer"), (0, "LANCOM-L310-MIB", "setAccouLasConnt"))
if mibBuilder.loadTexts: setAccouLasEntry.setStatus('current')
setAccouLasUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasUsern.setStatus('current')
setAccouLasMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasMacad.setStatus('current')
setAccouLasPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasPeer.setStatus('current')
setAccouLasConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasConnt.setStatus('current')
setAccouLasRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasRxkby.setStatus('current')
setAccouLasTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasTxkby.setStatus('current')
setAccouLasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasTotal.setStatus('current')
setAccouLasConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 18, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasConne.setStatus('current')
setCharg = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3))
setChargDaysper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargDaysper.setStatus('current')
setChargSerialm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargSerialm.setStatus('current')
setChargSpservere = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargSpservere.setStatus('current')
setChargRouters = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargRouters.setStatus('current')
setChargTimetabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 7), )
if mibBuilder.loadTexts: setChargTimetabTable.setStatus('current')
setChargTimetabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setChargTimetabIfc"))
if mibBuilder.loadTexts: setChargTimetabEntry.setStatus('current')
setChargTimetabIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("router-dsl-broadband", 1), ("router-serial", 2), ("lancapi", 3), ("ab-1", 4), ("ab-2", 5), ("ab-3", 6), ("ab-4", 7), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabIfc.setStatus('current')
setChargTimetabBudgetmi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabBudgetmi.setStatus('current')
setChargTimetabSparemin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabSparemin.setStatus('current')
setChargTimetabMinutesa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabMinutesa.setStatus('current')
setChargTimetabMinutesp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabMinutesp.setStatus('current')
setChargDslbroa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargDslbroa.setStatus('current')
setChargAdditio = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargAdditio.setStatus('current')
setChargSpareds = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargSpareds.setStatus('current')
setChargRouterd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargRouterd.setStatus('current')
setChargActivat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargActivat.setStatus('current')
setChargResetbu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 3, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargResetbu.setStatus('current')
setLan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4))
setLanMacadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanMacadd.setStatus('current')
setLanSpareh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanSpareh.setStatus('current')
setLanTracem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 8), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanTracem.setStatus('current')
setLanTracel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanTracel.setStatus('current')
setLanIeee80 = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 10))
setLanIeee80SupTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 10, 1), )
if mibBuilder.loadTexts: setLanIeee80SupTable.setStatus('current')
setLanIeee80SupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 10, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setLanIeee80SupIfc"))
if mibBuilder.loadTexts: setLanIeee80SupEntry.setStatus('current')
setLanIeee80SupIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("lan-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanIeee80SupIfc.setStatus('current')
setLanIeee80SupMet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1024, 3328, 5383, 5384, 5567, 5402, 5380, 6426, 6406))).clone(namedValues=NamedValues(("none", 0), ("md5", 1024), ("tls", 3328), ("ttls-pap", 5383), ("ttls-chap", 5384), ("ttls-mschap", 5567), ("ttls-mschapv2", 5402), ("ttls-md5", 5380), ("peap-mschapv2", 6426), ("peap-gtc", 6406)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanIeee80SupMet.setStatus('current')
setLanIeee80SupCre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 4, 10, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanIeee80SupCre.setStatus('current')
setTcpip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7))
setTcpipOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipOpera.setStatus('current')
setTcpipNetwoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30), )
if mibBuilder.loadTexts: setTcpipNetwoTable.setStatus('current')
setTcpipNetwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setTcpipNetwoNet"))
if mibBuilder.loadTexts: setTcpipNetwoEntry.setStatus('current')
setTcpipNetwoNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoNet.setStatus('current')
setTcpipNetwoIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoIpa.setStatus('current')
setTcpipNetwoIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoIpn.setStatus('current')
setTcpipNetwoVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoVla.setStatus('current')
setTcpipNetwoInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 512, 768, 769, 770, 771, 772, 773, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("wlan-1", 512), ("p2p-1-1", 768), ("p2p-1-2", 769), ("p2p-1-3", 770), ("p2p-1-4", 771), ("p2p-1-5", 772), ("p2p-1-6", 773), ("wlan-1-2", 1024), ("wlan-1-3", 1025), ("wlan-1-4", 1026), ("wlan-1-5", 1027), ("wlan-1-6", 1028), ("wlan-1-7", 1029), ("wlan-1-8", 1030), ("brg-1", 1536), ("brg-2", 1537), ("brg-3", 1538), ("brg-4", 1539), ("brg-5", 1540), ("brg-6", 1541), ("brg-7", 1542), ("brg-8", 1543), ("any", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoInt.setStatus('current')
setTcpipNetwoSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("strict", 1), ("loose", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoSrc.setStatus('current')
setTcpipNetwoTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("intranet", 1), ("dmz", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoTyp.setStatus('current')
setTcpipNetwoRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoRtg.setStatus('current')
setTcpipNetwoCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 30, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoCom.setStatus('current')
setTcpipLoopbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 17), )
if mibBuilder.loadTexts: setTcpipLoopbTable.setStatus('current')
setTcpipLoopbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 17, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setTcpipLoopbNam"))
if mibBuilder.loadTexts: setTcpipLoopbEntry.setStatus('current')
setTcpipLoopbNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipLoopbNam.setStatus('current')
setTcpipLoopbLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 17, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipLoopbLoo.setStatus('current')
setTcpipLoopbRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipLoopbRtg.setStatus('current')
setTcpipAccesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 6), )
if mibBuilder.loadTexts: setTcpipAccesTable.setStatus('current')
setTcpipAccesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setTcpipAccesIpa"))
if mibBuilder.loadTexts: setTcpipAccesEntry.setStatus('current')
setTcpipAccesIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 6, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAccesIpa.setStatus('current')
setTcpipAccesIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAccesIpn.setStatus('current')
setTcpipDnsde = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipDnsde.setStatus('current')
setTcpipDnsba = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipDnsba.setStatus('current')
setTcpipNbnsd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNbnsd.setStatus('current')
setTcpipNbnsb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNbnsb.setStatus('current')
setTcpipArptaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 16), )
if mibBuilder.loadTexts: setTcpipArptaTable.setStatus('current')
setTcpipArptaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 16, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setTcpipArptaIpa"))
if mibBuilder.loadTexts: setTcpipArptaEntry.setStatus('current')
setTcpipArptaIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaIpa.setStatus('current')
setTcpipArptaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 16, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaMac.setStatus('current')
setTcpipArptaLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaLas.setStatus('current')
setTcpipArptaCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("wan", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaCon.setStatus('current')
setTcpipArptaVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaVla.setStatus('current')
setTcpipArptaPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 16, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaPee.setStatus('current')
setTcpipNonlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNonlo.setStatus('current')
setTcpipIcmpo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipIcmpo.setStatus('current')
setTcpipArpag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipArpag.setStatus('current')
setTcpipAlive = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 21))
setTcpipAliveTarget = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 21, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveTarget.setStatus('current')
setTcpipAliveTestin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 21, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveTestin.setStatus('current')
setTcpipAliveRetryc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveRetryc.setStatus('current')
setTcpipAliveRetryi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveRetryi.setStatus('current')
setTcpipAliveFailli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 21, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveFailli.setStatus('current')
setTcpipAliveBootty = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 7, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("warm-boot", 0), ("cold-boot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveBootty.setStatus('current')
setIprou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8))
setIprouOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouOpe.setStatus('current')
setIprouIprTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2), )
if mibBuilder.loadTexts: setIprouIprTable.setStatus('current')
setIprouIprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouIprIpa"), (0, "LANCOM-L310-MIB", "setIprouIprIpn"), (0, "LANCOM-L310-MIB", "setIprouIprRtg"))
if mibBuilder.loadTexts: setIprouIprEntry.setStatus('current')
setIprouIprIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprIpa.setStatus('current')
setIprouIprIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprIpn.setStatus('current')
setIprouIprRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprRtg.setStatus('current')
setIprouIprPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprPee.setStatus('current')
setIprouIprDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprDis.setStatus('current')
setIprouIprMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprMas.setStatus('current')
setIprouIprAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 0), ("semi", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprAct.setStatus('current')
setIprouIprCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprCom.setStatus('current')
setIprouDefTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 13), )
if mibBuilder.loadTexts: setIprouDefTable.setStatus('current')
setIprouDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 13, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouDefInd"))
if mibBuilder.loadTexts: setIprouDefEntry.setStatus('current')
setIprouDefInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefInd.setStatus('current')
setIprouDefDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 13, 1, 2), Bits().clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 4), ("thursday", 8), ("friday", 16), ("saturday", 32), ("sunday", 64), ("holiday", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefDay.setStatus('current')
setIprouDefSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 13, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefSta.setStatus('current')
setIprouDefSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefSto.setStatus('current')
setIprouDefPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefPee.setStatus('current')
setIprouUsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouUsa.setStatus('current')
setIprouPro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouPro.setStatus('current')
setIprouSen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouSen.setStatus('current')
setIprouSta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouSta.setStatus('current')
setIprouEnd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouEnd.setStatus('current')
setIprouRou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 7))
setIprouRouRou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("type-of-service", 1), ("diffserv", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouRou.setStatus('current')
setIprouRouIcm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("reliable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouIcm.setStatus('current')
setIprouRouSyn = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouSyn.setStatus('current')
setIprouRouL2l = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouL2l.setStatus('current')
setIprouRouL3l = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouL3l.setStatus('current')
setIprouRip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8))
setIprouRipLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5), )
if mibBuilder.loadTexts: setIprouRipLanTable.setStatus('current')
setIprouRipLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouRipLanNetw"))
if mibBuilder.loadTexts: setIprouRipLanEntry.setStatus('current')
setIprouRipLanNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanNetw.setStatus('current')
setIprouRipLanRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanRipt.setStatus('current')
setIprouRipLanRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanRipa.setStatus('current')
setIprouRipLanProp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanProp.setStatus('current')
setIprouRipLanPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanPois.setStatus('current')
setIprouRipLanDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanDftr.setStatus('current')
setIprouRipLanRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanRtgt.setStatus('current')
setIprouRipLanRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanRxfi.setStatus('current')
setIprouRipLanTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanTxfi.setStatus('current')
setIprouRipR1m = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("class", 0), ("address", 1), ("cl-plus-addr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipR1m.setStatus('current')
setIprouRipIprTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3), )
if mibBuilder.loadTexts: setIprouRipIprTable.setStatus('current')
setIprouRipIprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouRipIprIpa"), (0, "LANCOM-L310-MIB", "setIprouRipIprIpn"), (0, "LANCOM-L310-MIB", "setIprouRipIprRtg"))
if mibBuilder.loadTexts: setIprouRipIprEntry.setStatus('current')
setIprouRipIprIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprIpa.setStatus('current')
setIprouRipIprIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprIpn.setStatus('current')
setIprouRipIprRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprRtg.setStatus('current')
setIprouRipIprTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprTim.setStatus('current')
setIprouRipIprDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprDis.setStatus('current')
setIprouRipIprGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprGat.setStatus('current')
setIprouRipIprPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprPee.setStatus('current')
setIprouRipIprPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprPor.setStatus('current')
setIprouRipIprVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprVla.setStatus('current')
setIprouRipIprNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprNet.setStatus('current')
setIprouRipWanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4), )
if mibBuilder.loadTexts: setIprouRipWanTable.setStatus('current')
setIprouRipWanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouRipWanPeer"))
if mibBuilder.loadTexts: setIprouRipWanEntry.setStatus('current')
setIprouRipWanPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanPeer.setStatus('current')
setIprouRipWanRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRipt.setStatus('current')
setIprouRipWanRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRipa.setStatus('current')
setIprouRipWanMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanMasq.setStatus('current')
setIprouRipWanPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanPois.setStatus('current')
setIprouRipWanRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRfc2.setStatus('current')
setIprouRipWanGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanGate.setStatus('current')
setIprouRipWanDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanDftr.setStatus('current')
setIprouRipWanRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRtgt.setStatus('current')
setIprouRipWanRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRxfi.setStatus('current')
setIprouRipWanTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanTxfi.setStatus('current')
setIprouRipFilTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 7), )
if mibBuilder.loadTexts: setIprouRipFilTable.setStatus('current')
setIprouRipFilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouRipFilNam"))
if mibBuilder.loadTexts: setIprouRipFilEntry.setStatus('current')
setIprouRipFilNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipFilNam.setStatus('current')
setIprouRipFilFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipFilFil.setStatus('current')
setIprouRipPar = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 6))
setIprouRipParUpda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParUpda.setStatus('current')
setIprouRipParHold = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParHold.setStatus('current')
setIprouRipParInva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParInva.setStatus('current')
setIprouRipParFlus = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParFlus.setStatus('current')
setIprouRipParUpdd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 6, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParUpdd.setStatus('current')
setIprouRipParMaxh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 6, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParMaxh.setStatus('current')
setIprouRipParRout = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 8, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParRout.setStatus('current')
setIprou1nn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9))
setIprou1nnTcpagings = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnTcpagings.setStatus('current')
setIprou1nnUdpagings = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnUdpagings.setStatus('current')
setIprou1nnIcmpaging = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnIcmpaging.setStatus('current')
setIprou1nnServicetaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4), )
if mibBuilder.loadTexts: setIprou1nnServicetaTable.setStatus('current')
setIprou1nnServicetaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprou1nnServicetaDportf"), (0, "LANCOM-L310-MIB", "setIprou1nnServicetaDportt"), (0, "LANCOM-L310-MIB", "setIprou1nnServicetaProtoc"), (0, "LANCOM-L310-MIB", "setIprou1nnServicetaPeer"), (0, "LANCOM-L310-MIB", "setIprou1nnServicetaWanadd"))
if mibBuilder.loadTexts: setIprou1nnServicetaEntry.setStatus('current')
setIprou1nnServicetaDportf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaDportf.setStatus('current')
setIprou1nnServicetaDportt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaDportt.setStatus('current')
setIprou1nnServicetaProtoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("tcp-plus-udp", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaProtoc.setStatus('current')
setIprou1nnServicetaPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaPeer.setStatus('current')
setIprou1nnServicetaWanadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaWanadd.setStatus('current')
setIprou1nnServicetaIntran = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaIntran.setStatus('current')
setIprou1nnServicetaMappor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaMappor.setStatus('current')
setIprou1nnServicetaActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaActive.setStatus('current')
setIprou1nnServicetaCommen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaCommen.setStatus('current')
setIprou1nnTable1nnaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 5), )
if mibBuilder.loadTexts: setIprou1nnTable1nnaTable.setStatus('current')
setIprou1nnTable1nnaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprou1nnTable1nnaInt"))
if mibBuilder.loadTexts: setIprou1nnTable1nnaEntry.setStatus('current')
setIprou1nnTable1nnaInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaInt.setStatus('current')
setIprou1nnTable1nnaSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaSou.setStatus('current')
setIprou1nnTable1nnaPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaPro.setStatus('current')
setIprou1nnTable1nnaTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaTim.setStatus('current')
setIprou1nnTable1nnaHan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaHan.setStatus('current')
setIprou1nnTable1nnaRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 5, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaRem.setStatus('current')
setIprou1nnFragments = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("filter", 0), ("route", 1), ("reassemble", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnFragments.setStatus('current')
setIprou1nnFragmenta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnFragmenta.setStatus('current')
setIprou1nnIpsecagin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnIpsecagin.setStatus('current')
setIprou1nnIpsectablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9), )
if mibBuilder.loadTexts: setIprou1nnIpsectablTable.setStatus('current')
setIprou1nnIpsectablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprou1nnIpsectablRemotea"))
if mibBuilder.loadTexts: setIprou1nnIpsectablEntry.setStatus('current')
setIprou1nnIpsectablRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablRemotea.setStatus('current')
setIprou1nnIpsectablLocalad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablLocalad.setStatus('current')
setIprou1nnIpsectablRchi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablRchi.setStatus('current')
setIprou1nnIpsectablRclo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablRclo.setStatus('current')
setIprou1nnIpsectablLchi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablLchi.setStatus('current')
setIprou1nnIpsectablLclo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablLclo.setStatus('current')
setIprou1nnIpsectablRemotes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablRemotes.setStatus('current')
setIprou1nnIpsectablLocalsp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablLocalsp.setStatus('current')
setIprou1nnIpsectablTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablTimeout.setStatus('current')
setIprou1nnIpsectablCo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablCo.setStatus('current')
setIprou1nnIpsectablNl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablNl.setStatus('current')
setIprou1nnIpsectablNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablNr.setStatus('current')
setIprou1nnIpsectablDp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablDp.setStatus('current')
setIprou1nnIpsectablFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablFlags.setStatus('current')
setIprou1nnIdspoofin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnIdspoofin.setStatus('current')
setIprouFir = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10))
setIprouFirOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirOpera.setStatus('current')
setIprouFirActioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 4), )
if mibBuilder.loadTexts: setIprouFirActioTable.setStatus('current')
setIprouFirActioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouFirActioNam"))
if mibBuilder.loadTexts: setIprouFirActioEntry.setStatus('current')
setIprouFirActioNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirActioNam.setStatus('current')
setIprouFirActioDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirActioDes.setStatus('current')
setIprouFirObjecTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 1), )
if mibBuilder.loadTexts: setIprouFirObjecTable.setStatus('current')
setIprouFirObjecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouFirObjecNam"))
if mibBuilder.loadTexts: setIprouFirObjecEntry.setStatus('current')
setIprouFirObjecNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirObjecNam.setStatus('current')
setIprouFirObjecDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirObjecDes.setStatus('current')
setIprouFirRulesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2), )
if mibBuilder.loadTexts: setIprouFirRulesTable.setStatus('current')
setIprouFirRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouFirRulesNam"))
if mibBuilder.loadTexts: setIprouFirRulesEntry.setStatus('current')
setIprouFirRulesNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesNam.setStatus('current')
setIprouFirRulesPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesPro.setStatus('current')
setIprouFirRulesSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesSou.setStatus('current')
setIprouFirRulesDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesDes.setStatus('current')
setIprouFirRulesAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesAct.setStatus('current')
setIprouFirRulesLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesLin.setStatus('current')
setIprouFirRulesPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesPri.setStatus('current')
setIprouFirRulesFir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesFir.setStatus('current')
setIprouFirRulesSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesSta.setStatus('current')
setIprouFirRulesRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesRtg.setStatus('current')
setIprouFirRulesCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesCom.setStatus('current')
setIprouFirFilteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3), )
if mibBuilder.loadTexts: setIprouFirFilteTable.setStatus('current')
setIprouFirFilteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouFirFilteIdx"))
if mibBuilder.loadTexts: setIprouFirFilteEntry.setStatus('current')
setIprouFirFilteIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteIdx.setStatus('current')
setIprouFirFilteProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteProt.setStatus('current')
setIprouFirFilteSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSrcm.setStatus('current')
setIprouFirFilteSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSrca.setStatus('current')
setIprouFirFilteSrcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSrcn.setStatus('current')
setIprouFirFilteSst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSst.setStatus('current')
setIprouFirFilteSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSend.setStatus('current')
setIprouFirFilteDstm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDstm.setStatus('current')
setIprouFirFilteDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDsta.setStatus('current')
setIprouFirFilteDstn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDstn.setStatus('current')
setIprouFirFilteDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDst.setStatus('current')
setIprouFirFilteDend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDend.setStatus('current')
setIprouFirFilteActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteActi.setStatus('current')
setIprouFirFilteLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteLink.setStatus('current')
setIprouFirFiltePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFiltePrio.setStatus('current')
setIprouFirFilteRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteRtgt.setStatus('current')
setIprouFirConneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5), )
if mibBuilder.loadTexts: setIprouFirConneTable.setStatus('current')
setIprouFirConneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouFirConneSrca"), (0, "LANCOM-L310-MIB", "setIprouFirConneDsta"), (0, "LANCOM-L310-MIB", "setIprouFirConneProt"), (0, "LANCOM-L310-MIB", "setIprouFirConneSrcp"), (0, "LANCOM-L310-MIB", "setIprouFirConneDstp"))
if mibBuilder.loadTexts: setIprouFirConneEntry.setStatus('current')
setIprouFirConneSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneSrca.setStatus('current')
setIprouFirConneDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneDsta.setStatus('current')
setIprouFirConneProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneProt.setStatus('current')
setIprouFirConneSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneSrcp.setStatus('current')
setIprouFirConneDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneDstp.setStatus('current')
setIprouFirConneRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneRtgt.setStatus('current')
setIprouFirConneTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneTime.setStatus('current')
setIprouFirConneFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneFlag.setStatus('current')
setIprouFirConneFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneFilt.setStatus('current')
setIprouFirConneSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneSrcr.setStatus('current')
setIprouFirConneDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneDest.setStatus('current')
setIprouFirOpenpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19), )
if mibBuilder.loadTexts: setIprouFirOpenpTable.setStatus('current')
setIprouFirOpenpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouFirOpenpSrca"), (0, "LANCOM-L310-MIB", "setIprouFirOpenpDsta"), (0, "LANCOM-L310-MIB", "setIprouFirOpenpProt"), (0, "LANCOM-L310-MIB", "setIprouFirOpenpDstp"))
if mibBuilder.loadTexts: setIprouFirOpenpEntry.setStatus('current')
setIprouFirOpenpSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpSrca.setStatus('current')
setIprouFirOpenpDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpDsta.setStatus('current')
setIprouFirOpenpProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpProt.setStatus('current')
setIprouFirOpenpDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpDstp.setStatus('current')
setIprouFirOpenpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpTime.setStatus('current')
setIprouFirOpenpFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpFilt.setStatus('current')
setIprouFirOpenpSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 19, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpSrcr.setStatus('current')
setIprouFirHostbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 6), )
if mibBuilder.loadTexts: setIprouFirHostbTable.setStatus('current')
setIprouFirHostbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouFirHostbSrc"))
if mibBuilder.loadTexts: setIprouFirHostbEntry.setStatus('current')
setIprouFirHostbSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirHostbSrc.setStatus('current')
setIprouFirHostbTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirHostbTim.setStatus('current')
setIprouFirHostbFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirHostbFil.setStatus('current')
setIprouFirPortbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 7), )
if mibBuilder.loadTexts: setIprouFirPortbTable.setStatus('current')
setIprouFirPortbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouFirPortbDsta"))
if mibBuilder.loadTexts: setIprouFirPortbEntry.setStatus('current')
setIprouFirPortbDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbDsta.setStatus('current')
setIprouFirPortbProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbProt.setStatus('current')
setIprouFirPortbDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbDstp.setStatus('current')
setIprouFirPortbTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbTime.setStatus('current')
setIprouFirPortbFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbFilt.setStatus('current')
setIprouFirMaxha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirMaxha.setStatus('current')
setIprouFirDosac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirDosac.setStatus('current')
setIprouFirPorts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirPorts.setStatus('current')
setIprouFirIdsac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirIdsac.setStatus('current')
setIprouFirAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAdmin.setStatus('current')
setIprouFirPingb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirPingb.setStatus('current')
setIprouFirSteal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirSteal.setStatus('current')
setIprouFirAuthp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("closed", 0), ("stealth", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAuthp.setStatus('current')
setIprouFirDenys = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirDenys.setStatus('current')
setIprouFirAppli = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20))
setIprouFirAppliFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 1))
setIprouFirAppliFtpFtp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpFtp.setStatus('current')
setIprouFirAppliFtpAct = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpAct.setStatus('current')
setIprouFirAppliFtpMin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpMin.setStatus('current')
setIprouFirAppliFtpChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpChe.setStatus('current')
setIprouFirAppliFtpFxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpFxp.setStatus('current')
setIprouFirAppliIrc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 2))
setIprouFirAppliIrcIrc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliIrcIrc.setStatus('current')
setIprouFirAppliIrcDdc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliIrcDdc.setStatus('current')
setIprouFirAppliIrcMin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliIrcMin.setStatus('current')
setIprouFirAppliIrcChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliIrcChe.setStatus('current')
setIprouFirAppliApp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 10, 20, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliApp.setStatus('current')
setIprouNnnTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 19), )
if mibBuilder.loadTexts: setIprouNnnTable.setStatus('current')
setIprouNnnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 19, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouNnnIdx"))
if mibBuilder.loadTexts: setIprouNnnEntry.setStatus('current')
setIprouNnnIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnIdx.setStatus('current')
setIprouNnnSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 19, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnSrca.setStatus('current')
setIprouNnnSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 19, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnSrcm.setStatus('current')
setIprouNnnDsts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnDsts.setStatus('current')
setIprouNnnMapp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 19, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnMapp.setStatus('current')
setIprouVrr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21))
setIprouVrrOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrOpe.setStatus('current')
setIprouVrrVrrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 2), )
if mibBuilder.loadTexts: setIprouVrrVrrTable.setStatus('current')
setIprouVrrVrrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIprouVrrVrrRou"))
if mibBuilder.loadTexts: setIprouVrrVrrEntry.setStatus('current')
setIprouVrrVrrRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrRou.setStatus('current')
setIprouVrrVrrVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrVir.setStatus('current')
setIprouVrrVrrPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrPri.setStatus('current')
setIprouVrrVrrBpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrBpr.setStatus('current')
setIprouVrrVrrPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrPee.setStatus('current')
setIprouVrrVrrCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrCom.setStatus('current')
setIprouVrrRec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrRec.setStatus('current')
setIprouVrrAdv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrAdv.setStatus('current')
setIprouVrrInt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 8, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrInt.setStatus('current')
setSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9))
setSnmpSendtrap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpSendtrap.setStatus('current')
setSnmpIptrapsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 2), )
if mibBuilder.loadTexts: setSnmpIptrapsTable.setStatus('current')
setSnmpIptrapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setSnmpIptrapsTra"))
if mibBuilder.loadTexts: setSnmpIptrapsEntry.setStatus('current')
setSnmpIptrapsTra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsTra.setStatus('current')
setSnmpIptrapsLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsLoo.setStatus('current')
setSnmpAdminist = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpAdminist.setStatus('current')
setSnmpLocation = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpLocation.setStatus('current')
setSnmpRegister = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpRegister.setStatus('current')
setSnmpDeletemo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpDeletemo.setStatus('current')
setSnmpMonitortTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7), )
if mibBuilder.loadTexts: setSnmpMonitortTable.setStatus('current')
setSnmpMonitortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setSnmpMonitortIpa"), (0, "LANCOM-L310-MIB", "setSnmpMonitortPor"))
if mibBuilder.loadTexts: setSnmpMonitortEntry.setStatus('current')
setSnmpMonitortIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortIpa.setStatus('current')
setSnmpMonitortPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortPor.setStatus('current')
setSnmpMonitortMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortMac.setStatus('current')
setSnmpMonitortVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortVla.setStatus('current')
setSnmpMonitortTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortTim.setStatus('current')
setSnmpMonitortPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortPee.setStatus('current')
setSnmpMonitortLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortLoo.setStatus('current')
setSnmpMonitortLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortLan.setStatus('current')
setSnmpPassword = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpPassword.setStatus('current')
setSnmpComment1 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment1.setStatus('current')
setSnmpComment2 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment2.setStatus('current')
setSnmpComment3 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment3.setStatus('current')
setSnmpComment4 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 9, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment4.setStatus('current')
setDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10))
setDhcpNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20), )
if mibBuilder.loadTexts: setDhcpNetTable.setStatus('current')
setDhcpNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDhcpNetNetworknam"))
if mibBuilder.loadTexts: setDhcpNetEntry.setStatus('current')
setDhcpNetNetworknam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNetworknam.setStatus('current')
setDhcpNetStartaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetStartaddre.setStatus('current')
setDhcpNetEndaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetEndaddress.setStatus('current')
setDhcpNetNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNetmask.setStatus('current')
setDhcpNetBroadcasta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetBroadcasta.setStatus('current')
setDhcpNetGatewayadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetGatewayadd.setStatus('current')
setDhcpNetDnsdefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetDnsdefault.setStatus('current')
setDhcpNetDnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetDnsbackup.setStatus('current')
setDhcpNetNbnsdefaul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNbnsdefaul.setStatus('current')
setDhcpNetNbnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNbnsbackup.setStatus('current')
setDhcpNetOperating = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 16, 4))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("auto", 2), ("relay", 16), ("client", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetOperating.setStatus('current')
setDhcpNetBroadcastb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetBroadcastb.setStatus('current')
setDhcpNetMasterserv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetMasterserv.setStatus('current')
setDhcpNetCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetCache.setStatus('current')
setDhcpNetAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetAdaption.setStatus('current')
setDhcpPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 18), )
if mibBuilder.loadTexts: setDhcpPorTable.setStatus('current')
setDhcpPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 18, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDhcpPorPor"))
if mibBuilder.loadTexts: setDhcpPorEntry.setStatus('current')
setDhcpPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpPorPor.setStatus('current')
setDhcpPorEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpPorEna.setStatus('current')
setDhcpMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpMax.setStatus('current')
setDhcpDef = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpDef.setStatus('current')
setDhcpDhcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8), )
if mibBuilder.loadTexts: setDhcpDhcTable.setStatus('current')
setDhcpDhcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDhcpDhcIpa"), (0, "LANCOM-L310-MIB", "setDhcpDhcNet"))
if mibBuilder.loadTexts: setDhcpDhcEntry.setStatus('current')
setDhcpDhcIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcIpa.setStatus('current')
setDhcpDhcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcMac.setStatus('current')
setDhcpDhcTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcTim.setStatus('current')
setDhcpDhcHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcHos.setStatus('current')
setDhcpDhcTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1, 5), Bits().clone(namedValues=NamedValues(("new", 1), ("new", 2), ("dyn", 16), ("unkn", 4), ("stat", 8), ("bootp", 32), ("relay", 2048)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcTyp.setStatus('current')
setDhcpDhcLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcLan.setStatus('current')
setDhcpDhcVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcVla.setStatus('current')
setDhcpDhcNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 8, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcNet.setStatus('current')
setDhcpHosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 9), )
if mibBuilder.loadTexts: setDhcpHosTable.setStatus('current')
setDhcpHosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 9, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDhcpHosMac"))
if mibBuilder.loadTexts: setDhcpHosEntry.setStatus('current')
setDhcpHosMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosMac.setStatus('current')
setDhcpHosIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosIpa.setStatus('current')
setDhcpHosHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosHos.setStatus('current')
setDhcpHosIma = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosIma.setStatus('current')
setDhcpAliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 10), )
if mibBuilder.loadTexts: setDhcpAliTable.setStatus('current')
setDhcpAliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDhcpAliImagea"))
if mibBuilder.loadTexts: setDhcpAliEntry.setStatus('current')
setDhcpAliImagea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImagea.setStatus('current')
setDhcpAliImages = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 10, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImages.setStatus('current')
setDhcpAliImagef = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImagef.setStatus('current')
setDhcpAddTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 21), )
if mibBuilder.loadTexts: setDhcpAddTable.setStatus('current')
setDhcpAddEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 21, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDhcpAddOptionn"), (0, "LANCOM-L310-MIB", "setDhcpAddNetwork"))
if mibBuilder.loadTexts: setDhcpAddEntry.setStatus('current')
setDhcpAddOptionn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptionn.setStatus('current')
setDhcpAddNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddNetwork.setStatus('current')
setDhcpAddOptionv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 21, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptionv.setStatus('current')
setDhcpUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 10, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpUse.setStatus('current')
setDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17))
setDnsOper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsOper.setStatus('current')
setDnsDoma = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDoma.setStatus('current')
setDnsSubdTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 13), )
if mibBuilder.loadTexts: setDnsSubdTable.setStatus('current')
setDnsSubdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 13, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDnsSubdNet"))
if mibBuilder.loadTexts: setDnsSubdEntry.setStatus('current')
setDnsSubdNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsSubdNet.setStatus('current')
setDnsSubdSub = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsSubdSub.setStatus('current')
setDnsReso = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsReso.setStatus('current')
setDnsDhcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDhcp.setStatus('current')
setDnsNetb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsNetb.setStatus('current')
setDnsDnslTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 5), )
if mibBuilder.loadTexts: setDnsDnslTable.setStatus('current')
setDnsDnslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDnsDnslHos"))
if mibBuilder.loadTexts: setDnsDnslEntry.setStatus('current')
setDnsDnslHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnslHos.setStatus('current')
setDnsDnslIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnslIpa.setStatus('current')
setDnsFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 6), )
if mibBuilder.loadTexts: setDnsFiltTable.setStatus('current')
setDnsFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDnsFiltIdx"))
if mibBuilder.loadTexts: setDnsFiltEntry.setStatus('current')
setDnsFiltIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltIdx.setStatus('current')
setDnsFiltDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltDom.setStatus('current')
setDnsFiltIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltIpa.setStatus('current')
setDnsFiltNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltNet.setStatus('current')
setDnsDyndTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 8), )
if mibBuilder.loadTexts: setDnsDyndTable.setStatus('current')
setDnsDyndEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 8, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDnsDyndHos"))
if mibBuilder.loadTexts: setDnsDyndEntry.setStatus('current')
setDnsDyndHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndHos.setStatus('current')
setDnsDyndIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndIpa.setStatus('current')
setDnsDyndTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndTim.setStatus('current')
setDnsDnsdTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 9), )
if mibBuilder.loadTexts: setDnsDnsdTable.setStatus('current')
setDnsDnsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 9, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDnsDnsdDom"))
if mibBuilder.loadTexts: setDnsDnsdEntry.setStatus('current')
setDnsDnsdDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnsdDom.setStatus('current')
setDnsDnsdDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnsdDes.setStatus('current')
setDnsLeas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsLeas.setStatus('current')
setDnsServTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 10), )
if mibBuilder.loadTexts: setDnsServTable.setStatus('current')
setDnsServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDnsServSer"))
if mibBuilder.loadTexts: setDnsServEntry.setStatus('current')
setDnsServSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServSer.setStatus('current')
setDnsServHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServHos.setStatus('current')
setDnsServPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServPor.setStatus('current')
setDnsDynaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 11), )
if mibBuilder.loadTexts: setDnsDynaTable.setStatus('current')
setDnsDynaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setDnsDynaSer"))
if mibBuilder.loadTexts: setDnsDynaEntry.setStatus('current')
setDnsDynaSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaSer.setStatus('current')
setDnsDynaHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaHos.setStatus('current')
setDnsDynaPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 17, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaPor.setStatus('current')
setLanbr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20))
setLanbrIso = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrIso.setStatus('current')
setLanbrPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 11), )
if mibBuilder.loadTexts: setLanbrPorTable.setStatus('current')
setLanbrPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setLanbrPorPor"))
if mibBuilder.loadTexts: setLanbrPorEntry.setStatus('current')
setLanbrPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanbrPorPor.setStatus('current')
setLanbrPorAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrPorAct.setStatus('current')
setLanbrPorBri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("brg-1", 0), ("brg-2", 1), ("brg-3", 2), ("brg-4", 3), ("brg-5", 4), ("brg-6", 5), ("brg-7", 6), ("brg-8", 7), ("none", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrPorBri.setStatus('current')
setLanbrPorDhc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrPorDhc.setStatus('current')
setLanbrPorPoi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("force-true", 1), ("force-false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrPorPoi.setStatus('current')
setLanbrAgi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrAgi.setStatus('current')
setLanbrEncTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 4), )
if mibBuilder.loadTexts: setLanbrEncTable.setStatus('current')
setLanbrEncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setLanbrEncPro"))
if mibBuilder.loadTexts: setLanbrEncEntry.setStatus('current')
setLanbrEncPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrEncPro.setStatus('current')
setLanbrEncEnc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("eth-ii", 0), ("snap", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrEncEnc.setStatus('current')
setLanbrProTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10), )
if mibBuilder.loadTexts: setLanbrProTable.setStatus('current')
setLanbrProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setLanbrProName"))
if mibBuilder.loadTexts: setLanbrProEntry.setStatus('current')
setLanbrProName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProName.setStatus('current')
setLanbrProDhcpsr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("irrelevant", 0), ("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProDhcpsr.setStatus('current')
setLanbrProDestma = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 9), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProDestma.setStatus('current')
setLanbrProProtoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProProtoc.setStatus('current')
setLanbrProIpnetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProIpnetw.setStatus('current')
setLanbrProIpnetm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProIpnetm.setStatus('current')
setLanbrProSubpro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProSubpro.setStatus('current')
setLanbrProPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProPort.setStatus('current')
setLanbrProPorten = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProPorten.setStatus('current')
setLanbrProIfclis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProIfclis.setStatus('current')
setLanbrProAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("drop", 0), ("pass", 1), ("redirect", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProAction.setStatus('current')
setLanbrProRedire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 10, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProRedire.setStatus('current')
setLanbrSpa = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20))
setLanbrSpaOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaOpe.setStatus('current')
setLanbrSpaPro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPro.setStatus('current')
setLanbrSpaPat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPat.setStatus('current')
setLanbrSpaBri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaBri.setStatus('current')
setLanbrSpaPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 11), )
if mibBuilder.loadTexts: setLanbrSpaPorTable.setStatus('current')
setLanbrSpaPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setLanbrSpaPorPor"))
if mibBuilder.loadTexts: setLanbrSpaPorEntry.setStatus('current')
setLanbrSpaPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanbrSpaPorPor.setStatus('current')
setLanbrSpaPorPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPorPri.setStatus('current')
setLanbrSpaPorEdg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPorEdg.setStatus('current')
setLanbrSpaPorPat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPorPat.setStatus('current')
setLanbrSpaMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaMax.setStatus('current')
setLanbrSpaHel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaHel.setStatus('current')
setLanbrSpaFor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaFor.setStatus('current')
setLanbrSpaTra = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 20, 20, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaTra.setStatus('current')
setHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21))
setHttpDoc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpDoc.setStatus('current')
setHttpUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpUse.setStatus('current')
setHttpFon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpFon.setStatus('current')
setHttpPag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("images", 0), ("texts", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpPag.setStatus('current')
setHttpErr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("nifty", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpErr.setStatus('current')
setHttpPor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpPor.setStatus('current')
setHttpSsl = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpSsl.setStatus('current')
setHttpMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpMax.setStatus('current')
setHttpTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpTun.setStatus('current')
setHttpRol = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20))
setHttpRolOperating = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolOperating.setStatus('current')
setHttpRolTitle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolTitle.setStatus('current')
setHttpRolVariablesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3), )
if mibBuilder.loadTexts: setHttpRolVariablesTable.setStatus('current')
setHttpRolVariablesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setHttpRolVariablesInd"))
if mibBuilder.loadTexts: setHttpRolVariablesEntry.setStatus('current')
setHttpRolVariablesInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesInd.setStatus('current')
setHttpRolVariablesIde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesIde.setStatus('current')
setHttpRolVariablesTit = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesTit.setStatus('current')
setHttpRolVariablesTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("label", 0), ("integer", 1), ("string", 2), ("password", 3), ("checkmark", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesTyp.setStatus('current')
setHttpRolVariablesMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesMin.setStatus('current')
setHttpRolVariablesMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesMax.setStatus('current')
setHttpRolVariablesDef = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesDef.setStatus('current')
setHttpRolRenumberv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolRenumberv.setStatus('current')
setHttpRolActionsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 4), )
if mibBuilder.loadTexts: setHttpRolActionsTable.setStatus('current')
setHttpRolActionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setHttpRolActionsInd"))
if mibBuilder.loadTexts: setHttpRolActionsEntry.setStatus('current')
setHttpRolActionsInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsInd.setStatus('current')
setHttpRolActionsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsAct.setStatus('current')
setHttpRolRenumbera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 21, 20, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolRenumbera.setStatus('current')
setSyslo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22))
setSysloOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloOpe.setStatus('current')
setSysloSerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 2), )
if mibBuilder.loadTexts: setSysloSerTable.setStatus('current')
setSysloSerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setSysloSerIdx"))
if mibBuilder.loadTexts: setSysloSerEntry.setStatus('current')
setSysloSerIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerIdx.setStatus('current')
setSysloSerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerIpa.setStatus('current')
setSysloSerSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerSou.setStatus('current')
setSysloSerLev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerLev.setStatus('current')
setSysloSerLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerLoo.setStatus('current')
setSysloFacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 3), )
if mibBuilder.loadTexts: setSysloFacTable.setStatus('current')
setSysloFacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setSysloFacSou"))
if mibBuilder.loadTexts: setSysloFacEntry.setStatus('current')
setSysloFacSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("system", 1), ("login", 2), ("systemtime", 4), ("console-login", 8), ("connections", 16), ("accounting", 32), ("administration", 64), ("router", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSysloFacSou.setStatus('current')
setSysloFacFac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloFacFac.setStatus('current')
setSysloPor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 22, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloPor.setStatus('current')
setNetbi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16))
setNetbiOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiOpe.setStatus('current')
setNetbiNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 12), )
if mibBuilder.loadTexts: setNetbiNetTable.setStatus('current')
setNetbiNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 12, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setNetbiNetNet"))
if mibBuilder.loadTexts: setNetbiNetEntry.setStatus('current')
setNetbiNetNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiNetNet.setStatus('current')
setNetbiNetOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiNetOpe.setStatus('current')
setNetbiNetNtd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 12, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiNetNtd.setStatus('current')
setNetbiSco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiSco.setStatus('current')
setNetbiPeeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 4), )
if mibBuilder.loadTexts: setNetbiPeeTable.setStatus('current')
setNetbiPeeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setNetbiPeeNam"))
if mibBuilder.loadTexts: setNetbiPeeEntry.setStatus('current')
setNetbiPeeNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiPeeNam.setStatus('current')
setNetbiPeeTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("workstation", 1), ("router", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiPeeTyp.setStatus('current')
setNetbiGroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5), )
if mibBuilder.loadTexts: setNetbiGroTable.setStatus('current')
setNetbiGroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setNetbiGroGro"), (0, "LANCOM-L310-MIB", "setNetbiGroTyp"), (0, "LANCOM-L310-MIB", "setNetbiGroIpa"), (0, "LANCOM-L310-MIB", "setNetbiGroRtg"))
if mibBuilder.loadTexts: setNetbiGroEntry.setStatus('current')
setNetbiGroGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroGro.setStatus('current')
setNetbiGroTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroTyp.setStatus('current')
setNetbiGroIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroIpa.setStatus('current')
setNetbiGroRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroRtg.setStatus('current')
setNetbiGroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroPee.setStatus('current')
setNetbiGroNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroNet.setStatus('current')
setNetbiGroTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroTim.setStatus('current')
setNetbiGroFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroFla.setStatus('current')
setNetbiHosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6), )
if mibBuilder.loadTexts: setNetbiHosTable.setStatus('current')
setNetbiHosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setNetbiHosNam"), (0, "LANCOM-L310-MIB", "setNetbiHosTyp"), (0, "LANCOM-L310-MIB", "setNetbiHosIpa"), (0, "LANCOM-L310-MIB", "setNetbiHosRtg"))
if mibBuilder.loadTexts: setNetbiHosEntry.setStatus('current')
setNetbiHosNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosNam.setStatus('current')
setNetbiHosTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosTyp.setStatus('current')
setNetbiHosIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosIpa.setStatus('current')
setNetbiHosRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosRtg.setStatus('current')
setNetbiHosPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosPee.setStatus('current')
setNetbiHosNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosNet.setStatus('current')
setNetbiHosTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosTim.setStatus('current')
setNetbiHosFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosFla.setStatus('current')
setNetbiSerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7), )
if mibBuilder.loadTexts: setNetbiSerTable.setStatus('current')
setNetbiSerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setNetbiSerHos"), (0, "LANCOM-L310-MIB", "setNetbiSerGro"), (0, "LANCOM-L310-MIB", "setNetbiSerIpa"), (0, "LANCOM-L310-MIB", "setNetbiSerRtg"))
if mibBuilder.loadTexts: setNetbiSerEntry.setStatus('current')
setNetbiSerHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerHos.setStatus('current')
setNetbiSerGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerGro.setStatus('current')
setNetbiSerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerIpa.setStatus('current')
setNetbiSerRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerRtg.setStatus('current')
setNetbiSerOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerOsv.setStatus('current')
setNetbiSerSmb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerSmb.setStatus('current')
setNetbiSerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerSer.setStatus('current')
setNetbiSerPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerPee.setStatus('current')
setNetbiSerNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerNet.setStatus('current')
setNetbiSerTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerTim.setStatus('current')
setNetbiSerFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 7, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerFla.setStatus('current')
setNetbiBroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13), )
if mibBuilder.loadTexts: setNetbiBroTable.setStatus('current')
setNetbiBroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setNetbiBroBro"), (0, "LANCOM-L310-MIB", "setNetbiBroGro"), (0, "LANCOM-L310-MIB", "setNetbiBroIpa"), (0, "LANCOM-L310-MIB", "setNetbiBroRtg"))
if mibBuilder.loadTexts: setNetbiBroEntry.setStatus('current')
setNetbiBroBro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroBro.setStatus('current')
setNetbiBroGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroGro.setStatus('current')
setNetbiBroIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroIpa.setStatus('current')
setNetbiBroRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroRtg.setStatus('current')
setNetbiBroOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroOsv.setStatus('current')
setNetbiBroSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroSer.setStatus('current')
setNetbiBroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroPee.setStatus('current')
setNetbiBroNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroNet.setStatus('current')
setNetbiBroTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroTim.setStatus('current')
setNetbiBroFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroFla.setStatus('current')
setNetbiWat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("spoof", 1), ("route", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiWat.setStatus('current')
setNetbiUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("pback", 0), ("trig", 1), ("time", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiUpd.setStatus('current')
setNetbiWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiWan.setStatus('current')
setNetbiLea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 16, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiLea.setStatus('current')
setConfi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11))
setConfiPasswor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiPasswor.setStatus('current')
setConfiMaximum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiMaximum.setStatus('current')
setConfiConfiga = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiConfiga.setStatus('current')
setConfiOutband = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiOutband.setStatus('current')
setConfiLoginer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiLoginer.setStatus('current')
setConfiLockmin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiLockmin.setStatus('current')
setConfiLanguag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("english", 1), ("deutsch", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiLanguag.setStatus('current')
setConfiTftpcli = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 13))
setConfiTftpcliConfigadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 13, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliConfigadd.setStatus('current')
setConfiTftpcliConfigfil = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 13, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliConfigfil.setStatus('current')
setConfiTftpcliFirmwarea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 13, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliFirmwarea.setStatus('current')
setConfiTftpcliFirmwaref = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 13, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliFirmwaref.setStatus('current')
setConfiTftpcliScriptadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 13, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliScriptadd.setStatus('current')
setConfiTftpcliScriptfil = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 13, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliScriptfil.setStatus('current')
setConfiTftpcliBytesperh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 13, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliBytesperh.setStatus('current')
setConfiAccesstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15), )
if mibBuilder.loadTexts: setConfiAccesstTable.setStatus('current')
setConfiAccesstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setConfiAccesstIfc"))
if mibBuilder.loadTexts: setConfiAccesstEntry.setStatus('current')
setConfiAccesstIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2), ("wlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiAccesstIfc.setStatus('current')
setConfiAccesstTelnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstTelnet.setStatus('current')
setConfiAccesstTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstTftp.setStatus('current')
setConfiAccesstHttp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstHttp.setStatus('current')
setConfiAccesstSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstSnmp.setStatus('current')
setConfiAccesstHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstHttps.setStatus('current')
setConfiAccesstTelnets = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstTelnets.setStatus('current')
setConfiAccesstSsh = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstSsh.setStatus('current')
setConfiScreenh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiScreenh.setStatus('current')
setConfiCrashme = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrashme.setStatus('current')
setConfiAdminge = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("male", 1), ("female", 2), ("geek", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminge.setStatus('current')
setConfiAsserta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("log-only", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAsserta.setStatus('current')
setConfiPrompt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiPrompt.setStatus('current')
setConfiLedtest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 1, 3, 255))).clone(namedValues=NamedValues(("off", 0), ("green", 2), ("red", 1), ("orange", 3), ("no-test", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiLedtest.setStatus('current')
setConfiCrontabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20), )
if mibBuilder.loadTexts: setConfiCrontabTable.setStatus('current')
setConfiCrontabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setConfiCrontabInde"))
if mibBuilder.loadTexts: setConfiCrontabEntry.setStatus('current')
setConfiCrontabInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabInde.setStatus('current')
setConfiCrontabActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabActi.setStatus('current')
setConfiCrontabBase = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("real-time", 0), ("operation-time", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabBase.setStatus('current')
setConfiCrontabVari = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabVari.setStatus('current')
setConfiCrontabMinu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabMinu.setStatus('current')
setConfiCrontabHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabHour.setStatus('current')
setConfiCrontabDayo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabDayo.setStatus('current')
setConfiCrontabDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabDay.setStatus('current')
setConfiCrontabMont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabMont.setStatus('current')
setConfiCrontabComm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabComm.setStatus('current')
setConfiCrontabOwne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 20, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabOwne.setStatus('current')
setConfiAdminsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 21), )
if mibBuilder.loadTexts: setConfiAdminsTable.setStatus('current')
setConfiAdminsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 21, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setConfiAdminsAdm"))
if mibBuilder.loadTexts: setConfiAdminsEntry.setStatus('current')
setConfiAdminsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsAdm.setStatus('current')
setConfiAdminsPas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsPas.setStatus('current')
setConfiAdminsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsAct.setStatus('current')
setConfiAdminsAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8388608, 16777216, 16777472, -1))).clone(namedValues=NamedValues(("none", 0), ("admin-ro-limit", 8388608), ("admin-ro", 16777216), ("admin-rw", 16777472), ("supervisor", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsAcc.setStatus('current')
setConfiAdminsFun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 21, 1, 3), Bits().clone(namedValues=NamedValues(("basic-wizard", 1), ("security-wizard", 2), ("internet-wizard", 4), ("ras-wizard", 16), ("provider-selection", 8), ("lanlan-wizard", 32), ("time-setting", 64), ("device-search", 128), ("wlan-linktest", 256), ("rollout-wizard", 8192), ("wlan-wizard", 4096)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsFun.setStatus('current')
setConfiLan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 1), Integer32())
if mibBuilder.loadTexts: setConfiLan.setStatus('current')
setConfiWlancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 11), Integer32())
if mibBuilder.loadTexts: setConfiWlancon.setStatus('current')
setConfiWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 2), Integer32())
if mibBuilder.loadTexts: setConfiWan.setStatus('current')
setConfiTelnetp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTelnetp.setStatus('current')
setConfiTelnets = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTelnets.setStatus('current')
setConfiResetbu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ignore", 0), ("boot-only", 1), ("reset-or-boot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiResetbu.setStatus('current')
setConfiMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 35))
setConfiMonitorTracemask1 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 35, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiMonitorTracemask1.setStatus('current')
setConfiMonitorTracemask2 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 35, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiMonitorTracemask2.setStatus('current')
setConfiUpdatec = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30))
setConfiUpdatecOperati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecOperati.setStatus('current')
setConfiUpdatecServern = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecServern.setStatus('current')
setConfiUpdatecServerp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecServerp.setStatus('current')
setConfiUpdatecRespons = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecRespons.setStatus('current')
setConfiUpdatecRetryfa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecRetryfa.setStatus('current')
setConfiUpdatecRetryok = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecRetryok.setStatus('current')
setConfiUpdatecLastfir = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiUpdatecLastfir.setStatus('current')
setConfiUpdatecLastcon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 30, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiUpdatecLastcon.setStatus('current')
setConfiSshport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiSshport.setStatus('current')
setConfiSshauthTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 26), )
if mibBuilder.loadTexts: setConfiSshauthTable.setStatus('current')
setConfiSshauthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 26, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setConfiSshauthIfc"))
if mibBuilder.loadTexts: setConfiSshauthEntry.setStatus('current')
setConfiSshauthIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 26, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2), ("wlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiSshauthIfc.setStatus('current')
setConfiSshauthMet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 11, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("public-key", 1), ("password", 2), ("all", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiSshauthMet.setStatus('current')
setWlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12))
setWlanBrokenlink = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanBrokenlink.setStatus('current')
setWlanSpareheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSpareheap.setStatus('current')
setWlanIappprotoc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIappprotoc.setStatus('current')
setWlanIappannoun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIappannoun.setStatus('current')
setWlanIapphandov = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIapphandov.setStatus('current')
setWlanCountry = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 32, 36, 40, 48, 50, 112, 56, 70, 76, 96, 100, 124, 152, 156, 170, 188, 191, 196, 203, 208, 218, 999, 818, 233, 246, 250, 276, 288, 300, 320, 340, 344, 348, 352, 356, 360, 372, 376, 380, 392, 400, 410, 414, 428, 422, 438, 440, 442, 446, 807, 458, 470, 484, 498, 504, 528, 554, 558, 578, 512, 586, 591, 600, 604, 608, 616, 620, 630, 634, 642, 643, 682, 702, 703, 705, 710, 724, 752, 756, 158, 834, 764, 788, 792, 800, 804, 784, 826, 840, 858, 862))).clone(namedValues=NamedValues(("unknown", 0), ("albania", 8), ("argentina", 32), ("australia", 36), ("austria", 40), ("bahrain", 48), ("bangladesh", 50), ("belarus", 112), ("belgium", 56), ("bosnia-herzegovina", 70), ("brazil", 76), ("brunei-darussalam", 96), ("bulgaria", 100), ("canada", 124), ("chile", 152), ("china", 156), ("colombia", 170), ("costa-rica", 188), ("croatia", 191), ("cyprus", 196), ("czech", 203), ("denmark", 208), ("ecuador", 218), ("egalistan", 999), ("egypt", 818), ("estonia", 233), ("finland", 246), ("france", 250), ("germany", 276), ("ghana", 288), ("greece", 300), ("guatemala", 320), ("honduras", 340), ("hong-kong", 344), ("hungary", 348), ("iceland", 352), ("india", 356), ("indonesia", 360), ("ireland", 372), ("israel", 376), ("italy", 380), ("japan", 392), ("jordan", 400), ("south-korea", 410), ("kuwait", 414), ("latvia", 428), ("lebanon", 422), ("liechtenstein", 438), ("lithuania", 440), ("luxembourg", 442), ("macau", 446), ("macedonia", 807), ("malaysia", 458), ("malta", 470), ("mexico", 484), ("moldavia", 498), ("morocco", 504), ("netherlands", 528), ("new-zealand", 554), ("nicaragua", 558), ("norway", 578), ("oman", 512), ("pakistan", 586), ("panama", 591), ("paraguay", 600), ("peru", 604), ("philippines", 608), ("poland", 616), ("portugal", 620), ("puerto-rico", 630), ("qatar", 634), ("romania", 642), ("russia", 643), ("saudi-arabia", 682), ("singapore", 702), ("slovak", 703), ("slovenia", 705), ("south-africa", 710), ("spain", 724), ("sweden", 752), ("switzerland", 756), ("taiwan", 158), ("tanzania", 834), ("thailand", 764), ("tunisia", 788), ("turkey", 792), ("uganda", 800), ("ukraine", 804), ("united-arab-emirates", 784), ("united-kingdom", 826), ("united-states-fcc", 840), ("uruguay", 858), ("venezuela", 862)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanCountry.setStatus('current')
setWlanIndooronly = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIndooronly.setStatus('current')
setWlanMailaddres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanMailaddres.setStatus('current')
setWlanCardreinit = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 100), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanCardreinit.setStatus('current')
setWlanNoisecalib = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 101), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoisecalib.setStatus('current')
setWlanNoiseoffseTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 109), )
if mibBuilder.loadTexts: setWlanNoiseoffseTable.setStatus('current')
setWlanNoiseoffseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 109, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWlanNoiseoffseBan"), (0, "LANCOM-L310-MIB", "setWlanNoiseoffseCha"), (0, "LANCOM-L310-MIB", "setWlanNoiseoffseInt"))
if mibBuilder.loadTexts: setWlanNoiseoffseEntry.setStatus('current')
setWlanNoiseoffseBan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 109, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e2-4ghz", 1), ("e5ghz", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseoffseBan.setStatus('current')
setWlanNoiseoffseCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 109, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseoffseCha.setStatus('current')
setWlanNoiseoffseInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 109, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseoffseInt.setStatus('current')
setWlanNoiseoffseVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 109, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseoffseVal.setStatus('current')
setWlanThermrecal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 105), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanThermrecal.setStatus('current')
setWlanTracemac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 103), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanTracemac.setStatus('current')
setWlanTracelevel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 110), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanTracelevel.setStatus('current')
setWlanNoiseimmun = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 111))
setWlanNoiseimmunNoi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 111, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunNoi.setStatus('current')
setWlanNoiseimmunOfd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 111, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunOfd.setStatus('current')
setWlanNoiseimmunCck = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 111, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunCck.setStatus('current')
setWlanNoiseimmunFir = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 111, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunFir.setStatus('current')
setWlanNoiseimmunSpu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 111, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunSpu.setStatus('current')
setWlanInterstati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("yes", 1), ("locally-off", 0), ("gserverlly-off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanInterstati.setStatus('current')
setWlanIdletimeou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIdletimeou.setStatus('current')
setWlanSupervises = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSupervises.setStatus('current')
setWlanArphandlin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanArphandlin.setStatus('current')
setWlanAllowilleg = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAllowilleg.setStatus('current')
setWlanAccesslistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7), )
if mibBuilder.loadTexts: setWlanAccesslistTable.setStatus('current')
setWlanAccesslistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWlanAccesslistMac"))
if mibBuilder.loadTexts: setWlanAccesslistEntry.setStatus('current')
setWlanAccesslistMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7, 1, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistMac.setStatus('current')
setWlanAccesslistNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistNam.setStatus('current')
setWlanAccesslistWpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistWpa.setStatus('current')
setWlanAccesslistTxl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistTxl.setStatus('current')
setWlanAccesslistRxl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistRxl.setStatus('current')
setWlanAccesslistVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistVla.setStatus('current')
setWlanAccesslistCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistCom.setStatus('current')
setWlanAccessmode = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("negative", 0), ("positive", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccessmode.setStatus('current')
setWlanRadiusacce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29))
setWlanRadiusacceServeradd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceServeradd.setStatus('current')
setWlanRadiusacceAuthport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceAuthport.setStatus('current')
setWlanRadiusacceSecret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceSecret.setStatus('current')
setWlanRadiusacceLoopbacka = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceLoopbacka.setStatus('current')
setWlanRadiusacceProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceProtocol.setStatus('current')
setWlanRadiusacceBackupser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackupser.setStatus('current')
setWlanRadiusacceBackupaut = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackupaut.setStatus('current')
setWlanRadiusacceBackupsec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackupsec.setStatus('current')
setWlanRadiusacceBackuploo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackuploo.setStatus('current')
setWlanRadiusacceBackuppro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackuppro.setStatus('current')
setWlanRadiusacceResponsel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceResponsel.setStatus('current')
setWlanRadiusaccePasswords = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("secret", 0), ("mac-address", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccePasswords.setStatus('current')
setWlanRadiusacceRecheckcy = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceRecheckcy.setStatus('current')
setWlanRadiusacceProvidese = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 29, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceProvidese.setStatus('current')
setWlanRadiusacco = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45))
setWlanRadiusaccoServeradd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoServeradd.setStatus('current')
setWlanRadiusaccoAccntport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoAccntport.setStatus('current')
setWlanRadiusaccoSecret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoSecret.setStatus('current')
setWlanRadiusaccoLoopbacka = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoLoopbacka.setStatus('current')
setWlanRadiusaccoProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoProtocol.setStatus('current')
setWlanRadiusaccoBackupser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackupser.setStatus('current')
setWlanRadiusaccoBackupacc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackupacc.setStatus('current')
setWlanRadiusaccoBackupsec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackupsec.setStatus('current')
setWlanRadiusaccoBackuploo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackuploo.setStatus('current')
setWlanRadiusaccoBackuppro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackuppro.setStatus('current')
setWlanRadiusaccoClientbrg = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("all-traffic", 0), ("bridge-traffic-only", 1), ("client-traffic-only", 2), ("separate-accounting", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoClientbrg.setStatus('current')
setWlanRadiusaccoInterimup = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoInterimup.setStatus('current')
setWlanRadiusaccoExcludedv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 45, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoExcludedv.setStatus('current')
setWlanRadarpatteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 107), )
if mibBuilder.loadTexts: setWlanRadarpatteTable.setStatus('current')
setWlanRadarpatteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 107, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWlanRadarpattePat"))
if mibBuilder.loadTexts: setWlanRadarpatteEntry.setStatus('current')
setWlanRadarpattePat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 107, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadarpattePat.setStatus('current')
setWlanRadarpatteThr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 107, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadarpatteThr.setStatus('current')
setWlanRadarloadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 108), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadarloadt.setStatus('current')
setWlanSignalaver = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50))
setWlanSignalaverMet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("filtered", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSignalaverMet.setStatus('current')
setWlanSignalaverSta = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 2))
setWlanSignalaverStaFac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSignalaverStaFac.setStatus('current')
setWlanSignalaverFil = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 3))
setWlanSignalaverFilCt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSignalaverFilCt.setStatus('current')
setWlanSignalaverFilCoeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 3, 2), )
if mibBuilder.loadTexts: setWlanSignalaverFilCoeTable.setStatus('current')
setWlanSignalaverFilCoeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 3, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWlanSignalaverFilCoeInd"))
if mibBuilder.loadTexts: setWlanSignalaverFilCoeEntry.setStatus('current')
setWlanSignalaverFilCoeInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWlanSignalaverFilCoeInd.setStatus('current')
setWlanSignalaverFilCoeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 12, 50, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSignalaverFilCoeVal.setStatus('current')
setLcr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15))
setLcrRou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrRou.setStatus('current')
setLcrTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4), )
if mibBuilder.loadTexts: setLcrTimTable.setStatus('current')
setLcrTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setLcrTimInd"))
if mibBuilder.loadTexts: setLcrTimEntry.setStatus('current')
setLcrTimInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimInd.setStatus('current')
setLcrTimPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimPre.setStatus('current')
setLcrTimDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4, 1, 3), Bits().clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 4), ("thursday", 8), ("friday", 16), ("saturday", 32), ("sunday", 64), ("holiday", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimDay.setStatus('current')
setLcrTimSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimSta.setStatus('current')
setLcrTimSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimSto.setStatus('current')
setLcrTimNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimNum.setStatus('current')
setLcrTimFal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimFal.setStatus('current')
setLcrHolTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 5), )
if mibBuilder.loadTexts: setLcrHolTable.setStatus('current')
setLcrHolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setLcrHolInd"))
if mibBuilder.loadTexts: setLcrHolEntry.setStatus('current')
setLcrHolInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrHolInd.setStatus('current')
setLcrHolDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 15, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrHolDat.setStatus('current')
setTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14))
setTimeFet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("none", 0), ("ntp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeFet.setStatus('current')
setTimeCur = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeCur.setStatus('current')
setTimeUtc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeUtc.setStatus('current')
setTimeTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244))).clone(namedValues=NamedValues(("e0", 0), ("plus-1", 1), ("plus-2", 2), ("plus-3", 3), ("plus-4", 4), ("plus-5", 5), ("plus-6", 6), ("plus-7", 7), ("plus-8", 8), ("plus-9", 9), ("plus-10", 10), ("plus-11", 11), ("plus-12", 12), ("plus-13", 13), ("plus-14", 14), ("minus-1", 255), ("minus-2", 254), ("minus-3", 253), ("minus-4", 252), ("minus-5", 251), ("minus-6", 250), ("minus-7", 249), ("minus-8", 248), ("minus-9", 247), ("minus-10", 246), ("minus-11", 245), ("minus-12", 244)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeTim.setStatus('current')
setTimeDay = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("europe-eu", 2), ("russia", 3), ("usa", 4), ("user-defined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDay.setStatus('current')
setTimeDstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12), )
if mibBuilder.loadTexts: setTimeDstTable.setStatus('current')
setTimeDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setTimeDstEve"))
if mibBuilder.loadTexts: setTimeDstEntry.setStatus('current')
setTimeDstEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeDstEve.setStatus('current')
setTimeDstInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(252, 253, 254, 255, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e4-last", 252), ("e3-last", 253), ("e2-last", 254), ("last", 255), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstInd.setStatus('current')
setTimeDstDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstDay.setStatus('current')
setTimeDstMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstMon.setStatus('current')
setTimeDstHou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstHou.setStatus('current')
setTimeDstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstMin.setStatus('current')
setTimeDstTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("utc", 1), ("lst", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstTim.setStatus('current')
setTimeGet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 14, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeGet.setStatus('current')
setInter = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23))
setInterMod = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40))
setInterModRingcou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModRingcou.setStatus('current')
setInterModEchooff = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModEchooff.setStatus('current')
setInterModResetco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModResetco.setStatus('current')
setInterModInitcom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModInitcom.setStatus('current')
setInterModRequest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModRequest.setStatus('current')
setInterModInitdia = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModInitdia.setStatus('current')
setInterModDialcom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModDialcom.setStatus('current')
setInterModInitans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModInitans.setStatus('current')
setInterModAnswerc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModAnswerc.setStatus('current')
setInterModDisconn = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModDisconn.setStatus('current')
setInterModEscapes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModEscapes.setStatus('current')
setInterModEscapep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModEscapep.setStatus('current')
setInterModCycleti = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModCycleti.setStatus('current')
setInterModAtpollc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 40, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModAtpollc.setStatus('current')
setInterWla = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20))
setInterWlaOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 7), )
if mibBuilder.loadTexts: setInterWlaOperationalTable.setStatus('current')
setInterWlaOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaOperationalIfc"))
if mibBuilder.loadTexts: setInterWlaOperationalEntry.setStatus('current')
setInterWlaOperationalIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaOperationalIfc.setStatus('current')
setInterWlaOperationalOperatin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaOperationalOperatin.setStatus('current')
setInterWlaOperationalOperatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("access-point", 1), ("managed-ap", 4), ("station", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaOperationalOperatio.setStatus('current')
setInterWlaOperationalLinkledf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("normal", 0), ("client-mode-strength", 1), ("p2p-1-strength", 8), ("p2p-2-strength", 9), ("p2p-3-strength", 10), ("p2p-4-strength", 11), ("p2p-5-strength", 12), ("p2p-6-strength", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaOperationalLinkledf.setStatus('current')
setInterWlaNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1), )
if mibBuilder.loadTexts: setInterWlaNetworkTable.setStatus('current')
setInterWlaNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaNetworkIfc"))
if mibBuilder.loadTexts: setInterWlaNetworkEntry.setStatus('current')
setInterWlaNetworkIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("wlan-1", 1), ("wlan-1-2", 16), ("wlan-1-3", 17), ("wlan-1-4", 18), ("wlan-1-5", 19), ("wlan-1-6", 20), ("wlan-1-7", 21), ("wlan-1-8", 22)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkIfc.setStatus('current')
setInterWlaNetworkOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkOpe.setStatus('current')
setInterWlaNetworkNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkNet.setStatus('current')
setInterWlaNetworkMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkMac.setStatus('current')
setInterWlaNetworkRad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkRad.setStatus('current')
setInterWlaNetworkClo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkClo.setStatus('current')
setInterWlaNetworkMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkMax.setStatus('current')
setInterWlaNetworkClb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkClb.setStatus('current')
setInterWlaRadiosettinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8), )
if mibBuilder.loadTexts: setInterWlaRadiosettinTable.setStatus('current')
setInterWlaRadiosettinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaRadiosettinIfc"))
if mibBuilder.loadTexts: setInterWlaRadiosettinEntry.setStatus('current')
setInterWlaRadiosettinIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinIfc.setStatus('current')
setInterWlaRadiosettinRadioband = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e2-4ghz", 1), ("e5ghz", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinRadioband.setStatus('current')
setInterWlaRadiosettinSubbands = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 3, 5, 6, 7))).clone(namedValues=NamedValues(("band-1", 1), ("band-2", 2), ("band-3", 4), ("band-1-plus-2", 3), ("band-1-plus-3", 5), ("band-2-plus-3", 6), ("band-1-plus-2-plus-3", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinSubbands.setStatus('current')
setInterWlaRadiosettinRadiochannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinRadiochannel.setStatus('current')
setInterWlaRadiosettinChannellist = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinChannellist.setStatus('current')
setInterWlaRadiosettin24ghzmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 6, 7, 8))).clone(namedValues=NamedValues(("e11bg-mixed", 0), ("e11g-only", 1), ("e11b-only", 2), ("e2m-mixed", 3), ("e11bgn-mixed", 5), ("e2m-11bgn-mixed", 6), ("e11gn-mixed", 7), ("greenfield", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettin24ghzmode.setStatus('current')
setInterWlaRadiosettin5ghzmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 4))).clone(namedValues=NamedValues(("normal", 0), ("e11an-mixed", 3), ("greenfield", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettin5ghzmode.setStatus('current')
setInterWlaRadiosettinAllow40mhz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinAllow40mhz.setStatus('current')
setInterWlaRadiosettinAntennamask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 5, 7))).clone(namedValues=NamedValues(("auto", 0), ("antenna-1", 1), ("antenna-1-plus-2", 3), ("antenna-1-plus-3", 5), ("antenna-1-plus-2-plus-3", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinAntennamask.setStatus('current')
setInterWlaRadiosettinAntennagain = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinAntennagain.setStatus('current')
setInterWlaRadiosettinTxpowerreductio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinTxpowerreductio.setStatus('current')
setInterWlaRadiosettinMaximumdistance = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinMaximumdistance.setStatus('current')
setInterWlaRadiosettinApdensity = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("low", 1), ("medium", 2), ("high", 3), ("minicell", 4), ("microcell", 5), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinApdensity.setStatus('current')
setInterWlaRadiosettinBackgroundscan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinBackgroundscan.setStatus('current')
setInterWlaRadiosettinBackgroundscanu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("seconds", 0), ("milliseconds", 1), ("microseconds", 2), ("minutes", 3), ("hours", 4), ("days", 5), ("weeks", 6), ("fortnights", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinBackgroundscanu.setStatus('current')
setInterWlaRadiosettinDfsrescanhours = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 8, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinDfsrescanhours.setStatus('current')
setInterWlaTransmissioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2), )
if mibBuilder.loadTexts: setInterWlaTransmissioTable.setStatus('current')
setInterWlaTransmissioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaTransmissioIfc"))
if mibBuilder.loadTexts: setInterWlaTransmissioEntry.setStatus('current')
setInterWlaTransmissioIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("wlan-1", 1), ("wlan-1-2", 16), ("wlan-1-3", 17), ("wlan-1-4", 18), ("wlan-1-5", 19), ("wlan-1-6", 20), ("wlan-1-7", 21), ("wlan-1-8", 22)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioIfc.setStatus('current')
setInterWlaTransmissioPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioPack.setStatus('current')
setInterWlaTransmissioMint = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("auto", 0), ("e1m", 1), ("e2m", 2), ("e5-5m", 4), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMint.setStatus('current')
setInterWlaTransmissioMaxt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("auto", 0), ("e1m", 1), ("e2m", 2), ("e5-5m", 4), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMaxt.setStatus('current')
setInterWlaTransmissioBasi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("e1m", 1), ("e2m", 2), ("e5-5m", 4), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioBasi.setStatus('current')
setInterWlaTransmissioHard = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioHard.setStatus('current')
setInterWlaTransmissioSoft = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioSoft.setStatus('current')
setInterWlaTransmissio11bp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("long", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissio11bp.setStatus('current')
setInterWlaTransmissioMinh = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("auto", 0), ("mcs-0-8", 1), ("mcs-1-9", 2), ("mcs-2-10", 3), ("mcs-3-11", 4), ("mcs-4-12", 5), ("mcs-5-13", 6), ("mcs-6-14", 7), ("mcs-7-15", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMinh.setStatus('current')
setInterWlaTransmissioMaxh = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("auto", 0), ("mcs-0-8", 1), ("mcs-1-9", 2), ("mcs-2-10", 3), ("mcs-3-11", 4), ("mcs-4-12", 5), ("mcs-5-13", 6), ("mcs-6-14", 7), ("mcs-7-15", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMaxh.setStatus('current')
setInterWlaTransmissioShor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioShor.setStatus('current')
setInterWlaTransmissioMaxs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("one", 1), ("two", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMaxs.setStatus('current')
setInterWlaTransmissioSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioSend.setStatus('current')
setInterWlaTransmissioRtst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioRtst.setStatus('current')
setInterWlaTransmissioMinf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMinf.setStatus('current')
setInterWlaPerformanceTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 9), )
if mibBuilder.loadTexts: setInterWlaPerformanceTable.setStatus('current')
setInterWlaPerformanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 9, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaPerformanceIfc"))
if mibBuilder.loadTexts: setInterWlaPerformanceEntry.setStatus('current')
setInterWlaPerformanceIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaPerformanceIfc.setStatus('current')
setInterWlaPerformanceQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaPerformanceQos.setStatus('current')
setInterWlaPerformanceTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaPerformanceTxb.setStatus('current')
setInterWlaEncryptionTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3), )
if mibBuilder.loadTexts: setInterWlaEncryptionTable.setStatus('current')
setInterWlaEncryptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaEncryptionIfc"))
if mibBuilder.loadTexts: setInterWlaEncryptionEntry.setStatus('current')
setInterWlaEncryptionIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("wlan-1", 1), ("wlan-1-2", 16), ("wlan-1-3", 17), ("wlan-1-4", 18), ("wlan-1-5", 19), ("wlan-1-6", 20), ("wlan-1-7", 21), ("wlan-1-8", 22)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionIfc.setStatus('current')
setInterWlaEncryptionEncr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionEncr.setStatus('current')
setInterWlaEncryptionDefa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionDefa.setStatus('current')
setInterWlaEncryptionMeth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(32, 16, 13, 5, 33, 36, 35, 34))).clone(namedValues=NamedValues(("e802-11i-wpa-psk", 32), ("wep-128-bits", 16), ("wep-104-bits", 13), ("wep-40-bits", 5), ("e802-11i-wpa-802-1x", 33), ("wep-128-bits-802-1x", 36), ("wep-104-bits-802-1x", 35), ("wep-40-bits-802-1x", 34)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionMeth.setStatus('current')
setInterWlaEncryptionKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionKey.setStatus('current')
setInterWlaEncryptionWpav = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 6))).clone(namedValues=NamedValues(("wpa1", 2), ("wpa2", 4), ("wpa1-2", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionWpav.setStatus('current')
setInterWlaEncryptionWpa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tkip", 1), ("aes", 2), ("tkip-aes", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionWpa1.setStatus('current')
setInterWlaEncryptionWpa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tkip", 1), ("aes", 2), ("tkip-aes", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionWpa2.setStatus('current')
setInterWlaEncryptionWpar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionWpar.setStatus('current')
setInterWlaEncryptionClie = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3328, 5383, 5384, 5567, 5402, 5380, 6426, 6406))).clone(namedValues=NamedValues(("tls", 3328), ("ttls-pap", 5383), ("ttls-chap", 5384), ("ttls-mschap", 5567), ("ttls-mschapv2", 5402), ("ttls-md5", 5380), ("peap-mschapv2", 6426), ("peap-gtc", 6406)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionClie.setStatus('current')
setInterWlaEncryptionAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open-system", 0), ("shared-key", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionAuth.setStatus('current')
setInterWlaGroupencrypTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4), )
if mibBuilder.loadTexts: setInterWlaGroupencrypTable.setStatus('current')
setInterWlaGroupencrypEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaGroupencrypIfc"))
if mibBuilder.loadTexts: setInterWlaGroupencrypEntry.setStatus('current')
setInterWlaGroupencrypIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypIfc.setStatus('current')
setInterWlaGroupencrypKeytype2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 13, 16))).clone(namedValues=NamedValues(("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype2.setStatus('current')
setInterWlaGroupencrypKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKey2.setStatus('current')
setInterWlaGroupencrypKeytype3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 13, 16))).clone(namedValues=NamedValues(("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype3.setStatus('current')
setInterWlaGroupencrypKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKey3.setStatus('current')
setInterWlaGroupencrypKeytype4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 13, 16))).clone(namedValues=NamedValues(("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype4.setStatus('current')
setInterWlaGroupencrypKey4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKey4.setStatus('current')
setInterWlaInterpointsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5), )
if mibBuilder.loadTexts: setInterWlaInterpointsTable.setStatus('current')
setInterWlaInterpointsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaInterpointsIfc"))
if mibBuilder.loadTexts: setInterWlaInterpointsEntry.setStatus('current')
setInterWlaInterpointsIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsIfc.setStatus('current')
setInterWlaInterpointsEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsEna.setStatus('current')
setInterWlaInterpointsLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsLoc.setStatus('current')
setInterWlaInterpointsIso = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsIso.setStatus('current')
setInterWlaInterpointsCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsCha.setStatus('current')
setInterWlaInterpointsKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3))).clone(namedValues=NamedValues(("default", 0), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsKey.setStatus('current')
setInterWlaInterpointsLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsLin.setStatus('current')
setInterWlaInterpointpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 12), )
if mibBuilder.loadTexts: setInterWlaInterpointpTable.setStatus('current')
setInterWlaInterpointpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 12, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaInterpointpIfc"))
if mibBuilder.loadTexts: setInterWlaInterpointpEntry.setStatus('current')
setInterWlaInterpointpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("p2p-1-1", 1), ("p2p-1-2", 2), ("p2p-1-3", 3), ("p2p-1-4", 4), ("p2p-1-5", 5), ("p2p-1-6", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpIfc.setStatus('current')
setInterWlaInterpointpOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpOpe.setStatus('current')
setInterWlaInterpointpRec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mac-address", 0), ("name", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpRec.setStatus('current')
setInterWlaInterpointpMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 12, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpMac.setStatus('current')
setInterWlaInterpointpPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 12, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpPee.setStatus('current')
setInterWlaBeaconingTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 10), )
if mibBuilder.loadTexts: setInterWlaBeaconingTable.setStatus('current')
setInterWlaBeaconingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 10, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaBeaconingIfc"))
if mibBuilder.loadTexts: setInterWlaBeaconingEntry.setStatus('current')
setInterWlaBeaconingIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaBeaconingIfc.setStatus('current')
setInterWlaBeaconingBeaconp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaBeaconingBeaconp.setStatus('current')
setInterWlaBeaconingDtimper = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaBeaconingDtimper.setStatus('current')
setInterWlaBeaconingBeacono = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cyclic", 0), ("staggered", 1), ("simple-burst", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaBeaconingBeacono.setStatus('current')
setInterWlaClientmodesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6), )
if mibBuilder.loadTexts: setInterWlaClientmodesTable.setStatus('current')
setInterWlaClientmodesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaClientmodesIfc"))
if mibBuilder.loadTexts: setInterWlaClientmodesEntry.setStatus('current')
setInterWlaClientmodesIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesIfc.setStatus('current')
setInterWlaClientmodesCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesCon.setStatus('current')
setInterWlaClientmodesNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4))).clone(namedValues=NamedValues(("infrastructure", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesNet.setStatus('current')
setInterWlaClientmodesSca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesSca.setStatus('current')
setInterWlaClientmodesPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesPre.setStatus('current')
setInterWlaClientmodesAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesAdd.setStatus('current')
setInterWlaClientmodesClb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesClb.setStatus('current')
setInterWlaClientmodesTxl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesTxl.setStatus('current')
setInterWlaClientmodesRxl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesRxl.setStatus('current')
setInterWlaRoamingTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11), )
if mibBuilder.loadTexts: setInterWlaRoamingTable.setStatus('current')
setInterWlaRoamingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterWlaRoamingIfc"))
if mibBuilder.loadTexts: setInterWlaRoamingEntry.setStatus('current')
setInterWlaRoamingIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingIfc.setStatus('current')
setInterWlaRoamingSoftroaming = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingSoftroaming.setStatus('current')
setInterWlaRoamingBeaconmisst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingBeaconmisst.setStatus('current')
setInterWlaRoamingRoamingthre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingRoamingthre.setStatus('current')
setInterWlaRoamingNoroamingth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingNoroamingth.setStatus('current')
setInterWlaRoamingForceroamin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingForceroamin.setStatus('current')
setInterWlaRoamingConnectthre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingConnectthre.setStatus('current')
setInterWlaRoamingConnecthold = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingConnecthold.setStatus('current')
setInterWlaRoamingMinconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingMinconnects.setStatus('current')
setInterWlaRoamingMinconnecth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 20, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingMinconnecth.setStatus('current')
setInterLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 21), )
if mibBuilder.loadTexts: setInterLanTable.setStatus('current')
setInterLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 21, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterLanIfc"))
if mibBuilder.loadTexts: setInterLanEntry.setStatus('current')
setInterLanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("lan-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterLanIfc.setStatus('current')
setInterLanCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("auto", 0), ("e10b-t", 1), ("fd10b-tx", 2), ("e100b-tx", 3), ("fd100b-tx", 4), ("fd1000b-tx", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterLanCon.setStatus('current')
setInterDslTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4), )
if mibBuilder.loadTexts: setInterDslTable.setStatus('current')
setInterDslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterDslIfc"))
if mibBuilder.loadTexts: setInterDslEntry.setStatus('current')
setInterDslIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterDslIfc.setStatus('current')
setInterDslOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("no", 0), ("yes", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslOpe.setStatus('current')
setInterDslMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("exclusive", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslMod.setStatus('current')
setInterDslUps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslUps.setStatus('current')
setInterDslExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslExt.setStatus('current')
setInterDslDow = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslDow.setStatus('current')
setInterDslTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterDslTyp.setStatus('current')
setInterDslLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 4, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 512, 768, 769, 770, 771, 772, 773, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("wlan-1", 512), ("p2p-1-1", 768), ("p2p-1-2", 769), ("p2p-1-3", 770), ("p2p-1-4", 771), ("p2p-1-5", 772), ("p2p-1-6", 773), ("wlan-1-2", 1024), ("wlan-1-3", 1025), ("wlan-1-4", 1026), ("wlan-1-5", 1027), ("wlan-1-6", 1028), ("wlan-1-7", 1029), ("wlan-1-8", 1030), ("brg-1", 1536), ("brg-2", 1537), ("brg-3", 1538), ("brg-4", 1539), ("brg-5", 1540), ("brg-6", 1541), ("brg-7", 1542), ("brg-8", 1543), ("any", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslLan.setStatus('current')
setInterUmtTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 7), )
if mibBuilder.loadTexts: setInterUmtTable.setStatus('current')
setInterUmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setInterUmtIfc"))
if mibBuilder.loadTexts: setInterUmtEntry.setStatus('current')
setInterUmtIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterUmtIfc.setStatus('current')
setInterUmtOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("modem", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterUmtOpe.setStatus('current')
setInterUmtTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 7, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterUmtTyp.setStatus('current')
setInterUmtDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 23, 7, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(19200, 38400, 57600, 115200))).clone(namedValues=NamedValues(("e19200", 19200), ("e38400", 38400), ("e57600", 57600), ("e115200", 115200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterUmtDat.setStatus('current')
setRadiu = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25))
setRadiuAutht = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuAutht.setStatus('current')
setRadiuAuthr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuAuthr.setStatus('current')
setRadiuBacku = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("cyclic", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuBacku.setStatus('current')
setRadiuServe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10))
setRadiuServeAuthentific = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeAuthentific.setStatus('current')
setRadiuServeAccountingp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeAccountingp.setStatus('current')
setRadiuServeRadsecport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeRadsecport.setStatus('current')
setRadiuServeClientsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 2), )
if mibBuilder.loadTexts: setRadiuServeClientsTable.setStatus('current')
setRadiuServeClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setRadiuServeClientsIpnetw"), (0, "LANCOM-L310-MIB", "setRadiuServeClientsIpnetm"))
if mibBuilder.loadTexts: setRadiuServeClientsEntry.setStatus('current')
setRadiuServeClientsIpnetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeClientsIpnetw.setStatus('current')
setRadiuServeClientsIpnetm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeClientsIpnetm.setStatus('current')
setRadiuServeClientsProtoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1), ("all", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeClientsProtoc.setStatus('current')
setRadiuServeClientsSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeClientsSecret.setStatus('current')
setRadiuServeUsersTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 7), )
if mibBuilder.loadTexts: setRadiuServeUsersTable.setStatus('current')
setRadiuServeUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setRadiuServeUsersUse"))
if mibBuilder.loadTexts: setRadiuServeUsersEntry.setStatus('current')
setRadiuServeUsersUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeUsersUse.setStatus('current')
setRadiuServeUsersPas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeUsersPas.setStatus('current')
setRadiuServeUsersLim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 7, 1, 3), Bits().clone(namedValues=NamedValues(("pap", 1), ("chap", 2), ("mschap", 4), ("mschapv2", 8), ("eap", 16), ("all", 32768)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeUsersLim.setStatus('current')
setRadiuServeForwardservTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3), )
if mibBuilder.loadTexts: setRadiuServeForwardservTable.setStatus('current')
setRadiuServeForwardservEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setRadiuServeForwardservRea"))
if mibBuilder.loadTexts: setRadiuServeForwardservEntry.setStatus('current')
setRadiuServeForwardservRea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservRea.setStatus('current')
setRadiuServeForwardservIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservIpa.setStatus('current')
setRadiuServeForwardservPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservPor.setStatus('current')
setRadiuServeForwardservSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservSec.setStatus('current')
setRadiuServeForwardservLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservLoo.setStatus('current')
setRadiuServeForwardservPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservPro.setStatus('current')
setRadiuServeForwardservBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservBac.setStatus('current')
setRadiuServeDefaultreal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeDefaultreal.setStatus('current')
setRadiuServeEmptyrealm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEmptyrealm.setStatus('current')
setRadiuServeAccountingi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeAccountingi.setStatus('current')
setRadiuServeEap = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 10))
setRadiuServeEapTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapTun.setStatus('current')
setRadiuServeEapTls = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapTls.setStatus('current')
setRadiuServeEapTtl = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 18, 23, 26))).clone(namedValues=NamedValues(("none", 0), ("md5", 4), ("otp", 5), ("gtc", 6), ("sim", 18), ("aka", 23), ("mschapv2", 26)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapTtl.setStatus('current')
setRadiuServeEapPea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 18, 23, 26))).clone(namedValues=NamedValues(("none", 0), ("md5", 4), ("otp", 5), ("gtc", 6), ("sim", 18), ("aka", 23), ("mschapv2", 26)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapPea.setStatus('current')
setRadiuServeEapRea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 10, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapRea.setStatus('current')
setRadiuServeEapRet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 25, 10, 10, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapRet.setStatus('current')
setNtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26))
setNtpSer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpSer.setStatus('current')
setNtpBcm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpBcm.setStatus('current')
setNtpBci = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpBci.setStatus('current')
setNtpRqi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqi.setStatus('current')
setNtpRqt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqt.setStatus('current')
setNtpRqaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 11), )
if mibBuilder.loadTexts: setNtpRqaTable.setStatus('current')
setNtpRqaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 11, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setNtpRqaRqa"))
if mibBuilder.loadTexts: setNtpRqaEntry.setStatus('current')
setNtpRqaRqa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqaRqa.setStatus('current')
setNtpRqaLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqaLoo.setStatus('current')
setNtpC0 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 26, 8), IpAddress())
if mibBuilder.loadTexts: setNtpC0.setStatus('current')
setMail = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27))
setMailSmtps = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSmtps.setStatus('current')
setMailSmtpp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSmtpp.setStatus('current')
setMailPop3s = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPop3s.setStatus('current')
setMailPop3p = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPop3p.setStatus('current')
setMailLoopb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailLoopb.setStatus('current')
setMailUsern = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailUsern.setStatus('current')
setMailPassw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPassw.setStatus('current')
setMailEmail = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailEmail.setStatus('current')
setMailSenda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSenda.setStatus('current')
setMailHoldt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailHoldt.setStatus('current')
setMailBuffe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 27, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailBuffe.setStatus('current')
setPppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31))
setPppoeOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeOpe.setStatus('current')
setPppoeNamTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 2), )
if mibBuilder.loadTexts: setPppoeNamTable.setStatus('current')
setPppoeNamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setPppoeNamPee"))
if mibBuilder.loadTexts: setPppoeNamEntry.setStatus('current')
setPppoeNamPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeNamPee.setStatus('current')
setPppoeNamSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeNamSht.setStatus('current')
setPppoeNamMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeNamMac.setStatus('current')
setPppoeSer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeSer.setStatus('current')
setPppoeSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeSes.setStatus('current')
setPppoePorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 5), )
if mibBuilder.loadTexts: setPppoePorTable.setStatus('current')
setPppoePorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 5, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setPppoePorPor"))
if mibBuilder.loadTexts: setPppoePorEntry.setStatus('current')
setPppoePorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPppoePorPor.setStatus('current')
setPppoePorEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 31, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoePorEna.setStatus('current')
setVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32))
setVlanOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanOpe.setStatus('current')
setVlanNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 1), )
if mibBuilder.loadTexts: setVlanNetTable.setStatus('current')
setVlanNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setVlanNetNam"))
if mibBuilder.loadTexts: setVlanNetEntry.setStatus('current')
setVlanNetNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetNam.setStatus('current')
setVlanNetVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetVla.setStatus('current')
setVlanNetPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetPor.setStatus('current')
setVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanTag.setStatus('current')
setVlanPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 2), )
if mibBuilder.loadTexts: setVlanPorTable.setStatus('current')
setVlanPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setVlanPorPort"))
if mibBuilder.loadTexts: setVlanPorEntry.setStatus('current')
setVlanPorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setVlanPorPort.setStatus('current')
setVlanPorTaggi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ingress-mixed", 0), ("never", 1), ("mixed", 2), ("always", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorTaggi.setStatus('current')
setVlanPorAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorAllow.setStatus('current')
setVlanPorPortv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 32, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorPortv.setStatus('current')
setIeee8 = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30))
setIeee8PorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4), )
if mibBuilder.loadTexts: setIeee8PorTable.setStatus('current')
setIeee8PorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIeee8PorPort"))
if mibBuilder.loadTexts: setIeee8PorEntry.setStatus('current')
setIeee8PorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIeee8PorPort.setStatus('current')
setIeee8PorPortcon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("force-unauth", 0), ("force-auth", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorPortcon.setStatus('current')
setIeee8PorReauthm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorReauthm.setStatus('current')
setIeee8PorMaxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorMaxreq.setStatus('current')
setIeee8PorTxperio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorTxperio.setStatus('current')
setIeee8PorSupptim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorSupptim.setStatus('current')
setIeee8PorServert = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorServert.setStatus('current')
setIeee8PorQuietpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorQuietpe.setStatus('current')
setIeee8PorReauthe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorReauthe.setStatus('current')
setIeee8PorReauthi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorReauthi.setStatus('current')
setIeee8PorKeytran = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorKeytran.setStatus('current')
setIeee8PorKeytxin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorKeytxin.setStatus('current')
setIeee8RadTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3), )
if mibBuilder.loadTexts: setIeee8RadTable.setStatus('current')
setIeee8RadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setIeee8RadNam"))
if mibBuilder.loadTexts: setIeee8RadEntry.setStatus('current')
setIeee8RadNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadNam.setStatus('current')
setIeee8RadIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadIpa.setStatus('current')
setIeee8RadPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadPor.setStatus('current')
setIeee8RadSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadSec.setStatus('current')
setIeee8RadLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadLoo.setStatus('current')
setIeee8RadPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadPro.setStatus('current')
setIeee8RadBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 30, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadBac.setStatus('current')
setEchos = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35))
setEchosOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosOpe.setStatus('current')
setEchosAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 2), )
if mibBuilder.loadTexts: setEchosAccTable.setStatus('current')
setEchosAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setEchosAccIpa"), (0, "LANCOM-L310-MIB", "setEchosAccNet"))
if mibBuilder.loadTexts: setEchosAccEntry.setStatus('current')
setEchosAccIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccIpa.setStatus('current')
setEchosAccNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccNet.setStatus('current')
setEchosAccPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("tcp", 1), ("udp", 2), ("tcp-plus-udp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccPro.setStatus('current')
setEchosAccAkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccAkt.setStatus('current')
setEchosAccCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccCom.setStatus('current')
setEchosTcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 35, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosTcp.setStatus('current')
setCerti = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39))
setCertiSce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1))
setCertiSceSce = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceSce.setStatus('current')
setCertiSceRet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceRet.setStatus('current')
setCertiSceChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceChe.setStatus('current')
setCertiSceDev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceDev.setStatus('current')
setCertiSceCac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCac.setStatus('current')
setCertiSceCasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6), )
if mibBuilder.loadTexts: setCertiSceCasTable.setStatus('current')
setCertiSceCasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setCertiSceCasName"))
if mibBuilder.loadTexts: setCertiSceCasEntry.setStatus('current')
setCertiSceCasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasName.setStatus('current')
setCertiSceCasUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasUrl.setStatus('current')
setCertiSceCasDn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasDn.setStatus('current')
setCertiSceCasEncalg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("des", 0), ("e3des", 1), ("blowfish", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasEncalg.setStatus('current')
setCertiSceCasIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasIdentifier.setStatus('current')
setCertiSceCasRaautoapprove = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasRaautoapprove.setStatus('current')
setCertiSceCasCasignaturealg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("md5", 0), ("sha1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasCasignaturealg.setStatus('current')
setCertiSceCasCafingerprinta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("sha1", 1), ("md5", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasCafingerprinta.setStatus('current')
setCertiSceCasCafingerprint = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasCafingerprint.setStatus('current')
setCertiSceCasApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 3))).clone(namedValues=NamedValues(("general", 2), ("wlan-controller", 1), ("eap-tls", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasApplication.setStatus('current')
setCertiSceCasLoopbackaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasLoopbackaddr.setStatus('current')
setCertiSceCerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7), )
if mibBuilder.loadTexts: setCertiSceCerTable.setStatus('current')
setCertiSceCerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setCertiSceCerName"))
if mibBuilder.loadTexts: setCertiSceCerEntry.setStatus('current')
setCertiSceCerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerName.setStatus('current')
setCertiSceCerCadn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerCadn.setStatus('current')
setCertiSceCerSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerSubject.setStatus('current')
setCertiSceCerChalleng = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerChalleng.setStatus('current')
setCertiSceCerSubjecta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerSubjecta.setStatus('current')
setCertiSceCerKeyusage = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerKeyusage.setStatus('current')
setCertiSceCerExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerExtended.setStatus('current')
setCertiSceCerDevicece = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerDevicece.setStatus('current')
setCertiSceCerApplicat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("wlan-controller", 1), ("eap-tls", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerApplicat.setStatus('current')
setCertiSceRei = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceRei.setStatus('current')
setCertiSceUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceUpd.setStatus('current')
setCertiSceCle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 39, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCle.setStatus('current')
setPerfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36))
setPerfoRttmonaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 2), )
if mibBuilder.loadTexts: setPerfoRttmonaTable.setStatus('current')
setPerfoRttmonaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setPerfoRttmonaInd"))
if mibBuilder.loadTexts: setPerfoRttmonaEntry.setStatus('current')
setPerfoRttmonaInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaInd.setStatus('current')
setPerfoRttmonaTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("jitter", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaTyp.setStatus('current')
setPerfoRttmonaFre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaFre.setStatus('current')
setPerfoRttmonaTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaTim.setStatus('current')
setPerfoRttmonaSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("not-in-service", 2), ("not-ready", 3), ("create", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaSta.setStatus('current')
setPerfoRttmoneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3), )
if mibBuilder.loadTexts: setPerfoRttmoneTable.setStatus('current')
setPerfoRttmoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setPerfoRttmoneIndex"))
if mibBuilder.loadTexts: setPerfoRttmoneEntry.setStatus('current')
setPerfoRttmoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3, 1, 255), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmoneIndex.setStatus('current')
setPerfoRttmoneProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("echo", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmoneProtocol.setStatus('current')
setPerfoRttmoneDestinationa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmoneDestinationa.setStatus('current')
setPerfoRttmonePacketsize = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonePacketsize.setStatus('current')
setPerfoRttmoneDestinationp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmoneDestinationp.setStatus('current')
setPerfoRttmoneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmoneInterval.setStatus('current')
setPerfoRttmonePacketcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonePacketcount.setStatus('current')
setPerfoRttmonsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4), )
if mibBuilder.loadTexts: setPerfoRttmonsTable.setStatus('current')
setPerfoRttmonsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setPerfoRttmonsIndex"))
if mibBuilder.loadTexts: setPerfoRttmonsEntry.setStatus('current')
setPerfoRttmonsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 255), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsIndex.setStatus('current')
setPerfoRttmonsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsCompletions.setStatus('current')
setPerfoRttmonsRttcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsRttcount.setStatus('current')
setPerfoRttmonsRttsum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsRttsum.setStatus('current')
setPerfoRttmonsRttmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsRttmin.setStatus('current')
setPerfoRttmonsRttmax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsRttmax.setStatus('current')
setPerfoRttmonsJitterminpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJitterminpossd.setStatus('current')
setPerfoRttmonsJittermaxpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxpossd.setStatus('current')
setPerfoRttmonsJittercountposs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittercountposs.setStatus('current')
setPerfoRttmonsJittersumpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittersumpossd.setStatus('current')
setPerfoRttmonsJitterminposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJitterminposds.setStatus('current')
setPerfoRttmonsJittermaxposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxposds.setStatus('current')
setPerfoRttmonsJittercountposd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittercountposd.setStatus('current')
setPerfoRttmonsJittersumposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittersumposds.setStatus('current')
setPerfoRttmonsJitterminnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJitterminnegsd.setStatus('current')
setPerfoRttmonsJittermaxnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxnegsd.setStatus('current')
setPerfoRttmonsJittercountnegs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittercountnegs.setStatus('current')
setPerfoRttmonsJittersumnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittersumnegsd.setStatus('current')
setPerfoRttmonsJitterminnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJitterminnegds.setStatus('current')
setPerfoRttmonsJittermaxnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxnegds.setStatus('current')
setPerfoRttmonsJittercountnegd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittercountnegd.setStatus('current')
setPerfoRttmonsJittersumnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittersumnegds.setStatus('current')
setPerfoRttmonsPacketlosssd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsPacketlosssd.setStatus('current')
setPerfoRttmonsPacketlossds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsPacketlossds.setStatus('current')
setPerfoRttmonsAveragejitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsAveragejitter.setStatus('current')
setPerfoRttmonsAveragejittersd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsAveragejittersd.setStatus('current')
setPerfoRttmonsAveragejitterds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 36, 4, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsAveragejitterds.setStatus('current')
setWlanm = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 37))
setWlanmStaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 37, 1), )
if mibBuilder.loadTexts: setWlanmStaTable.setStatus('current')
setWlanmStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 37, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "setWlanmStaIpa"))
if mibBuilder.loadTexts: setWlanmStaEntry.setStatus('current')
setWlanmStaIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 37, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanmStaIpa.setStatus('current')
setWlanmStaPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 37, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanmStaPor.setStatus('current')
setWlanmStaLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 2, 37, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanmStaLoo.setStatus('current')
firVerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 1), )
if mibBuilder.loadTexts: firVerTable.setStatus('current')
firVerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 1, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "firVerIfc"))
if mibBuilder.loadTexts: firVerEntry.setStatus('current')
firVerIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ifc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerIfc.setStatus('current')
firVerMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerMod.setStatus('current')
firVerVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerVer.setStatus('current')
firVerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerSer.setStatus('current')
firTabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 2), )
if mibBuilder.loadTexts: firTabTable.setStatus('current')
firTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 2, 1), ).setIndexNames((0, "LANCOM-L310-MIB", "firTabPos"))
if mibBuilder.loadTexts: firTabEntry.setStatus('current')
firTabPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabPos.setStatus('current')
firTabSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0, 5, 4))).clone(namedValues=NamedValues(("loader", 2), ("active", 1), ("inactive", 0), ("minimal-plus-active", 5), ("minimal-plus-inactive", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firTabSta.setStatus('current')
firTabVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabVer.setStatus('current')
firTabDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabDat.setStatus('current')
firTabSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabSiz.setStatus('current')
firTabInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabInd.setStatus('current')
firMod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("immediate", 0), ("login", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firMod.setStatus('current')
firTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firTim.setStatus('current')
firFea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firFea.setStatus('current')
othMan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 4, 1))
othManCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othManCon.setStatus('current')
othManDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othManDis.setStatus('current')
othBoo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othBoo.setStatus('current')
othCol = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othCol.setStatus('current')
trapgrp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0))
trpStatChan = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWanConnectio"), ("LANCOM-L310-MIB", "staChannState"), ("LANCOM-L310-MIB", "staChannApp"), ("LANCOM-L310-MIB", "staChannMode"), ("LANCOM-L310-MIB", "staChannCause"), ("LANCOM-L310-MIB", "staChannNumbe"), ("LANCOM-L310-MIB", "staChannSubad"), ("LANCOM-L310-MIB", "staChannCharg"), ("LANCOM-L310-MIB", "staChannExtra"), ("LANCOM-L310-MIB", "staChannConnt"), ("LANCOM-L310-MIB", "staChannConns"), ("LANCOM-L310-MIB", "staChannIsdnd"), ("LANCOM-L310-MIB", "staChannPhcha"), ("LANCOM-L310-MIB", "staChannPptpc"))
if mibBuilder.loadTexts: trpStatChan.setStatus('current')
trpFwUplStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpFwUplStart.setStatus('current')
trpUplSucc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"), ("LANCOM-L310-MIB", "staConfiEventlogInfo1"), ("LANCOM-L310-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpUplSucc.setStatus('current')
trpUplFailTo = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 6)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"), ("LANCOM-L310-MIB", "staConfiEventlogInfo1"), ("LANCOM-L310-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailTo.setStatus('current')
trpUplFailIncl = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 7)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"), ("LANCOM-L310-MIB", "staConfiEventlogInfo1"), ("LANCOM-L310-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailIncl.setStatus('current')
trpUplFailBadDev = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 8)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"), ("LANCOM-L310-MIB", "staConfiEventlogInfo1"), ("LANCOM-L310-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailBadDev.setStatus('current')
trpLogin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 9)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpLogin.setStatus('current')
trpLogout = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 10)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpLogout.setStatus('current')
trpCnfUplStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 11)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpCnfUplStart.setStatus('current')
trpCnfDnlStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 12)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpCnfDnlStart.setStatus('current')
trpCnfDnlSucc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 13)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"), ("LANCOM-L310-MIB", "staConfiEventlogInfo1"), ("LANCOM-L310-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpCnfDnlSucc.setStatus('current')
trpBssScan = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 14)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanInterfIfc"))
if mibBuilder.loadTexts: trpBssScan.setStatus('current')
trpBssStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 15)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanWlanpaIfc"), ("LANCOM-L310-MIB", "staWlanNetworBss"))
if mibBuilder.loadTexts: trpBssStart.setStatus('current')
trpBssJoin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 16)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanWlanpaIfc"), ("LANCOM-L310-MIB", "staWlanNetworBss"))
if mibBuilder.loadTexts: trpBssJoin.setStatus('current')
trpAuthStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 17)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpAuthStation.setStatus('current')
trpDeAuthStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 18)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpDeAuthStation.setStatus('current')
trpAssStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 19)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpAssStation.setStatus('current')
trpReAssStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 20)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpReAssStation.setStatus('current')
trpDisAssStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 21)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpDisAssStation.setStatus('current')
trpAssRej = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 22)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanLogtabAdd"))
if mibBuilder.loadTexts: trpAssRej.setStatus('current')
trpCardHung = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 25)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanInterfIfc"))
if mibBuilder.loadTexts: trpCardHung.setStatus('current')
trpIpFwFlt = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 26)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staIprouLogtaSyst"), ("LANCOM-L310-MIB", "staIprouLogtaSrca"), ("LANCOM-L310-MIB", "staIprouLogtaDsta"), ("LANCOM-L310-MIB", "staIprouLogtaProt"), ("LANCOM-L310-MIB", "staIprouLogtaSrcp"), ("LANCOM-L310-MIB", "staIprouLogtaDstp"), ("LANCOM-L310-MIB", "staIprouLogtaFilt"), ("LANCOM-L310-MIB", "staIprouLogtaLimi"), ("LANCOM-L310-MIB", "staIprouLogtaThre"), ("LANCOM-L310-MIB", "staIprouLogtaActi"))
if mibBuilder.loadTexts: trpIpFwFlt.setStatus('current')
trpPptpConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 28)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staPptpTun"), ("LANCOM-L310-MIB", "staPptpConChann"), ("LANCOM-L310-MIB", "staPptpConState"), ("LANCOM-L310-MIB", "staPptpConMode"), ("LANCOM-L310-MIB", "staPptpConShtim"), ("LANCOM-L310-MIB", "staPptpConPhysc"), ("LANCOM-L310-MIB", "staPptpConPeera"), ("LANCOM-L310-MIB", "staPptpConIpadd"), ("LANCOM-L310-MIB", "staPptpConDnsde"), ("LANCOM-L310-MIB", "staPptpConNbnsd"), ("LANCOM-L310-MIB", "staPptpConLaste"), ("LANCOM-L310-MIB", "staPptpConDnsba"), ("LANCOM-L310-MIB", "staPptpConNbnsb"))
if mibBuilder.loadTexts: trpPptpConn.setStatus('current')
trpErrLogin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 29)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staConfiEventlogSyste"), ("LANCOM-L310-MIB", "staConfiEventlogEvent"), ("LANCOM-L310-MIB", "staConfiEventlogAcces"), ("LANCOM-L310-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpErrLogin.setStatus('current')
trpKeyhandshake_Timeout = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 33)).setLabel("trpKeyhandshake-Timeout").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpKeyhandshake_Timeout.setStatus('current')
trpSupervision = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 35)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpSupervision.setStatus('current')
trpPPPoESConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 39)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staPppoeNum"), ("LANCOM-L310-MIB", "staPppoeConCha"), ("LANCOM-L310-MIB", "staPppoeConMac"), ("LANCOM-L310-MIB", "staPppoeConSta"), ("LANCOM-L310-MIB", "staPppoeConLas"), ("LANCOM-L310-MIB", "staPppoeConSht"), ("LANCOM-L310-MIB", "staPppoeConPee"))
if mibBuilder.loadTexts: trpPPPoESConn.setStatus('current')
trpVrrp = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 41)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staIprouVrrpEveSys"), ("LANCOM-L310-MIB", "staIprouVrrpEveSrc"), ("LANCOM-L310-MIB", "staIprouVrrpEveVri"), ("LANCOM-L310-MIB", "staIprouVrrpEveEve"), ("LANCOM-L310-MIB", "staIprouVrrpEveInf"))
if mibBuilder.loadTexts: trpVrrp.setStatus('current')
trpExcEirp = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 42)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanWlanpaIfc"), ("LANCOM-L310-MIB", "staWlanWlanpaEirp"))
if mibBuilder.loadTexts: trpExcEirp.setStatus('current')
trpIdle_Timeout = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 46)).setLabel("trpIdle-Timeout").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpIdle_Timeout.setStatus('current')
trpAdmin_Deassoc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 47)).setLabel("trpAdmin-Deassoc").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpAdmin_Deassoc.setStatus('current')
trpWLanOverTemp = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 48)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staHardwTemp"))
if mibBuilder.loadTexts: trpWLanOverTemp.setStatus('current')
trpWLanOverTempEnd = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 49)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staHardwTemp"))
if mibBuilder.loadTexts: trpWLanOverTempEnd.setStatus('current')
trpWLanUnderTemp = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 50)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staHardwTemp"))
if mibBuilder.loadTexts: trpWLanUnderTemp.setStatus('current')
trpWLanUnderTempEnd = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 51)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staHardwTemp"))
if mibBuilder.loadTexts: trpWLanUnderTempEnd.setStatus('current')
trpMacChkFail = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 52)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpMacChkFail.setStatus('current')
trpRoamed = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 53)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpRoamed.setStatus('current')
trpConnected = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 54)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanStatioMacadd"), ("LANCOM-L310-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpConnected.setStatus('current')
trpCl_LostConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 55)).setLabel("trpCl-LostConn").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanClientInterfIfc"), ("LANCOM-L310-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_LostConn.setStatus('current')
trpCl_AuthFail = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 56)).setLabel("trpCl-AuthFail").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanClientInterfIfc"), ("LANCOM-L310-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_AuthFail.setStatus('current')
trpCl_AssocFail = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 57)).setLabel("trpCl-AssocFail").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanClientInterfIfc"), ("LANCOM-L310-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_AssocFail.setStatus('current')
trpCl_Connected = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 58)).setLabel("trpCl-Connected").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanClientInterfIfc"), ("LANCOM-L310-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_Connected.setStatus('current')
trpCl_802_1x_Fail = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 59)).setLabel("trpCl-802-1x-Fail").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staWlanClientInterfIfc"), ("LANCOM-L310-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_802_1x_Fail.setStatus('current')
trpSpGtReE_pOrTsTaTcHg = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 1000)).setLabel("trpSpGtReE-pOrTsTaTcHg").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staLanbrSpaPorttabDes"), ("LANCOM-L310-MIB", "staLanbrSpaPorttabSta"), ("LANCOM-L310-MIB", "staLanbrSpaPorttabPat"))
if mibBuilder.loadTexts: trpSpGtReE_pOrTsTaTcHg.setStatus('current')
trpSpGtReE_rStPsTaTcHg = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 1001)).setLabel("trpSpGtReE-rStPsTaTcHg").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staLanbrSpaRstpporDes"), ("LANCOM-L310-MIB", "staLanbrSpaRstpporRol"), ("LANCOM-L310-MIB", "staLanbrSpaRstpporLea"), ("LANCOM-L310-MIB", "staLanbrSpaRstpporFor"), ("LANCOM-L310-MIB", "staLanbrSpaRstpporEdg"), ("LANCOM-L310-MIB", "staLanbrSpaRstpporPro"), ("LANCOM-L310-MIB", "staLanbrSpaRstpporPat"))
if mibBuilder.loadTexts: trpSpGtReE_rStPsTaTcHg.setStatus('current')
trpSpGtReE_rOoTpOrTcHg = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 1002)).setLabel("trpSpGtReE-rOoTpOrTcHg").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staLanbrSpaRootbri"), ("LANCOM-L310-MIB", "staLanbrSpaRootpor"), ("LANCOM-L310-MIB", "staLanbrSpaRootpat"))
if mibBuilder.loadTexts: trpSpGtReE_rOoTpOrTcHg.setStatus('current')
trpHTTP_Tunnel_Open = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 2000)).setLabel("trpHTTP-Tunnel-Open").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staTcpipHttpActiveIndex"), ("LANCOM-L310-MIB", "staTcpipHttpActiveRemotea"), ("LANCOM-L310-MIB", "staTcpipHttpActiveRemotep"), ("LANCOM-L310-MIB", "staTcpipHttpActiveLocalho"), ("LANCOM-L310-MIB", "staTcpipHttpActiveLocalpo"), ("LANCOM-L310-MIB", "staTcpipHttpActiveIdletim"), ("LANCOM-L310-MIB", "staTcpipHttpActiveLocalrt"))
if mibBuilder.loadTexts: trpHTTP_Tunnel_Open.setStatus('current')
trpHTTP_Tunnel_Close = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 6, 310, 0, 0, 2001)).setLabel("trpHTTP-Tunnel-Close").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L310-MIB", "staSnmpEveCou"), ("LANCOM-L310-MIB", "staTcpipHttpActiveIndex"))
if mibBuilder.loadTexts: trpHTTP_Tunnel_Close.setStatus('current')
mibBuilder.exportSymbols("LANCOM-L310-MIB", staTcpipTftpDelete=staTcpipTftpDelete, setPerfoRttmonsJitterminpossd=setPerfoRttmonsJitterminpossd, setSysloPor=setSysloPor, trpIpFwFlt=trpIpFwFlt, staWanErrorsIfc=staWanErrorsIfc, staIprouEstabTim=staIprouEstabTim, setDhcpDhcHos=setDhcpDhcHos, staWanErrorsEntry=staWanErrorsEntry, staWlanClientInterfTxlimi=staWlanClientInterfTxlimi, staPppLcpTxconfigreje=staPppLcpTxconfigreje, staConneConn=staConneConn, staTcpipTftpWanrxo=staTcpipTftpWanrxo, staTcpipDhcpNetwoGatewayadd=staTcpipDhcpNetwoGatewayadd, staWlanCompetLoad=staWlanCompetLoad, setRadiuServeEapTtl=setRadiuServeEapTtl, trpPPPoESConn=trpPPPoESConn, staInfocB2d=staInfocB2d, setWanMtulistPee=setWanMtulistPee, setWlanNoiseimmunFir=setWlanNoiseimmunFir, trpPptpConn=trpPptpConn, staPppCha=staPppCha, staCertiSceCertsKeyusage=staCertiSceCertsKeyusage, staWlanClientInterfClbrgs=staWlanClientInterfClbrgs, staWlanChanneRadioc=staWlanChanneRadioc, setIprou1nnServicetaTable=setIprou1nnServicetaTable, setInterWlaOperationalOperatin=setInterWlaOperationalOperatin, staTcpipIpLanfragmentationer=staTcpipIpLanfragmentationer, staTcpipRadiussAccoActiveaccountinNasporti=staTcpipRadiussAccoActiveaccountinNasporti, staWlanmNetworName=staWlanmNetworName, setWanDslbroaEntry=setWanDslbroaEntry, staWlanStatioLaster=staWlanStatioLaster, staWlanInterpAccWpaver=staWlanInterpAccWpaver, staWlanScanreDtimpe=staWlanScanreDtimpe, trpCl_Connected=trpCl_Connected, staIprouRipWansTable=staIprouRipWansTable, staWlanWlanpa108mbpsmode=staWlanWlanpa108mbpsmode, staIprouFilteTable=staIprouFilteTable, staDelet=staDelet, staTcpipRadiussAccoClientsAccountreq=staTcpipRadiussAccoClientsAccountreq, setSnmpMonitortTim=setSnmpMonitortTim, setWanIplistDnsba=setWanIplistDnsba, setDhcpNetAdaption=setDhcpNetAdaption, trpRoamed=trpRoamed, staDslDslol=staDslDslol, setIprou1nnServicetaPeer=setIprou1nnServicetaPeer, setIprouFirAppliFtp=setIprouFirAppliFtp, staIprouVrrpEveEve=staIprouVrrpEveEve, setInterWlaClientmodesClb=setInterWlaClientmodesClb, staWlanForeigMac=staWlanForeigMac, staIprouQosPmtus=staIprouQosPmtus, staTcpipSyslogLasEntry=staTcpipSyslogLasEntry, staIprouLogtaLimi=staIprouLogtaLimi, staLan=staLan, staWlanRadiosRadiochannel=staWlanRadiosRadiochannel, staPptpTcp=staPptpTcp, staTcpipDhcpDhcptTyp=staTcpipDhcpDhcptTyp, staLanErroNic=staLanErroNic, staTcpipDnsHitlTim=staTcpipDnsHitlTim, staWlanmLastwlEntry=staWlanmLastwlEntry, setLanbrPorBri=setLanbrPorBri, setSnmpSendtrap=setSnmpSendtrap, setCertiSceCle=setCertiSceCle, staPppTxoIpcIpadd=staPppTxoIpcIpadd, staWlanCompetInterp=staWlanCompetInterp, staWlanmNetworVlani=staWlanmNetworVlani, staWlanSeenclNum=staWlanSeenclNum, setIeee8RadPor=setIeee8RadPor, staWlanClientIptranAge=staWlanClientIptranAge, staIprouRipLansNetw=staIprouRipLansNetw, trpUplSucc=trpUplSucc, staConfiScanresuHttpp=staConfiScanresuHttpp, staPppTxoLcpMag=staPppTxoLcpMag, setWanRouteriIfc=setWanRouteriIfc, staDsl=staDsl, staTcpipArpLanr=staTcpipArpLanr, setWanRadiusClipo=setWanRadiusClipo, staWlanClientInterfPhysig=staWlanClientInterfPhysig, firVerEntry=firVerEntry, staTcpipRadiuscAuthenticUnknownty=staTcpipRadiuscAuthenticUnknownty, setTcpipAliveRetryc=setTcpipAliveRetryc, staPppIpcTxconfigrequ=staPppIpcTxconfigrequ, firTabEntry=firTabEntry, staIprouRipIpriTable=staIprouRipIpriTable, staAccouAccUsern=staAccouAccUsern, setIprouFirRulesSta=setIprouFirRulesSta, staTcpipTftpLanrxb=staTcpipTftpLanrxb, staTcpipDnsWant=staTcpipDnsWant, setIprou1nn=setIprou1nn, setHttpRolVariablesTable=setHttpRolVariablesTable, setIeee8RadBac=setIeee8RadBac, setDnsDnsdDes=setDnsDnsdDes, setIprouRipPar=setIprouRipPar, setWlanSignalaverStaFac=setWlanSignalaverStaFac, setIprou1nnServicetaActive=setIprou1nnServicetaActive, staWlanNetworNet=staWlanNetworNet, staChargDeletev=staChargDeletev, staWlanmNetworBasic=staWlanmNetworBasic, setIprouDefInd=setIprouDefInd, staWlanPacketIfc=staWlanPacketIfc, staVlanNetVla=staVlanNetVla, staWlanNetworBss=staWlanNetworBss, setInterModAtpollc=setInterModAtpollc, setIprouRipParInva=setIprouRipParInva, setPerfoRttmonsRttmin=setPerfoRttmonsRttmin, setHttpSsl=setHttpSsl, staWlanmRadiopEntry=staWlanmRadiopEntry, staWlanIapptaCapab=staWlanIapptaCapab, setIprou1nnIdspoofin=setIprou1nnIdspoofin, setIprou1nnTcpagings=setIprou1nnTcpagings, setLanbrEncEnc=setLanbrEncEnc, staTcpipArpTablMac=staTcpipArpTablMac, staMailDis=staMailDis, setCertiSceCerTable=setCertiSceCerTable, setWanPollingIpaddress3=setWanPollingIpaddress3, setWlanRadiusaccoSecret=setWlanRadiusaccoSecret, staCalliBch=staCalliBch, staIprouRipDynwTable=staIprouRipDynwTable, staIprouLanlo=staIprouLanlo, staIprouRipDynwDftr=staIprouRipDynwDftr, staTcpipHttpHttpsa=staTcpipHttpHttpsa, staIprouServiService=staIprouServiService, setCertiSceCasApplication=setCertiSceCasApplication, setIprouFirFilteProt=setIprouFirFilteProt, staIprouRipEntr=staIprouRipEntr, setChargTimetabBudgetmi=setChargTimetabBudgetmi, staWlanPacketTxbroad=staWlanPacketTxbroad, staLanIeeeSupMet=staLanIeeeSupMet, staWlanmApconnEntry=staWlanmApconnEntry, staIprouPortbDstp=staIprouPortbDstp, staConfiFeaturesEntry=staConfiFeaturesEntry, staTcpipSyslogLasLev=staTcpipSyslogLasLev, staWlanWlanpaSupportscompre=staWlanWlanpaSupportscompre, staTcpipRadiussAccoClientsIpaddress=staTcpipRadiussAccoClientsIpaddress, staTcpipNetworkSrc=staTcpipNetworkSrc, setIprouRipIprDis=setIprouRipIprDis, setInterDslOpe=setInterDslOpe, setRadiuServeAccountingp=setRadiuServeAccountingp, setRadiuServeEmptyrealm=setRadiuServeEmptyrealm, setIprouFirObjecDes=setIprouFirObjecDes, staWlanmRadiomAntenn=staWlanmRadiomAntenn, staLanByteTxbyte=staLanByteTxbyte, setInterWlaEncryptionWpav=setInterWlaEncryptionWpav, staWlanPacketRxmulti=staWlanPacketRxmulti, setAccouTimMinu=setAccouTimMinu, setIprouRipWanTable=setIprouRipWanTable, staTcpipRadiussAcceDeletevalues=staTcpipRadiussAcceDeletevalues, staLcrProFai=staLcrProFai, staIprouRipWansRipa=staIprouRipWansRipa, staLanLanh=staLanLanh, staWlanScanreEncryp=staWlanScanreEncryp, setIeee8PorPortcon=setIeee8PorPortcon, staWlanStatioClbrgs=staWlanStatioClbrgs, staPppLcpRxterminater=staPppLcpRxterminater, staPptpRxe=staPptpRxe, setWanRoundroPee=setWanRoundroPee, setConfiTftpcliBytesperh=setConfiTftpcliBytesperh, setDnsDynaHos=setDnsDynaHos, staWlanBytetrEntry=staWlanBytetrEntry, staIprouConneDest=staIprouConneDest, setIprou1nnTable1nnaTim=setIprou1nnTable1nnaTim, setCertiSceCasCafingerprint=setCertiSceCasCafingerprint, staWlanStatioTxpack=staWlanStatioTxpack, setWlanAccesslistCom=setWlanAccesslistCom, staTcpipRadiussAcceClientsTable=staTcpipRadiussAcceClientsTable, staWlanLogtabAdd=staWlanLogtabAdd, setWanPptppeePee=setWanPptppeePee, staWanActionsActEntry=staWanActionsActEntry, staPppCcpTxcodereject=staPppCcpTxcodereject, setDnsSubdTable=setDnsSubdTable, staWlanCompetPcffun=staWlanCompetPcffun, setWanRadiusProto=setWanRadiusProto, setIprouRipFilTable=setIprouRipFilTable, staAccouAccTable=staAccouAccTable, setNetbiPeeEntry=setNetbiPeeEntry, setIprouFirConneSrcp=setIprouFirConneSrcp, setInterWlaEncryptionIfc=setInterWlaEncryptionIfc, setInterWlaInterpointpMac=setInterWlaInterpointpMac, setIprouFirPorts=setIprouFirPorts, staRemotCount=staRemotCount, staHardwCpul=staHardwCpul, staWlanRadiusAge=staWlanRadiusAge, staWlanStatioEfftxr=staWlanStatioEfftxr, staDslPppoe=staDslPppoe, setWlanRadiusacceProtocol=setWlanRadiusacceProtocol, staWlanRadiusTable=staWlanRadiusTable, setWanBackuppHea=setWanBackuppHea, staTcpipDhcp=staTcpipDhcp, staTcpipTftpWantxe=staTcpipTftpWantxe, staIprouQosEntry=staIprouQosEntry, setLanbrProProtoc=setLanbrProProtoc, staWlanmRadiopCountry=staWlanmRadiopCountry, staWlanmRadiomEntry=staWlanmRadiomEntry, staWlanChanne108mbp=staWlanChanne108mbp, staIprouVrrpErr=staIprouVrrpErr, staWlanBytetrTxbyte=staWlanBytetrTxbyte, staWlanScanreLoad=staWlanScanreLoad, staPptpConIpadd=staPptpConIpadd, staPppLcpRxcodereject=staPppLcpRxcodereject, setVlanPorTaggi=setVlanPorTaggi, staAccouLasMacad=staAccouLasMacad, setIprouRipParHold=setIprouRipParHold, staWlanPacketTxpacke=staWlanPacketTxpacke, staTcpipHttpHttpno=staTcpipHttpHttpno, setIprouRipIprIpn=setIprouRipIprIpn, staWlanClientPppoeuHostuniq=staWlanClientPppoeuHostuniq, setWanBackuppTable=setWanBackuppTable, setDhcpPorEntry=setDhcpPorEntry, staTcpipRadiussAccoActiveaccountinStarttim=staTcpipRadiussAccoActiveaccountinStarttim, setDhcpUse=setDhcpUse, staTcpipIcmpWans=staTcpipIcmpWans, setWanDslbroaTable=setWanDslbroaTable, setWanIncominDia=setWanIncominDia, setInterWlaGroupencrypKey3=setInterWlaGroupencrypKey3, staIeee8StaReply=staIeee8StaReply, staWlanWlanpaIfc=staWlanWlanpaIfc, staDslDslolIpconfig=staDslDslolIpconfig, staTcpipDhcpDhcptIpa=staTcpipDhcpDhcptIpa, staMail=staMail, staHardwMode=staHardwMode, setIprouFirRulesNam=setIprouFirRulesNam, staLanbrConInterfa=staLanbrConInterfa, staTcpipIcmpLans=staTcpipIcmpLans, staIprouRipWansRipt=staIprouRipWansRipt, staWlanErrorsIvs=staWlanErrorsIvs, staIprouVrrpVirEntry=staIprouVrrpVirEntry, staWlanStatioWpaver=staWlanStatioWpaver, setInterModInitdia=setInterModInitdia, setTcpipArptaEntry=setTcpipArptaEntry, staWlanChanneTable=staWlanChanneTable, staWlanmNetworClbrg=staWlanmNetworClbrg, staIprouEstabDpo=staIprouEstabDpo, staPppLcpRxechoreques=staPppLcpRxechoreques, setWanDialuppTable=setWanDialuppTable, setSnmpMonitortTable=setSnmpMonitortTable, setInterModDisconn=setInterModDisconn, trpAssRej=trpAssRej, setSysloSerTable=setSysloSerTable, staTcpipRadiussAcceClientsMalformed=staTcpipRadiussAcceClientsMalformed, staTcpipNetbiosPeerTim=staTcpipNetbiosPeerTim, staLanbrSpaProtoco=staLanbrSpaProtoco, setInterDslIfc=setInterDslIfc, staPppCcpTxresetack=staPppCcpTxresetack, setWanRouteriYc=setWanRouteriYc, setConfiAccesstIfc=setConfiAccesstIfc, setSnmpIptrapsLoo=setSnmpIptrapsLoo, setAccouTimDayo=setAccouTimDayo, staWlanScanreCompre=staWlanScanreCompre, staLanPackIfc=staLanPackIfc, setAccouTimHour=setAccouTimHour, staConfiEventlogIpadd=staConfiEventlogIpadd, staTcpipDhcpNetwoEntry=staTcpipDhcpNetwoEntry, staWanActions=staWanActions, staWlanStatioIdenti=staWlanStatioIdenti, staWlanScanreMaxams=staWlanScanreMaxams)
mibBuilder.exportSymbols("LANCOM-L310-MIB", staTcpipRadiussAccoTotalduplicatea=staTcpipRadiussAccoTotalduplicatea, setLanbrProRedire=setLanbrProRedire, setDnsSubdNet=setDnsSubdNet, setWanPollingLoopbackad=setWanPollingLoopbackad, staTimeDstMin=staTimeDstMin, setNetbiSerSer=setNetbiSerSer, setLanbrSpaFor=setLanbrSpaFor, setWlanIappannoun=setWlanIappannoun, staTcpipRadiussAccoClientsAccountnor=staTcpipRadiussAccoClientsAccountnor, staTime=staTime, setInterWlaTransmissioMinh=setInterWlaTransmissioMinh, setWlanThermrecal=setWlanThermrecal, staWlanWlanpaSupportedbands=staWlanWlanpaSupportedbands, trpIdle_Timeout=trpIdle_Timeout, staTcpipTcpWanrx=staTcpipTcpWanrx, setTcpipLoopbLoo=setTcpipLoopbLoo, staIprouRipVrrpRou=staIprouRipVrrpRou, staCertiSceCertsTable=staCertiSceCertsTable, staLanDele=staLanDele, staTcpipIcmpWanc=staTcpipIcmpWanc, staConfiEventlogTable=staConfiEventlogTable, setHttpPor=setHttpPor, setWlanRadiusacceSecret=setWlanRadiusacceSecret, staLanbrAddAge=staLanbrAddAge, staIprouFilteProt=staIprouFilteProt, staWlanBytetrIfc=staWlanBytetrIfc, setTcpipAccesTable=setTcpipAccesTable, staTcpipTftpLanrxe=staTcpipTftpLanrxe, staIprouVrrpMacTable=staIprouVrrpMacTable, setInterWlaTransmissioMint=setInterWlaTransmissioMint, setWlanCardreinit=setWlanCardreinit, setIprou1nnIpsectablTable=setIprou1nnIpsectablTable, setWanPppTry=setWanPppTry, setIprouFirMaxha=setIprouFirMaxha, staTcpipRadiussAccoTotalaccountunk=staTcpipRadiussAccoTotalaccountunk, staTcpipNetbiosWnod=staTcpipNetbiosWnod, staWlanPacketTxaggre=staWlanPacketTxaggre, staIprouRipDynlRipt=staIprouRipDynlRipt, setChargActivat=setChargActivat, setChargSerialm=setChargSerialm, setConfiMaximum=setConfiMaximum, setDhcpAliTable=setDhcpAliTable, staInfocPee=staInfocPee, setCertiSceCasName=setCertiSceCasName, staTcpipDhcpNetwoNbnsbackup=staTcpipDhcpNetwoNbnsbackup, trpCl_AuthFail=trpCl_AuthFail, setWanIplistDnsde=setWanIplistDnsde, setDnsDnslEntry=setDnsDnslEntry, setLanbrProSubpro=setLanbrProSubpro, setDhcpPorPor=setDhcpPorPor, staLayerL2op=staLayerL2op, staChargTimetabBudgetmi=staChargTimetabBudgetmi, setIprouRipLanRxfi=setIprouRipLanRxfi, staWlanWlanpaAessupport=staWlanWlanpaAessupport, staTcpipIpWanfragmentationsf=staTcpipIpWanfragmentationsf, setWlanSignalaverFilCoeTable=setWlanSignalaverFilCoeTable, staIprouRipDele=staIprouRipDele, staWlanPacketRxaggrf=staWlanPacketRxaggrf, staChargTimetabTable=staChargTimetabTable, setCertiSceCerSubject=setCertiSceCerSubject, staPppCcpRxresetack=staPppCcpRxresetack, staIprouRipDynwMasq=staIprouRipDynwMasq, trpLogout=trpLogout, trpUplFailBadDev=trpUplFailBadDev, staWlanInterpAccTxpack=staWlanInterpAccTxpack, staPppCcpDeletevalues=staPppCcpDeletevalues, setIprou1nnServicetaDportt=setIprou1nnServicetaDportt, setIprouFirAppliIrcDdc=setIprouFirAppliIrcDdc, setDnsServSer=setDnsServSer, staPppIpcDeletevalues=staPppIpcDeletevalues, staIprouRipFiltIpn=staIprouRipFiltIpn, staTcpipArpTablTable=staTcpipArpTablTable, setWanMtulistTable=setWanMtulistTable, staDhcpcWanIpadd=staDhcpcWanIpadd, staIprouHoconTable=staIprouHoconTable, lancom_l310=lancom_l310, setChargTimetabMinutesp=setChargTimetabMinutesp, staWlanInterpAccQos=staWlanInterpAccQos, staQueueDnsrxqu=staQueueDnsrxqu, staPptpConDnsde=staPptpConDnsde, setWlanRadiusacceServeradd=setWlanRadiusacceServeradd, staWlanErrorsEntry=staWlanErrorsEntry, setIprouRipIprEntry=setIprouRipIprEntry, setDhcpNetNetworknam=setDhcpNetNetworknam, staAccouLasUsern=staAccouLasUsern, staWlanDeasso=staWlanDeasso, staPppTxoIpcDnsba=staPppTxoIpcDnsba, staWlanInterfEntry=staWlanInterfEntry, setIprou1nnIpsectablRemotea=setIprou1nnIpsectablRemotea, staWlanStatioShorts=staWlanStatioShorts, setLanbrSpaPorPor=setLanbrSpaPorPor, staTcpipNetbiosPeerEntry=staTcpipNetbiosPeerEntry, setRadiuServeEapTls=setRadiuServeEapTls, setCertiSce=setCertiSce, staPptpAck=staPptpAck, setWlanNoiseimmunCck=setWlanNoiseimmunCck, setWlanRadiusaccoLoopbacka=setWlanRadiusaccoLoopbacka, setCertiSceCerKeyusage=setCertiSceCerKeyusage, staPppLcpRxdiscarded=staPppLcpRxdiscarded, setWlanRadiusaccoProtocol=setWlanRadiusaccoProtocol, setInterWlaInterpointpTable=setInterWlaInterpointpTable, staLanbrDhcEntry=staLanbrDhcEntry, staLcrFou=staLcrFou, setCertiSceCasTable=setCertiSceCasTable, setConfiPrompt=setConfiPrompt, setTcpipArpag=setTcpipArpag, staPppCcpRxconfignak=staPppCcpRxconfignak, setDnsDhcp=setDnsDhcp, setLanIeee80SupCre=setLanIeee80SupCre, staWlanCompetQos=staWlanCompetQos, setWanPollingTry=setWanPollingTry, setSysloSerIpa=setSysloSerIpa, staIprouWantt=staIprouWantt, setWlanRadiusaccoBackupsec=setWlanRadiusaccoBackupsec, setWanLayerLay1=setWanLayerLay1, staWlanChanneInterf=staWlanChanneInterf, staIprouLandi=staIprouLandi, staWlanNetworMca=staWlanNetworMca, staWlanClientIptranMac=staWlanClientIptranMac, staTcpipDhcpNetwoServerid=staTcpipDhcpNetwoServerid, setWlanBrokenlink=setWlanBrokenlink, staWlanScanreNoisel=staWlanScanreNoisel, setIeee8RadNam=setIeee8RadNam, setRadiuAutht=setRadiuAutht, setWanIplistIpnet=setWanIplistIpnet, trapgrp=trapgrp, setPerfoRttmonaEntry=setPerfoRttmonaEntry, setIprouFirAppliFtpChe=setIprouFirAppliFtpChe, staDhcpcWanIfc=staDhcpcWanIfc, staQueueArpqueu=staQueueArpqueu, staDhcpcWanNbnsb=staDhcpcWanNbnsb, setTcpipArptaMac=setTcpipArptaMac, staTcpipArpWant=staTcpipArpWant, staTcpipDhcpDhcptVla=staTcpipDhcpDhcptVla, setIprouVrrVrrBpr=setIprouVrrVrrBpr, staTcpipRadiussAcceTotalaccessreq=staTcpipRadiussAcceTotalaccessreq, setWanPppPee=setWanPppPee, staDslDslolIpnetwor=staDslDslolIpnetwor, setIprouFirAppliFtpAct=setIprouFirAppliFtpAct, staWlanmRadiomIndex=staWlanmRadiomIndex, staTcpipIpWanfragmentations=staTcpipIpWanfragmentations, setInterWlaRadiosettinDfsrescanhours=setInterWlaRadiosettinDfsrescanhours, staWlanChanneScanne=staWlanChanneScanne, setCertiSceCerCadn=setCertiSceCerCadn, staWlanScanreEntry=staWlanScanreEntry, setIprou1nnTable1nnaInt=setIprou1nnTable1nnaInt, setIprouRipWanPois=setIprouRipWanPois, setPerfoRttmonsJitterminnegsd=setPerfoRttmonsJitterminnegsd, staRemotTable=staRemotTable, trpConnected=trpConnected, staPptpConLaste=staPptpConLaste, staWlanGroupeTsc=staWlanGroupeTsc, setPerfoRttmonsJittersumposds=setPerfoRttmonsJittersumposds, setNetbiSerSmb=setNetbiSerSmb, setIprouFirConneDsta=setIprouFirConneDsta, setRadiu=setRadiu, staTcpipRadiussAccoActiveaccountinEntry=staTcpipRadiussAccoActiveaccountinEntry, staTcpipRadiuscAuthenticIpaddress=staTcpipRadiuscAuthenticIpaddress, staIprouOpenpTime=staIprouOpenpTime, staChannConns=staChannConns, setInterDslUps=setInterDslUps, staTcpipDhcpDhcptEntry=staTcpipDhcpDhcptEntry, setRadiuServeUsersLim=setRadiuServeUsersLim, setSysloSerIdx=setSysloSerIdx, staWlanRadiosEntry=staWlanRadiosEntry, staWlanInterpAccTxbyte=staWlanInterpAccTxbyte, setNetbiPeeTyp=setNetbiPeeTyp, staTcpipDhcpNetwoVlanid=staTcpipDhcpNetwoVlanid, staWlanStatioKeytyp=staWlanStatioKeytyp, staPppRxoLcpTable=staPppRxoLcpTable, setIprouFirPortbFilt=setIprouFirPortbFilt, staWlanScanreTable=staWlanScanreTable, setNtpC0=setNtpC0, setCertiSceCasCafingerprinta=setCertiSceCasCafingerprinta, staPppoeConEntry=staPppoeConEntry, setEchosTcp=setEchosTcp, staTcpipDhcpDhcptNet=staTcpipDhcpDhcptNet, staTcpipRadiussAccoTotalinvalidacc=staTcpipRadiussAccoTotalinvalidacc, setWlanmStaPor=setWlanmStaPor, setWanPppEntry=setWanPppEntry, setDnsDnsdEntry=setDnsDnsdEntry, staIprouVrrpEveSys=staIprouVrrpEveSys, staInfocIfc=staInfocIfc, staIprouRipIpriGat=staIprouRipIpriGat, staLanbrAddTable=staLanbrAddTable, staTcpipRadiussAccoClientsNasident=staTcpipRadiussAccoClientsNasident, staWlanmNetworRadio=staWlanmNetworRadio, setWlanRadarloadt=setWlanRadarloadt, staHardwSeri=staHardwSeri, staWlanInterpAccMaxams=staWlanInterpAccMaxams, staDslDelete=staDslDelete, setTcpipNbnsb=setTcpipNbnsb, staTcpipDhcpDhcptTim=staTcpipDhcpDhcptTim, setAccouSav=setAccouSav, setInterWlaTransmissioMaxt=setInterWlaTransmissioMaxt, setAccouSor=setAccouSor, staTcpipNetbiosNetwNet=staTcpipNetbiosNetwNet, staWlanmNetworConti=staWlanmNetworConti, staPppPapRxsuc=staPppPapRxsuc, staTcpipRadiussAccoClientsLastreques=staTcpipRadiussAccoClientsLastreques, setEchosAccIpa=setEchosAccIpa, staTcpipDhcpDhcptLan=staTcpipDhcpDhcptLan, staWlanStatio40mhzm=staWlanStatio40mhzm, staWlanmRadiopSubbands=staWlanmRadiopSubbands, setIprouRipParUpda=setIprouRipParUpda, setWanIplistNbnsb=setWanIplistNbnsb, setTcpipNetwoCom=setTcpipNetwoCom, staTcpipTftpLancon=staTcpipTftpLancon, setHttpRolVariablesTyp=setHttpRolVariablesTyp, staWlanScanreMaxamp=staWlanScanreMaxamp, staWanErrorsTable=staWanErrorsTable, staChargTimetabIfc=staChargTimetabIfc, staChannSubad=staChannSubad, setTimeDstEve=setTimeDstEve, setConfi=setConfi, setPppoePorTable=setPppoePorTable, setWanMtulistMtu=setWanMtulistMtu, staWlanmNetworMinht=staWlanmNetworMinht, staInfocMod=staInfocMod, setIprouFirRulesRtg=setIprouFirRulesRtg, staPppCcpTxterminatea=staPppCcpTxterminatea, staIeee8StaMacad=staIeee8StaMacad, staUmtsmDat=staUmtsmDat, setIprouFirFilteSend=setIprouFirFilteSend, setNetbiSco=setNetbiSco, setWlanRadiusacceBackupser=setWlanRadiusacceBackupser, staPptpTun=staPptpTun, setConfiLanguag=setConfiLanguag, staLayerTable=staLayerTable, setConfiPasswor=setConfiPasswor, setIeee8RadSec=setIeee8RadSec, setTcpipLoopbNam=setTcpipLoopbNam, staLanIeeeSupIfc=staLanIeeeSupIfc, staWlanWlanpaTransmitpower=staWlanWlanpaTransmitpower, staWlanmNetworMaxtx=staWlanmNetworMaxtx, setNetbiGroTim=setNetbiGroTim, setWlanTracelevel=setWlanTracelevel, setIprouFirObjecNam=setIprouFirObjecNam, setLanbrProAction=setLanbrProAction, setConfiTelnets=setConfiTelnets, staWlanRadiosRadioband=staWlanRadiosRadioband, staIprouConneRtgt=staIprouConneRtgt, setIeee8PorReauthm=setIeee8PorReauthm, staPppTxoLcpIfc=staPppTxoLcpIfc, staIprouRipIpriVla=staIprouRipIpriVla, staTimeDstInd=staTimeDstInd, staLanByteEntry=staLanByteEntry, staTcpipRadiussAccoCompletedaccounStoptime=staTcpipRadiussAccoCompletedaccounStoptime, setHttpRolVariablesEntry=setHttpRolVariablesEntry, setTimeTim=setTimeTim, setAccouCurMacad=setAccouCurMacad, staLanByteBytest=staLanByteBytest, staLanIeeeSupAut=staLanIeeeSupAut, staLanbrPorPoi=staLanbrPorPoi)
mibBuilder.exportSymbols("LANCOM-L310-MIB", staTcpipRadiussAcceClientsAccesscha=staTcpipRadiussAcceClientsAccesscha, staIprouEstabSrc=staIprouEstabSrc, staPppTxoIpcNbnsd=staPppTxoIpcNbnsd, staWlanInterfFirmware=staWlanInterfFirmware, staIprouHoconEntry=staIprouHoconEntry, staTcpipNetbiosRegi=staTcpipNetbiosRegi, setIprouFirAppliFtpFtp=setIprouFirAppliFtpFtp, setConfiAccesstHttps=setConfiAccesstHttps, staWlanStatioTxrate=staWlanStatioTxrate, staWlanmApconnPrio=staWlanmApconnPrio, setInterWlaGroupencrypEntry=setInterWlaGroupencrypEntry, setCertiSceCerChalleng=setCertiSceCerChalleng, staWlanInterpAccRxbyte=staWlanInterpAccRxbyte, setIprouRou=setIprouRou, setPerfoRttmonsJittercountposs=setPerfoRttmonsJittercountposs, staTcpipNetbiosBnod=staTcpipNetbiosBnod, staTcpipHttpActiveIdletim=staTcpipHttpActiveIdletim, staLanbrConDestpor=staLanbrConDestpor, setIprouFirRulesDes=setIprouFirRulesDes, setInterWlaClientmodesIfc=setInterWlaClientmodesIfc, setPppoeOpe=setPppoeOpe, setIprou1nnFragmenta=setIprou1nnFragmenta, setIprouNnnSrca=setIprouNnnSrca, setInterModDialcom=setInterModDialcom, trpSpGtReE_rOoTpOrTcHg=trpSpGtReE_rOoTpOrTcHg, staTcpipNetbiosPeerNam=staTcpipNetbiosPeerNam, staPppDel=staPppDel, staWlanLogtabInt=staWlanLogtabInt, staIeee8StaTable=staIeee8StaTable, setAccouLasRxkby=setAccouLasRxkby, staPppRxoIpcIpadd=staPppRxoIpcIpadd, staTcpipTftpWanrx=staTcpipTftpWanrx, staTcpipRadiussAccoActiveaccountinCalledst=staTcpipRadiussAccoActiveaccountinCalledst, setIprouIprIpa=setIprouIprIpa, setInterWlaTransmissioTable=setInterWlaTransmissioTable, firVerVer=firVerVer, setIprouRouRou=setIprouRouRou, staPptpConNbnsd=staPptpConNbnsd, staWlanClientInterfMaxams=staWlanClientInterfMaxams, setIprouFirHostbFil=setIprouFirHostbFil, setIprouRipWanMasq=setIprouRipWanMasq, staTcpipDnsDele=staTcpipDnsDele, staWlanIapptaTable=staWlanIapptaTable, staPppPapTxsuc=staPppPapTxsuc, staChannPhcha=staChannPhcha, setPppoeNamPee=setPppoeNamPee, setLcrTimSto=setLcrTimSto, staPppLcpTxechoreques=staPppLcpTxechoreques, setIprouFirOpenpEntry=setIprouFirOpenpEntry, setAccouLasUsern=setAccouLasUsern, firTabInd=firTabInd, staPppLcpTxprotocolre=staPppLcpTxprotocolre, setWanDialuppDia=setWanDialuppDia, setPerfoRttmonsPacketlosssd=setPerfoRttmonsPacketlosssd, setLcrRou=setLcrRou, staPppCcpRxdiscarded=staPppCcpRxdiscarded, setInterWlaRoamingTable=setInterWlaRoamingTable, setIprouVrr=setIprouVrr, setPerfoRttmonsJittermaxnegsd=setPerfoRttmonsJittermaxnegsd, staPptpConShtim=staPptpConShtim, staIprouHostbTable=staIprouHostbTable, setPerfoRttmoneTable=setPerfoRttmoneTable, staLanbrAddInd=staLanbrAddInd, staTcpipRadiussAccoCompletedaccounIpaddres=staTcpipRadiussAccoCompletedaccounIpaddres, setLanbrEncEntry=setLanbrEncEntry, staQueueIpqueue=staQueueIpqueue, staCertiSceCasExpsnm=staCertiSceCasExpsnm, trpWLanUnderTempEnd=trpWLanUnderTempEnd, setTcpipArptaCon=setTcpipArptaCon, firMod=firMod, setInterWla=setInterWla, staWlanScanre40mhzm=staWlanScanre40mhzm, setNetbiNetNet=setNetbiNetNet, setChargResetbu=setChargResetbu, staDhcpcLanGatew=staDhcpcLanGatew, setWanBackuppAlt=setWanBackuppAlt, setIprouFirOpenpTable=setIprouFirOpenpTable, setWanRadiusLoopb=setWanRadiusLoopb, setNtpRqaTable=setNtpRqaTable, setWlanNoiseoffseTable=setWlanNoiseoffseTable, setSnmpLocation=setSnmpLocation, setIprouIprCom=setIprouIprCom, setSnmpComment3=setSnmpComment3, staWlanClientIptranIpa=staWlanClientIptranIpa, staLanByteMaxthr=staLanByteMaxthr, staLanPackRxm=staLanPackRxm, staTcpip=staTcpip, setNetbiBroIpa=setNetbiBroIpa, setConfiAccesstTelnet=setConfiAccesstTelnet, setIprouNnnIdx=setIprouNnnIdx, staPppRxoIpcDnsba=staPppRxoIpcDnsba, staWlanWlanpaPhyvariant=staWlanWlanpaPhyvariant, staTcpipNetworkNet=staTcpipNetworkNet, setConfiCrontabInde=setConfiCrontabInde, staIprouProtoEntry=staIprouProtoEntry, setWanDialuppB2d=setWanDialuppB2d, setHttpMax=setHttpMax, setDhcpAddNetwork=setDhcpAddNetwork, staWlanSeenclTable=staWlanSeenclTable, setWanDialuppWan=setWanDialuppWan, staWlanRadiusMac=staWlanRadiusMac, staTcpipRadiussAcceTotalinvalidac=staTcpipRadiussAcceTotalinvalidac, staTcpipRadiussAccoClientsDuplicater=staTcpipRadiussAccoClientsDuplicater, setConfiUpdatecRetryok=setConfiUpdatecRetryok, setIprouNnnSrcm=setIprouNnnSrcm, staTcpipNetworkInt=staTcpipNetworkInt, setDhcpDhcVla=setDhcpDhcVla, setIprou1nnServicetaEntry=setIprou1nnServicetaEntry, setIprouIprRtg=setIprouIprRtg, setIprouNnnEntry=setIprouNnnEntry, setNetbiGroPee=setNetbiGroPee, setTcpipNetwoInt=setTcpipNetwoInt, setIprouFirRulesCom=setIprouFirRulesCom, staTcpipRadiussAccoActiveaccountinOutputpa=staTcpipRadiussAccoActiveaccountinOutputpa, staWlanStatioThroug=staWlanStatioThroug, setDhcpNetNbnsdefaul=setDhcpNetNbnsdefaul, staQueueDnstxqu=staQueueDnstxqu, staWlanInterpKeySour=staWlanInterpKeySour, setHttpRolVariablesMin=setHttpRolVariablesMin, staConfiFeaturesFea=staConfiFeaturesFea, staIprouQosTxblo=staIprouQosTxblo, setIprouNnnTable=setIprouNnnTable, staWlanInterfCardid=staWlanInterfCardid, setSysloSerLoo=setSysloSerLoo, staIprouVrrpVirPor=staIprouVrrpVirPor, setConfiUpdatecRespons=setConfiUpdatecRespons, staPppRxoLcpMag=staPppRxoLcpMag, staFilesConEntry=staFilesConEntry, staWanThroughpuTable=staWanThroughpuTable, staTcpipRadiussAccoTotalmalformeda=staTcpipRadiussAccoTotalmalformeda, staWlanChanneRadiob=staWlanChanneRadiob, staPppRxo=staPppRxo, staWlanmRadiomTable=staWlanmRadiomTable, setHttpRolActionsEntry=setHttpRolActionsEntry, setConfiCrontabHour=setConfiCrontabHour, staWlanmLastwlIpa=staWlanmLastwlIpa, staWlanCompetCompre=staWlanCompetCompre, staPppoeDro=staPppoeDro, staChargRouters=staChargRouters, staLanErroTable=staLanErroTable, staTimeTim=staTimeTim, staWlanStatioMaxamp=staWlanStatioMaxamp, staWanWanqueuep=staWanWanqueuep, staCertiSceCertsStatus=staCertiSceCertsStatus, staWlanClientPppoeiEntry=staWlanClientPppoeiEntry, staTcpipRadiuscAuthenticAccessrej=staTcpipRadiuscAuthenticAccessrej, setVlanNetNam=setVlanNetNam, setAccouLasTable=setAccouLasTable, staIprouConneEntry=staIprouConneEntry, staWlanmApconnTable=staWlanmApconnTable, setIprouFirRulesSou=setIprouFirRulesSou, staWlanScanreIdenti=staWlanScanreIdenti, staTcpipHttp=staTcpipHttp, staConfiFeaturesExp=staConfiFeaturesExp, staIprouFilteSend=staIprouFilteSend, staLanbrSpaOperati=staLanbrSpaOperati, setInterWlaRadiosettin24ghzmode=setInterWlaRadiosettin24ghzmode, setNetbiBroSer=setNetbiBroSer, setSnmpMonitortMac=setSnmpMonitortMac, staLanErroQue=staLanErroQue, staIprouRipIpriRtg=staIprouRipIpriRtg, setWanPollingTable=setWanPollingTable, setInterUmtTyp=setInterUmtTyp, staVlanPorPor=staVlanPorPor, staPppRxoLcpAut=staPppRxoLcpAut, staSnmpEveEntry=staSnmpEveEntry, staWlanmRadiopQos=staWlanmRadiopQos, staTcpipTftpLanrxr=staTcpipTftpLanrxr, staDslPppoeRxpadt=staDslPppoeRxpadt, staCertiSceCasTable=staCertiSceCasTable, staWlanmNetworKey=staWlanmNetworKey, staDslQueuee=staDslQueuee, setEchosOpe=setEchosOpe, staIprouQosDowns=staIprouQosDowns, setLanbrSpaPat=setLanbrSpaPat, staWlanGroupeRsc=staWlanGroupeRsc, setInterWlaNetworkOpe=setInterWlaNetworkOpe, staRemotIfc=staRemotIfc, setIprou1nnTable1nnaSou=setIprou1nnTable1nnaSou, setChargSpareds=setChargSpareds, setMailPop3s=setMailPop3s, setHttpRolActionsInd=setHttpRolActionsInd, setPerfoRttmonsJittercountnegs=setPerfoRttmonsJittercountnegs, setWanActiontOwner=setWanActiontOwner, staCertiSceCasExpire=staCertiSceCasExpire, staWlanmLastwlPor=staWlanmLastwlPor, setIprouRipWanPeer=setIprouRipWanPeer, setDhcpAliImagef=setDhcpAliImagef, staIprouRipWansRtgt=staIprouRipWansRtgt, staCertiSceRasName=staCertiSceRasName, staWlanClient=staWlanClient, setSnmpAdminist=setSnmpAdminist, setIprouVrrOpe=setIprouVrrOpe, staTcpipIpDeletevalues=staTcpipIpDeletevalues, setLanMacadd=setLanMacadd, setInterWlaRadiosettinRadioband=setInterWlaRadiosettinRadioband, staWlanStatioRxlimi=staWlanStatioRxlimi, setSnmpMonitortVla=setSnmpMonitortVla, staDslPppoeTxpadr=staDslPppoeTxpadr, setAccouAccUsern=setAccouAccUsern, setDhcpDhcEntry=setDhcpDhcEntry, setWanIplistPeer=setWanIplistPeer, staWanWanqueuee=staWanWanqueuee, setDhcpNetEntry=setDhcpNetEntry, setMailSmtpp=setMailSmtpp, setLanIeee80SupIfc=setLanIeee80SupIfc, setDhcpNetCache=setDhcpNetCache, setTcpipLoopbEntry=setTcpipLoopbEntry, staIprouOpenpDstp=staIprouOpenpDstp, staIprouActipDis=staIprouActipDis, staWanPackettraRx=staWanPackettraRx, staHardwBoar=staHardwBoar, staTcpipDeletev=staTcpipDeletev, setChargDslbroa=setChargDslbroa, setConfiMonitorTracemask1=setConfiMonitorTracemask1, setInterModInitans=setInterModInitans, staPppTxoIpcDnsde=staPppTxoIpcDnsde, staTcpipIcmpDele=staTcpipIcmpDele, setChargTimetabSparemin=setChargTimetabSparemin, staTimeDstTable=staTimeDstTable, staLanByteBytesm=staLanByteBytesm, setDnsDnsdDom=setDnsDnsdDom, setAccou=setAccou, setInterWlaEncryptionWpar=setInterWlaEncryptionWpar, staConfiStartsca=staConfiStartsca, staLanPackEntry=staLanPackEntry, staDslLinkac=staDslLinkac, staLanbrConTable=staLanbrConTable, staTcpipTcpLanche=staTcpipTcpLanche, staRemotRemot=staRemotRemot, setWanIplistGatew=setWanIplistGatew, staHardwTemp=staHardwTemp, setDhcpHosTable=setDhcpHosTable, setCertiSceCasEntry=setCertiSceCasEntry, setLanbrSpaOpe=setLanbrSpaOpe, staWlanStatioIndex=staWlanStatioIndex, staTcpipIpLooperror=staTcpipIpLooperror, staChargTimetabMinutesp=staChargTimetabMinutesp, setConfiUpdatecServerp=setConfiUpdatecServerp, staRemotConns=staRemotConns, trpExcEirp=trpExcEirp, staIprouLanrx=staIprouLanrx, staRemotConnt=staRemotConnt, setWanDslbroaUse=setWanDslbroaUse, staTcpipIpLanchecksumerrors=staTcpipIpLanchecksumerrors, setNetbi=setNetbi, setVlanOpe=setVlanOpe, setIprouFirAppliApp=setIprouFirAppliApp, staIprouVrrpVirBpr=staIprouVrrpVirBpr, staDhcpcWanNbnsd=staDhcpcWanNbnsd, setPerfoRttmonsJittersumnegds=setPerfoRttmonsJittersumnegds, staChannState=staChannState, staIprouFilteDstm=staIprouFilteDstm, staTcpipDhcpRxdec=staTcpipDhcpRxdec)
mibBuilder.exportSymbols("LANCOM-L310-MIB", staIprouRipDynlVlan=staIprouRipDynlVlan, staCalliEntry=staCalliEntry, staPppTxo=staPppTxo, trpCnfDnlStart=trpCnfDnlStart, staChannTable=staChannTable, setIprouRipIprTable=setIprouRipIprTable, setIprou1nnTable1nnaRem=setIprou1nnTable1nnaRem, setWlanNoiseoffseCha=setWlanNoiseoffseCha, setWanPollingEntry=setWanPollingEntry, setNetbiBroBro=setNetbiBroBro, staPppLcpTxechoreply=staPppLcpTxechoreply, setSnmpRegister=setSnmpRegister, setWlanRadiusacceResponsel=setWlanRadiusacceResponsel, staWlanStatioUserna=staWlanStatioUserna, setAccouCurTable=setAccouCurTable, staConfiLoginrej=staConfiLoginrej, setDhcpNetBroadcastb=setDhcpNetBroadcastb, setIprouRipFilEntry=setIprouRipFilEntry, setTcpipNetwoIpa=setTcpipNetwoIpa, setPerfoRttmonsJittermaxposds=setPerfoRttmonsJittermaxposds, staWlanWlanpaPhytype=staWlanWlanpaPhytype, setMail=setMail, setEchosAccPro=setEchosAccPro, staTcpipDhcpRxdis=staTcpipDhcpRxdis, setWlanNoiseimmunNoi=setWlanNoiseimmunNoi, setWlanMailaddres=setWlanMailaddres, staFilesConTable=staFilesConTable, staPppoeConMac=staPppoeConMac, staHardwPcidSubsyst=staHardwPcidSubsyst, setIprouFirFilteDstm=setIprouFirFilteDstm, staTcpipTftpWancon=staTcpipTftpWancon, staIprouFilteDstn=staIprouFilteDstn, staIeee8StaAuthi=staIeee8StaAuthi, setDhcpHosMac=setDhcpHosMac, staTcpipTcpWanser=staTcpipTcpWanser, staCertiSceCasIssued=staCertiSceCasIssued, staWlanChanneRadarp=staWlanChanneRadarp, setSnmpMonitortLan=setSnmpMonitortLan, staPppRxoIpcDnsde=staPppRxoIpcDnsde, setNetbiHosIpa=setNetbiHosIpa, staWlanInterpAccRxpack=staWlanInterpAccRxpack, staTcpipRadiussAcceTotalaccessacc=staTcpipRadiussAcceTotalaccessacc, staWlanRadiosModemload=staWlanRadiosModemload, setInterModAnswerc=setInterModAnswerc, staConfiLanactiv=staConfiLanactiv, setIeee8PorReauthe=setIeee8PorReauthe, staWlanClientIptranEntry=staWlanClientIptranEntry, setInterWlaClientmodesAdd=setInterWlaClientmodesAdd, setInterWlaNetworkNet=setInterWlaNetworkNet, staPppCcpRxconfigrequ=staPppCcpRxconfigrequ, setWlanRadarpatteThr=setWlanRadarpatteThr, staWlanInterpAccMaxamp=staWlanInterpAccMaxamp, setTcpipNetwoTable=setTcpipNetwoTable, staTcpipHttpDelete=staTcpipHttpDelete, staIprouWanrx=staIprouWanrx, staWlanWlanpaExceirp=staWlanWlanpaExceirp, setWlanRadiusaccePasswords=setWlanRadiusaccePasswords, staWlanScanreNetwor=staWlanScanreNetwor, setTimeUtc=setTimeUtc, staIprouOpenpFilt=staIprouOpenpFilt, staChannIsdnd=staChannIsdnd, staTcpipIpLanserviceerrors=staTcpipIpLanserviceerrors, setWlanRadiusacceBackuppro=setWlanRadiusacceBackuppro, staPppLcpTxcodereject=staPppLcpTxcodereject, staDslDslolExclusiv=staDslDslolExclusiv, staWlanmLastwlNam=staWlanmLastwlNam, setWanRouteriEntry=setWanRouteriEntry, setLcrTimSta=setLcrTimSta, staWanErrorsRxl3=staWanErrorsRxl3, setPerfoRttmonsJittercountposd=setPerfoRttmonsJittercountposd, setNetbiSerRtg=setNetbiSerRtg, setConfiCrontabTable=setConfiCrontabTable, staWlanStatioMacadd=staWlanStatioMacadd, staLanByteIfc=staLanByteIfc, staIprouRipDynlTxfi=staIprouRipDynlTxfi, staWlanErrorsSta=staWlanErrorsSta, staPppPppLcp=staPppPppLcp, setIprouIprMas=setIprouIprMas, staLanbrConDestadd=staLanbrConDestadd, staCertiSceRasStatus=staCertiSceRasStatus, staPppLcpRxconfignak=staPppLcpRxconfignak, staIprouLanfi=staIprouLanfi, staTcpipRadiuscAuthenticAccesscha=staTcpipRadiuscAuthenticAccesscha, setLanTracel=setLanTracel, staLanbrSpaRstpporPat=staLanbrSpaRstpporPat, staWlanStatioListen=staWlanStatioListen, staConfiEventlogSyste=staConfiEventlogSyste, staIprouVrrpVirVir=staIprouVrrpVirVir, setEchosAccNet=setEchosAccNet, staWlanPacketEntry=staWlanPacketEntry, staWlanPacketTxunica=staWlanPacketTxunica, staIprouFilteSst=staIprouFilteSst, setDnsDyndIpa=setDnsDyndIpa, staIprouRipDynwRxfi=staIprouRipDynwRxfi, othMan=othMan, staWlanInterpAccThroug=staWlanInterpAccThroug, setIprou1nnTable1nnaTable=setIprou1nnTable1nnaTable, staIprouConneFilt=staIprouConneFilt, setTcpipAliveRetryi=setTcpipAliveRetryi, setWanLayerL2op=setWanLayerL2op, staCertiSce=staCertiSce, staVlanNetTable=staVlanNetTable, staDhcpcWanDomai=staDhcpcWanDomai, staWlanChanneEntry=staWlanChanneEntry, setIprouFirHostbEntry=setIprouFirHostbEntry, setPerfoRttmonaFre=setPerfoRttmonaFre, staTcpipDhcpNetwoAdaption=staTcpipDhcpNetwoAdaption, staHardwTota=staHardwTota, setWanIplistIpadd=setWanIplistIpadd, setWanRadiusOpera=setWanRadiusOpera, setCertiSceSce=setCertiSceSce, staTcpipRadiussAccoClientsDropped=staTcpipRadiussAccoClientsDropped, staTcpipDnsHitlEntry=staTcpipDnsHitlEntry, staPppoeNum=staPppoeNum, setIprouRipIprVla=setIprouRipIprVla, setCertiSceCasLoopbackaddr=setCertiSceCasLoopbackaddr, staCertiSceRasIssued=staCertiSceRasIssued, staWlanInterpAccEfftxr=staWlanInterpAccEfftxr, setVlanPorTable=setVlanPorTable, staTcpipRadiussLogtEntry=staTcpipRadiussLogtEntry, staIprouActipRtg=staIprouActipRtg, setLcrHolDat=setLcrHolDat, setIprouRipLanRtgt=setIprouRipLanRtgt, setInterWlaClientmodesTxl=setInterWlaClientmodesTxl, staTcpipRadiussAccoTotalaccountdro=staTcpipRadiussAccoTotalaccountdro, staPppCcpRxresetreque=staPppCcpRxresetreque, staLanbrAddEntry=staLanbrAddEntry, staWanWantxdisc=staWanWantxdisc, staIprouVrrpRx=staIprouVrrpRx, staOpera=staOpera, staIprouOpenpSrca=staIprouOpenpSrca, staQueueDhcpcli=staQueueDhcpcli, staWlanStatioVlanid=staWlanStatioVlanid, setLcrTimFal=setLcrTimFal, staLanErroSta=staLanErroSta, staTcpipNetbiosNetwInt=staTcpipNetbiosNetwInt, staWlanStatio40mhzi=staWlanStatio40mhzi, staWlanLogtabTable=staWlanLogtabTable, staPppLcpRxterminatea=staPppLcpRxterminatea, staWlanInterpAccIndex=staWlanInterpAccIndex, staAccouCurConnt=staAccouCurConnt, setSnmpMonitortIpa=setSnmpMonitortIpa, staTcpipDnsHitlIpa=staTcpipDnsHitlIpa, othBoo=othBoo, setInterWlaInterpointsIfc=setInterWlaInterpointsIfc, staWlanSeenclMac=staWlanSeenclMac, setRadiuServeClientsIpnetw=setRadiuServeClientsIpnetw, setDhcpNetEndaddress=setDhcpNetEndaddress, setLcrTimPre=setLcrTimPre, setWlanSignalaver=setWlanSignalaver, staWlanStatioShortg=staWlanStatioShortg, setWanDslbroaPee=setWanDslbroaPee, staIprouRipLansProp=staIprouRipLansProp, staWlanmNetworWpave=staWlanmNetworWpave, setIprouRouSyn=setIprouRouSyn, staTcpipTcpLancon=staTcpipTcpLancon, setNetbiGroTable=setNetbiGroTable, staConfiDeleteva=staConfiDeleteva, setDnsDnsdTable=setDnsDnsdTable, setInterWlaInterpointsLin=setInterWlaInterpointsLin, staTcpipIpLanfragmentations=staTcpipIpLanfragmentations, setWlanRadiusaccoClientbrg=setWlanRadiusaccoClientbrg, setPerfoRttmonsJittermaxpossd=setPerfoRttmonsJittermaxpossd, setTimeDstTable=setTimeDstTable, setWanLayerWanl=setWanLayerWanl, staLanPackRxb=staLanPackRxb, staPppCcpTxconfigack=staPppCcpTxconfigack, setIprouRipWanRipa=setIprouRipWanRipa, setIprouFirConneEntry=setIprouFirConneEntry, setNetbiBroOsv=setNetbiBroOsv, setAccouLasMacad=setAccouLasMacad, setRadiuServeEap=setRadiuServeEap, setTcpipNetwoIpn=setTcpipNetwoIpn, staWlanWlanpaMinimumrate=staWlanWlanpaMinimumrate, setIprou1nnIpsectablCo=setIprou1nnIpsectablCo, setWlanIndooronly=setWlanIndooronly, staIprouRipWansPois=staIprouRipWansPois, setWlanNoiseimmunSpu=setWlanNoiseimmunSpu, staTcpipHttpAgentlAcc=staTcpipHttpAgentlAcc, staAccouAccConne=staAccouAccConne, setAccouAccConne=setAccouAccConne, setRadiuServeForwardservSec=setRadiuServeForwardservSec, staDslTxunic=staDslTxunic, staIprouFilteEntry=staIprouFilteEntry, staIprouRipErro=staIprouRipErro, staMailDel=staMailDel, setDnsReso=setDnsReso, staIprouVrrpEveSrc=staIprouVrrpEveSrc, setInterWlaRadiosettinBackgroundscan=setInterWlaRadiosettinBackgroundscan, setConfiCrontabDay=setConfiCrontabDay, staPppIpcRxcodereject=staPppIpcRxcodereject, staWlanSeenclAge=staWlanSeenclAge, setAccouAccRxkby=setAccouAccRxkby, setIprouRipWanRipt=setIprouRipWanRipt, staLanbrSpaRstpporFor=staLanbrSpaRstpporFor, setLanbrProIpnetw=setLanbrProIpnetw, staIprouRipIpriPee=staIprouRipIpriPee, setIprou1nnServicetaIntran=setIprou1nnServicetaIntran, staPppIpcRxconfigrequ=staPppIpcRxconfigrequ, setConfiSshauthTable=setConfiSshauthTable, staIprouActipEntry=staIprouActipEntry, staPppLcpRxprotocolre=staPppLcpRxprotocolre, setInterWlaRadiosettinAllow40mhz=setInterWlaRadiosettinAllow40mhz, staWlanWlanpaSupportsshorts=staWlanWlanpaSupportsshorts, staWanPackettraTxu=staWanPackettraTxu, setConfiAsserta=setConfiAsserta, staDhcpcLanEntry=staDhcpcLanEntry, staIprouPortbEntry=staIprouPortbEntry, setConfiAccesstTftp=setConfiAccesstTftp, setHttpRolVariablesTit=setHttpRolVariablesTit, setInterWlaRoamingSoftroaming=setInterWlaRoamingSoftroaming, staCertiSceRasEntry=staCertiSceRasEntry, setIprouOpe=setIprouOpe, setPppoeNamTable=setPppoeNamTable, staLanInteFlo=staLanInteFlo, setTimeDstDay=setTimeDstDay, staWlanStatioMaxams=staWlanStatioMaxams, staPppIpcTxconfigack=staPppIpcTxconfigack, staLanbrPorOpe=staLanbrPorOpe, staCertiSceCertsExpires=staCertiSceCertsExpires, staPppoeSes=staPppoeSes, setNtpRqaRqa=setNtpRqaRqa, staTcpipNetbiosDele=staTcpipNetbiosDele, staDhcpcLanDnsde=staDhcpcLanDnsde, staLanbrSpaPorttabSta=staLanbrSpaPorttabSta, trpCl_LostConn=trpCl_LostConn, staAccouLasConne=staAccouLasConne, staCertiSceRasIsssnm=staCertiSceRasIsssnm, staWlanStatioTable=staWlanStatioTable, staPppPppCcp=staPppPppCcp, staIprouArper=staIprouArper, setTimeFet=setTimeFet, staCertiSceNumca=staCertiSceNumca, staIprouQosRxblo=staIprouQosRxblo, setDhcpAliImagea=setDhcpAliImagea, setWanBackuppEntry=setWanBackuppEntry, setTcpipAliveFailli=setTcpipAliveFailli, setConfiSshauthIfc=setConfiSshauthIfc, staTcpipRadiussAccoActiveaccountinLastupda=staTcpipRadiussAccoActiveaccountinLastupda, staIprouVrrpVirVla=staIprouVrrpVirVla, staLanbrPorPor=staLanbrPorPor, setAccouAccPeer=setAccouAccPeer, setAccouDel=setAccouDel, staPppChaTxcha=staPppChaTxcha, staCertiSceRasExpsnm=staCertiSceRasExpsnm, staTcpipDnsErro=staTcpipDnsErro, staWlanmRadiopMgmtvlani=staWlanmRadiopMgmtvlani, setIprouFirFilteDst=setIprouFirFilteDst, setTimeDstMin=setTimeDstMin, staWlanmNetworSsidb=staWlanmNetworSsidb, staIprouConneTable=staIprouConneTable, setSyslo=setSyslo, setWanPollingIpaddress1=setWanPollingIpaddress1, trpHTTP_Tunnel_Close=trpHTTP_Tunnel_Close)
mibBuilder.exportSymbols("LANCOM-L310-MIB", setWanRouteriTyp=setWanRouteriTyp, setInterWlaNetworkClb=setInterWlaNetworkClb, setInterWlaInterpointsKey=setInterWlaInterpointsKey, setInterWlaClientmodesRxl=setInterWlaClientmodesRxl, setRadiuAuthr=setRadiuAuthr, staTcpipArpTablLas=staTcpipArpTablLas, setWlanSignalaverSta=setWlanSignalaverSta, setConfiUpdatecLastfir=setConfiUpdatecLastfir, setInterDslLan=setInterDslLan, staWlanScanreAge=staWlanScanreAge, setConfiUpdatecServern=setConfiUpdatecServern, setInterWlaRoamingMinconnecth=setInterWlaRoamingMinconnecth, setIprouVrrAdv=setIprouVrrAdv, staTcpipRadiussAcceTotalaccessunk=staTcpipRadiussAcceTotalaccessunk, staConfiScanresuName=staConfiScanresuName, staPppPapTxfai=staPppPapTxfai, staWlanNetworTable=staWlanNetworTable, staChargRouterd=staChargRouterd, staTcpipRadiussLogtInd=staTcpipRadiussLogtInd, setTcpipLoopbTable=setTcpipLoopbTable, setIprouFirFilteActi=setIprouFirFilteActi, staQueue=staQueue, setConfiMonitor=setConfiMonitor, staWlanStatioPhysig=staWlanStatioPhysig, staWlanClientInterfState=staWlanClientInterfState, staPptpConConnt=staPptpConConnt, setSnmpIptrapsTable=setSnmpIptrapsTable, staTcpipRadiussAccoActiveaccountinIpaddres=staTcpipRadiussAccoActiveaccountinIpaddres, staPppPppTable=staPppPppTable, staAccouLasPeer=staAccouLasPeer, setPerfoRttmonsJittersumpossd=setPerfoRttmonsJittersumpossd, setNetbiHosEntry=setNetbiHosEntry, staTcpipDhcpNetwoMasterserv=staTcpipDhcpNetwoMasterserv, setWanScriptsEntry=setWanScriptsEntry, setInterDslTable=setInterDslTable, staDslRxnoco=staDslRxnoco, staWlanErrorsRxa=staWlanErrorsRxa, staWlanClientPppoeuEntry=staWlanClientPppoeuEntry, setTimeGet=setTimeGet, setDhcpDhcTable=setDhcpDhcTable, setInterWlaNetworkMac=setInterWlaNetworkMac, staWlanWlanpaBeaconperiod=staWlanWlanpaBeaconperiod, setIprou1nnIpsectablRemotes=setIprou1nnIpsectablRemotes, staWlanChannePulsec=staWlanChannePulsec, staWlanStatioMacche=staWlanStatioMacche, setAccouAccTable=setAccouAccTable, staWlanPacketTxaggrf=staWlanPacketTxaggrf, setTcpipArptaIpa=setTcpipArptaIpa, staIprouServiPackettx=staIprouServiPackettx, staWlanBytetrMaxthr=staWlanBytetrMaxthr, setTcpipNbnsd=setTcpipNbnsd, setIprouFirFiltePrio=setIprouFirFiltePrio, setInterWlaEncryptionWpa1=setInterWlaEncryptionWpa1, staWlanClientPppoeuAge=staWlanClientPppoeuAge, staTcpipRadiussAccoClientsEntry=staTcpipRadiussAccoClientsEntry, setWanRoundroEntry=setWanRoundroEntry, setDhcpDef=setDhcpDef, staTimeDstTim=staTimeDstTim, setIprouFirOpenpFilt=setIprouFirOpenpFilt, setNetbiLea=setNetbiLea, setAccouAccEntry=setAccouAccEntry, setWlanAccessmode=setWlanAccessmode, setNetbiBroRtg=setNetbiBroRtg, staTcpipDhcpRxrel=staTcpipDhcpRxrel, staLcrMis=staLcrMis, staWlanNetworIfc=staWlanNetworIfc, setInterUmtIfc=setInterUmtIfc, staWlanCompet108mbp=staWlanCompet108mbp, staWlanCompetShortp=staWlanCompetShortp, staLanErroEntry=staLanErroEntry, setWlanRadarpatteTable=setWlanRadarpatteTable, staWlanCompet40mhzi=staWlanCompet40mhzi, setWanPptppeeEntry=setWanPptppeeEntry, setInterWlaClientmodesSca=setInterWlaClientmodesSca, setIprouRipLanProp=setIprouRipLanProp, setLcrHolTable=setLcrHolTable, setHttpRolRenumberv=setHttpRolRenumberv, staIprouOpenpTable=staIprouOpenpTable, staIprouRipVrrpNet=staIprouRipVrrpNet, staIprouRipWansTxfi=staIprouRipWansTxfi, setPerfoRttmonePacketcount=setPerfoRttmonePacketcount, staWlanCompetRadiob=staWlanCompetRadiob, setMailSmtps=setMailSmtps, setIprouRipParUpdd=setIprouRipParUpdd, staTcpipIpWantx=staTcpipIpWantx, setIprou1nnIpsectablEntry=setIprou1nnIpsectablEntry, staCertiSceCertsIssuer=staCertiSceCertsIssuer, staWlanIapptaNetwo=staWlanIapptaNetwo, staRemotMode=staRemotMode, staWlanInterpAccRxlimi=staWlanInterpAccRxlimi, setTcpipAliveTarget=setTcpipAliveTarget, staIprouActipGat=staIprouActipGat, staWlanRadiosIfc=staWlanRadiosIfc, staTcpipNetbiosRefr=staTcpipNetbiosRefr, staTcpipRadiussAcceTotalduplicate=staTcpipRadiussAcceTotalduplicate, staIprouRipLansDftr=staIprouRipLansDftr, staWanActionsLocEntry=staWanActionsLocEntry, trpAdmin_Deassoc=trpAdmin_Deassoc, staTcpipRadiussAccoTotalaccountnor=staTcpipRadiussAccoTotalaccountnor, staTcpipRadiussAcceClientsAccessrej=staTcpipRadiussAcceClientsAccessrej, setWlanRadiusacce=setWlanRadiusacce, staWlanPairwiEntry=staWlanPairwiEntry, setDnsServPor=setDnsServPor, staWlanWlanpaNoiselevel=staWlanWlanpaNoiselevel, setLanbrProIfclis=setLanbrProIfclis, staWlanClientPppoeiMac=staWlanClientPppoeiMac, staLanPackTxm=staLanPackTxm, setConfiCrontabVari=setConfiCrontabVari, setIeee8RadTable=setIeee8RadTable, staLanbrSpa=staLanbrSpa, setWlanArphandlin=setWlanArphandlin, staIprouRipTx=staIprouRipTx, firTabSiz=firTabSiz, staTcpipRadiuscAuthenticPendingre=staTcpipRadiuscAuthenticPendingre, staPppTxoIpcTable=staPppTxoIpcTable, staTimeCur=staTimeCur, setInterLanEntry=setInterLanEntry, setIprouRipFilFil=setIprouRipFilFil, staAccouLasTable=staAccouLasTable, staPppCcpTxconfignak=staPppCcpTxconfignak, staAccouCurMacad=staAccouCurMacad, staWlanGroupeInde=staWlanGroupeInde, setIprouFirAppliFtpMin=setIprouFirAppliFtpMin, setVlanNetVla=setVlanNetVla, staTcpipDhcpNetwoStartaddre=staTcpipDhcpNetwoStartaddre, setNetbiNetTable=setNetbiNetTable, setInterWlaEncryptionEncr=setInterWlaEncryptionEncr, staWlanmApconnIpad=staWlanmApconnIpad, setWanPppFai=setWanPppFai, setWanRoundroHea=setWanRoundroHea, setWanIplistNbnsd=setWanIplistNbnsd, setConfiResetbu=setConfiResetbu, setPerfoRttmonsRttsum=setPerfoRttmonsRttsum, setWanPollingPeer=setWanPollingPeer, setWlanAccesslistTxl=setWlanAccesslistTxl, setWlanRadiusacceBackupaut=setWlanRadiusacceBackupaut, staLanPackRxp=staLanPackRxp, staTcpipRadiussAccoCompletedaccounCalledst=staTcpipRadiussAccoCompletedaccounCalledst, staQueueWanheap=staQueueWanheap, staPppLcpDeletevalues=staPppLcpDeletevalues, staInfocSta=staInfocSta, setIprou1nnServicetaProtoc=setIprou1nnServicetaProtoc, setConfiAdminge=setConfiAdminge, staWlanmApconnStat=staWlanmApconnStat, staWlanmRadiopTxpowerre=staWlanmRadiopTxpowerre, staHardwSwve=staHardwSwve, setWanPollingIpaddress4=setWanPollingIpaddress4, setHttpUse=setHttpUse, staCalliCap=staCalliCap, setNtp=setNtp, staPppLcpTxdiscardreq=staPppLcpTxdiscardreq, setWlanAccesslistWpa=setWlanAccesslistWpa, setAccouLasPeer=setAccouLasPeer, staWlanStatioConnec=staWlanStatioConnec, setInterWlaEncryptionAuth=setInterWlaEncryptionAuth, setDhcpDhcLan=setDhcpDhcLan, setWlanRadiusacceBackuploo=setWlanRadiusacceBackuploo, setWlanSignalaverFilCoeVal=setWlanSignalaverFilCoeVal, staTcpipTftpLantxo=staTcpipTftpLantxo, setAccouTimTable=setAccouTimTable, setNetbiBroTable=setNetbiBroTable, setNetbiNetEntry=setNetbiNetEntry, staQueueSnmpque=staQueueSnmpque, staAccou=staAccou, setIprou1nnServicetaMappor=setIprou1nnServicetaMappor, setWlanNoiseoffseEntry=setWlanNoiseoffseEntry, staCurre=staCurre, staIprouRipDynwGate=staIprouRipDynwGate, staWlanSeenclInt=staWlanSeenclInt, staIprouLogtaEntry=staIprouLogtaEntry, staIprouLogtaDsta=staIprouLogtaDsta, staTcpipRadiussAcceClientsDuplicate=staTcpipRadiussAcceClientsDuplicate, staIprouOpenpDsta=staIprouOpenpDsta, staIprouServiKbytestx=staIprouServiKbytestx, staPppoeConCon=staPppoeConCon, staTcpipArpTablVla=staTcpipArpTablVla, staDslTxerro=staDslTxerro, staAccouCurConne=staAccouCurConne, setAccouLasTxkby=setAccouLasTxkby, setRadiuServeForwardservIpa=setRadiuServeForwardservIpa, staWanThroughpuIfc=staWanThroughpuIfc, trpBssStart=trpBssStart, staIprouServiKbytesrx=staIprouServiKbytesrx, staWlanPacketTable=staWlanPacketTable, staDhcpc=staDhcpc, staWlanmNetworShort=staWlanmNetworShort, staTcpipRadiuscAuthenticRoundtrip=staTcpipRadiuscAuthenticRoundtrip, setPerfoRttmonsPacketlossds=setPerfoRttmonsPacketlossds, staIprouRipIpriEntry=staIprouRipIpriEntry, staIprouRipDynwPois=staIprouRipDynwPois, staWlanClientInterfConnec=staWlanClientInterfConnec, othManDis=othManDis, staPpp=staPpp, staIprouRipVrrpTable=staIprouRipVrrpTable, staIprouRipVrrpEntry=staIprouRipVrrpEntry, staChargSpareds=staChargSpareds, setInterWlaPerformanceTxb=setInterWlaPerformanceTxb, staTcpipIpLanfragmentationsf=staTcpipIpLanfragmentationsf, staWlanmNetworTable=staWlanmNetworTable, setIprouFirConneDest=setIprouFirConneDest, setPerfoRttmoneEntry=setPerfoRttmoneEntry, staWanActionsLocRem=staWanActionsLocRem, setIprouFirActioTable=setIprouFirActioTable, trpHTTP_Tunnel_Open=trpHTTP_Tunnel_Open, staTcpipRadiussAccoClientsTable=staTcpipRadiussAccoClientsTable, staLanbrConDestmac=staLanbrConDestmac, staPppoeRxe=staPppoeRxe, staIprouConneProt=staIprouConneProt, setIprouFirHostbTable=setIprouFirHostbTable, setIprou1nnIpsectablLocalsp=setIprou1nnIpsectablLocalsp, staWlanStatioQos=staWlanStatioQos, setPerfoRttmonsRttmax=setPerfoRttmonsRttmax, staTcpipDhcpDhcptTable=staTcpipDhcpDhcptTable, setSysloSerEntry=setSysloSerEntry, staTcpipRadiussAccoActiveaccountinUpdatede=staTcpipRadiussAccoActiveaccountinUpdatede, setLanbrSpaPorEdg=setLanbrSpaPorEdg, staCertiSceRasSubjec=staCertiSceRasSubjec, staTcpipNetworkTyp=staTcpipNetworkTyp, setSnmpComment2=setSnmpComment2, setDhcp=setDhcp, staTcpipDhcpNetwoNetworknam=staTcpipDhcpNetwoNetworknam, staTcpipRadiussAccoCompletedaccounSessiont=staTcpipRadiussAccoCompletedaccounSessiont, staWlanInterpAccTxlimi=staWlanInterpAccTxlimi, staDhcpcLanDhcps=staDhcpcLanDhcps, staLanbrSpaPorttabPri=staLanbrSpaPorttabPri, setChargDaysper=setChargDaysper, staTcpipTcpLanser=staTcpipTcpLanser, setDhcpMax=setDhcpMax, setHttpFon=setHttpFon, staTcpipArpTablCon=staTcpipArpTablCon, setIprouFirIdsac=setIprouFirIdsac, staIprouWanfi=staIprouWanfi, staCertiSceRasKeyusa=staCertiSceRasKeyusa, setLanbrProDestma=setLanbrProDestma, setConfiScreenh=setConfiScreenh, staIprouWanne=staIprouWanne, staTcpipNetworkIpa=staTcpipNetworkIpa, staDslPppoeRxprot=staDslPppoeRxprot, staUmtsmCon=staUmtsmCon, setInterWlaGroupencrypTable=setInterWlaGroupencrypTable, setAccouLasConne=setAccouLasConne, staTimeDstDay=staTimeDstDay, setPppoeNamMac=setPppoeNamMac, staTcpipNetbios=staTcpipNetbios, staCertiSceCasName=staCertiSceCasName, staIprouQosRxres=staIprouQosRxres, staDhcpcLanTable=staDhcpcLanTable, staTcpipRadiuscAccountinTable=staTcpipRadiuscAccountinTable, staChannChan=staChannChan, setWanDslbroaSht=setWanDslbroaSht, setIprouFirAppliIrcChe=setIprouFirAppliIrcChe, setDnsDoma=setDnsDoma, staWanBytetransEntry=staWanBytetransEntry, staDhcpcWanEntry=staDhcpcWanEntry)
mibBuilder.exportSymbols("LANCOM-L310-MIB", setLcrTimDay=setLcrTimDay, staWanActionsActTim=staWanActionsActTim, staIprouEstabTable=staIprouEstabTable, oth=oth, staPptpConDnsba=staPptpConDnsba, setIprouRipIprNet=setIprouRipIprNet, staLcrProEntry=staLcrProEntry, setHttpRolOperating=setHttpRolOperating, staLanbrConSubprot=staLanbrConSubprot, setNetbiGroEntry=setNetbiGroEntry, staTimeDstEve=staTimeDstEve, staWlanmRadiomRadioc=staWlanmRadiomRadioc, staLanErroRxe=staLanErroRxe, setTime=setTime, setInterWlaBeaconingIfc=setInterWlaBeaconingIfc, setPppoePorEntry=setPppoePorEntry, staLanInteLin=staLanInteLin, staPptpEch=staPptpEch, setIprou1nnServicetaWanadd=setIprou1nnServicetaWanadd, staLanbr=staLanbr, staWlanCompetPhysig=staWlanCompetPhysig, staIprouEstabCou=staIprouEstabCou, setIprouFirFilteDend=setIprouFirFilteDend, staQueueIpurgen=staQueueIpurgen, setIprouFirRulesPri=setIprouFirRulesPri, staPppPppIpc=staPppPppIpc, staPppCcpTxresetreque=staPppCcpTxresetreque, setInterWlaRadiosettinMaximumdistance=setInterWlaRadiosettinMaximumdistance, setIprou1nnTable1nnaPro=setIprou1nnTable1nnaPro, setHttpRolVariablesInd=setHttpRolVariablesInd, staPppTxoIpcEntry=staPppTxoIpcEntry, setWanPptppeeRtg=setWanPptppeeRtg, firVerMod=firVerMod, staIprouProtoWan=staIprouProtoWan, staTcpipRadiuscInvalidac=staTcpipRadiuscInvalidac, staWlanPacketRxunica=staWlanPacketRxunica, setConfiTftpcliConfigadd=setConfiTftpcliConfigadd, setIprouRouL3l=setIprouRouL3l, staLayerLay1=staLayerLay1, staIprouPortbDsta=staIprouPortbDsta, setHttpDoc=setHttpDoc, setInterWlaRoamingConnecthold=setInterWlaRoamingConnecthold, staWlanCompetRate=staWlanCompetRate, staLanbrPorTable=staLanbrPorTable, staWlanErrorsRxe=staWlanErrorsRxe, staConfiScanresuRtgta=staConfiScanresuRtgta, setTcpipNetwoVla=setTcpipNetwoVla, setInterModEscapep=setInterModEscapep, setDnsLeas=setDnsLeas, setMailBuffe=setMailBuffe, staIprouFilteDst=staIprouFilteDst, setInterWlaRoamingForceroamin=setInterWlaRoamingForceroamin, staTcpipNetbiosWanr=staTcpipNetbiosWanr, staIprouActipTyp=staIprouActipTyp, staWlanWlanpaMaximumrate=staWlanWlanpaMaximumrate, staConfi=staConfi, staLcrProTable=staLcrProTable, setTcpipDnsba=setTcpipDnsba, setConfiUpdatecLastcon=setConfiUpdatecLastcon, setInterWlaBeaconingBeaconp=setInterWlaBeaconingBeaconp, setInterDslEntry=setInterDslEntry, staTimeDstMon=staTimeDstMon, staTcpipTftpLantx=staTcpipTftpLantx, setDhcpDhcTyp=setDhcpDhcTyp, setInterWlaInterpointsLoc=setInterWlaInterpointsLoc, setIprouDefTable=setIprouDefTable, staWlanInterpKeyTable=staWlanInterpKeyTable, staWlanClientInterfLinksi=staWlanClientInterfLinksi, staWlanSeenclNet=staWlanSeenclNet, setInterWlaBeaconingTable=setInterWlaBeaconingTable, staPppCcpRxconfigreje=staPppCcpRxconfigreje, setHttpRolVariablesDef=setHttpRolVariablesDef, staWlanRadiosTable=staWlanRadiosTable, staPppChaTxfai=staPppChaTxfai, setInterModEscapes=setInterModEscapes, staTcpipRadiussLogtTable=staTcpipRadiussLogtTable, setNetbiWan=setNetbiWan, staIprouRipLansPois=staIprouRipLansPois, staWanErrorsStac=staWanErrorsStac, setWanIplistEntry=setWanIplistEntry, staWlanInterpAccInterp=staWlanInterpAccInterp, staDhcpcLanNbnsd=staDhcpcLanNbnsd, staAccouTimSys=staAccouTimSys, setInterWlaClientmodesNet=setInterWlaClientmodesNet, staPppTxoLcpTable=staPppTxoLcpTable, staTcpipDhcpNetwoEndaddress=staTcpipDhcpNetwoEndaddress, staConfiLantotal=staConfiLantotal, staConnePass=staConnePass, staWlanClientInterfAid=staWlanClientInterfAid, setIprouFirFilteDstn=setIprouFirFilteDstn, setCertiSceCasIdentifier=setCertiSceCasIdentifier, staTcpipRadiussAcceTotalaccessrej=staTcpipRadiussAcceTotalaccessrej, staIprouRipWansGate=staIprouRipWansGate, staIprouActipPee=staIprouActipPee, staTcpipTftpWantxr=staTcpipTftpWantxr, staWlanNetworNum=staWlanNetworNum, staCertiSceCasStatus=staCertiSceCasStatus, setIprouRip=setIprouRip, staIprouRipDynwRtgt=staIprouRipDynwRtgt, setAccouCurRxkby=setAccouCurRxkby, setWlan=setWlan, staWlanInterfIfc=staWlanInterfIfc, staLanbrSpaRootbri=staLanbrSpaRootbri, setDhcpPorEna=setDhcpPorEna, staPppIpcRxconfignak=staPppIpcRxconfignak, staTcpipRadiuscAuthenticAccessacc=staTcpipRadiuscAuthenticAccessacc, setIprouRipIprTim=setIprouRipIprTim, staChannNumbe=staChannNumbe, setWlanSpareheap=setWlanSpareheap, setWlanmStaEntry=setWlanmStaEntry, staTcpipIcmpWant=staTcpipIcmpWant, staTcpipRadiussAccoActiveaccountinTable=staTcpipRadiussAccoActiveaccountinTable, staIprouVrrpMacEntry=staIprouVrrpMacEntry, staDslPppoeAcname=staDslPppoeAcname, setIprou1nnIpsectablLclo=setIprou1nnIpsectablLclo, setLanbrPorPor=setLanbrPorPor, trpReAssStation=trpReAssStation, setPppoePorEna=setPppoePorEna, staTcpipIpLantx=staTcpipIpLantx, setWlanRadiusacceRecheckcy=setWlanRadiusacceRecheckcy, staMailCle=staMailCle, staVlanOpe=staVlanOpe, setAccouAccMacad=setAccouAccMacad, setConfiTftpcliFirmwaref=setConfiTftpcliFirmwaref, setLanbrProPort=setLanbrProPort, staWlanErrorsTxe=staWlanErrorsTxe, staTcpipIcmpWanr=staTcpipIcmpWanr, staWanPackettraIfc=staWanPackettraIfc, setConfiSshauthEntry=setConfiSshauthEntry, trpFwUplStart=trpFwUplStart, staIprouEstabSou=staIprouEstabSou, setInterWlaGroupencrypKeytype4=setInterWlaGroupencrypKeytype4, setWlanSignalaverFilCt=setWlanSignalaverFilCt, trpDeAuthStation=trpDeAuthStation, setInterWlaPerformanceEntry=setInterWlaPerformanceEntry, setWanManualdDis=setWanManualdDis, staIeee8StaCommi=staIeee8StaCommi, staWlanScanreRadioc=staWlanScanreRadioc, staWlanRadiosEirp=staWlanRadiosEirp, staWlanScanreQos=staWlanScanreQos, staLanErroRxc=staLanErroRxc, staTcpipNetworkRtg=staTcpipNetworkRtg, staWlanmRadiopTable=staWlanmRadiopTable, staWlanCompetShorts=staWlanCompetShorts, staIeee8StaEntry=staIeee8StaEntry, staDslDslolGatewaym=staDslDslolGatewaym, setTcpipNetwoEntry=setTcpipNetwoEntry, staLanbrConSourcea=staLanbrConSourcea, setMailHoldt=setMailHoldt, setTimeDay=setTimeDay, setMailSenda=setMailSenda, staIprouQosRxreq=staIprouQosRxreq, staLayerLay3=staLayerLay3, setIprouFirAppli=setIprouFirAppli, setPppoeNamSht=setPppoeNamSht, setIprouFirOpenpDsta=setIprouFirOpenpDsta, setRadiuServeClientsTable=setRadiuServeClientsTable, setDhcpNetMasterserv=setDhcpNetMasterserv, staWlanChanneRemtim=staWlanChanneRemtim, staWlanWlanpaSupportsshortg=staWlanWlanpaSupportsshortg, setIprouFirRulesAct=setIprouFirRulesAct, staTcpipRadiuscAccountinTimeouts=staTcpipRadiuscAccountinTimeouts, setWanLayerEntry=setWanLayerEntry, setDnsFiltEntry=setDnsFiltEntry, staWlanLogtabInd=staWlanLogtabInd, staDhcpcWanIpnet=staDhcpcWanIpnet, setPerfoRttmonaTim=setPerfoRttmonaTim, staPppChaTxsuc=staPppChaTxsuc, setWanScriptsScr=setWanScriptsScr, staTcpipNetbiosNetwVla=staTcpipNetbiosNetwVla, setIprouFirRulesPro=setIprouFirRulesPro, setIprouFirAppliIrcMin=setIprouFirAppliIrcMin, setCertiSceCerName=setCertiSceCerName, setTcpip=setTcpip, staIprouRipIpriIpa=staIprouRipIpriIpa, setIprouFirFilteTable=setIprouFirFilteTable, staLanbrSpaRstpporLea=staLanbrSpaRstpporLea, staPppCcpRxconfigack=staPppCcpRxconfigack, staLanbrAddVla=staLanbrAddVla, staWlanInterpAccKeyhan=staWlanInterpAccKeyhan, staIprouLanro=staIprouLanro, trpAuthStation=trpAuthStation, staTcpipHttpActiveLocalho=staTcpipHttpActiveLocalho, staWlanStatioNetwor=staWlanStatioNetwor, staLanPackRxu=staLanPackRxu, staIprouQosTxfav=staIprouQosTxfav, setIprouFirFilteEntry=setIprouFirFilteEntry, setWanIncominTable=setWanIncominTable, staIprouOpenpEntry=staIprouOpenpEntry, staWlanStatioEffrxr=staWlanStatioEffrxr, setChargAdditio=setChargAdditio, staPppIpcTxconfigreje=staPppIpcTxconfigreje, staWanDeleteval=staWanDeleteval, staTcpipDnsNetb=staTcpipDnsNetb, staConfiEventlogIdx=staConfiEventlogIdx, setInterLanIfc=setInterLanIfc, staWanWanqueuem=staWanWanqueuem, staTcpipRadiussAcceTotalaccessdro=staTcpipRadiussAcceTotalaccessdro, setRadiuServeUsersTable=setRadiuServeUsersTable, setInterWlaEncryptionEntry=setInterWlaEncryptionEntry, staTcpipRadiussAccoCompletedaccounNasporti=staTcpipRadiussAccoCompletedaccounNasporti, setDnsOper=setDnsOper, staCertiSceCertsExtended=staCertiSceCertsExtended, staIprouFilteDsta=staIprouFilteDsta, staWlanmNetworSsid=staWlanmNetworSsid, staIprouVrrpVirMas=staIprouVrrpVirMas, staMailBuf=staMailBuf, setPerfoRttmonsJitterminposds=setPerfoRttmonsJitterminposds, setIprouFirObjecTable=setIprouFirObjecTable, staLanbrDhcSrc=staLanbrDhcSrc, staPppPapTxret=staPppPapTxret, setChargRouterd=setChargRouterd, staAccouLasRxkby=staAccouLasRxkby, staPppCcp=staPppCcp, setIeee8PorKeytran=setIeee8PorKeytran, staChargTimetabEntry=staChargTimetabEntry, staIprouRipDynlRipa=staIprouRipDynlRipa, setTcpipAlive=setTcpipAlive, setIeee8PorReauthi=setIeee8PorReauthi, setInterWlaRadiosettinTable=setInterWlaRadiosettinTable, staWlanWlanpaModemload=staWlanWlanpaModemload, staWanErrorsRxl2=staWanErrorsRxl2, setIprouRipLanRipt=setIprouRipLanRipt, setHttpRolActionsAct=setHttpRolActionsAct, staIprouHostbFil=staIprouHostbFil, setWanPptppeeTable=setWanPptppeeTable, staIprouVrrpVirPri=staIprouVrrpVirPri, staPppCcpRxterminater=staPppCcpRxterminater, setWanMtulistEntry=setWanMtulistEntry, staTcpipDhcpWanrx=staTcpipDhcpWanrx, setIprouVrrVrrEntry=setIprouVrrVrrEntry, staWlanRadiosBackgroundscanu=staWlanRadiosBackgroundscanu, staTcpipTftpWanrxb=staTcpipTftpWanrxb, setNetbiSerFla=setNetbiSerFla, setTcpipOpera=setTcpipOpera, setTcpipNetwoSrc=setTcpipNetwoSrc, staWlanStatioBytest=staWlanStatioBytest, staIprouRipLansEntry=staIprouRipLansEntry, setHttpRolVariablesMax=setHttpRolVariablesMax, setInterWlaRoamingEntry=setInterWlaRoamingEntry, setWanRouteriCli=setWanRouteriCli, setPerfoRttmoneDestinationa=setPerfoRttmoneDestinationa, setLan=setLan, setIprouFirPortbTable=setIprouFirPortbTable, setInterWlaClientmodesTable=setInterWlaClientmodesTable, staPppChaTxret=staPppChaTxret, staWlanScanrePhysig=staWlanScanrePhysig, setLanbrSpaPorPri=setLanbrSpaPorPri, staWlanClientInterfEntry=staWlanClientInterfEntry, staLcrTot=staLcrTot, setInterModEchooff=setInterModEchooff, setLanbrProName=setLanbrProName, staTcpipTcpWanche=staTcpipTcpWanche, setWanActiontActiv=setWanActiontActiv)
mibBuilder.exportSymbols("LANCOM-L310-MIB", setVlanPorPort=setVlanPorPort, staTcpipDhcpTxoff=staTcpipDhcpTxoff, staWlanInterpAccTxrate=staWlanInterpAccTxrate, staWlanCompetBeacon=staWlanCompetBeacon, staCertiSceCasIsssnm=staCertiSceCasIsssnm, setNetbiPeeNam=setNetbiPeeNam, setInterWlaTransmissioSend=setInterWlaTransmissioSend, setEchosAccAkt=setEchosAccAkt, staTcpipArpTablIpa=staTcpipArpTablIpa, setIprouFirAuthp=setIprouFirAuthp, staDhcpcLanDnsba=staDhcpcLanDnsba, setSnmpMonitortPor=setSnmpMonitortPor, setWanActiontPeer=setWanActiontPeer, setDhcpNetGatewayadd=setDhcpNetGatewayadd, staTcpipRadiussAccoTotalaccountres=staTcpipRadiussAccoTotalaccountres, setWanRoundroRou=setWanRoundroRou, staPptpDel=staPptpDel, setSysloOpe=setSysloOpe, setInterDslDow=setInterDslDow, setLanTracem=setLanTracem, setIprouVrrVrrPri=setIprouVrrVrrPri, setWanRadiusPppop=setWanRadiusPppop, staTcpipRadiussAcceClientsDropped=staTcpipRadiussAcceClientsDropped, setIprouRipWanRfc2=setIprouRipWanRfc2, staChargTimetabMinutesa=staChargTimetabMinutesa, staTcpipRadiussAccoCompletedaccounNasipadd=staTcpipRadiussAccoCompletedaccounNasipadd, setInterWlaOperationalEntry=setInterWlaOperationalEntry, setPerfoRttmonaTyp=setPerfoRttmonaTyp, staIprouServiPacketre=staIprouServiPacketre, setRadiuServeUsersPas=setRadiuServeUsersPas, staWlanPairwiInde=staWlanPairwiInde, setIprouVrrRec=setIprouVrrRec, setAccouDis=setAccouDis, staTcpipRadiussAccoCompletedaccounInputoct=staTcpipRadiussAccoCompletedaccounInputoct, setAccouCurConne=setAccouCurConne, staQueueDhcpser=staQueueDhcpser, staLanLanq=staLanLanq, staIprouLanne=staIprouLanne, setAccouCurConnt=setAccouCurConnt, setVlan=setVlan, staTcpipTftp=staTcpipTftp, staIprouPortbTable=staIprouPortbTable, staWlanmApconnResu=staWlanmApconnResu, setTcpipNetwoTyp=setTcpipNetwoTyp, staIprouEstabEntry=staIprouEstabEntry, setConfiAccesstEntry=setConfiAccesstEntry, fir=fir, staWlanInterpAccShortp=staWlanInterpAccShortp, staIprouRipDynlDftr=staIprouRipDynlDftr, setWanPppTer=setWanPppTer, staTcpipRadiussAccoActiveaccountinUsername=staTcpipRadiussAccoActiveaccountinUsername, staIprouLantx=staIprouLantx, staUmtsm=staUmtsm, setNetbiSerEntry=setNetbiSerEntry, staDslRxbyte=staDslRxbyte, setLanSpareh=setLanSpareh, staWlanScanrePcffun=staWlanScanrePcffun, setIprou1nnIpsectablRclo=setIprou1nnIpsectablRclo, setRadiuBacku=setRadiuBacku, staIprouActipIpn=staIprouActipIpn, setWlanRadiusaccoExcludedv=setWlanRadiusaccoExcludedv, staAccouLasTotal=staAccouLasTotal, staAccouLasTxkby=staAccouLasTxkby, staLanErroIfc=staLanErroIfc, setNetbiSerNet=setNetbiSerNet, setNtpRqt=setNtpRqt, staPppChaDelet=staPppChaDelet, setWanPptppeeIpa=setWanPptppeeIpa, setIprou=setIprou, setIprou1nnIpsectablLchi=setIprou1nnIpsectablLchi, staTcpipTftpWantx=staTcpipTftpWantx, setDnsDynaPor=setDnsDynaPor, staLanbrSpaBridgei=staLanbrSpaBridgei, trpLogin=trpLogin, staIprouConneSrca=staIprouConneSrca, setLanbrSpaBri=setLanbrSpaBri, staTcpipArpLane=staTcpipArpLane, setEchos=setEchos, setRadiuServeClientsSecret=setRadiuServeClientsSecret, staTcpipDhcpWantx=staTcpipDhcpWantx, staAccouAccRxkby=staAccouAccRxkby, staWlanPairwiKeyv=staWlanPairwiKeyv, staTcpipRadiussAccoCompletedaccounIndex=staTcpipRadiussAccoCompletedaccounIndex, staTcpipRadiuss=staTcpipRadiuss, setWlanNoiseimmunOfd=setWlanNoiseimmunOfd, staIprouFilteIdx=staIprouFilteIdx, staConneErro=staConneErro, staTcpipRadiussAccoCompletedaccounInputpac=staTcpipRadiussAccoCompletedaccounInputpac, staPppChaTxres=staPppChaTxres, staPppRxoLcpIfc=staPppRxoLcpIfc, staIprouQosTable=staIprouQosTable, staPptpTxp=staPptpTxp, setIprouFirConneSrcr=setIprouFirConneSrcr, staLanbrSpaRootpor=staLanbrSpaRootpor, setInterWlaGroupencrypKey4=setInterWlaGroupencrypKey4, staTcpipRadiuscAccountinIpaddress=staTcpipRadiuscAccountinIpaddress, staLanbrConIndex=staLanbrConIndex, staChannCause=staChannCause, staWlanClientPppoeuHostuniql=staWlanClientPppoeuHostuniql, staTcpipRadiuscAccountinAccountingret=staTcpipRadiuscAccountinAccountingret, staAccouAccPeer=staAccouAccPeer, setDnsServHos=setDnsServHos, staCertiSceCasKeyusa=staCertiSceCasKeyusa, setWlanm=setWlanm, setIeee8RadEntry=setIeee8RadEntry, staTcpipRadiuscAuthenticDropped=staTcpipRadiuscAuthenticDropped, staWlanNetworVla=staWlanNetworVla, setInterModResetco=setInterModResetco, staWlanClientInterfWpaver=staWlanClientInterfWpaver, staIprouVrrpEveInf=staIprouVrrpEveInf, staWlanmNetwor11bpr=staWlanmNetwor11bpr, setRadiuServeEapPea=setRadiuServeEapPea, setWlanNoiseimmun=setWlanNoiseimmun, staDslPppoeTxprot=staDslPppoeTxprot, staIprouHostbTim=staIprouHostbTim, staWlan=staWlan, setIeee8PorPort=setIeee8PorPort, staIprouRipIpriIpn=staIprouRipIpriIpn, setIprouRipIprGat=setIprouRipIprGat, setVlanPorAllow=setVlanPorAllow, setMailLoopb=setMailLoopb, staConfiOutbanda=staConfiOutbanda, setNetbiBroNet=setNetbiBroNet, staWlanScanre108mbp=staWlanScanre108mbp, staTcpipIp=staTcpipIp, staTcpipIpWanrxdisconnect=staTcpipIpWanrxdisconnect, staIprouQosTxreq=staIprouQosTxreq, setNetbiGroFla=setNetbiGroFla, staIprouWandi=staIprouWandi, staWlanScanreBssid=staWlanScanreBssid, setIprouFirOpenpTime=setIprouFirOpenpTime, trpSpGtReE_rStPsTaTcHg=trpSpGtReE_rStPsTaTcHg, setSnmpMonitortEntry=setSnmpMonitortEntry, setConfiWan=setConfiWan, staTcpipRadiussAccoCompletedaccounTable=staTcpipRadiussAccoCompletedaccounTable, setPerfoRttmonsAveragejittersd=setPerfoRttmonsAveragejittersd, staIprouHoconDst=staIprouHoconDst, setTcpipArptaPee=setTcpipArptaPee, staTcpipRadiussAccoCompletedaccounEntry=staTcpipRadiussAccoCompletedaccounEntry, setIprouVrrVrrTable=setIprouVrrVrrTable, staWlanErrorsNic=staWlanErrorsNic, staIprouRipDynwPeer=staIprouRipDynwPeer, setWanIplistTable=setWanIplistTable, setInterWlaInterpointpRec=setInterWlaInterpointpRec, setWlanRadiusacceBackupsec=setWlanRadiusacceBackupsec, setIprouFirActioNam=setIprouFirActioNam, staWlanErrorsUnd=staWlanErrorsUnd, staTcpipRadiussAccoActiveaccountinNasportt=staTcpipRadiussAccoActiveaccountinNasportt, staTcpipHttpHttppr=staTcpipHttpHttppr, setInterWlaOperationalOperatio=setInterWlaOperationalOperatio, staWlanmNetworVlant=staWlanmNetworVlant, setIprouFirFilteSrcm=setIprouFirFilteSrcm, staTcpipDnsDhcp=staTcpipDnsDhcp, trpUplFailTo=trpUplFailTo, staWlanStatioState=staWlanStatioState, staLanInteEntry=staLanInteEntry, staIprouRipDynlGate=staIprouRipDynlGate, setRadiuServeAccountingi=setRadiuServeAccountingi, staWlanInterfSerialnu=staWlanInterfSerialnu, staIprouConneDstp=staIprouConneDstp, setDnsSubdSub=setDnsSubdSub, staIprou=staIprou, staInfocTable=staInfocTable, staIprouRipDynlPois=staIprouRipDynlPois, setNtpRqaLoo=setNtpRqaLoo, staCertiSceCasEntry=staCertiSceCasEntry, staWlanInterpAccBytesm=staWlanInterpAccBytesm, staTcpipRadiuscAccountinUnknowntypes=staTcpipRadiuscAccountinUnknowntypes, setLanbrPorEntry=setLanbrPorEntry, setIprouFirOpenpSrca=setIprouFirOpenpSrca, staTcpipNetworkIpn=staTcpipNetworkIpn, setRadiuServeClientsProtoc=setRadiuServeClientsProtoc, staCertiSceCertsIdx=staCertiSceCertsIdx, staWlanmRadiopBackgroun=staWlanmRadiopBackgroun, staWlanStatioIdleti=staWlanStatioIdleti, staVlanNetEntry=staVlanNetEntry, staWlanClientPppoeiAge=staWlanClientPppoeiAge, staTcpipRadiussAccoActiveaccountinCallings=staTcpipRadiussAccoActiveaccountinCallings, staWlanmApconnPort=staWlanmApconnPort, staIprouRipIpriDis=staIprouRipIpriDis, staTcpipRadiuscInvalidau=staTcpipRadiuscInvalidau, staPppChaRxsuc=staPppChaRxsuc, setVlanNetEntry=setVlanNetEntry, setInterWlaNetworkTable=setInterWlaNetworkTable, staTcpipRadiuscAccountinPendingreques=staTcpipRadiuscAccountinPendingreques, staWanBytetransIfc=staWanBytetransIfc, setNetbiGroNet=setNetbiGroNet, staChannConnt=staChannConnt, staConfiFeaturesTable=staConfiFeaturesTable, setWanActiontTable=setWanActiontTable, staAccouCurRxkby=staAccouCurRxkby, staHardw=staHardw, staTcpipTftpWanrxd=staTcpipTftpWanrxd, staWlanmRadiop24ghzmode=staWlanmRadiop24ghzmode, staQueueProthea=staQueueProthea, setLcrTimNum=setLcrTimNum, staWlanClientInterfThroug=staWlanClientInterfThroug, staWanWanheappa=staWanWanheappa, staTcpipRadiussLogtTim=staTcpipRadiussLogtTim, staPppIpcRxterminatea=staPppIpcRxterminatea, staLanbrDhcPor=staLanbrDhcPor, setIprouFirConneSrca=setIprouFirConneSrca, setInterWlaTransmissioBasi=setInterWlaTransmissioBasi, staTcpipRadiussAccoCompletedaccounOutputoc=staTcpipRadiussAccoCompletedaccounOutputoc, staConneChar=staConneChar, staWlanStatioRxbyte=staWlanStatioRxbyte, staLanIeeeSupTable=staLanIeeeSupTable, setMailPassw=setMailPassw, staConfiWanactiv=staConfiWanactiv, staTcpipRadiussAccoCompletedaccounSessioni=staTcpipRadiussAccoCompletedaccounSessioni, setConfiCrontabEntry=setConfiCrontabEntry, staWlanInterpKeyInde=staWlanInterpKeyInde, setIprouDefEntry=setIprouDefEntry, setWanRouteriAcc=setWanRouteriAcc, staWlanmNetworMacfi=staWlanmNetworMacfi, staCalliTable=staCalliTable, setTimeDstEntry=setTimeDstEntry, setDhcpNetDnsbackup=setDhcpNetDnsbackup, staWlanCompetMaxamp=staWlanCompetMaxamp, staPppLcpRxechoreply=staPppLcpRxechoreply, staWlanScanreRadiob=staWlanScanreRadiob, setWanActiontEntry=setWanActiontEntry, setDhcpAddEntry=setDhcpAddEntry, staLanbrAddBri=staLanbrAddBri, setWanDslbroaVla=setWanDslbroaVla, staTcpipDnsHitlTable=staTcpipDnsHitlTable, staTcpipNetbiosWant=staTcpipNetbiosWant, staIprouVrrpDro=staIprouVrrpDro, staWlanCompetRadioc=staWlanCompetRadioc, staTcpipNetbiosRele=staTcpipNetbiosRele, setWanLayerTable=setWanLayerTable, staWanBytetransCrx=staWanBytetransCrx, staWlanErrorsSof=staWlanErrorsSof, staIprouWantx=staIprouWantx, staPppCcpTxconfigrequ=staPppCcpTxconfigrequ, setWanRadiusAuthp=setWanRadiusAuthp, setInterUmtEntry=setInterUmtEntry, setIprouDefSta=setIprouDefSta, setDhcpNetNbnsbackup=setDhcpNetNbnsbackup, setIprouFirAdmin=setIprouFirAdmin, setIprou1nnIpsectablNl=setIprou1nnIpsectablNl, setPerfoRttmonsIndex=setPerfoRttmonsIndex, staTimeDstEntry=staTimeDstEntry, setIprouRipParMaxh=setIprouRipParMaxh, setIeee8PorTxperio=setIeee8PorTxperio, staTimeDay=staTimeDay, staQueueTftpser=staQueueTftpser, setIprouIprDis=setIprouIprDis, staWlanStatioTxlimi=staWlanStatioTxlimi, staSnmpEveTable=staSnmpEveTable, setVlanTag=setVlanTag, staIprouRipFiltTyp=staIprouRipFiltTyp, setRadiuServeForwardservEntry=setRadiuServeForwardservEntry, staTcpipDhcpNetwoDnsdefault=staTcpipDhcpNetwoDnsdefault)
mibBuilder.exportSymbols("LANCOM-L310-MIB", staTcpipRadiuscAuthenticMalformed=staTcpipRadiuscAuthenticMalformed, setConfiCrontabActi=setConfiCrontabActi, setPppoePorPor=setPppoePorPor, setTimeDstInd=setTimeDstInd, staTcpipSyslogLasTim=staTcpipSyslogLasTim, staVlanPorTable=staVlanPorTable, setWlanRadiusaccoServeradd=setWlanRadiusaccoServeradd, staIprouRipWansRxfi=staIprouRipWansRxfi, setHttpTun=setHttpTun, staLanbrSpaPathcos=staLanbrSpaPathcos, staIprouLogtaThre=staIprouLogtaThre, staTcpipIpWanrx=staTcpipIpWanrx, setAccouTimType=setAccouTimType, setLanIeee80SupEntry=setLanIeee80SupEntry, setLanIeee80SupMet=setLanIeee80SupMet, staWlanmRadiomChanne=staWlanmRadiomChanne, staTcpipRadiuscAuthenticAccessret=staTcpipRadiuscAuthenticAccessret, setNetbiHosTable=setNetbiHosTable, staQueueWlanman=staQueueWlanman, setWanActiontLockt=setWanActiontLockt, staCertiSceCasMd5fin=staCertiSceCasMd5fin, staLanbrAddPor=staLanbrAddPor, setAccouCurTxkby=setAccouCurTxkby, setWanLayerLay3=setWanLayerLay3, staTcpipTftpWantxo=staTcpipTftpWantxo, staWlanInterfOperatio=staWlanInterfOperatio, staConfiScanresuHttps=staConfiScanresuHttps, setWlanRadiusaccoBackupacc=setWlanRadiusaccoBackupacc, staTcpipIpWanchecksumerrors=staTcpipIpWanchecksumerrors, setPppoe=setPppoe, staTcpipRadiussDele=staTcpipRadiussDele, staTcpipDhcpNetwoDnsbackup=staTcpipDhcpNetwoDnsbackup, setAccouAccTotal=setAccouAccTotal, staIprouRipLansTable=staIprouRipLansTable, staDhcpcLanIpnet=staDhcpcLanIpnet, staWlanStatioAid=staWlanStatioAid, staIprouLogtaTable=staIprouLogtaTable, staCertiSceCertsIssued=staCertiSceCertsIssued, staFilesConNam=staFilesConNam, setInterWlaRoamingIfc=setInterWlaRoamingIfc, staIprouRipDisc=staIprouRipDisc, staIprouEstabPro=staIprouEstabPro, setLanbrEncPro=setLanbrEncPro, setDnsDyndEntry=setDnsDyndEntry, setRadiuServeForwardservPor=setRadiuServeForwardservPor, setIprouFirOpenpSrcr=setIprouFirOpenpSrcr, setInterWlaTransmissioIfc=setInterWlaTransmissioIfc, staDhcpcWanDhcps=staDhcpcWanDhcps, staCertiSceCasIdx=staCertiSceCasIdx, staIprouRipWansMasq=staIprouRipWansMasq, staTcpipDnsHitlReq=staTcpipDnsHitlReq, staTcpipDhcpNetwoLanifc=staTcpipDhcpNetwoLanifc, staIprouVrrp=staIprouVrrp, setAccouCurEntry=setAccouCurEntry, staTcpipRadiussAcco=staTcpipRadiussAcco, staCertiSceCasIssuer=staCertiSceCasIssuer, setSysloFacSou=setSysloFacSou, setNetbiGroTyp=setNetbiGroTyp, setWlanIappprotoc=setWlanIappprotoc, setLanIeee80SupTable=setLanIeee80SupTable, staWlanScanreShorts=staWlanScanreShorts, setHttpPag=setHttpPag, setDnsDyndTable=setDnsDyndTable, setIprou1nnIpsectablLocalad=setIprou1nnIpsectablLocalad, firTabDat=firTabDat, setMailPop3p=setMailPop3p, staWlanmNetworMaxsp=staWlanmNetworMaxsp, staLanbrSpaRstpporPro=staLanbrSpaRstpporPro, staWlanScanreRate=staWlanScanreRate, staTcpipHttpAgentlEntry=staTcpipHttpAgentlEntry, staLanbrAddBrg=staLanbrAddBrg, firTabSta=firTabSta, setInterWlaGroupencrypIfc=setInterWlaGroupencrypIfc, setWanScriptsPee=setWanScriptsPee, staIprouQosPeer=staIprouQosPeer, staTcpipHttpActiveRemotea=staTcpipHttpActiveRemotea, staTcpipRadiussAccoActiveaccountinSessiont=staTcpipRadiussAccoActiveaccountinSessiont, staWlanmNetworMintx=staWlanmNetworMintx, staWlanStatioTxbyte=staWlanStatioTxbyte, staPppRxoIpcIfc=staPppRxoIpcIfc, staIprouRipDynwRipt=staIprouRipDynwRipt, staIprouServiKbytesre=staIprouServiKbytesre, staCalliCou=staCalliCou, setIeee8RadLoo=setIeee8RadLoo, staPppTxoIpcIfc=staPppTxoIpcIfc, setWlanRadarpattePat=setWlanRadarpattePat, setSnmpMonitortPee=setSnmpMonitortPee, setRadiuServeForwardservRea=setRadiuServeForwardservRea, setInterWlaGroupencrypKeytype3=setInterWlaGroupencrypKeytype3, setIprouRipParRout=setIprouRipParRout, setInterWlaRadiosettinIfc=setInterWlaRadiosettinIfc, staWlanWlanpaTemperatureran=staWlanWlanpaTemperatureran, setIprouFirPortbDstp=setIprouFirPortbDstp, staHardwPcidBus=staHardwPcidBus, setWanRouteriTable=setWanRouteriTable, staWlanmNetworSenda=staWlanmNetworSenda, staLanInteNeg=staLanInteNeg, setAccouTimInde=setAccouTimInde, setWanDialuppCal=setWanDialuppCal, staTcpipNetbiosLanr=staTcpipNetbiosLanr, setNetbiGroRtg=setNetbiGroRtg, setInterWlaRoamingConnectthre=setInterWlaRoamingConnectthre, staTcpipHttpHttpac=staTcpipHttpHttpac, setTcpipAliveTestin=setTcpipAliveTestin, staWlanmRadiomRadiom=staWlanmRadiomRadiom, setDhcpAddOptionv=setDhcpAddOptionv, staIprouHostbSrc=staIprouHostbSrc, staIprouFilteActi=staIprouFilteActi, staTcpipRadiussAcceClientsNasident=staTcpipRadiussAcceClientsNasident, staIprouServiPacketrx=staIprouServiPacketrx, staIprouFilteDend=staIprouFilteDend, staWlanmApconnName=staWlanmApconnName, setLcrHolEntry=setLcrHolEntry, staIprouQosTxres=staIprouQosTxres, staWlanmApconnId=staWlanmApconnId, setDnsSubdEntry=setDnsSubdEntry, staPppoeConSta=staPppoeConSta, staIprouRipLansRtgt=staIprouRipLansRtgt, setConfiSshport=setConfiSshport, setIprouIprEntry=setIprouIprEntry, staTcpipTcp=staTcpipTcp, setInterWlaRadiosettinRadiochannel=setInterWlaRadiosettinRadiochannel, setWlanAccesslistRxl=setWlanAccesslistRxl, staWlanClientInterfRxlimi=staWlanClientInterfRxlimi, setInterUmtOpe=setInterUmtOpe, staPppIpcRxconfigreje=staPppIpcRxconfigreje, staWanPackettraTable=staWanPackettraTable, setNtpRqi=setNtpRqi, trpUplFailIncl=trpUplFailIncl, setRadiuServeClientsIpnetm=setRadiuServeClientsIpnetm, staLayerLay2=staLayerLay2, setWlanNoisecalib=setWlanNoisecalib, trpCardHung=trpCardHung, setIprouFirActioDes=setIprouFirActioDes, staIprouRipRequ=staIprouRipRequ, setNetbiHosTim=setNetbiHosTim, staCertiSceRasExpire=staCertiSceRasExpire, staLayerEnca=staLayerEnca, staChannBus=staChannBus, staIprouLogtaSrcp=staIprouLogtaSrcp, staTcpipRadiuscAccountinEntry=staTcpipRadiuscAccountinEntry, setInterWlaRoamingNoroamingth=setInterWlaRoamingNoroamingth, staTcpipRadiussAccoCompletedaccounNasident=staTcpipRadiussAccoCompletedaccounNasident, staWlanWlanpaEntry=staWlanWlanpaEntry, staWlanmNetworEncry=staWlanmNetworEncry, staWlanScanreInterp=staWlanScanreInterp, staPppCcpCompressione=staPppCcpCompressione, staTcpipDhcpNetwoServerflag=staTcpipDhcpNetwoServerflag, staTcpipRadiussAcceClientsUnknownty=staTcpipRadiussAcceClientsUnknownty, staConneTable=staConneTable, staHardwFree=staHardwFree, setIprou1nnIpsecagin=setIprou1nnIpsecagin, setInterWlaTransmissioMaxs=setInterWlaTransmissioMaxs, setName=setName, setWanLayerEnca=setWanLayerEnca, staWlanCompetMaxams=staWlanCompetMaxams, setHttpRolActionsTable=setHttpRolActionsTable, staTcpipNetbiosPeerBac=staTcpipNetbiosPeerBac, staIprouVrrpDel=staIprouVrrpDel, staWlanInterpAccLinkph=staWlanInterpAccLinkph, staAccouTimTable=staAccouTimTable, setIprouIprPee=setIprouIprPee, staTcpipTftpLantxd=staTcpipTftpLantxd, setWlanNoiseoffseBan=setWlanNoiseoffseBan, staPppPapRxdis=staPppPapRxdis, setInterDslExt=setInterDslExt, staIprouConneFlag=staIprouConneFlag, staTcpipArpLant=staTcpipArpLant, trpBssScan=trpBssScan, staTcpipRadiuscAccountinRoundtriptime=staTcpipRadiuscAccountinRoundtriptime, setWanDialuppPee=setWanDialuppPee, staIprouServiTable=staIprouServiTable, staConfiEventlogAcces=staConfiEventlogAcces, setIprouRipIprRtg=setIprouRipIprRtg, setIprouFirConneFilt=setIprouFirConneFilt, setWlanRadiusaccoBackupser=setWlanRadiusaccoBackupser, setWanPptppeePor=setWanPptppeePor, staIprouConneSrcp=staIprouConneSrcp, setPerfoRttmoneInterval=setPerfoRttmoneInterval, setSnmp=setSnmp, staLanbrSpaPorttabTable=staLanbrSpaPorttabTable, staTcpipRadiuscAccountinAccountingres=staTcpipRadiuscAccountinAccountingres, staTcpipTftpLanrxo=staTcpipTftpLanrxo, setInterWlaEncryptionWpa2=setInterWlaEncryptionWpa2, staUmtsmOpe=staUmtsmOpe, staIprouRipIpriPor=staIprouRipIpriPor, setChargTimetabEntry=setChargTimetabEntry, setRadiuServeClientsEntry=setRadiuServeClientsEntry, staWlanScanreShortg=staWlanScanreShortg, setIprouRipWanRtgt=setIprouRipWanRtgt, staWlanCompetShortg=staWlanCompetShortg, staTcpipDhcpLantx=staTcpipDhcpLantx, setPerfoRttmonsJittermaxnegds=setPerfoRttmonsJittermaxnegds, staDslPppoeTxpadi=staDslPppoeTxpadi, staWanActionsLocInd=staWanActionsLocInd, staConfiScanresuDevic=staConfiScanresuDevic, staChargTimetabSparemin=staChargTimetabSparemin, staWlanmLastwlRou=staWlanmLastwlRou, staTcpipNetbiosLant=staTcpipNetbiosLant, staWlanErrorsDup=staWlanErrorsDup, staDslDslolGatewayi=staDslDslolGatewayi, staDhcpcWanDnsde=staDhcpcWanDnsde, staWlanWlanpaTkipsupport=staWlanWlanpaTkipsupport, setWanRoundroTable=setWanRoundroTable, setWanIncominPee=setWanIncominPee, staWlanClientInterfTxrate=staWlanClientInterfTxrate, staWlanmRadiopAntennaga=staWlanmRadiopAntennaga, setWlanAccesslistMac=setWlanAccesslistMac, staDslPppoeDelete=staDslPppoeDelete, staIprouRipWansDftr=staIprouRipWansDftr, setAccouCurUsern=setAccouCurUsern, staPppChaRxcha=staPppChaRxcha, setIprouFirRulesFir=setIprouFirRulesFir, setChargTimetabIfc=setChargTimetabIfc, staWlanClientPppoeuTable=staWlanClientPppoeuTable, setWlanAllowilleg=setWlanAllowilleg, staTcpipTftpLantxr=staTcpipTftpLantxr, staWlanInterpAccRxphys=staWlanInterpAccRxphys, staWlanInterpKeyTsc=staWlanInterpKeyTsc, staLcr=staLcr, setPerfoRttmonaSta=setPerfoRttmonaSta, trpWLanUnderTemp=trpWLanUnderTemp, staCharg=staCharg, setPerfoRttmonsJittercountnegd=setPerfoRttmonsJittercountnegd, staWlanmRadiomOperat=staWlanmRadiomOperat, setConfiLan=setConfiLan, setWanActiontIndex=setWanActiontIndex, staTcpipDns=staTcpipDns, setDhcpAliEntry=setDhcpAliEntry, staWlanInterpAcc40mhzm=staWlanInterpAcc40mhzm, staWlanSeenclSig=staWlanSeenclSig, setIprouFirRulesLin=setIprouFirRulesLin, staTcpipRadiuscAuthenticTimeouts=staTcpipRadiuscAuthenticTimeouts, setIprouRouL2l=setIprouRouL2l, setLanbrProPorten=setLanbrProPorten, setAccouOpe=setAccouOpe, setDhcpHosIpa=setDhcpHosIpa, setCertiSceCasCasignaturealg=setCertiSceCasCasignaturealg, setIprouIprAct=setIprouIprAct, setIprouRipIprIpa=setIprouRipIprIpa, staCertiSceCertsEntry=staCertiSceCertsEntry, staDhcpcWanGatew=staDhcpcWanGatew, setWlanInterstati=setWlanInterstati, staWlanWlanpaRxchains=staWlanWlanpaRxchains, staTcpipDhcpDhcptHos=staTcpipDhcpDhcptHos, staTcpipTftpWanrxa=staTcpipTftpWanrxa, staTcpipRadiuscAccountinPort=staTcpipRadiuscAccountinPort, setRadiuServeRadsecport=setRadiuServeRadsecport, staWlanScanre40mhzi=staWlanScanre40mhzi, staWlanInterpAccRxrate=staWlanInterpAccRxrate, staIprouVrrpVirSta=staIprouVrrpVirSta, staPptp=staPptp, setTcpipArptaVla=setTcpipArptaVla, staTcpipHttpAgentlAge=staTcpipHttpAgentlAge)
mibBuilder.exportSymbols("LANCOM-L310-MIB", staDslPppoeServic=staDslPppoeServic, staPppChaRxdis=staPppChaRxdis, setSysloSerLev=setSysloSerLev, setInterWlaRadiosettinChannellist=setInterWlaRadiosettinChannellist, staIprouVrrpOpe=staIprouVrrpOpe, staWlanClientInterfRxrate=staWlanClientInterfRxrate, staDslPppoeTxpadt=staDslPppoeTxpadt, staPppPppPha=staPppPppPha, staIprouLogtaActi=staIprouLogtaActi, staCertiSceCertsSubjecta=staCertiSceCertsSubjecta, setDhcpNetNetmask=setDhcpNetNetmask, setWanPptppeeSht=setWanPptppeeSht, setLanbrSpaPorPat=setLanbrSpaPorPat, setInterWlaRoamingRoamingthre=setInterWlaRoamingRoamingthre, traps=traps, staIprouLogtaIdx=staIprouLogtaIdx, staWlanBytetrTable=staWlanBytetrTable, staIprouConneTime=staIprouConneTime, staLanbrConProtoco=staLanbrConProtoco, setAccouCurTotal=setAccouCurTotal, setLanbrSpaMax=setLanbrSpaMax, staPppPapRxfai=staPppPapRxfai, staWlanInterfTable=staWlanInterfTable, staWlanRadiosNoiselevel=staWlanRadiosNoiselevel, setIeee8RadIpa=setIeee8RadIpa, staIprouQosUpstr=staIprouQosUpstr, staCertiSceCertsExpsnmp=staCertiSceCertsExpsnmp, staIprouActipMas=staIprouActipMas, staPppRxoIpcNbnsd=staPppRxoIpcNbnsd, staIprouPortbFilt=staIprouPortbFilt, setWanActiontActio=setWanActiontActio, staWlanClientInterfBytesm=staWlanClientInterfBytesm, setPerfoRttmoneIndex=setPerfoRttmoneIndex, setWanActiontHostn=setWanActiontHostn, setIeee8PorSupptim=setIeee8PorSupptim, staTcpipRadiussAccoCompletedaccounTerminat=staTcpipRadiussAccoCompletedaccounTerminat, staCertiSceNumce=staCertiSceNumce, setPerfoRttmoneDestinationp=setPerfoRttmoneDestinationp, staPppoeConPee=staPppoeConPee, staIprouFilteLink=staIprouFilteLink, setSysloSerSou=setSysloSerSou, staWlanmLastwlMgm=staWlanmLastwlMgm, setInterWlaTransmissio11bp=setInterWlaTransmissio11bp, staPppRxoIpcNbnsb=staPppRxoIpcNbnsb, staTcpipArpWane=staTcpipArpWane, setIprouFirConneTable=setIprouFirConneTable, staDslRxunic=staDslRxunic, staTcpipArpWanr=staTcpipArpWanr, setDnsNetb=setDnsNetb, setWanPppCon=setWanPppCon, setIprouFirFilteRtgt=setIprouFirFilteRtgt, staTcpipIcmpLanr=staTcpipIcmpLanr, staWanErrorsRxl1=staWanErrorsRxl1, staTcpipRadiuscAccountinMalformedacco=staTcpipRadiuscAccountinMalformedacco, staWlanStatioLastev=staWlanStatioLastev, setSysloFacTable=setSysloFacTable, setWanDslbroaMac=setWanDslbroaMac, setSnmpComment4=setSnmpComment4, setConfiAccesstSsh=setConfiAccesstSsh, staIprouL4err=staIprouL4err, setConfiAdminsAcc=setConfiAdminsAcc, setPerfoRttmonsTable=setPerfoRttmonsTable, staTimeSet=staTimeSet, setIprouRipLanTxfi=setIprouRipLanTxfi, staTcpipNetbiosGrou=staTcpipNetbiosGrou, firTim=firTim, staConneActi=staConneActi, setWlanNoiseoffseInt=setWlanNoiseoffseInt, setSnmpIptrapsTra=setSnmpIptrapsTra, staLanbrSpaRootpat=staLanbrSpaRootpat, staWlanmNetworMaxht=staWlanmNetworMaxht, setDnsDyndTim=setDnsDyndTim, setWanPollingIpaddress2=setWanPollingIpaddress2, staPppLcpTxterminater=staPppLcpTxterminater, staDslDslolIpnetmas=staDslDslolIpnetmas, trpCl_AssocFail=trpCl_AssocFail, staTcpipRadiussAcceClientsAccessacc=staTcpipRadiussAcceClientsAccessacc, setWanPppTable=setWanPppTable, setIprou1nnTable1nnaHan=setIprou1nnTable1nnaHan, setLanbrPorDhc=setLanbrPorDhc, setCertiSceRet=setCertiSceRet, staWlanClientInterfStatio=staWlanClientInterfStatio, staWlanStatioRxrate=staWlanStatioRxrate, staLanIeeeSupSta=staLanIeeeSupSta, setIprouFirOpenpProt=setIprouFirOpenpProt, setWanRouteriMsn=setWanRouteriMsn, staWlanClientPppoeiTable=staWlanClientPppoeiTable, staIprouRipRx=staIprouRipRx, staWlanCompetBssid=staWlanCompetBssid, trpVrrp=trpVrrp, staAccouDel=staAccouDel, staIprouLogtaSyst=staIprouLogtaSyst, staWlanClientIptranTable=staWlanClientIptranTable, staWlanErrorsRxc=staWlanErrorsRxc, setIeee8PorMaxreq=setIeee8PorMaxreq, staIprouRipWansPeer=staIprouRipWansPeer, setDnsFiltDom=setDnsFiltDom, setVlanPorEntry=setVlanPorEntry, staTcpipIpWanserviceerrors=staTcpipIpWanserviceerrors, staIprouOpenpSrcr=staIprouOpenpSrcr, staWlanScanreShortp=staWlanScanreShortp, staPppChaRxfai=staPppChaRxfai, setIprouFirActioEntry=setIprouFirActioEntry, staWlanmNetworOpera=staWlanmNetworOpera, staWlanIapptaIpadd=staWlanIapptaIpadd, setConfiCrontabOwne=setConfiCrontabOwne, setWlanNoiseoffseVal=setWlanNoiseoffseVal, staIprouHoconTim=staIprouHoconTim, staCalliDia=staCalliDia, setLanbrSpaPro=setLanbrSpaPro, staIprouRipDynwTxfi=staIprouRipDynwTxfi, setLanbrSpaHel=setLanbrSpaHel, staTcpipRadiussAcceTotalmalformed=staTcpipRadiussAcceTotalmalformed, staTcpipRadiussAcceTotalaccessbad=staTcpipRadiussAcceTotalaccessbad, staHardwPcidEntry=staHardwPcidEntry, setWlanSignalaverFil=setWlanSignalaverFil, staWlanInterpKeyEntry=staWlanInterpKeyEntry, staIprouWanty=staIprouWanty, setIprouVrrVrrVir=setIprouVrrVrrVir, staWlanRadiusEntry=staWlanRadiusEntry, staPppLcpRxconfigack=staPppLcpRxconfigack, setNetbiHosNam=setNetbiHosNam, setLanbrProDhcpsr=setLanbrProDhcpsr, staWlanCompetNonerp=staWlanCompetNonerp, staIprouRipDynlRxfi=staIprouRipDynlRxfi, setRadiuServeEapRet=setRadiuServeEapRet, staAccouAccEntry=staAccouAccEntry, staPppLcpTxconfigack=staPppLcpTxconfigack, setInterWlaClientmodesPre=setInterWlaClientmodesPre, setIprouFirConneProt=setIprouFirConneProt, staWlanBytetrBytesm=staWlanBytetrBytesm, staWlanClientInterfMaxamp=staWlanClientInterfMaxamp, setInterDslMod=setInterDslMod, staDhcpcLanNbnsb=staDhcpcLanNbnsb, staLanInteCon=staLanInteCon, staCertiSceCertsName=staCertiSceCertsName, setChargRouters=setChargRouters, staWlanPairwiKeyt=staWlanPairwiKeyt, setIprouVrrInt=setIprouVrrInt, setInterWlaRoamingMinconnects=setInterWlaRoamingMinconnects, staDslTxpack=staDslTxpack, setCertiSceDev=setCertiSceDev, setChargSpservere=setChargSpservere, setWanLayerLay2=setWanLayerLay2, staTcpipNetbiosPnod=staTcpipNetbiosPnod, staWlanmNetworWpase=staWlanmNetworWpase, staWan=staWan, staLanIeee=staLanIeee, staPptpRxp=staPptpRxp, setIprou1nnIcmpaging=setIprou1nnIcmpaging, staWlanClientInterfTable=staWlanClientInterfTable, staIeee8=staIeee8, setCertiSceCasEncalg=setCertiSceCasEncalg, setIprouEnd=setIprouEnd, staIprouRipDynwRfc2=staIprouRipDynwRfc2, staWanActionsActRes=staWanActionsActRes, setWlanAccesslistVla=setWlanAccesslistVla, setIeee8PorQuietpe=setIeee8PorQuietpe, staCalliCli=staCalliCli, staDslPppoeRxbad=staDslPppoeRxbad, staIprouVrrpVirNet=staIprouVrrpVirNet, setWanManuald=setWanManuald, setDnsDnslHos=setDnsDnslHos, setNtpBcm=setNtpBcm, trpCl_802_1x_Fail=trpCl_802_1x_Fail, setConfiCrashme=setConfiCrashme, staTcpipTcpLantx=staTcpipTcpLantx, setWlanRadiusaccoBackuppro=setWlanRadiusaccoBackuppro, setNetbiSerGro=setNetbiSerGro, setTcpipAliveBootty=setTcpipAliveBootty, staTcpipRadiussAccoActiveaccountinInputpac=staTcpipRadiussAccoActiveaccountinInputpac, staTcpipSyslogLasIdx=staTcpipSyslogLasIdx, setConfiAdminsTable=setConfiAdminsTable, setInterDslTyp=setInterDslTyp, staTcpipRadiuscAuthenticTable=staTcpipRadiuscAuthenticTable, staLanbrSpaRstpporDes=staLanbrSpaRstpporDes, setCertiSceCasRaautoapprove=setCertiSceCasRaautoapprove, staIprouFiltePrio=staIprouFiltePrio, staWlanClientInterfMaxthr=staWlanClientInterfMaxthr, staTcpipTftpWanrxw=staTcpipTftpWanrxw, staHardwPcidIndex=staHardwPcidIndex, staFilesConSiz=staFilesConSiz, staTcpipTftpWantxd=staTcpipTftpWantxd, setNetbiGroIpa=setNetbiGroIpa, setLanbrPorTable=setLanbrPorTable, staDhcpcLanIfc=staDhcpcLanIfc, staWlanErrorsRet=staWlanErrorsRet, staWlanGroupeKeyv=staWlanGroupeKeyv, setHttpErr=setHttpErr, setSysloFacFac=setSysloFacFac, staAccouCurPeer=staAccouCurPeer, staTcpipRadiussAccoClientsBadauthent=staTcpipRadiussAccoClientsBadauthent, staTcpipDhcpNetwoTable=staTcpipDhcpNetwoTable, staConfiScanresuState=staConfiScanresuState, setWlanAccesslistNam=setWlanAccesslistNam, setIprou1nnUdpagings=setIprou1nnUdpagings, staLcrNot=staLcrNot, staTcpipRadiuscAccountinBadauthentica=staTcpipRadiuscAccountinBadauthentica, staWlanIapptaEntry=staWlanIapptaEntry, staChargSpareda=staChargSpareda, staVlanNetPor=staVlanNetPor, setNetbiHosFla=setNetbiHosFla, staWlanWlanpaRadioband=staWlanWlanpaRadioband, staTcpipHttpActiveRemotep=staTcpipHttpActiveRemotep, staTimeSou=staTimeSou, staWlanmNetworEntry=staWlanmNetworEntry, setInterMod=setInterMod, setConfiCrontabMinu=setConfiCrontabMinu, staTcpipRadiussAccoActiveaccountinIndex=staTcpipRadiussAccoActiveaccountinIndex, staWlanmRadiopDtimperio=staWlanmRadiopDtimperio, staConfiScanresuIpadd=staConfiScanresuIpadd, staIprouPortbTime=staIprouPortbTime, staWlanLogtabRea=staWlanLogtabRea, setInterWlaNetworkEntry=setInterWlaNetworkEntry, staChannApp=staChannApp, setInterWlaTransmissioSoft=setInterWlaTransmissioSoft, staPppRxoIpcEntry=staPppRxoIpcEntry, staIprouRipLansRxfi=staIprouRipLansRxfi, setWanPollingTime=setWanPollingTime, setTcpipAccesEntry=setTcpipAccesEntry, setNetbiGroGro=setNetbiGroGro, staIprouProtoTable=staIprouProtoTable, setIprouNnnMapp=setIprouNnnMapp, setConfiTftpcli=setConfiTftpcli, staSnmpEveCou=staSnmpEveCou, staTcpipRadiuscAccountinLastrequest=staTcpipRadiuscAccountinLastrequest, staWlanBytetrThroug=staWlanBytetrThroug, setInterModRingcou=setInterModRingcou, staWlanClientInterfIdenti=staWlanClientInterfIdenti, staCertiSceDelet=staCertiSceDelet, setPerfoRttmonaInd=setPerfoRttmonaInd, staLanbrSpaRstpporEdg=staLanbrSpaRstpporEdg, setWlanRadiusacceProvidese=setWlanRadiusacceProvidese, trpKeyhandshake_Timeout=trpKeyhandshake_Timeout, setIprouFirHostbTim=setIprouFirHostbTim, staWlanForeigEntry=staWlanForeigEntry, staIprouFilteSrcn=staIprouFilteSrcn, setWanBackuppPee=setWanBackuppPee, setIprouFirPortbTime=setIprouFirPortbTime, setIeee8=setIeee8, staWlanWlanpaSupportsshortp=staWlanWlanpaSupportsshortp, staPppoeConSht=staPppoeConSht, trpCnfUplStart=trpCnfUplStart, setPerfoRttmonsEntry=setPerfoRttmonsEntry, staIprouRipDynwEntry=staIprouRipDynwEntry, staWlanInterp=staWlanInterp, staWlanPairwiRsc=staWlanPairwiRsc, setWlanSupervises=setWlanSupervises, staWlanScanreNonerp=staWlanScanreNonerp, setIprouFirFilteSrca=setIprouFirFilteSrca, staTcpipDhcpMacco=staTcpipDhcpMacco, staTcpipNetbiosNetwTable=staTcpipNetbiosNetwTable, staSnmp=staSnmp, staQueueWanqueu=staQueueWanqueu)
mibBuilder.exportSymbols("LANCOM-L310-MIB", staAccouLasConnt=staAccouLasConnt, setHttpRolRenumbera=setHttpRolRenumbera, setNtpSer=setNtpSer, setIprouRipLanNetw=setIprouRipLanNetw, setIprouFirOpenpDstp=setIprouFirOpenpDstp, setRadiuServeForwardservLoo=setRadiuServeForwardservLoo, staTcpipRadiussAccoActiveaccountinNasident=staTcpipRadiussAccoActiveaccountinNasident, staIprouRipFiltIpa=staIprouRipFiltIpa, setIprouFirFilteSrcn=setIprouFirFilteSrcn, staWanActionsActTable=staWanActionsActTable, staTcpipRadiussAccoTotalaccountreq=staTcpipRadiussAccoTotalaccountreq, staIprouFilteSrcm=staIprouFilteSrcm, staInfocDia=staInfocDia, staWanMtuTable=staWanMtuTable, setWanDslbroaWan=setWanDslbroaWan, staLcrProPro=staLcrProPro, setAccouTimDay=setAccouTimDay, setConfiLedtest=setConfiLedtest, setPerfoRttmonsAveragejitterds=setPerfoRttmonsAveragejitterds, setTcpipAccesIpa=setTcpipAccesIpa, staLayerL1pa=staLayerL1pa, setInterUmtTable=setInterUmtTable, staLanbrSpaRstpporRol=staLanbrSpaRstpporRol, staCertiSceCertsIsssnmp=staCertiSceCertsIsssnmp, staTcpipRadiussAccoActiveaccountinSessioni=staTcpipRadiussAccoActiveaccountinSessioni, setDhcpNetBroadcasta=setDhcpNetBroadcasta, staAccouLasEntry=staAccouLasEntry, staIprouRipFiltIdx=staIprouRipFiltIdx, staWlanErrorsMul=staWlanErrorsMul, staLanErroCol=staLanErroCol, setNetbiHosPee=setNetbiHosPee, staWlanStatioShortp=staWlanStatioShortp, staPppoeConCha=staPppoeConCha, setIprou1nnServicetaCommen=setIprou1nnServicetaCommen, setChargTimetabMinutesa=setChargTimetabMinutesa, staIprouLogtaDstp=staIprouLogtaDstp, setTimeDstMon=setTimeDstMon, staPptpConTable=staPptpConTable, staWlanNetworEntry=staWlanNetworEntry, setPppoeSer=setPppoeSer, setAccouAccConnt=setAccouAccConnt, setDhcpNetDnsdefault=setDhcpNetDnsdefault, staLcrProSuc=staLcrProSuc, staHardwPcidDevicei=staHardwPcidDevicei, staChannPlci=staChannPlci, setNetbiSerIpa=setNetbiSerIpa, staWanBytetransCtx=staWanBytetransCtx, setConfiAdminsEntry=setConfiAdminsEntry, setIprouRipLanPois=setIprouRipLanPois, staWlanSeenclRxp=staWlanSeenclRxp, staTcpipHttpActiveNumconn=staTcpipHttpActiveNumconn, staLanInteQue=staLanInteQue, staRemotCharg=staRemotCharg, setConfiAccesstTelnets=setConfiAccesstTelnets, setRadiuServe=setRadiuServe, setTcpipDnsde=setTcpipDnsde, staIprouRipVrrpRip=staIprouRipVrrpRip, staPppTxoLcpMru=staPppTxoLcpMru, setTcpipArptaTable=setTcpipArptaTable, staCalliSys=staCalliSys, staChargSpservere=staChargSpservere, setCertiSceCac=setCertiSceCac, staWlanErrorsIfc=staWlanErrorsIfc, staChannCharg=staChannCharg, staDslNicerr=staDslNicerr, setPerfoRttmonsJitterminnegds=setPerfoRttmonsJitterminnegds, staTcpipNetbiosPeerTyp=staTcpipNetbiosPeerTyp, staIprouRipIpriTim=staIprouRipIpriTim, staWlanStatioBytesm=staWlanStatioBytesm, staWlanClientInterfEffrxr=staWlanClientInterfEffrxr, staTcpipNetbiosMnod=staTcpipNetbiosMnod, staTcpipDnsHitlDom=staTcpipDnsHitlDom, staLanByteTable=staLanByteTable, setWlanSignalaverFilCoeInd=setWlanSignalaverFilCoeInd, setIprou1nnIpsectablFlags=setIprou1nnIpsectablFlags, staWlanCompetSignal=staWlanCompetSignal, staQueueIprripq=staQueueIprripq, staIprouRipLansRipa=staIprouRipLansRipa, staIprouVrrpEveIdx=staIprouVrrpEveIdx, setInterWlaOperationalTable=setInterWlaOperationalTable, staAccouCurEntry=staAccouCurEntry, setIprouRipWanTxfi=setIprouRipWanTxfi, setDnsDynaEntry=setDnsDynaEntry, setIprouIprIpn=setIprouIprIpn, firTabPos=firTabPos, staWlanInterpKeyKeyt=staWlanInterpKeyKeyt, staPppLcp=staPppLcp, setIeee8PorKeytxin=setIeee8PorKeytxin, staLanbrSpaPorttabEntry=staLanbrSpaPorttabEntry, setWanPppRig=setWanPppRig, staWlanInterpAccMacadd=staWlanInterpAccMacadd, staRemotEntry=staRemotEntry, setDhcpPorTable=setDhcpPorTable, setNetbiBroPee=setNetbiBroPee, staIprouQosFragm=staIprouQosFragm, staWanThroughpuEntry=staWanThroughpuEntry, staLanbrSpaPorttabDes=staLanbrSpaPorttabDes, setInter=setInter, staAccouAccTxkby=staAccouAccTxkby, staIprouRipFiltTable=staIprouRipFiltTable, setDhcpHosIma=setDhcpHosIma, staTcpipRadiuscAccountinDropped=staTcpipRadiuscAccountinDropped, setConfiWlancon=setConfiWlancon, staConfiScanresuEntry=staConfiScanresuEntry, staQueueLanheap=staQueueLanheap, setLanbrProTable=setLanbrProTable, setLcr=setLcr, setInterWlaRadiosettinEntry=setInterWlaRadiosettinEntry, setConfiCrontabMont=setConfiCrontabMont, setPerfoRttmonaTable=setPerfoRttmonaTable, staQueueIcmpque=staQueueIcmpque, staTcpipArpTablEntry=staTcpipArpTablEntry, staTcpipTcpLanrx=staTcpipTcpLanrx, setCertiSceCerDevicece=setCertiSceCerDevicece, setIprou1nnServicetaDportf=setIprou1nnServicetaDportf, staDhcpcWanDnsba=staDhcpcWanDnsba, staWlanCompetAge=staWlanCompetAge, staIprouDelet=staIprouDelet, setIprouFir=setIprouFir, staWlanWlanpaTxchains=staWlanWlanpaTxchains, staIprouRip=staIprouRip, setWanRadiusClipp=setWanRadiusClipp, setInterWlaClientmodesCon=setInterWlaClientmodesCon, staFiles=staFiles, setWlanRadiusacco=setWlanRadiusacco, setNtpRqaEntry=setNtpRqaEntry, staTcpipNetbiosNetwRtg=staTcpipNetbiosNetwRtg, staTcpipRadiuscAuthenticLastreque=staTcpipRadiuscAuthenticLastreque, staPptpConMode=staPptpConMode, staPppLcpRxdiscardreq=staPppLcpRxdiscardreq, firFea=firFea, trpBssJoin=trpBssJoin, staIprouActipTable=staIprouActipTable, setSnmpIptrapsEntry=setSnmpIptrapsEntry, staWanThroughpuRxsa=staWanThroughpuRxsa, trpSpGtReE_pOrTsTaTcHg=trpSpGtReE_pOrTsTaTcHg, staWlanChanneNoisel=staWlanChanneNoisel, staPppIpc=staPppIpc, staWlanRadiosExceirp=staWlanRadiosExceirp, setInterWlaEncryptionClie=setInterWlaEncryptionClie, setInterLanTable=setInterLanTable, staWlanStatioMaxthr=staWlanStatioMaxthr, setConfiCrontabDayo=setConfiCrontabDayo, staWlanmApconnUtil=staWlanmApconnUtil, staWlanInterpAccEntry=staWlanInterpAccEntry, staTcpipRadiuscAccountinAccountingreq=staTcpipRadiuscAccountinAccountingreq, staPptpConEntry=staPptpConEntry, setNetbiBroFla=setNetbiBroFla, setWanBackupd=setWanBackupd, trpWLanOverTempEnd=trpWLanOverTempEnd, staIprouVrrpEveVri=staIprouVrrpEveVri, staTcpipTcpWantxr=staTcpipTcpWantxr, sta=sta, staIprouLogtaProt=staIprouLogtaProt, staLanbrConAge=staLanbrConAge, setIprouFirConneFlag=setIprouFirConneFlag, staLanPackTxb=staLanPackTxb, setDhcpDhcTim=setDhcpDhcTim, setNetbiSerHos=setNetbiSerHos, staLanPackTxu=staLanPackTxu, setIprouFirFilteSst=setIprouFirFilteSst, setWanIncominEntry=setWanIncominEntry, setInterWlaInterpointsEna=setInterWlaInterpointsEna, staTcpipNetbiosHost=staTcpipNetbiosHost, setNtpBci=setNtpBci, staLanByteThroug=staLanByteThroug, staWlanPacketRxaggre=staWlanPacketRxaggre, staWlanErrorsQue=staWlanErrorsQue, setWlanCountry=setWlanCountry, setInterLanCon=setInterLanCon, setIprouFirPingb=setIprouFirPingb, staCerti=staCerti, setDhcpNetTable=setDhcpNetTable, staTcpipTcpWantx=staTcpipTcpWantx, setInterWlaBeaconingEntry=setInterWlaBeaconingEntry, staTcpipRadiussAccoActiveaccountinOutputoc=staTcpipRadiussAccoActiveaccountinOutputoc, staPppLcpTxconfigrequ=staPppLcpTxconfigrequ, staWlanScanreExtcha=staWlanScanreExtcha, staWanPackettraEntry=staWanPackettraEntry, staIeee8StaPorts=staIeee8StaPorts, staDslPppoeRxpado=staDslPppoeRxpado, setLanbrPorAct=setLanbrPorAct, staIprouRipLansTxfi=staIprouRipLansTxfi, setRadiuServeEapRea=setRadiuServeEapRea, staWlanNetworOpe=staWlanNetworOpe, staLanbrDhcIpa=staLanbrDhcIpa, set=set, staAccouCurTxkby=staAccouCurTxkby, staTcpipRadiussAccoCompletedaccounNasportt=staTcpipRadiussAccoCompletedaccounNasportt, setWlanRadiusacceLoopbacka=setWlanRadiusacceLoopbacka, setInterWlaTransmissioPack=setInterWlaTransmissioPack, setPerfo=setPerfo, staConfiScanresuTable=staConfiScanresuTable, setWlanRadiusaccoAccntport=setWlanRadiusaccoAccntport, setInterWlaNetworkRad=setInterWlaNetworkRad, staIprouOpenpProt=staIprouOpenpProt, staPppoeConTable=staPppoeConTable, setNetbiOpe=setNetbiOpe, setRadiuServeForwardservTable=setRadiuServeForwardservTable, staIprouVrrpInt=staIprouVrrpInt, setWanDialpre=setWanDialpre, staTcpipRadiusc=staTcpipRadiusc, staWlanmRadiopName=staWlanmRadiopName, setIprouRouIcm=setIprouRouIcm, staTcpipHttpHttpau=staTcpipHttpHttpau, staTcpipTftpLanrx=staTcpipTftpLanrx, setIprou1nnFragments=setIprou1nnFragments, staIprouRipDynlEntry=staIprouRipDynlEntry, staHardwCput=staHardwCput, setIprouFirOpera=setIprouFirOpera, staIprouLogtaFilt=staIprouLogtaFilt, setTimeCur=setTimeCur, setDhcpDhcIpa=setDhcpDhcIpa, staWlanChanneRadard=staWlanChanneRadard, setLanbrAgi=setLanbrAgi, setIprouFirConneRtgt=setIprouFirConneRtgt, staChannMode=staChannMode, staIprouHostbEntry=staIprouHostbEntry, setDnsDnslTable=setDnsDnslTable, staWlanInterpAccTable=staWlanInterpAccTable, staWlanClientPppoeuMacaddres=staWlanClientPppoeuMacaddres, staIprouProtoLan=staIprouProtoLan, staConfiEventlogEntry=staConfiEventlogEntry, setSnmpDeletemo=setSnmpDeletemo, setIprouDefDay=setIprouDefDay, staPppLcpRxconfigreje=staPppLcpRxconfigreje, staDslDslolCatchdhc=staDslDslolCatchdhc, staTcpipDnsLanr=staTcpipDnsLanr, setInterWlaPerformanceIfc=setInterWlaPerformanceIfc, setCertiSceCerExtended=setCertiSceCerExtended, staIprouRipFiltEntry=staIprouRipFiltEntry, setEchosAccCom=setEchosAccCom, staDslRxpack=staDslRxpack, staWanMtuPee=staWanMtuPee, staLanbrSpaRstpporTable=staLanbrSpaRstpporTable, staWlanmRadiop5ghzmode=staWlanmRadiop5ghzmode, staPppChaRxres=staPppChaRxres, staTcpipRadiussAcceClientsAccessreq=staTcpipRadiussAcceClientsAccessreq, staHardwPcidDevice=staHardwPcidDevice, staPppIpcRxdiscarded=staPppIpcRxdiscarded, staDslPppoeTxdata=staDslPppoeTxdata, staTcpipDhcpLanrx=staTcpipDhcpLanrx, staIprouVrrpEveEntry=staIprouVrrpEveEntry, staDslPppoeRxpads=staDslPppoeRxpads, setWanScriptsTable=setWanScriptsTable, setIprouFirHostbSrc=setIprouFirHostbSrc, setLcrTimTable=setLcrTimTable, staIprouRipFiltNam=staIprouRipFiltNam, setInterWlaRadiosettinApdensity=setInterWlaRadiosettinApdensity, setIprou1nnIpsectablRchi=setIprou1nnIpsectablRchi, staTcpipDnsForw=staTcpipDnsForw, staWlanClientPppoeiSes=staWlanClientPppoeiSes, staDslQueuep=staDslQueuep, setCertiSceRei=setCertiSceRei)
mibBuilder.exportSymbols("LANCOM-L310-MIB", setNetbiWat=setNetbiWat, staTcpipHttpActiveEntry=staTcpipHttpActiveEntry, staAccouTimEntry=staAccouTimEntry, setConfiLockmin=setConfiLockmin, setIprouRipLanRipa=setIprouRipLanRipa, setInterWlaBeaconingBeacono=setInterWlaBeaconingBeacono, staIprouVrrpVirPee=staIprouVrrpVirPee, staIprouVrrpMacMac=staIprouVrrpMacMac, staDhcpcLanDomai=staDhcpcLanDomai, staAccouAccConnt=staAccouAccConnt, setIprouFirSteal=setIprouFirSteal, setNetbiHosRtg=setNetbiHosRtg, setConfiUpdatec=setConfiUpdatec, setCertiSceCerEntry=setCertiSceCerEntry, staWanMtuMtu=staWanMtuMtu, setWanManualdCon=setWanManualdCon, setIprouDefSto=setIprouDefSto, staIprouRipLansRipt=staIprouRipLansRipt, setInterWlaNetworkMax=setInterWlaNetworkMax, setIeee8PorEntry=setIeee8PorEntry, staPppPppEntry=staPppPppEntry, setLanbrSpaTra=setLanbrSpaTra, setRadiuServeForwardservPro=setRadiuServeForwardservPro, staPptpConChann=staPptpConChann, staConfiOutbandt=staConfiOutbandt, setNetbiSerTable=setNetbiSerTable, setWlanIdletimeou=setWlanIdletimeou, staIprouRipDynlRtgt=staIprouRipDynlRtgt, staWanMtuEntry=staWanMtuEntry, setVlanNetTable=setVlanNetTable, staWlanInterpAccEffrxr=staWlanInterpAccEffrxr, staPppLcpTxconfignak=staPppLcpTxconfignak, staTcpipNetbiosTime=staTcpipNetbiosTime, setConfiAccesstSnmp=setConfiAccesstSnmp, staTcpipTcpDelete=staTcpipTcpDelete, staTcpipDhcpNetwoNetmask=staTcpipDhcpNetwoNetmask, setPppoeNamEntry=setPppoeNamEntry, setDnsDyndHos=setDnsDyndHos, setTcpipAccesIpn=setTcpipAccesIpn, setWlanRadiusaccoBackuploo=setWlanRadiusaccoBackuploo, setDhcpAddOptionn=setDhcpAddOptionn, staWlanScanreOperat=staWlanScanreOperat, staUmtsmMod=staUmtsmMod, setIprouFirAppliIrcIrc=setIprouFirAppliIrcIrc, setNetbiBroGro=setNetbiBroGro, staConneIfc=staConneIfc, staWlanInterpAccShortg=staWlanInterpAccShortg, setWanRadiusSecre=setWanRadiusSecre, staWanActionsLocTable=staWanActionsLocTable, staWlanErrorsTable=staWlanErrorsTable, staWlanWlanpaEirp=staWlanWlanpaEirp, staTcpipArpTablPee=staTcpipArpTablPee, staTcpipTftpWantxa=staTcpipTftpWantxa, staPppoeConLas=staPppoeConLas, setAccouLasEntry=setAccouLasEntry, setWanDslbroaSer=setWanDslbroaSer, setTcpipArptaLas=setTcpipArptaLas, staTcpipRadiussAccoClientsUnknowntyp=staTcpipRadiussAccoClientsUnknowntyp, staPptpConNbnsb=staPptpConNbnsb, staVlanPorTag=staVlanPorTag, staWlanClientInterfQos=staWlanClientInterfQos, setDhcpAddTable=setDhcpAddTable, staConneCont=staConneCont, staLanbrPorEntry=staLanbrPorEntry, staPppoeRxp=staPppoeRxp, staWlanmApconnResp=staWlanmApconnResp, staIprouRipDynwRipa=staIprouRipDynwRipa, othManCon=othManCon, setInterWlaTransmissioEntry=setInterWlaTransmissioEntry, setIprou1nnIpsectablNr=setIprou1nnIpsectablNr, setWlanAccesslistEntry=setWlanAccesslistEntry, staTcpipHttpActiveLocalrt=staTcpipHttpActiveLocalrt, staTcpipIpLanrx=staTcpipIpLanrx, setInterWlaInterpointsCha=setInterWlaInterpointsCha, setInterWlaGroupencrypKeytype2=setInterWlaGroupencrypKeytype2, setRadiuServeForwardservBac=setRadiuServeForwardservBac, staTcpipRadiussAccoCompletedaccounCallings=staTcpipRadiussAccoCompletedaccounCallings, setIprouFirRulesEntry=setIprouFirRulesEntry, staTcpipSyslogLasMes=staTcpipSyslogLasMes, setAccouLasTotal=setAccouLasTotal, setInterWlaEncryptionMeth=setInterWlaEncryptionMeth, staWlanScanreInterf=staWlanScanreInterf, setIprouDefPee=setIprouDefPee, setEchosAccEntry=setEchosAccEntry, staWlanGroupeSour=staWlanGroupeSour, setIprouRipWanRxfi=setIprouRipWanRxfi, staTcpipRadiussAcceClientsBadauthen=staTcpipRadiussAcceClientsBadauthen, setIprouFirAppliIrc=setIprouFirAppliIrc, setDnsFiltNet=setDnsFiltNet, setInterWlaTransmissioHard=setInterWlaTransmissioHard, trpStatChan=trpStatChan, setNetbiSerTim=setNetbiSerTim, setWlanSignalaverFilCoeEntry=setWlanSignalaverFilCoeEntry, staWlanCompetDtimpe=staWlanCompetDtimpe, staTcpipRadiussAcceClientsIpaddress=staTcpipRadiussAcceClientsIpaddress, setInterWlaInterpointsIso=setInterWlaInterpointsIso, setIprouVrrVrrCom=setIprouVrrVrrCom, setConfiConfiga=setConfiConfiga, staPppTxoIpcNbnsb=staPppTxoIpcNbnsb, staTcpipNetworkVla=staTcpipNetworkVla, setWanIplistMasqi=setWanIplistMasqi, setDnsDnslIpa=setDnsDnslIpa, setLcrHolInd=setLcrHolInd, setLanIeee80=setLanIeee80, staLanbrSpaPorttabRoo=staLanbrSpaPorttabRoo, firTabTable=firTabTable, staWlanmLastwlTyp=staWlanmLastwlTyp, setIprou1nnIpsectablDp=setIprou1nnIpsectablDp, setNetbiUpd=setNetbiUpd, setDnsDynaTable=setDnsDynaTable, staPppLcpRxconfigrequ=staPppLcpRxconfigrequ, staTcpipTftpLantxa=staTcpipTftpLantxa, setIprouUsa=setIprouUsa, staTcpipNetbiosPeerTable=staTcpipNetbiosPeerTable, setTcpipIcmpo=setTcpipIcmpo, setConfiTftpcliScriptadd=setConfiTftpcliScriptadd, setConfiSshauthMet=setConfiSshauthMet, staSnmpEveTra=staSnmpEveTra, staVlanPorEntry=staVlanPorEntry, trpMacChkFail=trpMacChkFail, staPppPapDelet=staPppPapDelet, staCertiSceCasSha1fi=staCertiSceCasSha1fi, staTcpipDhcpNetwoBroadcastb=staTcpipDhcpNetwoBroadcastb, staWanBytetransRxb=staWanBytetransRxb, setConfiTftpcliScriptfil=setConfiTftpcliScriptfil, setIprouVrrVrrRou=setIprouVrrVrrRou, staLanbrSpaRstpporEntry=staLanbrSpaRstpporEntry, staWlanmLastwlTable=staWlanmLastwlTable, staPppPapRxreq=staPppPapRxreq, staWlanCompetOperat=staWlanCompetOperat, staWlanRadiusAll=staWlanRadiusAll, staPppPap=staPppPap, setTimeDstHou=setTimeDstHou, staTcpipRadiussAcceClientsEntry=staTcpipRadiussAcceClientsEntry, staWlanPacketTxmulti=staWlanPacketTxmulti, setRadiuServeDefaultreal=setRadiuServeDefaultreal, staIprouActipIpa=staIprouActipIpa, staIprouVrrpMacVir=staIprouVrrpMacVir, setNetbiNetOpe=setNetbiNetOpe, staTcpipHttpActiveTable=staTcpipHttpActiveTable, setIprou1nnTable1nnaEntry=setIprou1nnTable1nnaEntry, staWlanClientInterfLinkph=staWlanClientInterfLinkph, staIprouLogtaSrca=staIprouLogtaSrca, staTcpipNetworkTable=staTcpipNetworkTable, staWlanForeigTable=staWlanForeigTable, staWlanInterpKeyKeyv=staWlanInterpKeyKeyv, setWanProtect=setWanProtect, staWlanInterpAccIdenti=staWlanInterpAccIdenti, setEchosAccTable=setEchosAccTable, staTcpipDhcpDelet=staTcpipDhcpDelet, setWlanAccesslistTable=setWlanAccesslistTable, setWanPppUse=setWanPppUse, setWlanTracemac=setWlanTracemac, staWlanIapptaTimeo=staWlanIapptaTimeo, setInterWlaInterpointsEntry=setInterWlaInterpointsEntry, staTcpipRadiussAccoClientsMalformeda=staTcpipRadiussAccoClientsMalformeda, setVlanNetPor=setVlanNetPor, staTcpipTftpLanrxw=staTcpipTftpLanrxw, setInterWlaRadiosettinSubbands=setInterWlaRadiosettinSubbands, setCertiSceCasDn=setCertiSceCasDn, staWlanStatioIpaddr=staWlanStatioIpaddr, setCharg=setCharg, staIprouRipResp=staIprouRipResp, setRadiuServeUsersUse=setRadiuServeUsersUse, setInterWlaNetworkClo=setInterWlaNetworkClo, setLanbrProEntry=setLanbrProEntry, staWlanIapptaBssid=staWlanIapptaBssid, setWlanRadiusaccoInterimup=setWlanRadiusaccoInterimup, setPerfoRttmonsRttcount=setPerfoRttmonsRttcount, staPppCcpRxterminatea=staPppCcpRxterminatea, staIprouRipDynlPort=staIprouRipDynlPort, staConfiScanresuCapip=staConfiScanresuCapip, setTcpipLoopbRtg=setTcpipLoopbRtg, staWlanInterpAccBytest=staWlanInterpAccBytest, staConfiEventlogInfo2=staConfiEventlogInfo2, setNetbiSerPee=setNetbiSerPee, setLanbrEncTable=setLanbrEncTable, staIeee8StaUsern=staIeee8StaUsern, setSnmpComment1=setSnmpComment1, staIprouVrrpEveTable=staIprouVrrpEveTable, staWlanErrorsAge=staWlanErrorsAge, staWlanRadiosTransmitpower=staWlanRadiosTransmitpower, setConfiAccesstTable=setConfiAccesstTable, firVerSer=firVerSer, trpSupervision=trpSupervision, setLanbrIso=setLanbrIso, staAccouCurUsern=staAccouCurUsern, trpDisAssStation=trpDisAssStation, staHardwCpuc=staHardwCpuc, staLanInteTable=staLanInteTable, staPptpCal=staPptpCal, staIprouRipDynlTable=staIprouRipDynlTable, setConfiAdminsFun=setConfiAdminsFun, staTcpipDnsWanr=staTcpipDnsWanr, setIprouRipR1m=setIprouRipR1m, setLanbrSpa=setLanbrSpa, staWlanmNetworMaxst=staWlanmNetworMaxst, staWlanStatioEntry=staWlanStatioEntry, staIprouEstabDes=staIprouEstabDes, staLayerIfc=staLayerIfc, setNetbiNetNtd=setNetbiNetNtd, staWlanBytetrBytest=staWlanBytetrBytest, setInterWlaInterpointpEntry=setInterWlaInterpointpEntry, staIprouVrrpTx=staIprouVrrpTx, setPerfoRttmonsAveragejitter=setPerfoRttmonsAveragejitter, staWlanInterfNumstati=staWlanInterfNumstati, setWlanmStaLoo=setWlanmStaLoo, staLayerWanl=staLayerWanl, staLanErroTxe=staLanErroTxe, staTcpipHttpAgentlTable=staTcpipHttpAgentlTable, firTabVer=firTabVer, staIprouRipLansPort=staIprouRipLansPort, setLanbrProIpnetm=setLanbrProIpnetm, setPerfoRttmoneProtocol=setPerfoRttmoneProtocol, staLanbrSpaPorttabBri=staLanbrSpaPorttabBri, staPppLcpTxterminatea=staPppLcpTxterminatea, staSnmpEveVen=staSnmpEveVen, setIprouFirDenys=setIprouFirDenys, staPppRxoIpcTable=staPppRxoIpcTable, setDns=setDns, setIeee8PorServert=setIeee8PorServert, staTcpipSyslogLasSou=staTcpipSyslogLasSou, staIprouVrrpVirBac=staIprouVrrpVirBac, staTcpipDnsLant=staTcpipDnsLant, staWlanWlanpaSupports40mhz=staWlanWlanpaSupports40mhz, setMailEmail=setMailEmail, staWlanPairwiTable=staWlanPairwiTable, staIprouRipLansVlan=staIprouRipLansVlan, staDslRxerro=staDslRxerro, trpCnfDnlSucc=trpCnfDnlSucc, staTcpipRadiussAcceTotalaccesscha=staTcpipRadiussAcceTotalaccesscha, staPptpConPhysc=staPptpConPhysc, setAccouLasConnt=setAccouLasConnt, staTcpipTftpWanrxe=staTcpipTftpWanrxe, staTcpipRadiussAccoDeletevalues=staTcpipRadiussAccoDeletevalues, staLanbrSpaBridgep=staLanbrSpaBridgep, staPppIpcTxterminater=staPppIpcTxterminater, staWanBytetransTable=staWanBytetransTable, setIprouRipWanDftr=setIprouRipWanDftr, setAccouAccTxkby=setAccouAccTxkby, staWlanmRadiopMgmtvlant=staWlanmRadiopMgmtvlant, staTcpipRadiussAccoActiveaccountinInputoct=staTcpipRadiussAccoActiveaccountinInputoct, staTcpipNetbiosNetwNtd=staTcpipNetbiosNetwNtd, staInfocEntry=staInfocEntry, staChannPptpc=staChannPptpc, setIprouFirPortbDsta=setIprouFirPortbDsta, setConfiTftpcliConfigfil=setConfiTftpcliConfigfil, setInterWlaEncryptionTable=setInterWlaEncryptionTable, staCertiSceRasTable=staCertiSceRasTable, staPptpConPeera=staPptpConPeera, staDslTxbroa=staDslTxbroa, staTcpipRadiussAccoActiveaccountinNasipadd=staTcpipRadiussAccoActiveaccountinNasipadd, staWlanRadiosExtchannel=staWlanRadiosExtchannel, staTcpipTftpLantxe=staTcpipTftpLantxe)
mibBuilder.exportSymbols("LANCOM-L310-MIB", setWanRadiusServe=setWanRadiusServe, staTcpipRadiussAccoCompletedaccounStarttim=staTcpipRadiussAccoCompletedaccounStarttim, staTcpipDnsDnsa=staTcpipDnsDnsa, staWanThroughpuTxsc=staWanThroughpuTxsc, staDslTxbyte=staDslTxbyte, staChannExtra=staChannExtra, staPppIpcTxcodereject=staPppIpcTxcodereject, staTcpipTftpLanrxd=staTcpipTftpLanrxd, staIprouQosIfc=staIprouQosIfc, staQueueArpquer=staQueueArpquer, staPppTxoLcpAut=staPppTxoLcpAut, staIprouVrrpVirRou=staIprouVrrpVirRou, staAccouCurTable=staAccouCurTable, setConfiCrontabComm=setConfiCrontabComm, setConfiOutband=setConfiOutband, staLanInteIfc=staLanInteIfc, setTcpipNetwoRtg=setTcpipNetwoRtg, staWlanWlanpaWepsupport=staWlanWlanpaWepsupport, staWlanCompetEncryp=staWlanCompetEncryp, staIprouVrrpVirTable=staIprouVrrpVirTable, staPppIpcTxterminatea=staPppIpcTxterminatea, staTcpipDhcpDisca=staTcpipDhcpDisca, staConfiOutbandb=staConfiOutbandb, staLanbrConEntry=staLanbrConEntry, staTcpipIcmp=staTcpipIcmp, setDhcpNetStartaddre=setDhcpNetStartaddre, staWlanInterfOperatin=staWlanInterfOperatin, staIprouHoconNum=staIprouHoconNum, setInterWlaBeaconingDtimper=setInterWlaBeaconingDtimper, staHardwPcidFunctio=staHardwPcidFunctio, setWlanmStaTable=setWlanmStaTable, setIprouSta=setIprouSta, staConfiScanresuVersi=staConfiScanresuVersi, setAccouCurPeer=setAccouCurPeer, setWlanmStaIpa=setWlanmStaIpa, staWlanScanreBeacon=staWlanScanreBeacon, staUmtsmSta=staUmtsmSta, staAccouCurTotal=staAccouCurTotal, staWlanCompetTable=staWlanCompetTable, setWanCallbac=setWanCallbac, setDhcpHosHos=setDhcpHosHos, setConfiUpdatecOperati=setConfiUpdatecOperati, staIprouFilteSrca=staIprouFilteSrca, staIprouConneDsta=staIprouConneDsta, staTcpipSyslog=staTcpipSyslog, setNetbiSerOsv=setNetbiSerOsv, staLanbrDhcTable=staLanbrDhcTable, setLanbr=setLanbr, staHardwPcidClass=staHardwPcidClass, staWlanClientInterfTxbyte=staWlanClientInterfTxbyte, setIprouRipFilNam=setIprouRipFilNam, staIprouPortbProt=staIprouPortbProt, staWlanClientInterfBytest=staWlanClientInterfBytest, setWanDslbroaAcn=setWanDslbroaAcn, staLayerEntry=staLayerEntry, setWanDialuppEntry=setWanDialuppEntry, staWlanRadiosBackgroundscan=staWlanRadiosBackgroundscan, staPppPppIfc=staPppPppIfc, setHttpRolVariablesIde=setHttpRolVariablesIde, staWanActionsActAct=staWanActionsActAct, setDnsFiltIdx=setDnsFiltIdx, setConfiAdminsPas=setConfiAdminsPas, staIprouProtoPro=staIprouProtoPro, setPppoeSes=setPppoeSes, setWanPppAut=setWanPppAut, staWlanInterpAccMaxthr=staWlanInterpAccMaxthr, staTcpipHttpActiveIndex=staTcpipHttpActiveIndex, staTcpipNetworkEntry=staTcpipNetworkEntry, setNetbiPeeTable=setNetbiPeeTable, staPppLcpRxerrors=staPppLcpRxerrors, staWlanCompetEntry=staWlanCompetEntry, staWlanClientInterfIfc=staWlanClientInterfIfc, staTcpipDnsFilt=staTcpipDnsFilt, staWlanWlanpaTable=staWlanWlanpaTable, setIprouRipLanTable=setIprouRipLanTable, setNetbiHosTyp=setNetbiHosTyp, staPppIpcRxterminater=staPppIpcRxterminater, staTcpipDhcpTxack=staTcpipDhcpTxack, staWlanErrorsMic=staWlanErrorsMic, staWlanCompetInterf=staWlanCompetInterf, setInterWlaTransmissioMaxh=setInterWlaTransmissioMaxh, setDhcpDhcNet=setDhcpDhcNet, staTcpipRadiuscAuthenticBadauthen=staTcpipRadiuscAuthenticBadauthen, staPptpConState=staPptpConState, staTcpipTftpWanrxr=staTcpipTftpWanrxr, staAccouAccMacad=staAccouAccMacad, staTcpipNetbiosNetwEntry=staTcpipNetbiosNetwEntry, setVlanPorPortv=setVlanPorPortv, setRadiuServeEapTun=setRadiuServeEapTun, staPppIpcRxconfigack=staPppIpcRxconfigack, staTcpipDhcpServe=staTcpipDhcpServe, staMailSen=staMailSen, staTcpipTftpLanrxa=staTcpipTftpLanrxa, setInterWlaTransmissioRtst=setInterWlaTransmissioRtst, staWlanPacketRxbroad=staWlanPacketRxbroad, setWanActiontCheck=setWanActiontCheck, staTcpipDhcpDhcptMac=staTcpipDhcpDhcptMac, setConfiMonitorTracemask2=setConfiMonitorTracemask2, setIprouPro=setIprouPro, staTcpipHttpActiveLocalpo=staTcpipHttpActiveLocalpo, staWlanIapptaTimer=staWlanIapptaTimer, staWlanErrorsTxd=staWlanErrorsTxd, staWlanPacketRxpacke=staWlanPacketRxpacke, setInterWlaRadiosettinAntennagain=setInterWlaRadiosettinAntennagain, staLanIeeeSupEntry=staLanIeeeSupEntry, staPptpDro=staPptpDro, setLanbrSpaPorTable=setLanbrSpaPorTable, setCertiSceChe=setCertiSceChe, setIprouRipWanGate=setIprouRipWanGate, staWlanCompetNetwor=staWlanCompetNetwor, staLcrDel=staLcrDel, setInterWlaOperationalIfc=setInterWlaOperationalIfc, setRadiuServeUsersEntry=setRadiuServeUsersEntry, setConfiAdminsAdm=setConfiAdminsAdm, setDnsFiltTable=setDnsFiltTable, staWlanPairwiTsc=staWlanPairwiTsc, staPppoeDel=staPppoeDel, staCertiSceCertsSubject=staCertiSceCertsSubject, setIprouIprTable=setIprouIprTable, staIprouLantt=staIprouLantt, setIprouFirDosac=setIprouFirDosac, staTcpipArp=staTcpipArp, staWlanGroupeKeyt=staWlanGroupeKeyt, staPppCcpRxcodereject=staPppCcpRxcodereject, staWanPackettraTxr=staWanPackettraTxr, lancom_systems=lancom_systems, staLanPackTable=staLanPackTable, setInterWlaClientmodesEntry=setInterWlaClientmodesEntry, staTcpipIcmpLant=staTcpipIcmpLant, staTcpipRadiussAccoTotalaccountbad=staTcpipRadiussAccoTotalaccountbad, staTcpipRadiuscAuthenticAccessreq=staTcpipRadiuscAuthenticAccessreq, staWlanStatioInterf=staWlanStatioInterf, setInterWlaInterpointpPee=setInterWlaInterpointpPee, setPerfoRttmonePacketsize=setPerfoRttmonePacketsize, setAccouTimActi=setAccouTimActi, setInterWlaInterpointsTable=setInterWlaInterpointsTable, staTcpipRadiussAccoCompletedaccounUsername=staTcpipRadiussAccoCompletedaccounUsername, staWlanWlanpaRadiochannel=staWlanWlanpaRadiochannel, staWlanClientInterfEfftxr=staWlanClientInterfEfftxr, staWlanCompetNoisel=staWlanCompetNoisel, staPppIpcTxconfignak=staPppIpcTxconfignak, staTcpipDhcpNetwoCache=staTcpipDhcpNetwoCache, setSnmpPassword=setSnmpPassword, setIprouFirFilteIdx=setIprouFirFilteIdx, staHardwPcidTable=staHardwPcidTable, setIprouFirConneDstp=setIprouFirConneDstp, setInterModRequest=setInterModRequest, staWlanLogtabEve=staWlanLogtabEve, staWlanInterfMacaddre=staWlanInterfMacaddre, staTcpipTcpWancon=staTcpipTcpWancon, staConneEntry=staConneEntry, setNetbiBroEntry=setNetbiBroEntry, setHttp=setHttp, setIprouFirPortbProt=setIprouFirPortbProt, setInterWlaRoamingBeaconmisst=setInterWlaRoamingBeaconmisst, staWlanCompetExtcha=staWlanCompetExtcha, staCalliIfc=staCalliIfc, setPerfoRttmonsCompletions=setPerfoRttmonsCompletions, staTcpipDhcpRxreq=staTcpipDhcpRxreq, staIprouVrrpMacRou=staIprouVrrpMacRou, setIprouVrrVrrPee=setIprouVrrVrrPee, setSysloFacEntry=setSysloFacEntry, setLcrTimInd=setLcrTimInd, setInterWlaRadiosettinBackgroundscanu=setInterWlaRadiosettinBackgroundscanu, setWan=setWan, setInterWlaNetworkIfc=setInterWlaNetworkIfc, staWlanScanreSignal=staWlanScanreSignal, setLanbrPorPoi=setLanbrPorPoi, setConfiAccesstHttp=setConfiAccesstHttp, staLanbrSpaPorttabPat=staLanbrSpaPorttabPat, staIprouFilteRtgt=staIprouFilteRtgt, staWlanStatioRxpack=staWlanStatioRxpack, staDhcpcLanIpadd=staDhcpcLanIpadd, staTcpipRadiussLogtEve=staTcpipRadiussLogtEve, setConfiUpdatecRetryfa=setConfiUpdatecRetryfa, setDnsServEntry=setDnsServEntry, staPppoe=staPppoe, setWanPppTim=setWanPppTim, staWanConnectio=staWanConnectio, staConfiWantotal=staConfiWantotal, wlan_systems=wlan_systems, setWlanRadarpatteEntry=setWlanRadarpatteEntry, setConfiCrontabBase=setConfiCrontabBase, staWanThroughpuRxsc=staWanThroughpuRxsc, trpWLanOverTemp=trpWLanOverTemp, setHttpRol=setHttpRol, staWanThroughpuTxsa=staWanThroughpuTxsa, staIprouRipWansRfc2=staIprouRipWansRfc2, setDhcpNetOperating=setDhcpNetOperating, staTcpipRadiussAcce=staTcpipRadiussAcce, setIprouRipIprPor=setIprouRipIprPor, staTcpipDhcpNetwoNbnsdefaul=staTcpipDhcpNetwoNbnsdefaul, setIprouRipLanEntry=setIprouRipLanEntry, staTcpipRadiussAccoCompletedaccounOutputpa=staTcpipRadiussAccoCompletedaccounOutputpa, staIeee8StaPortm=staIeee8StaPortm, setTcpipNetwoNet=setTcpipNetwoNet, staLanPackTxp=staLanPackTxp, staCertiSceNumra=staCertiSceNumra, setIprouFirPortbEntry=setIprouFirPortbEntry, firVerIfc=firVerIfc, staWlanStatioPowers=staWlanStatioPowers, staWlanInterfQueuepac=staWlanInterfQueuepac, setIeee8PorTable=setIeee8PorTable, setLcrTimEntry=setLcrTimEntry, setConfiTftpcliFirmwarea=setConfiTftpcliFirmwarea, staIprouRipWansEntry=staIprouRipWansEntry, staWlanClientInterfRxbyte=staWlanClientInterfRxbyte, staConfiLoginerr=staConfiLoginerr, trpAssStation=trpAssStation, staIprouRipIpriNet=staIprouRipIpriNet, staPppTxoLcpEntry=staPppTxoLcpEntry, setDnsFiltIpa=setDnsFiltIpa, staTcpipDhcpNetwoBroadcasta=staTcpipDhcpNetwoBroadcasta, staConfiEventlogInfo1=staConfiEventlogInfo1, staWlanCompetIdenti=staWlanCompetIdenti, setInterWlaRadiosettinTxpowerreductio=setInterWlaRadiosettinTxpowerreductio, staTcpipIcmpLanc=staTcpipIcmpLanc, setConfiTelnetp=setConfiTelnetp, setIprouRipParFlus=setIprouRipParFlus, staWlanBytetrRxbyte=staWlanBytetrRxbyte, staWlanChanneDfssta=staWlanChanneDfssta, staPptpFlo=staPptpFlo, setWanActiontCondi=setWanActiontCondi, staCertiSceRasIdx=staCertiSceRasIdx, setInterWlaRadiosettinAntennamask=setInterWlaRadiosettinAntennamask, setIprouFirConneTime=setIprouFirConneTime, staWanErrorsTxer=staWanErrorsTxer, setInterWlaEncryptionKey=setInterWlaEncryptionKey, staLanbrConSourcep=staLanbrConSourcep, staTcpipDhcpRxinf=staTcpipDhcpRxinf, staWlanInterpKeyRsc=staWlanInterpKeyRsc, staTcpipDhcpAssig=staTcpipDhcpAssig, staPppCcpTxterminater=staPppCcpTxterminater, setAccouTimEntry=setAccouTimEntry, setHttpRolTitle=setHttpRolTitle, setWlanIapphandov=setWlanIapphandov, staPppPapTxreq=staPppPapTxreq, staQueueTcpqueu=staQueueTcpqueu, staWlanInterpAccKeying=staWlanInterpAccKeying, setDhcpHosEntry=setDhcpHosEntry, setDnsDynaSer=setDnsDynaSer, setInterWlaRadiosettin5ghzmode=setInterWlaRadiosettin5ghzmode, setInterWlaInterpointpOpe=setInterWlaInterpointpOpe, staChannEntry=staChannEntry, setIprouFirRulesTable=setIprouFirRulesTable, setInterWlaEncryptionDefa=setInterWlaEncryptionDefa, staPppRxoLcpEntry=staPppRxoLcpEntry, staWlanWlanpaRegulatorydoma=staWlanWlanpaRegulatorydoma, setWanRadius=setWanRadius, staTcpipTcpLantxr=staTcpipTcpLantxr, setConfiLoginer=setConfiLoginer, setTimeDstTim=setTimeDstTim, staPppCcpTxconfigreje=staPppCcpTxconfigreje, staIeee8StaSessi=staIeee8StaSessi)
mibBuilder.exportSymbols("LANCOM-L310-MIB", staConfiEventlogEvent=staConfiEventlogEvent, staInfocB1d=staInfocB1d, setDhcpDhcMac=setDhcpDhcMac, setInterModInitcom=setInterModInitcom, setInterModCycleti=setInterModCycleti, setIprou1nnIpsectablTimeout=setIprou1nnIpsectablTimeout, staTcpipRadiussAcceClientsLastreque=staTcpipRadiussAcceClientsLastreque, staTcpipSyslogLasTable=staTcpipSyslogLasTable, staTcpipRadiuscAuthenticEntry=staTcpipRadiuscAuthenticEntry, staTcpipDhcpTxnak=staTcpipDhcpTxnak, setIprouFirObjecEntry=setIprouFirObjecEntry, staTcpipRadiuscAuthenticPort=staTcpipRadiuscAuthenticPort, setConfiAdminsAct=setConfiAdminsAct, staWlanClientInterfRxpack=staWlanClientInterfRxpack, setDnsServTable=setDnsServTable, setPerfoRttmonsJittersumnegsd=setPerfoRttmonsJittersumnegsd, staTcpipRadiussAccoClientsAccountres=staTcpipRadiussAccoClientsAccountres, setLanbrSpaPorEntry=setLanbrSpaPorEntry, setWlanRadiusacceAuthport=setWlanRadiusacceAuthport, setWanDialuppB1d=setWanDialuppB1d, staWlanRadios108mbpsmode=staWlanRadios108mbpsmode, firVerTable=firVerTable, staWlanClientInterfTxpack=staWlanClientInterfTxpack, staLanbrAddMac=staLanbrAddMac, staVlan=staVlan, staWlanChanneNumbss=staWlanChanneNumbss, setIprouFirFilteLink=setIprouFirFilteLink, staCertiSceRasIssuer=staCertiSceRasIssuer, setCertiSceUpd=setCertiSceUpd, staWlanGroupeTable=staWlanGroupeTable, staUmtsmDro=staUmtsmDro, setWlanSignalaverMet=setWlanSignalaverMet, staLanByteRxbyte=staLanByteRxbyte, trpErrLogin=trpErrLogin, staPppoeTxp=staPppoeTxp, staDslPppoeRxdata=staDslPppoeRxdata, staTcpipIpWanfragmentationer=staTcpipIpWanfragmentationer, staCertiSceCasSubjec=staCertiSceCasSubjec, setInterUmtDat=setInterUmtDat, setCertiSceCasUrl=setCertiSceCasUrl, staTimeDstHou=staTimeDstHou, setInterWlaGroupencrypKey2=setInterWlaGroupencrypKey2, setInterWlaPerformanceQos=setInterWlaPerformanceQos, staWanPackettraTxn=staWanPackettraTxn, setChargTimetabTable=setChargTimetabTable, staPppRxoLcpMru=staPppRxoLcpMru, staTcpipArpDele=staTcpipArpDele, staWanBytetransTxb=staWanBytetransTxb, staWlanLogtabEntry=staWlanLogtabEntry, setCertiSceCerApplicat=setCertiSceCerApplicat, staWanPackettraTxt=staWanPackettraTxt, staLanbrDhcMac=staLanbrDhcMac, setNetbiHosNet=setNetbiHosNet, setMailUsern=setMailUsern, setIprouFirFilteDsta=setIprouFirFilteDsta, setCertiSceCerSubjecta=setCertiSceCerSubjecta, staWlanDelete=staWlanDelete, staDhcpcWanTable=staDhcpcWanTable, othCol=othCol, staIprouServiEntry=staIprouServiEntry, setIprouSen=setIprouSen, staWlanCompet40mhzm=staWlanCompet40mhzm, staTcpipNetbiosConf=staTcpipNetbiosConf, setIeee8RadPro=setIeee8RadPro, setInterWlaTransmissioMinf=setInterWlaTransmissioMinf, setIprouFirAppliFtpFxp=setIprouFirAppliFtpFxp, setIprouNnnDsts=setIprouNnnDsts, setInterWlaInterpointpIfc=setInterWlaInterpointpIfc, staWlanGroupeEntry=staWlanGroupeEntry, setDhcpAliImages=setDhcpAliImages, setTcpipNonlo=setTcpipNonlo, staIprouConneSrcr=staIprouConneSrcr, setIprouRipLanDftr=setIprouRipLanDftr, setInterWlaTransmissioShor=setInterWlaTransmissioShor, setInterWlaPerformanceTable=setInterWlaPerformanceTable, setCerti=setCerti, staWlanLogtabTim=staWlanLogtabTim, staAccouAccTotal=staAccouAccTotal, setInterWlaOperationalLinkledf=setInterWlaOperationalLinkledf, setRadiuServeAuthentific=setRadiuServeAuthentific, setIprouRipIprPee=setIprouRipIprPee, lan_router=lan_router, staWlanSeenclEntry=staWlanSeenclEntry, staConfiLoginloc=staConfiLoginloc, setWanPppKey=setWanPppKey, setSnmpMonitortLoo=setSnmpMonitortLoo, setIprouRipWanEntry=setIprouRipWanEntry, staWlanm=staWlanm, setNetbiBroTim=setNetbiBroTim, staWlanmRadiomAllow4=staWlanmRadiomAllow4)
