#
# PySNMP MIB module CISCO-DMN-DSG-DL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-DL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Unsigned32, Counter32, Counter64, iso, ObjectIdentity, Bits, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "Counter32", "Counter64", "iso", "ObjectIdentity", "Bits", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "Integer32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoDSGDl = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1))
ciscoDSGDl.setRevisions(('2010-10-13 08:00', '2010-08-30 11:00', '2010-05-25 08:00', '2010-02-12 15:00', '2009-12-20 15:00', '2009-11-22 15:00',))
if mibBuilder.loadTexts: ciscoDSGDl.setLastUpdated('201010130800Z')
if mibBuilder.loadTexts: ciscoDSGDl.setOrganization('Cisco Systems, Inc.')
dlAbout = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1))
dlDownload = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2))
dlCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3))
dlAboutCurrentVer = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlAboutCurrentVer.setStatus('current')
dlAboutSafeVer = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlAboutSafeVer.setStatus('current')
dlAboutBootVer = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlAboutBootVer.setStatus('current')
dlAboutProductId = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlAboutProductId.setStatus('current')
dlAboutTrackingId = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlAboutTrackingId.setStatus('current')
dlAboutChangeApp = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlAboutChangeApp.setStatus('current')
dlAboutEraseApp = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlAboutEraseApp.setStatus('current')
dlAboutReboot = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlAboutReboot.setStatus('current')
dlAboutAppTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 9), )
if mibBuilder.loadTexts: dlAboutAppTable.setStatus('current')
dlAboutAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 9, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DL-MIB", "dlAboutAppIndex"))
if mibBuilder.loadTexts: dlAboutAppEntry.setStatus('current')
dlAboutAppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: dlAboutAppIndex.setStatus('current')
dlAboutAppString = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 1, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlAboutAppString.setStatus('current')
dlDownloadTftpServerIP = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadTftpServerIP.setStatus('current')
dlDownloadMicroCode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadMicroCode.setStatus('current')
dlDownloadCodeVersion = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadCodeVersion.setStatus('current')
dlDownloadNanoVersion = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadNanoVersion.setStatus('current')
dlDownloadBankSelect = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadBankSelect.setStatus('current')
dlDownloadForcedFlag = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadForcedFlag.setStatus('current')
dlDownloadTransitionBlocked = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadTransitionBlocked.setStatus('current')
dlDownloadTftpFilename = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadTftpFilename.setStatus('current')
dlDownloadAbort = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("abort", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlDownloadAbort.setStatus('current')
dlDownloadState = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("busy", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlDownloadState.setStatus('current')
dlDownloadErrorStatus = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ok", 0), ("reject", 1), ("fails", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlDownloadErrorStatus.setStatus('current')
dlStatus = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noTrigger", 1), ("download", 2), ("trigger", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlStatus.setStatus('current')
dlMode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("always", 1), ("once", 2), ("never", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlMode.setStatus('current')
dlType = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("rearPanel", 2), ("http", 3), ("overAir", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlType.setStatus('current')
dlBank = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("app5514", 1), ("app7109", 2), ("fpga7109", 3), ("sat7109", 4), ("screenLogo", 5), ("menuLogo", 6), ("ethLogo", 7), ("appPPC", 8), ("appVASA", 9), ("dbUpdate", 10), ("execBin", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlBank.setStatus('current')
dlTotalCdt = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlTotalCdt.setStatus('current')
dlReceived = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlReceived.setStatus('current')
dlRejected = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlRejected.setStatus('current')
dlCommand = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("restart", 1), ("abort", 2), ("writeOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlCommand.setStatus('current')
mibBuilder.exportSymbols("CISCO-DMN-DSG-DL-MIB", dlDownloadTftpServerIP=dlDownloadTftpServerIP, dlAboutAppTable=dlAboutAppTable, dlMode=dlMode, dlAboutAppString=dlAboutAppString, dlAboutProductId=dlAboutProductId, dlDownloadForcedFlag=dlDownloadForcedFlag, dlDownloadNanoVersion=dlDownloadNanoVersion, dlReceived=dlReceived, dlAboutCurrentVer=dlAboutCurrentVer, dlDownloadTransitionBlocked=dlDownloadTransitionBlocked, dlDownloadErrorStatus=dlDownloadErrorStatus, dlAboutAppIndex=dlAboutAppIndex, dlAboutReboot=dlAboutReboot, dlTotalCdt=dlTotalCdt, dlDownloadBankSelect=dlDownloadBankSelect, dlDownloadCodeVersion=dlDownloadCodeVersion, PYSNMP_MODULE_ID=ciscoDSGDl, dlCfg=dlCfg, dlAbout=dlAbout, dlDownloadState=dlDownloadState, dlDownloadAbort=dlDownloadAbort, dlAboutEraseApp=dlAboutEraseApp, dlDownloadTftpFilename=dlDownloadTftpFilename, dlType=dlType, dlAboutBootVer=dlAboutBootVer, dlBank=dlBank, dlAboutTrackingId=dlAboutTrackingId, dlAboutChangeApp=dlAboutChangeApp, dlStatus=dlStatus, dlDownloadMicroCode=dlDownloadMicroCode, dlAboutSafeVer=dlAboutSafeVer, dlDownload=dlDownload, ciscoDSGDl=ciscoDSGDl, dlRejected=dlRejected, dlAboutAppEntry=dlAboutAppEntry, dlCommand=dlCommand)
