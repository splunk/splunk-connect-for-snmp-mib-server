#
# PySNMP MIB module HPN-ICF-E1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-E1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, IpAddress, NotificationType, Counter64, TimeTicks, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits, iso, Counter32, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "NotificationType", "Counter64", "TimeTicks", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits", "iso", "Counter32", "ModuleIdentity", "Integer32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hpnicfE1 = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28))
hpnicfE1.setRevisions(('2012-07-16 17:41', '2010-04-08 18:55', '2009-06-08 17:41', '2004-12-01 14:36',))
if mibBuilder.loadTexts: hpnicfE1.setLastUpdated('201207161741Z')
if mibBuilder.loadTexts: hpnicfE1.setOrganization('')
hpnicfe1InterfaceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1), )
if mibBuilder.loadTexts: hpnicfe1InterfaceStatusTable.setStatus('current')
hpnicfe1InterfaceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfe1InterfaceStatusEntry.setStatus('current')
hpnicfe1InterfaceInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInErrs.setStatus('current')
hpnicfe1InterfaceInRuntsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInRuntsErrs.setStatus('current')
hpnicfe1InterfaceInGiantsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInGiantsErrs.setStatus('current')
hpnicfe1InterfaceInCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInCrcErrs.setStatus('current')
hpnicfe1InterfaceInAlignErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInAlignErrs.setStatus('current')
hpnicfe1InterfaceInOverRunsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInOverRunsErrs.setStatus('current')
hpnicfe1InterfaceInDribblesErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInDribblesErrs.setStatus('current')
hpnicfe1InterfaceInAbortedSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInAbortedSeqErrs.setStatus('current')
hpnicfe1InterfaceInNoBufferErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInNoBufferErrs.setStatus('current')
hpnicfe1InterfaceInFramingErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceInFramingErrs.setStatus('current')
hpnicfe1InterfaceOutputErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceOutputErrs.setStatus('current')
hpnicfe1InterfaceOutUnderRunErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceOutUnderRunErrs.setStatus('current')
hpnicfe1InterfaceOutCollisonsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceOutCollisonsErrs.setStatus('current')
hpnicfe1InterfaceOutDeferedErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1InterfaceOutDeferedErrs.setStatus('current')
hpnicfe1Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2), )
if mibBuilder.loadTexts: hpnicfe1Table.setStatus('current')
hpnicfe1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfe1Entry.setStatus('current')
class HpnicfE1TimeSlot(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

hpnicfe1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1, 1), Bits().clone(namedValues=NamedValues(("voice", 0), ("pos", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1Type.setStatus('current')
hpnicfe1Clock = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("slave", 1), ("master", 2), ("internal", 3), ("line", 4), ("linePri", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfe1Clock.setStatus('current')
hpnicfe1FrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc4", 1), ("nocrc4", 2))).clone('crc4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfe1FrameFormat.setStatus('current')
hpnicfe1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("ami", 1), ("hdb3", 3))).clone('hdb3')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfe1LineCode.setStatus('current')
hpnicfe1PriSetTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1, 5), HpnicfE1TimeSlot()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfe1PriSetTimeSlot.setStatus('current')
hpnicfe1DChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1DChannelIndex.setStatus('current')
hpnicfe1SubScribLineChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1SubScribLineChannelIndex.setStatus('current')
hpnicfe1FcmChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1FcmChannelIndex.setStatus('current')
hpnicfe1InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 3), )
if mibBuilder.loadTexts: hpnicfe1InterfaceTable.setStatus('current')
hpnicfe1InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfe1InterfaceEntry.setStatus('current')
hpnicfe1ControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfe1ControllerIndex.setStatus('current')
hpnicfe1TimeSlotSetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 4), )
if mibBuilder.loadTexts: hpnicfe1TimeSlotSetTable.setStatus('current')
hpnicfe1TimeSlotSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfe1TimeSlotSetEntry.setStatus('current')
hpnicfe1TimeSlotSetGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfe1TimeSlotSetGroupId.setStatus('current')
hpnicfe1TimeSlotSetSignalType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unkown", 1), ("em-delay", 2), ("em-immediate", 3), ("em-wink", 4), ("fxo-ground", 5), ("fxo-loop", 6), ("fxs-ground", 7), ("fxs-loop", 8), ("r2", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfe1TimeSlotSetSignalType.setStatus('current')
hpnicfe1TimeSlotSetList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 4, 1, 3), HpnicfE1TimeSlot()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfe1TimeSlotSetList.setStatus('current')
hpnicfe1TimeSlotSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 28, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfe1TimeSlotSetRowStatus.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-E1-MIB", hpnicfe1InterfaceEntry=hpnicfe1InterfaceEntry, hpnicfe1InterfaceTable=hpnicfe1InterfaceTable, hpnicfe1InterfaceInAlignErrs=hpnicfe1InterfaceInAlignErrs, hpnicfe1TimeSlotSetSignalType=hpnicfe1TimeSlotSetSignalType, PYSNMP_MODULE_ID=hpnicfE1, hpnicfE1=hpnicfE1, hpnicfe1InterfaceInOverRunsErrs=hpnicfe1InterfaceInOverRunsErrs, hpnicfe1InterfaceStatusEntry=hpnicfe1InterfaceStatusEntry, hpnicfe1InterfaceInNoBufferErrs=hpnicfe1InterfaceInNoBufferErrs, hpnicfe1Entry=hpnicfe1Entry, hpnicfe1Clock=hpnicfe1Clock, hpnicfe1InterfaceInAbortedSeqErrs=hpnicfe1InterfaceInAbortedSeqErrs, hpnicfe1TimeSlotSetRowStatus=hpnicfe1TimeSlotSetRowStatus, hpnicfe1PriSetTimeSlot=hpnicfe1PriSetTimeSlot, hpnicfe1SubScribLineChannelIndex=hpnicfe1SubScribLineChannelIndex, hpnicfe1InterfaceOutputErrs=hpnicfe1InterfaceOutputErrs, hpnicfe1TimeSlotSetEntry=hpnicfe1TimeSlotSetEntry, hpnicfe1LineCode=hpnicfe1LineCode, hpnicfe1FrameFormat=hpnicfe1FrameFormat, hpnicfe1InterfaceInCrcErrs=hpnicfe1InterfaceInCrcErrs, HpnicfE1TimeSlot=HpnicfE1TimeSlot, hpnicfe1DChannelIndex=hpnicfe1DChannelIndex, hpnicfe1ControllerIndex=hpnicfe1ControllerIndex, hpnicfe1FcmChannelIndex=hpnicfe1FcmChannelIndex, hpnicfe1InterfaceInErrs=hpnicfe1InterfaceInErrs, hpnicfe1InterfaceOutCollisonsErrs=hpnicfe1InterfaceOutCollisonsErrs, hpnicfe1InterfaceOutDeferedErrs=hpnicfe1InterfaceOutDeferedErrs, hpnicfe1InterfaceInRuntsErrs=hpnicfe1InterfaceInRuntsErrs, hpnicfe1InterfaceInFramingErrs=hpnicfe1InterfaceInFramingErrs, hpnicfe1InterfaceInGiantsErrs=hpnicfe1InterfaceInGiantsErrs, hpnicfe1InterfaceStatusTable=hpnicfe1InterfaceStatusTable, hpnicfe1InterfaceOutUnderRunErrs=hpnicfe1InterfaceOutUnderRunErrs, hpnicfe1TimeSlotSetTable=hpnicfe1TimeSlotSetTable, hpnicfe1TimeSlotSetGroupId=hpnicfe1TimeSlotSetGroupId, hpnicfe1InterfaceInDribblesErrs=hpnicfe1InterfaceInDribblesErrs, hpnicfe1Table=hpnicfe1Table, hpnicfe1TimeSlotSetList=hpnicfe1TimeSlotSetList, hpnicfe1Type=hpnicfe1Type)
